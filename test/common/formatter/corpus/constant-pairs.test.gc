===
One Pair
===

(:hello

"world")

---

(:hello "world")

===
Three Pairs
===

(:hello

"world" :world 123
:test 456)

---

(:hello "world" :world 123 :test 456)

===
Four Pairs
===

(:hello

"world" :world 123
:test 456
:doit 789)

---

(:hello "world"
 :world 123
 :test 456
 :doit 789)

===
Function Call Pair - Inlinable
===

(:hello

"world" :world 123
:test 456
:not (println "hello world")
:doit 789)

---

(:hello "world"
 :world 123
 :test 456
 :not (println "hello world")
 :doit 789)

===
Function Call Pair - Too Long and Multiline
===

(:hello

"world" :world 123
:test 456
:not (println "hello world" "hello world" "hello world" (println "hello world hello world hello world hello world hello world hello world hello world hello world"))
:doit 789)

---

(:hello "world"
 :world 123
 :test 456
 :not
   (println "hello world"
            "hello world"
            "hello world"
            (println "hello world hello world hello world hello world hello world hello world hello world hello world"))
 :doit 789)

===
Amibiguous List
===

(:hello

"world" :world 123
:test 456
:not-paired
:doit 789)

---

(:hello "world"
 :world 123
 :test 456
 :not-paired
 :doit 789)

===
Within unrelated form
===

(new 'static
     'gif-tag64
     :nloop
     #x1
     :eop
     #x1
     :pre
     #x1
     :prim
     (new 'static 'gs-prim :prim (gs-prim-type line) :iip #x1 :abe #x1)
     :nreg
     #x4)

---

(new 'static
     'gif-tag64
     :nloop #x1
     :eop #x1
     :pre #x1
     :prim
     (new 'static 'gs-prim :prim (gs-prim-type line) :iip #x1 :abe #x1)
     :nreg #x4)

===
Quoted Symbol
===

(new 'static
     'clm-item
     :description "adjust"
     :button-symbol
     'x
     :action
     (new 'static 'clm-item-action :button #x4000 :func #f))

---

(new 'static
     'clm-item
     :description "adjust"
     :button-symbol 'x
     :action
     (new 'static 'clm-item-action :button #x4000 :func #f))

===
Special case forms
===

(define *CAMERA_MASTER-bank*
  (new 'static
       'camera-master-bank
       :onscreen-head-height
       (meters 2.65)
       :onscreen-foot-height
       (meters -0.5)
       :target-height
       (meters 2.15)
       :up-move-to-pitch-ratio-in-air 1.0
       :down-move-to-pitch-ratio-in-air 0.5
       :up-move-to-pitch-on-ground 0.9
       :down-move-to-pitch-on-ground 0.9
       :pitch-off-blend 0.5))

---

(define *CAMERA_MASTER-bank*
  (new 'static
       'camera-master-bank
       :onscreen-head-height (meters 2.65)
       :onscreen-foot-height (meters -0.5)
       :target-height (meters 2.15)
       :up-move-to-pitch-ratio-in-air 1.0
       :down-move-to-pitch-ratio-in-air 0.5
       :up-move-to-pitch-on-ground 0.9
       :down-move-to-pitch-on-ground 0.9
       :pitch-off-blend 0.5))

===
Enums
===

(define *warp-jump-mods*
  (new 'static
       'surface
       :name 'jump
       :turnv 273066.66
       :turnvv 1820444.5
       :tiltv 32768.0
       :tiltvv 131072.0
       :transv-max 65536.0
       :target-speed 65536.0
       :slip-factor 1.0
       :slide-factor 1.0
       :slope-up-factor 1.0
       :slope-down-factor 1.0
       :slope-slip-angle 1.0
       :impact-fric 1.0
       :bend-factor 1.0
       :bend-speed 1.0
       :alignv 1.0
       :slope-up-traction 1.0
       :align-speed 1.0
       :mode 'air
       :flags
       (surface-flags always-rotate-toward-transv)))

---

(define *warp-jump-mods*
  (new 'static
       'surface
       :name 'jump
       :turnv 273066.66
       :turnvv 1820444.5
       :tiltv 32768.0
       :tiltvv 131072.0
       :transv-max 65536.0
       :target-speed 65536.0
       :slip-factor 1.0
       :slide-factor 1.0
       :slope-up-factor 1.0
       :slope-down-factor 1.0
       :slope-slip-angle 1.0
       :impact-fric 1.0
       :bend-factor 1.0
       :bend-speed 1.0
       :alignv 1.0
       :slope-up-traction 1.0
       :align-speed 1.0
       :mode 'air
       :flags (surface-flags always-rotate-toward-transv)))