(defun test-vector-abs ()
  (let ((vector-0 (new 'stack 'vector))
        (vector-1 (new 'stack 'vector)))
		; TODO - a lib function get generate a vector would be useful
		; TODO - it's really annoying getting a compiler error for passing `1` instead of `1.0`, quality of life improvement perhaps?
    (set! (-> vector-0 x) 1.0)
    (set! (-> vector-0 y) -1.5)
    (set! (-> vector-0 z) 0.0)
    (set! (-> vector-0 w) 4.0)

		(rlet ((vf1 :class vf :reset-here #t)
           (vf2 :class vf :reset-here #t))
			(.lvf vf1 vector-0)
			(.lvf vf2 vector-1)

			(.abs.vf vf2 vf1 #b1111)

			(.svf vector-1 vf2))

    ; (1, 1.5, 0, 4)
    (format #t "(~f, ~f, ~f, ~f)~%" (-> vector-1 x) (-> vector-1 y) (-> vector-1 z) (-> vector-1 w))))

(test-vector-abs)
