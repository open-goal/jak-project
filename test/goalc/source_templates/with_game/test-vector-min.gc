(defun test-vector-max ()
  (let ((vector-0 (new 'stack 'vector))
        (vector-1 (new 'stack 'vector))
				(vector-2 (new 'stack 'vector)))
		; TODO - a lib function get generate a vector would be useful
    (set! (-> vector-0 x) 1.0)
    (set! (-> vector-0 y) 2.4957)
    (set! (-> vector-0 z) 2.4957)
    (set! (-> vector-0 w) -100000.0)
    
    (set! (-> vector-1 x) 1.0)
    (set! (-> vector-1 y) 2.4957)
    (set! (-> vector-1 z) -2.4957)
    (set! (-> vector-1 w) 0.0)

		(rlet ((vf1 :class vf :reset-here #t)
           (vf2 :class vf :reset-here #t)
					 (vf3 :class vf :reset-here #t))
			(.lvf vf1 vector-0)
			(.lvf vf2 vector-1)
			(.lvf vf3 vector-2)

			(.min.vf vf3 vf2 vf1 #b1111)

			(.svf vector-2 vf3))

    ; (1, 2.49572, -2.49572, -100000.0000)
    (format #t "(~f, ~f, ~f, ~f)~%" (-> vector-2 x) (-> vector-2 y) (-> vector-2 z) (-> vector-2 w))))

(test-vector-max)
