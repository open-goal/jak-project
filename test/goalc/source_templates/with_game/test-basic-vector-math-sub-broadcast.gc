(defun test-vector-sub-x-broadcast ()
  (let ((vector-0 (new 'stack 'vector))
        (vector-1 (new 'stack 'vector))
        (vector-2 (new 'stack 'vector)))

    (set-vector! vector-0 -1.0 0.0 1.0 2.0)
    (set-vector! vector-1 10.5 20.5 30.5 40.05)

    (rlet ((vf1 :class vf :reset-here #t)
           (vf2 :class vf :reset-here #t)
           (vf3 :class vf :reset-here #t))
      (.lvf vf1 vector-0)
      (.lvf vf2 vector-1)
      (.lvf vf3 vector-2)

      (.subx.vf vf3 vf2 vf1)

      (.svf vector-2 vf3))

    ; (11.5, 21.5, 31.5, 41.05)
    (format #t "(~f, ~f, ~f, ~f)~%" (-> vector-2 x) (-> vector-2 y) (-> vector-2 z) (-> vector-2 w))))

(test-vector-sub-x-broadcast)
