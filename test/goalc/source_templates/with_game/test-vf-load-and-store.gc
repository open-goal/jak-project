(defun vf-test-load-and-store ()
  (let ((vector-0 (new 'stack 'vector))
        (vector-1 (new 'stack 'vector4s-3)))
    (set! (-> vector-0 x) 1.0)
    (set! (-> vector-0 y) 2.0)
    (set! (-> vector-0 z) 3.0)
    (set! (-> vector-0 w) 4.0)
    
    (rlet ((vf1 :class vf  :reset-here #t)
           (vf2 :class vf :reg xmm1 :reset-here #t))
          (.lvf vf1 vector-0)
          (.nop.vf)
          (.mov vf2 vf1)
          (.nop.vf)
          (.svf (-> vector-1 vector 0) vf2)
          )
    
    (-> vector-1 vector 0 y)
    )
  )

(format #t "~f~%" (vf-test-load-and-store))
0