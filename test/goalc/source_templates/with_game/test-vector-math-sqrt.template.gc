(defun test-vector-sqrt ()
  (let ((vector-in-1 (new 'stack 'vector))
        (vector-out (new 'stack 'vector)))

    (set-vector! vector-in-1 {{ v1x }} {{ v1y }} {{ v1z }} {{ v1w }})
    (set-vector! vector-out {{ destx }} {{ desty }} {{ destz }} {{ destw }})

    (rlet ((vf1 :class vf :reset-here #t)
           (vf2 :class vf :reset-here #t))

      (.lvf vf1 vector-in-1)
      (.lvf vf2 vector-out)
      
      ({{ operation }} vf2 vf1 :ftf #b{{ ftf }})
      (.wait.vf)

      (.svf vector-out vf2))

    (format #t "~f~%" (-> vector-out x))))

(test-vector-sqrt)
