{
  "dgos": [
    "CGO/KERNEL.CGO",
    "CGO/GAME.CGO",
    "DGO/HALFPIPE.DGO",
    "DGO/PRECC.DGO",
    "DGO/LMECH.DGO",
    "DGO/WWD.DGO",
    "DGO/MIA.DGO",
    "DGO/MIC.DGO",
    "DGO/WCA.DGO",
    "DGO/FRSTA.DGO",
    "DGO/TEMA.DGO",
    "DGO/MINED.DGO",
    "DGO/SEA.DGO",
    "DGO/WASALL.DGO",
    "DGO/DESRALLY.DGO",
    "DGO/DESHOVER.DGO",
    "DGO/NSA.DGO",
    "DGO/NSB.DGO",
    "DGO/LWASSIG.DGO",
    "DGO/WSD.DGO",
    "DGO/DESG.DGO",
    "DGO/DESD.DGO",
    "DGO/DESF.DGO",
    "DGO/DST.DGO",
    "DGO/DESCHASE.DGO",
    "DGO/DESRACE1.DGO",
    "DGO/TEMD.DGO",
    "DGO/TEMX.DGO",
    "DGO/DESBATTL.DGO",
    "DGO/TOWERA.DGO",
    "DGO/TOWERC.DGO",
    "DGO/TOWB.DGO",
    "DGO/TOWERCST.DGO",
    "DGO/FRSTB.DGO",
    "DGO/FRSTX.DGO",
    "DGO/LFORM.DGO",
    "DGO/LFORP.DGO",
    "DGO/VOCA.DGO",
    "DGO/VOCX.DGO",
    "DGO/CWI.DGO",
    "DGO/WASCHASE.DGO",
    "DGO/STA.DGO",
    "DGO/STAA.DGO",
    "DGO/LFACCAR.DGO",
    "DGO/WASSTADA.DGO",
    "DGO/WASSTADB.DGO",
    "DGO/WASSTADC.DGO",
    "DGO/WCB.DGO",
    "DGO/HGA.DGO",
    "DGO/HGB.DGO",
    "DGO/WASPGAME.DGO",
    "DGO/WASLEAPR.DGO",
    "DGO/DESLIZ.DGO",
    "DGO/WASPALA.DGO",
    "DGO/DESW.DGO",
    "DGO/DESBOSS1.DGO",
    "DGO/DESBOSS2.DGO",
    "DGO/MINEE.DGO",
    "DGO/LBBRING1.DGO",
    "DGO/LBBRING2.DGO",
    "DGO/LBBRING3.DGO",
    "DGO/LBBRING4.DGO",
    "DGO/LBBRING5.DGO",
    "DGO/LBBRING6.DGO",
    "DGO/LBBSDRP1.DGO",
    "DGO/LBBSDRP2.DGO",
    "DGO/LBBSDRP3.DGO",
    "DGO/LBBSPID.DGO",
    "DGO/LBBSPIRT.DGO",
    "DGO/LBBSPRT2.DGO",
    "DGO/LBBSPRT3.DGO",
    "DGO/LBBTCHA1.DGO",
    "DGO/LBBTCHA2.DGO",
    "DGO/LBBTCHA3.DGO",
    "DGO/LWASBBV.DGO",
    "DGO/LNSTOBB.DGO",
    "DGO/FACC.DGO",
    "DGO/FACD.DGO",
    "DGO/FACTORYA.DGO",
    "DGO/LFACRM1.DGO",
    "DGO/LFACRM2.DGO",
    "DGO/DESOASIS.DGO",
    "DGO/LCTYDEST.DGO",
    "DGO/COMBX.DGO",
    "DGO/COMBA.DGO",
    "DGO/LFACTORY.DGO",
    "DGO/RAILX.DGO",
    "DGO/FACB.DGO",
    "DGO/TITLE.DGO",
    "DGO/DESRESC.DGO",
    "DGO/CTYPESB.DGO",
    "DGO/CTYPESC.DGO",
    "DGO/LCTYHIJK.DGO",
    "DGO/CIA.DGO",
    "DGO/CIB.DGO",
    "DGO/LCTYPATK.DGO",
    "DGO/CPO.DGO",
    "DGO/CTA.DGO",
    "DGO/CTB.DGO",
    "DGO/CTC.DGO",
    "DGO/INTROCST.DGO",
    "DGO/IPF.DGO",
    "DGO/CFB.DGO",
    "DGO/FREEHQ.DGO",
    "DGO/LJINX.DGO",
    "DGO/ONINTENT.DGO",
    "DGO/LCTYSNPR.DGO",
    "DGO/LPATK.DGO",
    "DGO/HHG.DGO",
    "DGO/CGB.DGO",
    "DGO/RBCT.DGO",
    "DGO/GGA.DGO",
    "DGO/VIN.DGO",
    "DGO/LCTYBLOW.DGO",
    "DGO/LCTYPROT.DGO",
    "DGO/LCTYPALT.DGO",
    "DGO/PRECA.DGO",
    "DGO/PRECD.DGO",
    "DGO/LFACCITY.DGO"
  ],

  "skip_compile_files": [
    "types-h", // weird array of types.
    "hfrag-h", // weird duplicate type
    "joint",
    "subdivide",
    "shadow-cpu-h",
    "foreground",
    "tie-methods",
    "scene-actor" // top level lambda that defines a type
  ],

  "skip_compile_functions": [
    // gcommon
    "qmem-clear!",
    "(method 9 inline-array-class-uint32)",
    "(method 9 inline-array-class-uint64)",
    "breakpoint-range-set!",
    "valid?",
    // gkernel
    "(method 10 process)",
    "(method 14 dead-pool)",
    // gstate
    "enter-state", // stack pointer asm

    // math
    "logf",
    "log2f",
    "cube-root",
    "lerp-scale",
    "rand-vu-init",
    "rand-vu",
    "rand-vu-nostep",
    // matrix
    "matrix-axis-sin-cos-vu!",
    "matrix-axis-sin-cos!",
    "matrix-3x3-normalize!",
    // geometry
    "closest-pt-in-triangle",
    "circle-circle-xz-intersect",
    "calculate-basis-functions-vector!",
    "curve-evaluate!",
    // timer
    "(method 9 clock)",
    // pad
    "service-cpads",
    // connect
    "(method 0 engine)",
    "(method 0 engine-pers)",
    // math-camera
    "update-math-camera",
    "transform-point-vector!",
    "transform-point-qword!",
    "transform-point-vector-scale!",
    // dma
    "dma-buffer-add-vu-function",
    // sky (multiple definition)
    "(method 3 sky-vertex)",
    // texture
    "(method 9 texture-page-dir)", "set-dirty-mask!",
    "(method 3 generic-tie-interp-point)",
    // cache stuff
    "invalidate-cache-line",
    // multiple def
    "(method 3 hfrag-poly4)",
    "(method 3 hfrag-poly9)",
    "(method 3 hfrag-poly25)",
    "(method 3 hfrag-mip-packet)",
    // transformq
    "(method 17 trsqv)",
    // bsp
    "bsp-camera-asm",
    "build-masks",
    // process-drawable
    "(method 19 process-drawable)",
    "(method 10 joint-control)",
    // game-save
    "(method 3 game-save)",
    // target-handler
    "target-send-attack",
    // find-nearest
    "find-nearest-focusable",
    // sprite
    "(method 3 sprite-aux-list)", // appears twice.
    // sprite-distort
    "sprite-draw-distorters", // asm
    // debug
    "bugfix?",
    // camera-states
    "cam-los-collide",
    // camera
    "v-slrp3!",
    "v-slrp2!",
    "slave-set-rotation!",
    // bones
    "bones-mtx-calc-execute",
    // generic
    "upload-vu0-program",
    "generic-upload-vu0",
    "generic-warp-source",
    // font
    "draw-string",
    // decomp
    "(method 16 level)",
    "unpack-comp-lzo",
    // shrubbery
    "init-dma-test",
    "draw-prototype-inline-array-shrub",
    "draw-inline-array-instance-shrub",
    // tfrag
    "tfrag-scissor-end-buffer",
    "tfrag-scissor-init-buffer",
    "tfrag-scissor-vu1-init-buf",
    "(method 9 drawable-tree-instance-tie)",
    // hud
    "(method 10 hud-sprite)",
    // level
    "(method 29 level)",
    "level-update-after-load",
    "(method 9 level)",
    "(method 11 level)",
    // drawable
    "calc-shadow-masks",
    "calc-realtime-lights",
    "real-main-draw-hook",
    "display-sync",
    "dma-add-process-drawable",
    "vis-cull",
    "vis-cull-debug",
    "foreground-engine-execute",
    // idle-control
    "(method 10 idle-control)", // changes pp
    // aligner
    "(method 9 align-control)",
    // gun-red-shot
    "gun-fire-red-3",
    // collide-mesh
    "(method 9 collide-mesh-cache)",
    "(method 10 collide-mesh)",
    "(method 11 collide-mesh)",
    "(method 13 collide-mesh)",
    // collide-shape
    "(method 18 collide-shape-prim-group)",
    "(method 19 collide-shape-prim)",
    "(method 36 collide-shape)",
    "(method 12 collide-shape-prim-group)",
    "(method 13 collide-shape-prim)",
    "collide-shape-draw-debug-marks",
    // spatial-hash
    "(method 11 grid-hash)",
    "(method 15 sphere-hash)",
    // collide-cache
    "test-closest-pt-in-triangle",
    // default-menu
    "all-texture-tweak-adjust",
    "debug-menu-make-shader-menu",
    // sparticle-launcher
    "sp-relaunch-particle-3d",
    "execute-part-engine",
    "sparticle-respawn-heights",
    "sparticle-respawn-timer",
    "sparticle-mode-animate",
    "sparticle-mode-animate",
    "sparticle-texture-animate",
    "sparticle-texture-day-night",
    "sparticle-motion-blur", // clipping
    "birth-func-texture-group",
    // script
    "command-get-process",
    // mood
    "update-mood-direction",
    // eyes
    "debug-eyes",
    // nav-mesh
    "(method 36 nav-mesh)",
    "(method 45 nav-mesh)",
    "(method 46 nav-mesh)",
    // minimap
    "(method 20 minimap)",
    "(method 18 minimap)",
    "(method 16 minimap)",
    // merc-blend-shape
    "setup-blerc-chains",
    // prebot
    "prebot-spawn-shockwave",
    // saberfish
    "(method 238 saberfish)",
    // sew-laser-turret
    "(method 161 sew-laser-turret)",
    // path
    "(method 28 path-control)",
    // squad-control
    "(method 17 squad-control)",
    // pilot-states
    "target-pilot-trans",
    // des-beast
    "(method 167 des-beast)",
    // hover-nav-control
    "(method 30 hover-nav-control)",
    // wasstadc-obs
    "(method 39 wstd-fight-plat-box)",
    "wasstadc-tl", // has a type definition
    // wascity-turret
    "(method 62 wascity-turret)",
    // terraformer-setup
    "launch-mine",
    // ocean
    "test-seq-read",
    "test-worst-read",
    "test-seq-write",
    "test-worst-write",
    "test-to-spr",
    "test-from-spr",
    "test-to-from-spr",
    // ocean-texture
    "check-normals",
    // wasdef-manager
    "(method 30 task-manager-wascity-defend)",
    "maker-init-by-other",
    // des-bush
    "(method 12 desert-chase-ring)",
    // factoryc-obs
    "(method 27 fac-robopod)",
    // sew-laser-turret
    "check-enemy",
    // oasis-defense
    "(method 34 task-manager-desert-oasis-defense)", // register allocator failure
    // fac-robotank-turret
    "draw-2d-hud",
    // fac-robotank
    "(method 7 fac-robotank)",
    // nav-graph
    "(method 14 nav-graph)",
    // wlander-male
    "(method 125 wlander)",
    // neo-satellite
    "neo-sat-init-by-other", // break form
    // desert-passenger
    "(method 25 task-manager-desert-rescue)",
    // guard
    "(method 266 crimson-guard)",
    "(method 282 crimson-guard)",
    // roboguard-city
    "(method 160 roboguard-city)", // register allocator failure
    // desert-chase
    "(method 34 desert-chase-ambush-manager)",
    // bombbot
    "(method 196 bombbot-player)",
    // cty-sniper-turret
    "citysniper-draw-2d-hud",
    // gun-dummy
    "(method 35 gun-dummy-rc-one-eye)",
    // blow-tower-obs
    "(method 47 tower-flyer)",
    // blow-tower-obs2
    "grunt-part-callback",
    // cty-blow-tower
    "(method 47 bt-hellcat)",
    "(method 19 bt-gun-manager)",
    // asm
    "close-sky-buffer",
    // protect-gunship
    "find-reposition-pt"
  ],

  "skip_compile_states": {
    "(target-flut-kanga-catch target)": ["post", "code"], // setting pp
    "(hostile kg-hopper)": ["trans"], // adds b! but the corresponding label is missing
    "(active task-manager-race)": ["code"], // adds b! but the corresponding label is missing
    "(active task-manager-forest-plants)": ["code"], // bad handle->process
    "(open wstd-fight-plat-box)": ["trans"], // bad handle->process
    "(setup wascity-turret)": ["code"], // bad handle->process
    "(hostile spydroid)": ["trans"], // reassigning process to a conditional
    "(explode krimson-wall-break)": ["code"], // art-joint-anim cast
    "(active desert-chase-ambush-manager)": ["code"],
    "(riding-idle-ship bt-grunt)": ["code"] // int->float attempted on a function
  }
}
