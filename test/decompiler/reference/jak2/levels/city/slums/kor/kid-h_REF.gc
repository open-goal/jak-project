;;-*-Lisp-*-
(in-package goal)

;; definition of type kid
(deftype kid (bot)
  ((travel-anim-interp  float       :offset-assert 992)
   (arrest-attempt-time time-frame  :offset-assert 1000)
   (arrestor-handle     handle      :offset-assert 1008)
   )
  :heap-base #x380
  :method-count-assert 235
  :size-assert         #x3f8
  :flag-assert         #xeb038003f8
  (:methods
    (traveling () _type_ :state 225)
    (traveling-blocked () _type_ :state 226)
    (waiting-with-kor () _type_ :state 227)
    (waiting-idle () _type_ :state 228)
    (waiting-turn () _type_ :state 229)
    (scared-idle () _type_ :state 230)
    (arrested () _type_ :state 231)
    (kid-method-232 (_type_) none 232)
    (kid-method-233 (_type_) none 233)
    (kid-method-234 (_type_) none 234)
    )
  )

;; definition for method 3 of type kid
(defmethod inspect kid ((this kid))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (let ((t9-0 (method-of-type bot inspect)))
    (t9-0 this)
    )
  (format #t "~2Ttravel-anim-interp: ~f~%" (-> this travel-anim-interp))
  (format #t "~2Tarrest-attempt-time: ~D~%" (-> this arrest-attempt-time))
  (format #t "~2Tarrestor-handle: ~D~%" (-> this arrestor-handle))
  (label cfg-4)
  this
  )

;; failed to figure out what this is:
(defskelgroup skel-kid kid kid-lod0-jg kid-idle0-ja
              ((kid-lod0-mg (meters 999999)))
              :bounds (static-spherem 0 0 0 2)
              :shadow kid-shadow-mg
              :origin-joint-index 13
              )

;; definition of type kidt-wait-spot
(deftype kidt-wait-spot (ai-task)
  ((check-done   (function kidt-wait-spot kid symbol)   :offset  32)
   (which-spot   int8                                   :offset  36)
   (num-spots    uint8                                  :offset  37)
   (spot-indexes uint8                                6 :offset  38)
   )
  :method-count-assert 12
  :size-assert         #x30
  :flag-assert         #xc00000030
  )

;; definition for method 3 of type kidt-wait-spot
(defmethod inspect kidt-wait-spot ((this kidt-wait-spot))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this (-> this type))
  (format #t "~1Tnext: ~A~%" (-> this next))
  (format #t "~1Tprev: ~A~%" (-> this prev))
  (format #t "~1Tpool: ~A~%" (-> this pool))
  (format #t "~1Tunique-id: ~D~%" (-> this unique-id))
  (format #t "~1Tbytes[16] @ #x~X~%" (-> this bytes))
  (format #t "~1Tcheck-done: ~A~%" (-> this check-done))
  (format #t "~1Twhich-spot: ~D~%" (-> this which-spot))
  (format #t "~1Tnum-spots: ~D~%" (-> this num-spots))
  (format #t "~1Tspot-indexes[6] @ #x~X~%" (-> this spot-indexes))
  (label cfg-4)
  this
  )

;; failed to figure out what this is:
0
