;;-*-Lisp-*-
(in-package goal)

;; definition of type city-race-ring-info
(deftype city-race-ring-info (structure)
  ((pos   vector :inline :offset-assert   0)
   (angle float          :offset         12)
   (boost float          :offset-assert  16)
   (dist  float          :offset-assert  20)
   )
  :method-count-assert 10
  :size-assert         #x18
  :flag-assert         #xa00000018
  (:methods
    (city-race-ring-info-method-9 (_type_ symbol) none 9)
    )
  )

;; definition for method 3 of type city-race-ring-info
(defmethod inspect city-race-ring-info ((this city-race-ring-info))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this 'city-race-ring-info)
  (format #t "~1Tpos: #<vector @ #x~X>~%" (-> this pos))
  (format #t "~1Tangle: ~f~%" (-> this pos w))
  (format #t "~1Tboost: ~f~%" (-> this boost))
  (format #t "~1Tdist: ~f~%" (-> this dist))
  (label cfg-4)
  this
  )

;; definition of type city-ambush-spot
(deftype city-ambush-spot (structure)
  ((pos      vector :inline :offset-assert   0)
   (obj-type uint8          :offset-assert  16)
   )
  :method-count-assert 9
  :size-assert         #x11
  :flag-assert         #x900000011
  )

;; definition for method 3 of type city-ambush-spot
(defmethod inspect city-ambush-spot ((this city-ambush-spot))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this 'city-ambush-spot)
  (format #t "~1Tpos: #<vector @ #x~X>~%" (-> this pos))
  (format #t "~1Tobj-type: ~D~%" (-> this obj-type))
  (label cfg-4)
  this
  )

;; definition of type city-ambush-info
(deftype city-ambush-info (structure)
  ((count int16                            :offset-assert   0)
   (array (inline-array city-ambush-spot)  :offset-assert   4)
   )
  :method-count-assert 10
  :size-assert         #x8
  :flag-assert         #xa00000008
  (:methods
    (city-ambush-info-method-9 (_type_ traffic-object-spawn-params) none 9)
    )
  )

;; definition for method 3 of type city-ambush-info
(defmethod inspect city-ambush-info ((this city-ambush-info))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this 'city-ambush-info)
  (format #t "~1Tcount: ~D~%" (-> this count))
  (format #t "~1Tarray: #x~X~%" (-> this array))
  (label cfg-4)
  this
  )

;; failed to figure out what this is:
0
