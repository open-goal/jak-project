;;-*-Lisp-*-
(in-package goal)

;; definition of type bombbot-node
(deftype bombbot-node (structure)
  ((position    vector :inline :offset-assert   0)
   (nav-mesh-id uint32         :offset-assert  16)
   (pos-x       float          :offset          0)
   (pos-y       float          :offset          4)
   (pos-z       float          :offset          8)
   )
  :method-count-assert 9
  :size-assert         #x14
  :flag-assert         #x900000014
  )

;; definition for method 3 of type bombbot-node
(defmethod inspect bombbot-node ((obj bombbot-node))
  (when (not obj)
    (set! obj obj)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" obj 'bombbot-node)
  (format #t "~1Tposition: ~`vector`P~%" (-> obj position))
  (format #t "~1Tnav-mesh-id: ~D~%" (-> obj nav-mesh-id))
  (format #t "~1Tpos-x: ~f~%" (-> obj position x))
  (format #t "~1Tpos-y: ~f~%" (-> obj position y))
  (format #t "~1Tpos-z: ~f~%" (-> obj position z))
  (label cfg-4)
  obj
  )

;; definition of type bombbot-path
(deftype bombbot-path (structure)
  ((node-count uint16                       :offset-assert   0)
   (node       (inline-array bombbot-node)  :offset-assert   4)
   )
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )

;; definition for method 3 of type bombbot-path
(defmethod inspect bombbot-path ((obj bombbot-path))
  (when (not obj)
    (set! obj obj)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" obj 'bombbot-path)
  (format #t "~1Tnode-count: ~D~%" (-> obj node-count))
  (format #t "~1Tnode: #x~X~%" (-> obj node))
  (label cfg-4)
  obj
  )

;; failed to figure out what this is:
0
