;;-*-Lisp-*-
(in-package goal)

;; definition of type crocadog-escort
(deftype crocadog-escort (bot)
  ((travel-anim-interp  float)
   (anim-speed          float)
   (kid-handle          handle)
   (pad-ki1jn23ikuj1n2  uint32  4)
   (local-seat-pos      vector  :inline)
   (exit-vehicle-dest   vector  :inline :overlay-at event-param-point)
   )
  (:state-methods
    traveling
    traveling-blocked
    waiting-idle
    waiting-turn
    move-to-vehicle
    board-vehicle
    ride-vehicle
    exit-vehicle
    knocked-off-vehicle
    )
  (:methods
    (want-exit-vehicle? (_type_ vector) symbol)
    (go-idle-or-move (_type_) none)
    (go-waiting-turn (_type_) none)
    (check-vehicle-exit (_type_) none)
    (play-walk-anim (_type_) none)
    )
  )

;; definition for method 3 of type crocadog-escort
(defmethod inspect ((this crocadog-escort))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (let ((t9-0 (method-of-type bot inspect)))
    (t9-0 this)
    )
  (format #t "~2Ttravel-anim-interp: ~f~%" (-> this travel-anim-interp))
  (format #t "~2Tanim-speed: ~f~%" (-> this anim-speed))
  (format #t "~2Tkid-handle: ~D~%" (-> this kid-handle))
  (format #t "~2Tvehicle-handle: ~D~%" (-> this vehicle-handle))
  (format #t "~2Tlocal-seat-pos: #<vector @ #x~X>~%" (-> this local-seat-pos))
  (format #t "~2Texit-vehicle-dest: ~`vector`P~%" (-> this exit-vehicle-dest))
  (label cfg-4)
  this
  )

;; failed to figure out what this is:
(defskelgroup skel-crocadog-escort crocadog-escort crocadog-escort-lod0-jg crocadog-escort-idle-pant-ja
              ((crocadog-escort-lod0-mg (meters 999999)))
              :bounds (static-spherem 0 0 0 2)
              :shadow crocadog-escort-shadow-mg
              :origin-joint-index 20
              )

;; definition of type crocesct-wait-spot
(deftype crocesct-wait-spot (ai-task)
  ((check-done    (function crocesct-wait-spot crocadog-escort symbol)    :overlay-at (-> bytes 0))
   (which-spot    int8                                                    :overlay-at (-> bytes 4))
   (num-spots     uint8                                                   :overlay-at (-> bytes 5))
   (spot-indexes  uint8                                                 6 :overlay-at (-> bytes 6))
   )
  )

;; definition for method 3 of type crocesct-wait-spot
(defmethod inspect ((this crocesct-wait-spot))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this (-> this type))
  (format #t "~1Tnext: ~A~%" (-> this next))
  (format #t "~1Tprev: ~A~%" (-> this prev))
  (format #t "~1Tpool: ~A~%" (-> this pool))
  (format #t "~1Tunique-id: ~D~%" (-> this unique-id))
  (format #t "~1Tbytes[16] @ #x~X~%" (-> this bytes))
  (format #t "~1Tcheck-done: ~A~%" (-> this check-done))
  (format #t "~1Twhich-spot: ~D~%" (-> this which-spot))
  (format #t "~1Tnum-spots: ~D~%" (-> this num-spots))
  (format #t "~1Tspot-indexes[6] @ #x~X~%" (-> this spot-indexes))
  (label cfg-4)
  this
  )

;; failed to figure out what this is:
0
