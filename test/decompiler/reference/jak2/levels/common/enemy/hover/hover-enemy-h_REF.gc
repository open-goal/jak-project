;;-*-Lisp-*-
(in-package goal)

;; definition of type hover-enemy-info
(deftype hover-enemy-info (structure)
  ((fly-forward-anim    int32  :offset-assert   0)
   (fly-backward-anim   int32  :offset-assert   4)
   (fly-left-anim       int32  :offset-assert   8)
   (fly-right-anim      int32  :offset-assert  12)
   (shoot-anim          int32  :offset-assert  16)
   (main-joint          int32  :offset-assert  20)
   (gun-base            int32  :offset-assert  24)
   (engine-left         int32  :offset-assert  28)
   (engine-right        int32  :offset-assert  32)
   (thrust-rotate-left  float  :offset-assert  36)
   (thrust-rotate-right float  :offset-assert  40)
   )
  :method-count-assert 9
  :size-assert         #x2c
  :flag-assert         #x90000002c
  )

;; definition for method 3 of type hover-enemy-info
(defmethod inspect hover-enemy-info ((obj hover-enemy-info))
  (when (not obj)
    (set! obj obj)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" obj 'hover-enemy-info)
  (format #t "~1Tfly-forward-anim: ~D~%" (-> obj fly-forward-anim))
  (format #t "~1Tfly-backward-anim: ~D~%" (-> obj fly-backward-anim))
  (format #t "~1Tfly-left-anim: ~D~%" (-> obj fly-left-anim))
  (format #t "~1Tfly-right-anim: ~D~%" (-> obj fly-right-anim))
  (format #t "~1Tshoot-anim: ~D~%" (-> obj shoot-anim))
  (format #t "~1Tmain-joint: ~D~%" (-> obj main-joint))
  (format #t "~1Tgun-base: ~D~%" (-> obj gun-base))
  (format #t "~1Tengine-left: ~D~%" (-> obj engine-left))
  (format #t "~1Tengine-right: ~D~%" (-> obj engine-right))
  (format #t "~1Tthrust-rotate-left: ~f~%" (-> obj thrust-rotate-left))
  (format #t "~1Tthrust-rotate-right: ~f~%" (-> obj thrust-rotate-right))
  (label cfg-4)
  obj
  )

;; definition of type hover-enemy
(deftype hover-enemy (enemy)
  ((hover                      hover-nav-control         :offset-assert 532)
   (hover-info                 hover-enemy-info          :offset-assert 536)
   (formation-entity           entity                    :offset-assert 540)
   (fly-anim-speed             float                     :offset-assert 544)
   (restart-fly-anims          symbol                    :offset-assert 548)
   (main-joint-acc             vector            :inline :offset-assert 560)
   (main-joint-vel             vector            :inline :offset-assert 576)
   (main-joint-pos             vector            :inline :offset-assert 592)
   (thrust                     float             2       :offset-assert 608)
   (rotation-vec               vector            :inline :offset-assert 624)
   (dest-pos                   vector            :inline :offset-assert 640)
   (offset                     vector            :inline :offset-assert 656)
   (surface-normal             vector            :inline :offset-assert 672)
   (local-dir                  vector            :inline :offset-assert 688)
   (scale                      float                     :offset-assert 704)
   (scale-timer                uint64                    :offset-assert 712)
   (hit-surface?               symbol                    :offset-assert 720)
   (knocked-start-level        float                     :offset-assert 724)
   (knocked-fall-dist          float                     :offset-assert 728)
   (flying-death-anim          int32                     :offset-assert 732)
   (flying-death-transv        vector            :inline :offset-assert 736)
   (flying-death-engine        int32                     :offset-assert 752)
   (flying-death-thrust-rotate float                     :offset-assert 756)
   (flying-death-spin          float                     :offset-assert 760)
   (flying-death-spin-dest     float                     :offset-assert 764)
   (flying-death-spin-axis     vector            :inline :offset-assert 768)
   )
  :heap-base #x290
  :method-count-assert 156
  :size-assert         #x310
  :flag-assert         #x9c02900310
  (:methods
    (knocked-recover () _type_ :state 137)
    (flying-death () _type_ :state 138)
    (flying-death-explode () _type_ :state 139)
    (hover-enemy-method-140 (_type_ symbol) none 140)
    (hover-enemy-method-141 (_type_ float) none 141)
    (hover-enemy-method-142 (_type_) none 142)
    (hover-enemy-method-143 (_type_ int float) none 143)
    (hover-enemy-method-144 (_type_) none 144)
    (hover-enemy-method-145 (_type_ int float int int) none 145)
    (hover-enemy-method-146 (_type_) none 146)
    (hover-enemy-method-147 (_type_) none 147)
    (hover-enemy-method-148 (_type_) none 148)
    (hover-enemy-method-149 (_type_) none 149)
    (hover-enemy-method-150 (_type_) enemy-info 150)
    (hover-enemy-method-151 (_type_) hover-enemy-info 151)
    (hover-enemy-method-152 (_type_) hover-nav-params 152)
    (hover-enemy-method-153 (_type_) none 153)
    (hover-enemy-method-154 (_type_) none 154)
    (hover-enemy-method-155 (_type_) none 155)
    )
  )

;; definition for method 3 of type hover-enemy
(defmethod inspect hover-enemy ((obj hover-enemy))
  (when (not obj)
    (set! obj obj)
    (goto cfg-4)
    )
  (let ((t9-0 (method-of-type enemy inspect)))
    (t9-0 obj)
    )
  (format #t "~2Thover: ~A~%" (-> obj hover))
  (format #t "~2Thover-info: #<hover-enemy-info @ #x~X>~%" (-> obj hover-info))
  (format #t "~2Tformation-entity: ~A~%" (-> obj formation-entity))
  (format #t "~2Tfly-anim-speed: ~f~%" (-> obj fly-anim-speed))
  (format #t "~2Trestart-fly-anims: ~A~%" (-> obj restart-fly-anims))
  (format #t "~2Tmain-joint-acc: #<vector @ #x~X>~%" (-> obj main-joint-acc))
  (format #t "~2Tmain-joint-vel: #<vector @ #x~X>~%" (-> obj main-joint-vel))
  (format #t "~2Tmain-joint-pos: #<vector @ #x~X>~%" (-> obj main-joint-pos))
  (format #t "~2Tthrust[2] @ #x~X~%" (-> obj thrust))
  (format #t "~2Trotation-vec: #<vector @ #x~X>~%" (-> obj rotation-vec))
  (format #t "~2Tdest-pos: #<vector @ #x~X>~%" (-> obj dest-pos))
  (format #t "~2Toffset: #<vector @ #x~X>~%" (-> obj offset))
  (format #t "~2Tsurface-normal: #<vector @ #x~X>~%" (-> obj surface-normal))
  (format #t "~2Tlocal-dir: #<vector @ #x~X>~%" (-> obj local-dir))
  (format #t "~2Tscale: ~f~%" (-> obj scale))
  (format #t "~2Tscale-timer: ~D~%" (-> obj scale-timer))
  (format #t "~2Thit-surface?: ~A~%" (-> obj hit-surface?))
  (format #t "~2Tknocked-start-level: ~f~%" (-> obj knocked-start-level))
  (format #t "~2Tknocked-fall-dist: ~f~%" (-> obj knocked-fall-dist))
  (format #t "~2Tflying-death-anim: ~D~%" (-> obj flying-death-anim))
  (format #t "~2Tflying-death-transv: #<vector @ #x~X>~%" (-> obj flying-death-transv))
  (format #t "~2Tflying-death-engine: ~D~%" (-> obj flying-death-engine))
  (format #t "~2Tflying-death-thrust-rotate: ~f~%" (-> obj flying-death-thrust-rotate))
  (format #t "~2Tflying-death-spin: ~f~%" (-> obj flying-death-spin))
  (format #t "~2Tflying-death-spin-dest: ~f~%" (-> obj flying-death-spin-dest))
  (format #t "~2Tflying-death-spin-axis: #<vector @ #x~X>~%" (-> obj flying-death-spin-axis))
  (label cfg-4)
  obj
  )

;; failed to figure out what this is:
0
