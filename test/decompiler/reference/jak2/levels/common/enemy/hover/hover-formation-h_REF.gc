;;-*-Lisp-*-
(in-package goal)

;; definition of type form-search-info
(deftype form-search-info (structure)
  ((form            uint32)
   (count           int32)
   (pos-table       (inline-array vector))
   (actor-position  vector  16 :inline)
   (actor-valid?    symbol  16)
   (index-table     uint32  16)
   (dest-pos-table  vector  16 :inline)
   (best-mapping    uint32  16)
   (best-cost       float)
   )
  )

;; definition for method 3 of type form-search-info
(defmethod inspect ((this form-search-info))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this 'form-search-info)
  (format #t "~1Tform: ~A~%" (-> this form))
  (format #t "~1Tcount: ~D~%" (-> this count))
  (format #t "~1Tpos-table: #x~X~%" (-> this pos-table))
  (format #t "~1Tactor-position[16] @ #x~X~%" (-> this actor-position))
  (format #t "~1Tactor-valid?[16] @ #x~X~%" (-> this actor-valid?))
  (format #t "~1Tindex-table[16] @ #x~X~%" (-> this index-table))
  (format #t "~1Tdest-pos-table[16] @ #x~X~%" (-> this dest-pos-table))
  (format #t "~1Tbest-mapping[16] @ #x~X~%" (-> this best-mapping))
  (format #t "~1Tbest-cost: ~f~%" (-> this best-cost))
  (label cfg-4)
  this
  )

;; definition of type hover-actor
(deftype hover-actor (structure)
  ((handle  handle)
   (offset  vector  :inline)
   )
  )

;; definition for method 3 of type hover-actor
(defmethod inspect ((this hover-actor))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this 'hover-actor)
  (format #t "~1Thandle: ~D~%" (-> this handle))
  (format #t "~1Toffset: #<vector @ #x~X>~%" (-> this offset))
  (label cfg-4)
  this
  )

;; definition of type hover-formation-control
(deftype hover-formation-control (basic)
  ((search-info     form-search-info  :inline)
   (entity          entity)
   (anchor-proc     handle)
   (actor-table     handle            16)
   (flags           uint16)
   (formation-type  formation-type)
   (center          vector            :inline)
   (zone-to-world   matrix            :inline)
   (world-to-zone   matrix            :inline)
   (offset          vector            :inline)
   (focus-quat      quaternion        :inline)
   (notice-dist     meters)
   (rotation-inc    float)
   )
  (:methods
    (new (symbol type object entity float vector float handle) _type_)
    (set-anchor-proc (_type_ handle) int)
    (hover-formation-control-method-10 (_type_ vector vector float) symbol)
    (hover-formation-control-method-11 (_type_) int)
    (is-formation-type-in-range (_type_) symbol)
    (hover-formation-control-method-13 (_type_ vector) vector)
    (hover-formation-control-method-14 (_type_) none)
    (hover-formation-control-method-15 (_type_ vector vector) vector)
    (hover-formation-control-method-16 (_type_) object)
    (hover-formation-control-method-17 (_type_ process) int)
    (hover-formation-control-method-18 (_type_ process) int)
    (try-update-formation-type (_type_ formation-type) int)
    (hover-formation-control-method-20 (_type_ object object) none)
    )
  )

;; definition for method 3 of type hover-formation-control
(defmethod inspect ((this hover-formation-control))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this (-> this type))
  (format #t "~1Tsearch-info: #<form-search-info @ #x~X>~%" (-> this search-info))
  (format #t "~1Tentity: ~A~%" (-> this entity))
  (format #t "~1Tanchor-proc: ~D~%" (-> this anchor-proc))
  (format #t "~1Tactor-table[16] @ #x~X~%" (-> this actor-table))
  (format #t "~1Tflags: ~D~%" (-> this flags))
  (format #t "~1Tformation-type: ~D~%" (-> this formation-type))
  (format #t "~1Tcenter: #<vector @ #x~X>~%" (-> this center))
  (format #t "~1Tzone-to-world: #<matrix @ #x~X>~%" (-> this zone-to-world))
  (format #t "~1Tworld-to-zone: #<matrix @ #x~X>~%" (-> this world-to-zone))
  (format #t "~1Toffset: #<vector @ #x~X>~%" (-> this offset))
  (format #t "~1Tfocus-quat: #<quaternion @ #x~X>~%" (-> this focus-quat))
  (format #t "~1Tnotice-dist: ~f~%" (-> this notice-dist))
  (format #t "~1Trotation-inc: ~f~%" (-> this rotation-inc))
  (label cfg-4)
  this
  )

;; definition of type hover-formation
(deftype hover-formation (process)
  ((formation        hover-formation-control)
   (path             path-control)
   (formation-timer  uint64)
   )
  (:state-methods
    idle
    )
  (:methods
    (hover-formation-method-15 (_type_ vector vector) int)
    )
  )

;; definition for method 3 of type hover-formation
(defmethod inspect ((this hover-formation))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (let ((t9-0 (method-of-type process inspect)))
    (t9-0 this)
    )
  (format #t "~2Tformation: ~A~%" (-> this formation))
  (format #t "~2Tpath: ~A~%" (-> this path))
  (format #t "~2Tformation-timer: ~D~%" (-> this formation-timer))
  (label cfg-4)
  this
  )

;; failed to figure out what this is:
0
