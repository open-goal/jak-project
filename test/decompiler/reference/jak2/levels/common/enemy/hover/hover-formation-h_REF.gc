;;-*-Lisp-*-
(in-package goal)

;; definition of type form-search-info
(deftype form-search-info (structure)
  ((form           uint32                           :offset-assert   0)
   (count          int32                            :offset-assert   4)
   (pos-table      (inline-array vector)            :offset-assert   8)
   (actor-position vector                16 :inline :offset-assert  16)
   (actor-valid?   symbol                16         :offset-assert 272)
   (index-table    uint32                16         :offset-assert 336)
   (dest-pos-table vector                16 :inline :offset-assert 400)
   (best-mapping   uint32                16         :offset-assert 656)
   (best-cost      float                            :offset-assert 720)
   )
  :method-count-assert 9
  :size-assert         #x2d4
  :flag-assert         #x9000002d4
  )

;; definition for method 3 of type form-search-info
(defmethod inspect form-search-info ((this form-search-info))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this 'form-search-info)
  (format #t "~1Tform: ~A~%" (-> this form))
  (format #t "~1Tcount: ~D~%" (-> this count))
  (format #t "~1Tpos-table: #x~X~%" (-> this pos-table))
  (format #t "~1Tactor-position[16] @ #x~X~%" (-> this actor-position))
  (format #t "~1Tactor-valid?[16] @ #x~X~%" (-> this actor-valid?))
  (format #t "~1Tindex-table[16] @ #x~X~%" (-> this index-table))
  (format #t "~1Tdest-pos-table[16] @ #x~X~%" (-> this dest-pos-table))
  (format #t "~1Tbest-mapping[16] @ #x~X~%" (-> this best-mapping))
  (format #t "~1Tbest-cost: ~f~%" (-> this best-cost))
  (label cfg-4)
  this
  )

;; definition of type hover-actor
(deftype hover-actor (structure)
  ((handle handle         :offset-assert   0)
   (offset vector :inline :offset-assert  16)
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

;; definition for method 3 of type hover-actor
(defmethod inspect hover-actor ((this hover-actor))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this 'hover-actor)
  (format #t "~1Thandle: ~D~%" (-> this handle))
  (format #t "~1Toffset: #<vector @ #x~X>~%" (-> this offset))
  (label cfg-4)
  this
  )

;; definition of type hover-formation-control
(deftype hover-formation-control (basic)
  ((search-info    form-search-info :inline :offset-assert  16)
   (entity         entity                   :offset-assert 740)
   (anchor-proc    handle                   :offset-assert 744)
   (actor-table    handle           16      :offset-assert 752)
   (flags          uint16                   :offset-assert 880)
   (formation-type formation-type           :offset-assert 888)
   (center         vector           :inline :offset-assert 896)
   (zone-to-world  matrix           :inline :offset-assert 912)
   (world-to-zone  matrix           :inline :offset-assert 976)
   (offset         vector           :inline :offset-assert 1040)
   (focus-quat     quaternion       :inline :offset-assert 1056)
   (notice-dist    meters                   :offset-assert 1072)
   (rotation-inc   float                    :offset-assert 1076)
   )
  :method-count-assert 21
  :size-assert         #x438
  :flag-assert         #x1500000438
  (:methods
    (new (symbol type object entity float vector float handle) _type_ 0)
    (set-anchor-proc (_type_ handle) int 9)
    (hover-formation-control-method-10 (_type_ vector vector float) symbol 10)
    (hover-formation-control-method-11 (_type_) int 11)
    (is-formation-type-in-range (_type_) symbol 12)
    (hover-formation-control-method-13 (_type_ vector) vector 13)
    (hover-formation-control-method-14 (_type_) none 14)
    (hover-formation-control-method-15 (_type_ vector vector) vector 15)
    (hover-formation-control-method-16 (_type_) object 16)
    (hover-formation-control-method-17 (_type_ process) int 17)
    (hover-formation-control-method-18 (_type_ process) int 18)
    (try-update-formation-type (_type_ formation-type) int 19)
    (hover-formation-control-method-20 (_type_ object object) none 20)
    )
  )

;; definition for method 3 of type hover-formation-control
(defmethod inspect hover-formation-control ((this hover-formation-control))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this (-> this type))
  (format #t "~1Tsearch-info: #<form-search-info @ #x~X>~%" (-> this search-info))
  (format #t "~1Tentity: ~A~%" (-> this entity))
  (format #t "~1Tanchor-proc: ~D~%" (-> this anchor-proc))
  (format #t "~1Tactor-table[16] @ #x~X~%" (-> this actor-table))
  (format #t "~1Tflags: ~D~%" (-> this flags))
  (format #t "~1Tformation-type: ~D~%" (-> this formation-type))
  (format #t "~1Tcenter: #<vector @ #x~X>~%" (-> this center))
  (format #t "~1Tzone-to-world: #<matrix @ #x~X>~%" (-> this zone-to-world))
  (format #t "~1Tworld-to-zone: #<matrix @ #x~X>~%" (-> this world-to-zone))
  (format #t "~1Toffset: #<vector @ #x~X>~%" (-> this offset))
  (format #t "~1Tfocus-quat: #<quaternion @ #x~X>~%" (-> this focus-quat))
  (format #t "~1Tnotice-dist: ~f~%" (-> this notice-dist))
  (format #t "~1Trotation-inc: ~f~%" (-> this rotation-inc))
  (label cfg-4)
  this
  )

;; definition of type hover-formation
(deftype hover-formation (process)
  ((formation       hover-formation-control  :offset-assert 128)
   (path            path-control             :offset-assert 132)
   (formation-timer uint64                   :offset-assert 136)
   )
  :heap-base #x10
  :method-count-assert 16
  :size-assert         #x90
  :flag-assert         #x1000100090
  (:methods
    (idle () _type_ :state 14)
    (hover-formation-method-15 (_type_ vector vector) int 15)
    )
  )

;; definition for method 3 of type hover-formation
(defmethod inspect hover-formation ((this hover-formation))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (let ((t9-0 (method-of-type process inspect)))
    (t9-0 this)
    )
  (format #t "~2Tformation: ~A~%" (-> this formation))
  (format #t "~2Tpath: ~A~%" (-> this path))
  (format #t "~2Tformation-timer: ~D~%" (-> this formation-timer))
  (label cfg-4)
  this
  )

;; failed to figure out what this is:
0
