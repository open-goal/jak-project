;;-*-Lisp-*-
(in-package goal)

;; definition for method 9 of type halt-wait-spot
;; WARN: Return type mismatch int vs none.
(defmethod reset-task! halt-wait-spot ((obj halt-wait-spot))
  (set! (-> obj check-done) #f)
  (set! (-> obj which-spot) 0)
  (set! (-> obj num-spots) (the-as uint 1))
  (none)
  )

;; definition for method 11 of type halt-wait-spot
;; INFO: Used lq/sq
;; WARN: Return type mismatch symbol vs none.
(defmethod ai-task-method-11 halt-wait-spot ((obj halt-wait-spot) (arg0 bot))
  (let ((s4-0 (-> obj which-spot)))
    (if (logtest? *display-bot-marks* (bot-marks-controls bmc16))
        (bot-debug-draw-spot-sphere
          arg0
          (the-as int (-> obj num-spots))
          (the-as (pointer uint) (-> obj spot-indexes))
          (the-as int (-> obj spot-indexes s4-0))
          )
        )
    (mem-copy!
      (the-as pointer (-> arg0 spot))
      (the-as pointer (-> arg0 course spots (-> obj spot-indexes s4-0)))
      20
      )
    )
  (set! (-> arg0 root trans quad) (-> arg0 spot center quad))
  ((-> obj check-done) obj (the-as hal arg0))
  (none)
  )
