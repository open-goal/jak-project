;;-*-Lisp-*-
(in-package goal)

;; definition of type display-frame
(deftype display-frame (basic)
  ((buffer        dma-buffer    11      :offset-assert   4)
   (calc-buf      dma-buffer            :offset          8)
   (vu1-buf       dma-buffer            :offset          8)
   (debug-buf     dma-buffer            :offset         36)
   (global-buf    dma-buffer            :offset         40)
   (bucket-group  dma-bucket            :offset         44)
   (profile-array profile-array :inline :offset-assert  48)
   (start-time    time-frame            :offset-assert  56)
   (run-time      time-frame            :offset-assert  64)
   )
  :method-count-assert 9
  :size-assert         #x48
  :flag-assert         #x900000048
  (:methods
    (new (symbol type) _type_ 0)
    )
  )

;; definition for method 3 of type display-frame
(defmethod inspect display-frame ((obj display-frame))
  (when (not obj)
    (set! obj obj)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" obj (-> obj type))
  (format #t "~1Tbuffer[11] @ #x~X~%" (-> obj buffer))
  (format #t "~1Tcalc-buf: ~A~%" (-> obj calc-buf))
  (format #t "~1Tvu1-buf: ~A~%" (-> obj calc-buf))
  (format #t "~1Tdebug-buf: ~A~%" (-> obj debug-buf))
  (format #t "~1Tglobal-buf: ~A~%" (-> obj global-buf))
  (format #t "~1Tbucket-group: #<dma-bucket @ #x~X>~%" (-> obj bucket-group))
  (format #t "~1Tprofile-array: #<profile-array @ #x~X>~%" (-> obj profile-array))
  (format #t "~1Tstart-time: ~D~%" (-> obj start-time))
  (format #t "~1Trun-time: ~D~%" (-> obj run-time))
  (label cfg-4)
  obj
  )

;; definition for method 0 of type display-frame
(defmethod new display-frame ((allocation symbol) (type-to-make type))
  (let ((gp-0 (object-new allocation type-to-make (the-as int (-> type-to-make size)))))
    (set! (-> gp-0 calc-buf) (the-as dma-buffer 0))
    (set! (-> gp-0 global-buf) (the-as dma-buffer 0))
    (set! (-> gp-0 debug-buf) (the-as dma-buffer 0))
    (when *debug-segment*
      (set! (-> gp-0 profile-array data 0) (new 'debug 'profile-segment-array))
      (set! (-> gp-0 profile-array data 1) (new 'debug 'profile-segment-array))
      )
    gp-0
    )
  )

;; definition of type display
(deftype display (basic)
  ((on-screen            int32                :offset-assert   4)
   (last-screen          int32                :offset-assert   8)
   (frames               display-frame     2  :offset-assert  12)
   (bgcolor              uint64               :offset-assert  24)
   (pmode                gs-pmode             :offset-assert  32)
   (clock                clock             13 :offset-assert  40)
   (session-clock        clock                :offset         40)
   (game-clock           clock                :offset         44)
   (base-clock           clock                :offset         48)
   (real-clock           clock                :offset         52)
   (frame-clock          clock                :offset         56)
   (real-frame-clock     clock                :offset         60)
   (target-clock         clock                :offset         64)
   (entity-clock         clock                :offset         68)
   (part-clock           clock                :offset         72)
   (bg-clock             clock                :offset         76)
   (camera-clock         clock                :offset         80)
   (user0-clock          clock                :offset         84)
   (total-game-clock     clock                :offset         88)
   (time-factor          float                :offset-assert  92)
   (dog-ratio            float                :offset-assert  96)
   (vblank-start-time    time-frame        2  :offset-assert 104)
   (total-run-time       time-frame           :offset-assert 120)
   (run-half-speed       basic                :offset-assert 128)
   (dog-count            float                :offset-assert 132)
   (vu1-enable-user      vu1-renderer-mask    :offset-assert 136)
   (vu1-enable-user-menu vu1-renderer-mask    :offset-assert 144)
   (force-sync           uint32               :offset-assert 152)
   )
  :method-count-assert 10
  :size-assert         #x9c
  :flag-assert         #xa0000009c
  (:methods
    (new (symbol type int int int int int) _type_ 0)
    (set-time-ratios (_type_ float) float 9)
    )
  )

;; definition for method 3 of type display
(defmethod inspect display ((obj display))
  (when (not obj)
    (set! obj obj)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" obj (-> obj type))
  (format #t "~1Ton-screen: ~D~%" (-> obj on-screen))
  (format #t "~1Tlast-screen: ~D~%" (-> obj last-screen))
  (format #t "~1Tframes[2] @ #x~X~%" (-> obj frames))
  (format #t "~1Tbgcolor: #x~X~%" (-> obj bgcolor))
  (format #t "~1Tpmode: ~D~%" (-> obj pmode))
  (format #t "~1Tclock[13] @ #x~X~%" (-> obj clock))
  (format #t "~1Tsession-clock: ~A~%" (-> obj session-clock))
  (format #t "~1Tgame-clock: ~A~%" (-> obj game-clock))
  (format #t "~1Tbase-clock: ~A~%" (-> obj base-clock))
  (format #t "~1Treal-clock: ~A~%" (-> obj real-clock))
  (format #t "~1Tframe-clock: ~A~%" (-> obj frame-clock))
  (format #t "~1Treal-frame-clock: ~A~%" (-> obj real-frame-clock))
  (format #t "~1Ttarget-clock: ~A~%" (-> obj target-clock))
  (format #t "~1Tentity-clock: ~A~%" (-> obj entity-clock))
  (format #t "~1Tpart-clock: ~A~%" (-> obj part-clock))
  (format #t "~1Tbg-clock: ~A~%" (-> obj bg-clock))
  (format #t "~1Tcamera-clock: ~A~%" (-> obj camera-clock))
  (format #t "~1Tuser0-clock: ~A~%" (-> obj user0-clock))
  (format #t "~1Ttotal-game-clock: ~A~%" (-> obj total-game-clock))
  (format #t "~1Ttime-factor: ~f~%" (-> obj time-factor))
  (format #t "~1Tdog-ratio: ~f~%" (-> obj dog-ratio))
  (format #t "~1Tvblank-start-time[2] @ #x~X~%" (-> obj vblank-start-time))
  (format #t "~1Ttotal-run-time: ~D~%" (-> obj total-run-time))
  (format #t "~1Trun-half-speed: ~A~%" (-> obj run-half-speed))
  (format #t "~1Tdog-count: ~f~%" (-> obj dog-count))
  (format #t "~1Tvu1-enable-user: ~D~%" (-> obj vu1-enable-user))
  (format #t "~1Tvu1-enable-user-menu: ~D~%" (-> obj vu1-enable-user-menu))
  (format #t "~1Tforce-sync: ~D~%" (-> obj force-sync))
  (label cfg-4)
  obj
  )

;; definition for method 0 of type display
(defmethod new display ((allocation symbol) (type-to-make type) (arg0 int) (arg1 int) (arg2 int) (arg3 int) (arg4 int))
  (let ((gp-0 (object-new allocation type-to-make (the-as int (-> type-to-make size)))))
    (set-display gp-0)
    (set! (-> gp-0 frames 0) (new 'global 'display-frame))
    (set! (-> gp-0 frames 1) (new 'global 'display-frame))
    (set! (-> gp-0 pmode) (new 'static 'gs-pmode :en1 #x1 :crtmd #x1 :mmod #x1 :slbg #x1))
    (set! (-> gp-0 run-half-speed) #f)
    (set! (-> gp-0 vu1-enable-user-menu) (vu1-renderer-mask
                                           rn3
                                           rn4
                                           rn5
                                           rn6
                                           rn7
                                           rn8
                                           rn9
                                           rn10
                                           rn11
                                           rn12
                                           rn13
                                           rn14
                                           rn15
                                           rn16
                                           rn17
                                           rn18
                                           rn19
                                           rn20
                                           rn21
                                           rn22
                                           rn23
                                           rn24
                                           rn25
                                           rn26
                                           rn27
                                           rn28
                                           rn29
                                           rn30
                                           rn31
                                           rn32
                                           rn34
                                           )
          )
    (set! (-> gp-0 vu1-enable-user) (vu1-renderer-mask
                                      rn3
                                      rn4
                                      rn5
                                      rn6
                                      rn7
                                      rn8
                                      rn9
                                      rn10
                                      rn11
                                      rn12
                                      rn13
                                      rn14
                                      rn15
                                      rn16
                                      rn17
                                      rn18
                                      rn19
                                      rn20
                                      rn21
                                      rn22
                                      rn23
                                      rn24
                                      rn25
                                      rn26
                                      rn27
                                      rn28
                                      rn29
                                      rn30
                                      rn31
                                      rn32
                                      rn34
                                      )
          )
    gp-0
    )
  )

;; definition for symbol *pre-draw-hook*, type (function object none)
(define *pre-draw-hook* (the-as (function object none) nothing))

;; definition for symbol *post-draw-hook*, type (function dma-buffer none)
(define *post-draw-hook* (the-as (function dma-buffer none) nothing))

;; failed to figure out what this is:
0
