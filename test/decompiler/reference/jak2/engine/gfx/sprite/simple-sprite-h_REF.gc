;;-*-Lisp-*-
(in-package goal)

;; definition of type sprite-glow-data
(deftype sprite-glow-data (structure)
  ((position    vector  :inline)
   (size-x      float             :overlay-at (-> position data 3))
   (size-probe  float)
   (z-offset    float)
   (rot-angle   float)
   (size-y      float)
   (color       rgbaf   :inline)
   (fade-a      float)
   (fade-b      float)
   (tex-id      texture-id)
   (dummy       uint32)
   (quads       vector  4 :inline :overlay-at position)
   )
  (:methods
    (set-trans (_type_ vector) none)
    )
  )

;; definition for method 3 of type sprite-glow-data
(defmethod inspect ((this sprite-glow-data))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this 'sprite-glow-data)
  (format #t "~1Tposition: #<vector @ #x~X>~%" (-> this position))
  (format #t "~1Tsize-x: ~f~%" (-> this position w))
  (format #t "~1Tsize-probe: ~f~%" (-> this size-probe))
  (format #t "~1Tz-offset: ~f~%" (-> this z-offset))
  (format #t "~1Trot-angle: ~f~%" (-> this rot-angle))
  (format #t "~1Tsize-y: ~f~%" (-> this size-y))
  (format #t "~1Tcolor: #<rgbaf @ #x~X>~%" (-> this color))
  (format #t "~1Tfade-a: ~f~%" (-> this fade-a))
  (format #t "~1Tfade-b: ~f~%" (-> this fade-b))
  (format #t "~1Ttex-id: ~D~%" (-> this tex-id))
  (format #t "~1Tdummy: ~D~%" (-> this dummy))
  (label cfg-4)
  this
  )

;; definition for method 9 of type sprite-glow-data
;; INFO: Used lq/sq
;; WARN: Return type mismatch int vs none.
(defmethod set-trans ((this sprite-glow-data) (arg0 vector))
  (let ((f0-0 (-> this position w)))
    (set! (-> this position quad) (-> arg0 quad))
    (set! (-> this position w) f0-0)
    )
  0
  (none)
  )

;; definition of type simple-sprite-system
(deftype simple-sprite-system (structure)
  ((count      int16)
   (max-count  int16)
   (data       (inline-array sprite-glow-data))
   )
  (:methods
    (add! (_type_ sprite-glow-data) none)
    (draw-all-sprites! (_type_ dma-buffer) none)
    (clear! (_type_) none)
    )
  )

;; definition for method 3 of type simple-sprite-system
(defmethod inspect ((this simple-sprite-system))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this 'simple-sprite-system)
  (format #t "~1Tcount: ~D~%" (-> this count))
  (format #t "~1Tmax-count: ~D~%" (-> this max-count))
  (format #t "~1Tdata: #x~X~%" (-> this data))
  (label cfg-4)
  this
  )

;; failed to figure out what this is:
0
