;;-*-Lisp-*-
(in-package goal)

;; definition of type background-work
(deftype background-work (basic)
  ((tfrag-tree-count       int32                          :offset-assert   4)
   (tfrag-trees            drawable-tree-tfrag          8 :offset-assert   8)
   (tfrag-levels           level                        8 :offset-assert  40)
   (tfrag-trans-tree-count int32                          :offset-assert  72)
   (tfrag-trans-trees      drawable-tree-tfrag-trans    8 :offset-assert  76)
   (tfrag-trans-levels     level                        8 :offset-assert 108)
   (tfrag-water-tree-count int32                          :offset-assert 140)
   (tfrag-water-trees      drawable-tree-tfrag-water    8 :offset-assert 144)
   (tfrag-water-levels     level                        8 :offset-assert 176)
   (shrub-tree-count       int32                          :offset-assert 208)
   (shrub-trees            drawable-tree-instance-shrub 8 :offset-assert 212)
   (shrub-levels           level                        8 :offset-assert 244)
   (tie-tree-count         int32                          :offset-assert 276)
   (tie-trees              drawable-tree-instance-tie   8 :offset-assert 280)
   (tie-levels             level                        8 :offset-assert 312)
   (tie-generic            basic                        8 :offset-assert 344)
   (tie-generic-trans      basic                        8 :offset-assert 376)
   (wait-to-vu0            uint32                         :offset-assert 408)
   )
  :method-count-assert 9
  :size-assert         #x19c
  :flag-assert         #x90000019c
  )

;; definition for method 3 of type background-work
(defmethod inspect background-work ((this background-work))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this (-> this type))
  (format #t "~1Ttfrag-tree-count: ~D~%" (-> this tfrag-tree-count))
  (format #t "~1Ttfrag-trees[8] @ #x~X~%" (-> this tfrag-trees))
  (format #t "~1Ttfrag-levels[8] @ #x~X~%" (-> this tfrag-levels))
  (format #t "~1Ttfrag-trans-tree-count: ~D~%" (-> this tfrag-trans-tree-count))
  (format #t "~1Ttfrag-trans-trees[8] @ #x~X~%" (-> this tfrag-trans-trees))
  (format #t "~1Ttfrag-trans-levels[8] @ #x~X~%" (-> this tfrag-trans-levels))
  (format #t "~1Ttfrag-water-tree-count: ~D~%" (-> this tfrag-water-tree-count))
  (format #t "~1Ttfrag-water-trees[8] @ #x~X~%" (-> this tfrag-water-trees))
  (format #t "~1Ttfrag-water-levels[8] @ #x~X~%" (-> this tfrag-water-levels))
  (format #t "~1Tshrub-tree-count: ~D~%" (-> this shrub-tree-count))
  (format #t "~1Tshrub-trees[8] @ #x~X~%" (-> this shrub-trees))
  (format #t "~1Tshrub-levels[8] @ #x~X~%" (-> this shrub-levels))
  (format #t "~1Ttie-tree-count: ~D~%" (-> this tie-tree-count))
  (format #t "~1Ttie-trees[8] @ #x~X~%" (-> this tie-trees))
  (format #t "~1Ttie-levels[8] @ #x~X~%" (-> this tie-levels))
  (format #t "~1Ttie-generic[8] @ #x~X~%" (-> this tie-generic))
  (format #t "~1Ttie-generic-trans[8] @ #x~X~%" (-> this tie-generic-trans))
  (format #t "~1Twait-to-vu0: ~D~%" (-> this wait-to-vu0))
  (label cfg-4)
  this
  )

;; failed to figure out what this is:
0
