;;-*-Lisp-*-
(in-package goal)

;; definition of type chain-physics-setup
(deftype chain-physics-setup (structure)
  ((joint-index int32  :offset-assert   0)
   )
  :method-count-assert 9
  :size-assert         #x4
  :flag-assert         #x900000004
  )

;; definition for method 3 of type chain-physics-setup
(defmethod inspect chain-physics-setup ((this chain-physics-setup))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this 'chain-physics-setup)
  (format #t "~1Tjoint-index: ~D~%" (-> this joint-index))
  (label cfg-4)
  this
  )

;; definition of type chain-physics-joint
(deftype chain-physics-joint (structure)
  ((position  vector    :inline :offset-assert   0)
   (velocity  vector    :inline :offset-assert  16)
   (old-x     vector    :inline :offset-assert  32)
   (joint-mod joint-mod         :offset-assert  48)
   )
  :method-count-assert 9
  :size-assert         #x34
  :flag-assert         #x900000034
  )

;; definition for method 3 of type chain-physics-joint
(defmethod inspect chain-physics-joint ((this chain-physics-joint))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this 'chain-physics-joint)
  (format #t "~1Tposition: #<vector @ #x~X>~%" (-> this position))
  (format #t "~1Tvelocity: #<vector @ #x~X>~%" (-> this velocity))
  (format #t "~1Told-x: #<vector @ #x~X>~%" (-> this old-x))
  (format #t "~1Tjoint-mod: ~A~%" (-> this joint-mod))
  (label cfg-4)
  this
  )

;; definition of type chain-physics
(deftype chain-physics (basic)
  ((chain-joints          chain-physics-joint 20 :inline :offset-assert  16)
   (num-joints            uint8                          :offset-assert 1296)
   (root-joint-index      uint8                          :offset-assert 1297)
   (joint-length          float                          :offset-assert 1300)
   (gravity               vector              :inline    :offset-assert 1312)
   (gravity-target        vector              :inline    :offset-assert 1328)
   (stretch-vel           float                          :offset-assert 1344)
   (stretch-vel-parallel  float                          :offset-assert 1348)
   (compress-vel          float                          :offset-assert 1352)
   (compress-vel-parallel float                          :offset-assert 1356)
   (negate-y              symbol                         :offset-assert 1360)
   (axial-slop            float                          :offset-assert 1364)
   (maximum-stretch       float                          :offset-assert 1368)
   (turn-off-start        time-frame                     :offset-assert 1376)
   (turn-off-duration     time-frame                     :offset-assert 1384)
   )
  :method-count-assert 18
  :size-assert         #x570
  :flag-assert         #x1200000570
  (:methods
    (initialize-chain-joints (_type_) symbol 9)
    (turn-off (_type_ time-frame) none :behavior process 10)
    (update (_type_ process-drawable) none :behavior process 11)
    (gravity-update (_type_ process-drawable) none 12)
    (apply-gravity (_type_ vector int process-drawable) none :behavior process 13)
    (chain-physics-method-14 (_type_ vector int) none 14)
    (clamp-length (_type_ vector vector object process-drawable) vector 15)
    (chain-physics-method-16 (_type_ int) float 16)
    (chain-physics-method-17 (_type_ vector int) none 17)
    )
  )

;; definition for method 3 of type chain-physics
(defmethod inspect chain-physics ((this chain-physics))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this (-> this type))
  (format #t "~1Tchain-joints[20] @ #x~X~%" (-> this chain-joints))
  (format #t "~1Tnum-joints: ~D~%" (-> this num-joints))
  (format #t "~1Troot-joint-index: ~D~%" (-> this root-joint-index))
  (format #t "~1Tjoint-length: ~f~%" (-> this joint-length))
  (format #t "~1Tgravity: #<vector @ #x~X>~%" (-> this gravity))
  (format #t "~1Tgravity-target: #<vector @ #x~X>~%" (-> this gravity-target))
  (format #t "~1Tstretch-vel: ~f~%" (-> this stretch-vel))
  (format #t "~1Tstretch-vel-parallel: ~f~%" (-> this stretch-vel-parallel))
  (format #t "~1Tcompress-vel: ~f~%" (-> this compress-vel))
  (format #t "~1Tcompress-vel-parallel: ~f~%" (-> this compress-vel-parallel))
  (format #t "~1Tnegate-y: ~A~%" (-> this negate-y))
  (format #t "~1Taxial-slop: ~f~%" (-> this axial-slop))
  (format #t "~1Tmaximum-stretch: ~f~%" (-> this maximum-stretch))
  (format #t "~1Tturn-off-start: ~D~%" (-> this turn-off-start))
  (format #t "~1Tturn-off-duration: ~D~%" (-> this turn-off-duration))
  (label cfg-4)
  this
  )

;; failed to figure out what this is:
0
