;;-*-Lisp-*-
(in-package goal)

;; definition for function penetrate-using->damage
(defun penetrate-using->damage ((arg0 penetrate))
  (cond
    ((logtest? (penetrate dark-bomb dark-giant) arg0)
     15
     )
    ((logtest? arg0 (penetrate mech-punch mech-bonk))
     5
     )
    ((logtest? (penetrate) arg0)
     4
     )
    ((logtest? (penetrate punch spin jak-dark-shot enemy-dark-shot) arg0)
     3
     )
    ((logtest? (penetrate
                 flop
                 uppercut
                 tube
                 flut-attack
                 dark-punch
                 explode
                 jak-yellow-shot
                 jak-red-shot
                 jak-blue-shot
                 enemy-yellow-shot
                 eco-yellow
                 )
               arg0
               )
     2
     )
    ((logtest? arg0 (penetrate generic-attack roll bonk board))
     1
     )
    (else
      0
      )
    )
  )

;; definition for function penetrated-by-all&hit-points->penetrated-by
;; WARN: Return type mismatch uint vs penetrate.
(defun penetrated-by-all&hit-points->penetrated-by ((arg0 penetrate) (arg1 int))
  (let ((a0-1 arg1))
    (the-as penetrate (logior (logclear arg0 (penetrate
                                               generic-attack
                                               flop
                                               punch
                                               spin
                                               roll
                                               uppercut
                                               bonk
                                               tube
                                               vehicle
                                               flut-attack
                                               board
                                               mech-punch
                                               mech-bonk
                                               dark-skin
                                               dark-punch
                                               dark-bomb
                                               dark-giant
                                               shield
                                               explode
                                               jak-yellow-shot
                                               jak-red-shot
                                               jak-blue-shot
                                               jak-dark-shot
                                               enemy-yellow-shot
                                               enemy-dark-shot
                                               eco-yellow
                                               knocked
                                               )
                                        )
                              (cond
                                ((or (zero? a0-1) (= a0-1 1))
                                 (the-as int (the-as uint #x11fffdffa))
                                 )
                                ((= a0-1 2)
                                 #x1feeceb8
                                 )
                                ((= a0-1 3)
                                 #xa0cc430
                                 )
                                ((= a0-1 4)
                                 #xcc400
                                 )
                                ((= a0-1 5)
                                 #xcc400
                                 )
                                ((or (= a0-1 6)
                                     (= a0-1 7)
                                     (= a0-1 8)
                                     (= a0-1 9)
                                     (= a0-1 10)
                                     (= a0-1 11)
                                     (= a0-1 12)
                                     (= a0-1 13)
                                     (= a0-1 14)
                                     (= a0-1 15)
                                     )
                                 #xc0400
                                 )
                                (else
                                  1024
                                  )
                                )
                              )
            )
    )
  )

;; failed to figure out what this is:
0
