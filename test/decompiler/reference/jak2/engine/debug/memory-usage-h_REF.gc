;;-*-Lisp-*-
(in-package goal)

;; this file is debug only
(declare-file (debug))

;; definition of type memory-usage-info
(deftype memory-usage-info (structure)
  ((name   string)
   (count  int32)
   (used   int32)
   (total  int32)
   )
  )

;; definition for method 3 of type memory-usage-info
(defmethod inspect ((this memory-usage-info))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this 'memory-usage-info)
  (format #t "~1Tname: ~A~%" (-> this name))
  (format #t "~1Tcount: ~D~%" (-> this count))
  (format #t "~1Tused: ~D~%" (-> this used))
  (format #t "~1Ttotal: ~D~%" (-> this total))
  (label cfg-4)
  this
  )

;; definition of type memory-usage-block
(deftype memory-usage-block (basic)
  ((work-bsp  basic)
   (length    int32)
   (data      memory-usage-info  112 :inline)
   )
  (:methods
    (reset! (_type_) _type_)
    (calculate-total (_type_) int)
    (print-mem-usage (_type_ level object) _type_)
    )
  )

;; definition for method 3 of type memory-usage-block
(defmethod inspect ((this memory-usage-block))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this (-> this type))
  (format #t "~1Twork-bsp: ~A~%" (-> this work-bsp))
  (format #t "~1Tlength: ~D~%" (-> this length))
  (format #t "~1Tdata[112] @ #x~X~%" (-> this data))
  (label cfg-4)
  this
  )

;; definition for symbol *mem-usage*, type memory-usage-block
(define *mem-usage* (new 'debug 'memory-usage-block))

;; definition for symbol *dma-mem-usage*, type memory-usage-block
(define *dma-mem-usage* (new 'debug 'memory-usage-block))

;; definition for symbol *temp-mem-usage*, type memory-usage-block
(define *temp-mem-usage* (the-as memory-usage-block #f))
