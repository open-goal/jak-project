;;-*-Lisp-*-
(in-package goal)

;; definition of type vif-stat
(deftype vif-stat (uint32)
  ((vps uint8 :offset   0 :size   2)
   (vew uint8 :offset   2 :size   1)
   (mrk uint8 :offset   6 :size   1)
   (vss uint8 :offset   8 :size   1)
   (vfs uint8 :offset   9 :size   1)
   (vis uint8 :offset  10 :size   1)
   (int uint8 :offset  11 :size   1)
   (er0 uint8 :offset  12 :size   1)
   (er1 uint8 :offset  13 :size   1)
   (fqc uint8 :offset  24 :size   4)
   )
  :method-count-assert 9
  :size-assert         #x4
  :flag-assert         #x900000004
  )

;; definition for method 3 of type vif-stat
(defmethod inspect vif-stat ((obj vif-stat))
  (when (not obj)
    (set! obj obj)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" obj 'vif-stat)
  (format #t "~1Tvps: ~D~%" (-> obj vps))
  (format #t "~1Tvew: ~D~%" (-> obj vew))
  (format #t "~1Tmrk: ~D~%" (-> obj mrk))
  (format #t "~1Tvss: ~D~%" (-> obj vss))
  (format #t "~1Tvfs: ~D~%" (-> obj vfs))
  (format #t "~1Tvis: ~D~%" (-> obj vis))
  (format #t "~1Tint: ~D~%" (-> obj int))
  (format #t "~1Ter0: ~D~%" (-> obj er0))
  (format #t "~1Ter1: ~D~%" (-> obj er1))
  (format #t "~1Tfqc: ~D~%" (-> obj fqc))
  (label cfg-4)
  obj
  )

;; definition of type vif-fbrst
(deftype vif-fbrst (uint32)
  ((rst uint8 :offset   0 :size   1)
   (fbk uint8 :offset   1 :size   1)
   (stp uint8 :offset   2 :size   1)
   (stc uint8 :offset   3 :size   1)
   )
  :method-count-assert 9
  :size-assert         #x4
  :flag-assert         #x900000004
  )

;; definition of type vif-err
(deftype vif-err (uint32)
  ((mii uint8 :offset   0 :size   1)
   (me0 uint8 :offset   1 :size   1)
   (me1 uint8 :offset   2 :size   1)
   )
  :method-count-assert 9
  :size-assert         #x4
  :flag-assert         #x900000004
  )

;; definition of type vif-bank
(deftype vif-bank (structure)
  ((stat   uint32   :offset-assert   0)
   (fbrst  uint32   :offset         16)
   (err    vif-err  :offset         32)
   (mark   uint32   :offset         48)
   (cycle  uint32   :offset         64)
   (mode   uint32   :offset         80)
   (num    uint32   :offset         96)
   (mask   uint32   :offset        112)
   (code   uint32   :offset        128)
   (itops  uint32   :offset        144)
   (base   uint32   :offset        160)
   (offset uint32   :offset        176)
   (tops   uint32   :offset        192)
   (itop   uint32   :offset        208)
   (top    uint32   :offset        224)
   (r0     uint32   :offset        256)
   (r1     uint32   :offset        272)
   (r2     uint32   :offset        288)
   (r3     uint32   :offset        304)
   (c0     uint32   :offset        320)
   (c1     uint32   :offset        336)
   (c2     uint32   :offset        352)
   (c3     uint32   :offset        368)
   )
  :method-count-assert 9
  :size-assert         #x174
  :flag-assert         #x900000174
  )

;; definition for method 3 of type vif-bank
(defmethod inspect vif-bank ((obj vif-bank))
  (when (not obj)
    (set! obj obj)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" obj 'vif-bank)
  (format #t "~1Tstat: #x~X~%" (-> obj stat))
  (format #t "~1Tfbrst: #x~X~%" (-> obj fbrst))
  (format #t "~1Terr: #x~X~%" (-> obj err))
  (format #t "~1Tmark: #x~X~%" (-> obj mark))
  (format #t "~1Tcycle: #x~X~%" (-> obj cycle))
  (format #t "~1Tmode: #x~X~%" (-> obj mode))
  (format #t "~1Tnum: #x~X~%" (-> obj num))
  (format #t "~1Tmask: #x~X~%" (-> obj mask))
  (format #t "~1Tcode: #x~X~%" (-> obj code))
  (format #t "~1Titops: #x~X~%" (-> obj itops))
  (format #t "~1Tbase: #x~X~%" (-> obj base))
  (format #t "~1Toffset: #x~X~%" (-> obj offset))
  (format #t "~1Ttops: #x~X~%" (-> obj tops))
  (format #t "~1Titop: #x~X~%" (-> obj itop))
  (format #t "~1Ttop: #x~X~%" (-> obj top))
  (format #t "~1Tr0: #x~X~%" (-> obj r0))
  (format #t "~1Tr1: #x~X~%" (-> obj r1))
  (format #t "~1Tr2: #x~X~%" (-> obj r2))
  (format #t "~1Tr3: #x~X~%" (-> obj r3))
  (format #t "~1Tc0: #x~X~%" (-> obj c0))
  (format #t "~1Tc1: #x~X~%" (-> obj c1))
  (format #t "~1Tc2: #x~X~%" (-> obj c2))
  (format #t "~1Tc3: #x~X~%" (-> obj c3))
  (label cfg-4)
  obj
  )

;; failed to figure out what this is:
0




