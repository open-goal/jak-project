;;-*-Lisp-*-
(in-package goal)

;; definition of type drawable
(deftype drawable (basic)
  ((id      int16          :offset-assert   4)
   (bsphere vector :inline :offset-assert  16)
   )
  :method-count-assert 17
  :size-assert         #x20
  :flag-assert         #x1100000020
  (:methods
    (login (_type_) _type_ 9)
    (draw (_type_ _type_ display-frame) none 10)
    (drawable-method-11 () none 11)
    (drawable-method-12 () none 12)
    (drawable-method-13 () none 13)
    (debug-draw (_type_ drawable display-frame) none 14)
    (unpack-vis (_type_ (pointer int8) (pointer int8)) (pointer int8) 15)
    (drawable-method-16 () none 16)
    )
  )

;; definition for method 3 of type drawable
(defmethod inspect drawable ((obj drawable))
  (when (not obj)
    (set! obj obj)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" obj (-> obj type))
  (format #t "~1Tid: ~D~%" (-> obj id))
  (format #t "~1Tbsphere: ~`vector`P~%" (-> obj bsphere))
  (label cfg-4)
  obj
  )

;; definition of type drawable-error
(deftype drawable-error (drawable)
  ((name string  :offset-assert  32)
   )
  :method-count-assert 17
  :size-assert         #x24
  :flag-assert         #x1100000024
  )

;; definition for method 3 of type drawable-error
(defmethod inspect drawable-error ((obj drawable-error))
  (when (not obj)
    (set! obj obj)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" obj (-> obj type))
  (format #t "~1Tid: ~D~%" (-> obj id))
  (format #t "~1Tbsphere: ~`vector`P~%" (-> obj bsphere))
  (format #t "~1Tname: ~A~%" (-> obj name))
  (label cfg-4)
  obj
  )

;; failed to figure out what this is:
0
