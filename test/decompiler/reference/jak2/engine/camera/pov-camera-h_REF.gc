;;-*-Lisp-*-
(in-package goal)

;; definition of type pov-camera
(deftype pov-camera (process-drawable)
  ((flags               pov-camera-flag  :offset-assert 200)
   (debounce-start-time time-frame       :offset-assert 208)
   (notify-handle       uint64           :offset-assert 216)
   (anim-name           string           :offset-assert 224)
   (command-list        pair             :offset-assert 228)
   (mask-to-clear       process-mask     :offset-assert 232)
   (music-volume-movie  float            :offset-assert 236)
   (sfx-volume-movie    float            :offset-assert 240)
   )
  :heap-base #x80
  :method-count-assert 30
  :size-assert         #xf4
  :flag-assert         #x1e008000f4
  (:methods
    (pov-camera-method-20 () none 20)
    (pov-camera-method-21 () none 21)
    (pov-camera-method-22 () none 22)
    (pov-camera-method-23 () none 23)
    (pov-camera-method-24 () none 24)
    (pov-camera-method-25 () none 25)
    (pov-camera-method-26 () none 26)
    (pov-camera-method-27 () none 27)
    (pov-camera-method-28 () none 28)
    (pov-camera-method-29 () none 29)
    )
  )

;; definition for method 3 of type pov-camera
(defmethod inspect pov-camera ((obj pov-camera))
  (when (not obj)
    (set! obj obj)
    (goto cfg-4)
    )
  (let ((t9-0 (method-of-type process-drawable inspect)))
    (t9-0 obj)
    )
  (format #t "~2Tflags: ~D~%" (-> obj flags))
  (format #t "~2Tdebounce-start-time: ~D~%" (-> obj debounce-start-time))
  (format #t "~2Tnotify-handle: ~D~%" (-> obj notify-handle))
  (format #t "~2Tanim-name: ~A~%" (-> obj anim-name))
  (format #t "~2Tcommand-list: ~A~%" (-> obj command-list))
  (format #t "~2Tmask-to-clear: ~D~%" (-> obj mask-to-clear))
  (format #t "~2Tmusic-volume-movie: ~f~%" (-> obj music-volume-movie))
  (format #t "~2Tsfx-volume-movie: ~f~%" (-> obj sfx-volume-movie))
  (label cfg-4)
  obj
  )

;; failed to figure out what this is:
0




