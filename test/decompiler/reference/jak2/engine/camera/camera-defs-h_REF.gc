;;-*-Lisp-*-
(in-package goal)

;; definition of type camera-bank
(deftype camera-bank (basic)
  ((collide-move-rad         float)
   (joypad                   uint32)
   (min-detectable-velocity  float)
   (attack-timeout           time-frame)
   (default-string-max-y     meters)
   (default-string-min-y     meters)
   (default-string-max-z     meters)
   (default-string-min-z     meters)
   (default-string-push-z    meters)
   (default-tilt-adjust      degrees)
   )
  )

;; definition for method 3 of type camera-bank
(defmethod inspect ((this camera-bank))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this (-> this type))
  (format #t "~1Tcollide-move-rad: ~f~%" (-> this collide-move-rad))
  (format #t "~1Tjoypad: ~D~%" (-> this joypad))
  (format #t "~1Tmin-detectable-velocity: ~f~%" (-> this min-detectable-velocity))
  (format #t "~1Tattack-timeout: ~D~%" (-> this attack-timeout))
  (format #t "~1Tdefault-string-max-y: (meters ~m)~%" (-> this default-string-max-y))
  (format #t "~1Tdefault-string-min-y: (meters ~m)~%" (-> this default-string-min-y))
  (format #t "~1Tdefault-string-max-z: (meters ~m)~%" (-> this default-string-max-z))
  (format #t "~1Tdefault-string-min-z: (meters ~m)~%" (-> this default-string-min-z))
  (format #t "~1Tdefault-string-push-z: (meters ~m)~%" (-> this default-string-push-z))
  (format #t "~1Tdefault-tilt-adjust: (deg ~r)~%" (-> this default-tilt-adjust))
  (label cfg-4)
  this
  )

;; definition for symbol *CAMERA-bank*, type camera-bank
(define *CAMERA-bank* (new 'static 'camera-bank
                        :collide-move-rad 1638.4
                        :min-detectable-velocity 40.96
                        :attack-timeout (seconds 0.25)
                        :default-string-max-y (meters 3)
                        :default-string-min-y (meters 1)
                        :default-string-max-z (meters 12.5)
                        :default-string-min-z (meters 5)
                        :default-string-push-z (meters 10)
                        :default-tilt-adjust (degrees -6.5000005)
                        )
        )

;; definition of type camera-master-bank
(deftype camera-master-bank (basic)
  ((onscreen-head-height             meters)
   (onscreen-foot-height             meters)
   (target-height                    meters)
   (up-move-to-pitch-ratio-in-air    float)
   (down-move-to-pitch-ratio-in-air  float)
   (up-move-to-pitch-on-ground       float)
   (down-move-to-pitch-on-ground     float)
   (pitch-off-blend                  float)
   )
  )

;; definition for method 3 of type camera-master-bank
(defmethod inspect ((this camera-master-bank))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this (-> this type))
  (format #t "~1Tonscreen-head-height: (meters ~m)~%" (-> this onscreen-head-height))
  (format #t "~1Tonscreen-foot-height: (meters ~m)~%" (-> this onscreen-foot-height))
  (format #t "~1Ttarget-height: (meters ~m)~%" (-> this target-height))
  (format #t "~1Tup-move-to-pitch-ratio-in-air: ~f~%" (-> this up-move-to-pitch-ratio-in-air))
  (format #t "~1Tdown-move-to-pitch-ratio-in-air: ~f~%" (-> this down-move-to-pitch-ratio-in-air))
  (format #t "~1Tup-move-to-pitch-on-ground: ~f~%" (-> this up-move-to-pitch-on-ground))
  (format #t "~1Tdown-move-to-pitch-on-ground: ~f~%" (-> this down-move-to-pitch-on-ground))
  (format #t "~1Tpitch-off-blend: ~f~%" (-> this pitch-off-blend))
  (label cfg-4)
  this
  )

;; definition for symbol *CAMERA_MASTER-bank*, type camera-master-bank
(define *CAMERA_MASTER-bank* (new 'static 'camera-master-bank
                               :onscreen-head-height (meters 2.65)
                               :onscreen-foot-height (meters -0.5)
                               :target-height (meters 2.15)
                               :up-move-to-pitch-ratio-in-air 1.0
                               :down-move-to-pitch-ratio-in-air 0.5
                               :up-move-to-pitch-on-ground 0.9
                               :down-move-to-pitch-on-ground 0.9
                               :pitch-off-blend 0.5
                               )
        )

;; failed to figure out what this is:
0
