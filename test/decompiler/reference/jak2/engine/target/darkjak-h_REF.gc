;;-*-Lisp-*-
(in-package goal)

;; definition of type darkjak-info
(deftype darkjak-info (basic)
  ((process      uint32       :offset-assert   4)
   (attack-id    uint32       :offset-assert   8)
   (start-time   time-frame   :offset-assert  16)
   (attack-time  time-frame   :offset-assert  24)
   (attack-count uint64       :offset-assert  32)
   (stage        uint32       :offset-assert  40)
   (want-stage   uint32       :offset-assert  44)
   (clock-pos    float        :offset-assert  48)
   (clock-vel    float        :offset-assert  52)
   (clock-on     symbol       :offset-assert  56)
   (hud          handle     1 :offset         64)
   (tone         uint32       :offset         72)
   (bomb         uint32       :offset         76)
   )
  :method-count-assert 10
  :size-assert         #x50
  :flag-assert         #xa00000050
  (:methods
    (darkjak-info-method-9 (_type_ int) none :behavior target 9)
    )
  )

;; definition for method 3 of type darkjak-info
(defmethod inspect darkjak-info ((obj darkjak-info))
  (when (not obj)
    (set! obj obj)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" obj (-> obj type))
  (format #t "~1Tprocess: #x~X~%" (-> obj process))
  (format #t "~1Tattack-id: ~D~%" (-> obj attack-id))
  (format #t "~1Tstart-time: ~D~%" (-> obj start-time))
  (format #t "~1Tattack-time: ~D~%" (-> obj attack-time))
  (format #t "~1Tattack-count: ~D~%" (-> obj attack-count))
  (format #t "~1Tstage: ~D~%" (-> obj stage))
  (format #t "~1Twant-stage: ~D~%" (-> obj want-stage))
  (format #t "~1Tclock-pos: ~f~%" (-> obj clock-pos))
  (format #t "~1Tclock-vel: ~f~%" (-> obj clock-vel))
  (format #t "~1Tclock-on: ~A~%" (-> obj clock-on))
  (format #t "~1Thud[1] @ #x~X~%" (-> obj hud))
  (format #t "~1Ttone: ~D~%" (-> obj tone))
  (format #t "~1Tbomb: ~D~%" (-> obj bomb))
  (label cfg-4)
  obj
  )

;; failed to figure out what this is:
0
