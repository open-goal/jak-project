;;-*-Lisp-*-
(in-package goal)

(rlet ((vf0 :class vf))
(init-vf0-vector)

;; definition for symbol *external-cam-options*, type int
(define *external-cam-options* 0)

;; definition for symbol *external-cam-mode*, type symbol
(define *external-cam-mode* #f)

;; failed to figure out what this is:
(when (or (not *camera-look-through-other*) (zero? *camera-look-through-other*))
  (set! *camera-look-through-other* 0)
  (let ((v1-4 0))
   )
  )

;; definition (perm) for symbol *camera-other-fov*, type bfloat
(define-perm *camera-other-fov* bfloat (new 'static 'bfloat :data 11650.845))

;; failed to figure out what this is:
(when (or (not *camera-other-trans*) (zero? *camera-other-trans*))
  (let ((v1-15 (new 'global 'vector)))
   (.svf (&-> v1-15 quad) vf0)
   (set! *camera-other-trans* v1-15)
   )
  )

;; definition (perm) for symbol *camera-other-matrix*, type matrix
(define-perm *camera-other-matrix* matrix
  (matrix-identity! (new 'global 'matrix))
  )

;; definition (perm) for symbol *camera-smush-control*, type smush-control
(define-perm *camera-smush-control* smush-control
  (set-zero! (new 'global 'smush-control))
  )

;; failed to figure out what this is:
(when (or (not *camera-other-root*) (zero? *camera-other-root*))
  (let ((v1-34 (new 'global 'vector)))
   (.svf (&-> v1-34 quad) vf0)
   (set! *camera-other-root* v1-34)
   )
  )

;; failed to figure out what this is:
(let ((v0-6 0))
  )

;; failed to figure out what this is:
(none)

)



