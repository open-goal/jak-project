;;-*-Lisp-*-
(in-package goal)

;; definition of type pov-camera
(deftype pov-camera (process-drawable)
  ((cspace-array        cspace-array     :offset        112)
   (flags               pov-camera-flag  :offset-assert 176)
   (debounce-start-time time-frame       :offset-assert 184)
   (notify-handle       handle           :offset-assert 192)
   (anim-name           string           :offset-assert 200)
   (command-list        pair             :offset-assert 204)
   (mask-to-clear       process-mask     :offset-assert 208)
   (music-volume-movie  float            :offset-assert 212)
   (sfx-volume-movie    float            :offset-assert 216)
   )
  :heap-base #x70
  :method-count-assert 30
  :size-assert         #xdc
  :flag-assert         #x1e007000dc
  (:methods
    (pov-camera-abort () _type_ :state 20)
    (pov-camera-done-playing () _type_ :state 21)
    (pov-camera-playing () _type_ :state 22)
    (pov-camera-start-playing () _type_ :state 23)
    (pov-camera-startup () _type_ :state 24)
    (check-for-abort (_type_) symbol 25)
    (target-grabbed? (_type_) symbol 26)
    (pre-startup-callback (_type_) none 27)
    (target-released? () symbol 28)
    (set-stack-size! (_type_) none 29)
    )
  )

;; definition for method 3 of type pov-camera
(defmethod inspect pov-camera ((obj pov-camera))
  (let ((t9-0 (method-of-type process-drawable inspect)))
    (t9-0 obj)
    )
  (format #t "~T~Tflags: ~D~%" (-> obj flags))
  (format #t "~T~Tdebounce-start-time: ~D~%" (-> obj debounce-start-time))
  (format #t "~T~Tnotify-handle: ~D~%" (-> obj notify-handle))
  (format #t "~T~Tanim-name: ~A~%" (-> obj anim-name))
  (format #t "~T~Tcommand-list: ~A~%" (-> obj command-list))
  (format #t "~T~Tmask-to-clear: ~D~%" (-> obj mask-to-clear))
  (format #t "~T~Tmusic-volume-movie: ~f~%" (-> obj music-volume-movie))
  (format #t "~T~Tsfx-volume-movie: ~f~%" (-> obj sfx-volume-movie))
  obj
  )

;; failed to figure out what this is:
0
