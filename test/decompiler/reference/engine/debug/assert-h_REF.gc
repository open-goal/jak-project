;;-*-Lisp-*-
(in-package goal)

;; definition of type __assert-info-private-struct
(deftype __assert-info-private-struct (structure)
  ((filename   string  :offset-assert   0)
   (line-num   uint16  :offset-assert   4)
   (column-num uint16  :offset-assert   6)
   )
  :method-count-assert 11
  :size-assert         #x8
  :flag-assert         #xb00000008
  (:methods
    (set-pos (_type_ string uint uint) int 9)
    (print-pos (_type_) int 10)
    )
  )

;; definition for method 3 of type __assert-info-private-struct
(defmethod inspect __assert-info-private-struct ((obj __assert-info-private-struct))
  (format #t "[~8x] ~A~%" obj '__assert-info-private-struct)
  (format #t "~Tfilename: ~A~%" (-> obj filename))
  (format #t "~Tline-num: ~D~%" (-> obj line-num))
  (format #t "~Tcolumn-num: ~D~%" (-> obj column-num))
  obj
  )

;; definition for method 9 of type __assert-info-private-struct
(defmethod set-pos __assert-info-private-struct ((obj __assert-info-private-struct) (filename string) (line-num uint) (column-num uint))
  (set! (-> obj filename) filename)
  (set! (-> obj line-num) line-num)
  (set! (-> obj column-num) column-num)
  0
  )

;; definition for method 10 of type __assert-info-private-struct
(defmethod print-pos __assert-info-private-struct ((obj __assert-info-private-struct))
  (format #t "file ~S.gc, line ~D, col ~D.~%" (-> obj filename) (-> obj line-num) (-> obj column-num))
  0
  )

;; definition for symbol *__private-assert-info*, type __assert-info-private-struct
(define *__private-assert-info* (new 'static '__assert-info-private-struct))

;; failed to figure out what this is:
0
