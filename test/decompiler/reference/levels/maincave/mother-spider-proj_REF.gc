;;-*-Lisp-*-
(in-package goal)

;; definition of type mother-spider-proj
(deftype mother-spider-proj (projectile)
  ((parent-process (pointer projectile)         :offset         12)
   (facing-dir     vector               :inline :offset-assert 416)
   )
  :heap-base #x140
  :method-count-assert 29
  :size-assert         #x1b0
  :flag-assert         #x1d014001b0
  )

;; definition for method 3 of type mother-spider-proj
(defmethod inspect mother-spider-proj ((obj mother-spider-proj))
  (let ((t9-0 (method-of-type projectile inspect)))
   (t9-0 obj)
   )
  (format #t "~T~Tfacing-dir: #<vector @ #x~X>~%" (-> obj facing-dir))
  obj
  )

;; failed to figure out what this is:
(set!
  (-> *part-group-id-table* 326)
  (new 'static 'sparticle-launch-group
   :length 48
   :duration #x12c
   :linger-duration #x5dc
   :name "group-mother-spider-proj-fly"
   :launcher
   (new 'static 'inline-array sparticle-group-item 48
    (new 'static 'sparticle-group-item
     :launcher #x2ce
     :flags #x8
     :binding #x2cc
     )
    (new 'static 'sparticle-group-item
     :launcher #x2cc
     :flags #x4
     :binding #x2cd
     )
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    (new 'static 'sparticle-group-item :launcher #x2cd :flags #xc)
    )
   :bounds (new 'static 'sphere :w 12288.0)
   )
  )

;; failed to figure out what this is:
(set!
  (-> *part-id-table* 718)
  (new 'static 'sparticle-launcher
   :init-specs
   (new 'static 'inline-array sp-field-init-spec 9
    (new 'static 'sp-field-init-spec
     :field #x1
     :initial-valuef (the-as float #x201200)
     )
    (new 'static 'sp-field-init-spec
     :field #x6
     :flags #x1
     :initial-valuef 1.0
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #xd
     :flags #x1
     :initial-valuef 40.96
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x11
     :flags #x3
     :initial-valuef (the-as float #xfffffffc)
     :random-multf (the-as float #x1)
     )
    (new 'static 'sp-field-init-spec :field #x15 :flags #x1 :random-multf 1.0)
    (new 'static 'sp-field-init-spec
     :field #x2e
     :initial-valuef (the-as float #x4b0)
     :random-multf (the-as float #x1)
     )
    (new 'static 'sp-field-init-spec
     :field #x2f
     :initial-valuef (the-as float #x8)
     :random-multf (the-as float #x1)
     )
    (new 'static 'sp-field-init-spec
     :field #x31
     :flags #x5
     :sym 'sparticle-track-root-prim
     )
    (new 'static 'sp-field-init-spec :field #x43)
    )
   )
  )

;; failed to figure out what this is:
(set!
  (-> *part-id-table* 716)
  (new 'static 'sparticle-launcher
   :init-specs
   (new 'static 'inline-array sp-field-init-spec 22
    (new 'static 'sp-field-init-spec
     :field #x1
     :initial-valuef (the-as float #x200f00)
     )
    (new 'static 'sp-field-init-spec
     :field #x6
     :flags #x1
     :initial-valuef 1.0
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #xd
     :flags #x1
     :initial-valuef 4096.0
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x10
     :flags #x1
     :random-rangef 65536.0
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x11
     :flags #x3
     :initial-valuef (the-as float #xfffffffc)
     :random-multf (the-as float #x1)
     )
    (new 'static 'sp-field-init-spec
     :field #x12
     :flags #x1
     :initial-valuef 96.0
     :random-rangef 64.0
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x13
     :flags #x1
     :initial-valuef 64.0
     :random-rangef 32.0
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x14
     :flags #x1
     :initial-valuef 96.0
     :random-rangef 64.0
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x15
     :flags #x1
     :initial-valuef 128.0
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x1c
     :flags #x1
     :initial-valuef -27.306667
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x20
     :flags #x3
     :initial-valuef (the-as float #xfffffffc)
     :random-multf (the-as float #x1)
     )
    (new 'static 'sp-field-init-spec
     :field #x21
     :flags #x1
     :initial-valuef -1.0666667
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x22
     :flags #x1
     :initial-valuef -1.0666667
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec :field #x23 :flags #x1 :random-multf 1.0)
    (new 'static 'sp-field-init-spec
     :field #x2e
     :initial-valuef (the-as float #x96)
     :random-multf (the-as float #x1)
     )
    (new 'static 'sp-field-init-spec
     :field #x2f
     :initial-valuef (the-as float #x4)
     :random-multf (the-as float #x1)
     )
    (new 'static 'sp-field-init-spec
     :field #x32
     :initial-valuef (the-as float #x51)
     :random-multf (the-as float #x1)
     )
    (new 'static 'sp-field-init-spec
     :field #x33
     :flags #x6
     :initial-valuef (the-as float #x2d0)
     )
    (new 'static 'sp-field-init-spec
     :field #x3a
     :flags #x1
     :random-rangef 65536.0
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x3b
     :flags #x1
     :random-rangef 65536.0
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x3e
     :flags #x1
     :initial-valuef 409.6
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec :field #x43)
    )
   )
  )

;; failed to figure out what this is:
(set!
  (-> *part-id-table* 720)
  (new 'static 'sparticle-launcher
   :init-specs
   (new 'static 'inline-array sp-field-init-spec 4
    (new 'static 'sp-field-init-spec :field #x21 :flags #x1 :random-multf 1.0)
    (new 'static 'sp-field-init-spec :field #x22 :flags #x1 :random-multf 1.0)
    (new 'static 'sp-field-init-spec :field #x23 :flags #x1 :random-multf 1.0)
    (new 'static 'sp-field-init-spec :field #x43)
    )
   )
  )

;; failed to figure out what this is:
(set!
  (-> *part-id-table* 717)
  (new 'static 'sparticle-launcher
   :init-specs
   (new 'static 'inline-array sp-field-init-spec 25
    (new 'static 'sp-field-init-spec
     :field #x1
     :initial-valuef (the-as float #x200f00)
     )
    (new 'static 'sp-field-init-spec
     :field #x6
     :flags #x1
     :initial-valuef 1.0
     :random-rangef 5.0
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #xd
     :flags #x1
     :initial-valuef 819.2
     :random-rangef 409.6
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x10
     :flags #x1
     :random-rangef 65536.0
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x11
     :flags #x3
     :initial-valuef (the-as float #xfffffffc)
     :random-multf (the-as float #x1)
     )
    (new 'static 'sp-field-init-spec
     :field #x12
     :flags #x1
     :initial-valuef 96.0
     :random-rangef 64.0
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x13
     :flags #x1
     :initial-valuef 64.0
     :random-rangef 32.0
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x14
     :flags #x1
     :initial-valuef 96.0
     :random-rangef 64.0
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x15
     :flags #x1
     :initial-valuef 128.0
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x1a
     :flags #x1
     :initial-valuef 27.306667
     :random-rangef 13.653334
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x1c
     :flags #x1
     :initial-valuef -10.922667
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x20
     :flags #x3
     :initial-valuef (the-as float #xfffffffc)
     :random-multf (the-as float #x1)
     )
    (new 'static 'sp-field-init-spec
     :field #x21
     :flags #x1
     :initial-valuef -1.0666667
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x22
     :flags #x1
     :initial-valuef -1.0666667
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec :field #x23 :flags #x1 :random-multf 1.0)
    (new 'static 'sp-field-init-spec
     :field #x26
     :flags #x1
     :initial-valuef -2.7306666
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x2d
     :flags #x1
     :initial-valuef 0.97
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x2e
     :initial-valuef (the-as float #x1e)
     :random-rangef (the-as float #x77)
     :random-multf (the-as float #x1)
     )
    (new 'static 'sp-field-init-spec
     :field #x2f
     :initial-valuef (the-as float #x4)
     :random-multf (the-as float #x1)
     )
    (new 'static 'sp-field-init-spec
     :field #x32
     :initial-valuef (the-as float #x3c)
     :random-multf (the-as float #x1)
     )
    (new 'static 'sp-field-init-spec
     :field #x33
     :flags #x6
     :initial-valuef (the-as float #x2d0)
     )
    (new 'static 'sp-field-init-spec
     :field #x3a
     :flags #x1
     :random-rangef 65536.0
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x3b
     :flags #x1
     :random-rangef 65536.0
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x3e
     :flags #x1
     :random-rangef 1638.4
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec :field #x43)
    )
   )
  )

;; failed to figure out what this is:
(set!
  (-> *part-group-id-table* 327)
  (new 'static 'sparticle-launch-group
   :length 3
   :duration #x5
   :linger-duration #x5dc
   :flags #x1
   :name "group-mother-spider-proj-hit"
   :launcher
   (new 'static 'inline-array sparticle-group-item 3
    (new 'static 'sparticle-group-item :launcher #x2d2)
    (new 'static 'sparticle-group-item :launcher #x2d3)
    (new 'static 'sparticle-group-item :launcher #x2d4)
    )
   :bounds (new 'static 'sphere :w 32768.0)
   )
  )

;; failed to figure out what this is:
(set!
  (-> *part-id-table* 722)
  (new 'static 'sparticle-launcher
   :init-specs
   (new 'static 'inline-array sp-field-init-spec 24
    (new 'static 'sp-field-init-spec
     :field #x1
     :initial-valuef (the-as float #x200f00)
     )
    (new 'static 'sp-field-init-spec
     :field #x6
     :flags #x1
     :initial-valuef 64.0
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #xd
     :flags #x1
     :initial-valuef 2048.0
     :random-rangef 819.2
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x11
     :flags #x3
     :initial-valuef (the-as float #xfffffffc)
     :random-multf (the-as float #x1)
     )
    (new 'static 'sp-field-init-spec
     :field #x12
     :flags #x1
     :initial-valuef 192.0
     :random-rangef 32.0
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x13
     :flags #x1
     :initial-valuef 64.0
     :random-rangef 32.0
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x14
     :flags #x1
     :initial-valuef 96.0
     :random-rangef 64.0
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x15
     :flags #x1
     :initial-valuef 128.0
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x1a
     :flags #x1
     :initial-valuef 436.90668
     :random-rangef 436.90668
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x1c
     :flags #x1
     :initial-valuef -27.306667
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x20
     :flags #x3
     :initial-valuef (the-as float #xfffffffc)
     :random-multf (the-as float #x1)
     )
    (new 'static 'sp-field-init-spec
     :field #x21
     :flags #x1
     :initial-valuef -0.7111111
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x22
     :flags #x1
     :initial-valuef -0.7111111
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec :field #x23 :flags #x1 :random-multf 1.0)
    (new 'static 'sp-field-init-spec
     :field #x26
     :flags #x1
     :initial-valuef -0.68266666
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x2d
     :flags #x1
     :initial-valuef 0.85
     :random-rangef 0.05
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x2e
     :initial-valuef (the-as float #x1e)
     :random-rangef (the-as float #x77)
     :random-multf (the-as float #x1)
     )
    (new 'static 'sp-field-init-spec
     :field #x2f
     :initial-valuef (the-as float #x4)
     :random-multf (the-as float #x1)
     )
    (new 'static 'sp-field-init-spec
     :field #x32
     :initial-valuef (the-as float #x5a)
     :random-multf (the-as float #x1)
     )
    (new 'static 'sp-field-init-spec
     :field #x33
     :flags #x6
     :initial-valuef (the-as float #x2d0)
     )
    (new 'static 'sp-field-init-spec
     :field #x3a
     :flags #x1
     :random-rangef 65536.0
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x3b
     :flags #x1
     :random-rangef 65536.0
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x3e
     :flags #x1
     :random-rangef 1638.4
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec :field #x43)
    )
   )
  )

;; failed to figure out what this is:
(set!
  (-> *part-id-table* 724)
  (new 'static 'sparticle-launcher
   :init-specs
   (new 'static 'inline-array sp-field-init-spec 21
    (new 'static 'sp-field-init-spec
     :field #x1
     :initial-valuef (the-as float #x200000)
     )
    (new 'static 'sp-field-init-spec
     :field #x6
     :flags #x1
     :initial-valuef 6.0
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #xd
     :flags #x1
     :initial-valuef 12288.0
     :random-rangef 12288.0
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x10
     :flags #x1
     :random-rangef 65536.0
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x11
     :flags #x3
     :initial-valuef (the-as float #xfffffffc)
     :random-multf (the-as float #x1)
     )
    (new 'static 'sp-field-init-spec
     :field #x12
     :flags #x1
     :initial-valuef 96.0
     :random-rangef 64.0
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x13
     :flags #x1
     :initial-valuef 64.0
     :random-rangef 32.0
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x14
     :flags #x1
     :initial-valuef 96.0
     :random-rangef 64.0
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x15
     :flags #x1
     :initial-valuef 32.0
     :random-rangef 32.0
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x1f
     :flags #x1
     :initial-valuef -36.40889
     :random-rangef 72.81778
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x21
     :flags #x1
     :initial-valuef -0.35555556
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x22
     :flags #x1
     :initial-valuef -0.35555556
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec :field #x23 :flags #x1 :random-multf 1.0)
    (new 'static 'sp-field-init-spec
     :field #x24
     :flags #x1
     :initial-valuef -0.30476192
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x26
     :flags #x1
     :initial-valuef -0.68266666
     :random-rangef 0.68266666
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x2e
     :initial-valuef (the-as float #xd2)
     :random-multf (the-as float #x1)
     )
    (new 'static 'sp-field-init-spec
     :field #x2f
     :initial-valuef (the-as float #x4)
     :random-multf (the-as float #x1)
     )
    (new 'static 'sp-field-init-spec
     :field #x32
     :initial-valuef (the-as float #x3c)
     :random-multf (the-as float #x1)
     )
    (new 'static 'sp-field-init-spec
     :field #x33
     :flags #x6
     :initial-valuef (the-as float #x2d0)
     )
    (new 'static 'sp-field-init-spec
     :field #x3f
     :flags #x1
     :random-rangef 32768.0
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec :field #x43)
    )
   )
  )

;; failed to figure out what this is:
(set!
  (-> *part-id-table* 723)
  (new 'static 'sparticle-launcher
   :init-specs
   (new 'static 'inline-array sp-field-init-spec 13
    (new 'static 'sp-field-init-spec
     :field #x1
     :initial-valuef (the-as float #x200f00)
     )
    (new 'static 'sp-field-init-spec
     :field #x6
     :flags #x1
     :initial-valuef 1.0
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #xd
     :flags #x1
     :initial-valuef 24576.0
     :random-rangef 4096.0
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x10
     :flags #x1
     :random-rangef 65536.0
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x11
     :flags #x3
     :initial-valuef (the-as float #xfffffffc)
     :random-multf (the-as float #x1)
     )
    (new 'static 'sp-field-init-spec
     :field #x12
     :flags #x1
     :initial-valuef 128.0
     :random-rangef 32.0
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x13
     :flags #x1
     :initial-valuef 64.0
     :random-rangef 32.0
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x14
     :flags #x1
     :initial-valuef 128.0
     :random-rangef 32.0
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x15
     :flags #x1
     :initial-valuef 96.0
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x24
     :flags #x1
     :initial-valuef -4.8
     :random-multf 1.0
     )
    (new 'static 'sp-field-init-spec
     :field #x2e
     :initial-valuef (the-as float #xf)
     :random-multf (the-as float #x1)
     )
    (new 'static 'sp-field-init-spec
     :field #x2f
     :initial-valuef (the-as float #x4)
     :random-multf (the-as float #x1)
     )
    (new 'static 'sp-field-init-spec :field #x43)
    )
   )
  )

;; failed to figure out what this is:
(set!
  (-> *part-group-id-table* 328)
  (new 'static 'sparticle-launch-group
   :length 1
   :duration #x5
   :linger-duration #x5dc
   :flags #x1
   :name "group-mother-spider-proj-die"
   :launcher
   (new 'static 'inline-array sparticle-group-item 1
    (new 'static 'sparticle-group-item :launcher #x2d2)
    )
   :bounds (new 'static 'sphere :w 32768.0)
   )
  )

;; definition for method 24 of type mother-spider-proj
(defmethod dummy-24 mother-spider-proj ((obj mother-spider-proj))
  (with-pp
   (dummy-11
    (-> obj part)
    (the-as vector (-> obj root-override root-prim prim-core))
    )
   (let ((s5-0 (the-as sound-rpc-set-param (get-sound-buffer-entry))))
    (set! (-> s5-0 command) (sound-command set-param))
    (set! (-> s5-0 id) (-> obj sound-id))
    (let ((a1-1 (-> obj root-override trans)))
     (let ((s4-0 pp))
      (when (= a1-1 #t)
       (if
        (and
         s4-0
         (type-type? (-> s4-0 type) process-drawable)
         (nonzero? (-> (the-as process-drawable s4-0) root))
         )
        (set! a1-1 (-> (the-as process-drawable s4-0) root trans))
        (set! a1-1 (the-as vector #f))
        )
       )
      )
     (sound-trans-convert (-> s5-0 parms trans) a1-1)
     )
    (set! (-> s5-0 parms mask) (the-as uint 32))
    (-> s5-0 id)
    )
   (let
    ((f0-5
      (*
       5120.0
       (+
        0.9
        (*
         0.1
         (cos
          (* 873.81335 (the float (mod (-> *display* base-frame-counter) 75)))
          )
         )
        )
       )
      )
     )
    (find-ground-and-draw-shadow
     (-> obj root-override trans)
     (the-as vector #f)
     f0-5
     (the-as uint 1)
     (the-as process #f)
     0.0
     81920.0
     )
    )
   (none)
   )
  )

;; definition for function mother-spider-proj-update-velocity
;; INFO: Return type mismatch int vs none.
(defun mother-spider-proj-update-velocity ((arg0 mother-spider-proj))
  (when
   (>=
    (vector-vector-xz-distance
     (-> arg0 parent-process 0 root-override trans)
     (-> arg0 target)
     )
    (vector-vector-xz-distance
     (-> arg0 parent-process 0 root-override trans)
     (-> arg0 root-override trans)
     )
    )
   (let
    ((s3-1
      (vector-!
       (new 'stack-no-clear 'vector)
       (-> arg0 target)
       (-> arg0 root-override trans)
       )
      )
     (s4-0 (new 'stack-no-clear 'vector))
     (s5-0
      (vector-normalize-copy!
       (new 'stack-no-clear 'vector)
       (-> arg0 root-override transv)
       1.0
       )
      )
     )
    (if (logtest? (-> arg0 root-override status) 4)
     (vector-flatten! s3-1 s3-1 (-> arg0 root-override local-normal))
     )
    (vector-normalize-copy! s4-0 s3-1 1.0)
    (let ((s3-2 (new 'stack-no-clear 'vector)))
     (matrix-from-two-vectors-max-angle-partial!
      (the-as matrix s3-2)
      s5-0
      s4-0
      (* (-> arg0 max-turn) (-> *display* seconds-per-frame))
      (-> arg0 tween)
      )
     (vector-matrix*! s5-0 s5-0 (the-as matrix s3-2))
     )
    (vector-normalize! s5-0 1.0)
    (vector-float*! (-> arg0 root-override transv) s5-0 (-> arg0 max-speed))
    )
   )
  0
  (none)
  )

;; definition for method 26 of type mother-spider-proj
;; INFO: Return type mismatch int vs none.
(defmethod dummy-26 mother-spider-proj ((obj mother-spider-proj))
  (let
   ((s5-0
     (new 'process 'collide-shape-moving obj (collide-list-enum hit-by-player))
     )
    )
   (set! (-> s5-0 dynam) (copy *standard-dynamics* 'process))
   (set! (-> s5-0 reaction) projectile-collision-reaction)
   (set! (-> s5-0 no-reaction) nothing)
   (let ((s4-0 (new 'process 'collide-shape-prim-sphere s5-0 (the-as uint 0))))
    (set! (-> s4-0 prim-core collide-as) (the-as uint 1024))
    (set! (-> s4-0 collide-with) (the-as uint 2973))
    (set! (-> s4-0 prim-core action) (the-as uint 1))
    (set! (-> s4-0 prim-core offense) 3)
    (set-vector! (-> s4-0 local-sphere) 0.0 0.0 0.0 1228.8)
    )
   (dummy-46 s5-0)
   (set! (-> s5-0 nav-radius) (* 0.75 (-> s5-0 root-prim local-sphere w)))
   (dummy-50 s5-0)
   (set! (-> s5-0 max-iteration-count) (the-as uint 2))
   (set! (-> s5-0 event-self) 'touched)
   (set! (-> obj root-override) s5-0)
   )
  (logclear! (-> obj mask) (process-mask enemy))
  (logclear! (-> obj mask) (process-mask crate))
  (logclear! (-> obj mask) (process-mask attackable))
  (set! (-> obj mask) (logior (process-mask projectile) (-> obj mask)))
  0
  (none)
  )

;; definition for method 27 of type mother-spider-proj
;; INFO: Return type mismatch sound-id vs none.
;; Used lq/sq
(defmethod dummy-27 mother-spider-proj ((obj mother-spider-proj))
  (set!
   (-> obj part)
   (create-launch-control (-> *part-group-id-table* 326) obj)
   )
  (set! (-> obj max-speed) 32768.0)
  (set! (-> obj update-velocity) mother-spider-proj-update-velocity)
  (set! (-> obj max-turn) 5916.4443)
  (set! (-> obj tween) 0.02)
  (set! (-> obj attack-mode) 'mother-spider-proj)
  (set! (-> obj timeout) (the-as uint 1200))
  (set! (-> obj target quad) (-> (target-pos 0) quad))
  (set! (-> obj target y) (+ 4915.2 (-> obj target y)))
  (set! (-> obj target-base quad) (-> obj target quad))
  (set!
   (-> obj sound-id)
   (sound-play-by-name
    (static-sound-name "mother-track")
    (new-sound-id)
    1024
    0
    0
    (the-as uint 1)
    (the-as vector #t)
    )
   )
  (sound-play-by-name
   (static-sound-name "mother-fire")
   (new-sound-id)
   1024
   0
   0
   (the-as uint 1)
   (the-as vector #t)
   )
  (none)
  )

;; definition for method 28 of type mother-spider-proj
;; INFO: Return type mismatch vector vs none.
;; Used lq/sq
(defmethod dummy-28 mother-spider-proj ((obj mother-spider-proj))
  (when (and *target* (zero? (logand (-> *target* state-flags) #x80f8)))
   (let ((gp-0 (-> obj target)))
    (set! (-> gp-0 quad) (-> (target-pos 0) quad))
    (set! (-> gp-0 y) (+ 4915.2 (-> gp-0 y)))
    (let ((f0-2 (vector-vector-distance gp-0 (-> obj root-override trans)))
          (a2-0 (new 'stack-no-clear 'vector))
          )
     (if (>= 0.0 f0-2)
      (set! f0-2 409.6)
      )
     (set! (-> a2-0 quad) (-> *target* control transv quad))
     (set! (-> a2-0 y) 0.0)
     (let ((f0-3 (/ f0-2 (* 32768.0 (-> *display* seconds-per-frame)))))
      (vector+float*! gp-0 gp-0 a2-0 (* f0-3 (-> *display* seconds-per-frame)))
      )
     )
    )
   )
  (none)
  )

;; failed to figure out what this is:
(defstate projectile-impact (mother-spider-proj)
  :virtual #t
  :code
  (behavior ()
   (let ((gp-0 (get-process *default-dead-pool* part-tracker #x4000)))
    (when gp-0
     (let ((t9-1 (method-of-type part-tracker activate)))
      (t9-1
       (the-as part-tracker gp-0)
       *entity-pool*
       'part-tracker
       (the-as pointer #x70004000)
       )
      )
     (run-now-in-process
      gp-0
      part-tracker-init
      (-> *part-group-id-table* 327)
      -1
      #f
      #f
      #f
      (-> self root-override trans)
      )
     (-> gp-0 ppointer)
     )
    )
   (if (nonzero? (-> self sound-id))
    (sound-stop (-> self sound-id))
    )
   (sound-play-by-name
    (static-sound-name "mother-hit")
    (new-sound-id)
    1024
    0
    0
    (the-as uint 1)
    (the-as vector #t)
    )
   (suspend)
   (go-virtual projectile-die)
   (none)
   )
  )

;; failed to figure out what this is:
(defstate projectile-dissipate (mother-spider-proj)
  :virtual #t
  :code
  (behavior ()
   (let ((gp-0 (get-process *default-dead-pool* part-tracker #x4000)))
    (when gp-0
     (let ((t9-1 (method-of-type part-tracker activate)))
      (t9-1
       (the-as part-tracker gp-0)
       *entity-pool*
       'part-tracker
       (the-as pointer #x70004000)
       )
      )
     (run-now-in-process
      gp-0
      part-tracker-init
      (-> *part-group-id-table* 328)
      -1
      #f
      #f
      #f
      (-> self root-override trans)
      )
     (-> gp-0 ppointer)
     )
    )
   (if (nonzero? (-> self sound-id))
    (sound-stop (-> self sound-id))
    )
   (suspend)
   (go-virtual projectile-die)
   (none)
   )
  )




