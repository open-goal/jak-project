;;-*-Lisp-*-
(in-package goal)

;; definition of type assault-cam-info
(deftype assault-cam-info (structure)
  ((pos  vector  :inline)
   (mat  matrix  :inline)
   )
  )

;; definition for method 3 of type assault-cam-info
(defmethod inspect ((this assault-cam-info))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this 'assault-cam-info)
  (format #t "~1Tpos: #<vector @ #x~X>~%" (-> this pos))
  (format #t "~1Tmat: #<matrix @ #x~X>~%" (-> this mat))
  (label cfg-4)
  this
  )

;; definition of type triangle-dists
(deftype triangle-dists (structure)
  ((dist0  float)
   (dist1  float)
   )
  )

;; definition for method 3 of type triangle-dists
(defmethod inspect ((this triangle-dists))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this 'triangle-dists)
  (format #t "~1Tdist0: ~f~%" (-> this dist0))
  (format #t "~1Tdist1: ~f~%" (-> this dist1))
  (label cfg-4)
  this
  )

;; definition of type assault-room-collision
(deftype assault-room-collision (structure)
  ((cam-matrix     matrix          :inline)
   (cam-pos        vector          :inline)
   (clip-dists     triangle-dists  :inline)
   (hoz-clip-dist  float)
   )
  )

;; definition for method 3 of type assault-room-collision
(defmethod inspect ((this assault-room-collision))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this 'assault-room-collision)
  (format #t "~1Tcam-matrix: #<matrix @ #x~X>~%" (-> this cam-matrix))
  (format #t "~1Tcam-pos: #<vector @ #x~X>~%" (-> this cam-pos))
  (format #t "~1Tclip-dists: #<triangle-dists @ #x~X>~%" (-> this clip-dists))
  (format #t "~1Thoz-clip-dist: ~f~%" (-> this hoz-clip-dist))
  (label cfg-4)
  this
  )

;; definition of type assault-room
(deftype assault-room (structure)
  ((center-pos      vector  :inline)
   (cam-info        assault-cam-info)
   (collision       assault-room-collision)
   (node-positions  (array vector))
   )
  )

;; definition for method 3 of type assault-room
(defmethod inspect ((this assault-room))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this 'assault-room)
  (format #t "~1Tcenter-pos: #<vector @ #x~X>~%" (-> this center-pos))
  (format #t "~1Tcam-info: #<assault-cam-info @ #x~X>~%" (-> this cam-info))
  (format #t "~1Tcollision: #<assault-room-collision @ #x~X>~%" (-> this collision))
  (format #t "~1Tnode-positions: ~A~%" (-> this node-positions))
  (label cfg-4)
  this
  )

;; definition for symbol *assault-speech-list*, type (inline-array talker-speech-class)
(define *assault-speech-list* (new 'static 'inline-array talker-speech-class 22
                                (new 'static 'talker-speech-class :name "none")
                                (new 'static 'talker-speech-class
                                  :name "torn102"
                                  :channel (gui-channel voicebox)
                                  :speech #x1
                                  :neg #x1
                                  :on-close #f
                                  :camera #f
                                  )
                                (new 'static 'talker-speech-class
                                  :name "torn202"
                                  :channel (gui-channel voicebox)
                                  :speech #x2
                                  :neg #x1
                                  :on-close #f
                                  :camera #f
                                  )
                                (new 'static 'talker-speech-class
                                  :name "torn122"
                                  :channel (gui-channel voicebox)
                                  :speech #x3
                                  :neg #x1
                                  :on-close #f
                                  :camera #f
                                  )
                                (new 'static 'talker-speech-class
                                  :name "torn133"
                                  :channel (gui-channel voicebox)
                                  :speech #x4
                                  :neg #x1
                                  :on-close #f
                                  :camera #f
                                  )
                                (new 'static 'talker-speech-class
                                  :name "torn203"
                                  :channel (gui-channel voicebox)
                                  :speech #x5
                                  :neg #x1
                                  :on-close #f
                                  :camera #f
                                  )
                                (new 'static 'talker-speech-class
                                  :name "torn116"
                                  :channel (gui-channel voicebox)
                                  :speech #x6
                                  :neg #x1
                                  :on-close #f
                                  :camera #f
                                  )
                                (new 'static 'talker-speech-class
                                  :name "torn192"
                                  :channel (gui-channel voicebox)
                                  :speech #x7
                                  :neg #x1
                                  :on-close #f
                                  :camera #f
                                  )
                                (new 'static 'talker-speech-class
                                  :name "torn205"
                                  :channel (gui-channel voicebox)
                                  :speech #x8
                                  :neg #x1
                                  :on-close #f
                                  :camera #f
                                  )
                                (new 'static 'talker-speech-class
                                  :name "torn198"
                                  :channel (gui-channel voicebox)
                                  :speech #x9
                                  :neg #x1
                                  :on-close #f
                                  :camera #f
                                  )
                                (new 'static 'talker-speech-class
                                  :name "torn154"
                                  :channel (gui-channel voicebox)
                                  :speech #xa
                                  :neg #x1
                                  :on-close #f
                                  :camera #f
                                  )
                                (new 'static 'talker-speech-class
                                  :name "torn194"
                                  :channel (gui-channel rider)
                                  :speech #xb
                                  :neg #x1
                                  :on-close #f
                                  :camera #f
                                  )
                                (new 'static 'talker-speech-class
                                  :name "torn117"
                                  :channel (gui-channel rider)
                                  :speech #xc
                                  :neg #x1
                                  :on-close #f
                                  :camera #f
                                  )
                                (new 'static 'talker-speech-class
                                  :name "assault-protect-civilians"
                                  :channel (gui-channel message)
                                  :speech #xd
                                  :text-duration (seconds 4)
                                  :neg #x1
                                  :text-message (text-id text-06de)
                                  :on-close #f
                                  :camera #f
                                  )
                                (new 'static 'talker-speech-class
                                  :name "dax238"
                                  :channel (gui-channel daxter)
                                  :flags (talker-flags tf0)
                                  :speech #xe
                                  :neg #x1
                                  :on-close #f
                                  :camera #f
                                  )
                                (new 'static 'talker-speech-class
                                  :name "dax353"
                                  :channel (gui-channel daxter)
                                  :speech #xf
                                  :neg #x1
                                  :on-close #f
                                  :camera #f
                                  )
                                (new 'static 'talker-speech-class
                                  :name "dax330"
                                  :channel (gui-channel daxter)
                                  :speech #x10
                                  :neg #x1
                                  :on-close #f
                                  :camera #f
                                  )
                                (new 'static 'talker-speech-class
                                  :name "dax577"
                                  :channel (gui-channel daxter)
                                  :speech #x11
                                  :neg #x1
                                  :on-close #f
                                  :camera #f
                                  )
                                (new 'static 'talker-speech-class
                                  :name "tor001"
                                  :channel (gui-channel voicebox)
                                  :speech #x12
                                  :neg #x1
                                  :on-close #f
                                  :camera #f
                                  )
                                (new 'static 'talker-speech-class
                                  :name "grds178a"
                                  :channel (gui-channel guard)
                                  :flags (talker-flags tf0)
                                  :speech #x13
                                  :neg #x1
                                  :on-close #f
                                  :camera #f
                                  )
                                (new 'static 'talker-speech-class
                                  :name "grds178b"
                                  :channel (gui-channel guard)
                                  :flags (talker-flags tf0)
                                  :speech #x14
                                  :neg #x1
                                  :on-close #f
                                  :camera #f
                                  )
                                (new 'static 'talker-speech-class
                                  :name "grds103a"
                                  :channel (gui-channel guard)
                                  :speech #x15
                                  :neg #x1
                                  :on-close #f
                                  :camera #f
                                  )
                                )
        )

;; definition of type assault-speech-instance
(deftype assault-speech-instance (speech-instance)
  ()
  )

;; definition for method 3 of type assault-speech-instance
(defmethod inspect ((this assault-speech-instance))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this 'assault-speech-instance)
  (format #t "~1Tspeech: ~D~%" (-> this speech))
  (format #t "~1Tnum-play-times: ~D~%" (-> this num-play-times))
  (format #t "~1Tprobability: ~f~%" (-> this probability))
  (label cfg-4)
  this
  )

;; failed to figure out what this is:
0




