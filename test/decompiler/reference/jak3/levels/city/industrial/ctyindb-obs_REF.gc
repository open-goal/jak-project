;;-*-Lisp-*-
(in-package goal)

;; definition of type industrialb-board-vent
(deftype industrialb-board-vent (bouncer)
  ()
  )

;; definition for method 3 of type industrialb-board-vent
(defmethod inspect ((this industrialb-board-vent))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (let ((t9-0 (method-of-type bouncer inspect)))
    (t9-0 this)
    )
  (label cfg-4)
  this
  )

;; definition for method 24 of type industrialb-board-vent
;; WARN: Return type mismatch int vs none.
(defmethod init-collision! ((this industrialb-board-vent))
  (let ((s5-0 (new 'process 'collide-shape this (collide-list-enum hit-by-player))))
    (let ((v1-2 (new 'process 'collide-shape-prim-sphere s5-0 (the-as uint 8))))
      (set! (-> v1-2 prim-core collide-as) (collide-spec crate))
      (set! (-> v1-2 prim-core collide-with) (collide-spec jak player-list))
      (set! (-> v1-2 prim-core action) (collide-action))
      (set-vector! (-> v1-2 local-sphere) 0.0 4096.0 0.0 10240.0)
      (set! (-> s5-0 total-prims) (the-as uint 1))
      (set! (-> s5-0 root-prim) v1-2)
      )
    (set! (-> s5-0 nav-radius) (* 0.75 (-> s5-0 root-prim local-sphere w)))
    (let ((v1-5 (-> s5-0 root-prim)))
      (set! (-> s5-0 backup-collide-as) (-> v1-5 prim-core collide-as))
      (set! (-> s5-0 backup-collide-with) (-> v1-5 prim-core collide-with))
      )
    (set! (-> this root) s5-0)
    )
  0
  (none)
  )

;; definition for method 23 of type industrialb-board-vent
;; WARN: Return type mismatch int vs none.
(defmethod init-skel! ((this industrialb-board-vent))
  0
  (none)
  )




