;;-*-Lisp-*-
(in-package goal)

;; definition of type squad-control-city
(deftype squad-control-city (squad-control)
  ((traffic    traffic-engine)
   (city-mode  squad-city-mode)
   )
  (:methods
    (squad-control-city-method-34 (_type_) symbol)
    (squad-control-city-method-35 (_type_ citizen handle) process-focusable)
    (get-city-mode (_type_) squad-city-mode)
    (squad-control-city-method-37 (_type_) none)
    (squad-control-city-method-38 (_type_ process-focusable process-focusable) symbol)
    (squad-control-city-method-39 (_type_ process-focusable process-focusable) float)
    (squad-control-city-method-40 (_type_ process-focusable process-focusable) none)
    (squad-control-city-method-41 (_type_ process-focusable process-focusable) symbol)
    (squad-control-city-method-42 (_type_) float)
    (squad-control-city-method-43 (_type_ process-focusable) symbol)
    (add-squad-to-traffic-engine (_type_ traffic-engine) none)
    )
  )

;; definition for method 3 of type squad-control-city
(defmethod inspect ((this squad-control-city))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this (-> this type))
  (format #t "~1Tsync-clock: ~D~%" (-> this sync-clock))
  (format #t "~1Tsync-mask-8: ~D~%" (-> this sync-mask-8))
  (format #t "~1Tsync-mask-16: ~D~%" (-> this sync-mask-16))
  (format #t "~1Tsync-mask-32: ~D~%" (-> this sync-mask-32))
  (format #t "~1Talert-state: #<squad-alert-state @ #x~X>~%" (-> this alert-state))
  (format #t "~1Tprimary-target-history[16] @ #x~X~%" (-> this primary-target-history))
  (format #t "~1Ttraffic: ~A~%" (-> this traffic))
  (format #t "~1Tcity-mode: ~D~%" (-> this city-mode))
  (label cfg-4)
  this
  )

;; failed to figure out what this is:
0
