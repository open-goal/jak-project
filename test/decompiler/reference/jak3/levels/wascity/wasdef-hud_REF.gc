;;-*-Lisp-*-
(in-package goal)

;; definition for method 15 of type hud-wasdef-damage
;; WARN: Return type mismatch int vs none.
(defmethod draw ((this hud-wasdef-damage))
  (set-hud-piece-position! (the-as hud-sprite (-> this sprites)) 256 40)
  (set! (-> this sprites 0 pos z) #xfffff0)
  (set-as-offset-from! (-> this sprites 1) (the-as vector4w (-> this sprites)) -59 -5)
  (set! (-> this sprites 1 pos z) #xfffff0)
  (let ((f0-1 (fmax 0.0 (fmin 1.0 (-> *game-info* health-bar-vehicle)))))
    (set! (-> this sprites 1 color x) (the int (* 255.0 (- 1.0 f0-1))))
    (set! (-> this sprites 1 color y) (the int (* 255.0 f0-1)))
    (set! (-> this sprites 1 color z) 0)
    (set! (-> this sprites 1 scale-y) 2.7)
    (set! (-> this sprites 1 scale-x) (* 29.3 f0-1))
    )
  ((method-of-type hud draw) this)
  0
  (none)
  )

;; definition for method 16 of type hud-wasdef-damage
;; WARN: Return type mismatch int vs none.
(defmethod update-values! ((this hud-wasdef-damage))
  (logclear! (-> this flags) (hud-flags disable))
  ((method-of-type hud update-values!) this)
  0
  (none)
  )

;; definition for method 17 of type hud-wasdef-damage
;; WARN: Return type mismatch int vs none.
(defmethod init-callback ((this hud-wasdef-damage))
  (set! (-> this gui-id)
        (add-process *gui-control* this (gui-channel hud-lower-left-1) (gui-action hidden) (-> this name) 81920.0 0)
        )
  (logior! (-> this flags) (hud-flags show))
  (set! (-> this sprites 0 tid)
        (the-as texture-id (lookup-texture-by-id (new 'static 'texture-id :page #x8b0)))
        )
  (set! (-> this sprites 0 flags) (hud-sprite-flags hsf3))
  (set! (-> this sprites 0 scale-x) 1.0)
  (set! (-> this sprites 0 scale-y) 1.0)
  (set! (-> this sprites 1 tid) (the-as texture-id (get-texture common-white common)))
  (set! (-> this sprites 1 flags) (hud-sprite-flags))
  (set! (-> this sprites 1 scale-x) 0.0)
  (set! (-> this sprites 1 scale-y) 2.0)
  (set! (-> this sprites 1 color w) 127)
  0
  (none)
  )




