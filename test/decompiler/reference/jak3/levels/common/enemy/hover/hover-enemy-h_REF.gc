;;-*-Lisp-*-
(in-package goal)

;; definition of type hover-enemy-info
(deftype hover-enemy-info (structure)
  ((fly-forward-anim     int32)
   (fly-backward-anim    int32)
   (fly-left-anim        int32)
   (fly-right-anim       int32)
   (shoot-anim           int32)
   (main-joint           int32)
   (gun-base             int32)
   (engine-left          int32)
   (engine-right         int32)
   (thrust-rotate-left   float)
   (thrust-rotate-right  float)
   (hover-y-offset       float)
   (hover-xz-offset      float)
   (use-flying-death     symbol)
   (fly-x-anim-seek      float)
   (fly-z-anim-seek      float)
   )
  )

;; definition for method 3 of type hover-enemy-info
(defmethod inspect ((this hover-enemy-info))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this 'hover-enemy-info)
  (format #t "~1Tfly-forward-anim: ~D~%" (-> this fly-forward-anim))
  (format #t "~1Tfly-backward-anim: ~D~%" (-> this fly-backward-anim))
  (format #t "~1Tfly-left-anim: ~D~%" (-> this fly-left-anim))
  (format #t "~1Tfly-right-anim: ~D~%" (-> this fly-right-anim))
  (format #t "~1Tshoot-anim: ~D~%" (-> this shoot-anim))
  (format #t "~1Tmain-joint: ~D~%" (-> this main-joint))
  (format #t "~1Tgun-base: ~D~%" (-> this gun-base))
  (format #t "~1Tengine-left: ~D~%" (-> this engine-left))
  (format #t "~1Tengine-right: ~D~%" (-> this engine-right))
  (format #t "~1Tthrust-rotate-left: ~f~%" (-> this thrust-rotate-left))
  (format #t "~1Tthrust-rotate-right: ~f~%" (-> this thrust-rotate-right))
  (format #t "~1Thover-y-offset: ~f~%" (-> this hover-y-offset))
  (format #t "~1Thover-xz-offset: ~f~%" (-> this hover-xz-offset))
  (format #t "~1Tuse-flying-death: ~A~%" (-> this use-flying-death))
  (format #t "~1Tfly-x-anim-seek: ~f~%" (-> this fly-x-anim-seek))
  (format #t "~1Tfly-z-anim-seek: ~f~%" (-> this fly-z-anim-seek))
  (label cfg-4)
  this
  )

;; definition of type hover-enemy
(deftype hover-enemy (enemy)
  ((los                         los-control  :inline)
   (main-joint-movement         vector       3 :inline)
   (rotation-vec                vector       :inline)
   (dest-pos                    vector       :inline)
   (offset                      vector       :inline)
   (surface-normal              vector       :inline)
   (local-dir                   vector       :inline)
   (hover                       hover-nav-control)
   (hover-info                  hover-enemy-info)
   (formation-entity            entity)
   (fly-anim-speed              float)
   (restart-fly-anims           symbol)
   (thrust                      float        2)
   (scale                       float)
   (scale-timer                 time-frame)
   (hover-id                    int32)
   (hit-surface?                symbol)
   (knocked-start-level         float)
   (knocked-fall-dist           float)
   (flying-death-anim           int32)
   (flying-death-transv         vector       :inline)
   (flying-death-engine         int32)
   (flying-death-thrust-rotate  float)
   (flying-death-spin           float)
   (flying-death-spin-dest      float)
   (flying-death-spin-axis      vector       :inline)
   )
  (:state-methods
    land-approach
    land
    flying-death
    flying-death-explode
    )
  (:methods
    (hover-enemy-method-159 (_type_ symbol) none)
    (hover-enemy-method-160 (_type_) object)
    (hover-enemy-method-161 (_type_) none)
    (hover-enemy-method-162 (_type_ float) vector)
    (hover-enemy-method-163 (_type_) none)
    (hover-enemy-method-164 (_type_ int float) none)
    (hover-enemy-method-165 (_type_) none)
    (play-fly-anim (_type_ int float int int) none)
    (hover-enemy-method-167 (_type_) none)
    (hover-enemy-method-168 (_type_) none)
    (hover-enemy-method-169 (_type_) none)
    (hover-enemy-method-170 (_type_) none)
    (get-enemy-info (_type_) enemy-info)
    (get-hover-info (_type_) hover-enemy-info)
    (get-hover-params (_type_) hover-nav-params)
    (hover-enemy-method-174 (_type_) none)
    (hover-enemy-method-175 (_type_) none)
    (hover-enemy-method-176 (_type_) none)
    )
  )

;; definition for method 3 of type hover-enemy
(defmethod inspect ((this hover-enemy))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (let ((t9-0 (method-of-type enemy inspect)))
    (t9-0 this)
    )
  (format #t "~2Tlos: #<los-control @ #x~X>~%" (-> this los))
  (format #t "~2Tmain-joint-movement[3] @ #x~X~%" (-> this main-joint-movement))
  (format #t "~2Trotation-vec: #<vector @ #x~X>~%" (-> this rotation-vec))
  (format #t "~2Tdest-pos: #<vector @ #x~X>~%" (-> this dest-pos))
  (format #t "~2Toffset: #<vector @ #x~X>~%" (-> this offset))
  (format #t "~2Tsurface-normal: #<vector @ #x~X>~%" (-> this surface-normal))
  (format #t "~2Tlocal-dir: #<vector @ #x~X>~%" (-> this local-dir))
  (format #t "~2Thover: ~A~%" (-> this hover))
  (format #t "~2Thover-info: #<hover-enemy-info @ #x~X>~%" (-> this hover-info))
  (format #t "~2Tformation-entity: ~A~%" (-> this formation-entity))
  (format #t "~2Tfly-anim-speed: ~f~%" (-> this fly-anim-speed))
  (format #t "~2Trestart-fly-anims: ~A~%" (-> this restart-fly-anims))
  (format #t "~2Tthrust[2] @ #x~X~%" (-> this thrust))
  (format #t "~2Tscale: ~f~%" (-> this scale))
  (format #t "~2Tscale-timer: ~D~%" (-> this scale-timer))
  (format #t "~2Thover-id: ~D~%" (-> this hover-id))
  (format #t "~2Thit-surface?: ~A~%" (-> this hit-surface?))
  (format #t "~2Tknocked-start-level: ~f~%" (-> this knocked-start-level))
  (format #t "~2Tknocked-fall-dist: ~f~%" (-> this knocked-fall-dist))
  (format #t "~2Tflying-death-anim: ~D~%" (-> this flying-death-anim))
  (format #t "~2Tflying-death-transv: #<vector @ #x~X>~%" (-> this flying-death-transv))
  (format #t "~2Tflying-death-engine: ~D~%" (-> this flying-death-engine))
  (format #t "~2Tflying-death-thrust-rotate: ~f~%" (-> this flying-death-thrust-rotate))
  (format #t "~2Tflying-death-spin: ~f~%" (-> this flying-death-spin))
  (format #t "~2Tflying-death-spin-dest: ~f~%" (-> this flying-death-spin-dest))
  (format #t "~2Tflying-death-spin-axis: #<vector @ #x~X>~%" (-> this flying-death-spin-axis))
  (label cfg-4)
  this
  )

;; failed to figure out what this is:
0
