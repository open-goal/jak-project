;;-*-Lisp-*-
(in-package goal)

;; definition for symbol *mined-tfrag-texture-anim-array*, type (texture-anim-array texture-anim)
(define *mined-tfrag-texture-anim-array*
  (the-as (texture-anim-array texture-anim)
    (new 'static 'texture-anim-array :type texture-anim
      (new 'static 'texture-anim
        :num-layers #x5
        :func #f
        :init-func-id 'texture-anim-overide-size-init
        :tex #f
        :tex-name "mined-pillar-side-dest"
        :extra (new 'static 'vector :x 128.0 :y 128.0 :z 1.0)
        :color (new 'static 'rgba :a #x80)
        :frame-delta 300.0
        :frame-mod 300.0
        :test (new 'static 'gs-test :ate #x1 :afail #x1 :zte #x1 :ztst (gs-ztest always))
        :alpha (new 'static 'gs-alpha :b #x1 :d #x1)
        :data (new 'static 'array texture-anim-layer 6
          (new 'static 'texture-anim-layer
            :func-id 'no-alpha-texture-anim-layer-func
            :init-func #f
            :tex #f
            :end-time 300.0
            :tex-name "mined-pillar-side-cold"
            :test (new 'static 'gs-test :ate #x1 :afail #x3 :zte #x1 :ztst (gs-ztest always))
            :start-color (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :start-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :start-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :start-st-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :start-st-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :start-qs (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :end-color (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :end-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :end-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :end-st-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :end-st-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :end-qs (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            )
          (new 'static 'texture-anim-layer
            :func-id 'default-texture-anim-layer-func
            :init-func #f
            :tex #f
            :end-time 300.0
            :tex-name "mined-pillar-side-cooling"
            :test (new 'static 'gs-test :ate #x1 :afail #x3 :zte #x1 :ztst (gs-ztest always))
            :alpha (new 'static 'gs-alpha :b #x1 :d #x1)
            :start-color (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :start-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :start-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :start-st-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :start-st-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :start-qs (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :end-color (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :end-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :end-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :end-st-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :end-st-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :end-qs (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            )
          (new 'static 'texture-anim-layer
            :func-id 'default-texture-anim-layer-func
            :init-func #f
            :tex #f
            :end-time 300.0
            :tex-name "mined-pillar-side-hot"
            :test (new 'static 'gs-test :ate #x1 :afail #x3 :zte #x1 :ztst (gs-ztest always))
            :alpha (new 'static 'gs-alpha :b #x1 :d #x1)
            :start-color (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :start-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :start-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :start-st-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :start-st-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :start-qs (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :end-color (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :end-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :end-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :end-st-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :end-st-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :end-qs (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            )
          (new 'static 'texture-anim-layer
            :func-id 'default-texture-anim-layer-func
            :init-func #f
            :tex #f
            :end-time 300.0
            :tex-name "mined-pillar-molten"
            :test (new 'static 'gs-test :ate #x1 :afail #x3 :zte #x1 :ztst (gs-ztest always))
            :alpha (new 'static 'gs-alpha :b #x2 :d #x1)
            :start-color (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :start-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :start-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :start-st-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :start-st-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.0))
            :start-qs (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :end-color (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :end-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :end-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :end-st-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :end-st-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 1.0))
            :end-qs (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            )
          (new 'static 'texture-anim-layer
            :func-id 'copy-alpha-texture-anim-layer-func
            :init-func #f
            :tex #f
            :end-time 300.0
            :tex-name "mined-pillar-side-cold"
            :test (new 'static 'gs-test :ate #x1 :afail #x1 :zte #x1 :ztst (gs-ztest always))
            :alpha (new 'static 'gs-alpha :b #x1 :d #x1)
            :start-color (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :start-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :start-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :start-st-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :start-st-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :start-qs (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :end-color (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :end-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :end-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :end-st-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :end-st-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :end-qs (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            )
          )
        )
      (new 'static 'texture-anim
        :num-layers #x5
        :func #f
        :init-func-id 'texture-anim-overide-size-init
        :tex #f
        :tex-name "mined-pillar-top2side-dest"
        :extra (new 'static 'vector :x 128.0 :y 64.0 :z 1.0)
        :color (new 'static 'rgba :a #x80)
        :frame-delta 300.0
        :frame-mod 300.0
        :test (new 'static 'gs-test :ate #x1 :afail #x1 :zte #x1 :ztst (gs-ztest always))
        :alpha (new 'static 'gs-alpha :b #x1 :d #x1)
        :data (new 'static 'array texture-anim-layer 6
          (new 'static 'texture-anim-layer
            :func-id 'no-alpha-texture-anim-layer-func
            :init-func #f
            :tex #f
            :end-time 300.0
            :tex-name "mined-pillar-top2side-cold"
            :test (new 'static 'gs-test :ate #x1 :afail #x3 :zte #x1 :ztst (gs-ztest always))
            :start-color (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :start-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :start-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :start-st-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :start-st-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :start-qs (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :end-color (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :end-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :end-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :end-st-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :end-st-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :end-qs (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            )
          (new 'static 'texture-anim-layer
            :func-id 'default-texture-anim-layer-func
            :init-func #f
            :tex #f
            :end-time 300.0
            :tex-name "mined-pillar-top2side-cooling"
            :test (new 'static 'gs-test :ate #x1 :afail #x3 :zte #x1 :ztst (gs-ztest always))
            :alpha (new 'static 'gs-alpha :b #x1 :d #x1)
            :start-color (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :start-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :start-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :start-st-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :start-st-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :start-qs (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :end-color (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :end-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :end-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :end-st-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :end-st-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :end-qs (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            )
          (new 'static 'texture-anim-layer
            :func-id 'default-texture-anim-layer-func
            :init-func #f
            :tex #f
            :end-time 300.0
            :tex-name "mined-pillar-top2side-hot"
            :test (new 'static 'gs-test :ate #x1 :afail #x3 :zte #x1 :ztst (gs-ztest always))
            :alpha (new 'static 'gs-alpha :b #x1 :d #x1)
            :start-color (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :start-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :start-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :start-st-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :start-st-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :start-qs (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :end-color (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :end-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :end-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :end-st-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :end-st-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :end-qs (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            )
          (new 'static 'texture-anim-layer
            :func-id 'default-texture-anim-layer-func
            :init-func #f
            :tex #f
            :end-time 300.0
            :tex-name "mined-pillar-molten"
            :test (new 'static 'gs-test :ate #x1 :afail #x3 :zte #x1 :ztst (gs-ztest always))
            :alpha (new 'static 'gs-alpha :b #x2 :d #x1)
            :start-color (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :start-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :start-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :start-st-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :start-st-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.0))
            :start-qs (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :end-color (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :end-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :end-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :end-st-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :end-st-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 1.0))
            :end-qs (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            )
          (new 'static 'texture-anim-layer
            :func-id 'copy-alpha-texture-anim-layer-func
            :init-func #f
            :tex #f
            :end-time 300.0
            :tex-name "mined-pillar-top2side-cold"
            :test (new 'static 'gs-test :ate #x1 :afail #x1 :zte #x1 :ztst (gs-ztest always))
            :alpha (new 'static 'gs-alpha :b #x1 :d #x1)
            :start-color (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :start-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :start-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :start-st-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :start-st-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :start-qs (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :end-color (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :end-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :end-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :end-st-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :end-st-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :end-qs (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            )
          )
        )
      (new 'static 'texture-anim
        :num-layers #x8
        :func #f
        :init-func-id 'texture-anim-overide-size-init
        :tex #f
        :tex-name "mined-pillar-top-dest"
        :extra (new 'static 'vector :x 128.0 :y 128.0 :z 1.0)
        :color (new 'static 'rgba :a #x80)
        :frame-delta 300.0
        :frame-mod 300.0
        :test (new 'static 'gs-test :ate #x1 :afail #x1 :zte #x1 :ztst (gs-ztest always))
        :alpha (new 'static 'gs-alpha :b #x1 :d #x1)
        :data (new 'static 'array texture-anim-layer 10
          (new 'static 'texture-anim-layer
            :func-id 'no-alpha-texture-anim-layer-func
            :init-func #f
            :tex #f
            :end-time 300.0
            :tex-name "mined-pillar-top-cold"
            :test (new 'static 'gs-test :ate #x1 :afail #x3 :zte #x1 :ztst (gs-ztest always))
            :start-color (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :start-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :start-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :start-st-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :start-st-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :start-qs (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :end-color (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :end-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :end-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :end-st-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :end-st-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :end-qs (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            )
          (new 'static 'texture-anim-layer
            :func-id 'default-texture-anim-layer-func
            :init-func #f
            :tex #f
            :end-time 300.0
            :tex-name "mined-pillar-top-cooling"
            :test (new 'static 'gs-test :ate #x1 :afail #x3 :zte #x1 :ztst (gs-ztest always))
            :alpha (new 'static 'gs-alpha :b #x1 :d #x1)
            :start-color (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :start-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :start-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :start-st-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :start-st-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :start-qs (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :end-color (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :end-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :end-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :end-st-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :end-st-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :end-qs (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            )
          (new 'static 'texture-anim-layer
            :func-id 'default-texture-anim-layer-func
            :init-func #f
            :tex #f
            :end-time 300.0
            :tex-name "mined-pillar-top-hot"
            :test (new 'static 'gs-test :ate #x1 :afail #x3 :zte #x1 :ztst (gs-ztest always))
            :alpha (new 'static 'gs-alpha :b #x1 :d #x1)
            :start-color (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :start-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :start-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :start-st-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :start-st-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :start-qs (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :end-color (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :end-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :end-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :end-st-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :end-st-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :end-qs (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            )
          (new 'static 'texture-anim-layer
            :func-id 'default-texture-anim-layer-func
            :init-func #f
            :tex #f
            :end-time 150.0
            :tex-name "mined-pillar-molten-top"
            :test (new 'static 'gs-test :ate #x1 :afail #x3 :zte #x1 :ztst (gs-ztest always))
            :alpha (new 'static 'gs-alpha :b #x2 :d #x1)
            :start-color (new 'static 'vector :x 1.0 :y 1.0 :z 1.0)
            :start-scale (new 'static 'vector2 :data (new 'static 'array float 2 2.0 2.0))
            :start-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :start-st-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :start-st-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :start-qs (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :end-color (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :end-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :end-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :end-st-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :end-st-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :end-qs (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            )
          (new 'static 'texture-anim-layer
            :func-id 'default-texture-anim-layer-func
            :init-func #f
            :tex #f
            :start-time 150.0
            :end-time 300.0
            :tex-name "mined-pillar-molten-top"
            :test (new 'static 'gs-test :ate #x1 :afail #x3 :zte #x1 :ztst (gs-ztest always))
            :alpha (new 'static 'gs-alpha :b #x2 :d #x1)
            :start-color (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :start-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :start-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :start-st-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :start-st-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :start-qs (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :end-color (new 'static 'vector :x 1.0 :y 1.0 :z 1.0)
            :end-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :end-st-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :end-st-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :end-qs (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            )
          (new 'static 'texture-anim-layer
            :func-id 'default-texture-anim-layer-func
            :init-func #f
            :tex #f
            :end-time 150.0
            :tex-name "mined-pillar-molten-top"
            :test (new 'static 'gs-test :ate #x1 :afail #x3 :zte #x1 :ztst (gs-ztest always))
            :alpha (new 'static 'gs-alpha :b #x2 :d #x1)
            :start-color (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :start-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :start-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :start-st-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :start-st-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :start-qs (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :start-rot (degrees 90)
            :end-color (new 'static 'vector :x 1.0 :y 1.0 :z 1.0)
            :end-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :end-st-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :end-st-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :end-qs (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :end-rot (degrees 90)
            )
          (new 'static 'texture-anim-layer
            :func-id 'default-texture-anim-layer-func
            :init-func #f
            :tex #f
            :start-time 150.0
            :end-time 300.0
            :tex-name "mined-pillar-molten-top"
            :test (new 'static 'gs-test :ate #x1 :afail #x3 :zte #x1 :ztst (gs-ztest always))
            :alpha (new 'static 'gs-alpha :b #x2 :d #x1)
            :start-color (new 'static 'vector :x 1.0 :y 1.0 :z 1.0)
            :start-scale (new 'static 'vector2 :data (new 'static 'array float 2 2.0 2.0))
            :start-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :start-st-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :start-st-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :start-qs (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :start-rot (degrees 90)
            :end-color (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :end-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :end-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :end-st-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :end-st-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :end-qs (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :end-rot (degrees 90)
            )
          (new 'static 'texture-anim-layer
            :func-id 'copy-alpha-texture-anim-layer-func
            :init-func #f
            :tex #f
            :end-time 300.0
            :tex-name "mined-pillar-top-cold"
            :test (new 'static 'gs-test :ate #x1 :afail #x1 :zte #x1 :ztst (gs-ztest always))
            :alpha (new 'static 'gs-alpha :b #x1 :d #x1)
            :start-color (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :start-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :start-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :start-st-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :start-st-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :start-qs (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :end-color (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            :end-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :end-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :end-st-scale (new 'static 'vector2 :data (new 'static 'array float 2 1.0 1.0))
            :end-st-offset (new 'static 'vector2 :data (new 'static 'array float 2 0.5 0.5))
            :end-qs (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
            )
          )
        )
      )
    )
  )

;; definition for function set-mined-pillar-texture!
;; WARN: Return type mismatch float vs none.
(defun set-mined-pillar-texture! ((arg0 float))
  (let ((f0-1 (- 1.0 (fmax 0.0 (fmin 1.0 (* 4.0 arg0)))))
        (f1-3 (fmax 0.0 (fmin 1.0 (- 1.0 (* 2.0 arg0)))))
        (f2-5 (- 1.0 (fabs (+ -1.0 (* 2.0 arg0)))))
        (v1-9 *mined-tfrag-texture-anim-array*)
        )
    (set! (-> v1-9 array-data 0 data 1 start-color w) f2-5)
    (set! (-> v1-9 array-data 0 data 1 end-color w) f2-5)
    (set! (-> v1-9 array-data 1 data 1 start-color w) f2-5)
    (set! (-> v1-9 array-data 1 data 1 end-color w) f2-5)
    (set! (-> v1-9 array-data 2 data 1 start-color w) f2-5)
    (set! (-> v1-9 array-data 2 data 1 end-color w) f2-5)
    (set! (-> v1-9 array-data 0 data 2 start-color w) f1-3)
    (set! (-> v1-9 array-data 0 data 2 end-color w) f1-3)
    (set! (-> v1-9 array-data 1 data 2 start-color w) f1-3)
    (set! (-> v1-9 array-data 1 data 2 end-color w) f1-3)
    (set! (-> v1-9 array-data 2 data 2 start-color w) f1-3)
    (set! (-> v1-9 array-data 2 data 2 end-color w) f1-3)
    (set! (-> v1-9 array-data 0 data 3 start-color w) f0-1)
    (set! (-> v1-9 array-data 0 data 3 end-color w) f0-1)
    (set! (-> v1-9 array-data 1 data 3 start-color w) f0-1)
    (set! (-> v1-9 array-data 1 data 3 end-color w) f0-1)
    (set! (-> v1-9 array-data 2 data 3 end-color w) f0-1)
    (set! (-> v1-9 array-data 2 data 4 start-color w) f0-1)
    (set! (-> v1-9 array-data 2 data 5 start-color w) f0-1)
    (set! (-> v1-9 array-data 2 data 6 end-color w) f0-1)
    )
  (none)
  )

;; failed to figure out what this is:
(set-mined-pillar-texture! 0.0)




