;;-*-Lisp-*-
(in-package goal)

;; failed to figure out what this is:
(defpartgroup group-nst-metalhead-egg-explode
  :id 611
  :flags (sp0 sp4)
  :bounds (static-bspherem 0 0 0 640)
  :parts ((sp-item 2390 :fade-after (meters 300) :period (seconds 20) :length (seconds 0.017))
    (sp-item 2391 :fade-after (meters 300) :period (seconds 20) :length (seconds 0.017))
    (sp-item 2392 :fade-after (meters 300) :period (seconds 20) :length (seconds 0.017))
    )
  )

;; failed to figure out what this is:
(defpart 2390
  :init-specs ((:texture (glow level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 2) (meters 2))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 128.0)
    (:b 128.0)
    (:a 255.0)
    (:scalevel-x (meters -0.033333335))
    (:scalevel-y :copy scalevel-x)
    (:timer (seconds 0.085))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    )
  )

;; failed to figure out what this is:
(defpart 2391
  :init-specs ((:texture (shockwave level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 5))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 128.0)
    (:b 128.0)
    (:a 32.0 32.0)
    (:scalevel-x (meters 0.06666667) (meters 0.033333335))
    (:scalevel-y :copy scalevel-x)
    (:fade-a 0.0)
    (:timer (seconds 0.335))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    )
  )

;; failed to figure out what this is:
(defpart 2392
  :init-specs ((:texture (water-drops level-default-sprite))
    (:num 10.0)
    (:z (meters 2) (meters 2))
    (:scale-x (meters 1) (meters 1))
    (:rot-z (degrees 0) (degrees 3600))
    (:scale-y :copy scale-x)
    (:r 64.0 64.0)
    (:g 128.0)
    (:b 0.0)
    (:a 64.0 64.0)
    (:scalevel-x (meters 0.033333335))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.42666668 -0.42666668)
    (:accel-y (meters -0.0033333334))
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-2 launch-along-z))
    (:next-time (seconds 0.5))
    (:next-launcher 2393)
    (:rotate-x (degrees 0) (degrees 3600))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

;; failed to figure out what this is:
(defpart 2393
  :init-specs ((:scalevel-x (meters 0.0033333334)) (:scalevel-y :copy scalevel-x))
  )

;; failed to figure out what this is:
(defpartgroup group-cocoon-big-egg-glow
  :id 612
  :bounds (static-bspherem 0 0 0 4)
  :parts ((sp-item 2394 :flags (sp6)))
  )

;; failed to figure out what this is:
(defpart 2394
  :init-specs ((:texture (glow-soft level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 15))
    (:rot-x (degrees 22.5))
    (:scale-y (meters 10))
    (:r 16.0)
    (:g 64.0)
    (:b 10.0)
    (:a 128.0)
    (:omega (degrees 6761.25))
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-3 glow))
    (:userdata 8192.0)
    (:rotate-y (degrees 0))
    )
  )

;; failed to figure out what this is:
(defpartgroup group-cocoon-big-egg-charge-down
  :id 613
  :bounds (static-bspherem 0 0 0 4)
  :parts ((sp-item 2395 :flags (sp6)))
  )

;; failed to figure out what this is:
(defpart 2395
  :init-specs ((:texture (glow-soft level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 15))
    (:rot-x (degrees 22.5))
    (:scale-y (meters 10))
    (:r 16.0)
    (:g 64.0)
    (:b 10.0)
    (:a 128.0)
    (:omega (degrees 6761.25))
    (:fade-a -0.85333335)
    (:timer (seconds 0.5))
    (:flags (sp-cpuinfo-flag-3 glow))
    (:userdata 8192.0)
    (:rotate-y (degrees 0))
    )
  )

;; failed to figure out what this is:
(defpartgroup group-cocoon-big-egg-charge-up
  :id 614
  :bounds (static-bspherem 0 0 0 4)
  :parts ((sp-item 2396 :flags (sp6)))
  )

;; failed to figure out what this is:
(defpart 2396
  :init-specs ((:texture (glow-soft level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 15))
    (:rot-x (degrees 22.5))
    (:scale-y (meters 10))
    (:r 16.0)
    (:g 64.0)
    (:b 10.0)
    (:a 0.0)
    (:omega (degrees 6761.25))
    (:fade-a 0.42666668)
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-3 glow))
    (:userdata 8192.0)
    (:rotate-y (degrees 0))
    )
  )

;; failed to figure out what this is:
(defpartgroup group-cocoon-turret-glow
  :id 615
  :bounds (static-bspherem 0 0 0 4)
  :parts ((sp-item 2397 :flags (sp6 sp7)))
  )

;; failed to figure out what this is:
(defpart 2397
  :init-specs ((:texture (glow-soft level-default-sprite))
    (:num 1.0)
    (:z (meters 0.3))
    (:scale-x (meters 4))
    (:rot-x (degrees 11.25))
    (:rot-z (degrees 0) (degrees 3600))
    (:scale-y :copy scale-x)
    (:r 16.0)
    (:g 64.0)
    (:b 10.0)
    (:a 32.0 1.0)
    (:omega (degrees 6761.25))
    (:timer (seconds 0.017))
    (:flags (glow))
    (:userdata 4096.0)
    (:rotate-y (degrees 0))
    )
  )

;; failed to figure out what this is:
(defpartgroup group-cocoon-turret-explosion
  :id 616
  :flags (sp0)
  :bounds (static-bspherem 0 -2 0 24)
  :parts ((sp-item 2399 :period (seconds 4) :length (seconds 0.25))
    (sp-item 2400 :period (seconds 4) :length (seconds 0.335))
    (sp-item 2401 :period (seconds 4) :length (seconds 0.017))
    (sp-item 2402 :flags (sp3))
    (sp-item 2403 :flags (sp3))
    (sp-item 2404 :flags (sp3))
    (sp-item 2405 :flags (sp3) :binding 2398)
    (sp-item 2405 :flags (sp3) :binding 2398)
    (sp-item 2405 :flags (sp3) :binding 2398)
    (sp-item 2405 :flags (sp3) :binding 2398)
    (sp-item 2405 :flags (sp3) :binding 2398)
    (sp-item 2405 :flags (sp3) :binding 2398)
    (sp-item 2405 :flags (sp3) :binding 2398)
    (sp-item 2398 :flags (sp2) :period (seconds 4) :length (seconds 0.335))
    (sp-item 2398 :flags (sp2) :period (seconds 4) :length (seconds 0.335))
    (sp-item 2398 :flags (sp2) :period (seconds 4) :length (seconds 0.335))
    (sp-item 2398 :flags (sp2) :period (seconds 4) :length (seconds 0.335))
    (sp-item 2398 :flags (sp2) :period (seconds 4) :length (seconds 0.335))
    (sp-item 2398 :flags (sp2) :period (seconds 4) :length (seconds 0.335))
    (sp-item 2398 :flags (sp2) :period (seconds 4) :length (seconds 0.335))
    )
  )

;; failed to figure out what this is:
(defpart 2399
  :init-specs ((:texture (explosion-edge level-default-sprite))
    (:num 6.0)
    (:scale-x (meters 0.1) (meters 0.9))
    (:scale-y :copy scale-x)
    (:r 80.0 80.0)
    (:g 128.0)
    (:b 10.0)
    (:a 100.0 100.0)
    (:vel-y (meters 0.1) (meters 0.33333334))
    (:scalevel-x (meters 0.033333335) (meters 0.06666667))
    (:scalevel-y (meters 0.1) (meters 0.033333335))
    (:fade-a -2.0)
    (:friction 0.7)
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-14))
    (:func 'sparticle-motion-blur)
    (:next-time (seconds 0.167))
    (:next-launcher 2406)
    (:conerot-x (degrees 0) (degrees 3600))
    (:conerot-z (degrees 0) (degrees 3600))
    (:conerot-radius (meters 0) (meters 0.5))
    )
  )

;; failed to figure out what this is:
(defpart 2406
  :init-specs ((:scalevel-x (meters 0.006666667))
    (:scalevel-y (meters 0.016666668))
    (:fade-r -0.2)
    (:fade-b -0.2)
    (:fade-a -1.0 -1.0)
    (:friction 0.95)
    )
  )

;; failed to figure out what this is:
(defpart 2400
  :init-specs ((:texture (bigpuff level-default-sprite))
    (:num 4.0)
    (:scale-x (meters 0.3) (meters 0.8))
    (:rot-z (degrees 0) (degrees 3600))
    (:scale-y :copy scale-x)
    (:r 80.0 80.0)
    (:g 128.0)
    (:b 0.0)
    (:a 128.0 128.0)
    (:vel-y (meters 0.05) (meters 0.06666667))
    (:scalevel-x (meters 0.01) (meters 0.02))
    (:scalevel-y :copy scalevel-x)
    (:fade-r -0.6666667)
    (:fade-g -0.36)
    (:fade-b -0.64)
    (:fade-a -0.85 -0.85)
    (:friction 0.9)
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-3 sp-cpuinfo-flag-14))
    (:conerot-x (degrees 0) (degrees 3600))
    (:conerot-z (degrees 0) (degrees 3600))
    (:conerot-radius (meters 0) (meters 0.5))
    )
  )

;; failed to figure out what this is:
(defpart 2401
  :init-specs ((:texture (water-drops level-default-sprite))
    (:num 10.0)
    (:z (meters 2) (meters 2))
    (:scale-x (meters 1) (meters 1))
    (:rot-z (degrees 0) (degrees 3600))
    (:scale-y :copy scale-x)
    (:r 80.0 80.0)
    (:g 128.0)
    (:b 0.0)
    (:a 64.0 64.0)
    (:scalevel-x (meters 0.06666667))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.21333334 -0.21333334)
    (:accel-y (meters -0.00066666666) (meters -0.00066666666))
    (:timer (seconds 2))
    (:flags (sp-cpuinfo-flag-2 launch-along-z))
    (:rotate-x (degrees 0) (degrees 3600))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

;; failed to figure out what this is:
(defpart 2402
  :init-specs ((:texture (laser-hit2-add level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 10))
    (:rot-z (degrees 0) (degrees 3600))
    (:scale-y :copy scale-x)
    (:r 80.0)
    (:g 128.0)
    (:b 10.0)
    (:a 255.0)
    (:scalevel-x (meters 1.3333334))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -6.375)
    (:timer (seconds 0.135))
    (:flags (sp-cpuinfo-flag-3))
    )
  )

;; failed to figure out what this is:
(defpart 2403
  :init-specs ((:texture (motion-blur-part level-default-sprite))
    (:num 80.0)
    (:scale-x (meters 0.1) (meters 0.2))
    (:scale-y :copy scale-x)
    (:r 80.0 80.0)
    (:g 128.0)
    (:b 10.0)
    (:a 100.0 100.0)
    (:omega (degrees 0.0225))
    (:vel-y (meters 0.16666667) (meters 0.33333334))
    (:scalevel-x (meters -0.001) (meters -0.0013333333))
    (:scalevel-y :copy scalevel-x)
    (:accel-y (meters -0.00066666666) (meters -0.0026666666))
    (:friction 0.9)
    (:timer (seconds 0.5))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-3))
    (:func 'sparticle-motion-blur)
    (:conerot-x (degrees 0) (degrees 3600))
    (:conerot-z (degrees 0) (degrees 3600))
    (:conerot-radius (meters 0) (meters 0.5))
    )
  )

;; failed to figure out what this is:
(defpart 2407
  :init-specs ((:texture (glow-soft level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 80))
    (:rot-z (degrees 0) (degrees 3600))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 128.0)
    (:b 10.0)
    (:a 128.0)
    (:omega (degrees 6761.25))
    (:fade-a -2.55)
    (:timer (seconds 0.335))
    (:flags (glow))
    (:userdata 4096.0)
    )
  )

;; failed to figure out what this is:
(defpart 2405
  :init-specs ((:texture (hotdot level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 3) (meters 3))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 200.0)
    (:a 128.0)
    (:vel-y (meters 0.06666667) (meters 0.06666667))
    (:scalevel-x (meters -0.033333335) (meters -0.033333335))
    (:scalevel-y :copy scalevel-x)
    (:accel-y (meters -0.001))
    (:timer (seconds 0.835) (seconds 0.165))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-3 sp-cpuinfo-flag-14))
    (:conerot-x (degrees 20) (degrees 100.00001))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

;; failed to figure out what this is:
(defpart 2398
  :init-specs ((:texture (dirtpuff01 level-default-sprite))
    (:birth-func 'birth-func-inherit-size)
    (:num 1.0)
    (:scale-x (meters 0.00024414062) (meters 0.00012207031))
    (:rot-z (degrees 0) (degrees 3600))
    (:scale-y :copy scale-x)
    (:r 80.0 80.0)
    (:g 128.0)
    (:b 0.0)
    (:a 128.0)
    (:fade-a -0.42666668 -0.42666668)
    (:accel-y (meters 0) (meters -0.00006666667))
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-2))
    )
  )

;; failed to figure out what this is:
(defpartgroup group-cocoon-turret-hit
  :id 617
  :flags (sp0 sp4)
  :bounds (static-bspherem 0 0 0 640)
  :parts ((sp-item 2390 :fade-after (meters 300) :period (seconds 20) :length (seconds 0.017))
    (sp-item 2392 :fade-after (meters 300) :period (seconds 20) :length (seconds 0.017))
    )
  )

;; failed to figure out what this is:
(defpartgroup group-nst-cocoon-c-explode
  :id 618
  :flags (sp4)
  :bounds (static-bspherem 0 0 0 640)
  :parts ((sp-item 2408) (sp-item 2409) (sp-item 2410))
  )

;; failed to figure out what this is:
(defpart 2408
  :init-specs ((:texture (glow level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 50))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 128.0)
    (:b 128.0)
    (:a 128.0)
    (:scalevel-x (meters -1))
    (:scalevel-y :copy scalevel-x)
    (:timer (seconds 0.085))
    (:flags (sp-cpuinfo-flag-3))
    )
  )

;; failed to figure out what this is:
(defpart 2409
  :init-specs ((:texture (shockwave level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 10))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 128.0)
    (:b 128.0)
    (:a 128.0)
    (:scalevel-x (meters 1.3333334))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -2.0)
    (:timer (seconds 0.167))
    (:flags (sp-cpuinfo-flag-3))
    )
  )

;; failed to figure out what this is:
(defpart 2410
  :init-specs ((:texture (specs level-default-sprite))
    (:num 100.0)
    (:z (meters 5) (meters 5))
    (:scale-x (meters 5) (meters 3))
    (:rot-z (degrees 0) (degrees 3600))
    (:scale-y :copy scale-x)
    (:r 64.0 64.0)
    (:g 255.0)
    (:b 0.0)
    (:a 128.0)
    (:fade-a -0.14222223 -0.14222223)
    (:accel-y (meters -0.0016666667) (meters -0.005))
    (:friction 0.8)
    (:timer (seconds 3))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 launch-along-z))
    (:rotate-x (degrees 0) (degrees 3600))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

;; failed to figure out what this is:
(defpartgroup group-nest-ceiling-dust-1
  :id 619
  :bounds (static-bspherem 0 0 0 640)
  :parts ((sp-item 2411) (sp-item 2412) (sp-item 2413))
  )

;; failed to figure out what this is:
(defpartgroup group-nest-ceiling-dust-2
  :id 620
  :bounds (static-bspherem 0 0 0 640)
  :parts ((sp-item 2411) (sp-item 2412) (sp-item 2413))
  )

;; failed to figure out what this is:
(defpart 2411
  :init-specs ((:texture (ceiling-dust nsta-sprite))
    (:birth-func 'birth-func-curve)
    (:num 1.0)
    (:x (meters -4) (meters 8))
    (:z (meters -4) (meters 8))
    (:scale-x (meters 1))
    (:scale-y :copy scale-x)
    (:r 1.0)
    (:g 1.0)
    (:b 1.0)
    (:a 1.0)
    (:vel-y (meters -0.06666667) (meters -0.033333335))
    (:friction 0.995)
    (:timer (seconds 0.005))
    (:flags (sp-cpuinfo-flag-13))
    (:userdata 0.0)
    (:func 'live-func-curve)
    (:conerot-x (degrees 170) (degrees 20))
    (:conerot-z (degrees 170) (degrees 20))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

;; failed to figure out what this is:
(if #t
    (set! *range-color-ceiling-dust* (new 'static 'curve-color-fast
                                       :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                       :ys (new 'static 'inline-array vector 4
                                         (new 'static 'vector :x 160.0 :y 150.0 :z 95.0 :w 128.0)
                                         (new 'static 'vector :x 94.0 :y 89.0 :z 62.0 :w 128.0)
                                         (new 'static 'vector :x 94.0 :y 89.0 :z 62.0 :w 128.0)
                                         (new 'static 'vector :x 94.0 :y 89.0 :z 62.0 :w 128.0)
                                         )
                                       :one-over-x-deltas (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
                                       )
          )
    )

;; failed to figure out what this is:
(if #t
    (set! *range-alpha-ceiling-dust* (new 'static 'curve2d-fast
                                       :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                       :ys (new 'static 'vector :x 64.0 :y 128.0 :z 129.0 :w 130.0)
                                       :one-over-x-deltas (new 'static 'vector :x 64.0 :y 1.0 :z 1.0 :w 1.0)
                                       )
          )
    )

;; failed to figure out what this is:
(if #t
    (set! *range-scale-ceiling-dust-x* (new 'static 'curve2d-fast
                                         :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                         :ys (new 'static 'vector :x 10.0 :y 20.0 :z 21.0 :w 22.0)
                                         :one-over-x-deltas (new 'static 'vector :x 10.0 :y 1.0 :z 1.0 :w 1.0)
                                         )
          )
    )

;; failed to figure out what this is:
(if #t
    (set! *range-scale-ceiling-dust-y* (new 'static 'curve2d-fast
                                         :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                         :ys (new 'static 'vector :x 5.0 :y 10.0 :z 11.0 :w 12.0)
                                         :one-over-x-deltas (new 'static 'vector :x 5.0 :y 1.0 :z 1.0 :w 1.0)
                                         )
          )
    )

;; failed to figure out what this is:
(if #t
    (set! *curve-alpha-ceiling-dust* (new 'static 'curve2d-fast
                                       :xs (new 'static 'vector :y -0.2 :z -1.0 :w -2.0)
                                       :ys (new 'static 'vector :y 0.5 :w 1.0)
                                       :one-over-x-deltas (new 'static 'vector :x 2.5 :y -0.625 :z 1.0 :w 1.0)
                                       )
          )
    )

;; failed to figure out what this is:
(if #t
    (set! *curve-ceiling-dust-x* (new 'static 'curve2d-fast
                                   :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                   :ys (new 'static 'vector :x 1.0 :y 1.2 :z 2.2 :w 3.2)
                                   :one-over-x-deltas (new 'static 'vector :x 0.20000005 :y 1.0 :z 1.0 :w 1.0)
                                   )
          )
    )

;; failed to figure out what this is:
(if #t
    (set! *curve-ceiling-dust-y* (new 'static 'curve2d-fast
                                   :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                   :ys (new 'static 'vector :x 1.0 :y 8.0 :z 9.0 :w 10.0)
                                   :one-over-x-deltas (new 'static 'vector :x 7.0 :y 1.0 :z 1.0 :w 1.0)
                                   )
          )
    )

;; definition for symbol *part-nest-ceiling-dust-curve-settings*, type particle-curve-settings
(define *part-nest-ceiling-dust-curve-settings*
  (new 'static 'particle-curve-settings :lifetime-base (seconds 1) :lifetime-offset (seconds 6))
  )

;; failed to figure out what this is:
(set! (-> *part-id-table* 2411 init-specs 15 initial-valuef)
      (the-as float *part-nest-ceiling-dust-curve-settings*)
      )

;; failed to figure out what this is:
(set! (-> *part-nest-ceiling-dust-curve-settings* color-start) *range-color-ceiling-dust*)

;; failed to figure out what this is:
(set! (-> *part-nest-ceiling-dust-curve-settings* alpha-start) *range-alpha-ceiling-dust*)

;; failed to figure out what this is:
(set! (-> *part-nest-ceiling-dust-curve-settings* scale-x-start) *range-scale-ceiling-dust-x*)

;; failed to figure out what this is:
(set! (-> *part-nest-ceiling-dust-curve-settings* scale-y-start) *range-scale-ceiling-dust-y*)

;; failed to figure out what this is:
(set! (-> *part-nest-ceiling-dust-curve-settings* r-scalar) #f)

;; failed to figure out what this is:
(set! (-> *part-nest-ceiling-dust-curve-settings* g-scalar) #f)

;; failed to figure out what this is:
(set! (-> *part-nest-ceiling-dust-curve-settings* b-scalar) #f)

;; failed to figure out what this is:
(set! (-> *part-nest-ceiling-dust-curve-settings* a-scalar) *curve-alpha-ceiling-dust*)

;; failed to figure out what this is:
(set! (-> *part-nest-ceiling-dust-curve-settings* scale-x-scalar) *curve-ceiling-dust-x*)

;; failed to figure out what this is:
(set! (-> *part-nest-ceiling-dust-curve-settings* scale-y-scalar) *curve-ceiling-dust-y*)

;; failed to figure out what this is:
(defpart 2412
  :init-specs ((:texture (dust-sparkle nsta-sprite))
    (:num 5.0)
    (:x (meters -4) (meters 8))
    (:z (meters -4) (meters 8))
    (:scale-x (meters 2.5))
    (:scale-y :copy scale-x)
    (:r 160.0)
    (:g 150.0)
    (:b 95.0)
    (:a 128.0)
    (:vel-y (meters -0.06666667) (meters -0.033333335))
    (:friction 0.995)
    (:timer (seconds 3))
    (:flags ())
    (:next-time (seconds 2))
    (:next-launcher 2414)
    (:conerot-x (degrees 170) (degrees 20))
    (:conerot-z (degrees 170) (degrees 20))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

;; failed to figure out what this is:
(defpart 2414
  :init-specs ((:fade-a -0.42666668 -0.42666668))
  )

;; failed to figure out what this is:
(defpart 2413
  :init-specs ((:texture (rockbit01 level-default-sprite))
    (:birth-func 'birth-func-find-ground)
    (:num 6.0)
    (:x (meters -8) (meters 16))
    (:z (meters -8) (meters 16))
    (:scale-x (meters 0.2) (meters 0.6))
    (:scale-y (meters 0.2) (meters 0.6))
    (:r 128.0)
    (:g 128.0)
    (:b 128.0)
    (:a 128.0)
    (:scalevel-y (meters 0.0016666667) (meters 0.0016666667))
    (:accel-y (meters -0.0033333334) (meters -0.0016666667))
    (:timer (seconds 2))
    (:flags (sp-cpuinfo-flag-13))
    (:func 'spt-func-check-hit-ground)
    )
  )

;; definition for function birth-func-find-ground
;; INFO: Used lq/sq
;; WARN: Return type mismatch float vs none.
(defun birth-func-find-ground ((arg0 sparticle-system) (arg1 sparticle-cpuinfo) (arg2 sparticle-launchinfo))
  (let ((s5-0 (new 'stack-no-clear 'collide-query)))
    (let ((v1-0 (new 'stack-no-clear 'vector)))
      (set! (-> v1-0 x) (-> arg2 launchrot x))
      (set! (-> v1-0 y) (-> arg2 launchrot y))
      (set! (-> v1-0 z) (-> arg2 launchrot z))
      (set! (-> v1-0 w) 1.0)
      (let ((a0-2 s5-0))
        (set! (-> a0-2 radius) 819.2)
        (set! (-> a0-2 collide-with) (collide-spec backgnd))
        (set! (-> a0-2 ignore-process0) #f)
        (set! (-> a0-2 ignore-process1) #f)
        (set! (-> a0-2 ignore-pat)
              (new 'static 'pat-surface :noentity #x1 :nojak #x1 :probe #x1 :noendlessfall #x1 :board #x1)
              )
        (set! (-> a0-2 action-mask) (collide-action solid))
        )
      (+! (-> v1-0 y) -163840.0)
      (set! (-> s5-0 start-pos quad) (-> v1-0 quad))
      )
    (vector-reset! (-> s5-0 move-dist))
    (set! (-> s5-0 move-dist y) -163840.0)
    (if (>= (fill-and-probe-using-line-sphere *collide-cache* s5-0) 0.0)
        (set! (-> arg1 omega) (-> s5-0 best-other-tri intersect y))
        (set! (-> arg1 omega) -4095996000.0)
        )
    )
  (none)
  )

;; definition for function spt-func-check-hit-ground
;; INFO: Used lq/sq
(defun spt-func-check-hit-ground ((arg0 sparticle-system) (arg1 sparticle-cpuinfo) (arg2 sparticle-launchinfo))
  (when (< (-> arg2 launchrot y) (-> arg1 omega))
    (sp-kill-particle arg0 arg1)
    (let ((gp-0 (new 'stack-no-clear 'vector)))
      (set! (-> gp-0 x) (-> arg2 launchrot x))
      (set! (-> gp-0 y) (-> arg2 launchrot y))
      (set! (-> gp-0 z) (-> arg2 launchrot z))
      (set! (-> gp-0 w) 1.0)
      (set! (-> gp-0 y) (-> arg1 omega))
      (cond
        ((= (-> arg1 key group) (-> *part-group-id-table* 619))
         (launch-particles (-> *part-id-table* 2415) gp-0)
         (launch-particles (-> *part-id-table* 2416) gp-0)
         (launch-particles (-> *part-id-table* 2417) gp-0)
         )
        (else
          (launch-particles (-> *part-id-table* 2418) gp-0)
          (launch-particles (-> *part-id-table* 2419) gp-0)
          (launch-particles (-> *part-id-table* 2420) gp-0)
          )
        )
      )
    )
  (none)
  )

;; failed to figure out what this is:
(defpartgroup group-nest-ground-impact-dust
  :id 621
  :bounds (static-bspherem 0 0 0 640)
  :parts ((sp-item 2421))
  )

;; failed to figure out what this is:
(defpart 2421
  :init-specs ((:texture (dirtpuff01 level-default-sprite))
    (:birth-func 'birth-func-curve)
    (:num 10.0)
    (:scale-x (meters 1))
    (:rot-z (degrees -40) (degrees 80))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 128.0)
    (:b 128.0)
    (:a 128.0)
    (:vel-y (meters 0.033333335))
    (:vel-z (meters 0.13333334) (meters 0.13333334))
    (:rotvel-z (degrees -0.1) (degrees 0.2))
    (:friction 0.9 0.06)
    (:timer (seconds 0.005))
    (:flags (sp-cpuinfo-flag-13))
    (:userdata 0.0)
    (:func 'live-func-curve)
    (:conerot-x (degrees 0) (degrees 5))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

;; failed to figure out what this is:
(if #t
    (set! *range-color-ground-impact-dust* (new 'static 'curve-color-fast
                                             :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                             :ys (new 'static 'inline-array vector 4
                                               (new 'static 'vector :x 150.0 :y 120.0 :z 80.0 :w 128.0)
                                               (new 'static 'vector :x 70.0 :y 60.0 :z 40.0 :w 128.0)
                                               (new 'static 'vector :x 70.0 :y 60.0 :z 40.0 :w 128.0)
                                               (new 'static 'vector :x 70.0 :y 60.0 :z 40.0 :w 128.0)
                                               )
                                             :one-over-x-deltas (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
                                             )
          )
    )

;; failed to figure out what this is:
(if #t
    (set! *range-alpha-ground-impact-dust* (new 'static 'curve2d-fast
                                             :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                             :ys (new 'static 'vector :x 64.0 :y 128.0 :z 129.0 :w 130.0)
                                             :one-over-x-deltas (new 'static 'vector :x 64.0 :y 1.0 :z 1.0 :w 1.0)
                                             )
          )
    )

;; failed to figure out what this is:
(if #t
    (set! *range-scale-ground-impact-dust-x* (new 'static 'curve2d-fast
                                               :xs (new 'static 'vector :y -0.8 :z -1.0 :w -2.0)
                                               :ys (new 'static 'vector :x 5.0 :y 10.0 :z 15.0 :w 16.0)
                                               :one-over-x-deltas (new 'static 'vector :x 6.25 :y 25.000002 :z 1.0 :w 1.0)
                                               )
          )
    )

;; failed to figure out what this is:
(if #t
    (set! *range-scale-ground-impact-dust-y* (new 'static 'curve2d-fast
                                               :xs (new 'static 'vector :y -0.8 :z -1.0 :w -2.0)
                                               :ys (new 'static 'vector :x 5.0 :y 10.0 :z 15.0 :w 16.0)
                                               :one-over-x-deltas (new 'static 'vector :x 6.25 :y 25.000002 :z 1.0 :w 1.0)
                                               )
          )
    )

;; failed to figure out what this is:
(if #t
    (set! *curve-alpha-ground-impact-dust* (new 'static 'curve2d-fast
                                             :xs (new 'static 'vector :y -0.1 :z -0.8 :w -1.0)
                                             :ys (new 'static 'vector :y 1.0 :z 1.0)
                                             :one-over-x-deltas (new 'static 'vector :x 10.0 :z -5.0000005 :w 1.0)
                                             )
          )
    )

;; failed to figure out what this is:
(if #t
    (set! *curve-ground-impact-dust-x* (new 'static 'curve2d-fast
                                         :xs (new 'static 'vector :y -0.2 :z -1.0 :w -2.0)
                                         :ys (new 'static 'vector :x 1.0 :y 2.0 :z 3.0 :w 4.0)
                                         :one-over-x-deltas (new 'static 'vector :x 5.0 :y 1.25 :z 1.0 :w 1.0)
                                         )
          )
    )

;; failed to figure out what this is:
(if #t
    (set! *curve-ground-impact-dust-y* (new 'static 'curve2d-fast
                                         :xs (new 'static 'vector :y -0.2 :z -1.0 :w -2.0)
                                         :ys (new 'static 'vector :x 1.0 :y 2.0 :z 3.0 :w 4.0)
                                         :one-over-x-deltas (new 'static 'vector :x 5.0 :y 1.25 :z 1.0 :w 1.0)
                                         )
          )
    )

;; definition for symbol *part-nest-ground-impact-dust-curve-settings*, type particle-curve-settings
(define *part-nest-ground-impact-dust-curve-settings* (new 'static 'particle-curve-settings
                                                        :lifetime-base (seconds 1)
                                                        :lifetime-offset (seconds 2)
                                                        :flags (particle-curve-flags pcf0)
                                                        )
        )

;; failed to figure out what this is:
(set! (-> *part-id-table* 2421 init-specs 16 initial-valuef)
      (the-as float *part-nest-ground-impact-dust-curve-settings*)
      )

;; failed to figure out what this is:
(set! (-> *part-nest-ground-impact-dust-curve-settings* color-start) *range-color-ground-impact-dust*)

;; failed to figure out what this is:
(set! (-> *part-nest-ground-impact-dust-curve-settings* alpha-start) *range-alpha-ground-impact-dust*)

;; failed to figure out what this is:
(set! (-> *part-nest-ground-impact-dust-curve-settings* scale-x-start) *range-scale-ground-impact-dust-x*)

;; failed to figure out what this is:
(set! (-> *part-nest-ground-impact-dust-curve-settings* scale-y-start) *range-scale-ground-impact-dust-y*)

;; failed to figure out what this is:
(set! (-> *part-nest-ground-impact-dust-curve-settings* r-scalar) #f)

;; failed to figure out what this is:
(set! (-> *part-nest-ground-impact-dust-curve-settings* g-scalar) #f)

;; failed to figure out what this is:
(set! (-> *part-nest-ground-impact-dust-curve-settings* b-scalar) #f)

;; failed to figure out what this is:
(set! (-> *part-nest-ground-impact-dust-curve-settings* a-scalar) *curve-alpha-ground-impact-dust*)

;; failed to figure out what this is:
(set! (-> *part-nest-ground-impact-dust-curve-settings* scale-x-scalar) *curve-ground-impact-dust-x*)

;; failed to figure out what this is:
(set! (-> *part-nest-ground-impact-dust-curve-settings* scale-y-scalar) *curve-ground-impact-dust-y*)

;; failed to figure out what this is:
(defpartgroup group-nst-bridge-goo-explosion
  :id 622
  :flags (sp0)
  :bounds (static-bspherem 0 -2 0 24)
  :parts ((sp-item 2423 :period (seconds 10) :length (seconds 0.167))
    (sp-item 2424 :flags (sp3))
    (sp-item 2425 :flags (sp3))
    (sp-item 2426 :flags (sp3))
    (sp-item 2427 :flags (sp3) :binding 2422)
    (sp-item 2427 :flags (sp3) :binding 2422)
    (sp-item 2427 :flags (sp3) :binding 2422)
    (sp-item 2422 :flags (sp2) :period (seconds 10) :length (seconds 2))
    (sp-item 2422 :flags (sp2) :period (seconds 10) :length (seconds 2))
    (sp-item 2422 :flags (sp2) :period (seconds 10) :length (seconds 2))
    )
  )

;; failed to figure out what this is:
(defpart 2423
  :init-specs ((:texture (bigpuff level-default-sprite))
    (:num 10.0)
    (:y (meters 5))
    (:z (meters 3) (meters 10))
    (:scale-x (meters 1.2) (meters 3.2))
    (:rot-z (degrees 0) (degrees 3600))
    (:scale-y :copy scale-x)
    (:r 110.0)
    (:g 128.0)
    (:b 0.0)
    (:a 64.0 64.0)
    (:vel-z (meters 0.2) (meters 0.2))
    (:scalevel-x (meters 0.033333335) (meters 0.06666667))
    (:scalevel-y :copy scalevel-x)
    (:fade-r -0.6666667)
    (:fade-g -0.36)
    (:fade-b -0.64)
    (:fade-a -0.42666668 -0.42666668)
    (:friction 0.9)
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-13 sp-cpuinfo-flag-14))
    (:conerot-x (degrees 5) (degrees 10))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

;; failed to figure out what this is:
(defpart 2424
  :init-specs ((:texture (laser-hit2 level-default-sprite))
    (:num 1.0)
    (:y (meters 3))
    (:scale-x (meters 40))
    (:rot-z (degrees 0) (degrees 3600))
    (:scale-y :copy scale-x)
    (:r 64.0)
    (:g 255.0)
    (:b 10.0)
    (:a 255.0)
    (:scalevel-x (meters 1.3333334))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -6.375)
    (:timer (seconds 0.135))
    (:flags (sp-cpuinfo-flag-3))
    )
  )

;; failed to figure out what this is:
(defpart 2425
  :init-specs ((:texture (motion-blur-part level-default-sprite))
    (:num 80.0)
    (:y (meters 3))
    (:scale-x (meters 0.2) (meters 0.4))
    (:scale-y :copy scale-x)
    (:r 64.0 64.0)
    (:g 128.0)
    (:b 10.0)
    (:a 100.0 100.0)
    (:omega (degrees 0.0225))
    (:vel-y (meters 0.33333334) (meters 0.6666667))
    (:scalevel-x (meters -0.001) (meters -0.0013333333))
    (:scalevel-y :copy scalevel-x)
    (:accel-y (meters -0.00066666666) (meters -0.0026666666))
    (:friction 0.9)
    (:timer (seconds 0.5))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-3))
    (:func 'sparticle-motion-blur)
    (:conerot-x (degrees 0) (degrees 3600))
    (:conerot-z (degrees 0) (degrees 3600))
    (:conerot-radius (meters 0) (meters 0.5))
    )
  )

;; failed to figure out what this is:
(defpart 2428
  :init-specs ((:texture (glow-soft level-default-sprite))
    (:num 1.0)
    (:y (meters 3))
    (:scale-x (meters 160))
    (:rot-x (degrees 225))
    (:rot-z (degrees 0) (degrees 3600))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 128.0)
    (:b 10.0)
    (:a 128.0)
    (:omega (degrees 6761.25))
    (:fade-a -2.55)
    (:timer (seconds 0.335))
    (:flags (glow))
    (:userdata 4096.0)
    )
  )

;; failed to figure out what this is:
(defpart 2427
  :init-specs ((:texture (hotdot level-default-sprite))
    (:num 1.0)
    (:x (meters 3) (meters 5))
    (:y (meters 3))
    (:scale-x (meters 3) (meters 1))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 50.0)
    (:a 80.0)
    (:vel-y (meters 0.033333335) (meters 0.2))
    (:scalevel-x (meters -0.01) (meters -0.04))
    (:scalevel-y :copy scalevel-x)
    (:accel-y (meters -0.0005))
    (:friction 0.96)
    (:timer (seconds 0.835))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-3 aux-list sp-cpuinfo-flag-14))
    (:conerot-x (degrees 30) (degrees 60))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

;; failed to figure out what this is:
(defpart 2422
  :init-specs ((:texture (dirtpuff01 level-default-sprite))
    (:birth-func 'birth-func-inherit-size)
    (:num 0.5)
    (:scale-x (meters 0.00048828125) (meters 0.00024414062))
    (:rot-z (degrees 0) (degrees 3600))
    (:scale-y :copy scale-x)
    (:r 40.0 30.0)
    (:g 70.0 60.0)
    (:b 0.0)
    (:a 128.0)
    (:fade-a -0.21333334 -0.21333334)
    (:accel-y (meters 0) (meters -0.00006666667))
    (:timer (seconds 2))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-13))
    )
  )

;; failed to figure out what this is:
(defpartgroup group-nest-ground-impact-rocks
  :id 623
  :bounds (static-bspherem 0 0 0 2)
  :parts ((sp-item 2415) (sp-item 2416) (sp-item 2417))
  )

;; failed to figure out what this is:
(defpart 2415
  :init-specs ((:texture (bigpuff level-default-sprite))
    (:num 5.0)
    (:scale-x (meters 1) (meters 1))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 96.0 32.0)
    (:b 64.0 32.0)
    (:a 16.0 32.0)
    (:vel-y (meters 0.02) (meters 0.01))
    (:scalevel-x (meters 0.0033333334))
    (:rotvel-z (degrees -0.2) (degrees 0.4))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.16)
    (:accel-y (meters -0.00033333333))
    (:friction 0.95)
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-13))
    (:conerot-x (degrees 60) (degrees 30))
    (:conerot-y (degrees 0) (degrees 360))
    )
  )

;; failed to figure out what this is:
(defpart 2416
  :init-specs ((:texture (bigpuff level-default-sprite))
    (:num 5.0)
    (:scale-x (meters 0.5) (meters 0.25))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 96.0 32.0)
    (:b 64.0 32.0)
    (:a 16.0 16.0)
    (:vel-y (meters 0.053333335) (meters 0.02))
    (:scalevel-x (meters 0.0016666667))
    (:rotvel-z (degrees -0.2) (degrees 0.4))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.21333334)
    (:accel-y (meters -0.00033333333))
    (:friction 0.95)
    (:timer (seconds 0.5))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-13))
    (:conerot-x (degrees 60) (degrees 30))
    (:conerot-y (degrees 0) (degrees 360))
    )
  )

;; failed to figure out what this is:
(defpart 2417
  :init-specs ((:texture (middot level-default-sprite))
    (:num 5.0)
    (:x (meters -0.4) (meters 0.8))
    (:y (meters -0.1) (meters 0.4))
    (:z (meters -0.4) (meters 0.8))
    (:scale-x (meters 0.07) (meters 0.02))
    (:scale-y :copy scale-x)
    (:r 128.0 2 32.0)
    (:g 64.0 1 64.0)
    (:b 32.0 1 32.0)
    (:a 64.0 64.0)
    (:vel-y (meters 0.015) (meters 0.006666667))
    (:fade-a -0.42666668)
    (:accel-y (meters -0.0013333333) (meters 0.00066666666))
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-13))
    (:conerot-x (degrees 30) (degrees 50.000004))
    (:conerot-y (degrees 0) (degrees 360))
    (:conerot-radius (meters 0.5))
    )
  )

;; failed to figure out what this is:
(defpartgroup group-nest-mud-impact-rocks
  :id 624
  :bounds (static-bspherem 0 0 0 2)
  :parts ((sp-item 2418) (sp-item 2419) (sp-item 2420))
  )

;; failed to figure out what this is:
(defpart 2418
  :init-specs ((:texture (bigpuff level-default-sprite))
    (:num 5.0)
    (:scale-x (meters 1) (meters 1))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:a 16.0 32.0)
    (:vel-y (meters 0.02) (meters 0.01))
    (:scalevel-x (meters 0.0033333334))
    (:rotvel-z (degrees -0.2) (degrees 0.4))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.16)
    (:accel-y (meters -0.00033333333))
    (:friction 0.95)
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-13))
    (:conerot-x (degrees 60) (degrees 30))
    (:conerot-y (degrees 0) (degrees 360))
    )
  )

;; failed to figure out what this is:
(defpart 2419
  :init-specs ((:texture (bigpuff level-default-sprite))
    (:num 5.0)
    (:scale-x (meters 0.5) (meters 0.25))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:a 16.0 16.0)
    (:vel-y (meters 0.053333335) (meters 0.02))
    (:scalevel-x (meters 0.0016666667))
    (:rotvel-z (degrees -0.2) (degrees 0.4))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.21333334)
    (:accel-y (meters -0.00033333333))
    (:friction 0.95)
    (:timer (seconds 0.5))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-13))
    (:conerot-x (degrees 60) (degrees 30))
    (:conerot-y (degrees 0) (degrees 360))
    )
  )

;; failed to figure out what this is:
(defpart 2420
  :init-specs ((:texture (middot level-default-sprite))
    (:num 5.0)
    (:x (meters -0.4) (meters 0.8))
    (:y (meters -0.1) (meters 0.4))
    (:z (meters -0.4) (meters 0.8))
    (:scale-x (meters 0.07) (meters 0.02))
    (:scale-y :copy scale-x)
    (:r 128.0 2 32.0)
    (:a 64.0 64.0)
    (:vel-y (meters 0.015) (meters 0.006666667))
    (:fade-a -0.42666668)
    (:accel-y (meters -0.0013333333) (meters 0.00066666666))
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-13))
    (:conerot-x (degrees 30) (degrees 50.000004))
    (:conerot-y (degrees 0) (degrees 360))
    (:conerot-radius (meters 0.5))
    )
  )

;; failed to figure out what this is:
(defpartgroup group-part-nest-bats
  :id 625
  :bounds (static-bspherem 0 0 0 300)
  :parts ((sp-item 2429 :flags (sp3))
    (sp-item 2430 :flags (sp3))
    (sp-item 2431 :flags (sp3))
    (sp-item 2432 :flags (sp3))
    (sp-item 2433 :flags (sp3))
    (sp-item 2434 :flags (sp3))
    (sp-item 2435 :flags (sp3))
    (sp-item 2436 :flags (sp3))
    (sp-item 2437 :flags (sp3))
    (sp-item 2438 :flags (sp3))
    (sp-item 2429 :flags (sp3))
    (sp-item 2430 :flags (sp3))
    (sp-item 2431 :flags (sp3))
    (sp-item 2432 :flags (sp3))
    (sp-item 2433 :flags (sp3))
    (sp-item 2434 :flags (sp3))
    (sp-item 2435 :flags (sp3))
    (sp-item 2436 :flags (sp3))
    (sp-item 2437 :flags (sp3))
    (sp-item 2438 :flags (sp3))
    )
  )

;; failed to figure out what this is:
(defpart 2429
  :init-specs ((:texture (flying-gull-01 nstb-sprite))
    (:num 1.0)
    (:scale-x (meters 1.5))
    (:scale-y :copy scale-x)
    (:r 10.0)
    (:g 10.0)
    (:b 10.0)
    (:a 128.0)
    (:omega (degrees 3.2958984) (degrees 6.591797))
    (:rotvel-z (degrees -0.1) (degrees 0.2))
    (:timer (seconds 16.667))
    (:flags (sp-cpuinfo-flag-13))
    (:userdata :data (new 'static 'boxed-array :type int32
                       15
                       1
                       0
                       #x28600300
                       #x28600600
                       #x28600400
                       #x28600700
                       #x28600500
                       #x28600800
                       )
               )
    (:func 'part-nest-bat1-path)
    )
  )

;; definition for function part-nest-bat1-path
;; INFO: Used lq/sq
;; WARN: Return type mismatch int vs none.
(defun part-nest-bat1-path ((arg0 sparticle-system) (arg1 sparticle-cpuinfo) (arg2 vector))
  (sparticle-texture-animate arg0 arg1 arg2)
  (let ((f30-0
          (/ (the float
                  (- (the-as int (-> *part-id-table* 2429 init-specs 10 initial-valuef)) (the-as uint (-> arg1 timer)))
                  )
             (-> arg1 omega)
             )
          )
        (s3-0 (new 'stack-no-clear 'vector))
        )
    (set! (-> s3-0 x) 0.57735026)
    (set! (-> s3-0 y) 0.57735026)
    (set! (-> s3-0 z) 0.57735026)
    (set! (-> s3-0 w) 1.0)
    (let ((f28-0 (* 182.04445 (* 360.0 f30-0)))
          (v1-11 (new 'stack-no-clear 'vector))
          )
      (set! (-> v1-11 x) 1.1547005)
      (set! (-> v1-11 y) 1.7320508)
      (set! (-> v1-11 z) 2.309401)
      (set! (-> v1-11 w) 1.0)
      (let ((s2-1
              (vector-cross! (new 'stack-no-clear 'vector) s3-0 (vector-cross! (new 'stack-no-clear 'vector) s3-0 v1-11))
              )
            )
        (set! (-> arg1 rot-syvel quad) (the-as uint128 0))
        (vector-normalize! s2-1 8192.0)
        (vector-rotate-around-axis! s2-1 (the-as quaternion s2-1) f28-0 s3-0)
        (cond
          ((< 1.0 f30-0)
           (sp-kill-particle arg0 arg1)
           (sp-relaunch-particle-2d arg0 (-> *part-id-table* 2429) arg1 (the-as sprite-vec-data-2d arg2))
           )
          (else
            (let* ((a0-12 (-> arg1 key))
                   (v1-18 (-> (the-as part-tracker (-> a0-12 proc)) root trans))
                   (s5-1 (new 'stack-no-clear 'vector))
                   )
              (set! (-> s5-1 quad) (-> (the-as part-tracker (-> a0-12 proc)) mat fvec quad))
              0.0
              (set! (-> arg2 x) (+ (-> v1-18 x) (-> s2-1 x)))
              (set! (-> arg2 y) (+ (-> v1-18 y) (-> s2-1 y)))
              (set! (-> arg2 z) (+ (-> v1-18 z) (-> s2-1 z)))
              0.0
              (let ((a0-16 (-> (math-camera-matrix) fvec)))
                0.0
                (let ((v1-19 (new 'stack-no-clear 'vector)))
                  (let ((f0-22 (vector-dot a0-16 s5-1)))
                    (vector-float*! v1-19 a0-16 f0-22)
                    )
                  (vector-! s5-1 s5-1 v1-19)
                  )
                )
              (let ((a2-7 (matrix-transpose! (new 'stack-no-clear 'matrix) (math-camera-matrix))))
                (vector-matrix*! s5-1 s5-1 a2-7)
                (let ((f0-30 (the float (sar (shl (the int (atan (-> s5-1 y) (* -1.0 (-> s5-1 x)))) 48) 48))))
                  (rot-to-particle f0-30 (the-as sprite-vec-data-2d arg2) a2-7)
                  )
                )
              )
            )
          )
        )
      )
    )
  0
  (none)
  )

;; failed to figure out what this is:
(defpart 2430
  :init-specs ((:texture (flying-gull-01 nstb-sprite))
    (:num 1.0)
    (:scale-x (meters 1.6))
    (:scale-y :copy scale-x)
    (:r 5.0)
    (:g 5.0)
    (:b 5.0)
    (:a 128.0)
    (:omega (degrees 3.2958984) (degrees 6.591797))
    (:rotvel-z (degrees -0.1) (degrees 0.2))
    (:timer (seconds 16.667))
    (:flags (sp-cpuinfo-flag-13))
    (:userdata :data (new 'static 'boxed-array :type int32
                       20
                       1
                       0
                       #x28600300
                       #x28600600
                       #x28600400
                       #x28600700
                       #x28600500
                       #x28600800
                       )
               )
    (:func 'part-nest-bat2-path)
    )
  )

;; definition for function part-nest-bat2-path
;; INFO: Used lq/sq
;; WARN: Return type mismatch int vs none.
(defun part-nest-bat2-path ((arg0 sparticle-system) (arg1 sparticle-cpuinfo) (arg2 vector))
  (sparticle-texture-animate arg0 arg1 arg2)
  (let ((f30-0
          (/ (the float
                  (- (the-as int (-> *part-id-table* 2430 init-specs 10 initial-valuef)) (the-as uint (-> arg1 timer)))
                  )
             (-> arg1 omega)
             )
          )
        (s2-0 (new 'stack-no-clear 'vector))
        )
    (set! (-> s2-0 x) 0.0)
    (set! (-> s2-0 y) 1.0)
    (set! (-> s2-0 z) 0.0)
    (set! (-> s2-0 w) 1.0)
    (let ((f28-0 (* 182.04445 (* 360.0 f30-0)))
          (v1-9 (new 'stack-no-clear 'vector))
          )
      (set! (-> v1-9 x) 2.0)
      (set! (-> v1-9 y) 0.0)
      (set! (-> v1-9 z) 0.0)
      (set! (-> v1-9 w) 1.0)
      (let ((s3-1
              (vector-cross! (new 'stack-no-clear 'vector) s2-0 (vector-cross! (new 'stack-no-clear 'vector) s2-0 v1-9))
              )
            )
        (set! (-> arg1 rot-syvel quad) (the-as uint128 0))
        (vector-normalize! s3-1 32768.0)
        (vector-rotate-around-axis! s3-1 (the-as quaternion s3-1) f28-0 s2-0)
        (cond
          ((< 1.0 f30-0)
           (sp-kill-particle arg0 arg1)
           (sp-relaunch-particle-2d arg0 (-> *part-id-table* 2430) arg1 (the-as sprite-vec-data-2d arg2))
           )
          (else
            (let* ((a0-10 (-> arg1 key))
                   (v1-16 (-> a0-10 proc root trans))
                   (s5-1 (new 'stack-no-clear 'vector))
                   )
              (set! (-> s5-1 quad) (-> (the-as part-tracker (-> a0-10 proc)) mat fvec quad))
              0.0
              (set! (-> arg2 x) (+ (-> v1-16 x) (-> s3-1 x)))
              (set! (-> arg2 y) (+ (-> v1-16 y) (-> s3-1 y)))
              (set! (-> arg2 z) (+ (-> v1-16 z) (-> s3-1 z)))
              0.0
              (let ((a0-14 (-> (math-camera-matrix) fvec)))
                0.0
                (let ((v1-17 (new 'stack-no-clear 'vector)))
                  (let ((f0-22 (vector-dot a0-14 s5-1)))
                    (vector-float*! v1-17 a0-14 f0-22)
                    )
                  (vector-! s5-1 s5-1 v1-17)
                  )
                )
              (let ((a2-7 (matrix-transpose! (new 'stack-no-clear 'matrix) (math-camera-matrix))))
                (vector-matrix*! s5-1 s5-1 a2-7)
                (let ((f0-30 (the float (sar (shl (the int (atan (-> s5-1 y) (* -1.0 (-> s5-1 x)))) 48) 48))))
                  (rot-to-particle f0-30 (the-as sprite-vec-data-2d arg2) a2-7)
                  )
                )
              )
            )
          )
        )
      )
    )
  0
  (none)
  )

;; failed to figure out what this is:
(defpart 2431
  :init-specs ((:texture (flying-gull-01 nstb-sprite))
    (:num 1.0)
    (:scale-x (meters 1.7))
    (:scale-y :copy scale-x)
    (:r 1.0)
    (:g 1.0)
    (:b 1.0)
    (:a 128.0)
    (:omega (degrees 3.2958984) (degrees 6.591797))
    (:rotvel-z (degrees -0.1) (degrees 0.2))
    (:timer (seconds 16.667))
    (:flags (sp-cpuinfo-flag-13))
    (:userdata :data (new 'static 'boxed-array :type int32
                       15
                       1
                       0
                       #x28600300
                       #x28600600
                       #x28600400
                       #x28600700
                       #x28600500
                       #x28600800
                       )
               )
    (:func 'part-nest-bat3-path)
    )
  )

;; definition for function part-nest-bat3-path
;; INFO: Used lq/sq
;; WARN: Return type mismatch int vs none.
(defun part-nest-bat3-path ((arg0 sparticle-system) (arg1 sparticle-cpuinfo) (arg2 vector))
  (sparticle-texture-animate arg0 arg1 arg2)
  (let ((f30-0
          (/ (the float
                  (- (the-as int (-> *part-id-table* 2431 init-specs 10 initial-valuef)) (the-as uint (-> arg1 timer)))
                  )
             (-> arg1 omega)
             )
          )
        (s3-0 (new 'stack-no-clear 'vector))
        )
    (set! (-> s3-0 x) -0.57735026)
    (set! (-> s3-0 y) 0.57735026)
    (set! (-> s3-0 z) -0.57735026)
    (set! (-> s3-0 w) 1.0)
    (let ((f28-0 (* 182.04445 (* 360.0 f30-0)))
          (v1-11 (new 'stack-no-clear 'vector))
          )
      (set! (-> v1-11 x) 1.1547005)
      (set! (-> v1-11 y) -1.7320508)
      (set! (-> v1-11 z) -2.309401)
      (set! (-> v1-11 w) 1.0)
      (let ((s2-1
              (vector-cross! (new 'stack-no-clear 'vector) s3-0 (vector-cross! (new 'stack-no-clear 'vector) s3-0 v1-11))
              )
            )
        (set! (-> arg1 rot-syvel quad) (the-as uint128 0))
        (vector-normalize! s2-1 20480.0)
        (vector-rotate-around-axis! s2-1 (the-as quaternion s2-1) f28-0 s3-0)
        (cond
          ((< 1.0 f30-0)
           (sp-kill-particle arg0 arg1)
           (sp-relaunch-particle-2d arg0 (-> *part-id-table* 2431) arg1 (the-as sprite-vec-data-2d arg2))
           )
          (else
            (let* ((a0-12 (-> arg1 key))
                   (v1-18 (-> a0-12 proc root trans))
                   (s5-1 (new 'stack-no-clear 'vector))
                   )
              (set! (-> s5-1 quad) (-> (the-as part-tracker (-> a0-12 proc)) mat fvec quad))
              0.0
              (set! (-> arg2 x) (+ (-> v1-18 x) (-> s2-1 x)))
              (set! (-> arg2 y) (+ (-> v1-18 y) (-> s2-1 y)))
              (set! (-> arg2 z) (+ (-> v1-18 z) (-> s2-1 z)))
              0.0
              (let ((a0-16 (-> (math-camera-matrix) fvec)))
                0.0
                (let ((v1-19 (new 'stack-no-clear 'vector)))
                  (let ((f0-22 (vector-dot a0-16 s5-1)))
                    (vector-float*! v1-19 a0-16 f0-22)
                    )
                  (vector-! s5-1 s5-1 v1-19)
                  )
                )
              (let ((a2-7 (matrix-transpose! (new 'stack-no-clear 'matrix) (math-camera-matrix))))
                (vector-matrix*! s5-1 s5-1 a2-7)
                (let ((f0-30 (the float (sar (shl (the int (atan (-> s5-1 y) (* -1.0 (-> s5-1 x)))) 48) 48))))
                  (rot-to-particle f0-30 (the-as sprite-vec-data-2d arg2) a2-7)
                  )
                )
              )
            )
          )
        )
      )
    )
  0
  (none)
  )

;; failed to figure out what this is:
(defpart 2432
  :init-specs ((:texture (flying-gull-01 nstb-sprite))
    (:num 1.0)
    (:scale-x (meters 1.8))
    (:scale-y :copy scale-x)
    (:r 8.0)
    (:g 8.0)
    (:b 8.0)
    (:a 128.0)
    (:omega (degrees 3.2958984) (degrees 6.591797))
    (:rotvel-z (degrees -0.1) (degrees 0.2))
    (:timer (seconds 16.667))
    (:flags (sp-cpuinfo-flag-13))
    (:userdata :data (new 'static 'boxed-array :type int32
                       20
                       1
                       0
                       #x28600300
                       #x28600600
                       #x28600400
                       #x28600700
                       #x28600500
                       #x28600800
                       )
               )
    (:func 'part-nest-bat4-path)
    )
  )

;; definition for function part-nest-bat4-path
;; INFO: Used lq/sq
;; WARN: Return type mismatch int vs none.
(defun part-nest-bat4-path ((arg0 sparticle-system) (arg1 sparticle-cpuinfo) (arg2 vector))
  (sparticle-texture-animate arg0 arg1 arg2)
  (let ((f30-0
          (/ (the float
                  (- (the-as int (-> *part-id-table* 2432 init-specs 10 initial-valuef)) (the-as uint (-> arg1 timer)))
                  )
             (-> arg1 omega)
             )
          )
        (s3-0 (new 'stack-no-clear 'vector))
        )
    (set! (-> s3-0 x) -0.57735026)
    (set! (-> s3-0 y) -0.57735026)
    (set! (-> s3-0 z) -0.57735026)
    (set! (-> s3-0 w) 1.0)
    (let ((f28-0 (* 182.04445 (* 360.0 f30-0)))
          (v1-11 (new 'stack-no-clear 'vector))
          )
      (set! (-> v1-11 x) -1.1547005)
      (set! (-> v1-11 y) -1.7320508)
      (set! (-> v1-11 z) -2.309401)
      (set! (-> v1-11 w) 1.0)
      (let ((s2-1
              (vector-cross! (new 'stack-no-clear 'vector) s3-0 (vector-cross! (new 'stack-no-clear 'vector) s3-0 v1-11))
              )
            )
        (set! (-> arg1 rot-syvel quad) (the-as uint128 0))
        (vector-normalize! s2-1 16384.0)
        (vector-rotate-around-axis! s2-1 (the-as quaternion s2-1) f28-0 s3-0)
        (cond
          ((< 1.0 f30-0)
           (sp-kill-particle arg0 arg1)
           (sp-relaunch-particle-2d arg0 (-> *part-id-table* 2432) arg1 (the-as sprite-vec-data-2d arg2))
           )
          (else
            (let* ((a0-12 (-> arg1 key))
                   (v1-18 (-> a0-12 proc root trans))
                   (s5-1 (new 'stack-no-clear 'vector))
                   )
              (set! (-> s5-1 quad) (-> (the-as part-tracker (-> a0-12 proc)) mat fvec quad))
              0.0
              (set! (-> arg2 x) (+ (-> v1-18 x) (-> s2-1 x)))
              (set! (-> arg2 y) (+ (-> v1-18 y) (-> s2-1 y)))
              (set! (-> arg2 z) (+ (-> v1-18 z) (-> s2-1 z)))
              0.0
              (let ((a0-16 (-> (math-camera-matrix) fvec)))
                0.0
                (let ((v1-19 (new 'stack-no-clear 'vector)))
                  (let ((f0-22 (vector-dot a0-16 s5-1)))
                    (vector-float*! v1-19 a0-16 f0-22)
                    )
                  (vector-! s5-1 s5-1 v1-19)
                  )
                )
              (let ((a2-7 (matrix-transpose! (new 'stack-no-clear 'matrix) (math-camera-matrix))))
                (vector-matrix*! s5-1 s5-1 a2-7)
                (let ((f0-30 (the float (sar (shl (the int (atan (-> s5-1 y) (* -1.0 (-> s5-1 x)))) 48) 48))))
                  (rot-to-particle f0-30 (the-as sprite-vec-data-2d arg2) a2-7)
                  )
                )
              )
            )
          )
        )
      )
    )
  0
  (none)
  )

;; failed to figure out what this is:
(defpart 2433
  :init-specs ((:texture (flying-gull-01 nstb-sprite))
    (:num 1.0)
    (:scale-x (meters 1.9))
    (:scale-y :copy scale-x)
    (:r 12.0)
    (:g 12.0)
    (:b 12.0)
    (:a 128.0)
    (:omega (degrees 3.2958984) (degrees 6.591797))
    (:rotvel-z (degrees -0.1) (degrees 0.2))
    (:timer (seconds 16.667))
    (:flags (sp-cpuinfo-flag-13))
    (:userdata :data (new 'static 'boxed-array :type int32
                       15
                       1
                       0
                       #x28600300
                       #x28600600
                       #x28600400
                       #x28600700
                       #x28600500
                       #x28600800
                       )
               )
    (:func 'part-nest-bat5-path)
    )
  )

;; definition for function part-nest-bat5-path
;; INFO: Used lq/sq
;; WARN: Return type mismatch int vs none.
(defun part-nest-bat5-path ((arg0 sparticle-system) (arg1 sparticle-cpuinfo) (arg2 vector))
  (sparticle-texture-animate arg0 arg1 arg2)
  (let ((f30-0
          (/ (the float
                  (- (the-as int (-> *part-id-table* 2433 init-specs 10 initial-valuef)) (the-as uint (-> arg1 timer)))
                  )
             (-> arg1 omega)
             )
          )
        (s2-0 (new 'stack-no-clear 'vector))
        )
    (set! (-> s2-0 x) -1.0)
    (set! (-> s2-0 y) 0.0)
    (set! (-> s2-0 z) 0.0)
    (set! (-> s2-0 w) 1.0)
    (let ((f28-0 (* 182.04445 (* 360.0 f30-0)))
          (v1-9 (new 'stack-no-clear 'vector))
          )
      (set! (-> v1-9 x) 0.0)
      (set! (-> v1-9 y) 0.0)
      (set! (-> v1-9 z) -4.0)
      (set! (-> v1-9 w) 1.0)
      (let ((s3-1
              (vector-cross! (new 'stack-no-clear 'vector) s2-0 (vector-cross! (new 'stack-no-clear 'vector) s2-0 v1-9))
              )
            )
        (set! (-> arg1 rot-syvel quad) (the-as uint128 0))
        (vector-normalize! s3-1 24576.0)
        (vector-rotate-around-axis! s3-1 (the-as quaternion s3-1) f28-0 s2-0)
        (cond
          ((< 1.0 f30-0)
           (sp-kill-particle arg0 arg1)
           (sp-relaunch-particle-2d arg0 (-> *part-id-table* 2433) arg1 (the-as sprite-vec-data-2d arg2))
           )
          (else
            (let* ((a0-10 (-> arg1 key))
                   (v1-16 (-> a0-10 proc root trans))
                   (s5-1 (new 'stack-no-clear 'vector))
                   )
              (set! (-> s5-1 quad) (-> (the-as part-tracker (-> a0-10 proc)) mat fvec quad))
              0.0
              (set! (-> arg2 x) (+ (-> v1-16 x) (-> s3-1 x)))
              (set! (-> arg2 y) (+ (-> v1-16 y) (-> s3-1 y)))
              (set! (-> arg2 z) (+ (-> v1-16 z) (-> s3-1 z)))
              0.0
              (let ((a0-14 (-> (math-camera-matrix) fvec)))
                0.0
                (let ((v1-17 (new 'stack-no-clear 'vector)))
                  (let ((f0-22 (vector-dot a0-14 s5-1)))
                    (vector-float*! v1-17 a0-14 f0-22)
                    )
                  (vector-! s5-1 s5-1 v1-17)
                  )
                )
              (let ((a2-7 (matrix-transpose! (new 'stack-no-clear 'matrix) (math-camera-matrix))))
                (vector-matrix*! s5-1 s5-1 a2-7)
                (let ((f0-30 (the float (sar (shl (the int (atan (-> s5-1 y) (* -1.0 (-> s5-1 x)))) 48) 48))))
                  (rot-to-particle f0-30 (the-as sprite-vec-data-2d arg2) a2-7)
                  )
                )
              )
            )
          )
        )
      )
    )
  0
  (none)
  )

;; failed to figure out what this is:
(defpart 2434
  :init-specs ((:texture (flying-gull-01 nstb-sprite))
    (:num 1.0)
    (:scale-x (meters 1.5))
    (:scale-y :copy scale-x)
    (:r 10.0)
    (:g 10.0)
    (:b 10.0)
    (:a 128.0)
    (:omega (degrees 3.2958984) (degrees 6.591797))
    (:rotvel-z (degrees -0.1) (degrees 0.2))
    (:timer (seconds 16.667))
    (:flags (sp-cpuinfo-flag-13))
    (:userdata :data (new 'static 'boxed-array :type int32
                       15
                       1
                       0
                       #x28600300
                       #x28600600
                       #x28600400
                       #x28600700
                       #x28600500
                       #x28600800
                       )
               )
    (:func 'part-nest-bat6-path)
    )
  )

;; definition for function part-nest-bat6-path
;; INFO: Used lq/sq
;; WARN: Return type mismatch int vs none.
(defun part-nest-bat6-path ((arg0 sparticle-system) (arg1 sparticle-cpuinfo) (arg2 vector))
  (sparticle-texture-animate arg0 arg1 arg2)
  (let ((f30-0
          (/ (the float
                  (- (the-as int (-> *part-id-table* 2434 init-specs 10 initial-valuef)) (the-as uint (-> arg1 timer)))
                  )
             (-> arg1 omega)
             )
          )
        (s3-0 (new 'stack-no-clear 'vector))
        )
    (set! (-> s3-0 x) 0.57735026)
    (set! (-> s3-0 y) 0.57735026)
    (set! (-> s3-0 z) 0.57735026)
    (set! (-> s3-0 w) 1.0)
    (let ((f28-0 (* 182.04445 (* 360.0 f30-0)))
          (v1-11 (new 'stack-no-clear 'vector))
          )
      (set! (-> v1-11 x) 1.1547005)
      (set! (-> v1-11 y) 1.7320508)
      (set! (-> v1-11 z) 2.309401)
      (set! (-> v1-11 w) 1.0)
      (let ((s2-1
              (vector-cross! (new 'stack-no-clear 'vector) s3-0 (vector-cross! (new 'stack-no-clear 'vector) s3-0 v1-11))
              )
            )
        (set! (-> arg1 rot-syvel quad) (the-as uint128 0))
        (vector-normalize! s2-1 24576.0)
        (vector-rotate-around-axis! s2-1 (the-as quaternion s2-1) f28-0 s3-0)
        (cond
          ((< 1.0 f30-0)
           (sp-kill-particle arg0 arg1)
           (sp-relaunch-particle-2d arg0 (-> *part-id-table* 2434) arg1 (the-as sprite-vec-data-2d arg2))
           )
          (else
            (let* ((a0-12 (-> arg1 key))
                   (v1-18 (-> a0-12 proc root trans))
                   (s5-1 (new 'stack-no-clear 'vector))
                   )
              (set! (-> s5-1 quad) (-> (the-as part-tracker (-> a0-12 proc)) mat fvec quad))
              0.0
              (set! (-> arg2 x) (+ (-> v1-18 x) (-> s2-1 x)))
              (set! (-> arg2 y) (+ (-> v1-18 y) (-> s2-1 y)))
              (set! (-> arg2 z) (+ (-> v1-18 z) (-> s2-1 z)))
              0.0
              (let ((a0-16 (-> (math-camera-matrix) fvec)))
                0.0
                (let ((v1-19 (new 'stack-no-clear 'vector)))
                  (let ((f0-22 (vector-dot a0-16 s5-1)))
                    (vector-float*! v1-19 a0-16 f0-22)
                    )
                  (vector-! s5-1 s5-1 v1-19)
                  )
                )
              (let ((a2-7 (matrix-transpose! (new 'stack-no-clear 'matrix) (math-camera-matrix))))
                (vector-matrix*! s5-1 s5-1 a2-7)
                (let ((f0-30 (the float (sar (shl (the int (atan (-> s5-1 y) (* -1.0 (-> s5-1 x)))) 48) 48))))
                  (rot-to-particle f0-30 (the-as sprite-vec-data-2d arg2) a2-7)
                  )
                )
              )
            )
          )
        )
      )
    )
  0
  (none)
  )

;; failed to figure out what this is:
(defpart 2435
  :init-specs ((:texture (flying-gull-01 nstb-sprite))
    (:num 1.0)
    (:scale-x (meters 1.6))
    (:scale-y :copy scale-x)
    (:r 5.0)
    (:g 5.0)
    (:b 5.0)
    (:a 128.0)
    (:omega (degrees 3.2958984) (degrees 6.591797))
    (:rotvel-z (degrees -0.1) (degrees 0.2))
    (:timer (seconds 16.667))
    (:flags (sp-cpuinfo-flag-13))
    (:userdata :data (new 'static 'boxed-array :type int32
                       20
                       1
                       0
                       #x28600300
                       #x28600600
                       #x28600400
                       #x28600700
                       #x28600500
                       #x28600800
                       )
               )
    (:func 'part-nest-bat7-path)
    )
  )

;; definition for function part-nest-bat7-path
;; INFO: Used lq/sq
;; WARN: Return type mismatch int vs none.
(defun part-nest-bat7-path ((arg0 sparticle-system) (arg1 sparticle-cpuinfo) (arg2 vector))
  (sparticle-texture-animate arg0 arg1 arg2)
  (let ((f30-0
          (/ (the float
                  (- (the-as int (-> *part-id-table* 2435 init-specs 10 initial-valuef)) (the-as uint (-> arg1 timer)))
                  )
             (-> arg1 omega)
             )
          )
        (s2-0 (new 'stack-no-clear 'vector))
        )
    (set! (-> s2-0 x) 0.0)
    (set! (-> s2-0 y) 1.0)
    (set! (-> s2-0 z) 0.0)
    (set! (-> s2-0 w) 1.0)
    (let ((f28-0 (* 182.04445 (* 360.0 f30-0)))
          (v1-9 (new 'stack-no-clear 'vector))
          )
      (set! (-> v1-9 x) 2.0)
      (set! (-> v1-9 y) 0.0)
      (set! (-> v1-9 z) 0.0)
      (set! (-> v1-9 w) 1.0)
      (let ((s3-1
              (vector-cross! (new 'stack-no-clear 'vector) s2-0 (vector-cross! (new 'stack-no-clear 'vector) s2-0 v1-9))
              )
            )
        (set! (-> arg1 rot-syvel quad) (the-as uint128 0))
        (vector-normalize! s3-1 8192.0)
        (vector-rotate-around-axis! s3-1 (the-as quaternion s3-1) f28-0 s2-0)
        (cond
          ((< 1.0 f30-0)
           (sp-kill-particle arg0 arg1)
           (sp-relaunch-particle-2d arg0 (-> *part-id-table* 2435) arg1 (the-as sprite-vec-data-2d arg2))
           )
          (else
            (let* ((a0-10 (-> arg1 key))
                   (v1-16 (-> a0-10 proc root trans))
                   (s5-1 (new 'stack-no-clear 'vector))
                   )
              (set! (-> s5-1 quad) (-> (the-as part-tracker (-> a0-10 proc)) mat fvec quad))
              0.0
              (set! (-> arg2 x) (+ (-> v1-16 x) (-> s3-1 x)))
              (set! (-> arg2 y) (+ (-> v1-16 y) (-> s3-1 y)))
              (set! (-> arg2 z) (+ (-> v1-16 z) (-> s3-1 z)))
              0.0
              (let ((a0-14 (-> (math-camera-matrix) fvec)))
                0.0
                (let ((v1-17 (new 'stack-no-clear 'vector)))
                  (let ((f0-22 (vector-dot a0-14 s5-1)))
                    (vector-float*! v1-17 a0-14 f0-22)
                    )
                  (vector-! s5-1 s5-1 v1-17)
                  )
                )
              (let ((a2-7 (matrix-transpose! (new 'stack-no-clear 'matrix) (math-camera-matrix))))
                (vector-matrix*! s5-1 s5-1 a2-7)
                (let ((f0-30 (the float (sar (shl (the int (atan (-> s5-1 y) (* -1.0 (-> s5-1 x)))) 48) 48))))
                  (rot-to-particle f0-30 (the-as sprite-vec-data-2d arg2) a2-7)
                  )
                )
              )
            )
          )
        )
      )
    )
  0
  (none)
  )

;; failed to figure out what this is:
(defpart 2436
  :init-specs ((:texture (flying-gull-01 nstb-sprite))
    (:num 1.0)
    (:scale-x (meters 1.7))
    (:scale-y :copy scale-x)
    (:r 1.0)
    (:g 1.0)
    (:b 1.0)
    (:a 128.0)
    (:omega (degrees 3.2958984) (degrees 6.591797))
    (:rotvel-z (degrees -0.1) (degrees 0.2))
    (:timer (seconds 16.667))
    (:flags (sp-cpuinfo-flag-13))
    (:userdata :data (new 'static 'boxed-array :type int32
                       15
                       1
                       0
                       #x28600300
                       #x28600600
                       #x28600400
                       #x28600700
                       #x28600500
                       #x28600800
                       )
               )
    (:func 'part-nest-bat8-path)
    )
  )

;; definition for function part-nest-bat8-path
;; INFO: Used lq/sq
;; WARN: Return type mismatch int vs none.
(defun part-nest-bat8-path ((arg0 sparticle-system) (arg1 sparticle-cpuinfo) (arg2 vector))
  (sparticle-texture-animate arg0 arg1 arg2)
  (let ((f30-0
          (/ (the float
                  (- (the-as int (-> *part-id-table* 2436 init-specs 10 initial-valuef)) (the-as uint (-> arg1 timer)))
                  )
             (-> arg1 omega)
             )
          )
        (s3-0 (new 'stack-no-clear 'vector))
        )
    (set! (-> s3-0 x) -0.57735026)
    (set! (-> s3-0 y) 0.57735026)
    (set! (-> s3-0 z) -0.57735026)
    (set! (-> s3-0 w) 1.0)
    (let ((f28-0 (* 182.04445 (* 360.0 f30-0)))
          (v1-11 (new 'stack-no-clear 'vector))
          )
      (set! (-> v1-11 x) 1.1547005)
      (set! (-> v1-11 y) -1.7320508)
      (set! (-> v1-11 z) -2.309401)
      (set! (-> v1-11 w) 1.0)
      (let ((s2-1
              (vector-cross! (new 'stack-no-clear 'vector) s3-0 (vector-cross! (new 'stack-no-clear 'vector) s3-0 v1-11))
              )
            )
        (set! (-> arg1 rot-syvel quad) (the-as uint128 0))
        (vector-normalize! s2-1 32768.0)
        (vector-rotate-around-axis! s2-1 (the-as quaternion s2-1) f28-0 s3-0)
        (cond
          ((< 1.0 f30-0)
           (sp-kill-particle arg0 arg1)
           (sp-relaunch-particle-2d arg0 (-> *part-id-table* 2436) arg1 (the-as sprite-vec-data-2d arg2))
           )
          (else
            (let* ((a0-12 (-> arg1 key))
                   (v1-18 (-> a0-12 proc root trans))
                   (s5-1 (new 'stack-no-clear 'vector))
                   )
              (set! (-> s5-1 quad) (-> (the-as part-tracker (-> a0-12 proc)) mat fvec quad))
              0.0
              (set! (-> arg2 x) (+ (-> v1-18 x) (-> s2-1 x)))
              (set! (-> arg2 y) (+ (-> v1-18 y) (-> s2-1 y)))
              (set! (-> arg2 z) (+ (-> v1-18 z) (-> s2-1 z)))
              0.0
              (let ((a0-16 (-> (math-camera-matrix) fvec)))
                0.0
                (let ((v1-19 (new 'stack-no-clear 'vector)))
                  (let ((f0-22 (vector-dot a0-16 s5-1)))
                    (vector-float*! v1-19 a0-16 f0-22)
                    )
                  (vector-! s5-1 s5-1 v1-19)
                  )
                )
              (let ((a2-7 (matrix-transpose! (new 'stack-no-clear 'matrix) (math-camera-matrix))))
                (vector-matrix*! s5-1 s5-1 a2-7)
                (let ((f0-30 (the float (sar (shl (the int (atan (-> s5-1 y) (* -1.0 (-> s5-1 x)))) 48) 48))))
                  (rot-to-particle f0-30 (the-as sprite-vec-data-2d arg2) a2-7)
                  )
                )
              )
            )
          )
        )
      )
    )
  0
  (none)
  )

;; failed to figure out what this is:
(defpart 2437
  :init-specs ((:texture (flying-gull-01 nstb-sprite))
    (:num 1.0)
    (:scale-x (meters 1.8))
    (:scale-y :copy scale-x)
    (:r 8.0)
    (:g 8.0)
    (:b 8.0)
    (:a 128.0)
    (:omega (degrees 3.2958984) (degrees 6.591797))
    (:rotvel-z (degrees -0.1) (degrees 0.2))
    (:timer (seconds 16.667))
    (:flags (sp-cpuinfo-flag-13))
    (:userdata :data (new 'static 'boxed-array :type int32
                       20
                       1
                       0
                       #x28600300
                       #x28600600
                       #x28600400
                       #x28600700
                       #x28600500
                       #x28600800
                       )
               )
    (:func 'part-nest-bat9-path)
    )
  )

;; definition for function part-nest-bat9-path
;; INFO: Used lq/sq
;; WARN: Return type mismatch int vs none.
(defun part-nest-bat9-path ((arg0 sparticle-system) (arg1 sparticle-cpuinfo) (arg2 vector))
  (sparticle-texture-animate arg0 arg1 arg2)
  (let ((f30-0
          (/ (the float
                  (- (the-as int (-> *part-id-table* 2437 init-specs 10 initial-valuef)) (the-as uint (-> arg1 timer)))
                  )
             (-> arg1 omega)
             )
          )
        (s3-0 (new 'stack-no-clear 'vector))
        )
    (set! (-> s3-0 x) -0.57735026)
    (set! (-> s3-0 y) -0.57735026)
    (set! (-> s3-0 z) -0.57735026)
    (set! (-> s3-0 w) 1.0)
    (let ((f28-0 (* 182.04445 (* 360.0 f30-0)))
          (v1-11 (new 'stack-no-clear 'vector))
          )
      (set! (-> v1-11 x) -1.1547005)
      (set! (-> v1-11 y) -1.7320508)
      (set! (-> v1-11 z) -2.309401)
      (set! (-> v1-11 w) 1.0)
      (let ((s2-1
              (vector-cross! (new 'stack-no-clear 'vector) s3-0 (vector-cross! (new 'stack-no-clear 'vector) s3-0 v1-11))
              )
            )
        (set! (-> arg1 rot-syvel quad) (the-as uint128 0))
        (vector-normalize! s2-1 28672.0)
        (vector-rotate-around-axis! s2-1 (the-as quaternion s2-1) f28-0 s3-0)
        (cond
          ((< 1.0 f30-0)
           (sp-kill-particle arg0 arg1)
           (sp-relaunch-particle-2d arg0 (-> *part-id-table* 2437) arg1 (the-as sprite-vec-data-2d arg2))
           )
          (else
            (let* ((a0-12 (-> arg1 key))
                   (v1-18 (-> a0-12 proc root trans))
                   (s5-1 (new 'stack-no-clear 'vector))
                   )
              (set! (-> s5-1 quad) (-> (the-as part-tracker (-> a0-12 proc)) mat fvec quad))
              0.0
              (set! (-> arg2 x) (+ (-> v1-18 x) (-> s2-1 x)))
              (set! (-> arg2 y) (+ (-> v1-18 y) (-> s2-1 y)))
              (set! (-> arg2 z) (+ (-> v1-18 z) (-> s2-1 z)))
              0.0
              (let ((a0-16 (-> (math-camera-matrix) fvec)))
                0.0
                (let ((v1-19 (new 'stack-no-clear 'vector)))
                  (let ((f0-22 (vector-dot a0-16 s5-1)))
                    (vector-float*! v1-19 a0-16 f0-22)
                    )
                  (vector-! s5-1 s5-1 v1-19)
                  )
                )
              (let ((a2-7 (matrix-transpose! (new 'stack-no-clear 'matrix) (math-camera-matrix))))
                (vector-matrix*! s5-1 s5-1 a2-7)
                (let ((f0-30 (the float (sar (shl (the int (atan (-> s5-1 y) (* -1.0 (-> s5-1 x)))) 48) 48))))
                  (rot-to-particle f0-30 (the-as sprite-vec-data-2d arg2) a2-7)
                  )
                )
              )
            )
          )
        )
      )
    )
  0
  (none)
  )

;; failed to figure out what this is:
(defpart 2438
  :init-specs ((:texture (flying-gull-01 nstb-sprite))
    (:num 1.0)
    (:scale-x (meters 1.9))
    (:scale-y :copy scale-x)
    (:r 12.0)
    (:g 12.0)
    (:b 12.0)
    (:a 128.0)
    (:omega (degrees 3.2958984) (degrees 6.591797))
    (:rotvel-z (degrees -0.1) (degrees 0.2))
    (:timer (seconds 16.667))
    (:flags (sp-cpuinfo-flag-13))
    (:userdata :data (new 'static 'boxed-array :type int32
                       15
                       1
                       0
                       #x28600300
                       #x28600600
                       #x28600400
                       #x28600700
                       #x28600500
                       #x28600800
                       )
               )
    (:func 'part-nest-bat10-path)
    )
  )

;; failed to figure out what this is:
(defpartgroup group-turbo-ring
  :id 626
  :duration (seconds 218.45)
  :linger-duration (seconds 0)
  :bounds (static-bspherem 0 0 0 8)
  :parts ((sp-item 2439 :flags (is-3d sp6 sp7))
    (sp-item 2440 :fade-after (meters 100) :flags (is-3d sp6 sp7))
    (sp-item 2441 :fade-after (meters 150) :falloff-to (meters 150) :flags (is-3d sp7))
    )
  )

;; failed to figure out what this is:
(defpart 2439
  :init-specs ((:texture (errol-ring-01 nstb-sprite))
    (:num 1.0)
    (:scale-x (meters 12))
    (:rot-x (degrees 90))
    (:scale-y :copy scale-x)
    (:r 0.0)
    (:g 64.0 64.0)
    (:b 255.0)
    (:a 128.0)
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-14))
    (:rotate-y (degrees 0))
    )
  )

;; failed to figure out what this is:
(defpart 2440
  :init-specs ((:texture (ripples level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 12))
    (:rot-x (degrees 90))
    (:scale-y :copy scale-x)
    (:r 0.0)
    (:g 0.0 64.0)
    (:b 255.0)
    (:a 128.0)
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-14))
    (:rotate-y (degrees 0))
    )
  )

;; failed to figure out what this is:
(defpart 2441
  :init-specs ((:texture (errol-ring-02 nstb-sprite))
    (:num 0.0 1.0)
    (:scale-x (meters 13) (meters 1))
    (:rot-x (degrees 90))
    (:scale-y :copy scale-x)
    (:r 0.0)
    (:g 0.0 128.0)
    (:b 255.0)
    (:a 127.0)
    (:scalevel-x (meters -0.175))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.8 -0.8)
    (:timer (seconds 0.267))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-14))
    (:rotate-y (degrees 0))
    )
  )

;; failed to figure out what this is:
(defpartgroup group-turbo-ring-explode
  :id 627
  :duration (seconds 0.067)
  :linger-duration (seconds 0.5)
  :bounds (static-bspherem 0 0 0 8)
  :parts ((sp-item 2442 :flags (is-3d sp6 sp7)) (sp-item 2443 :flags (sp6 sp7)))
  )

;; failed to figure out what this is:
(defpart 2442
  :init-specs ((:texture (middot level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 12))
    (:rot-x (degrees 90))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 128.0)
    (:fade-r -8.5)
    (:fade-g -4.25)
    (:fade-b 0.0)
    (:fade-a -2.1333334)
    (:timer (seconds 0.2))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-14))
    (:rotate-y (degrees 0))
    )
  )

;; failed to figure out what this is:
(defpart 2443
  :init-specs ((:texture (glow-soft level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 36))
    (:rot-x (degrees 90))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 32.0)
    (:fade-r -17.0)
    (:fade-g -8.5)
    (:fade-b 0.0)
    (:fade-a -1.0666667)
    (:timer (seconds 0.1))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 0.0)
    (:rotate-y (degrees 0))
    )
  )

;; definition for function part-nest-bat10-path
;; INFO: Used lq/sq
;; WARN: Return type mismatch int vs none.
(defun part-nest-bat10-path ((arg0 sparticle-system) (arg1 sparticle-cpuinfo) (arg2 vector))
  (sparticle-texture-animate arg0 arg1 arg2)
  (let ((f30-0
          (/ (the float
                  (- (the-as int (-> *part-id-table* 2438 init-specs 10 initial-valuef)) (the-as uint (-> arg1 timer)))
                  )
             (-> arg1 omega)
             )
          )
        (s2-0 (new 'stack-no-clear 'vector))
        )
    (set! (-> s2-0 x) -1.0)
    (set! (-> s2-0 y) 0.0)
    (set! (-> s2-0 z) 0.0)
    (set! (-> s2-0 w) 1.0)
    (let ((f28-0 (* 182.04445 (* 360.0 f30-0)))
          (v1-9 (new 'stack-no-clear 'vector))
          )
      (set! (-> v1-9 x) 0.0)
      (set! (-> v1-9 y) 0.0)
      (set! (-> v1-9 z) -4.0)
      (set! (-> v1-9 w) 1.0)
      (let ((s3-1
              (vector-cross! (new 'stack-no-clear 'vector) s2-0 (vector-cross! (new 'stack-no-clear 'vector) s2-0 v1-9))
              )
            )
        (set! (-> arg1 rot-syvel quad) (the-as uint128 0))
        (vector-normalize! s3-1 8192.0)
        (vector-rotate-around-axis! s3-1 (the-as quaternion s3-1) f28-0 s2-0)
        (cond
          ((< 1.0 f30-0)
           (sp-kill-particle arg0 arg1)
           (sp-relaunch-particle-2d arg0 (-> *part-id-table* 2438) arg1 (the-as sprite-vec-data-2d arg2))
           )
          (else
            (let* ((a0-10 (-> arg1 key))
                   (v1-16 (-> a0-10 proc root trans))
                   (s5-1 (new 'stack-no-clear 'vector))
                   )
              (set! (-> s5-1 quad) (-> (the-as part-tracker (-> a0-10 proc)) mat fvec quad))
              0.0
              (set! (-> arg2 x) (+ (-> v1-16 x) (-> s3-1 x)))
              (set! (-> arg2 y) (+ (-> v1-16 y) (-> s3-1 y)))
              (set! (-> arg2 z) (+ (-> v1-16 z) (-> s3-1 z)))
              0.0
              (let ((a0-14 (-> (math-camera-matrix) fvec)))
                0.0
                (let ((v1-17 (new 'stack-no-clear 'vector)))
                  (let ((f0-22 (vector-dot a0-14 s5-1)))
                    (vector-float*! v1-17 a0-14 f0-22)
                    )
                  (vector-! s5-1 s5-1 v1-17)
                  )
                )
              (let ((a2-7 (matrix-transpose! (new 'stack-no-clear 'matrix) (math-camera-matrix))))
                (vector-matrix*! s5-1 s5-1 a2-7)
                (let ((f0-30 (the float (sar (shl (the int (atan (-> s5-1 y) (* -1.0 (-> s5-1 x)))) 48) 48))))
                  (rot-to-particle f0-30 (the-as sprite-vec-data-2d arg2) a2-7)
                  )
                )
              )
            )
          )
        )
      )
    )
  0
  (none)
  )

;; failed to figure out what this is:
(defpartgroup group-nst-bridge-break-dust
  :id 628
  :flags (sp0)
  :bounds (static-bspherem 0 0 0 4)
  :parts ((sp-item 2444))
  )

;; failed to figure out what this is:
(defpart 2444
  :init-specs ((:texture (dirtpuff01 level-default-sprite))
    (:num 10.0)
    (:scale-x (meters 10) (meters 10))
    (:scale-y :copy scale-x)
    (:r 90.0 10.0)
    (:g 80.0 10.0)
    (:b 60.0 10.0)
    (:a 32.0 32.0)
    (:vel-z (meters 0.016666668) (meters 0.05))
    (:fade-a -0.10666667)
    (:friction 0.97)
    (:timer (seconds 2))
    (:flags (sp-cpuinfo-flag-13))
    (:conerot-y (degrees -20) (degrees 40))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

;; failed to figure out what this is:
(defpartgroup group-nst-bridge-break-splash
  :id 629
  :flags (sp0)
  :bounds (static-bspherem 0 0 0 4)
  :parts ((sp-item 2445 :period (seconds 10) :length (seconds 0.2))
    (sp-item 2446 :flags (is-3d) :period (seconds 10) :length (seconds 0.067))
    (sp-item 2447 :period (seconds 10) :length (seconds 0.1))
    (sp-item 2448 :flags (is-3d) :period (seconds 10) :length (seconds 0.5) :offset 150)
    )
  )

;; failed to figure out what this is:
(defpart 2445
  :init-specs ((:texture (splash level-default-sprite))
    (:birth-func 'birth-func-nstb-set-height-and-curve)
    (:num 10.0)
    (:scale-x (meters 1))
    (:scale-y (meters 1))
    (:r 128.0)
    (:g 128.0)
    (:b 128.0)
    (:a 128.0)
    (:vel-z (meters 0.06666667))
    (:friction 0.96)
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-13))
    (:userdata 0.0)
    (:func 'live-func-curve)
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

;; failed to figure out what this is:
(if #t
    (set! *range-nst-splash-color* (new 'static 'curve-color-fast
                                     :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                     :ys (new 'static 'inline-array vector 4
                                       (new 'static 'vector :x 148.0 :y 138.0 :z 100.0 :w 128.0)
                                       (new 'static 'vector :x 255.0 :y 255.0 :z 230.0 :w 128.0)
                                       (new 'static 'vector :x 255.0 :y 255.0 :z 230.0 :w 128.0)
                                       (new 'static 'vector :x 255.0 :y 255.0 :z 230.0 :w 128.0)
                                       )
                                     :one-over-x-deltas (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
                                     )
          )
    )

;; failed to figure out what this is:
(if #t
    (set! *range-nst-splash-alpha* (new 'static 'curve2d-fast
                                     :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                     :ys (new 'static 'vector :x 64.0 :y 200.0 :z 201.0 :w 202.0)
                                     :one-over-x-deltas (new 'static 'vector :x 136.0 :y 1.0 :z 1.0 :w 1.0)
                                     )
          )
    )

;; failed to figure out what this is:
(if #t
    (set! *range-nst-splash-scale-x* (new 'static 'curve2d-fast
                                       :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                       :ys (new 'static 'vector :x 5.0 :y 10.0 :z 11.0 :w 12.0)
                                       :one-over-x-deltas (new 'static 'vector :x 5.0 :y 1.0 :z 1.0 :w 1.0)
                                       )
          )
    )

;; failed to figure out what this is:
(if #t
    (set! *range-nst-splash-scale-y* (new 'static 'curve2d-fast
                                       :xs (new 'static 'vector :y -0.9 :z -1.0 :w -2.0)
                                       :ys (new 'static 'vector :x 5.0 :y 10.0 :z 20.0 :w 21.0)
                                       :one-over-x-deltas (new 'static 'vector :x 5.555556 :y 99.99998 :z 1.0 :w 1.0)
                                       )
          )
    )

;; failed to figure out what this is:
(if #t
    (set! *curve-nst-splash-alpha* (new 'static 'curve2d-fast
                                     :xs (new 'static 'vector :y -0.1 :z -1.0 :w -2.0)
                                     :ys (new 'static 'vector :y 1.0 :w 1.0)
                                     :one-over-x-deltas (new 'static 'vector :x 10.0 :y -1.1111112 :z 1.0 :w 1.0)
                                     )
          )
    )

;; failed to figure out what this is:
(if #t
    (set! *curve-nst-splash-scale-x* (new 'static 'curve2d-fast
                                       :xs (new 'static 'vector :y -0.2 :z -1.0 :w -2.0)
                                       :ys (new 'static 'vector :x 1.0 :y 1.0 :z 2.0 :w 3.0)
                                       :one-over-x-deltas (new 'static 'vector :y 1.25 :z 1.0 :w 1.0)
                                       )
          )
    )

;; failed to figure out what this is:
(if #t
    (set! *curve-nst-splash-scale-y* (new 'static 'curve2d-fast
                                       :xs (new 'static 'vector :y -0.2 :z -0.5 :w -1.0)
                                       :ys (new 'static 'vector :y 2.0 :z 0.5)
                                       :one-over-x-deltas (new 'static 'vector :x 10.0 :y -5.0 :z -1.0 :w 1.0)
                                       )
          )
    )

;; definition for symbol *part-bridge-break-splash-curve-settings*, type particle-curve-settings
(define *part-bridge-break-splash-curve-settings*
  (new 'static 'particle-curve-settings :lifetime-base (seconds 1) :lifetime-offset (seconds 1))
  )

;; failed to figure out what this is:
(set! (-> *part-id-table* 2445 init-specs 13 initial-valuef)
      (the-as float *part-bridge-break-splash-curve-settings*)
      )

;; failed to figure out what this is:
(set! (-> *part-bridge-break-splash-curve-settings* color-start) *range-nst-splash-color*)

;; failed to figure out what this is:
(set! (-> *part-bridge-break-splash-curve-settings* alpha-start) *range-nst-splash-alpha*)

;; failed to figure out what this is:
(set! (-> *part-bridge-break-splash-curve-settings* scale-x-start) *range-nst-splash-scale-x*)

;; failed to figure out what this is:
(set! (-> *part-bridge-break-splash-curve-settings* scale-y-start) *range-nst-splash-scale-y*)

;; failed to figure out what this is:
(set! (-> *part-bridge-break-splash-curve-settings* r-scalar) #f)

;; failed to figure out what this is:
(set! (-> *part-bridge-break-splash-curve-settings* g-scalar) #f)

;; failed to figure out what this is:
(set! (-> *part-bridge-break-splash-curve-settings* b-scalar) #f)

;; failed to figure out what this is:
(set! (-> *part-bridge-break-splash-curve-settings* a-scalar) *curve-nst-splash-alpha*)

;; failed to figure out what this is:
(set! (-> *part-bridge-break-splash-curve-settings* scale-x-scalar) *curve-nst-splash-scale-x*)

;; failed to figure out what this is:
(set! (-> *part-bridge-break-splash-curve-settings* scale-y-scalar) *curve-nst-splash-scale-y*)

;; failed to figure out what this is:
(defpart 2446
  :init-specs ((:texture (splash-foam level-default-sprite))
    (:birth-func 'birth-func-nstb-set-height)
    (:num 0.8)
    (:scale-x (meters 20))
    (:rot-y (degrees 0) (degrees 3600))
    (:scale-y (meters 20))
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 128.0)
    (:scalevel-x (meters 0.01) (meters 0.0033333334))
    (:scalevel-y (meters 0.01) (meters 0.0033333334))
    (:fade-a -0.21333334)
    (:timer (seconds 2))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-13 left-multiply-quat))
    )
  )

;; failed to figure out what this is:
(defpart 2447
  :init-specs ((:texture (water-drops level-default-sprite))
    (:birth-func 'birth-func-nstb-set-height)
    (:num 3.0)
    (:x (meters 0) (meters 10))
    (:scale-x (meters 1) (meters 3))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 248.0)
    (:g 238.0)
    (:b 200.0)
    (:a 64.0 80.0)
    (:vel-y (meters 0.033333335) (meters 0.06666667))
    (:scalevel-x (meters 0.02) (meters 0.01))
    (:rotvel-z (degrees -0.1) (degrees 0.2))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.12)
    (:accel-y (meters -0.0016666667))
    (:timer (seconds 4))
    (:flags (sp-cpuinfo-flag-13))
    (:conerot-x (degrees -20) (degrees 40))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

;; failed to figure out what this is:
(defpart 2448
  :init-specs ((:texture (ripples level-default-sprite))
    (:birth-func 'birth-func-nstb-set-height-and-texture-group)
    (:num 0.5 1.0)
    (:x (meters 1) (meters 5))
    (:scale-x (meters 0.1) (meters 0.2))
    (:rot-y (degrees 0) (degrees 3600))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 64.0 64.0)
    (:scalevel-x (meters 0.001) (meters 0.0033333334))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.21333334)
    (:timer (seconds 2))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-13 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type int32 5 1 0 #x408300 #x408300 #x408300 #x408200))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

;; definition for function birth-func-nstb-set-height-and-curve
(defun birth-func-nstb-set-height-and-curve ((arg0 sparticle-system) (arg1 sparticle-cpuinfo) (arg2 sparticle-launchinfo))
  (set! (-> arg2 launchrot y) -432128.0)
  (birth-func-curve (the-as int arg0) arg1 arg2)
  (none)
  )

;; definition for function birth-func-nstb-set-height
;; WARN: Return type mismatch float vs none.
(defun birth-func-nstb-set-height ((arg0 sparticle-system) (arg1 sparticle-cpuinfo) (arg2 sparticle-launchinfo))
  (set! (-> arg2 launchrot y) -432128.0)
  (none)
  )

;; definition for function birth-func-nstb-set-height-and-texture-group
(defun birth-func-nstb-set-height-and-texture-group ((arg0 sparticle-system) (arg1 sparticle-cpuinfo) (arg2 sparticle-launchinfo))
  (set! (-> arg2 launchrot y) -432128.0)
  (birth-func-texture-group (the-as int arg0) arg1 arg2)
  (none)
  )

;; failed to figure out what this is:
(defpartgroup group-nest-orange-xmas-light-glow
  :id 630
  :bounds (static-bspherem 0 0 0 8)
  :parts ((sp-item 2449 :fade-after (meters 200)))
  )

;; failed to figure out what this is:
(defpart 2449
  :init-specs ((:texture (glow level-default-sprite))
    (:num 0.1 0.1)
    (:scale-x (meters 10) (meters 4))
    (:rot-x (degrees 22.5))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 70.0 40.0)
    (:b 10.0 10.0)
    (:a 0.0)
    (:omega (degrees 4515.75))
    (:fade-a 0.16)
    (:timer (seconds 1.335))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 4096.0)
    (:next-time (seconds 0.667))
    (:next-launcher 2450)
    )
  )

;; failed to figure out what this is:
(defpart 2450
  :init-specs ((:fade-a -0.16))
  )

;; failed to figure out what this is:
(defpartgroup group-nest-big-orange-light-glow
  :id 631
  :bounds (static-bspherem 0 0 0 8)
  :parts ((sp-item 2451 :fade-after (meters 200)))
  )

;; failed to figure out what this is:
(defpart 2451
  :init-specs ((:texture (glow level-default-sprite))
    (:num 0.1 0.1)
    (:scale-x (meters 6) (meters 4))
    (:rot-x (degrees 22.5))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 138.0)
    (:g 70.0 20.0)
    (:b 10.0 10.0)
    (:a 0.0)
    (:omega (degrees 4515.75))
    (:fade-a 0.16)
    (:timer (seconds 0.667))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 4096.0)
    (:next-time (seconds 0.335))
    (:next-launcher 2452)
    )
  )

;; failed to figure out what this is:
(defpart 2452
  :init-specs ((:fade-a -0.16))
  )

;; failed to figure out what this is:
(defpartgroup group-nest-green-light-glow
  :id 632
  :bounds (static-bspherem 0 0 0 8)
  :parts ((sp-item 2453 :fade-after (meters 200)))
  )

;; failed to figure out what this is:
(defpart 2453
  :init-specs ((:texture (glow level-default-sprite))
    (:num 0.1 0.1)
    (:scale-x (meters 2) (meters 2))
    (:rot-x (degrees 22.5))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 100.0 30.0)
    (:g 128.0)
    (:b 10.0 10.0)
    (:a 0.0)
    (:omega (degrees 4515.75))
    (:fade-a 0.08)
    (:timer (seconds 0.667))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 4096.0)
    (:next-time (seconds 0.335))
    (:next-launcher 2454)
    )
  )

;; failed to figure out what this is:
(defpartgroup group-cocoon-poison-gas-smoke
  :id 633
  :flags (sp0 sp4)
  :bounds (static-bspherem 0 0 0 30)
  :parts ((sp-item 2455 :fade-after (meters 600) :falloff-to (meters 700)))
  )

;; failed to figure out what this is:
(defpart 2455
  :init-specs ((:texture (bigpuff level-default-sprite))
    (:birth-func 'birth-func-curve)
    (:num 1.0)
    (:scale-x (meters 1))
    (:scale-y :copy scale-x)
    (:r 0.0)
    (:g 0.0)
    (:b 0.0)
    (:a 0.0)
    (:vel-y (meters -0.06666667) (meters -0.016666668))
    (:accel-x (meters -0.00033333333) (meters 0.00066666666))
    (:accel-z (meters -0.00033333333) (meters 0.00066666666))
    (:friction 0.98)
    (:timer (seconds 0.005))
    (:flags (sp-cpuinfo-flag-2))
    (:userdata 0.0)
    (:func 'live-func-curve)
    (:conerot-x (degrees -10) (degrees 20))
    (:rotate-y (degrees 0))
    )
  )

;; failed to figure out what this is:
(if #t
    (set! *range-color-cocoon-poison-gas* (new 'static 'curve-color-fast
                                            :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                            :ys (new 'static 'inline-array vector 4
                                              (new 'static 'vector :x 255.0 :y 255.0 :z 255.0 :w 128.0)
                                              (new 'static 'vector :x 128.0 :y 128.0 :z 128.0 :w 128.0)
                                              (new 'static 'vector :x 128.0 :y 128.0 :z 128.0 :w 128.0)
                                              (new 'static 'vector :x 128.0 :y 128.0 :z 128.0 :w 128.0)
                                              )
                                            :one-over-x-deltas (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
                                            )
          )
    )

;; failed to figure out what this is:
(if #t
    (set! *range-alpha-cocoon-poison-gas* (new 'static 'curve2d-fast
                                            :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                            :ys (new 'static 'vector :x 128.0 :y 64.0 :z 65.0 :w 66.0)
                                            :one-over-x-deltas (new 'static 'vector :x -64.0 :y 1.0 :z 1.0 :w 1.0)
                                            )
          )
    )

;; failed to figure out what this is:
(if #t
    (set! *range-scale-cocoon-poison-gas-x* (new 'static 'curve2d-fast
                                              :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                              :ys (new 'static 'vector :x 3.0 :y 5.0 :z 6.0 :w 7.0)
                                              :one-over-x-deltas (new 'static 'vector :x 2.0 :y 1.0 :z 1.0 :w 1.0)
                                              )
          )
    )

;; failed to figure out what this is:
(if #t
    (set! *range-scale-cocoon-poison-gas-y* (new 'static 'curve2d-fast
                                              :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                              :ys (new 'static 'vector :x 3.0 :y 5.0 :z 6.0 :w 7.0)
                                              :one-over-x-deltas (new 'static 'vector :x 2.0 :y 1.0 :z 1.0 :w 1.0)
                                              )
          )
    )

;; failed to figure out what this is:
(if #t
    (set! *r-curve-cocoon-poison-gas* (new 'static 'curve2d-fast
                                        :xs (new 'static 'vector :y -0.5 :z -1.0 :w -2.0)
                                        :ys (new 'static 'vector :x 1.0 :w 1.0)
                                        :one-over-x-deltas (new 'static 'vector :x -2.0 :z 1.0 :w 1.0)
                                        )
          )
    )

;; failed to figure out what this is:
(if #t
    (set! *g-curve-cocoon-poison-gas* (new 'static 'curve2d-fast
                                        :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                        :ys (new 'static 'vector :x 1.0 :y 1.0 :z 2.0 :w 3.0)
                                        :one-over-x-deltas (new 'static 'vector :y 1.0 :z 1.0 :w 1.0)
                                        )
          )
    )

;; failed to figure out what this is:
(if #t
    (set! *b-curve-cocoon-poison-gas* (new 'static 'curve2d-fast
                                        :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                        :ys (new 'static 'vector :x 0.1 :y 0.1 :z 1.1 :w 2.1)
                                        :one-over-x-deltas (new 'static 'vector :y 1.0 :z 0.9999999 :w 1.0)
                                        )
          )
    )

;; failed to figure out what this is:
(if #t
    (set! *curve-alpha-cocoon-poison-gas* (new 'static 'curve2d-fast
                                            :xs (new 'static 'vector :y -0.4 :z -0.7 :w -1.0)
                                            :ys (new 'static 'vector :y 1.0 :z 0.3)
                                            :one-over-x-deltas (new 'static 'vector :x 2.5 :y -2.3333335 :z -1.0 :w 1.0)
                                            )
          )
    )

;; failed to figure out what this is:
(if #t
    (set! *curve-cocoon-poison-gas-x* (new 'static 'curve2d-fast
                                        :xs (new 'static 'vector :y -0.5 :z -1.0 :w -2.0)
                                        :ys (new 'static 'vector :x 0.3 :y 1.0 :z 1.5 :w 2.5)
                                        :one-over-x-deltas (new 'static 'vector :x 1.4 :y 1.0 :z 1.0 :w 1.0)
                                        )
          )
    )

;; failed to figure out what this is:
(if #t
    (set! *curve-cocoon-poison-gas-y* (new 'static 'curve2d-fast
                                        :xs (new 'static 'vector :y -0.5 :z -1.0 :w -2.0)
                                        :ys (new 'static 'vector :x 0.3 :y 1.0 :z 1.5 :w 2.5)
                                        :one-over-x-deltas (new 'static 'vector :x 1.4 :y 1.0 :z 1.0 :w 1.0)
                                        )
          )
    )

;; definition for symbol *part-cocoon-poison-gas-curve-settings*, type particle-curve-settings
(define *part-cocoon-poison-gas-curve-settings* (new 'static 'particle-curve-settings
                                                  :lifetime-base (seconds 1)
                                                  :lifetime-offset (seconds 1)
                                                  :flags (particle-curve-flags pcf0 pcf1)
                                                  )
        )

;; failed to figure out what this is:
(set! (-> *part-id-table* 2455 init-specs 15 initial-valuef)
      (the-as float *part-cocoon-poison-gas-curve-settings*)
      )

;; failed to figure out what this is:
(set! (-> *part-cocoon-poison-gas-curve-settings* color-start) *range-color-cocoon-poison-gas*)

;; failed to figure out what this is:
(set! (-> *part-cocoon-poison-gas-curve-settings* alpha-start) *range-alpha-cocoon-poison-gas*)

;; failed to figure out what this is:
(set! (-> *part-cocoon-poison-gas-curve-settings* scale-x-start) *range-scale-cocoon-poison-gas-x*)

;; failed to figure out what this is:
(set! (-> *part-cocoon-poison-gas-curve-settings* scale-y-start) *range-scale-cocoon-poison-gas-y*)

;; failed to figure out what this is:
(set! (-> *part-cocoon-poison-gas-curve-settings* r-scalar) *r-curve-cocoon-poison-gas*)

;; failed to figure out what this is:
(set! (-> *part-cocoon-poison-gas-curve-settings* g-scalar) *g-curve-cocoon-poison-gas*)

;; failed to figure out what this is:
(set! (-> *part-cocoon-poison-gas-curve-settings* b-scalar) *b-curve-cocoon-poison-gas*)

;; failed to figure out what this is:
(set! (-> *part-cocoon-poison-gas-curve-settings* a-scalar) *curve-alpha-cocoon-poison-gas*)

;; failed to figure out what this is:
(set! (-> *part-cocoon-poison-gas-curve-settings* scale-x-scalar) *curve-cocoon-poison-gas-x*)

;; failed to figure out what this is:
(set! (-> *part-cocoon-poison-gas-curve-settings* scale-y-scalar) *curve-cocoon-poison-gas-y*)

;; failed to figure out what this is:
(defpartgroup group-cocoon-grenade-shot
  :id 634
  :duration (seconds 0.5)
  :flags (sp0)
  :bounds (static-bspherem 0 0 0 4)
  :parts ((sp-item 2456) (sp-item 2457) (sp-item 2458))
  )

;; failed to figure out what this is:
(defpart 2456
  :init-specs ((:texture (glow level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 3) (meters 1))
    (:rot-x (degrees 2.25))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 64.0)
    (:fade-r -25.5)
    (:fade-g -11.0)
    (:fade-b -25.5)
    (:fade-a -8.533334)
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-14 glow))
    (:userdata 409.6)
    )
  )

;; failed to figure out what this is:
(defpart 2457
  :init-specs ((:texture (radial-gradient-yellow level-default-sprite))
    (:num 4.0)
    (:scale-x (meters 1) (meters 0.2))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 128.0)
    (:scalevel-x (meters -0.01))
    (:rotvel-z (degrees -1.2) (degrees 1.2))
    (:scalevel-y :copy scalevel-x)
    (:fade-r -6.375)
    (:fade-g -1.375)
    (:fade-b -6.375)
    (:fade-a -3.2 -3.2)
    (:timer (seconds 0.135))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:conerot-x (degrees 0) (degrees 360))
    (:conerot-y (degrees 0) (degrees 360))
    (:conerot-radius (meters 0) (meters 0.2))
    )
  )

;; failed to figure out what this is:
(defpart 2458
  :init-specs ((:texture (radial-gradient-yellow level-default-sprite))
    (:num 2.0 1.0)
    (:scale-x (meters 0.8) (meters 0.4))
    (:scale-y (meters 0.6) (meters 0.2))
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 64.0 32.0)
    (:scalevel-x (meters -0.0026666666) (meters -0.0026666666))
    (:scalevel-y :copy scalevel-x)
    (:fade-r -3.4)
    (:fade-g -0.73333335)
    (:fade-b -3.4)
    (:accel-y (meters -0.00033333333) (meters -0.001))
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:next-time (seconds 0.25))
    (:next-launcher 2459)
    (:conerot-x (degrees 0) (degrees 360))
    (:conerot-y (degrees 0) (degrees 360))
    (:conerot-radius (meters 0) (meters 0.35))
    )
  )

;; failed to figure out what this is:
(defpart 2459
  :init-specs ((:fade-r 0.0) (:fade-g 0.0) (:fade-b 0.0) (:fade-a -0.48 -0.48))
  )




