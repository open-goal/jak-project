;;-*-Lisp-*-
(in-package goal)

;; definition of type deschase-node
(deftype deschase-node (structure)
  ((position   vector  :inline)
   (pos-x      float   :overlay-at (-> position data 0))
   (pos-y      float   :overlay-at (-> position data 1))
   (pos-z      float   :overlay-at (-> position data 2))
   (speed      float)
   (next-node  int32)
   )
  )

;; definition for method 3 of type deschase-node
(defmethod inspect ((this deschase-node))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this 'deschase-node)
  (format #t "~1Tposition: ~`vector`P~%" (-> this position))
  (format #t "~1Tpos-x: ~f~%" (-> this position x))
  (format #t "~1Tpos-y: ~f~%" (-> this position y))
  (format #t "~1Tpos-z: ~f~%" (-> this position z))
  (format #t "~1Tspeed: ~f~%" (-> this speed))
  (format #t "~1Tnext-node: ~D~%" (-> this next-node))
  (label cfg-4)
  this
  )

;; definition of type deschase-path
(deftype deschase-path (structure)
  ((node-count  uint16)
   (node        (inline-array deschase-node))
   )
  )

;; definition for method 3 of type deschase-path
(defmethod inspect ((this deschase-path))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this 'deschase-path)
  (format #t "~1Tnode-count: ~D~%" (-> this node-count))
  (format #t "~1Tnode: #x~X~%" (-> this node))
  (label cfg-4)
  this
  )

;; failed to figure out what this is:
0




