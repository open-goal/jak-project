;;-*-Lisp-*-
(in-package goal)

;; definition of type hvehicle
(deftype hvehicle (vehicle)
  ((flight-level-index       int8)
   (flight-level-index-prev  int8)
   (flight-level             float)
   (jump-time                float)
   (jump-thrust              float)
   (engine-thrust            float)
   (lift-thrust              float               4)
   (roll-thrust              float               2)
   (engine-sound-id          sound-id)
   (thrust-sound-id          sound-id)
   (roll-sound-id            sound-id)
   (damage-pop-sound-id      sound-id)
   (extra-sound-id           sound-id)
   (engine-sound-envelope    float)
   (engine-sound-factor      float)
   (sputter-sound-envelope   float)
   (transition-time          time-frame)
   (transition-end-time      time-frame)
   (controller               vehicle-controller  :inline)
   )
  (:methods
    (transition-flight-level (_type_ int) none)
    (hvehicle-method-153 (_type_) none)
    (hvehicle-method-154 (_type_) none)
    (hvehicle-method-155 (_type_) none)
    (hvehicle-method-156 (_type_) none)
    (hvehicle-method-157 (_type_) none)
    (hvehicle-method-158 (_type_) none)
    (hvehicle-method-159 (_type_) none)
    (adjust-throttle (_type_ float) none)
    (hvehicle-method-161 (_type_ traffic-object-spawn-params) object)
    )
  )

;; definition for method 3 of type hvehicle
(defmethod inspect ((this hvehicle))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (let ((t9-0 (method-of-type vehicle inspect)))
    (t9-0 this)
    )
  (format #t "~2Tflight-level-index: ~D~%" (-> this flight-level-index))
  (format #t "~2Tflight-level-index-prev: ~D~%" (-> this flight-level-index-prev))
  (format #t "~2Tflight-level: ~f~%" (-> this flight-level))
  (format #t "~2Tjump-time: ~f~%" (-> this jump-time))
  (format #t "~2Tjump-thrust: ~f~%" (-> this jump-thrust))
  (format #t "~2Tengine-thrust: ~f~%" (-> this engine-thrust))
  (format #t "~2Tlift-thrust[4] @ #x~X~%" (-> this lift-thrust))
  (format #t "~2Troll-thrust[2] @ #x~X~%" (-> this roll-thrust))
  (format #t "~2Tengine-sound-id: ~D~%" (-> this engine-sound-id))
  (format #t "~2Tthrust-sound-id: ~D~%" (-> this thrust-sound-id))
  (format #t "~2Troll-sound-id: ~D~%" (-> this roll-sound-id))
  (format #t "~2Tdamage-pop-sound-id: ~D~%" (-> this damage-pop-sound-id))
  (format #t "~2Textra-sound-id: ~D~%" (-> this extra-sound-id))
  (format #t "~2Tengine-sound-envelope: ~f~%" (-> this engine-sound-envelope))
  (format #t "~2Tengine-sound-factor: ~f~%" (-> this engine-sound-factor))
  (format #t "~2Tsputter-sound-envelope: ~f~%" (-> this sputter-sound-envelope))
  (format #t "~2Ttransition-time: ~D~%" (-> this transition-time))
  (format #t "~2Ttransition-end-time: ~D~%" (-> this transition-end-time))
  (format #t "~2Tcontroller: #<vehicle-controller @ #x~X>~%" (-> this controller))
  (label cfg-4)
  this
  )

;; failed to figure out what this is:
0




