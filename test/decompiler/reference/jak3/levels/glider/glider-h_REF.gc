;;-*-Lisp-*-
(in-package goal)

;; definition of type glider-thermal-info
(deftype glider-thermal-info (structure)
  ((pos           vector  :inline)
   (r             float   :overlay-at (-> pos data 3))
   (hheight       float)
   (windspeed     float)
   (curpos        float)
   (thermal-time  time-frame)
   )
  (:methods
    (to-static-macro (_type_ object) none)
    )
  )

;; definition for method 3 of type glider-thermal-info
(defmethod inspect ((this glider-thermal-info))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this 'glider-thermal-info)
  (format #t "~1Tpos: #<vector @ #x~X>~%" (-> this pos))
  (format #t "~1Tr: ~f~%" (-> this pos w))
  (format #t "~1Thheight: ~f~%" (-> this hheight))
  (format #t "~1Twindspeed: ~f~%" (-> this windspeed))
  (format #t "~1Tcurpos: ~f~%" (-> this curpos))
  (format #t "~1Tthermal-time: ~D~%" (-> this thermal-time))
  (label cfg-4)
  this
  )

;; definition of type glider-ring-info
(deftype glider-ring-info (structure)
  ((pos         vector  :inline)
   (forw        vector  :inline)
   (boost       float)
   (dist        float)
   (xdist       float)
   (ydist       float)
   (toff        time-frame)
   (speedmod    float)
   (shootable   symbol)
   (lastring    symbol)
   (checkpoint  uint8)
   )
  (:methods
    (to-static-macro (_type_ object) none)
    )
  )

;; definition for method 3 of type glider-ring-info
(defmethod inspect ((this glider-ring-info))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this 'glider-ring-info)
  (format #t "~1Tpos: #<vector @ #x~X>~%" (-> this pos))
  (format #t "~1Tforw: #<vector @ #x~X>~%" (-> this forw))
  (format #t "~1Tboost: ~f~%" (-> this boost))
  (format #t "~1Tdist: ~f~%" (-> this dist))
  (format #t "~1Txdist: ~f~%" (-> this xdist))
  (format #t "~1Tydist: ~f~%" (-> this ydist))
  (format #t "~1Ttoff: ~D~%" (-> this toff))
  (format #t "~1Tspeedmod: ~f~%" (-> this speedmod))
  (format #t "~1Tshootable: ~A~%" (-> this shootable))
  (format #t "~1Tlastring: ~A~%" (-> this lastring))
  (format #t "~1Tcheckpoint: ~D~%" (-> this checkpoint))
  (label cfg-4)
  this
  )

;; definition of type h-glider
(deftype h-glider (hvehicle)
  ((minalt                   float)
   (curalt                   float)
   (maxalt                   float)
   (rollerr                  float)
   (pitcherr                 float)
   (alterr                   float)
   (rolling                  symbol)
   (speed                    float)
   (poierr                   float)
   (poipos                   float)
   (poivel                   float)
   (deathspin                symbol)
   (in-thermal               symbol)
   (in-thermal-time          time-frame)
   (min-thermal-time         time-frame)
   (thermal-start-time       time-frame)
   (thermal-strength         float)
   (deathrot                 vector                  :inline)
   (last-ring-pos            vector                  :inline)
   (progression-plane        vector                  :inline)
   (birth                    time-frame)
   (stop-time                time-frame)
   (pitch-down-time          time-frame)
   (pitch-side-time          time-frame)
   (ambient-wind-sound-time  time-frame)
   (thermal-sound-time       time-frame)
   (updraft-vel              float)
   (updraft-acc              float)
   (updraft-err              float)
   (rel-up-vel               float)
   (flap-pos                 float)
   (amb-sound                sound-id)
   (amb-sound-playing        symbol)
   (full-speed-boost?        symbol)
   (lost-lift?               symbol)
   (lost-lift-time           time-frame)
   (right-rudder             joint-mod-rotate-local  :inline)
   (left-rudder              joint-mod-rotate-local  :inline)
   (right-alerone            joint-mod-rotate-local  :inline)
   (left-alerone             joint-mod-rotate-local  :inline)
   (flap                     joint-mod-set-local     6 :inline)
   )
  (:methods
    (h-glider-method-162 (_type_) none)
    )
  )

;; definition for method 3 of type h-glider
(defmethod inspect ((this h-glider))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (let ((t9-0 (method-of-type hvehicle inspect)))
    (t9-0 this)
    )
  (format #t "~2Tminalt: ~f~%" (-> this minalt))
  (format #t "~2Tcuralt: ~f~%" (-> this curalt))
  (format #t "~2Tmaxalt: ~f~%" (-> this maxalt))
  (format #t "~2Trollerr: ~f~%" (-> this rollerr))
  (format #t "~2Tpitcherr: ~f~%" (-> this pitcherr))
  (format #t "~2Talterr: ~f~%" (-> this alterr))
  (format #t "~2Trolling: ~A~%" (-> this rolling))
  (format #t "~2Tspeed: ~f~%" (-> this speed))
  (format #t "~2Tpoierr: ~f~%" (-> this poierr))
  (format #t "~2Tpoipos: ~f~%" (-> this poipos))
  (format #t "~2Tpoivel: ~f~%" (-> this poivel))
  (format #t "~2Tdeathspin: ~A~%" (-> this deathspin))
  (format #t "~2Tin-thermal: ~A~%" (-> this in-thermal))
  (format #t "~2Tin-thermal-time: ~D~%" (-> this in-thermal-time))
  (format #t "~2Tmin-thermal-time: ~D~%" (-> this min-thermal-time))
  (format #t "~2Tthermal-start-time: ~D~%" (-> this thermal-start-time))
  (format #t "~2Tthermal-strength: ~f~%" (-> this thermal-strength))
  (format #t "~2Tdeathrot: #<vector @ #x~X>~%" (-> this deathrot))
  (format #t "~2Tlast-ring-pos: #<vector @ #x~X>~%" (-> this last-ring-pos))
  (format #t "~2Tprogression-plane: #<vector @ #x~X>~%" (-> this progression-plane))
  (format #t "~2Tbirth: ~D~%" (-> this birth))
  (format #t "~2Tstop-time: ~D~%" (-> this stop-time))
  (format #t "~2Tpitch-down-time: ~D~%" (-> this pitch-down-time))
  (format #t "~2Tpitch-side-time: ~D~%" (-> this pitch-side-time))
  (format #t "~2Tambient-wind-sound-time: ~D~%" (-> this ambient-wind-sound-time))
  (format #t "~2Tthermal-sound-time: ~D~%" (-> this thermal-sound-time))
  (format #t "~2Tupdraft-vel: ~f~%" (-> this updraft-vel))
  (format #t "~2Tupdraft-acc: ~f~%" (-> this updraft-acc))
  (format #t "~2Tupdraft-err: ~f~%" (-> this updraft-err))
  (format #t "~2Trel-up-vel: ~f~%" (-> this rel-up-vel))
  (format #t "~2Tflap-pos: ~f~%" (-> this flap-pos))
  (format #t "~2Tamb-sound: ~D~%" (-> this amb-sound))
  (format #t "~2Tamb-sound-playing: ~A~%" (-> this amb-sound-playing))
  (format #t "~2Tfull-speed-boost?: ~A~%" (-> this full-speed-boost?))
  (format #t "~2Tlost-lift?: ~A~%" (-> this lost-lift?))
  (format #t "~2Tlost-lift-time: ~D~%" (-> this lost-lift-time))
  (format #t "~2Tright-rudder: #<joint-mod-rotate-local @ #x~X>~%" (-> this right-rudder))
  (format #t "~2Tleft-rudder: #<joint-mod-rotate-local @ #x~X>~%" (-> this left-rudder))
  (format #t "~2Tright-alerone: #<joint-mod-rotate-local @ #x~X>~%" (-> this right-alerone))
  (format #t "~2Tleft-alerone: #<joint-mod-rotate-local @ #x~X>~%" (-> this left-alerone))
  (format #t "~2Tflap[6] @ #x~X~%" (-> this flap))
  (label cfg-4)
  this
  )

;; failed to figure out what this is:
0




