;;-*-Lisp-*-
(in-package goal)

;; definition of type ctypal-ctyfarma
(deftype ctypal-ctyfarma (process-drawable)
  ()
  (:state-methods
    idle
    )
  )

;; definition for method 3 of type ctypal-ctyfarma
(defmethod inspect ((this ctypal-ctyfarma))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (let ((t9-0 (method-of-type process-drawable inspect)))
    (t9-0 this)
    )
  (label cfg-4)
  this
  )

;; failed to figure out what this is:
(defskelgroup skel-ctypal-ctyfarma ctypal-ctyfarma ctypal-ctyfarma-lod0-jg ctypal-ctyfarma-idle-ja
              ((ctypal-ctyfarma-lod0-mg (meters 999999)))
              :bounds (static-spherem 0 0 0 640)
              )

;; failed to figure out what this is:
(defstate idle (ctypal-ctyfarma)
  :virtual #t
  :code (behavior ()
    (until #f
      (ja-no-eval :group! (ja-group) :num! (seek!) :frame-num 0.0)
      (until (ja-done? 0)
        (suspend)
        (ja :num! (seek!))
        )
      )
    #f
    )
  :post ja-post
  )

;; definition for method 11 of type ctypal-ctyfarma
(defmethod init-from-entity! ((this ctypal-ctyfarma) (arg0 entity-actor))
  (logclear! (-> this mask) (process-mask actor-pause))
  (set! (-> this root) (new 'process 'trsqv))
  (process-drawable-from-entity! this arg0)
  (initialize-skeleton
    this
    (the-as skeleton-group (art-group-get-by-name *level* "skel-ctypal-ctyfarma" (the-as (pointer level) #f)))
    (the-as pair 0)
    )
  (go (method-of-object this idle))
  )




