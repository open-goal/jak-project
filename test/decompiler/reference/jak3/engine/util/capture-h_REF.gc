;;-*-Lisp-*-
(in-package goal)

;; this file is debug only
(declare-file (debug))

;; definition of type gs-store-image-packet
(deftype gs-store-image-packet (structure)
  ((vifcode         vif-tag  4)
   (giftag          uint128)
   (bitbltbuf       uint64)
   (bitbltbuf-addr  uint64)
   (trxpos          uint64)
   (trxpos-addr     uint64)
   (trxreg          uint64)
   (trxreg-addr     uint64)
   (finish          uint64)
   (finish-addr     uint64)
   (trxdir          uint64)
   (trxdir-addr     uint64)
   )
  )

;; definition for method 3 of type gs-store-image-packet
;; INFO: Used lq/sq
(defmethod inspect ((this gs-store-image-packet))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this 'gs-store-image-packet)
  (format #t "~1Tvifcode[4] @ #x~X~%" (-> this vifcode))
  (format #t "~1Tgiftag: ~D~%" (-> this giftag))
  (format #t "~1Tbitbltbuf: ~D~%" (-> this bitbltbuf))
  (format #t "~1Tbitbltbuf-addr: ~D~%" (-> this bitbltbuf-addr))
  (format #t "~1Ttrxpos: ~D~%" (-> this trxpos))
  (format #t "~1Ttrxpos-addr: ~D~%" (-> this trxpos-addr))
  (format #t "~1Ttrxreg: ~D~%" (-> this trxreg))
  (format #t "~1Ttrxreg-addr: ~D~%" (-> this trxreg-addr))
  (format #t "~1Tfinish: ~D~%" (-> this finish))
  (format #t "~1Tfinish-addr: ~D~%" (-> this finish-addr))
  (format #t "~1Ttrxdir: ~D~%" (-> this trxdir))
  (format #t "~1Ttrxdir-addr: ~D~%" (-> this trxdir-addr))
  (label cfg-4)
  this
  )

;; definition of type screen-shot-work
(deftype screen-shot-work (structure)
  ((count           int16)
   (size            int16)
   (name            string)
   (highres-enable  symbol)
   (hud-enable      symbol)
   )
  )

;; definition for method 3 of type screen-shot-work
(defmethod inspect ((this screen-shot-work))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this 'screen-shot-work)
  (format #t "~1Tcount: ~D~%" (-> this count))
  (format #t "~1Tsize: ~D~%" (-> this size))
  (format #t "~1Tname: ~A~%" (-> this name))
  (format #t "~1Thighres-enable: ~A~%" (-> this highres-enable))
  (format #t "~1Thud-enable: ~A~%" (-> this hud-enable))
  (label cfg-4)
  this
  )

;; definition for symbol *screen-shot-work*, type screen-shot-work
(define *screen-shot-work* (new 'global 'screen-shot-work))

;; failed to figure out what this is:
(set! (-> *screen-shot-work* count) -1)

;; failed to figure out what this is:
(set! (-> *screen-shot-work* size) -1)

;; failed to figure out what this is:
(set! (-> *screen-shot-work* highres-enable) #f)

;; failed to figure out what this is:
(set! (-> *screen-shot-work* hud-enable) #f)

;; definition for symbol *image-name*, type string
(define *image-name* (new 'global 'string 32 (the-as string #f)))

;; failed to figure out what this is:
0




