;;-*-Lisp-*-
(in-package goal)

;; definition of type wings
(deftype wings (process-drawable)
  ((self           wings                    :override)
   (parent         (pointer target)         :override)
   (shadow-backup  shadow-geo                :offset 208)
   (ragdoll-proc   handle)
   (lock?          symbol)
   (wing-part      sparticle-launch-control  2)
   )
  (:state-methods
    (idle symbol)
    use
    hidden
    close
    )
  )

;; definition for method 3 of type wings
(defmethod inspect ((this wings))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (let ((t9-0 (method-of-type process-drawable inspect)))
    (t9-0 this)
    )
  (format #t "~2Tstate-time: ~D~%" (-> this state-time))
  (format #t "~2Tshadow-backup: ~A~%" (-> this shadow-backup))
  (format #t "~2Tragdoll-proc: ~D~%" (-> this ragdoll-proc))
  (format #t "~2Tlock?: ~A~%" (-> this lock?))
  (format #t "~2Twing-part[2] @ #x~X~%" (-> this wing-part))
  (label cfg-4)
  this
  )

;; definition of type lightjak-shield
(deftype lightjak-shield (process-drawable)
  ((parent  (pointer target) :override)
   (fade    float)
   (tone    rgba)
   )
  (:state-methods
    open
    close
    hit
    )
  )

;; definition for method 3 of type lightjak-shield
(defmethod inspect ((this lightjak-shield))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (let ((t9-0 (method-of-type process-drawable inspect)))
    (t9-0 this)
    )
  (format #t "~2Tfade: ~f~%" (-> this fade))
  (format #t "~2Ttone: ~D~%" (-> this tone))
  (label cfg-4)
  this
  )

;; definition of type lightjak-info
(deftype lightjak-info (basic)
  ((process                   (pointer target))
   (wings                     (pointer wings))
   (get-off-lock              symbol)
   (latch-out-time            time-frame)
   (start-time                time-frame)
   (attack-id                 uint32)
   (lightjak-before-powerjak  symbol)
   (attack-time               time-frame)
   (attack-count              time-frame)
   (stage                     lightjak-stage)
   (want-stage                lightjak-stage)
   (get-on-latch              uint32)
   (tone                      uint32)
   (on-off                    uint32)
   (mode-sound-bank           connection)
   (swoop-count               int32)
   (freeze-control            handle)
   (freeze-screen             handle)
   (freeze-sound              sound-id)
   (shield                    (pointer lightjak-shield))
   (shield-start-time         time-frame)
   (shield-count-time         time-frame)
   (regen-start-time          time-frame)
   (regen-time                time-frame)
   )
  )

;; definition for method 3 of type lightjak-info
(defmethod inspect ((this lightjak-info))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this (-> this type))
  (format #t "~1Tprocess: #x~X~%" (-> this process))
  (format #t "~1Twings: #x~X~%" (-> this wings))
  (format #t "~1Tget-off-lock: ~A~%" (-> this get-off-lock))
  (format #t "~1Tlatch-out-time: ~D~%" (-> this latch-out-time))
  (format #t "~1Tstart-time: ~D~%" (-> this start-time))
  (format #t "~1Tattack-id: ~D~%" (-> this attack-id))
  (format #t "~1Tlightjak-before-powerjak: ~A~%" (-> this lightjak-before-powerjak))
  (format #t "~1Tattack-time: ~D~%" (-> this attack-time))
  (format #t "~1Tattack-count: ~D~%" (-> this attack-count))
  (format #t "~1Tstage: ~D~%" (-> this stage))
  (format #t "~1Twant-stage: ~D~%" (-> this want-stage))
  (format #t "~1Tget-on-latch: ~D~%" (-> this get-on-latch))
  (format #t "~1Ttone: ~D~%" (-> this tone))
  (format #t "~1Ton-off: ~D~%" (-> this on-off))
  (format #t "~1Tmode-sound-bank: #<connection @ #x~X>~%" (-> this mode-sound-bank))
  (format #t "~1Tswoop-count: ~D~%" (-> this swoop-count))
  (format #t "~1Tfreeze-control: ~D~%" (-> this freeze-control))
  (format #t "~1Tfreeze-screen: ~D~%" (-> this freeze-screen))
  (format #t "~1Tfreeze-sound: ~D~%" (-> this freeze-sound))
  (format #t "~1Tshield: #x~X~%" (-> this shield))
  (format #t "~1Tshield-start-time: ~D~%" (-> this shield-start-time))
  (format #t "~1Tshield-count-time: ~D~%" (-> this shield-count-time))
  (format #t "~1Tregen-start-time: ~D~%" (-> this regen-start-time))
  (format #t "~1Tregen-time: ~D~%" (-> this regen-time))
  (label cfg-4)
  this
  )

;; failed to figure out what this is:
0
