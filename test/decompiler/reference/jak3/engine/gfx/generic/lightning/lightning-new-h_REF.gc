;;-*-Lisp-*-
(in-package goal)

;; definition of type lightning-appearance
(deftype lightning-appearance (structure)
  ((base-alpha             float)
   (width-range-start      float)
   (width-range-end        float)
   (tex-id                 uint32)
   (blend-mode             uint64)
   (fade-time              time-frame)
   (regenerate-time-start  time-frame)
   (regenerate-time-end    time-frame)
   (alpha-1-curve          curve2d-fast)
   (alpha-1-mode           uint64)
   (alpha-1-repeat-dist    float)
   (alpha-2-curve          curve2d-fast)
   (alpha-2-mode           uint64)
   (alpha-2-repeat-dist    float)
   (width-curve            curve2d-fast)
   (width-mode             uint64)
   (width-repeat-dist      float)
   (uv-repeat-dist         float)
   (uv-shift?              symbol)
   (uv-shift-speed         time-frame)
   (use-sprite-bucket?     symbol  :offset 128)
   (use-accurate-interp?   symbol)
   )
  )

;; definition for method 3 of type lightning-appearance
(defmethod inspect ((this lightning-appearance))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this 'lightning-appearance)
  (format #t "~1Tbase-alpha: ~f~%" (-> this base-alpha))
  (format #t "~1Twidth-range-start: ~f~%" (-> this width-range-start))
  (format #t "~1Twidth-range-end: ~f~%" (-> this width-range-end))
  (format #t "~1Ttex-id: ~D~%" (-> this tex-id))
  (format #t "~1Tblend-mode: ~D~%" (-> this blend-mode))
  (format #t "~1Tfade-time: ~D~%" (-> this fade-time))
  (format #t "~1Tregenerate-time-start: ~D~%" (-> this regenerate-time-start))
  (format #t "~1Tregenerate-time-end: ~D~%" (-> this regenerate-time-end))
  (format #t "~1Talpha-1-curve: ~A~%" (-> this alpha-1-curve))
  (format #t "~1Talpha-1-mode: ~D~%" (-> this alpha-1-mode))
  (format #t "~1Talpha-1-repeat-dist: ~f~%" (-> this alpha-1-repeat-dist))
  (format #t "~1Talpha-2-curve: ~A~%" (-> this alpha-2-curve))
  (format #t "~1Talpha-2-mode: ~D~%" (-> this alpha-2-mode))
  (format #t "~1Talpha-2-repeat-dist: ~f~%" (-> this alpha-2-repeat-dist))
  (format #t "~1Twidth-curve: ~A~%" (-> this width-curve))
  (format #t "~1Twidth-mode: ~D~%" (-> this width-mode))
  (format #t "~1Twidth-repeat-dist: ~f~%" (-> this width-repeat-dist))
  (format #t "~1Tuv-repeat-dist: ~f~%" (-> this uv-repeat-dist))
  (format #t "~1Tuv-shift?: ~A~%" (-> this uv-shift?))
  (format #t "~1Tuv-shift-speed: ~D~%" (-> this uv-shift-speed))
  (format #t "~1Tfade-time: ~D~%" (-> this fade-time))
  (format #t "~1Tuse-sprite-bucket?: ~A~%" (-> this use-sprite-bucket?))
  (format #t "~1Tuse-accurate-interp?: ~A~%" (-> this use-accurate-interp?))
  (label cfg-4)
  this
  )

;; definition of type lightning-span-internal
(deftype lightning-span-internal (structure)
  ((index             int16)
   (span-flags        uint8)
   (num-inner-points  int8)
   )
  :pack-me
  )

;; definition for method 3 of type lightning-span-internal
(defmethod inspect ((this lightning-span-internal))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this 'lightning-span-internal)
  (format #t "~1Tindex: ~D~%" (-> this index))
  (format #t "~1Tspan-flags: ~D~%" (-> this span-flags))
  (format #t "~1Tnum-inner-points: ~D~%" (-> this num-inner-points))
  (label cfg-4)
  this
  )

;; definition of type lightning-span
(deftype lightning-span (structure)
  ((random-offset-size-start  float)
   (inner-random-offset-size  float)
   )
  :pack-me
  )

;; definition for method 3 of type lightning-span
(defmethod inspect ((this lightning-span))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this 'lightning-span)
  (format #t "~1Trandom-offset-size-start: ~f~%" (-> this random-offset-size-start))
  (format #t "~1Tinner-random-offset-size: ~f~%" (-> this inner-random-offset-size))
  (label cfg-4)
  this
  )

;; definition of type lightning-spans-array
(deftype lightning-spans-array (inline-array-class)
  ((data  lightning-span  :inline :dynamic)
   )
  )

;; definition for method 3 of type lightning-spans-array
(defmethod inspect ((this lightning-spans-array))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this (-> this type))
  (format #t "~1Tlength: ~D~%" (-> this length))
  (format #t "~1Tallocated-length: ~D~%" (-> this allocated-length))
  (format #t "~1Tdata[0] @ #x~X~%" (-> this data))
  (label cfg-4)
  this
  )

;; failed to figure out what this is:
(set! (-> lightning-spans-array heap-base) (the-as uint 8))

;; definition of type lightning-spans-internal-array
(deftype lightning-spans-internal-array (inline-array-class)
  ((data  lightning-span-internal  :inline :dynamic)
   )
  )

;; definition for method 3 of type lightning-spans-internal-array
(defmethod inspect ((this lightning-spans-internal-array))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this (-> this type))
  (format #t "~1Tlength: ~D~%" (-> this length))
  (format #t "~1Tallocated-length: ~D~%" (-> this allocated-length))
  (format #t "~1Tdata[0] @ #x~X~%" (-> this data))
  (label cfg-4)
  this
  )

;; failed to figure out what this is:
(set! (-> lightning-spans-internal-array heap-base) (the-as uint 4))

;; definition of type tex-u-holder
(deftype tex-u-holder (structure)
  ((uu         float)
   (last-dist  float)
   )
  )

;; definition for method 3 of type tex-u-holder
(defmethod inspect ((this tex-u-holder))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this 'tex-u-holder)
  (format #t "~1Tuu: ~f~%" (-> this uu))
  (format #t "~1Tlast-dist: ~f~%" (-> this last-dist))
  (label cfg-4)
  this
  )

;; definition of type lightning-bolt
(deftype lightning-bolt (basic)
  ((current-points                 vector-array)
   (desired-points                 vector-array)
   (span-pts-start                 vector-array)
   (spans                          lightning-spans-array)
   (spans-internal                 lightning-spans-internal-array)
   (strip1                         prim-strip)
   (strip2                         prim-strip)
   (inner-point-travel-time        time-frame)
   (start-fade-time                time-frame)
   (new-inner-point-generate-time  time-frame)
   (last-generate-time             time-frame)
   (base-width                     float)
   (current-uv-shift               float)
   (current-fade-scalar            float)
   (fractal-reduction              float)
   (appearance                     lightning-appearance)
   (fade-mode                      uint64)
   (generate-mode                  uint64)
   (snap-inner-points?             symbol)
   (span-data                      int8  2)
   (num-active-spans               int8  :overlay-at (-> span-data 0))
   (num-spans                      int8  :overlay-at (-> span-data 1))
   (base-color                     rgba)
   )
  (:methods
    (init! (_type_ int int lightning-appearance) none)
    (reset-spans! (_type_) none)
    (lightning-bolt-method-11 (_type_) none)
    (lightning-bolt-method-12 (_type_) none)
    (lightning-bolt-method-13 (_type_ int) none)
    (lightning-bolt-method-14 (_type_) int)
    (lightning-bolt-method-15 (_type_ object int lightning-span-internal) none)
    (lightning-bolt-method-16 (_type_ vector float float vector matrix) none)
    (lightning-bolt-method-17 (_type_ uint float float curve2d-fast float) float)
    (lightning-bolt-method-18 (_type_ prim-strip vector rgba float float) none)
    (lightning-bolt-method-19 (_type_ vector int int matrix float float) none)
    (lightning-bolt-method-20 (_type_ int lightning-span-internal) vector)
    (lightning-bolt-method-21 (_type_ int int float) none)
    (lightning-bolt-method-22 (_type_) none)
    )
  )

;; definition for method 3 of type lightning-bolt
(defmethod inspect ((this lightning-bolt))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this (-> this type))
  (format #t "~1Tcurrent-points: ~A~%" (-> this current-points))
  (format #t "~1Tdesired-points: ~A~%" (-> this desired-points))
  (format #t "~1Tspan-pts-start: ~A~%" (-> this span-pts-start))
  (format #t "~1Tspans: ~A~%" (-> this spans))
  (format #t "~1Tspans-internal: ~A~%" (-> this spans-internal))
  (format #t "~1Tstrip1: ~A~%" (-> this strip1))
  (format #t "~1Tstrip2: ~A~%" (-> this strip2))
  (format #t "~1Tinner-point-travel-time: ~D~%" (-> this inner-point-travel-time))
  (format #t "~1Tstart-fade-time: ~D~%" (-> this start-fade-time))
  (format #t "~1Tnew-inner-point-generate-time: ~D~%" (-> this new-inner-point-generate-time))
  (format #t "~1Tlast-generate-time: ~D~%" (-> this last-generate-time))
  (format #t "~1Tbase-width: ~f~%" (-> this base-width))
  (format #t "~1Tcurrent-uv-shift: ~f~%" (-> this current-uv-shift))
  (format #t "~1Tcurrent-fade-scalar: ~f~%" (-> this current-fade-scalar))
  (format #t "~1Tfractal-reduction: ~f~%" (-> this fractal-reduction))
  (format #t "~1Tappearance: #<lightning-appearance @ #x~X>~%" (-> this appearance))
  (format #t "~1Tfade-mode: ~D~%" (-> this fade-mode))
  (format #t "~1Tgenerate-mode: ~D~%" (-> this generate-mode))
  (format #t "~1Tsnap-inner-points?: ~A~%" (-> this snap-inner-points?))
  (format #t "~1Tspan-data[2] @ #x~X~%" (-> this span-data))
  (format #t "~1Tnum-active-spans: ~D~%" (-> this num-active-spans))
  (format #t "~1Tnum-spans: ~D~%" (-> this num-spans))
  (format #t "~1Tbase-color: ~D~%" (-> this base-color))
  (label cfg-4)
  this
  )

;; definition of type lightning-new-tracker
(deftype lightning-new-tracker (process)
  ((bolt        lightning-bolt)
   (lifetime    time-frame)
   (state-time  time-frame)
   )
  (:state-methods
    active
    die
    )
  )

;; definition for method 3 of type lightning-new-tracker
(defmethod inspect ((this lightning-new-tracker))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (let ((t9-0 (method-of-type process inspect)))
    (t9-0 this)
    )
  (format #t "~2Tbolt: ~A~%" (-> this bolt))
  (format #t "~2Tlifetime: ~D~%" (-> this lifetime))
  (format #t "~2Tstate-time: ~D~%" (-> this state-time))
  (label cfg-4)
  this
  )

;; definition of type lightning-tracker-init-params
(deftype lightning-tracker-init-params (structure)
  ((appearance                lightning-appearance)
   (start-pt                  vector  :inline)
   (end-pt                    vector  :inline)
   (lifetime                  time-frame)
   (num-inner-points          int8)
   (inner-random-offset-size  float)
   (random-offset-size-start  float)
   )
  )

;; definition for method 3 of type lightning-tracker-init-params
(defmethod inspect ((this lightning-tracker-init-params))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this 'lightning-tracker-init-params)
  (format #t "~1Tappearance: #<lightning-appearance @ #x~X>~%" (-> this appearance))
  (format #t "~1Tstart-pt: #<vector @ #x~X>~%" (-> this start-pt))
  (format #t "~1Tend-pt: #<vector @ #x~X>~%" (-> this end-pt))
  (format #t "~1Tlifetime: ~D~%" (-> this lifetime))
  (format #t "~1Tnum-inner-points: ~D~%" (-> this num-inner-points))
  (format #t "~1Tinner-random-offset-size: ~f~%" (-> this inner-random-offset-size))
  (format #t "~1Trandom-offset-size-start: ~f~%" (-> this random-offset-size-start))
  (label cfg-4)
  this
  )

;; failed to figure out what this is:
0




