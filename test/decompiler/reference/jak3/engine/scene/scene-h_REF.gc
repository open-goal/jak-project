;;-*-Lisp-*-
(in-package goal)

;; definition of type scene-actor
(deftype scene-actor (basic)
  ((name                 string)
   (level                symbol)
   (art-group            string)
   (prefix               string)
   (draw-frames          pair)
   (scissor-frames       pair)
   (shadow-frames        pair)
   (cloth-reset-frames   pair)
   (cloth-commands       pair)
   (camera               int16)
   (light-index          uint8)
   (shadow-mask          uint8)
   (shadow-values        uint32)
   (flags                uint32)
   (command-list         pair)
   (shadow-flags         int32)
   (shadow-volume-joint  basic)
   (draw-seg             uint64)
   (no-draw-seg          uint64)
   (last-frame           float)
   (process              handle)
   )
  (:methods
    (setup-manipy-for-scene! (_type_ scene-player) (pointer process))
    )
  )

;; definition for method 3 of type scene-actor
(defmethod inspect ((this scene-actor))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this (-> this type))
  (format #t "~1Tname: ~A~%" (-> this name))
  (format #t "~1Tlevel: ~A~%" (-> this level))
  (format #t "~1Tart-group: ~A~%" (-> this art-group))
  (format #t "~1Tprefix: ~A~%" (-> this prefix))
  (format #t "~1Tdraw-frames: ~A~%" (-> this draw-frames))
  (format #t "~1Tscissor-frames: ~A~%" (-> this scissor-frames))
  (format #t "~1Tshadow-frames: ~A~%" (-> this shadow-frames))
  (format #t "~1Tcloth-reset-frames: ~A~%" (-> this cloth-reset-frames))
  (format #t "~1Tcloth-commands: ~A~%" (-> this cloth-commands))
  (format #t "~1Tcamera: ~D~%" (-> this camera))
  (format #t "~1Tlight-index: ~D~%" (-> this light-index))
  (format #t "~1Tshadow-mask: ~D~%" (-> this shadow-mask))
  (format #t "~1Tshadow-values: ~D~%" (-> this shadow-values))
  (format #t "~1Tflags: ~D~%" (-> this flags))
  (format #t "~1Tcommand-list: ~A~%" (-> this command-list))
  (format #t "~1Tshadow-flags: ~D~%" (-> this shadow-flags))
  (format #t "~1Tshadow-volume-joint: ~A~%" (-> this shadow-volume-joint))
  (format #t "~1Tdraw-seg: ~D~%" (-> this draw-seg))
  (format #t "~1Tno-draw-seg: ~D~%" (-> this no-draw-seg))
  (format #t "~1Tlast-frame: ~f~%" (-> this last-frame))
  (format #t "~1Tprocess: ~D~%" (-> this process))
  (label cfg-4)
  this
  )

;; definition of type scene
(deftype scene (art-group)
  ((scene-flags       scene-flags)
   (mask-to-clear     process-mask)
   (entity            string)
   (art-group         string)
   (anim              string)
   (parts             int32)
   (command-list      pair)
   (cut-list          pair)
   (wait-max-time     time-frame)
   (wait-air-time     time-frame)
   (wait-ground-time  time-frame)
   (actor             (array scene-actor))
   (load-point        basic)
   (end-point         basic)
   (borrow            pair)
   (sfx-volume        float)
   (ambient-volume    float)
   (music-volume      float)
   (music-delay       float)
   (scene-task        uint16)
   (on-running        pair)
   (on-complete       pair)
   )
  (:methods
    (init-spool-by-scene! (_type_ spool-anim) spool-anim)
    (load-scene (_type_) scene)
    )
  )

;; definition for method 3 of type scene
(defmethod inspect ((this scene))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (format #t "[~8x] ~A~%" this (-> this type))
  (format #t "~1Tname: ~A~%" (-> this name))
  (format #t "~1Tlength: ~D~%" (-> this length))
  (format #t "~1Textra: ~A~%" (-> this extra))
  (format #t "~1Tinfo: ~A~%" (-> this info))
  (format #t "~1Tdata[0] @ #x~X~%" (&-> this scene-flags))
  (format #t "~1Tscene-flags: ~D~%" (-> this scene-flags))
  (format #t "~1Tmask-to-clear: ~D~%" (-> this mask-to-clear))
  (format #t "~1Tentity: ~A~%" (-> this entity))
  (format #t "~1Tart-group: ~A~%" (-> this art-group))
  (format #t "~1Tanim: ~A~%" (-> this anim))
  (format #t "~1Tparts: ~D~%" (-> this parts))
  (format #t "~1Tcommand-list: ~A~%" (-> this command-list))
  (format #t "~1Tcut-list: ~A~%" (-> this cut-list))
  (format #t "~1Twait-max-time: ~D~%" (-> this wait-max-time))
  (format #t "~1Twait-air-time: ~D~%" (-> this wait-air-time))
  (format #t "~1Twait-ground-time: ~D~%" (-> this wait-ground-time))
  (format #t "~1Tactor: ~A~%" (-> this actor))
  (format #t "~1Tload-point: ~A~%" (-> this load-point))
  (format #t "~1Tend-point: ~A~%" (-> this end-point))
  (format #t "~1Tborrow: ~A~%" (-> this borrow))
  (format #t "~1Tsfx-volume: ~f~%" (-> this sfx-volume))
  (format #t "~1Tambient-volume: ~f~%" (-> this ambient-volume))
  (format #t "~1Tmusic-volume: ~f~%" (-> this music-volume))
  (format #t "~1Tmusic-delay: ~f~%" (-> this music-delay))
  (format #t "~1Tscene-task: ~D~%" (-> this scene-task))
  (format #t "~1Ton-running: ~A~%" (-> this on-running))
  (format #t "~1Ton-complete: ~A~%" (-> this on-complete))
  (label cfg-4)
  this
  )

;; definition of type scene-player
(deftype scene-player (process-drawable)
  ((scene-list            (array scene))
   (scene                 scene)
   (scene-index           int32)
   (anim                  spool-anim)
   (next-anim             spool-anim)
   (camera                handle)
   (main-entity           entity-actor)
   (wait                  symbol)
   (old-target-pos        transformq  :inline)
   (pre-cut-frame         basic)
   (preload-continue      string)
   (preload-sound         basic)
   (dma-max               uint32)
   (gui-id                sound-id)
   (aborted?              symbol)
   (scene-start-time      time-frame)
   (targ-speed            float)
   (cur-speed             float)
   (speed-change-time     time-frame)
   (speed-press-time      time-frame)
   (speed-change-speed    float)
   (subtitle-change-time  time-frame)
   (user-sound            sound-id    4)
   (last-frame            float)
   (end-point             basic)
   (blackout-end          basic)
   (new-trans-hook        (function none))
   (cur-trans-hook        (function none))
   (user-data             uint64)
   )
  (:state-methods
    (wait symbol)
    release
    play-anim
    )
  (:methods
    (scene-player-method-23 (_type_ string symbol) none)
    (scene-player-method-24 (_type_ scene symbol) scene)
    (scene-player-method-25 (_type_ float float) none)
    )
  )

;; definition for method 3 of type scene-player
(defmethod inspect ((this scene-player))
  (when (not this)
    (set! this this)
    (goto cfg-4)
    )
  (let ((t9-0 (method-of-type process-drawable inspect)))
    (t9-0 this)
    )
  (format #t "~2Tscene-list: ~A~%" (-> this scene-list))
  (format #t "~2Tscene: ~A~%" (-> this scene))
  (format #t "~2Tscene-index: ~D~%" (-> this scene-index))
  (format #t "~2Tanim: ~A~%" (-> this anim))
  (format #t "~2Tnext-anim: ~A~%" (-> this next-anim))
  (format #t "~2Tcamera: ~D~%" (-> this camera))
  (format #t "~2Tmain-entity: ~A~%" (-> this main-entity))
  (format #t "~2Twait: ~A~%" (-> this wait))
  (format #t "~2Told-target-pos: #<transformq @ #x~X>~%" (-> this old-target-pos))
  (format #t "~2Tpre-cut-frame: ~A~%" (-> this pre-cut-frame))
  (format #t "~2Tpreload-continue: ~A~%" (-> this preload-continue))
  (format #t "~2Tpreload-sound: ~A~%" (-> this preload-sound))
  (format #t "~2Tdma-max: ~D~%" (-> this dma-max))
  (format #t "~2Tgui-id: ~D~%" (-> this gui-id))
  (format #t "~2Taborted?: ~A~%" (-> this aborted?))
  (format #t "~2Tscene-start-time: ~D~%" (-> this scene-start-time))
  (format #t "~2Ttarg-speed: ~f~%" (-> this targ-speed))
  (format #t "~2Tcur-speed: ~f~%" (-> this cur-speed))
  (format #t "~2Tspeed-change-time: ~D~%" (-> this speed-change-time))
  (format #t "~2Tspeed-press-time: ~D~%" (-> this speed-press-time))
  (format #t "~2Tspeed-change-speed: ~f~%" (-> this speed-change-speed))
  (format #t "~2Tsubtitle-change-time: ~D~%" (-> this subtitle-change-time))
  (format #t "~2Tuser-sound[4] @ #x~X~%" (-> this user-sound))
  (format #t "~2Tlast-frame: ~f~%" (-> this last-frame))
  (format #t "~2Tend-point: ~A~%" (-> this end-point))
  (format #t "~2Tblackout-end: ~A~%" (-> this blackout-end))
  (format #t "~2Tnew-trans-hook: ~A~%" (-> this new-trans-hook))
  (format #t "~2Tcur-trans-hook: ~A~%" (-> this cur-trans-hook))
  (format #t "~2Tuser-data: ~A~%" (-> this user-data))
  (label cfg-4)
  this
  )

;; definition for symbol *scene-player*, type (pointer scene-player)
(define *scene-player* (the-as (pointer scene-player) #f))

;; definition for symbol *debug-menu-scene-play*, type object
(define *debug-menu-scene-play* (the-as object #f))

;; failed to figure out what this is:
0
