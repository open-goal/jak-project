;;-*-Lisp-*-
(in-package goal)

;; definition of type pov-camera
(deftype pov-camera (process-drawable)
  ((~Tflags               int32   :offset-assert 176)
   (~Tdebounce-start-time uint64  :offset-assert 184)
   (~Tnotify-handle       uint64  :offset-assert 192)
   (~Tanim-name           basic   :offset-assert 200)
   (~Tcommand-list        basic   :offset-assert 204)
   (~Tmask-to-clear       uint32  :offset-assert 208)
   (~Tmusic-volume-movie  float   :offset-assert 212)
   (~Tsfx-volume-movie    float   :offset-assert 216)
   )
  :method-count-assert 30
  :size-assert         #xdc
  :flag-assert         #x1e000000dc
  (:methods
    (dummy-20 () none 20)
    (dummy-21 () none 21)
    (dummy-22 () none 22)
    (dummy-23 () none 23)
    (dummy-24 () none 24)
    (dummy-25 () none 25)
    (dummy-26 () none 26)
    (dummy-27 () none 27)
    (dummy-28 () none 28)
    (dummy-29 () none 29)
    )
  )

;; definition for method 3 of type pov-camera
(defmethod inspect pov-camera ((obj pov-camera))
  (let ((t9-0 (method-of-type process-drawable inspect)))
   (t9-0 obj)
   )
  (format #t "~T~Tflags: ~D~%" (-> obj ~Tflags))
  (format #t "~T~Tdebounce-start-time: ~D~%" (-> obj ~Tdebounce-start-time))
  (format #t "~T~Tnotify-handle: ~D~%" (-> obj ~Tnotify-handle))
  (format #t "~T~Tanim-name: ~A~%" (-> obj ~Tanim-name))
  (format #t "~T~Tcommand-list: ~A~%" (-> obj ~Tcommand-list))
  (format #t "~T~Tmask-to-clear: ~D~%" (-> obj ~Tmask-to-clear))
  (format #t "~T~Tmusic-volume-movie: ~f~%" (-> obj ~Tmusic-volume-movie))
  (format #t "~T~Tsfx-volume-movie: ~f~%" (-> obj ~Tsfx-volume-movie))
  obj
  )

;; failed to figure out what this is:
(let ((v0-1 0))
  )




