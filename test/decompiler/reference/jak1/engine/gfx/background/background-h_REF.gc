;;-*-Lisp-*-
(in-package goal)

;; definition of type background-work
(deftype background-work (basic)
  ((tfrag-tree-count               int32)
   (tfrag-trees                    drawable-tree-tfrag           8)
   (tfrag-levels                   level                         8)
   (trans-tfrag-tree-count         int32)
   (trans-tfrag-trees              drawable-tree-trans-tfrag     8)
   (trans-tfrag-levels             level                         8)
   (dirt-tfrag-tree-count          int32)
   (dirt-tfrag-trees               drawable-tree-dirt-tfrag      8)
   (dirt-tfrag-levels              level                         8)
   (ice-tfrag-tree-count           int32)
   (ice-tfrag-trees                drawable-tree-ice-tfrag       8)
   (ice-tfrag-levels               level                         8)
   (lowres-tfrag-tree-count        int32)
   (lowres-tfrag-trees             drawable-tree-lowres-tfrag    8)
   (lowres-tfrag-levels            level                         8)
   (lowres-trans-tfrag-tree-count  int32)
   (lowres-trans-tfrag-trees       drawable-tree-trans-tfrag     8)
   (lowres-trans-tfrag-levels      level                         8)
   (shrub-tree-count               int32)
   (shrub-trees                    drawable-tree-instance-shrub  8)
   (shrub-levels                   level                         8)
   (tie-tree-count                 int32)
   (tie-trees                      drawable-tree-instance-tie    8)
   (tie-levels                     level                         8)
   (tie-generic                    basic                         8)
   (wait-to-vu0                    uint32)
   )
  )

;; definition for method 3 of type background-work
(defmethod inspect ((this background-work))
  (format #t "[~8x] ~A~%" this (-> this type))
  (format #t "~Ttfrag-tree-count: ~D~%" (-> this tfrag-tree-count))
  (format #t "~Ttfrag-trees[8] @ #x~X~%" (-> this tfrag-trees))
  (format #t "~Ttfrag-levels[8] @ #x~X~%" (-> this tfrag-levels))
  (format #t "~Ttrans-tfrag-tree-count: ~D~%" (-> this trans-tfrag-tree-count))
  (format #t "~Ttrans-tfrag-trees[8] @ #x~X~%" (-> this trans-tfrag-trees))
  (format #t "~Ttrans-tfrag-levels[8] @ #x~X~%" (-> this trans-tfrag-levels))
  (format #t "~Tdirt-tfrag-tree-count: ~D~%" (-> this dirt-tfrag-tree-count))
  (format #t "~Tdirt-tfrag-trees[8] @ #x~X~%" (-> this dirt-tfrag-trees))
  (format #t "~Tdirt-tfrag-levels[8] @ #x~X~%" (-> this dirt-tfrag-levels))
  (format #t "~Tice-tfrag-tree-count: ~D~%" (-> this ice-tfrag-tree-count))
  (format #t "~Tice-tfrag-trees[8] @ #x~X~%" (-> this ice-tfrag-trees))
  (format #t "~Tice-tfrag-levels[8] @ #x~X~%" (-> this ice-tfrag-levels))
  (format #t "~Tlowres-tfrag-tree-count: ~D~%" (-> this lowres-tfrag-tree-count))
  (format #t "~Tlowres-tfrag-trees[8] @ #x~X~%" (-> this lowres-tfrag-trees))
  (format #t "~Tlowres-tfrag-levels[8] @ #x~X~%" (-> this lowres-tfrag-levels))
  (format #t "~Tlowres-trans-tfrag-tree-count: ~D~%" (-> this lowres-trans-tfrag-tree-count))
  (format #t "~Tlowres-trans-tfrag-trees[8] @ #x~X~%" (-> this lowres-trans-tfrag-trees))
  (format #t "~Tlowres-trans-tfrag-levels[8] @ #x~X~%" (-> this lowres-trans-tfrag-levels))
  (format #t "~Tshrub-tree-count: ~D~%" (-> this shrub-tree-count))
  (format #t "~Tshrub-trees[8] @ #x~X~%" (-> this shrub-trees))
  (format #t "~Tshrub-levels[8] @ #x~X~%" (-> this shrub-levels))
  (format #t "~Ttie-tree-count: ~D~%" (-> this tie-tree-count))
  (format #t "~Ttie-trees[8] @ #x~X~%" (-> this tie-trees))
  (format #t "~Ttie-levels[8] @ #x~X~%" (-> this tie-levels))
  (format #t "~Ttie-generic[8] @ #x~X~%" (-> this tie-generic))
  (format #t "~Twait-to-vu0: ~D~%" (-> this wait-to-vu0))
  this
  )

;; failed to figure out what this is:
0
