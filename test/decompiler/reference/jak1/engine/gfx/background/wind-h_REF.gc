;;-*-Lisp-*-
(in-package goal)

;; definition of type wind-vector
(deftype wind-vector (structure)
  ((wind-pos  vector2w  :inline)
   (wind-vel  vector2w  :inline)
   )
  )

;; definition for method 3 of type wind-vector
(defmethod inspect ((this wind-vector))
  (format #t "[~8x] ~A~%" this 'wind-vector)
  (format #t "~Twind-pos: #<vector2w @ #x~X>~%" (-> this wind-pos))
  (format #t "~Twind-vel: #<vector2w @ #x~X>~%" (-> this wind-vel))
  this
  )

;; definition for symbol *wind-scales*, type (array uint8)
(define *wind-scales* (new 'static 'boxed-array :type uint8
                        #x2
                        #x5
                        #x2
                        #x3
                        #x2
                        #x2
                        #x3
                        #x10
                        #xa
                        #x2
                        #x4
                        #x2
                        #x8
                        #x2
                        #x2
                        #x10
                        #x2
                        #x2
                        #x8
                        #x2
                        #x10
                        #x2
                        #x4
                        #x10
                        #xa
                        #x2
                        #x4
                        #x2
                        #x8
                        #x2
                        #x2
                        #x10
                        )
        )

;; definition of type wind-work
(deftype wind-work (basic)
  ((wind-array   vector  64 :inline)
   (wind-normal  vector  :inline)
   (wind-temp    vector  :inline)
   (wind-force   float   64)
   (wind-time    uint32)
   )
  )

;; definition for method 3 of type wind-work
(defmethod inspect ((this wind-work))
  (format #t "[~8x] ~A~%" this (-> this type))
  (format #t "~Twind-array[64] @ #x~X~%" (-> this wind-array))
  (format #t "~Twind-normal: ~`vector`P~%" (-> this wind-normal))
  (format #t "~Twind-temp: ~`vector`P~%" (-> this wind-temp))
  (format #t "~Twind-force[64] @ #x~X~%" (-> this wind-force))
  (format #t "~Twind-time: ~D~%" (-> this wind-time))
  this
  )

;; definition for function wind-get-hashed-index
(defun wind-get-hashed-index ((arg0 vector))
  (logand (+ (the int (-> arg0 x)) (the int (-> arg0 z)) (-> *wind-work* wind-time)) 63)
  )
