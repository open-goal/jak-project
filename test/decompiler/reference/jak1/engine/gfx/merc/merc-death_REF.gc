;;-*-Lisp-*-
(in-package goal)

;; definition for symbol *merc-death-globals*, type vector
(define *merc-death-globals* (new 'global 'vector))

;; definition of type death-info
(deftype death-info (basic)
  ((vertex-skip  uint16)
   (timer        uint8)
   (overlap      uint8)
   (effect       uint32)
   (sound        symbol)
   )
  )

;; definition for method 3 of type death-info
(defmethod inspect ((this death-info))
  (format #t "[~8x] ~A~%" this (-> this type))
  (format #t "~Tvertex-skip: ~D~%" (-> this vertex-skip))
  (format #t "~Ttimer: ~D~%" (-> this timer))
  (format #t "~Toverlap: ~D~%" (-> this overlap))
  (format #t "~Teffect: ~D~%" (-> this effect))
  (format #t "~Tsound: ~A~%" (-> this sound))
  this
  )

;; definition for function birth-func-death-sparks
;; INFO: Return type mismatch int vs none.
(defun birth-func-death-sparks ()
  0
  (none)
  )

;; definition for symbol death-beach-puppy, type death-info
(define death-beach-puppy
  (new 'static 'death-info :vertex-skip #x82 :timer #x4b :overlap #x4 :effect #x29 :sound 'temp-enemy-die)
  )

;; definition for symbol death-jungle-snake, type death-info
(define death-jungle-snake
  (new 'static 'death-info :vertex-skip #xa :timer #x4b :overlap #x4 :effect #x29 :sound 'temp-enemy-die)
  )

;; definition for symbol death-default, type death-info
(define death-default
  (new 'static 'death-info :vertex-skip #x50 :timer #x4b :overlap #x4 :effect #x29 :sound 'temp-enemy-die)
  )

;; definition for symbol death-warp-in, type death-info
(define death-warp-in
  (new 'static 'death-info :vertex-skip #x96 :timer #x4b :effect #x29 :sound 'warpgate-tele)
  )

;; definition for symbol death-warp-out, type death-info
(define death-warp-out
  (new 'static 'death-info :vertex-skip #x96 :timer #x96 :effect #x29 :sound 'warpgate-tele)
  )

;; failed to figure out what this is:
(defpart 41
  :init-specs ((:scale-x (meters 0.5))
    (:scale-y :copy scale-x)
    (:r 64.0 32.0)
    (:g 16.0 32.0)
    (:b 48.0 32.0)
    (:a 48.0 48.0)
    (:vel-y (meters 0) (meters 0.006666667))
    (:scalevel-x (meters -0.0016666667))
    (:scalevel-y (meters 0.02))
    (:accel-y (meters -0.00066666666))
    (:timer (seconds 0.4))
    (:flags (bit2 bit3 bit12))
    (:next-time (seconds 0.05) (seconds 0.197))
    (:next-launcher 42)
    )
  )

;; failed to figure out what this is:
(defpart 42
  :init-specs ((:fade-a -1.4222223) (:timer (seconds 0.15)) (:next-time (seconds 0.14)) (:next-launcher 43))
  )

;; failed to figure out what this is:
(defpart 43
  :init-specs ((:scalevel-x (meters 0)) (:fade-a -0.21333334) (:timer (seconds 0) (seconds 0.987)))
  )

;; definition for function merc-death-spawn
;; INFO: Return type mismatch int vs none.
(defun merc-death-spawn ((arg0 int) (arg1 vector) (arg2 vector))
  (let ((v1-2 (-> *part-id-table* arg0)))
    (if (and (nonzero? v1-2) (= (-> v1-2 type) sparticle-launcher))
        (sp-launch-particles-death *sp-particle-system-2d* v1-2 arg1)
        )
    )
  0
  (none)
  )
