;;-*-Lisp-*-
(in-package goal)

;; definition of type pos-history
(deftype pos-history (structure)
  ((points     (inline-array vector)  :offset-assert   0)
   (num-points int32                  :offset-assert   4)
   (h-first    int32                  :offset-assert   8)
   (h-last     int32                  :offset-assert  12)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

;; definition for method 3 of type pos-history
(defmethod inspect pos-history ((this pos-history))
  (format #t "[~8x] ~A~%" this 'pos-history)
  (format #t "~Tpoints: #x~X~%" (-> this points))
  (format #t "~Tnum-points: ~D~%" (-> this num-points))
  (format #t "~Th-first: ~D~%" (-> this h-first))
  (format #t "~Th-last: ~D~%" (-> this h-last))
  this
  )

;; definition of type debug-vertex
(deftype debug-vertex (structure)
  ((trans  vector4w :inline :offset-assert   0)
   (normal vector3h :inline :offset-assert  16)
   (st     vector2h :inline :offset-assert  22)
   (color  uint32           :offset-assert  28)
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

;; definition for method 3 of type debug-vertex
(defmethod inspect debug-vertex ((this debug-vertex))
  (format #t "[~8x] ~A~%" this 'debug-vertex)
  (format #t "~Ttrans: ~`vector4w`P~%" (-> this trans))
  (format #t "~Tnormal: ~`vector3h`P~%" (-> this normal))
  (format #t "~Tst: ~`vector2h`P~%" (-> this st))
  (format #t "~Tcolor: #x~X~%" (-> this color))
  this
  )

;; definition of type debug-vertex-stats
(deftype debug-vertex-stats (basic)
  ((length    int32                    :offset-assert   4)
   (pos-count int32                    :offset-assert   8)
   (vertex    debug-vertex 600 :inline :offset-assert  16)
   )
  :method-count-assert 9
  :size-assert         #x4b10
  :flag-assert         #x900004b10
  )

;; definition for method 3 of type debug-vertex-stats
(defmethod inspect debug-vertex-stats ((this debug-vertex-stats))
  (format #t "[~8x] ~A~%" this (-> this type))
  (format #t "~Tlength: ~D~%" (-> this length))
  (format #t "~Tpos-count: ~D~%" (-> this pos-count))
  (format #t "~Tvertex[600] @ #x~X~%" (-> this vertex))
  this
  )

;; failed to figure out what this is:
0
