;;-*-Lisp-*-
(in-package goal)

;; this file is debug only
(declare-file (debug))

;; definition for symbol *redline-table*, type (pointer float)
(define *redline-table* (the-as (pointer float) (malloc 'debug 1600)))

;; definition for symbol *redline-index*, type int
(define *redline-index* 0)

;; definition for function float-save-redline
;; INFO: Return type mismatch int vs none.
(defun float-save-redline ((arg0 float))
  (set! (-> *redline-table* *redline-index*) arg0)
  (set! *redline-index* (+ *redline-index* 1))
  (when (>= *redline-index* 400)
    (set! *redline-index* 0)
    0
    )
  (none)
  )

;; definition for function float-lookup-redline
(defun float-lookup-redline ((arg0 float))
  (let ((a0-3 (mod (+ (the int arg0) -1 *redline-index*) 400)))
    (-> *redline-table* a0-3)
    )
  )

;; definition for symbol *blueline-table*, type (pointer float)
(define *blueline-table* (the-as (pointer float) (malloc 'debug 1600)))

;; definition for symbol *blueline-index*, type int
(define *blueline-index* 0)

;; definition for function float-save-blueline
;; INFO: Return type mismatch int vs none.
(defun float-save-blueline ((arg0 float))
  (set! (-> *blueline-table* *blueline-index*) arg0)
  (set! *blueline-index* (+ *blueline-index* 1))
  (when (>= *blueline-index* 400)
    (set! *blueline-index* 0)
    0
    )
  (none)
  )

;; definition for function float-lookup-blueline
(defun float-lookup-blueline ((arg0 float))
  (let ((a0-3 (mod (+ (the int arg0) -1 *blueline-index*) 400)))
    (-> *blueline-table* a0-3)
    )
  )

;; definition for symbol *greenline-table*, type (pointer float)
(define *greenline-table* (the-as (pointer float) (malloc 'debug 1600)))

;; definition for symbol *greenline-index*, type int
(define *greenline-index* 0)

;; definition for function float-save-greenline
;; INFO: Return type mismatch int vs none.
(defun float-save-greenline ((arg0 float))
  (set! (-> *greenline-table* *greenline-index*) arg0)
  (set! *greenline-index* (+ *greenline-index* 1))
  (when (>= *greenline-index* 400)
    (set! *greenline-index* 0)
    0
    )
  (none)
  )

;; definition for function float-lookup-greenline
(defun float-lookup-greenline ((arg0 float))
  (let ((a0-3 (mod (+ (the int arg0) -1 *greenline-index*) 400)))
    (-> *greenline-table* a0-3)
    )
  )

;; definition for symbol *yellowline-table*, type (pointer float)
(define *yellowline-table* (the-as (pointer float) (malloc 'debug 1600)))

;; definition for symbol *yellowline-index*, type int
(define *yellowline-index* 0)

;; definition for function float-save-yellowline
;; INFO: Return type mismatch int vs none.
(defun float-save-yellowline ((arg0 float))
  (set! (-> *yellowline-table* *yellowline-index*) arg0)
  (set! *yellowline-index* (+ *yellowline-index* 1))
  (when (>= *yellowline-index* 400)
    (set! *yellowline-index* 0)
    0
    )
  (none)
  )

;; definition for function float-lookup-yellowline
(defun float-lookup-yellowline ((arg0 float))
  (let ((a0-3 (mod (+ (the int arg0) -1 *yellowline-index*) 400)))
    (-> *yellowline-table* a0-3)
    )
  )

;; definition for symbol *timeplot-table*, type (pointer float)
(define *timeplot-table* (the-as (pointer float) (malloc 'debug 1600)))

;; definition for symbol *timeplot-index*, type int
(define *timeplot-index* 0)

;; definition for function float-save-timeplot
;; INFO: Return type mismatch int vs none.
(defun float-save-timeplot ((arg0 float))
  (set! (-> *timeplot-table* *timeplot-index*) arg0)
  (set! *timeplot-index* (+ *timeplot-index* 1))
  (when (>= *timeplot-index* 400)
    (set! *timeplot-index* 0)
    0
    )
  (none)
  )

;; definition for function float-lookup-timeplot
(defun float-lookup-timeplot ((arg0 float))
  (let ((a0-3 (mod (+ (the int arg0) -1 *timeplot-index*) 400)))
    (-> *timeplot-table* a0-3)
    )
  )

;; definition (perm) for symbol *cam-layout*, type symbol
(define-perm *cam-layout* symbol #f)

;; failed to figure out what this is:
0
