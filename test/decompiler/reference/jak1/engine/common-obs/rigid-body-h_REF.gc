;;-*-Lisp-*-
(in-package goal)

;; definition of type rigid-body
(deftype rigid-body (structure)
  ((mass                         float)
   (inv-mass                     float)
   (lin-momentum-damping-factor  float)
   (ang-momentum-damping-factor  float)
   (inertial-tensor              matrix      :inline)
   (inv-inertial-tensor          matrix      :inline)
   (cm-offset-joint              vector      :inline)
   (position                     vector      :inline)
   (rotation                     quaternion  :inline)
   (lin-momentum                 vector      :inline)
   (ang-momentum                 vector      :inline)
   (lin-velocity                 vector      :inline)
   (ang-velocity                 vector      :inline)
   (inv-i-world                  matrix      :inline)
   (matrix                       matrix      :inline)
   (force                        vector      :inline)
   (torque                       vector      :inline)
   (max-ang-momentum             float)
   (max-ang-velocity             float)
   )
  (:methods
    (rigid-body-method-9 (_type_ float float float float) none)
    (rigid-body-method-10 (_type_ float) none)
    (clear-force-torque! (_type_) none)
    (clear-momentum! (_type_) none)
    (rigid-body-method-13 (_type_ vector vector) none)
    (rigid-body-method-14 (_type_ vector vector) none)
    (rigid-body-method-15 (_type_ vector) none)
    (rigid-body-method-16 (_type_ vector vector float) none)
    (rigid-body-method-17 (_type_ vector vector) vector)
    (rigid-body-method-18 (_type_ vector) vector)
    (print-stats (_type_) none)
    (rigid-body-method-20 (_type_) none)
    (rigid-body-method-21 (_type_) none)
    (rigid-body-method-22 (_type_ vector quaternion float float) none)
    )
  )

;; definition for method 3 of type rigid-body
(defmethod inspect ((this rigid-body))
  (format #t "[~8x] ~A~%" this 'rigid-body)
  (format #t "~Tmass: ~f~%" (-> this mass))
  (format #t "~Tinv-mass: ~f~%" (-> this inv-mass))
  (format #t "~Tlin-momentum-damping-factor: ~f~%" (-> this lin-momentum-damping-factor))
  (format #t "~Tang-momentum-damping-factor: ~f~%" (-> this ang-momentum-damping-factor))
  (format #t "~Tinertial-tensor: #<matrix @ #x~X>~%" (-> this inertial-tensor))
  (format #t "~Tinv-inertial-tensor: #<matrix @ #x~X>~%" (-> this inv-inertial-tensor))
  (format #t "~Tcm-offset-joint: #<vector @ #x~X>~%" (-> this cm-offset-joint))
  (format #t "~Tposition: #<vector @ #x~X>~%" (-> this position))
  (format #t "~Trotation: #<quaternion @ #x~X>~%" (-> this rotation))
  (format #t "~Tlin-momentum: #<vector @ #x~X>~%" (-> this lin-momentum))
  (format #t "~Tang-momentum: #<vector @ #x~X>~%" (-> this ang-momentum))
  (format #t "~Tlin-velocity: #<vector @ #x~X>~%" (-> this lin-velocity))
  (format #t "~Tang-velocity: #<vector @ #x~X>~%" (-> this ang-velocity))
  (format #t "~Tinv-i-world: #<matrix @ #x~X>~%" (-> this inv-i-world))
  (format #t "~Tmatrix: #<matrix @ #x~X>~%" (-> this matrix))
  (format #t "~Tforce: #<vector @ #x~X>~%" (-> this force))
  (format #t "~Ttorque: #<vector @ #x~X>~%" (-> this torque))
  (format #t "~Tmax-ang-momentum: ~f~%" (-> this max-ang-momentum))
  (format #t "~Tmax-ang-velocity: ~f~%" (-> this max-ang-velocity))
  this
  )

;; definition of type rigid-body-control-point
(deftype rigid-body-control-point (structure)
  ((local-pos  vector  :inline)
   (world-pos  vector  :inline)
   (velocity   vector  :inline)
   )
  )

;; definition for method 3 of type rigid-body-control-point
(defmethod inspect ((this rigid-body-control-point))
  (format #t "[~8x] ~A~%" this 'rigid-body-control-point)
  (format #t "~Tlocal-pos: #<vector @ #x~X>~%" (-> this local-pos))
  (format #t "~Tworld-pos: #<vector @ #x~X>~%" (-> this world-pos))
  (format #t "~Tvelocity: #<vector @ #x~X>~%" (-> this velocity))
  this
  )

;; failed to figure out what this is:
0
