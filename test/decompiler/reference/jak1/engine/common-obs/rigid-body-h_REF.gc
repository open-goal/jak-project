;;-*-Lisp-*-
(in-package goal)

;; definition of type rigid-body
(deftype rigid-body (structure)
  ((mass                        float              :offset-assert   0)
   (inv-mass                    float              :offset-assert   4)
   (lin-momentum-damping-factor float              :offset-assert   8)
   (ang-momentum-damping-factor float              :offset-assert  12)
   (inertial-tensor             matrix     :inline :offset-assert  16)
   (inv-inertial-tensor         matrix     :inline :offset-assert  80)
   (cm-offset-joint             vector     :inline :offset-assert 144)
   (position                    vector     :inline :offset-assert 160)
   (rotation                    quaternion :inline :offset-assert 176)
   (lin-momentum                vector     :inline :offset-assert 192)
   (ang-momentum                vector     :inline :offset-assert 208)
   (lin-velocity                vector     :inline :offset-assert 224)
   (ang-velocity                vector     :inline :offset-assert 240)
   (inv-i-world                 matrix     :inline :offset-assert 256)
   (matrix                      matrix     :inline :offset-assert 320)
   (force                       vector     :inline :offset-assert 384)
   (torque                      vector     :inline :offset-assert 400)
   (max-ang-momentum            float              :offset-assert 416)
   (max-ang-velocity            float              :offset-assert 420)
   )
  :method-count-assert 23
  :size-assert         #x1a8
  :flag-assert         #x17000001a8
  (:methods
    (rigid-body-method-9 (_type_ float float float float) none 9)
    (rigid-body-method-10 (_type_ float) none 10)
    (clear-force-torque! (_type_) none 11)
    (clear-momentum! (_type_) none 12)
    (rigid-body-method-13 (_type_ vector vector) none 13)
    (rigid-body-method-14 (_type_ vector vector) none 14)
    (rigid-body-method-15 (_type_ vector) none 15)
    (rigid-body-method-16 (_type_ vector vector float) none 16)
    (rigid-body-method-17 (_type_ vector vector) vector 17)
    (rigid-body-method-18 (_type_ vector) vector 18)
    (print-stats (_type_) none 19)
    (rigid-body-method-20 (_type_) none 20)
    (rigid-body-method-21 (_type_) none 21)
    (rigid-body-method-22 (_type_ vector quaternion float float) none 22)
    )
  )

;; definition for method 3 of type rigid-body
(defmethod inspect rigid-body ((this rigid-body))
  (format #t "[~8x] ~A~%" this 'rigid-body)
  (format #t "~Tmass: ~f~%" (-> this mass))
  (format #t "~Tinv-mass: ~f~%" (-> this inv-mass))
  (format #t "~Tlin-momentum-damping-factor: ~f~%" (-> this lin-momentum-damping-factor))
  (format #t "~Tang-momentum-damping-factor: ~f~%" (-> this ang-momentum-damping-factor))
  (format #t "~Tinertial-tensor: #<matrix @ #x~X>~%" (-> this inertial-tensor))
  (format #t "~Tinv-inertial-tensor: #<matrix @ #x~X>~%" (-> this inv-inertial-tensor))
  (format #t "~Tcm-offset-joint: #<vector @ #x~X>~%" (-> this cm-offset-joint))
  (format #t "~Tposition: #<vector @ #x~X>~%" (-> this position))
  (format #t "~Trotation: #<quaternion @ #x~X>~%" (-> this rotation))
  (format #t "~Tlin-momentum: #<vector @ #x~X>~%" (-> this lin-momentum))
  (format #t "~Tang-momentum: #<vector @ #x~X>~%" (-> this ang-momentum))
  (format #t "~Tlin-velocity: #<vector @ #x~X>~%" (-> this lin-velocity))
  (format #t "~Tang-velocity: #<vector @ #x~X>~%" (-> this ang-velocity))
  (format #t "~Tinv-i-world: #<matrix @ #x~X>~%" (-> this inv-i-world))
  (format #t "~Tmatrix: #<matrix @ #x~X>~%" (-> this matrix))
  (format #t "~Tforce: #<vector @ #x~X>~%" (-> this force))
  (format #t "~Ttorque: #<vector @ #x~X>~%" (-> this torque))
  (format #t "~Tmax-ang-momentum: ~f~%" (-> this max-ang-momentum))
  (format #t "~Tmax-ang-velocity: ~f~%" (-> this max-ang-velocity))
  this
  )

;; definition of type rigid-body-control-point
(deftype rigid-body-control-point (structure)
  ((local-pos vector :inline :offset-assert   0)
   (world-pos vector :inline :offset-assert  16)
   (velocity  vector :inline :offset-assert  32)
   )
  :method-count-assert 9
  :size-assert         #x30
  :flag-assert         #x900000030
  )

;; definition for method 3 of type rigid-body-control-point
(defmethod inspect rigid-body-control-point ((this rigid-body-control-point))
  (format #t "[~8x] ~A~%" this 'rigid-body-control-point)
  (format #t "~Tlocal-pos: #<vector @ #x~X>~%" (-> this local-pos))
  (format #t "~Tworld-pos: #<vector @ #x~X>~%" (-> this world-pos))
  (format #t "~Tvelocity: #<vector @ #x~X>~%" (-> this velocity))
  this
  )

;; failed to figure out what this is:
0
