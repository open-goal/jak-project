;;-*-Lisp-*-
(in-package goal)

;; name: racer.gc
;; name in dgo: racer
;; dgos: L1, FIC, LAV, MIS, OGR, RACERP, ROL

(deftype racer (process-drawable)
  ((parent-override (pointer target) :score 100 :offset 12)
   (root-override collide-shape-moving :score 100 :offset 112)
   (extra-trans   vector  :inline :offset-assert 176)
   (condition     int32           :offset-assert 192)
   (cell          handle          :offset-assert 200)
   (path-data     path-control 2       :offset-assert 208)
   (path-target   curve-control           :offset 208)
   (path-racer    path-control           :offset 212)
   (auto-get-off  symbol           :offset-assert 216)
   (shadow-backup shadow-geo           :offset-assert 220)
   )
  :method-count-assert 24
  :size-assert         #xe0
  :heap-base           #x70
  :flag-assert         #x18007000e0
  (:methods
    (wait-for-start () _type_ :state 20)
    (idle () _type_ :state 21)
    (pickup ((state collectable)) _type_ :state 22)
    (wait-for-return () _type_ :state 23)
    )
  )

;; failed to figure out what this is:
(defskelgroup *racer-sg* racer
  0
  3
  ((1 (meters 999999)))
  :bounds (static-spherem 0 0 0 3.5)
  :longest-edge (meters 0)
  :shadow 2
  :sort 1
  )

;; failed to figure out what this is:
(defskelgroup *racer-explode-sg* racer
  22
  24
  ((23 (meters 999999)))
  :bounds (static-spherem 0 0 0 3.5)
  :longest-edge (meters 0)
  )


(define
  *racer-shadow-control*
  (new 'static 'shadow-control
   :settings
   (new 'static 'shadow-settings
    :center
    (new 'static 'vector :w (the-as float #xa))
    :shadow-dir
    (new 'static 'vector :y -1.0 :w 614400.0)
    :bot-plane (new 'static 'plane :y 1.0 :w 81920.0)
    :top-plane (new 'static 'plane :y 1.0 :w 2048.0)
    )
   )
  )
