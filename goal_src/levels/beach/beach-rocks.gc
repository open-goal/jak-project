;;-*-Lisp-*-
(in-package goal)

;; name: beach-rocks.gc
;; name in dgo: beach-rocks
;; dgos: BEA, L1

(define-extern *lrocklrg-sg* skeleton-group)

;; failed to figure out what this is:
(let
  ((v1-0
    (new 'static 'skeleton-group
     :art-group-name "lrocklrg"
     :bounds (new 'static 'vector :w 20480.0)
     :longest-edge (meters 11.0)
     :version #x6
     )
    )
   )
  (set! (-> v1-0 jgeo) 0)
  (set! (-> v1-0 janim) 2)
  (set! (-> v1-0 mgeo 0) (the-as uint 1))
  (set! (-> v1-0 lod-dist 0) 4095996000.0)
  (set! *lrocklrg-sg* v1-0)
  )

;; failed to figure out what this is:
(set!
  (-> *part-group-id-table* 553)
  (new 'static 'sparticle-launch-group
   :length 3
   :duration #x384
   :linger-duration #x5dc
   :flags #x1
   :name "group-beach-rocks-start"
   :launcher
   (new 'static 'inline-array sparticle-group-item 3
    (new 'static 'sparticle-group-item :launcher #x924 :period #x4b :length #xa)
    (new 'static 'sparticle-group-item :launcher #x925 :period #x4b :length #xa)
    (new 'static 'sparticle-group-item :launcher #x8f1 :period #x4b :length #xa)
    )
   :bounds (new 'static 'sphere :w 262144.0)
   )
  )

;; failed to figure out what this is:
(set!
  (-> *part-id-table* 2341)
  (new 'static 'sparticle-launcher
   :init-specs
   (new 'static 'inline-array sp-field-init-spec 22
    (new 'static 'sp-field-init-spec :field #x1 :initial-value #x201d00)
    (new 'static 'sp-field-init-spec
     :field #x6
     :flags #x1
     :initial-value #x40400000
     :random-range #x40c00000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #xb
     :flags #x1
     :random-range -964689920
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #xd
     :flags #x1
     :initial-value #x44800000
     :random-range #x45800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x10
     :flags #x1
     :random-range #x47800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x11
     :flags #x1
     :initial-value #x44800000
     :random-range #x45800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x12
     :flags #x1
     :initial-value #x42c00000
     :random-range #x42800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x13
     :flags #x1
     :initial-value #x42c00000
     :random-range #x42800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x14
     :flags #x1
     :random-range #x42000000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x15
     :flags #x1
     :initial-value #x42800000
     :random-range #x42800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x1a
     :flags #x1
     :initial-value #x435a740e
     :random-range #x435a740e
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x1c
     :flags #x1
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x1f
     :flags #x1
     :initial-value -1017482226
     :random-range #x43da740e
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x20
     :flags #x3
     :initial-value -4
     :random-mult 1
     )
    (new 'static 'sp-field-init-spec
     :field #x26
     :flags #x1
     :initial-value -1053184142
     :random-range -1056047454
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x2d
     :flags #x1
     :initial-value #x3f7851ec
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x2e
     :initial-value #x5dc
     :random-mult 1
     )
    (new 'static 'sp-field-init-spec
     :field #x2f
     :initial-value #x5004
     :random-mult 1
     )
    (new 'static 'sp-field-init-spec
     :field #x3a
     :flags #x1
     :initial-value #x46638e39
     :random-range #x470e38e4
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x3b
     :flags #x1
     :random-range #x47800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x3e
     :flags #x1
     :random-range #x46a00000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec :field #x43)
    )
   )
  )

;; failed to figure out what this is:
(set!
  (-> *part-id-table* 2340)
  (new 'static 'sparticle-launcher
   :init-specs
   (new 'static 'inline-array sp-field-init-spec 23
    (new 'static 'sp-field-init-spec :field #x1 :initial-value #x201700)
    (new 'static 'sp-field-init-spec
     :field #x6
     :flags #x1
     :initial-value #x41000000
     :random-range #x41800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #xb
     :flags #x1
     :random-range -964689920
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #xd
     :flags #x1
     :initial-value #x45000000
     :random-range #x45800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x10
     :flags #x1
     :random-range #x47800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x11
     :flags #x1
     :initial-value #x45000000
     :random-range #x45800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x12
     :flags #x1
     :initial-value #x42800000
     :random-range #x43000000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x13
     :flags #x1
     :initial-value #x43000000
     :random-range #x43000000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x14
     :flags #x1
     :random-range #x42800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x15
     :flags #x1
     :initial-value #x42800000
     :random-range #x42800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x1a
     :flags #x1
     :initial-value #x435a740e
     :random-range #x435a740e
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x1c
     :flags #x1
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x1f
     :flags #x1
     :initial-value -1017482226
     :random-range #x43da740e
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x20
     :flags #x3
     :initial-value -4
     :random-mult 1
     )
    (new 'static 'sp-field-init-spec
     :field #x24
     :flags #x1
     :initial-value -1112620226
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x26
     :flags #x1
     :initial-value -1067813874
     :random-range -1056047454
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x2d
     :flags #x1
     :initial-value #x3f6e147b
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x2e
     :initial-value #x5dc
     :random-mult 1
     )
    (new 'static 'sp-field-init-spec
     :field #x2f
     :initial-value #x5004
     :random-mult 1
     )
    (new 'static 'sp-field-init-spec
     :field #x3a
     :flags #x1
     :initial-value #x46638e39
     :random-range #x470e38e4
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x3b
     :flags #x1
     :random-range #x47800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x3e
     :flags #x1
     :random-range #x46a00000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec :field #x43)
    )
   )
  )

;; failed to figure out what this is:
(set!
  (-> *part-id-table* 2289)
  (new 'static 'sparticle-launcher
   :init-specs
   (new 'static 'inline-array sp-field-init-spec 26
    (new 'static 'sp-field-init-spec :field #x1 :initial-value #x200000)
    (new 'static 'sp-field-init-spec
     :field #x6
     :flags #x1
     :initial-value #x3f800000
     :random-range #x40400000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #xb
     :flags #x1
     :random-range -964689920
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #xd
     :flags #x1
     :initial-value #x46c00000
     :random-range #x46000000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x10
     :flags #x1
     :random-range #x47800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x11
     :flags #x3
     :initial-value -4
     :random-mult 1
     )
    (new 'static 'sp-field-init-spec
     :field #x12
     :flags #x1
     :initial-value #x43400000
     :random-range #x42800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x13
     :flags #x1
     :initial-value #x43000000
     :random-range #x42800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x14
     :flags #x1
     :initial-value #x42800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x15
     :flags #x1
     :initial-value #x41800000
     :random-range #x42000000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x1a
     :flags #x1
     :initial-value #x435a740e
     :random-range #x435a740e
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x1c
     :flags #x1
     :initial-value #x4323d70a
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x1f
     :flags #x1
     :initial-value -1039031628
     :random-range #x4291a2b4
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x20
     :flags #x3
     :initial-value -4
     :random-mult 1
     )
    (new 'static 'sp-field-init-spec
     :field #x21
     :flags #x1
     :initial-value -1121008834
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x22
     :flags #x1
     :initial-value -1115998039
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x23
     :flags #x1
     :initial-value -1121008834
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x24
     :flags #x1
     :initial-value -1123872145
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x26
     :flags #x1
     :initial-value -1073540497
     :random-range -1057993610
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x2d
     :flags #x1
     :initial-value #x3f733333
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x2e
     :initial-value #x5dc
     :random-mult 1
     )
    (new 'static 'sp-field-init-spec
     :field #x2f
     :initial-value #x5004
     :random-mult 1
     )
    (new 'static 'sp-field-init-spec
     :field #x3a
     :flags #x1
     :random-range #x47800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x3b
     :flags #x1
     :random-range #x47800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x3e
     :flags #x1
     :random-range #x46c00000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec :field #x43)
    )
   )
  )

;; failed to figure out what this is:
(set!
  (-> *part-group-id-table* 554)
  (new 'static 'sparticle-launch-group
   :length 1
   :duration #xbb8
   :linger-duration #x5dc
   :flags #x1
   :name "group-beach-rocks-fall"
   :launcher
   (new 'static 'inline-array sparticle-group-item 1
    (new 'static 'sparticle-group-item :launcher #x8f2 :period #xf :length #x5)
    )
   :bounds (new 'static 'sphere :w 32768.0)
   )
  )

;; failed to figure out what this is:
(set!
  (-> *part-id-table* 2290)
  (new 'static 'sparticle-launcher
   :init-specs
   (new 'static 'inline-array sp-field-init-spec 26
    (new 'static 'sp-field-init-spec :field #x1 :initial-value #x200000)
    (new 'static 'sp-field-init-spec
     :field #x6
     :flags #x1
     :initial-value #x40400000
     :random-range #x40400000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #xb
     :flags #x1
     :random-range -964689920
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #xd
     :flags #x1
     :initial-value #x46e00000
     :random-range #x47100000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x10
     :flags #x1
     :random-range #x47800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x11
     :flags #x3
     :initial-value -4
     :random-mult 1
     )
    (new 'static 'sp-field-init-spec
     :field #x12
     :flags #x1
     :initial-value #x43400000
     :random-range #x42800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x13
     :flags #x1
     :initial-value #x43000000
     :random-range #x42800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x14
     :flags #x1
     :initial-value #x42800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x15
     :flags #x1
     :initial-value #x41800000
     :random-range #x42400000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x1a
     :flags #x1
     :initial-value #x425a740e
     :random-range #x41da740e
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x1c
     :flags #x1
     :initial-value #x42da740e
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x1f
     :flags #x1
     :initial-value -1039031628
     :random-range #x4291a2b4
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x20
     :flags #x3
     :initial-value -4
     :random-mult 1
     )
    (new 'static 'sp-field-init-spec
     :field #x21
     :flags #x1
     :initial-value -1109756914
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x22
     :flags #x1
     :initial-value -1105394838
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x23
     :flags #x1
     :initial-value -1109756914
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x24
     :flags #x1
     :initial-value -1109756914
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x26
     :flags #x1
     :initial-value -1073540497
     :random-range -1057993610
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x2d
     :flags #x1
     :initial-value #x3f7ae148
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x2e
     :initial-value #x5dc
     :random-mult 1
     )
    (new 'static 'sp-field-init-spec
     :field #x2f
     :initial-value #x5004
     :random-mult 1
     )
    (new 'static 'sp-field-init-spec
     :field #x3a
     :flags #x1
     :random-range #x47800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x3b
     :flags #x1
     :random-range #x47800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x3e
     :flags #x1
     :random-range #x46000000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec :field #x43)
    )
   )
  )

;; failed to figure out what this is:
(set!
  (-> *part-group-id-table* 555)
  (new 'static 'sparticle-launch-group
   :length 3
   :duration #x384
   :linger-duration #x5dc
   :flags #x1
   :name "group-beach-rocks-land"
   :launcher
   (new 'static 'inline-array sparticle-group-item 3
    (new 'static 'sparticle-group-item
     :launcher #x926
     :period #x384
     :length #x28
     )
    (new 'static 'sparticle-group-item
     :launcher #x927
     :period #x384
     :length #x28
     )
    (new 'static 'sparticle-group-item
     :launcher #x8f3
     :period #x384
     :length #x28
     )
    )
   :bounds (new 'static 'sphere :w 262144.0)
   )
  )

;; failed to figure out what this is:
(set!
  (-> *part-id-table* 2343)
  (new 'static 'sparticle-launcher
   :init-specs
   (new 'static 'inline-array sp-field-init-spec 18
    (new 'static 'sp-field-init-spec :field #x1 :initial-value #x200f00)
    (new 'static 'sp-field-init-spec
     :field #x6
     :flags #x1
     :initial-value #x42000000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #xb
     :flags #x1
     :initial-value -968884224
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #xd
     :flags #x1
     :initial-value #x44cccccd
     :random-range #x4499999a
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x10
     :flags #x1
     :random-range #x47000000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x11
     :flags #x1
     :initial-value #x48000000
     :random-range #x47200000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x12
     :flags #x1
     :initial-value #x43400000
     :random-range #x42800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x13
     :flags #x1
     :initial-value #x43000000
     :random-range #x42800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x14
     :flags #x1
     :initial-value #x42800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x15
     :flags #x1
     :initial-value #x42000000
     :random-range #x42800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x20
     :flags #x1
     :initial-value #x465a740e
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x21
     :flags #x1
     :initial-value -1109756914
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x22
     :flags #x1
     :initial-value -1105394838
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x23
     :flags #x1
     :initial-value -1109756914
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x24
     :flags #x1
     :initial-value -1068708659
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x2e
     :initial-value 30
     :random-mult 1
     )
    (new 'static 'sp-field-init-spec
     :field #x2f
     :initial-value #x400c
     :random-mult 1
     )
    (new 'static 'sp-field-init-spec :field #x43)
    )
   )
  )

;; failed to figure out what this is:
(set!
  (-> *part-id-table* 2342)
  (new 'static 'sparticle-launcher
   :init-specs
   (new 'static 'inline-array sp-field-init-spec 23
    (new 'static 'sp-field-init-spec :field #x1 :initial-value #x201700)
    (new 'static 'sp-field-init-spec
     :field #x6
     :flags #x1
     :initial-value #x42800000
     :random-range #x42800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #xb
     :flags #x1
     :random-range -964689920
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #xd
     :flags #x1
     :initial-value #x45000000
     :random-range #x45800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x10
     :flags #x1
     :random-range #x47800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x11
     :flags #x1
     :initial-value #x45000000
     :random-range #x45800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x12
     :flags #x1
     :initial-value #x43000000
     :random-range #x42800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x13
     :flags #x1
     :initial-value #x43400000
     :random-range #x42800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x14
     :flags #x1
     :random-range #x42800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x15
     :flags #x1
     :initial-value #x42800000
     :random-range #x42800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x1a
     :flags #x1
     :initial-value #x43da740e
     :random-range #x445a740e
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x1c
     :flags #x1
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x1f
     :flags #x1
     :initial-value -1017482226
     :random-range #x43da740e
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x20
     :flags #x3
     :initial-value -4
     :random-mult 1
     )
    (new 'static 'sp-field-init-spec
     :field #x24
     :flags #x1
     :initial-value -1112620226
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x26
     :flags #x1
     :initial-value -1067813874
     :random-range -1056047454
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x2d
     :flags #x1
     :initial-value #x3f733333
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x2e
     :initial-value #x5dc
     :random-mult 1
     )
    (new 'static 'sp-field-init-spec
     :field #x2f
     :initial-value #x5004
     :random-mult 1
     )
    (new 'static 'sp-field-init-spec
     :field #x3a
     :flags #x1
     :initial-value #x462aaaab
     :random-range #x45638e39
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x3b
     :flags #x1
     :random-range #x47800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x3e
     :flags #x1
     :random-range #x46a00000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec :field #x43)
    )
   )
  )

;; failed to figure out what this is:
(set!
  (-> *part-id-table* 2291)
  (new 'static 'sparticle-launcher
   :init-specs
   (new 'static 'inline-array sp-field-init-spec 26
    (new 'static 'sp-field-init-spec :field #x1 :initial-value #x200000)
    (new 'static 'sp-field-init-spec
     :field #x6
     :flags #x1
     :initial-value #x42000000
     :random-range #x42000000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #xb
     :flags #x1
     :random-range -964689920
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #xd
     :flags #x1
     :initial-value #x47000000
     :random-range #x47000000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x10
     :flags #x1
     :random-range #x47800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x11
     :flags #x3
     :initial-value -4
     :random-mult 1
     )
    (new 'static 'sp-field-init-spec
     :field #x12
     :flags #x1
     :initial-value #x43400000
     :random-range #x42800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x13
     :flags #x1
     :initial-value #x43000000
     :random-range #x42800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x14
     :flags #x1
     :initial-value #x42800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x15
     :flags #x1
     :initial-value #x41800000
     :random-range #x42400000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x1a
     :flags #x1
     :initial-value #x43da740e
     :random-range #x44a3d70a
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x1c
     :flags #x1
     :initial-value #x43088889
     :random-range #x42a3d70a
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x1f
     :flags #x1
     :initial-value -1039031628
     :random-range #x4291a2b4
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x20
     :flags #x3
     :initial-value -4
     :random-mult 1
     )
    (new 'static 'sp-field-init-spec
     :field #x21
     :flags #x1
     :initial-value -1109756914
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x22
     :flags #x1
     :initial-value -1105394838
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x23
     :flags #x1
     :initial-value -1109756914
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x24
     :flags #x1
     :initial-value -1109756914
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x26
     :flags #x1
     :initial-value -1073540497
     :random-range -1057993610
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x2d
     :flags #x1
     :initial-value #x3f59999a
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x2e
     :initial-value #x5dc
     :random-mult 1
     )
    (new 'static 'sp-field-init-spec
     :field #x2f
     :initial-value #x5004
     :random-mult 1
     )
    (new 'static 'sp-field-init-spec
     :field #x3a
     :flags #x1
     :random-range #x468e38e4
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x3b
     :flags #x1
     :random-range #x47800000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec
     :field #x3e
     :flags #x1
     :random-range #x46000000
     :random-mult #x3f800000
     )
    (new 'static 'sp-field-init-spec :field #x43)
    )
   )
  )

;; definition of type beach-rock
(deftype beach-rock (process-drawable)
  ((root-override collide-shape-moving      :offset        112)
   (trigger       basic                     :offset-assert 176)
   (movie-start   uint64                    :offset-assert 184)
   (part-falling  sparticle-launch-control  :offset-assert 192)
   (part-landing  sparticle-launch-control  :offset-assert 196)
   (prev-frame    float                     :offset-assert 200)
   )
  :heap-base #x60
  :method-count-assert 24
  :size-assert         #xcc
  :flag-assert         #x18006000cc
  (:methods
    (idle () _type_ :state 20)
    (loading () _type_ :state 21)
    (falling () _type_ :state 22)
    (fallen () _type_ :state 23)
    )
  )

;; definition for method 3 of type beach-rock
(defmethod inspect beach-rock ((obj beach-rock))
  (let ((t9-0 (method-of-type process-drawable inspect)))
   (t9-0 obj)
   )
  (format #t "~T~Ttrigger: ~A~%" (-> obj trigger))
  (format #t "~T~Tmovie-start: ~D~%" (-> obj movie-start))
  (format #t "~T~Tpart-falling: ~A~%" (-> obj part-falling))
  (format #t "~T~Tpart-landing: ~A~%" (-> obj part-landing))
  (format #t "~T~Tprev-frame: ~f~%" (-> obj prev-frame))
  obj
  )

;; definition for method 7 of type beach-rock
;; INFO: Return type mismatch none vs beach-rock.
(defmethod relocate beach-rock ((obj beach-rock) (arg0 int))
  (if (nonzero? (-> obj part-falling))
   (set!
    (-> obj part-falling)
    (the-as
     sparticle-launch-control
     (+ (the-as int (-> obj part-falling)) arg0)
     )
    )
   )
  (if (nonzero? (-> obj part-landing))
   (set!
    (-> obj part-landing)
    (the-as
     sparticle-launch-control
     (+ (the-as int (-> obj part-landing)) arg0)
     )
    )
   )
  (the-as
   beach-rock
   ((the-as
     (function process-drawable int none)
     (find-parent-method beach-rock 7)
     )
    obj
    arg0
    )
   )
  )

;; definition for method 10 of type beach-rock
(defmethod deactivate beach-rock ((obj beach-rock))
  (if (nonzero? (-> obj part-falling))
   (deactivate (-> obj part-falling))
   )
  (if (nonzero? (-> obj part-landing))
   (deactivate (-> obj part-landing))
   )
  ((the-as (function process-drawable none) (find-parent-method beach-rock 10))
   obj
   )
  (none)
  )

;; failed to figure out what this is:
(defstate idle (beach-rock)
  :virtual #t
  :event
  (behavior ((arg0 process) (arg1 int) (arg2 symbol) (arg3 event-message-block))
   (let ((v1-0 arg2))
    (the-as object (cond
                    ((= v1-0 'trigger)
                     (set! (-> self trigger) #t)
                     (go-virtual falling)
                     )
                    ((= v1-0 'loading)
                     (go-virtual loading)
                     )
                    )
     )
    )
   )
  :code
  (behavior ()
   (if (-> self trigger)
    (go-virtual falling)
    )
   (ja-channel-set! 0)
   (ja-post)
   (while #t
    (logior! (-> self mask) (process-mask sleep))
    (suspend)
    )
   (none)
   )
  )

;; failed to figure out what this is:
(defstate loading (beach-rock)
  :virtual #t
  :event
  (-> (the-as state (method-of-type beach-rock idle)) event)
  :code
  (behavior ()
   (while #t
    (spool-push *art-control* "lrocklrg-falling" 0 self -1.0)
    (suspend)
    )
   (none)
   )
  )

;; failed to figure out what this is:
(defstate falling (beach-rock)
  :virtual #t
  :trans
  (behavior ()
   (set! (-> self draw bounds w) 819200.0)
   (let ((f30-0 (ja-aframe-num 0)))
    (when (and (< -50.0 f30-0) (< f30-0 158.0))
     (let ((gp-0 (new 'stack-no-clear 'vector)))
      (set! (-> gp-0 quad) (-> self root-override trans quad))
      (dummy-11 (-> self part) gp-0)
      (set! (-> gp-0 x) (+ 122880.0 (-> gp-0 x)))
      (set! (-> gp-0 z) (+ 102400.0 (-> gp-0 z)))
      (dummy-11 (-> self part) gp-0)
      )
     )
    (if (and (< 200.0 f30-0) (< f30-0 275.0))
     (dummy-11
      (-> self part-falling)
      (vector<-cspace! (new 'stack-no-clear 'vector) (-> self node-list data 3))
      )
     )
    (if (and (< 270.0 f30-0) (< f30-0 333.0))
     (dummy-11
      (-> self part-falling)
      (vector<-cspace! (new 'stack-no-clear 'vector) (-> self node-list data 4))
      )
     )
    (if (and (< (-> self prev-frame) 333.0) (>= f30-0 333.0))
     (dummy-11
      (-> self part-landing)
      (vector<-cspace! (new 'stack-no-clear 'vector) (-> self node-list data 4))
      )
     )
    (if (and (< 169.0 f30-0) (< f30-0 202.0))
     (dummy-11
      (-> self part-falling)
      (vector<-cspace! (new 'stack-no-clear 'vector) (-> self node-list data 5))
      )
     )
    (if (and (< 240.0 f30-0) (< f30-0 270.0))
     (dummy-11
      (-> self part-falling)
      (vector<-cspace! (new 'stack-no-clear 'vector) (-> self node-list data 6))
      )
     )
    (set! (-> self prev-frame) f30-0)
    )
   (none)
   )
  :code
  (behavior ()
   (local-vars (v1-3 symbol) (v1-49 symbol))
   (until v1-3
    (spool-push *art-control* "lrocklrg-falling" 0 self -1.0)
    (suspend)
    (set! v1-3 (or (not *target*) (process-grab? *target*)))
    )
   (set! (-> self draw status) (logand -3 (-> self draw status)))
   (ja-channel-set! 1)
   (let ((gp-0 (-> self skel root-channel 0)))
    (joint-control-channel-group-eval!
     gp-0
     (the-as art-joint-anim (-> self draw art-group data 2))
     num-func-identity
     )
    (set! (-> gp-0 frame-num) 0.0)
    )
   (let* ((gp-1 (get-process *default-dead-pool* othercam #x4000))
          (gp-2 (ppointer->handle (when gp-1
                                   (let
                                    ((t9-5 (method-of-type othercam activate)))
                                    (t9-5
                                     (the-as othercam gp-1)
                                     self
                                     'othercam
                                     (the-as pointer #x70004000)
                                     )
                                    )
                                   (let
                                    ((t9-6
                                      (the-as function run-function-in-process)
                                      )
                                     (a0-9 gp-1)
                                     (a1-4 othercam-init-by-other)
                                     (a3-2 7)
                                     (t0-1 #f)
                                     )
                                    #t
                                    ((the-as
                                      (function object object object object object object)
                                      t9-6
                                      )
                                     a0-9
                                     a1-4
                                     self
                                     a3-2
                                     t0-1
                                     )
                                    )
                                   (-> gp-1 ppointer)
                                   )
                 )
           )
          (s5-0 (get-process *default-dead-pool* fuel-cell #x4000))
          (s5-1 (ppointer->handle (when s5-0
                                   (let
                                    ((t9-8 (method-of-type fuel-cell activate)))
                                    (t9-8
                                     (the-as fuel-cell s5-0)
                                     self
                                     'fuel-cell
                                     (the-as pointer #x70004000)
                                     )
                                    )
                                   ((the-as
                                     (function object object object object object)
                                     run-function-in-process
                                     )
                                    s5-0
                                    fuel-cell-init-as-clone
                                    (process->handle self)
                                    (-> self entity extra perm task)
                                    )
                                   (-> s5-0 ppointer)
                                   )
                 )
           )
          )
    (close-specific-task!
     (-> self entity extra perm task)
     (task-status need-reminder)
     )
    (set! (-> self movie-start) (the-as uint (-> *display* base-frame-counter)))
    (spool-push *art-control* "lrocklrg-falling" 0 self -1.0)
    (ja-play-spooled-anim
     (new 'static 'spool-anim
      :name "lrocklrg-falling"
      :index 4
      :parts 4
      :command-list
      '(
        ((the binteger -150)
          blackout
          (the binteger 100)
          )
        ((the binteger -116) blackout 0)
        )
      )
     (the-as art-joint-anim (-> self draw art-group data 2))
     (the-as art-joint-anim (-> self draw art-group data 3))
     (the-as (function process-drawable symbol) false-func)
     )
    (process-entity-status! self (entity-perm-status complete) #t)
    (cond
     ((handle->process gp-2)
      (deactivate (-> gp-2 process 0))
      )
     (else
      )
     )
    (let ((a0-28 (handle->process s5-1)))
     (when a0-28
      (let ((a1-14 (new 'stack-no-clear 'event-message-block)))
       (set! (-> a1-14 from) self)
       (set! (-> a1-14 num-params) 0)
       (set! (-> a1-14 message) 'stop-cloning)
       (send-event-function a0-28 a1-14)
       )
      )
     )
    )
   (until v1-49
    (suspend)
    (set! v1-49 (or (not *target*) (process-release? *target*)))
    )
   (set! (-> self draw bounds w) 20480.0)
   (go-virtual fallen)
   (none)
   )
  :post
  (the-as (function none :behavior beach-rock) transform-post)
  )

;; failed to figure out what this is:
(defstate fallen (beach-rock)
  :virtual #t
  :code
  (behavior ()
   (level-hint-spawn
    (game-text-id beach-seagulls-avalanche)
    "sksp0025"
    #f
    *entity-pool*
    0
    )
   (let ((v1-2 (-> self skel root-channel 0)))
    (set!
     (-> v1-2 frame-group)
     (the-as art-joint-anim (-> self draw art-group data 3))
     )
    )
   (TODO-RENAME-9 (-> self align))
   (let ((v1-6 (first-transform (-> self align))))
    (set! (-> self root-override trans quad) (-> self entity extra trans quad))
    (+! (-> self root-override trans y) (-> v1-6 trans y))
    )
   (suspend)
   (dummy-47 (-> self root-override))
   (logior! (-> self mask) (process-mask sleep))
   (suspend)
   0
   (none)
   )
  :post
  (the-as (function none :behavior beach-rock) ja-post)
  )

;; definition for method 11 of type beach-rock
(defmethod copy-defaults! beach-rock ((obj beach-rock) (arg0 res-lump))
  (set! (-> obj link) (new 'process 'actor-link-info obj))
  (set! (-> obj align) (new 'process 'align-control obj))
  (set! (-> obj trigger) #f)
  (logclear! (-> obj mask) (process-mask actor-pause))
  (set!
   (-> obj part)
   (create-launch-control (-> *part-group-id-table* 553) obj)
   )
  (set!
   (-> obj part-falling)
   (create-launch-control (-> *part-group-id-table* 554) obj)
   )
  (set!
   (-> obj part-landing)
   (create-launch-control (-> *part-group-id-table* 555) obj)
   )
  (set! (-> obj prev-frame) -1000.0)
  (set! (-> obj draw origin-joint-index) (the-as uint 4))
  (case (get-task-status (-> obj entity extra perm task)) 
   (((task-status invalid))
     (go (method-of-object obj fallen))
     )
   (((task-status need-resolution))
    (let ((s5-0 (new 'stack-no-clear 'vector)))
     (ja-post)
     (vector<-cspace! s5-0 (-> obj node-list data 8))
     (birth-pickup-at-point
      s5-0
      6
      (the float (the-as int (-> obj entity extra perm task)))
      #f
      obj
      #f
      )
     )
    (go (method-of-object obj fallen))
    )
   (else
    (go (method-of-object obj idle))
    )
   )
  (none)
  )

;; definition of type lrocklrg
(deftype lrocklrg (beach-rock)
  ()
  :heap-base #x60
  :method-count-assert 24
  :size-assert         #xcc
  :flag-assert         #x18006000cc
  )

;; definition for method 3 of type lrocklrg
(defmethod inspect lrocklrg ((obj lrocklrg))
  (let ((t9-0 (method-of-type beach-rock inspect)))
   (t9-0 obj)
   )
  obj
  )

;; definition for method 11 of type lrocklrg
(defmethod copy-defaults! lrocklrg ((obj lrocklrg) (arg0 res-lump))
  (stack-size-set! (-> obj main-thread) 512)
  (let
   ((s4-0
     (new 'process 'collide-shape-moving obj (collide-list-enum hit-by-player))
     )
    )
   (set! (-> s4-0 dynam) (copy *standard-dynamics* 'process))
   (set! (-> s4-0 reaction) default-collision-reaction)
   (set! (-> s4-0 no-reaction) nothing)
   (let
    ((s3-0
      (new
       'process
       'collide-shape-prim-mesh
       s4-0
       (the-as uint 0)
       (the-as uint 0)
       )
      )
     )
    (set! (-> s3-0 prim-core collide-as) (the-as uint 1))
    (set! (-> s3-0 collide-with) (the-as uint 16))
    (set! (-> s3-0 prim-core action) (the-as uint 1))
    (set! (-> s3-0 prim-core offense) 4)
    (set! (-> s3-0 transform-index) 4)
    (set-vector! (-> s3-0 local-sphere) 0.0 0.0 0.0 24576.0)
    )
   (dummy-46 s4-0)
   (set! (-> s4-0 nav-radius) (* 0.75 (-> s4-0 root-prim local-sphere w)))
   (dummy-50 s4-0)
   (set! (-> obj root-override) s4-0)
   )
  (process-drawable-from-entity! obj arg0)
  (dummy-14 obj *lrocklrg-sg* '())
  ((method-of-type beach-rock copy-defaults!) obj arg0)
  (none)
  )