;;-*-Lisp-*-
(in-package goal)

;; name: demo-obs.gc
;; name in dgo: demo-obs
;; dgos: DEM, L1

(define-extern static-screen-spawn (function int int int int int symbol target (pointer process))) ;; target may differ

;; DECOMP BEGINS

(defstate target-demo (target)
  :event target-generic-event-handler
  :code (behavior ()
    (if *time-of-day-proc*
        (set! (-> *time-of-day-proc* 0 hour) 12)
        )
    (set-setting! *setting-control* self 'allow-pause #f 0.0 0)
    (set-setting! *setting-control* self 'allow-progress #f 0.0 0)
    (copy-settings-from-target! *setting-control*)
    (ja-channel-set! 0)
    (ja-post)
    (load-state-want-levels 'demo 'village1)
    (load-state-want-vis 'vi1)
    (case (scf-get-territory)
      ((2)
       (let ((gp-0 (ppointer->handle (static-screen-spawn 6 #x27c00000 #x27c00100 #x27c00200 1500 #f self))))
         (while (handle->process gp-0)
           (suspend)
           )
         )
       (let ((gp-1 (ppointer->handle (static-screen-spawn 7 #x27d00000 #x27d00100 #x27d00200 1500 #f self))))
         (while (handle->process gp-1)
           (suspend)
           )
         )
       (let ((gp-2 (ppointer->handle (static-screen-spawn 8 #x2f000000 #x2f000100 #x2f000200 #x4650 #t self))))
         (while (handle->process gp-2)
           (suspend)
           )
         )
       )
      ((1)
       (case (-> *setting-control* current language)
         (((language-enum french))
          (let ((gp-3 (ppointer->handle (static-screen-spawn 10 #x63f00000 #x63f00100 #x63f00200 1500 #f self))))
            (while (handle->process gp-3)
              (suspend)
              )
            )
          )
         (((language-enum german))
          (let ((gp-4 (ppointer->handle (static-screen-spawn 11 #x64000000 #x64000100 #x64000200 1500 #f self))))
            (while (handle->process gp-4)
              (suspend)
              )
            )
          )
         (((language-enum italian))
          (let ((gp-5 (ppointer->handle (static-screen-spawn 12 #x64100000 #x64100100 #x64100200 1500 #f self))))
            (while (handle->process gp-5)
              (suspend)
              )
            )
          )
         (((language-enum spanish))
          (let ((gp-6 (ppointer->handle (static-screen-spawn 13 #x64200000 #x64200100 #x64200200 1500 #f self))))
            (while (handle->process gp-6)
              (suspend)
              )
            )
          )
         (else
           (let ((gp-7 (ppointer->handle (static-screen-spawn 2 #x5cd00000 #x5cd00100 #x5cd00200 1500 #f self))))
             (while (handle->process gp-7)
               (suspend)
               )
             )
           )
         )
       (let ((gp-8 (ppointer->handle (static-screen-spawn 3 #x5ce00000 #x5ce00100 #x5ce00200 1500 #f self))))
         (while (handle->process gp-8)
           (suspend)
           )
         )
       (case (-> *setting-control* current language)
         (((language-enum french))
          (let ((gp-9 (ppointer->handle (static-screen-spawn 15 #x64400000 #x64400100 #x64400200 #x4650 #t self))))
            (while (handle->process gp-9)
              (suspend)
              )
            )
          )
         (((language-enum german))
          (let ((gp-10 (ppointer->handle (static-screen-spawn 16 #x64500000 #x64500100 #x64500200 #x4650 #t self))))
            (while (handle->process gp-10)
              (suspend)
              )
            )
          )
         (((language-enum italian))
          (let ((gp-11 (ppointer->handle (static-screen-spawn 17 #x64600000 #x64600100 #x64600200 #x4650 #t self))))
            (while (handle->process gp-11)
              (suspend)
              )
            )
          )
         (((language-enum spanish))
          (let ((gp-12 (ppointer->handle (static-screen-spawn 18 #x64700000 #x64700100 #x64700200 #x4650 #t self))))
            (while (handle->process gp-12)
              (suspend)
              )
            )
          )
         (else
           (let ((gp-13 (ppointer->handle (static-screen-spawn 14 #x64300000 #x64300100 #x64300200 #x4650 #t self))))
             (while (handle->process gp-13)
               (suspend)
               )
             )
           )
         )
       )
      (else
        (let ((gp-14 (ppointer->handle (static-screen-spawn 2 #x5cd00000 #x5cd00100 #x5cd00200 1500 #f self))))
          (while (handle->process gp-14)
            (suspend)
            )
          )
        (let ((gp-15 (ppointer->handle (static-screen-spawn 3 #x5ce00000 #x5ce00100 #x5ce00200 1500 #f self))))
          (while (handle->process gp-15)
            (suspend)
            )
          )
        (let ((gp-16 (ppointer->handle (static-screen-spawn 4 #x5cf00000 #x5cf00100 #x5cf00200 #x4650 #t self))))
          (while (handle->process gp-16)
            (suspend)
            )
          )
        )
      )
    (process-spawn-function process (lambda ()
                                      (set! (-> *setting-control* default bg-a) 0.0)
                                      (start 'play (get-continue-by-name *game-info* "village1-demo-convo"))
                                      )
                            )
    (loop
      (suspend)
      )
    (none)
    )
  :post target-no-move-post
  )




