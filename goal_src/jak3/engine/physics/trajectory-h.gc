;;-*-Lisp-*-
(in-package goal)

;; name: trajectory-h.gc
;; name in dgo: trajectory-h
;; dgos: GAME

;; DECOMP BEGINS

(deftype trajectory (structure)
  ((initial-position  vector  :inline)
   (initial-velocity  vector  :inline)
   (time              float)
   (gravity           meters)
   )
  (:methods
    (trajectory-method-9 () none)
    (trajectory-method-10 () none)
    (trajectory-method-11 () none)
    (trajectory-method-12 () none)
    (trajectory-method-13 () none)
    (trajectory-method-14 () none)
    (trajectory-method-15 () none)
    (trajectory-method-16 () none)
    (trajectory-method-17 () none)
    )
  )


(deftype impact-control (structure)
  ((process       (pointer process-drawable))
   (radius        meters)
   (joint         int32)
   (collide-with  collide-spec)
   (start-time    uint64)
   (trans         vector  2 :inline)
   (dir           vector  :inline)
   )
  (:methods
    (new (symbol type process-drawable int float collide-spec) _type_)
    (initialize (_type_ process-drawable int float collide-spec) impact-control)
    (impact-control-method-10 () none)
    (impact-control-method-11 () none)
    )
  )


(defmethod new impact-control ((allocation symbol) (type-to-make type) (arg0 process-drawable) (arg1 int) (arg2 float) (arg3 collide-spec))
  (let ((t9-0 (method-of-type structure new))
        (v1-1 type-to-make)
        )
    (-> type-to-make size)
    ((method-of-type impact-control initialize)
     (the-as impact-control (t9-0 allocation v1-1))
     arg0
     arg1
     arg2
     arg3
     )
    )
  )

(deftype point-tracker (structure)
  ((trans  vector  2 :inline)
   )
  (:methods
    (new (symbol type vector vector) _type_)
    (initialize (_type_ vector vector) point-tracker)
    (point-tracker-method-10 () none)
    (point-tracker-method-11 () none)
    )
  )


(defmethod new point-tracker ((allocation symbol) (type-to-make type) (arg0 vector) (arg1 vector))
  (let ((t9-0 (method-of-type structure new))
        (v1-1 type-to-make)
        )
    (-> type-to-make size)
    ((method-of-type point-tracker initialize) (the-as point-tracker (t9-0 allocation v1-1)) arg0 arg1)
    )
  )

(deftype combo-tracker (point-tracker)
  ((target           handle)
   (move-start-time  time-frame)
   )
  (:methods
    (combo-tracker-method-12 () none)
    (combo-tracker-method-13 () none)
    )
  )


(deftype traj2d-params (structure)
  ((x              float)
   (y              float)
   (gravity        float)
   (initial-tilt   float)
   (initial-speed  float)
   (time           float)
   )
  )


(deftype traj3d-params (structure)
  ((gravity           float)
   (initial-tilt      float)
   (initial-speed     float)
   (time              float)
   (src               vector  :inline)
   (dest              vector  :inline)
   (diff              vector  :inline)
   (initial-velocity  vector  :inline)
   )
  )


(deftype cubic-curve (structure)
  ((mat  matrix  :inline)
   )
  (:methods
    (cubic-curve-method-9 () none)
    (cubic-curve-method-10 () none)
    (cubic-curve-method-11 () none)
    (cubic-curve-method-12 () none)
    (cubic-curve-method-13 () none)
    )
  )
