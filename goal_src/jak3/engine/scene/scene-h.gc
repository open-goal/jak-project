;;-*-Lisp-*-
(in-package goal)

;; name: scene-h.gc
;; name in dgo: scene-h
;; dgos: GAME

(defenum scene-flags
  :bitfield #t
  :type uint32
  )

;; DECOMP BEGINS

(deftype scene-actor (basic)
  ((name                 string)
   (level                symbol)
   (art-group            string)
   (prefix               string)
   (draw-frames          pair)
   (scissor-frames       pair)
   (shadow-frames        basic)
   (cloth-reset-frames   basic)
   (cloth-commands       basic)
   (camera               int16)
   (light-index          uint8)
   (shadow-mask          uint8)
   (shadow-values        uint32)
   (flags                uint32)
   (command-list         basic)
   (shadow-flags         int32)
   (shadow-volume-joint  basic)
   (draw-seg             uint64)
   (no-draw-seg          uint64)
   (last-frame           float)
   (process              uint64)
   )
  (:methods
    (scene-actor-method-9 () none)
    )
  )


(deftype scene (art-group)
  ((scene-flags       scene-flags)
   (mask-to-clear     process-mask)
   (entity            string)
   (art-group         string)
   (anim              string)
   (parts             int32)
   (command-list      pair)
   (cut-list          pair)
   (wait-max-time     time-frame)
   (wait-air-time     time-frame)
   (wait-ground-time  time-frame)
   (actor             (array scene-actor))
   (load-point        continue-point)
   (end-point         continue-point)
   (borrow            pair)
   (sfx-volume        float)
   (ambient-volume    float)
   (music-volume      float)
   (music-delay       float)
   (scene-task        uint16)
   (on-running        basic)
   (on-complete       basic)
   )
  (:methods
    (scene-method-16 () none)
    (scene-method-17 () none)
    )
  )


(deftype scene-player (process-drawable)
  ((scene-list            (array scene))
   (scene                 scene)
   (scene-index           int32)
   (anim                  spool-anim)
   (next-anim             spool-anim)
   (camera                handle)
   (main-entity           entity-actor)
   (wait                  symbol)
   (old-target-pos        transformq  :inline)
   (pre-cut-frame         basic)
   (preload-continue      string)
   (preload-sound         basic)
   (dma-max               uint32)
   (gui-id                sound-id)
   (aborted?              symbol)
   (scene-start-time      time-frame)
   (targ-speed            float)
   (cur-speed             float)
   (speed-change-time     time-frame)
   (speed-press-time      time-frame)
   (speed-change-speed    float)
   (subtitle-change-time  time-frame)
   (user-sound            sound-id    4)
   (last-frame            float)
   (end-point             basic)
   (blackout-end          basic)
   (new-trans-hook        basic)
   (cur-trans-hook        basic)
   (user-data             uint64)
   )
  (:methods
    (scene-player-method-20 () none)
    (scene-player-method-21 () none)
    (scene-player-method-22 () none)
    (scene-player-method-23 () none)
    (scene-player-method-24 () none)
    (scene-player-method-25 () none)
    )
  )


(define *scene-player* (the-as (pointer scene-player) #f))

(define *debug-menu-scene-play* (the-as object #f))
