;;-*-Lisp-*-
(in-package goal)

;; name: nav-graph-editor.gc
;; name in dgo: nav-graph-editor
;; dgos: GAME

(declare-type nav-graph-editor process)
(define-extern run-nav-graph-editor (function symbol (pointer process)))
(define-extern get-nav-graph-editor (function nav-graph-editor))
(define-extern exit-nav-graph-editor (function none))
(define-extern *nav-graph-editor* (pointer nav-graph-editor))

;; DECOMP BEGINS

;; this file is debug only
(declare-file (debug))

(deftype nav-graph-command (structure)
  ((com-type  uint32)
   (id        int32)
   (index     int32)
   (move-vec  vector  :inline)
   )
  )


(deftype nav-graph-command-array (inline-array-class)
  ((data  nav-graph-command  :inline :dynamic)
   )
  )


(set! (-> nav-graph-command-array heap-base) (the-as uint 32))

(deftype nav-graph-editor (process)
  ((nav-graph            mysql-nav-graph)
   (mode                 symbol)
   (command-id           int32)
   (max-command          int32)
   (selected-index       int32)
   (selected-dist        float)
   (selected-node-edge?  symbol)
   (closest-node         int32)
   (dist-closest-node    float)
   (closest-edge         int32)
   (dist-closest-edge    float)
   (mouse-pos            vector          :inline)
   (mouse-hit            vector          :inline)
   (mouse-hit-pick       vector          :inline)
   (mouse-normal         vector          :inline)
   (mouse-spos-hold      vector          :inline)
   (edge-src             int32)
   (edge-dst             int32)
   (edge-visibility      int32)
   (vehicle-edit-mode    symbol)
   (hover-edit-mode      symbol)
   (plane-height         float)
   (plane-height-hold    float)
   (minimap-make-mode    uint8)
   (clipping-dist        float)
   (default-node         mysql-nav-node  :inline)
   (default-edge         mysql-nav-edge  :inline)
   (command-array        nav-graph-command-array)
   )
  (:state-methods
    move-node
    move-plane
    create
    edit-edge
    create-edge
    adjust-plane
    adjust-it
    adjust-minimap
    adjust-node-angle
    adjust-node-radius
    adjust-edge-visibility
    adjust-edge-width
    adjust-edge-density
    draw-closest-minimap
    create-pov
    )
  (:methods
    (nav-graph-editor-method-29 () none)
    (nav-graph-editor-method-30 () none)
    (nav-graph-editor-method-31 () none)
    (nav-graph-editor-method-32 () none)
    (nav-graph-editor-method-33 () none)
    (nav-graph-editor-method-34 () none)
    (nav-graph-editor-method-35 () none)
    (nav-graph-editor-method-36 () none)
    (nav-graph-editor-method-37 () none)
    (nav-graph-editor-method-38 () none)
    (nav-graph-editor-method-39 () none)
    (nav-graph-editor-method-40 () none)
    (nav-graph-editor-method-41 () none)
    (nav-graph-editor-method-42 () none)
    (nav-graph-editor-method-43 () none)
    (nav-graph-editor-method-44 () none)
    (nav-graph-editor-method-45 () none)
    (nav-graph-editor-method-46 () none)
    (nav-graph-editor-method-47 () none)
    (nav-graph-editor-method-48 () none)
    (nav-graph-editor-method-49 () none)
    (nav-graph-editor-method-50 () none)
    (nav-graph-editor-method-51 () none)
    (nav-graph-editor-method-52 () none)
    (nav-graph-editor-method-53 () none)
    (nav-graph-editor-method-54 () none)
    (nav-graph-editor-method-55 () none)
    (nav-graph-editor-method-56 () none)
    (nav-graph-editor-method-57 () none)
    (nav-graph-editor-method-58 () none)
    (nav-graph-editor-method-59 () none)
    (nav-graph-editor-method-60 () none)
    (nav-graph-editor-method-61 () none)
    (nav-graph-editor-method-62 () none)
    (nav-graph-editor-method-63 () none)
    (nav-graph-editor-method-64 () none)
    (nav-graph-editor-method-65 () none)
    (nav-graph-editor-method-66 () none)
    (nav-graph-editor-method-67 () none)
    )
  )


(define *nav-graph-editor* (the-as (pointer nav-graph-editor) #f))

;; stub
(defun get-nav-graph-editor ()
  (the nav-graph-editor #f)
  )