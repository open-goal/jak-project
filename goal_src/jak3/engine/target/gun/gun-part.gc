;;-*-Lisp-*-
(in-package goal)

;; name: gun-part.gc
;; name in dgo: gun-part
;; dgos: GAME

(define-extern *yellow-shot-2-trail* light-trail-composition)
(define-extern *red-shot-3-trail* light-trail-composition)
(define-extern *last-player-pos* vector)
(define-extern *range-explo-dust-color* curve-color-fast)
(define-extern *range-explo-dust-alpha* curve2d-fast)
(define-extern *range-explo-dust-scale-x* curve2d-fast)
(define-extern *range-explo-dust-scale-y* curve2d-fast)
(define-extern *curve-explo-dust-alpha* curve2d-fast)
(define-extern *curve-explo-dust-scale-x* curve2d-fast)
(define-extern *curve-explo-dust-scale-y* curve2d-fast)
(define-extern *range-explo-color* curve-color-fast)
(define-extern *range-explo-alpha* curve2d-fast)
(define-extern *range-explo-scale-x* curve2d-fast)
(define-extern *range-explo-scale-y* curve2d-fast)
(define-extern *curve-explo-alpha* curve2d-fast)
(define-extern *curve-explo-scale-x* curve2d-fast)
(define-extern *curve-explo-scale-y* curve2d-fast)
(define-extern *curve-linear-up-red* curve2d-piecewise)
(define-extern *curve-yellow2-shot-alpha* curve2d-piecewise)
(define-extern *curve-yellow2-shot-color* curve-color-fast)
(define-extern *curve-linear-down-long* curve2d-fast)
(define-extern *gun-dark-3-nuke-fade-time-small* time-frame)
(define-extern *gun-dark-3-nuke-blur-time-small* time-frame)
(define-extern *gun-dark-3-nuke-blur-curve-small* curve2d-piecewise)
(define-extern *gun-dark-3-nuke-fade-curve-small* curve-color-piecewise)
(define-extern *gun-dark-3-nuke-blur-segs-small* uint)
(define-extern *gun-dark-3-mushroom-speed* float)
(define-extern *gun-dark-3-mushroom-size-time* time-frame)
(define-extern *gun-dark-3-nuke-mushroom-size-curve-x* curve2d-piecewise)
(define-extern *gun-dark-3-nuke-mushroom-size-curve-y* curve2d-piecewise)
(define-extern *gun-dark-3-nuke-fade-time* time-frame)
(define-extern *gun-dark-3-nuke-blur-time* time-frame)
(define-extern *gun-dark-3-nuke-blur-curve* curve2d-piecewise)
(define-extern *gun-dark-3-nuke-fade-curve* curve-color-piecewise)
(define-extern *gun-dark-3-nuke-blur-segs* uint)

;; DECOMP BEGINS

gun

(defpart 207
  :init-specs ((:texture (lasersmoke-00 level-default-sprite))
    (:birth-func 'birth-func-laser-pointer)
    (:num 1.0)
    (:scale-x (meters 0.075) (meters 0.05))
    (:scale-y (meters 40))
    (:r 255.0)
    (:g 0.0)
    (:b 0.0)
    (:a 16.0 8.0)
    (:fade-a -1.6)
    (:timer (seconds 0.05))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-14 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type int32
                       10
                       1
                       0
                       #x401a00
                       #x401b00
                       #x401c00
                       #x401d00
                       #x401e00
                       #x401f00
                       #x402000
                       #x402100
                       #x402200
                       #x402300
                       #x402400
                       #x402500
                       #x402600
                       #x402700
                       #x402800
                       #x402900
                       #x402a00
                       #x402b00
                       #x402c00
                       #x402d00
                       #x402e00
                       #x402f00
                       #x403000
                       #x403100
                       #x403200
                       #x403300
                       #x403400
                       #x403500
                       #x403600
                       #x403700
                       #x403800
                       #x403900
                       )
               )
    (:func 'sparticle-texture-animate)
    )
  )

(defun sparticle-track-gun-joint ((arg0 sparticle-system) (arg1 sparticle-cpuinfo) (arg2 vector))
  (-> arg1 key)
  (let ((v1-1 *target*)
        (a1-1 36)
        )
    (when v1-1
      (vector<-cspace! (new 'stack-no-clear 'vector) (-> v1-1 node-list data a1-1))
      (set! (-> arg2 x) (-> *target* gun fire-point x))
      (set! (-> arg2 y) (-> *target* gun fire-point y))
      (set! (-> arg2 z) (-> *target* gun fire-point z))
      )
    )
  0
  (none)
  )

(defpartgroup group-laser-glow
  :id 83
  :bounds (static-bspherem 0 0 0 1)
  :parts ((sp-item 208 :flags (sp6)) (sp-item 209 :flags (sp6)))
  )

(defpart 209
  :init-specs ((:texture (glow level-default-sprite))
    (:birth-func 'birth-func-set-alpha-from-userdata)
    (:num 1.0)
    (:scale-x (meters 0.7) (meters 0.1))
    (:rot-x (degrees 1.125))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 32.0 8.0)
    (:b :copy g)
    (:a 48.0 16.0)
    (:rotvel-z (degrees 0.3))
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 1.0)
    )
  )

(defpart 208
  :init-specs ((:texture (glow level-default-sprite))
    (:birth-func 'birth-func-set-alpha-from-userdata)
    (:num 1.0)
    (:scale-x (meters 0.25) (meters 0.1))
    (:rot-x (degrees 1.125))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 128.0)
    (:b :copy g)
    (:a 64.0 32.0)
    (:rotvel-z (degrees 0.3))
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-2 glow))
    (:userdata 1.0)
    )
  )

(defpart 210
  :init-specs ((:texture (glow level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 0.2) (meters 0.05))
    (:rot-x (degrees 1.125))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 128.0 128.0)
    (:b :copy g)
    (:a 100.0 28.0)
    (:rotvel-z (degrees 0.3))
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-14 glow))
    (:userdata 1.0)
    )
  )

(defpart 211
  :init-specs ((:texture (glow-hotdot level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 1.2) (meters 0.1))
    (:rot-x (degrees 1.125))
    (:scale-y :copy scale-x)
    (:r 128.0 128.0)
    (:g 0.0 32.0)
    (:b :copy g)
    (:a 32.0 32.0)
    (:rotvel-z (degrees 0.3))
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-14 glow))
    (:userdata 1.0)
    )
  )

(defpart 212
  :init-specs ((:texture (glow-hotdot level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 0.4) (meters 0.1))
    (:rot-x (degrees 1.125))
    (:scale-y :copy scale-x)
    (:r 128.0 64.0)
    (:g 0.0)
    (:b :copy g)
    (:a 96.0 32.0)
    (:rotvel-z (degrees 0.3))
    (:fade-g -1.0666667)
    (:fade-b -1.0666667)
    (:fade-a -8.533334)
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-14 glow))
    (:userdata 1.0)
    )
  )

(defpart 213
  :init-specs ((:texture (gun-enemy-muzzleflash level-default-sprite))
    (:birth-func 'birth-func-set-quat)
    (:num 1.0)
    (:scale-x (meters 8))
    (:scale-y (meters 8))
    (:r 128.0)
    (:g 128.0)
    (:b 0.0)
    (:a 128.0)
    (:fade-a -2.56)
    (:timer (seconds 0.167))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-14 left-multiply-quat))
    )
  )

(defpartgroup group-gun-red-shot-fired
  :id 84
  :duration (seconds 0.017)
  :linger-duration (seconds 0.5)
  :flags (sp0)
  :bounds (static-bspherem 0 0 0 8)
  :parts ((sp-item 214) (sp-item 215))
  )

(defpart 214
  :init-specs ((:texture (glow level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 2.5) (meters 0.5))
    (:rot-x (degrees 4.5))
    (:rot-z (degrees 0) (degrees 3600))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 0.0)
    (:a 96.0)
    (:scalevel-x (meters 0.053333335))
    (:scalevel-y :copy scalevel-x)
    (:fade-g -12.75)
    (:fade-a -2.4)
    (:timer (seconds 0.135))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 12288.0)
    )
  )

(defpart 215
  :init-specs ((:texture (glow level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 2.5) (meters 0.5))
    (:rot-x (degrees 4.5))
    (:rot-z (degrees 0) (degrees 3600))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 128.0)
    (:b 0.0)
    (:a 96.0)
    (:scalevel-x (meters 0.21333334))
    (:scalevel-y :copy scalevel-x)
    (:fade-g -12.8)
    (:fade-b -3.2)
    (:fade-a -4.8)
    (:timer (seconds 0.067))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 12288.0)
    )
  )

(defpartgroup group-gun-red-shot-reload
  :id 85
  :duration (seconds 0.017)
  :flags (sp0)
  :bounds (static-bspherem 0 0 0 8)
  :parts ((sp-item 216))
  )

(defpart 216
  :init-specs ((:texture (common-white common))
    (:num 2.0)
    (:scale-x (meters 0.2))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y (meters 0.08))
    (:r 0.0)
    (:g 0.0)
    (:b 0.0)
    (:a 128.0)
    (:vel-y (meters 0.053333335) (meters 0.10666667))
    (:rotvel-z (degrees -1440) (degrees 2880))
    (:fade-a -0.42666668)
    (:accel-y (meters -0.005) (meters -0.0016666667))
    (:friction 0.9)
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-2))
    (:conerot-x (degrees -60) (degrees 120))
    (:conerot-y (degrees 0) (degrees 360))
    )
  )

(define *red-shot-colors* (new 'static 'array rgba 36
                            (new 'static 'rgba :r #xfe :g #xfe :b #xfe :a #x80)
                            (new 'static 'rgba :r #xfe :g #xfe :b #xfe)
                            (new 'static 'rgba :r #xfe :g #xfe :b #xfe)
                            (new 'static 'rgba :r #xfe :g #xfe :b #xfe)
                            (new 'static 'rgba :r #xfe :g #x80 :a #x40)
                            (new 'static 'rgba :r #xfe :g #xfe :b #xfe :a #x80)
                            (new 'static 'rgba :r #xfe :g #xfe :b #xfe)
                            (new 'static 'rgba :r #xfe :g #xfe :b #xfe)
                            (new 'static 'rgba :r #xfe :g #x80 :a #x20)
                            (new 'static 'rgba :r #xfe :g #x80 :a #x40)
                            (new 'static 'rgba :r #xfe :g #xfe :b #xfe :a #x80)
                            (new 'static 'rgba :r #xfe :g #xfe :b #xfe)
                            (new 'static 'rgba :r #xfe :g #x40 :a #x10)
                            (new 'static 'rgba :r #xfe :g #x80 :a #x20)
                            (new 'static 'rgba :r #xfe :g #x80 :a #x40)
                            (new 'static 'rgba :r #xfe :g #xfe :b #xfe :a #x80)
                            (new 'static 'rgba :r #xfe :a #x8)
                            (new 'static 'rgba :r #xfe :g #x40 :a #x10)
                            (new 'static 'rgba :r #xfe :g #x80 :a #x20)
                            (new 'static 'rgba :r #xfe :g #x80 :a #x40)
                            (new 'static 'rgba :r #xfe :a #x4)
                            (new 'static 'rgba :r #xfe :a #x8)
                            (new 'static 'rgba :r #xfe :g #x40 :a #x10)
                            (new 'static 'rgba :r #xfe :g #x80 :a #x20)
                            (new 'static 'rgba :r #xfe)
                            (new 'static 'rgba :r #xfe :a #x4)
                            (new 'static 'rgba :r #xfe :a #x8)
                            (new 'static 'rgba :r #xfe :g #x40 :a #x10)
                            (new 'static 'rgba :r #xfe)
                            (new 'static 'rgba :r #xfe)
                            (new 'static 'rgba :r #xfe :a #x4)
                            (new 'static 'rgba :r #xfe :a #x8)
                            (new 'static 'rgba :r #xfe :g #xfe :b #xfe)
                            (new 'static 'rgba :r #xfe)
                            (new 'static 'rgba :r #xfe)
                            (new 'static 'rgba :r #xfe :a #x4)
                            )
        )

(defpart 217
  :init-specs ((:texture (gun-enemy-muzzleflash level-default-sprite))
    (:birth-func 'birth-func-set-quat)
    (:num 1.0)
    (:scale-x (meters 8))
    (:scale-y (meters 8))
    (:r 128.0)
    (:g 128.0)
    (:b 0.0)
    (:a 128.0)
    (:fade-a -2.56)
    (:timer (seconds 0.167))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-14 left-multiply-quat))
    )
  )

(defpartgroup group-gun-red3-shot-fired
  :id 86
  :duration (seconds 0.017)
  :linger-duration (seconds 0.5)
  :flags (sp0)
  :bounds (static-bspherem 0 0 0 8)
  :parts ((sp-item 214) (sp-item 215))
  )

(defpartgroup group-gun-red3-shot-glow
  :id 87
  :flags (sp0)
  :bounds (static-bspherem 0 0 0 640)
  :parts ((sp-item 218))
  )

(defpart 218
  :init-specs ((:texture (redpuff level-default-sprite))
    (:num 1.0 1.0)
    (:scale-x (meters 0.8))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 128.0)
    (:b 128.0)
    (:a 64.0)
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-3))
    )
  )

(defpartgroup group-gun-red3-shot-explode
  :id 88
  :duration (seconds 5)
  :flags (sp0)
  :bounds (static-bspherem 0 0 0 640)
  :parts ((sp-item 219 :flags (sp3) :period (seconds 30) :length (seconds 0.017))
    (sp-item 220 :flags (sp3) :period (seconds 30) :length (seconds 0.017))
    (sp-item 221 :period (seconds 30) :length (seconds 0.035))
    (sp-item 222 :flags (sp3) :period (seconds 30) :length (seconds 0.017))
    (sp-item 223 :period (seconds 30) :length (seconds 0.167))
    (sp-item 224 :period (seconds 30) :length (seconds 0.5))
    )
  )

(defpart 219
  :init-specs ((:texture (glow-soft level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 20))
    (:rot-x (degrees 225))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 128.0)
    (:b 40.0)
    (:a 64.0)
    (:fade-a -0.21333334)
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-14 glow))
    (:userdata 40960.0)
    )
  )

(defpart 220
  :init-specs ((:texture (dirtpuff01 level-default-sprite))
    (:num 30.0)
    (:scale-x (meters 3) (meters 2))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 160.0)
    (:b 40.0)
    (:a 128.0)
    (:vel-y (meters 0) (meters 0.06666667))
    (:scalevel-x (meters 0.016666668))
    (:scalevel-y :copy scalevel-x)
    (:fade-g -0.13333334)
    (:fade-b -0.05)
    (:fade-a -0.21333334 -0.21333334)
    (:friction 0.93)
    (:timer (seconds 2))
    (:flags (sp-cpuinfo-flag-3 sp-cpuinfo-flag-14))
    (:conerot-x (degrees 0) (degrees 360))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 225
  :init-specs ((:texture (explosion-edge level-default-sprite))
    (:num 5.0)
    (:scale-x (meters 3) (meters 2))
    (:rot-y (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 64.0 64.0)
    (:g :copy r)
    (:b :copy r)
    (:a 128.0)
    (:vel-y (meters 0.33333334) (meters 0.13333334))
    (:scalevel-x (meters 0.06666667))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.21333334 -0.21333334)
    (:friction 0.7)
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-3 sp-cpuinfo-flag-14))
    (:func 'sparticle-2d-spline-align-instant)
    (:conerot-x (degrees 0) (degrees 360))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 221
  :init-specs ((:texture (dirtpuff01 level-default-sprite))
    (:birth-func 'birth-func-curve)
    (:num 30.0)
    (:scale-x (meters 1))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 1.0)
    (:g 1.0)
    (:b 128.0)
    (:a 128.0)
    (:vel-y (meters 0.05))
    (:friction 0.97)
    (:timer (seconds 2))
    (:flags (sp-cpuinfo-flag-13 sp-cpuinfo-flag-14))
    (:userdata 0.0)
    (:func 'live-func-curve)
    (:conerot-x (degrees 0) (degrees 360))
    (:conerot-z (degrees 0) (degrees 360))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(if #t
    (set! *range-explo-dust-color* (new 'static 'curve-color-fast
                                     :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                     :ys (new 'static 'inline-array vector 4
                                       (new 'static 'vector :x 70.0 :y 70.0 :z 70.0 :w 128.0)
                                       (new 'static 'vector :x 40.0 :y 40.0 :z 40.0 :w 128.0)
                                       (new 'static 'vector :x 40.0 :y 40.0 :z 40.0 :w 128.0)
                                       (new 'static 'vector :x 40.0 :y 40.0 :z 40.0 :w 128.0)
                                       )
                                     :one-over-x-deltas (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
                                     )
          )
    )

(if #t
    (set! *range-explo-dust-alpha* (new 'static 'curve2d-fast
                                     :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                     :ys (new 'static 'vector :x 80.0 :y 64.0 :z 65.0 :w 66.0)
                                     :one-over-x-deltas (new 'static 'vector :x -16.0 :y 1.0 :z 1.0 :w 1.0)
                                     )
          )
    )

(if #t
    (set! *range-explo-dust-scale-x* (new 'static 'curve2d-fast
                                       :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                       :ys (new 'static 'vector :x 8.0 :y 10.0 :z 11.0 :w 12.0)
                                       :one-over-x-deltas (new 'static 'vector :x 2.0 :y 1.0 :z 1.0 :w 1.0)
                                       )
          )
    )

(if #t
    (set! *range-explo-dust-scale-y* (new 'static 'curve2d-fast
                                       :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                       :ys (new 'static 'vector :x 8.0 :y 10.0 :z 11.0 :w 12.0)
                                       :one-over-x-deltas (new 'static 'vector :x 2.0 :y 1.0 :z 1.0 :w 1.0)
                                       )
          )
    )

(if #t
    (set! *curve-explo-dust-alpha* (new 'static 'curve2d-fast
                                     :xs (new 'static 'vector :y -0.7 :z -1.0 :w -2.0)
                                     :ys (new 'static 'vector :y 1.0 :w 1.0)
                                     :one-over-x-deltas (new 'static 'vector :x 1.4285715 :y -3.3333333 :z 1.0 :w 1.0)
                                     )
          )
    )

(if #t
    (set! *curve-explo-dust-scale-x* (new 'static 'curve2d-fast
                                       :xs (new 'static 'vector :y -0.5 :z -1.0 :w -2.0)
                                       :ys (new 'static 'vector :x 0.2 :y 0.8 :z 1.2 :w 2.2)
                                       :one-over-x-deltas (new 'static 'vector :x 1.2 :y 0.8000001 :z 1.0 :w 1.0)
                                       )
          )
    )

(if #t
    (set! *curve-explo-dust-scale-y* (new 'static 'curve2d-fast
                                       :xs (new 'static 'vector :y -0.5 :z -1.0 :w -2.0)
                                       :ys (new 'static 'vector :x 0.2 :y 0.8 :z 1.2 :w 2.2)
                                       :one-over-x-deltas (new 'static 'vector :x 1.2 :y 0.8000001 :z 1.0 :w 1.0)
                                       )
          )
    )

(define *part-gun-red3-explosion-dust-in-curve-settings* (new 'static 'particle-curve-settings
                                                           :lifetime-base (seconds 1)
                                                           :lifetime-offset (seconds 2)
                                                           :flags (particle-curve-flags pcf0)
                                                           )
        )

(set! (-> *part-id-table* 221 init-specs 14 initial-valuef)
      (the-as float *part-gun-red3-explosion-dust-in-curve-settings*)
      )

(set! (-> *part-gun-red3-explosion-dust-in-curve-settings* color-start) *range-explo-dust-color*)

(set! (-> *part-gun-red3-explosion-dust-in-curve-settings* alpha-start) *range-explo-dust-alpha*)

(set! (-> *part-gun-red3-explosion-dust-in-curve-settings* scale-x-start) *range-explo-dust-scale-x*)

(set! (-> *part-gun-red3-explosion-dust-in-curve-settings* scale-y-start) *range-explo-dust-scale-y*)

(set! (-> *part-gun-red3-explosion-dust-in-curve-settings* r-scalar) #f)

(set! (-> *part-gun-red3-explosion-dust-in-curve-settings* g-scalar) #f)

(set! (-> *part-gun-red3-explosion-dust-in-curve-settings* b-scalar) #f)

(set! (-> *part-gun-red3-explosion-dust-in-curve-settings* a-scalar) *curve-explo-dust-alpha*)

(set! (-> *part-gun-red3-explosion-dust-in-curve-settings* scale-x-scalar) *curve-explo-dust-scale-x*)

(set! (-> *part-gun-red3-explosion-dust-in-curve-settings* scale-y-scalar) *curve-explo-dust-scale-y*)

(defpart 223
  :init-specs ((:texture (explosion-edge level-default-sprite))
    (:num 5.0)
    (:scale-x (meters 3) (meters 2))
    (:rot-y (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 80.0 20.0)
    (:b 30.0)
    (:a 128.0)
    (:vel-y (meters 0.33333334) (meters 0.13333334))
    (:scalevel-x (meters 0.033333335))
    (:scalevel-y :copy scalevel-x)
    (:fade-g -0.17777778)
    (:fade-b -0.06666667)
    (:fade-a -0.28444445 -0.28444445)
    (:friction 0.7)
    (:timer (seconds 1.5))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-3 sp-cpuinfo-flag-14))
    (:func 'sparticle-2d-spline-align-instant)
    (:conerot-x (degrees 0) (degrees 360))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 224
  :init-specs ((:texture (explo-texture level-default-sprite))
    (:birth-func 'birth-func-curve)
    (:num 8.0)
    (:x (meters -1) (meters 2))
    (:y (meters 0) (meters 2))
    (:scale-x (meters 1))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 128.0)
    (:b 128.0)
    (:a 128.0)
    (:vel-y (meters 0.06666667) (meters 0.033333335))
    (:friction 0.9)
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-14))
    (:userdata 0.0)
    (:func 'live-func-curve)
    (:conerot-x (degrees 20) (degrees 90))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(if #t
    (set! *range-explo-color* (new 'static 'curve-color-fast
                                :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                :ys (new 'static 'inline-array vector 4
                                  (new 'static 'vector :x 255.0 :y 255.0 :z 255.0 :w 128.0)
                                  (new 'static 'vector :x 255.0 :y 255.0 :z 255.0 :w 128.0)
                                  (new 'static 'vector :x 255.0 :y 255.0 :z 255.0 :w 128.0)
                                  (new 'static 'vector :x 255.0 :y 255.0 :z 255.0 :w 128.0)
                                  )
                                :one-over-x-deltas (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
                                )
          )
    )

(if #t
    (set! *range-explo-alpha* (new 'static 'curve2d-fast
                                :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                :ys (new 'static 'vector :x 128.0 :y 128.0 :z 129.0 :w 130.0)
                                :one-over-x-deltas (new 'static 'vector :y 1.0 :z 1.0 :w 1.0)
                                )
          )
    )

(if #t
    (set! *range-explo-scale-x* (new 'static 'curve2d-fast
                                  :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                  :ys (new 'static 'vector :x 3.0 :y 5.0 :z 6.0 :w 7.0)
                                  :one-over-x-deltas (new 'static 'vector :x 2.0 :y 1.0 :z 1.0 :w 1.0)
                                  )
          )
    )

(if #t
    (set! *range-explo-scale-y* (new 'static 'curve2d-fast
                                  :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                  :ys (new 'static 'vector :x 3.0 :y 5.0 :z 6.0 :w 7.0)
                                  :one-over-x-deltas (new 'static 'vector :x 2.0 :y 1.0 :z 1.0 :w 1.0)
                                  )
          )
    )

(if #t
    (set! *curve-explo-alpha* (new 'static 'curve2d-fast
                                :xs (new 'static 'vector :y -0.05 :z -0.7 :w -1.0)
                                :ys (new 'static 'vector :y 1.0 :z 0.8)
                                :one-over-x-deltas (new 'static 'vector :x 20.0 :y -0.3076923 :z -2.6666665 :w 1.0)
                                )
          )
    )

(if #t
    (set! *curve-explo-scale-x* (new 'static 'curve2d-fast
                                  :xs (new 'static 'vector :y -0.8 :z -1.0 :w -2.0)
                                  :ys (new 'static 'vector :y 1.0 :z 1.5 :w 2.5)
                                  :one-over-x-deltas (new 'static 'vector :x 1.25 :y 2.5000002 :z 1.0 :w 1.0)
                                  )
          )
    )

(if #t
    (set! *curve-explo-scale-y* (new 'static 'curve2d-fast
                                  :xs (new 'static 'vector :y -0.8 :z -1.0 :w -2.0)
                                  :ys (new 'static 'vector :y 1.0 :z 1.5 :w 2.5)
                                  :one-over-x-deltas (new 'static 'vector :x 1.25 :y 2.5000002 :z 1.0 :w 1.0)
                                  )
          )
    )

(define *part-gun-red3-explosion-texture-curve-settings* (new 'static 'particle-curve-settings
                                                           :lifetime-base (seconds 0.1)
                                                           :lifetime-offset (seconds 0.6)
                                                           :flags (particle-curve-flags pcf0)
                                                           )
        )

(set! (-> *part-id-table* 224 init-specs 16 initial-valuef)
      (the-as float *part-gun-red3-explosion-texture-curve-settings*)
      )

(set! (-> *part-gun-red3-explosion-texture-curve-settings* color-start) *range-explo-color*)

(set! (-> *part-gun-red3-explosion-texture-curve-settings* alpha-start) *range-explo-alpha*)

(set! (-> *part-gun-red3-explosion-texture-curve-settings* scale-x-start) *range-explo-scale-x*)

(set! (-> *part-gun-red3-explosion-texture-curve-settings* scale-y-start) *range-explo-scale-y*)

(set! (-> *part-gun-red3-explosion-texture-curve-settings* r-scalar) #f)

(set! (-> *part-gun-red3-explosion-texture-curve-settings* g-scalar) #f)

(set! (-> *part-gun-red3-explosion-texture-curve-settings* b-scalar) #f)

(set! (-> *part-gun-red3-explosion-texture-curve-settings* a-scalar) *curve-explo-alpha*)

(set! (-> *part-gun-red3-explosion-texture-curve-settings* scale-x-scalar) *curve-explo-scale-x*)

(set! (-> *part-gun-red3-explosion-texture-curve-settings* scale-y-scalar) *curve-explo-scale-y*)

(defpart 222
  :init-specs ((:texture (starflash level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 20))
    (:rot-x (degrees 2.25))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 80.0)
    (:b 40.0)
    (:a 128.0)
    (:omega (degrees 6767.9995))
    (:scalevel-x (meters -0.33333334))
    (:scalevel-y :copy scalevel-x)
    (:timer (seconds 0.135))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 4096.0)
    )
  )

(defpartgroup group-gun-red-3-scorched-earth
  :id 89
  :flags (sp0 sp1)
  :bounds (static-bspherem 0 0 0 640)
  :parts ((sp-item 226 :flags (is-3d sp3 sp7)))
  )

(defpart 226
  :init-specs ((:texture (dirtpuff01 level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 1) (meters 2))
    (:scale-y (meters 5) (meters 5))
    (:r 0.0)
    (:g 0.0)
    (:b 0.0)
    (:a 0.0)
    (:fade-a 0.85333335 0.85333335)
    (:timer (seconds 3))
    (:flags (left-multiply-quat))
    (:next-time (seconds 0.25))
    (:next-launcher 227)
    (:rotate-y (degrees 0))
    )
  )

(defpart 227
  :init-specs ((:fade-a 0.0) (:next-time (seconds 0.75)) (:next-launcher 228))
  )

(defpart 228
  :init-specs ((:fade-a -0.21333334))
  )

(defpart 229
  :init-specs ((:texture (shockwave level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 1))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 0.0)
    (:b 0.0)
    (:a 128.0)
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-3))
    )
  )

(defpart 230
  :init-specs ((:texture (laser-hit2-add level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 4))
    (:rot-x (degrees 2.25))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 128.0)
    (:b 128.0)
    (:a 255.0)
    (:omega (degrees 4511.25))
    (:scalevel-x (meters 1.3333334))
    (:scalevel-y :copy scalevel-x)
    (:fade-b -2.56)
    (:fade-a -5.1)
    (:timer (seconds 0.167))
    (:flags (sp-cpuinfo-flag-3 glow))
    (:userdata 4096.0)
    )
  )

(when (or (zero? *curve-linear-up-red*) (!= loading-level global))
  (set! *curve-linear-up-red* (new 'loading-level 'curve2d-piecewise))
  (curve2d-piecewise-method-10 *curve-linear-up-red* 2 'loading-level (the-as int #f))
  )

(set! (-> *curve-linear-up-red* pts data 0 first) 0.0)

(set! (-> *curve-linear-up-red* pts data 0 second) 0.3)

(set! (-> *curve-linear-up-red* pts data 1 first) 1.0)

(set! (-> *curve-linear-up-red* pts data 1 second) 1.0)

(if (or (zero? *red-shot-3-trail*) (!= loading-level global))
    (set! *red-shot-3-trail* (new 'loading-level 'light-trail-composition))
    )

(set! (-> *red-shot-3-trail* color-mode) (the-as uint 0))

(set! (-> *red-shot-3-trail* color-repeat-dist) 40960.0)

(set! (-> *red-shot-3-trail* alpha-1-mode) (the-as uint 0))

(set! (-> *red-shot-3-trail* alpha-2-mode) (the-as uint 1))

(set! (-> *red-shot-3-trail* base-alpha) 0.5)

(set! (-> *red-shot-3-trail* alpha-repeat-dist) 6144.0)

(set! (-> *red-shot-3-trail* width-mode) (the-as uint 2))

(set! (-> *red-shot-3-trail* base-width) 2048.0)

(set! (-> *red-shot-3-trail* width-repeat-dist) 20480.0)

(set! (-> *red-shot-3-trail* uv-mode) (the-as uint 0))

(set! (-> *red-shot-3-trail* uv-repeat-dist) 16384000.0)

(set! (-> *red-shot-3-trail* lie-mode) (the-as uint 0))

(set! (-> *red-shot-3-trail* max-age) (seconds 0.5))

(if #f
    (set! (-> *red-shot-3-trail* tex-id)
          (the-as uint (lookup-texture-id-by-name (the-as string #f) (the-as string #f)))
          )
    (set! (-> *red-shot-3-trail* tex-id) (the-as uint #x100300))
    )

(set! (-> *red-shot-3-trail* width-curve) (the-as curve2d-piecewise *curve-linear-up*))

(set! (-> *red-shot-3-trail* color-curve) (the-as curve-color-piecewise *trail-color-curve-red*))

(set! (-> *red-shot-3-trail* alpha-curve-1) (the-as curve2d-piecewise *curve-linear-down*))

(set! (-> *red-shot-3-trail* alpha-curve-2) *curve-linear-up-red*)

(set! (-> *red-shot-3-trail* zbuffer?) #f)

(set! (-> *red-shot-3-trail* lie-vector quad) (-> *up-vector* quad))

(set! (-> *red-shot-3-trail* use-tape-mode?) #f)

(set! (-> *red-shot-3-trail* blend-mode) (the-as uint 1))

(set! (-> *red-shot-3-trail* frame-stagger) (the-as uint 1))

(when (or (zero? *curve-yellow2-shot-alpha*) (!= loading-level global))
  (set! *curve-yellow2-shot-alpha* (new 'loading-level 'curve2d-piecewise))
  (curve2d-piecewise-method-10 *curve-yellow2-shot-alpha* 21 'loading-level (the-as int #f))
  )

(set! (-> *curve-yellow2-shot-alpha* pts data 0 first) 0.0)

(set! (-> *curve-yellow2-shot-alpha* pts data 0 second) 0.0)

(set! (-> *curve-yellow2-shot-alpha* pts data 1 first) 0.1)

(set! (-> *curve-yellow2-shot-alpha* pts data 1 second) 1.0)

(set! (-> *curve-yellow2-shot-alpha* pts data 2 first) 0.4)

(set! (-> *curve-yellow2-shot-alpha* pts data 2 second) 1.0)

(set! (-> *curve-yellow2-shot-alpha* pts data 3 first) 0.401)

(set! (-> *curve-yellow2-shot-alpha* pts data 3 second) 0.0)

(set! (-> *curve-yellow2-shot-alpha* pts data 4 first) 0.45)

(set! (-> *curve-yellow2-shot-alpha* pts data 4 second) 0.0)

(set! (-> *curve-yellow2-shot-alpha* pts data 5 first) 0.451)

(set! (-> *curve-yellow2-shot-alpha* pts data 5 second) 1.0)

(set! (-> *curve-yellow2-shot-alpha* pts data 6 first) 0.5)

(set! (-> *curve-yellow2-shot-alpha* pts data 6 second) 1.0)

(set! (-> *curve-yellow2-shot-alpha* pts data 7 first) 0.501)

(set! (-> *curve-yellow2-shot-alpha* pts data 7 second) 0.0)

(set! (-> *curve-yellow2-shot-alpha* pts data 8 first) 0.55)

(set! (-> *curve-yellow2-shot-alpha* pts data 8 second) 0.0)

(set! (-> *curve-yellow2-shot-alpha* pts data 9 first) 0.551)

(set! (-> *curve-yellow2-shot-alpha* pts data 9 second) 1.0)

(set! (-> *curve-yellow2-shot-alpha* pts data 10 first) 0.6)

(set! (-> *curve-yellow2-shot-alpha* pts data 10 second) 1.0)

(set! (-> *curve-yellow2-shot-alpha* pts data 11 first) 0.601)

(set! (-> *curve-yellow2-shot-alpha* pts data 11 second) 0.0)

(set! (-> *curve-yellow2-shot-alpha* pts data 12 first) 0.65)

(set! (-> *curve-yellow2-shot-alpha* pts data 12 second) 0.0)

(set! (-> *curve-yellow2-shot-alpha* pts data 13 first) 0.651)

(set! (-> *curve-yellow2-shot-alpha* pts data 13 second) 1.0)

(set! (-> *curve-yellow2-shot-alpha* pts data 14 first) 0.7)

(set! (-> *curve-yellow2-shot-alpha* pts data 14 second) 1.0)

(set! (-> *curve-yellow2-shot-alpha* pts data 15 first) 0.701)

(set! (-> *curve-yellow2-shot-alpha* pts data 15 second) 0.0)

(set! (-> *curve-yellow2-shot-alpha* pts data 16 first) 0.75)

(set! (-> *curve-yellow2-shot-alpha* pts data 16 second) 0.0)

(set! (-> *curve-yellow2-shot-alpha* pts data 17 first) 0.751)

(set! (-> *curve-yellow2-shot-alpha* pts data 17 second) 1.0)

(set! (-> *curve-yellow2-shot-alpha* pts data 18 first) 0.8)

(set! (-> *curve-yellow2-shot-alpha* pts data 18 second) 1.0)

(set! (-> *curve-yellow2-shot-alpha* pts data 19 first) 0.801)

(set! (-> *curve-yellow2-shot-alpha* pts data 19 second) 0.0)

(set! (-> *curve-yellow2-shot-alpha* pts data 20 first) 1.0)

(set! (-> *curve-yellow2-shot-alpha* pts data 20 second) 0.0)

(if #t
    (set! *curve-yellow2-shot-color* (new 'static 'curve-color-fast
                                       :xs (new 'static 'vector :y -0.2 :z -1.0 :w -2.0)
                                       :ys (new 'static 'inline-array vector 4
                                         (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 128.0)
                                         (new 'static 'vector :x 1.0 :y 0.8 :z 0.8 :w 128.0)
                                         (new 'static 'vector :x 1.0 :y 0.5 :z 0.5 :w 128.0)
                                         (new 'static 'vector :x 1.0 :y 0.5 :z 0.5 :w 128.0)
                                         )
                                       :one-over-x-deltas (new 'static 'vector :x 5.0 :y 1.25 :z 1.0 :w 1.0)
                                       )
          )
    )

(if #t
    (set! *curve-linear-down-long* (new 'static 'curve2d-fast
                                     :xs (new 'static 'vector :y -0.9 :z -1.0 :w -2.0)
                                     :ys (new 'static 'vector :x 1.0 :w 1.0)
                                     :one-over-x-deltas (new 'static 'vector :x -1.1111112 :z 1.0 :w 1.0)
                                     )
          )
    )

(if (or (zero? *yellow-shot-2-trail*) (!= loading-level global))
    (set! *yellow-shot-2-trail* (new 'loading-level 'light-trail-composition))
    )

(set! (-> *yellow-shot-2-trail* color-mode) (the-as uint 0))

(set! (-> *yellow-shot-2-trail* color-repeat-dist) 286720.0)

(set! (-> *yellow-shot-2-trail* alpha-1-mode) (the-as uint 0))

(set! (-> *yellow-shot-2-trail* alpha-2-mode) (the-as uint 1))

(set! (-> *yellow-shot-2-trail* base-alpha) 1.0)

(set! (-> *yellow-shot-2-trail* alpha-repeat-dist) 286720.0)

(set! (-> *yellow-shot-2-trail* width-mode) (the-as uint 2))

(set! (-> *yellow-shot-2-trail* base-width) 2867.2)

(set! (-> *yellow-shot-2-trail* width-repeat-dist) 163840.0)

(set! (-> *yellow-shot-2-trail* uv-mode) (the-as uint 0))

(set! (-> *yellow-shot-2-trail* uv-repeat-dist) 20480.0)

(set! (-> *yellow-shot-2-trail* lie-mode) (the-as uint 0))

(set! (-> *yellow-shot-2-trail* max-age) (seconds 0.5))

(if #f
    (set! (-> *yellow-shot-2-trail* tex-id)
          (the-as uint (lookup-texture-id-by-name (the-as string #f) (the-as string #f)))
          )
    (set! (-> *yellow-shot-2-trail* tex-id) (the-as uint #x501e00))
    )

(set! (-> *yellow-shot-2-trail* width-curve) (the-as curve2d-piecewise *curve-linear-up*))

(set! (-> *yellow-shot-2-trail* color-curve) (the-as curve-color-piecewise *curve-yellow2-shot-color*))

(set! (-> *yellow-shot-2-trail* alpha-curve-1) (the-as curve2d-piecewise *curve-linear-down-long*))

(set! (-> *yellow-shot-2-trail* alpha-curve-2) *curve-yellow2-shot-alpha*)

(set! (-> *yellow-shot-2-trail* zbuffer?) #f)

(set! (-> *yellow-shot-2-trail* lie-vector quad) (-> *up-vector* quad))

(set! (-> *yellow-shot-2-trail* use-tape-mode?) #f)

(set! (-> *yellow-shot-2-trail* blend-mode) (the-as uint 1))

(set! (-> *yellow-shot-2-trail* frame-stagger) (the-as uint 1))

(defpart 231
  :init-specs ((:texture (gun-blue-beam level-default-sprite))
    (:birth-func 'birth-func-setup-beam)
    (:num 1.0)
    (:scale-x (meters 0.3) (meters 0.1))
    (:scale-y (meters 100) (meters 20))
    (:r 0.0)
    (:g 255.0)
    (:b 255.0)
    (:a 32.0)
    (:fade-a 3.2)
    (:timer (seconds 2.167))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-2 sp-cpuinfo-flag-14 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type int32 30 0 0 #x401000 #x401200))
    (:func 'sparticle-texture-animate)
    (:next-time (seconds 0.05))
    (:next-launcher 232)
    )
  )

(defpart 232
  :init-specs ((:r 64.0)
    (:g 128.0)
    (:b 255.0)
    (:a 48.0)
    (:scalevel-x (meters 0.006666667))
    (:scalevel-y (meters -0.016666668))
    (:fade-r 1.2)
    (:fade-g 0.8)
    (:fade-a -0.10666667 -0.2)
    (:accel-y (meters 0.000033333334))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-2 sp-cpuinfo-flag-13 sp-cpuinfo-flag-14 left-multiply-quat))
    (:next-time (seconds 0.5))
    (:next-launcher 233)
    )
  )

(defpart 233
  :init-specs ((:fade-r 0.0) (:fade-g 0.0) (:fade-b 0.0))
  )

(defpart 234
  :init-specs ((:texture (gun-enemy-muzzleflash level-default-sprite))
    (:birth-func 'birth-func-set-quat)
    (:num 1.0)
    (:scale-x (meters 1) (meters 1.5))
    (:scale-y (meters 10) (meters 0.6))
    (:r 0.0)
    (:g 128.0)
    (:b 255.0)
    (:a 128.0)
    (:scalevel-x (meters 0.08))
    (:fade-r 3.2)
    (:fade-g 3.2)
    (:fade-a -6.4)
    (:timer (seconds 0.067))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-14 left-multiply-quat))
    )
  )

(defpart 235
  :init-specs ((:texture (bigpuff level-default-sprite))
    (:num 5.0)
    (:y (meters 0.25))
    (:scale-x (meters 0.2) (meters 0.1))
    (:rot-z (degrees 0) (degrees 3600))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 128.0)
    (:b 128.0 128.0)
    (:a 32.0 16.0)
    (:omega (degrees 0))
    (:vel-y (meters 0.053333335) (meters 0.026666667))
    (:scalevel-x (meters 0.01) (meters 0.006666667))
    (:rotvel-z (degrees -0.4) (degrees 0.8))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.4 -0.4)
    (:friction 0.85 0.04)
    (:timer (seconds 0.535))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-13))
    (:conerot-x (degrees -45) (degrees 10))
    (:conerot-y (degrees 85) (degrees 10))
    (:rotate-y (degrees 0))
    (:conerot-radius (meters 0) (meters 0.4))
    )
  )

(defpart 236
  :init-specs ((:texture (shell-casing-01 level-default-sprite))
    (:birth-func 'birth-func-texture-group)
    (:num 1.0)
    (:y (meters 0.25))
    (:scale-x (meters 0.35))
    (:rot-z (degrees 260) (degrees 20))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 128.0)
    (:b 255.0)
    (:a 128.0)
    (:omega (degrees 0))
    (:vel-y (meters 0.053333335) (meters 0.026666667))
    (:rotvel-z (degrees -4.8) (degrees 2.4))
    (:accel-y (meters -0.008333334) (meters -0.0016666667))
    (:friction 0.9 0.02)
    (:timer (seconds 1.2))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-13))
    (:userdata :data (new 'static 'boxed-array :type int32 30 0 0 #x408700 #x408700 #x408700 #x408800))
    (:func 'check-shell-level1)
    (:next-time (seconds 0.017) (seconds 0.53))
    (:next-launcher 237)
    (:conerot-x (degrees -40) (degrees 20))
    (:conerot-y (degrees 80) (degrees 20))
    (:rotate-y (degrees 0))
    )
  )

(defpart 237
  :init-specs ((:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 255.0)
    (:next-time (seconds 0.017) (seconds 0.015))
    (:next-launcher 238)
    )
  )

(defpart 238
  :init-specs ((:r 128.0) (:g 128.0) (:b 255.0) (:a 128.0))
  )

(defpart 239
  :init-specs ((:texture (shell-casing-01 level-default-sprite))
    (:birth-func 'birth-func-texture-group)
    (:num 1.0)
    (:sound (static-sound-spec "blue-gun-shell" :group 0))
    (:scale-x (meters 0.35))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 128.0)
    (:b 255.0)
    (:a 128.0)
    (:omega (degrees 0))
    (:vel-y (meters 0.026666667) (meters 0.016666668))
    (:rotvel-z (degrees -2.4) (degrees 4.8))
    (:accel-y (meters -0.0026666666) (meters -0.00083333335))
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-13))
    (:userdata :data (new 'static 'boxed-array :type int32 30 0 0 #x408700 #x408800 #x408900))
    (:func 'check-shell-level2)
    (:next-time (seconds 0.017) (seconds 0.53))
    (:next-launcher 237)
    (:conerot-x (degrees 0) (degrees 45))
    (:conerot-y (degrees 0) (degrees 360))
    )
  )

(defpart 240
  :init-specs ((:texture (shell-casing-01 level-default-sprite))
    (:birth-func 'birth-func-texture-group)
    (:num 1.0)
    (:sound (static-sound-spec "blue-gun-shell" :group 0))
    (:scale-x (meters 0.35))
    (:rot-z (degrees 30) (degrees 120))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 128.0)
    (:b 255.0)
    (:a 128.0)
    (:vel-x (meters 0) (meters 0.0033333334))
    (:vel-y (meters 0.016666668))
    (:vel-z (meters 0) (meters 0.0033333334))
    (:rotvel-z (degrees -0.3) (degrees 0.6))
    (:accel-y (meters -0.0016666667))
    (:friction 0.9)
    (:timer (seconds 40))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-13))
    (:userdata :data (new 'static 'boxed-array :type int32 30 0 0 #x408800 #x408800 #x408900))
    (:next-time (seconds 0.25))
    (:next-launcher 241)
    (:conerot-x (degrees 30) (degrees 30))
    (:conerot-y (degrees 0) (degrees 360))
    )
  )

(defpart 241
  :init-specs ((:sound (static-sound-spec "blue-gun-shell" :group 0))
   (:vel-x (meters 0))
   (:vel-y (meters 0))
   (:vel-z (meters 0))
   (:rotvel-z (degrees 0))
   (:accel-y (meters 0))
   (:next-time (seconds 2) (seconds 0.997))
   (:next-launcher 242)
   )
  )

(defpart 242
  :init-specs ((:sound (static-sound-spec "blue-gun-shell" :group 0)) (:fade-a -0.512))
  )

(defun check-shell-level1 ((arg0 sparticle-system) (arg1 sparticle-cpuinfo) (arg2 vector))
  (when (and (< (-> arg2 y) (-> arg1 omega)) (< (-> arg1 vel-sxvel y) 0.0))
    (let ((gp-0 (new 'stack-no-clear 'vector)))
      (sp-kill-particle arg0 arg1)
      (set-vector! gp-0 (-> arg2 x) (-> arg1 omega) (-> arg2 z) 1.0)
      (set! (-> *part-id-table* 239 init-specs 11 initial-valuef) (-> gp-0 y))
      (launch-particles (-> *part-id-table* 239) gp-0)
      (launch-particles (-> *part-id-table* 243) gp-0)
      )
    )
  0
  (none)
  )

(defun check-shell-level2 ((arg0 sparticle-system) (arg1 sparticle-cpuinfo) (arg2 vector))
  (when (and (< (-> arg2 y) (-> arg1 omega)) (< (-> arg1 vel-sxvel y) 0.0))
    (let ((gp-0 (new 'stack-no-clear 'vector)))
      (sp-kill-particle arg0 arg1)
      (set-vector! gp-0 (-> arg2 x) (-> arg1 omega) (-> arg2 z) 1.0)
      (launch-particles (-> *part-id-table* 240) gp-0)
      (launch-particles (-> *part-id-table* 243) gp-0)
      )
    )
  0
  (none)
  )

(defpart 243
  :init-specs ((:texture (motion-blur-part level-default-sprite))
    (:num 0.0 1 2.0)
    (:scale-x (meters 2.5))
    (:rot-x 4)
    (:scale-y (meters 0.03) (meters 0.005))
    (:r 255.0)
    (:g 128.0 128.0)
    (:b 0.0 128.0)
    (:a 128.0)
    (:omega (degrees 0.01125) (degrees 0.0045))
    (:vel-y (meters 0.033333335) (meters 0.033333335))
    (:fade-g -2.55 -2.55)
    (:fade-b -8.0)
    (:fade-a -0.64 -0.64)
    (:accel-y (meters -0.00033333333) (meters -0.00033333333))
    (:friction 0.8 0.02)
    (:timer (seconds 0.335))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:func 'sparticle-motion-blur)
    (:conerot-x (degrees 60) (degrees 20))
    (:conerot-y (degrees 0) (degrees 3600))
    )
  )

(defpartgroup group-gun-blue-shot-hit
  :id 90
  :duration (seconds 0.017)
  :linger-duration (seconds 0.5)
  :flags (sp0)
  :bounds (static-bspherem 0 0 0 8)
  :parts ((sp-item 244 :flags (sp6) :period (seconds 2) :length (seconds 0.017))
    (sp-item 245 :fade-after (meters 60) :falloff-to (meters 60) :period (seconds 2) :length (seconds 0.017))
    (sp-item 246 :fade-after (meters 120) :falloff-to (meters 140) :period (seconds 2) :length (seconds 0.017))
    )
  )

(defpart 246
  :init-specs ((:texture (motion-blur-part level-default-sprite))
    (:num 8.0 16.0)
    (:scale-x (meters 1))
    (:rot-x 4)
    (:scale-y (meters 0.02) (meters 0.02))
    (:r 0.0)
    (:g 64.0 128.0)
    (:b 255.0)
    (:a 64.0 64.0)
    (:omega (degrees 0.0225))
    (:vel-z (meters 0.06666667) (meters 0.2))
    (:fade-r -0.42666668)
    (:fade-g -0.42666668)
    (:accel-y (meters -0.0013333333) (meters -0.001))
    (:friction 0.875)
    (:timer (seconds 0.167) (seconds 0.497))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-13))
    (:func 'sparticle-motion-blur)
    (:next-time (seconds 0.017) (seconds 0.98))
    (:next-launcher 247)
    (:conerot-x (degrees 80) (degrees 20))
    (:conerot-y (degrees 80) (degrees 20))
    (:conerot-z (degrees 80) (degrees 20))
    (:conerot-radius (meters 0) (meters 0.2))
    )
  )

(defpart 247
  :init-specs ((:fade-r 0.0) (:fade-g 0.0) (:fade-b 0.0) (:fade-a -0.42666668))
  )

(defpart 245
  :init-specs ((:texture (bigpuff level-default-sprite))
    (:num 8.0 16.0)
    (:scale-x (meters 0.5) (meters 0.5))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 64.0 128.0)
    (:g :copy r)
    (:b :copy g)
    (:a 32.0 32.0)
    (:vel-z (meters 0) (meters 0.016666668))
    (:scalevel-x (meters 0.0013333333) (meters 0.0033333334))
    (:rotvel-z (degrees -0.3) (degrees 0.6))
    (:scalevel-y :copy scalevel-x)
    (:fade-b 0.21333334)
    (:fade-a -0.32)
    (:friction 0.95)
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-13))
    (:conerot-x (degrees 90) (degrees 20))
    (:conerot-y (degrees 90) (degrees 20))
    (:conerot-z (degrees 90) (degrees 20))
    (:conerot-radius (meters 0) (meters 0.2))
    )
  )

(defpart 244
  :init-specs ((:texture (glow level-default-sprite))
    (:num 1.0)
    (:sound (static-sound-spec "blue-gun-rico" :group 0))
    (:scale-x (meters 3) (meters 1))
    (:rot-x (degrees 2.25))
    (:rot-z (degrees 0) (degrees 3600))
    (:scale-y (meters 2) (meters 2))
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 96.0)
    (:rotvel-z (degrees 0.3))
    (:fade-r -5.1)
    (:fade-g -3.92)
    (:fade-b 0.0)
    (:fade-a -2.56)
    (:timer (seconds 0.167))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:next-time (seconds 0.035))
    (:next-launcher 248)
    )
  )

(defpart 248
  :init-specs ((:scale-x (meters 1)) (:scale-y :copy scale-x) (:scalevel-x (meters 0.06)) (:scalevel-y :copy scalevel-x))
  )

(defpartgroup group-gun-blue-shot-die
  :id 91
  :duration (seconds 0.017)
  :flags (sp0)
  :bounds (static-bspherem 0 0 0 8)
  :parts ((sp-item 249))
  )

(defpart 250
  :init-specs ((:texture (gun-enemy-muzzleflash level-default-sprite))
    (:birth-func 'birth-func-set-quat)
    (:num 1.0)
    (:scale-x (meters 6))
    (:scale-y (meters 8))
    (:r 0.0)
    (:g 0.0)
    (:b 255.0)
    (:a 128.0)
    (:fade-a -2.56)
    (:timer (seconds 0.167))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-14 left-multiply-quat))
    )
  )

(defpartgroup group-gun-dark-shot-fired
  :id 92
  :duration (seconds 0.017)
  :linger-duration (seconds 0.017)
  :flags (sp0)
  :bounds (static-bspherem 0 0 0 8)
  :parts ((sp-item 251 :flags (sp3 sp6)) (sp-item 252))
  )

(defpart 251
  :init-specs ((:texture (glow level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 3.5) (meters 0.5))
    (:rot-x (degrees 4.5))
    (:rot-z (degrees 0) (degrees 3600))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 255.0)
    (:b 255.0)
    (:a 128.0)
    (:scalevel-x (meters 0))
    (:scalevel-y :copy scalevel-x)
    (:fade-r -6.4)
    (:fade-g -6.375)
    (:fade-a -3.2)
    (:timer (seconds 0.135))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 4096.0)
    )
  )

(defpart 252
  :init-specs ((:texture (motion-blur-part level-default-sprite))
    (:num 32.0)
    (:scale-x (meters 2.5))
    (:rot-x 4)
    (:scale-y (meters 0.04) (meters 0.03))
    (:r 0.0)
    (:g 0.0 128.0)
    (:b 255.0)
    (:a 128.0)
    (:omega (degrees 0.01125) (degrees 0.01125))
    (:vel-y (meters 0.1) (meters 0.3))
    (:fade-g -2.55 -2.55)
    (:fade-a -0.256 -0.256)
    (:accel-y (meters -0.0033333334))
    (:friction 0.8 0.02)
    (:timer (seconds 0.335) (seconds 0.497))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:func 'sparticle-motion-blur)
    (:conerot-x (degrees 0) (degrees 3600))
    (:conerot-y (degrees 0) (degrees 3600))
    (:conerot-z (degrees 0) (degrees 3600))
    )
  )

(defpartgroup group-jak-peacemaker-shot-hit
  :id 93
  :duration (seconds 0.067)
  :flags (sp0)
  :bounds (static-bspherem 0 0 0 8)
  :parts ((sp-item 253 :flags (sp3 sp6))
    (sp-item 254 :flags (sp3 sp6))
    (sp-item 255 :fade-after (meters 160) :falloff-to (meters 160))
    (sp-item 256)
    )
  )

(defpart 255
  :init-specs ((:texture (motion-blur-part level-default-sprite))
    (:num 1.0 1.0)
    (:scale-x (meters 2.5))
    (:rot-x 4)
    (:scale-y (meters 0.08) (meters 0.04))
    (:r 0.0)
    (:g 0.0 128.0)
    (:b 255.0)
    (:a 128.0)
    (:omega (degrees 0.005625) (degrees 0.005625))
    (:vel-y (meters 0.3) (meters 0.3))
    (:fade-g -0.85 -0.85)
    (:fade-a -0.48 -0.10666667)
    (:accel-y (meters -0.0033333334))
    (:friction 0.8 0.02)
    (:timer (seconds 1) (seconds 0.997))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:func 'sparticle-motion-blur)
    (:conerot-x (degrees 0) (degrees 3600))
    (:conerot-y (degrees 0) (degrees 3600))
    (:conerot-z (degrees 0) (degrees 3600))
    )
  )

(defpart 256
  :init-specs ((:texture (glow-soft level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 10) (meters 2))
    (:rot-x (degrees 22.5))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 0.0)
    (:g 0.0)
    (:b 128.0)
    (:a 16.0)
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 12288.0)
    )
  )

(defpart 257
  :init-specs ((:texture (laser-hit2-add level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 4) (meters 2))
    (:rot-x (degrees 22.5))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 0.0)
    (:g 0.0 64.0)
    (:b 255.0)
    (:a 32.0 32.0)
    (:timer (seconds 0.035))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 12288.0)
    )
  )

(defpart 254
  :init-specs ((:texture (glow-soft level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 32))
    (:rot-x (degrees 22.5))
    (:rot-z (degrees 0) (degrees 3600))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 64.0)
    (:scalevel-x (meters -1.6))
    (:scalevel-y :copy scalevel-x)
    (:timer (seconds 0.085))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 12288.0)
    )
  )

(defpart 253
  :init-specs ((:texture (shockwave level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 2))
    (:rot-x (degrees 22.5))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 32.0)
    (:scalevel-x (meters 0.21333334) (meters 0.21333334))
    (:scalevel-y :copy scalevel-x)
    (:fade-r -12.75)
    (:fade-g -3.1875)
    (:fade-a -0.4)
    (:timer (seconds 0.267))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 12288.0)
    )
  )

(defun sparticle-dark-shot-lightning ((arg0 sparticle-system) (arg1 sparticle-cpuinfo) (arg2 vector))
  (let ((v1-3 (-> arg1 key proc root trans)))
    (set! (-> arg2 x) (-> v1-3 x))
    (set! (-> arg2 y) (-> v1-3 y))
    (set! (-> arg2 z) (-> v1-3 z))
    )
  (sparticle-texture-animate arg0 arg1 arg2)
  (none)
  )

(defpartgroup group-gun-dark-shot-trail
  :id 94
  :bounds (static-bspherem 0 0 0 1)
  :parts ((sp-item 258) (sp-item 259 :flags (sp6)) (sp-item 260 :flags (sp6)) (sp-item 261 :flags (sp6)))
  )

(defpart 260
  :init-specs ((:texture (glow-soft level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 2.25) (meters 0.1))
    (:rot-x (degrees 2.25))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 32.0)
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 2048.0)
    )
  )

(defpart 261
  :init-specs ((:texture (glow-soft level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 8) (meters 0.1))
    (:rot-x (degrees 2.25))
    (:scale-y :copy scale-x)
    (:r 0.0)
    (:g 128.0)
    (:b 255.0)
    (:a 16.0)
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 2048.0)
    )
  )

(defpart 259
  :init-specs ((:texture (shockwave level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 2))
    (:scale-y :copy scale-x)
    (:r 0.0 32.0)
    (:g :copy r)
    (:b 128.0 128.0)
    (:a 128.0 64.0)
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-3 sp-cpuinfo-flag-14))
    )
  )

(defpart 258
  :init-specs ((:texture (lightning-anim-01 level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 0.9))
    (:rot-x 4)
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y (meters 0))
    (:r 0.0)
    (:g 0.0)
    (:b 255.0)
    (:a 0.0)
    (:scalevel-y (meters 0.04))
    (:fade-r 6.4)
    (:fade-g 6.4)
    (:fade-a 6.4)
    (:timer (seconds 0.667))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-14))
    (:userdata :data (new 'static 'boxed-array :type int32 5 1 0 #x405700 #x405800 #x405900))
    (:func 'sparticle-dark-shot-lightning)
    (:next-time (seconds 0.05) (seconds 0.015))
    (:next-launcher 262)
    )
  )

(defpart 262
  :init-specs ((:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 255.0)
    (:scalevel-x (meters 0))
    (:scalevel-y (meters 0))
    (:fade-r -8.533334)
    (:fade-g -8.533334)
    (:fade-a -8.533334)
    (:next-time (seconds 0.05) (seconds 0.015))
    (:next-launcher 263)
    )
  )

(defpart 263
  :init-specs ((:scalevel-x (meters -0.00093750004) (meters -0.00093750004))
    (:scalevel-y (meters -0.00078125) (meters -0.00078125))
    (:fade-r -0.8)
    (:fade-g -0.8)
    (:fade-a -0.8)
    )
  )

(defpart 264
  :init-specs ((:texture (gun-yellow-beam level-default-sprite))
    (:birth-func 'birth-func-set-quat)
    (:num 1.0)
    (:scale-x (meters 0.5))
    (:scale-y (meters 16))
    (:r 128.0)
    (:g 128.0)
    (:b 128.0)
    (:a 32.0 64.0)
    (:scalevel-x (meters -0.005))
    (:fade-a -3.2)
    (:timer (seconds 0.1))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-14 left-multiply-quat))
    )
  )

(defpart 265
  :init-specs ((:texture (glow-soft level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 2) (meters 0.2))
    (:rot-x (degrees 4.5))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 0.0)
    (:a 6.0)
    (:omega (degrees 6763.5))
    (:fade-a -0.3)
    (:timer (seconds 0.067))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-14 glow))
    )
  )

(defpart 266
  :init-specs ((:texture (explosion-nebula level-default-sprite))
    (:num 0.5 0.5)
    (:scale-x (meters 0.5) (meters 0.5))
    (:rot-z (degrees 0) (degrees 3600))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 128.0)
    (:a 32.0 32.0)
    (:scalevel-x (meters 0.013333334) (meters 0.006666667))
    (:scalevel-y :copy scalevel-x)
    (:fade-g -2.55 -1.28)
    (:fade-b -1.28)
    (:fade-a -0.64)
    (:timer (seconds 0.335))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-14))
    )
  )

(defpart 267
  :init-specs ((:texture (radial-gradient-yellow level-default-sprite))
    (:num 4.0 8.0)
    (:z (meters 0) (meters -4))
    (:scale-x (meters 0.25) (meters 0.1))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 128.0)
    (:b 128.0)
    (:a 64.0)
    (:scalevel-x (meters -0.0020833334))
    (:scalevel-y :copy scalevel-x)
    (:fade-r 1.6)
    (:fade-g -1.6)
    (:fade-b -3.2 -6.4)
    (:accel-y (meters -0.000033333334) (meters -0.00033333333))
    (:timer (seconds 0.535))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:rotate-y (degrees 0))
    )
  )

(defun sparticle-track-gun-joint-3d ((arg0 sparticle-system) (arg1 sparticle-cpuinfo) (arg2 vector))
  (-> arg1 key)
  (let ((v1-1 *target*)
        (a1-1 36)
        )
    (vector<-cspace! (new 'stack-no-clear 'vector) (-> v1-1 node-list data a1-1))
    )
  (set! (-> arg2 x) (-> *target* gun fire-point x))
  (set! (-> arg2 y) (-> *target* gun fire-point y))
  (set! (-> arg2 z) (-> *target* gun fire-point z))
  0
  (none)
  )

(defpart 268
  :init-specs ((:texture (gun-yellow-muzzleflash level-default-sprite))
    (:birth-func 'birth-func-set-quat)
    (:num 1.0)
    (:scale-x (meters 1))
    (:scale-y (meters 4.5))
    (:r 128.0)
    (:g 128.0)
    (:b 128.0)
    (:a 128.0)
    (:scalevel-x (meters 0.05))
    (:fade-a -3.6571429)
    (:timer (seconds 0.117))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-14 left-multiply-quat))
    )
  )

(defpart 269
  :init-specs ((:texture (gun-yellow-beam level-default-sprite))
    (:birth-func 'birth-func-set-quat)
    (:num 1.0)
    (:scale-x (meters 0.5))
    (:scale-y (meters 16))
    (:r 128.0)
    (:g 128.0)
    (:b 128.0)
    (:a 32.0 64.0)
    (:scalevel-x (meters -0.005))
    (:fade-a -3.2)
    (:timer (seconds 0.1))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-14 left-multiply-quat))
    )
  )

(defpart 270
  :init-specs ((:texture (glow-soft level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 0.01))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 0.0)
    (:a 6.0)
    (:fade-a -0.3)
    (:timer (seconds 0.067))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    )
  )

(defpart 271
  :init-specs ((:texture (radial-gradient-yellow level-default-sprite))
    (:num 4.0 8.0)
    (:z (meters 0) (meters -4))
    (:scale-x (meters 0.55) (meters 0.1))
    (:scale-y (meters 0.1) (meters 0.1))
    (:r 128.0)
    (:g 128.0)
    (:b 0.0)
    (:a 64.0)
    (:vel-z (meters -0.016666668) (meters -0.083333336))
    (:scalevel-x (meters -0.0020833334))
    (:scalevel-y :copy scalevel-x)
    (:fade-r 1.6)
    (:fade-g -1.6)
    (:fade-b -3.2 -6.4)
    (:timer (seconds 0.535))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:rotate-y (degrees 0))
    )
  )

(defpart 272
  :init-specs ((:texture (hitspark level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 0.1) (meters 0.1))
    (:rot-x (degrees 2.25))
    (:rot-z (degrees 0) (degrees 3598.0002))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 255.0)
    (:omega (degrees 4511.25))
    (:scalevel-x (meters 0.033333335) (meters 0.016666668))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -5.1)
    (:timer (seconds 0.067) (seconds 0.015))
    (:flags (sp-cpuinfo-flag-3 glow))
    (:userdata 4096.0)
    )
  )

(defpart 273
  :init-specs ((:texture (laser-hit2-add level-default-sprite))
    (:num 2.0)
    (:scale-x (meters 0.01) (meters 0.1))
    (:rot-x (degrees 2.25))
    (:rot-z (degrees 0) (degrees 3598.0002))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 200.0)
    (:b 30.0)
    (:a 40.0)
    (:omega (degrees 4511.25))
    (:scalevel-x (meters 0.026666667) (meters 0.026666667))
    (:scalevel-y :copy scalevel-x)
    (:fade-g -1.0)
    (:fade-b -0.2)
    (:fade-a -0.26666668)
    (:timer (seconds 0.25) (seconds 0.08))
    (:flags (sp-cpuinfo-flag-3 glow))
    (:userdata 4096.0)
    )
  )

(defpart 274
  :init-specs ((:texture (gun-yellow-muzzleflash level-default-sprite))
    (:birth-func 'birth-func-set-quat)
    (:num 1.0)
    (:scale-x (meters 1))
    (:scale-y (meters 4.5))
    (:r 128.0)
    (:g 128.0)
    (:b 128.0)
    (:a 128.0)
    (:scalevel-x (meters 0.05))
    (:fade-a -3.6571429)
    (:timer (seconds 0.117))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-14 left-multiply-quat))
    )
  )

(defpart 275
  :init-specs ((:texture (gun-yellow-muzzleflash level-default-sprite))
    (:birth-func 'birth-func-set-quat)
    (:num 1.0)
    (:scale-x (meters 0.15))
    (:scale-y (meters 0.8))
    (:r 128.0)
    (:g 128.0)
    (:b 128.0)
    (:a 128.0)
    (:scalevel-x (meters 0.025))
    (:fade-a -3.6571429)
    (:timer (seconds 0.117))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-14 left-multiply-quat))
    )
  )

(defpart 276
  :init-specs ((:texture (gun-yellow-beam level-default-sprite))
    (:birth-func 'birth-func-set-quat)
    (:num 1.0)
    (:scale-x (meters 0.2))
    (:scale-y (meters 16))
    (:r 128.0)
    (:g 128.0)
    (:b 128.0)
    (:a 32.0 64.0)
    (:scalevel-x (meters -0.005))
    (:fade-a -3.2)
    (:timer (seconds 0.1))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-14 left-multiply-quat))
    )
  )

(defpart 277
  :init-specs ((:texture (glow-soft level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 20) (meters 30.2))
    (:rot-x (degrees 4.5))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 0.0)
    (:g 0.0)
    (:b 255.0)
    (:a 128.0)
    (:omega (degrees 6763.5))
    (:fade-a -0.3)
    (:timer (seconds 0.067))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-14 glow))
    )
  )

(defpart 278
  :init-specs ((:texture (radial-gradient-yellow level-default-sprite))
    (:num 4.0 8.0)
    (:z (meters 0) (meters -4))
    (:scale-x (meters 0.55) (meters 0.1))
    (:scale-y (meters 0.1) (meters 0.1))
    (:r 128.0)
    (:g 128.0)
    (:b 0.0)
    (:a 64.0)
    (:vel-z (meters -0.016666668) (meters -0.083333336))
    (:scalevel-x (meters -0.0020833334))
    (:scalevel-y :copy scalevel-x)
    (:fade-r 1.6)
    (:fade-g -1.6)
    (:fade-b -3.2 -6.4)
    (:timer (seconds 0.535))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:rotate-y (degrees 0))
    )
  )

(defpartgroup group-gun-yellow-saucer-lights
  :id 95
  :linger-duration (seconds 4)
  :flags (sp0 sp4)
  :bounds (static-bspherem 0 0 0 100)
  :parts ((sp-item 279 :flags (sp6)) (sp-item 280 :flags (is-3d sp6 sp7)) (sp-item 281 :flags (is-3d sp6 sp7)))
  )

(defpartgroup group-gun-yellow-saucer-lights-dark
  :id 96
  :duration (seconds 2)
  :flags (sp0 sp4)
  :bounds (static-bspherem 0 0 0 100)
  :parts ((sp-item 282 :flags (sp3)) (sp-item 283 :flags (is-3d sp3 sp7)) (sp-item 284 :flags (is-3d sp3 sp7)))
  )

(defpartgroup group-gun-yellow-saucer-fizz
  :id 97
  :duration (seconds 30)
  :linger-duration (seconds 1)
  :flags (sp0)
  :bounds (static-bspherem 0 0 0 100)
  :parts ((sp-item 285 :period (seconds 2) :length (seconds 0.017))
    (sp-item 286 :flags (sp6) :period (seconds 2) :length (seconds 0.017))
    (sp-item 287 :flags (sp3 sp7))
    )
  )

(defpart 287
  :init-specs ((:texture (big-cloud level-default-sprite))
    (:num 15.0)
    (:scale-x (meters 0.1))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0 64.0)
    (:g :copy r)
    (:b :copy r)
    (:a 32.0 32.0)
    (:vel-y (meters 0.05) (meters 0.016666668))
    (:scalevel-x (meters 0.016666668) (meters 0.016666668))
    (:rotvel-z (degrees -0.2) (degrees 0.4))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.07111111)
    (:accel-y (meters 0.00033333333))
    (:friction 0.9 0.02)
    (:timer (seconds 3))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-13 launch-along-z))
    (:next-time (seconds 0.167))
    (:next-launcher 288)
    (:conerot-x (degrees 10) (degrees 20))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 288
  :init-specs ((:scalevel-x (meters 0.0033333334)) (:scalevel-y :copy scalevel-x))
  )

(defpart 279
  :init-specs ((:texture (middot level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 1.1))
    (:scale-y (meters 0.8))
    (:r 40.0)
    (:g 40.0)
    (:b 40.0)
    (:a 128.0)
    (:timer (seconds 0.017))
    (:flags ())
    (:func 'sparticle-track-root)
    )
  )

(defpart 280
  :init-specs ((:texture (middot level-default-sprite))
    (:num 1.0)
    (:y (meters -0.16))
    (:scale-x (meters 0.95))
    (:scale-y :copy scale-x)
    (:r 40.0)
    (:g 40.0)
    (:b 40.0)
    (:a 128.0)
    (:timer (seconds 0.017))
    (:flags ())
    )
  )

(defpart 281
  :init-specs ((:texture (middot level-default-sprite))
    (:num 1.0)
    (:y (meters 0.16))
    (:scale-x (meters 0.95))
    (:scale-y :copy scale-x)
    (:r 40.0)
    (:g 40.0)
    (:b 40.0)
    (:a 128.0)
    (:timer (seconds 0.017))
    (:flags ())
    )
  )

(defpart 282
  :init-specs ((:texture (middot level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 1.1))
    (:scale-y (meters 0.8))
    (:r 10.0)
    (:g 10.0)
    (:b 10.0)
    (:a 128.0)
    (:timer (seconds 2))
    (:flags (sp-cpuinfo-flag-2))
    (:next-time (seconds 1.5))
    (:next-launcher 289)
    )
  )

(defpart 283
  :init-specs ((:texture (middot level-default-sprite))
    (:num 1.0)
    (:y (meters -0.16))
    (:scale-x (meters 0.95))
    (:scale-y :copy scale-x)
    (:r 10.0)
    (:g 10.0)
    (:b 10.0)
    (:a 128.0)
    (:timer (seconds 2))
    (:flags (sp-cpuinfo-flag-2))
    (:next-time (seconds 1.5))
    (:next-launcher 289)
    )
  )

(defpart 284
  :init-specs ((:texture (middot level-default-sprite))
    (:num 1.0)
    (:y (meters 0.16))
    (:scale-x (meters 0.95))
    (:scale-y :copy scale-x)
    (:r 10.0)
    (:g 10.0)
    (:b 10.0)
    (:a 128.0)
    (:timer (seconds 2))
    (:flags (sp-cpuinfo-flag-2))
    (:next-time (seconds 1.5))
    (:next-launcher 289)
    )
  )

(defpart 289
  :init-specs ((:fade-a -0.85333335))
  )

(defpartgroup group-gun-yellow-shot-hit-3
  :id 98
  :duration (seconds 1.5)
  :linger-duration (seconds 0.5)
  :flags (sp0)
  :bounds (static-bspherem 0 0 0 8)
  :parts ((sp-item 290 :flags (sp6) :period (seconds 2) :length (seconds 0.017))
    (sp-item 291 :fade-after (meters 60) :falloff-to (meters 60) :period (seconds 2) :length (seconds 0.017))
    )
  )

(defpart 290
  :init-specs ((:texture (starflash level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 0.1) (meters 1.2))
    (:rot-x (degrees 2.25))
    (:rot-z (degrees 0) (degrees 3600))
    (:scale-y (meters 0.1) (meters 1.2))
    (:r 255.0)
    (:g 200.0 55.0)
    (:b 128.0)
    (:a 32.0 128.0)
    (:omega (degrees 4511.25))
    (:scalevel-x (meters 0.033333335) (meters 0.033333335))
    (:scalevel-y (meters 0.033333335) (meters 0.033333335))
    (:fade-a -5.12)
    (:timer (seconds 0.085))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 4096.0)
    )
  )

(defpart 291
  :init-specs ((:texture (bigpuff level-default-sprite))
    (:num 8.0 16.0)
    (:scale-x (meters 0.5) (meters 1))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 128.0)
    (:b 128.0)
    (:a 32.0 32.0)
    (:vel-y (meters 0) (meters 0.016666668))
    (:scalevel-x (meters 0.0013333333) (meters 0.0033333334))
    (:rotvel-z (degrees -0.3) (degrees 0.6))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.10666667 -0.10666667)
    (:friction 0.95)
    (:timer (seconds 2))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-13))
    (:conerot-x (degrees -90) (degrees 180))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpartgroup group-gun-yellow-shot-hit-object-3
  :id 99
  :duration (seconds 1.5)
  :linger-duration (seconds 0.5)
  :flags (sp0)
  :bounds (static-bspherem 0 0 0 8)
  :parts ((sp-item 292 :flags (sp6) :period (seconds 2) :length (seconds 0.017))
    (sp-item 293 :fade-after (meters 60) :falloff-to (meters 60) :period (seconds 2) :length (seconds 0.167))
    )
  )

(defpart 292
  :init-specs ((:texture (laser-hit2-add level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 0.4) (meters 1))
    (:rot-x (degrees 2.25))
    (:rot-z (degrees 0) (degrees 3600))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 200.0 55.0)
    (:b 128.0)
    (:a 128.0)
    (:omega (degrees 4511.25))
    (:scalevel-x (meters 0.06666667))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -5.12)
    (:timer (seconds 0.085))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 4096.0)
    )
  )

(defpart 293
  :init-specs ((:texture (hotdot level-default-sprite))
    (:num 1.0 6.0)
    (:scale-x (meters 0.1) (meters 0.4))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 64.0 64.0)
    (:b 0.0)
    (:a 128.0)
    (:vel-y (meters 0.0033333334) (meters 0.013333334))
    (:fade-g -0.21333334 -0.21333334)
    (:fade-a -0.42666668)
    (:accel-y (meters -0.001))
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-2 launch-along-z))
    (:conerot-x (degrees 0) (degrees 360))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpartgroup group-gun-yellow3-muzzle-smoke
  :id 100
  :duration (seconds 0.067)
  :linger-duration (seconds 1.667)
  :flags (sp0 sp4)
  :bounds (static-bspherem 0 0 0 10)
  :parts ((sp-item 294 :period (seconds 2) :length (seconds 0.017)) (sp-item 295 :flags (sp7)))
  )

(defpart 294
  :init-specs ((:texture (glow level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 4))
    (:rot-x (degrees 2.25))
    (:rot-z (degrees 0) (degrees 3600))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 200.0 55.0)
    (:b 128.0)
    (:a 128.0)
    (:omega (degrees 4511.25))
    (:scalevel-x (meters 0.06666667))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -3.2)
    (:timer (seconds 0.135))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 4096.0)
    )
  )

(defpart 295
  :init-specs ((:texture (dirtpuff01 level-default-sprite))
    (:num 30.0)
    (:scale-x (meters 0.3) (meters 0.3))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 100.0 28.0)
    (:g :copy r)
    (:b :copy r)
    (:a 16.0 64.0)
    (:vel-z (meters 0.16666667) (meters 0.033333335))
    (:scalevel-x (meters 0.006666667) (meters 0.016666668))
    (:rotvel-z (degrees -0.4) (degrees 0.8))
    (:scalevel-y :copy scalevel-x)
    (:friction 0.95 0.04)
    (:timer (seconds 1.667))
    (:flags (sp-cpuinfo-flag-13))
    (:next-time (seconds 0.667))
    (:next-launcher 296)
    (:conerot-x (degrees 10) (degrees 10))
    (:rotate-z (degrees 0) (degrees 3600))
    )
  )

(defpart 296
  :init-specs ((:scalevel-x (meters 0)) (:scalevel-y :copy scalevel-x) (:fade-a -0.26666668) (:friction 0.99))
  )

(defpart 297
  :init-specs ((:texture (gun-yellow-muzzleflash level-default-sprite))
    (:birth-func 'birth-func-set-quat)
    (:num 1.0)
    (:scale-x (meters 4))
    (:scale-y (meters 4.5))
    (:r 128.0)
    (:g 128.0)
    (:b 128.0)
    (:a 128.0)
    (:scalevel-x (meters 0.05))
    (:fade-a -3.6571429)
    (:timer (seconds 0.167))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-14 left-multiply-quat))
    )
  )

(defpartgroup group-gun-yellow-shot-hit
  :id 101
  :duration (seconds 1.5)
  :linger-duration (seconds 0.5)
  :flags (sp0)
  :bounds (static-bspherem 0 0 0 8)
  :parts ((sp-item 299 :flags (sp6) :period (seconds 2) :length (seconds 0.017))
    (sp-item 300 :flags (sp6) :period (seconds 2) :length (seconds 0.017))
    (sp-item 301 :flags (sp6) :period (seconds 2) :length (seconds 0.017))
    (sp-item 302 :fade-after (meters 100) :falloff-to (meters 100) :period (seconds 2) :length (seconds 1))
    (sp-item 302 :fade-after (meters 100) :falloff-to (meters 100) :period (seconds 2) :length (seconds 0.667))
    (sp-item 302 :fade-after (meters 100) :falloff-to (meters 100) :period (seconds 2) :length (seconds 0.5))
    (sp-item 302 :fade-after (meters 100) :falloff-to (meters 100) :period (seconds 2) :length (seconds 0.417))
    (sp-item 302 :fade-after (meters 100) :falloff-to (meters 100) :period (seconds 2) :length (seconds 0.335))
    (sp-item 302 :fade-after (meters 100) :falloff-to (meters 100) :period (seconds 2) :length (seconds 0.25))
    (sp-item 302 :fade-after (meters 100) :falloff-to (meters 100) :period (seconds 2) :length (seconds 0.185))
    (sp-item 302 :fade-after (meters 100) :falloff-to (meters 100) :period (seconds 2) :length (seconds 0.15))
    (sp-item 302 :fade-after (meters 100) :falloff-to (meters 100) :period (seconds 2) :length (seconds 0.117))
    (sp-item 302 :fade-after (meters 100) :falloff-to (meters 100) :period (seconds 2) :length (seconds 0.085))
    (sp-item 302 :fade-after (meters 100) :falloff-to (meters 100) :period (seconds 2) :length (seconds 0.05))
    (sp-item 302 :fade-after (meters 100) :falloff-to (meters 100) :period (seconds 2) :length (seconds 0.035))
    (sp-item 302 :fade-after (meters 100) :falloff-to (meters 100) :period (seconds 2) :length (seconds 0.017))
    (sp-item 303 :fade-after (meters 40) :flags (sp6) :period (seconds 2) :length (seconds 0.017))
    (sp-item 304 :fade-after (meters 130) :falloff-to (meters 130) :period (seconds 2) :length (seconds 0.017) :binding 298)
    (sp-item 298 :fade-after (meters 90) :falloff-to (meters 90) :flags (sp1 sp2))
    (sp-item 298 :fade-after (meters 90) :falloff-to (meters 90) :flags (sp1 sp2))
    (sp-item 298 :fade-after (meters 90) :falloff-to (meters 90) :flags (sp1 sp2))
    (sp-item 298 :fade-after (meters 90) :falloff-to (meters 90) :flags (sp1 sp2))
    (sp-item 298 :fade-after (meters 90) :falloff-to (meters 90) :flags (sp1 sp2))
    (sp-item 298 :fade-after (meters 90) :falloff-to (meters 90) :flags (sp1 sp2))
    (sp-item 298 :fade-after (meters 90) :falloff-to (meters 90) :flags (sp1 sp2))
    (sp-item 298 :fade-after (meters 90) :falloff-to (meters 90) :flags (sp1 sp2))
    (sp-item 298 :fade-after (meters 90) :falloff-to (meters 90) :flags (sp1 sp2))
    (sp-item 298 :fade-after (meters 90) :falloff-to (meters 90) :flags (sp1 sp2))
    (sp-item 298 :fade-after (meters 90) :falloff-to (meters 90) :flags (sp1 sp2))
    (sp-item 298 :fade-after (meters 90) :falloff-to (meters 90) :flags (sp1 sp2))
    (sp-item 298 :fade-after (meters 90) :falloff-to (meters 90) :flags (sp1 sp2))
    (sp-item 298 :fade-after (meters 90) :falloff-to (meters 90) :flags (sp1 sp2))
    (sp-item 298 :fade-after (meters 90) :falloff-to (meters 90) :flags (sp1 sp2))
    )
  )

(defpartgroup group-gun-yellow-shot-hit-object
  :id 102
  :duration (seconds 1.5)
  :linger-duration (seconds 0.5)
  :flags (sp0)
  :bounds (static-bspherem 0 0 0 8)
  :parts ((sp-item 305 :flags (sp6) :period (seconds 2) :length (seconds 0.017))
    (sp-item 306 :flags (sp6) :period (seconds 2) :length (seconds 0.017))
    (sp-item 301 :flags (sp6) :period (seconds 2) :length (seconds 0.017))
    (sp-item 303 :fade-after (meters 40) :flags (sp6) :period (seconds 2) :length (seconds 0.017))
    (sp-item 304 :fade-after (meters 130) :falloff-to (meters 130) :period (seconds 2) :length (seconds 0.017) :binding 298)
    (sp-item 298 :fade-after (meters 90) :falloff-to (meters 90) :flags (sp1 sp2))
    (sp-item 298 :fade-after (meters 90) :falloff-to (meters 90) :flags (sp1 sp2))
    (sp-item 298 :fade-after (meters 90) :falloff-to (meters 90) :flags (sp1 sp2))
    (sp-item 298 :fade-after (meters 90) :falloff-to (meters 90) :flags (sp1 sp2))
    (sp-item 298 :fade-after (meters 90) :falloff-to (meters 90) :flags (sp1 sp2))
    (sp-item 298 :fade-after (meters 90) :falloff-to (meters 90) :flags (sp1 sp2))
    (sp-item 298 :fade-after (meters 90) :falloff-to (meters 90) :flags (sp1 sp2))
    (sp-item 298 :fade-after (meters 90) :falloff-to (meters 90) :flags (sp1 sp2))
    (sp-item 298 :fade-after (meters 90) :falloff-to (meters 90) :flags (sp1 sp2))
    (sp-item 298 :fade-after (meters 90) :falloff-to (meters 90) :flags (sp1 sp2))
    (sp-item 298 :fade-after (meters 90) :falloff-to (meters 90) :flags (sp1 sp2))
    (sp-item 298 :fade-after (meters 90) :falloff-to (meters 90) :flags (sp1 sp2))
    (sp-item 298 :fade-after (meters 90) :falloff-to (meters 90) :flags (sp1 sp2))
    (sp-item 298 :fade-after (meters 90) :falloff-to (meters 90) :flags (sp1 sp2))
    (sp-item 298 :fade-after (meters 90) :falloff-to (meters 90) :flags (sp1 sp2))
    )
  )

(defpart 298
  :init-specs ((:texture (hotdot level-default-sprite))
    (:num 0.0 0.5)
    (:scale-x (meters 0.15) (meters 0.1))
    (:rot-x 4)
    (:rot-z (degrees 0) (degrees 3600))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 0.0)
    (:a 64.0)
    (:rotvel-z (degrees -1.2) (degrees 2.4))
    (:fade-g -3.4 -3.4)
    (:fade-a -0.21333334 -1.28)
    (:accel-y (meters -0.00033333333) (meters -0.00083333335))
    (:friction 0.95 0.02)
    (:timer (seconds 0.667) (seconds 0.33))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    )
  )

(defpart 304
  :init-specs ((:texture (hotdot level-default-sprite))
    (:num 4.0 12.0)
    (:scale-x (meters 2.5))
    (:rot-x 4)
    (:scale-y (meters 0.225) (meters 0.05))
    (:r 255.0)
    (:g 255.0)
    (:b 0.0)
    (:a 64.0 32.0)
    (:omega (degrees 0.016875) (degrees 0.03375))
    (:vel-y (meters 0.2))
    (:fade-g -1.7 -1.7)
    (:accel-y (meters -0.0033333334) (meters -0.0016666667))
    (:friction 0.95 0.02)
    (:timer (seconds 0.667) (seconds 0.33))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:func 'sparticle-motion-blur)
    (:next-time (seconds 0.335) (seconds 0.33))
    (:next-launcher 307)
    (:conerot-x (degrees 0) (degrees 3600))
    (:conerot-y (degrees 0) (degrees 3600))
    )
  )

(defpart 308
  :init-specs ((:fade-a -0.96 -0.96))
  )

(defpart 301
  :init-specs ((:texture (explosion-nebula level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 1))
    (:rot-x (degrees 1.125))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 128.0 128.0)
    (:b 0.0 32.0)
    (:a 24.0)
    (:scalevel-x (meters 0.33333334))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.6857143)
    (:timer (seconds 0.135))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 4096.0)
    )
  )

(defpart 303
  :init-specs ((:num 1.0)
    (:rot-x 12)
    (:r 4096.0)
    (:g 2867.2)
    (:b 1638.4)
    (:fade-b 5.12)
    (:timer (seconds 0.8))
    (:flags (distort))
    (:rotate-y (degrees 0) (degrees 360))
    )
  )

(defpart 302
  :init-specs ((:texture (hotdot level-default-sprite))
    (:num 0.5)
    (:scale-x (meters 0.5) (meters 0.3))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 128.0 128.0)
    (:b 32.0 8.0)
    (:a 96.0)
    (:vel-y (meters 0.026666667) (meters 0.053333335))
    (:scalevel-x (meters -0.0005) (meters -0.0005))
    (:scalevel-y :copy scalevel-x)
    (:fade-g -1.7)
    (:fade-b -0.53333336)
    (:accel-y (meters -0.00016666666) (meters -0.00033333333))
    (:friction 0.7)
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-14))
    (:next-time (seconds 0.667))
    (:next-launcher 309)
    (:conerot-x (degrees 0) (degrees 180))
    (:conerot-y (degrees 0) (degrees 360))
    )
  )

(defpart 309
  :init-specs ((:fade-r -1.28) (:fade-a -0.96))
  )

(defpart 300
  :init-specs ((:texture (glow level-default-sprite))
    (:num 2.0)
    (:scale-x (meters 1))
    (:rot-x (degrees 2.25))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 32.0 8.0)
    (:a 24.0)
    (:scalevel-x (meters 0.12857144))
    (:rotvel-z (degrees -0.3) (degrees 0.6))
    (:scalevel-y :copy scalevel-x)
    (:fade-g -3.6571429)
    (:fade-b -0.9142857)
    (:timer (seconds 1.335))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-2 glow))
    (:userdata 4096.0)
    (:next-time (seconds 0.117))
    (:next-launcher 310)
    )
  )

(defpart 310
  :init-specs ((:scale-x (meters 4.5))
    (:scale-y :copy scale-x)
    (:scalevel-x (meters -0.010958904))
    (:scalevel-y :copy scalevel-x)
    (:fade-g -0.38356164)
    (:fade-b 0.0)
    (:fade-a -0.13150685)
    )
  )

(defpart 306
  :init-specs ((:texture (glow level-default-sprite))
    (:num 2.0)
    (:scale-x (meters 1))
    (:rot-x (degrees 2.25))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 32.0 8.0)
    (:a 24.0)
    (:scalevel-x (meters 0.12857144))
    (:rotvel-z (degrees -0.3) (degrees 0.6))
    (:scalevel-y :copy scalevel-x)
    (:fade-g -3.6571429)
    (:fade-b -0.9142857)
    (:timer (seconds 1.335))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-2 glow))
    (:userdata 4096.0)
    (:next-time (seconds 0.117))
    (:next-launcher 311)
    )
  )

(defpart 311
  :init-specs ((:scale-x (meters 4.5))
    (:scale-y :copy scale-x)
    (:scalevel-x (meters -0.05))
    (:scalevel-y :copy scalevel-x)
    (:fade-g -1.75)
    (:fade-b 0.0)
    (:fade-a -0.6)
    )
  )

(defpart 299
  :init-specs ((:texture (glow-soft level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 0.5))
    (:rot-x (degrees 0.5625))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 64.0)
    (:scalevel-x (meters 0.16666667))
    (:rotvel-z (degrees 0.3))
    (:scalevel-y :copy scalevel-x)
    (:timer (seconds 2))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 4096.0)
    (:next-time (seconds 0.05))
    (:next-launcher 312)
    )
  )

(defpart 312
  :init-specs ((:scale-x (meters 3.5))
    (:scale-y :copy scale-x)
    (:scalevel-x (meters -0.02))
    (:scalevel-y :copy scalevel-x)
    (:fade-b -5.1)
    (:next-time (seconds 0.167))
    (:next-launcher 313)
    )
  )

(defpart 313
  :init-specs ((:scale-x (meters 2))
    (:scale-y :copy scale-x)
    (:scalevel-x (meters -0.0018691589))
    (:scalevel-y :copy scalevel-x)
    (:fade-r 0.0)
    (:fade-g -0.14222223)
    (:fade-b 0.0)
    (:next-time (seconds 1.5))
    (:next-launcher 314)
    )
  )

(defpart 314
  :init-specs ((:fade-g -2.2588236) (:fade-a -0.7529412))
  )

(defpart 305
  :init-specs ((:texture (glow-soft level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 0.5))
    (:rot-x (degrees 0.5625))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 64.0)
    (:scalevel-x (meters 0.16666667))
    (:rotvel-z (degrees 0.3))
    (:scalevel-y :copy scalevel-x)
    (:timer (seconds 2))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 4096.0)
    (:next-time (seconds 0.05))
    (:next-launcher 315)
    )
  )

(defpart 315
  :init-specs ((:scale-x (meters 3.5))
    (:scale-y :copy scale-x)
    (:scalevel-x (meters -0.04))
    (:scalevel-y :copy scalevel-x)
    (:fade-b -5.1)
    (:next-time (seconds 0.167))
    (:next-launcher 316)
    )
  )

(defpart 316
  :init-specs ((:fade-g -4.8) (:fade-a -1.6))
  )

(defpartgroup group-gun-yellow-shot-die
  :id 103
  :duration (seconds 0.017)
  :flags (sp0)
  :bounds (static-bspherem 0 0 0 8)
  :parts ((sp-item 249))
  )

(defpartgroup group-gun-dark-shot-hit
  :id 104
  :duration (seconds 2)
  :flags (sp0)
  :bounds (static-bspherem 0 0 0 6)
  :parts ((sp-item 317 :flags (sp6) :period (seconds 3) :length (seconds 0.017))
    (sp-item 318 :flags (sp6) :period (seconds 3) :length (seconds 0.017))
    (sp-item 319 :period (seconds 3) :length (seconds 0.05))
    (sp-item 320 :fade-after (meters 60) :period (seconds 3) :length (seconds 0.035) :offset 10)
    (sp-item 321 :fade-after (meters 60) :falloff-to (meters 60) :period (seconds 3) :length (seconds 0.167) :offset 20)
    (sp-item 322 :fade-after (meters 200) :falloff-to (meters 200) :period (seconds 3) :length (seconds 0.085) :offset 20)
    (sp-item 323 :fade-after (meters 150) :falloff-to (meters 150) :period (seconds 3) :length (seconds 0.067) :offset 30)
    )
  )

(defpart 323
  :init-specs ((:texture (explosion-edge level-default-sprite))
    (:num 0.8)
    (:scale-x (meters 1) (meters 1))
    (:rot-z (degrees 0) (degrees 360) :store)
    (:scale-y (meters 0.8) (meters 0.2))
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 32.0 32.0)
    (:scalevel-x (meters 0.01) (meters 0.13333334))
    (:scalevel-y :copy scalevel-x)
    (:fade-r 0.0)
    (:fade-g -6.2)
    (:fade-b -0.2)
    (:fade-a -0.1254902)
    (:friction 0.95)
    (:timer (seconds 3.335))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:next-time (seconds 0.085))
    (:next-launcher 324)
    (:conerot-x '*sp-temp*)
    )
  )

(defpart 322
  :init-specs ((:texture (explosion-nebula level-default-sprite))
    (:num 0.8)
    (:scale-x (meters 1) (meters 1))
    (:rot-z (degrees 0))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 32.0 32.0)
    (:vel-y (meters 0.02) (meters 0.01))
    (:scalevel-x (meters 0.01) (meters 0.13333334))
    (:rotvel-z (degrees -0.12) (degrees 0.24))
    (:scalevel-y :copy scalevel-x)
    (:fade-r 0.0)
    (:fade-g -6.2)
    (:fade-b -0.2)
    (:fade-a -0.1254902)
    (:friction 0.95)
    (:timer (seconds 3.335))
    (:flags (sp-cpuinfo-flag-2))
    (:next-time (seconds 0.085))
    (:next-launcher 324)
    (:conerot-x (degrees 0) (degrees 360))
    )
  )

(defpart 324
  :init-specs ((:fade-r -2.1666667)
    (:fade-g -5.0)
    (:fade-b -1.3333334)
    (:fade-a -0.062068965 -0.72)
    (:next-time (seconds 0.05) (seconds 0.047))
    (:next-launcher 325)
    )
  )

(defpart 325
  :init-specs ((:scalevel-x (meters 0.016666668) (meters 0.016666668))
    (:scalevel-y :copy scalevel-x)
    (:fade-r -1.7)
    (:fade-g 0.0)
    (:fade-b -0.8)
    (:next-time (seconds 0.117) (seconds 0.047))
    (:next-launcher 326)
    )
  )

(defpart 326
  :init-specs ((:scalevel-x (meters 0.0033333334) (meters 0.0033333334))
    (:scalevel-y :copy scalevel-x)
    (:fade-r -0.5833333)
    (:fade-g 0.0)
    (:fade-b -0.9444444)
    (:next-time (seconds 0.5) (seconds 0.097))
    (:next-launcher 327)
    )
  )

(defpart 327
  :init-specs ((:fade-r 0.0) (:fade-g 0.0) (:fade-b 0.0) (:fade-a -0.1125))
  )

(defpart 318
  :init-specs ((:texture (glow-soft level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 5))
    (:rot-x (degrees 11.25))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 24.0)
    (:scalevel-x (meters 0.13333334))
    (:rotvel-z (degrees 0.3))
    (:scalevel-y :copy scalevel-x)
    (:fade-r 0.0)
    (:fade-g -4.266667)
    (:fade-b 0.0)
    (:fade-a 0.0)
    (:timer (seconds 0.5))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-14 glow))
    (:next-time (seconds 0.25))
    (:next-launcher 328)
    )
  )

(defpart 328
  :init-specs ((:scalevel-x (meters 0))
    (:scalevel-y :copy scalevel-x)
    (:fade-r -0.85333335)
    (:fade-g -1.7066667)
    (:fade-b -1.7066667)
    (:fade-a -0.64)
    )
  )

(defpart 317
  :init-specs ((:texture (glow level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 5))
    (:rot-x (degrees 11.25))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 24.0)
    (:scalevel-x (meters 0.5))
    (:rotvel-z (degrees 0.3))
    (:scalevel-y :copy scalevel-x)
    (:fade-r 0.0)
    (:fade-g -4.266667)
    (:fade-b 0.0)
    (:fade-a 0.0)
    (:timer (seconds 0.217))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:next-time (seconds 0.1))
    (:next-launcher 329)
    )
  )

(defpart 329
  :init-specs ((:scalevel-x (meters -0.2857143))
    (:scalevel-y :copy scalevel-x)
    (:fade-r -1.8285714)
    (:fade-g -3.6571429)
    (:fade-b -3.6571429)
    (:fade-a -1.3714286)
    )
  )

(defpart 321
  :init-specs ((:texture (specs level-default-sprite))
    (:num 6.0 2.0)
    (:x (meters 0.25))
    (:scale-x (meters 1) (meters 0.25))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 16.0 48.0)
    (:vel-y (meters 0.083333336) (meters 0.083333336))
    (:scalevel-x (meters 0.006666667) (meters 0.0016666667))
    (:rotvel-z (degrees -0.12) (degrees 0.24))
    (:scalevel-y :copy scalevel-x)
    (:fade-r 0.0)
    (:fade-g -3.1)
    (:fade-b -0.1)
    (:accel-y (meters -0.00016666666) (meters -0.00033333333))
    (:friction 0.87)
    (:timer (seconds 3.335))
    (:flags (sp-cpuinfo-flag-2))
    (:next-time (seconds 0.117) (seconds 0.047))
    (:next-launcher 330)
    (:conerot-x (degrees 0) (degrees 360))
    )
  )

(defpart 330
  :init-specs ((:scalevel-x (meters 0.0016666667))
    (:scalevel-y :copy scalevel-x)
    (:fade-r -0.14444445)
    (:fade-g -0.33333334)
    (:fade-b -0.08888889)
    (:next-time (seconds 0.15) (seconds 0.047))
    (:next-launcher 331)
    )
  )

(defpart 331
  :init-specs ((:fade-r 0.0) (:fade-g -0.08695652) (:fade-a -0.18478261))
  )

(defpart 319
  :init-specs ((:texture (bigpuff level-default-sprite))
    (:num 2.0 1.0)
    (:x (meters 0) (meters 0.6))
    (:scale-x (meters 2.5) (meters 2))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 70.0 20.0)
    (:g 70.0 20.0)
    (:b 70.0 20.0)
    (:a 0.0 40.0)
    (:vel-y (meters 0) (meters 0.1))
    (:scalevel-x (meters 0.033333335) (meters 0.02))
    (:rotvel-z (degrees -0.12) (degrees 0.24))
    (:scalevel-y :copy scalevel-x)
    (:fade-r 3.3)
    (:fade-g 1.2)
    (:fade-b 3.2)
    (:fade-a 1.76)
    (:friction 0.88)
    (:timer (seconds 2.367))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:next-time (seconds 0.117) (seconds 0.047))
    (:next-launcher 332)
    (:conerot-x (degrees -1440) (degrees 2880))
    )
  )

(defpart 332
  :init-specs ((:scalevel-x (meters 0.0033333334))
    (:scalevel-y :copy scalevel-x)
    (:fade-r -1.0833334)
    (:fade-g -2.1666667)
    (:fade-b -0.6666667)
    (:fade-a -0.46666667)
    (:next-time (seconds 0.15) (seconds 0.047))
    (:next-launcher 333)
    )
  )

(defpart 333
  :init-specs ((:fade-r -1.7) (:fade-g 0.0) (:fade-b -0.8) (:fade-a -1.0) (:next-time (seconds 0.167)) (:next-launcher 334))
  )

(defpart 334
  :init-specs ((:scalevel-x (meters 0))
    (:scalevel-y :copy scalevel-x)
    (:fade-r -0.17)
    (:fade-g 0.0)
    (:fade-b -0.3)
    (:fade-a -0.1)
    )
  )

(defpart 320
  :init-specs ((:texture (motion-blur-part level-default-sprite))
    (:num 4.0 2.0)
    (:scale-x (meters 0.2) (meters 0.5))
    (:rot-x 4)
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y (meters 0.2) (meters 0.1))
    (:r 192.0 64.0)
    (:g 128.0)
    (:b 192.0 64.0)
    (:a 32.0 96.0)
    (:scalevel-x (meters 0.13333334) (meters 0.02))
    (:fade-r -1.4222223)
    (:fade-g -1.4222223)
    (:fade-b -1.4222223)
    (:fade-a -1.4222223)
    (:timer (seconds 0.3))
    (:flags (sp-cpuinfo-flag-2))
    )
  )

(defpartgroup group-gun-green-shot-hit
  :id 105
  :duration (seconds 2)
  :flags (sp0)
  :bounds (static-bspherem 0 0 0 6)
  :parts ((sp-item 335 :flags (sp6) :period (seconds 3) :length (seconds 0.017))
    (sp-item 336 :flags (sp6) :period (seconds 3) :length (seconds 0.017))
    (sp-item 337 :period (seconds 3) :length (seconds 0.05))
    (sp-item 338 :fade-after (meters 60) :period (seconds 3) :length (seconds 0.035) :offset 10)
    (sp-item 339 :fade-after (meters 60) :falloff-to (meters 60) :period (seconds 3) :length (seconds 0.167) :offset 20)
    (sp-item 340 :fade-after (meters 200) :falloff-to (meters 200) :period (seconds 3) :length (seconds 0.085) :offset 20)
    (sp-item 341 :fade-after (meters 150) :falloff-to (meters 150) :period (seconds 3) :length (seconds 0.067) :offset 30)
    )
  )

(defpart 341
  :init-specs ((:texture (explosion-edge level-default-sprite))
    (:num 0.8)
    (:scale-x (meters 1) (meters 1))
    (:rot-z (degrees 0) (degrees 360) :store)
    (:scale-y (meters 0.8) (meters 0.2))
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 32.0 32.0)
    (:scalevel-x (meters 0.01) (meters 0.13333334))
    (:scalevel-y :copy scalevel-x)
    (:fade-r -6.2)
    (:fade-g 0.0)
    (:fade-b -10.2)
    (:fade-a -0.1254902)
    (:friction 0.95)
    (:timer (seconds 3.335))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:next-time (seconds 0.085))
    (:next-launcher 342)
    (:conerot-x '*sp-temp*)
    )
  )

(defpart 340
  :init-specs ((:texture (explosion-nebula level-default-sprite))
    (:num 0.8)
    (:scale-x (meters 1) (meters 1))
    (:rot-z (degrees 0))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 32.0 32.0)
    (:vel-y (meters 0.02) (meters 0.01))
    (:scalevel-x (meters 0.01) (meters 0.13333334))
    (:rotvel-z (degrees -0.12) (degrees 0.24))
    (:scalevel-y :copy scalevel-x)
    (:fade-r -6.2)
    (:fade-g 0.0)
    (:fade-b -10.2)
    (:fade-a -0.1254902)
    (:friction 0.95)
    (:timer (seconds 3.335))
    (:flags (sp-cpuinfo-flag-2))
    (:next-time (seconds 0.085))
    (:next-launcher 342)
    (:conerot-x (degrees 0) (degrees 360))
    )
  )

(defpart 342
  :init-specs ((:fade-r -5.0)
    (:fade-g -2.1666667)
    (:fade-a -0.062068965 -0.72)
    (:next-time (seconds 0.05) (seconds 0.047))
    (:next-launcher 343)
    )
  )

(defpart 343
  :init-specs ((:scalevel-x (meters 0.016666668) (meters 0.016666668))
    (:scalevel-y :copy scalevel-x)
    (:fade-r 0.0)
    (:fade-g -1.7)
    (:next-time (seconds 0.117) (seconds 0.047))
    (:next-launcher 344)
    )
  )

(defpart 344
  :init-specs ((:scalevel-x (meters 0.0033333334) (meters 0.0033333334))
    (:scalevel-y :copy scalevel-x)
    (:fade-r 0.0)
    (:fade-g -0.5833333)
    (:next-time (seconds 0.5) (seconds 0.097))
    (:next-launcher 345)
    )
  )

(defpart 345
  :init-specs ((:fade-r 0.0) (:fade-g 0.0) (:fade-b 0.0) (:fade-a -0.1125))
  )

(defpart 336
  :init-specs ((:texture (glow-soft level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 5))
    (:rot-x (degrees 11.25))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 24.0)
    (:scalevel-x (meters 0.13333334))
    (:rotvel-z (degrees 0.3))
    (:scalevel-y :copy scalevel-x)
    (:fade-r -4.266667)
    (:fade-g 0.0)
    (:fade-b -8.5)
    (:fade-a 0.0)
    (:timer (seconds 0.5))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-14 glow))
    (:next-time (seconds 0.25))
    (:next-launcher 346)
    )
  )

(defpart 346
  :init-specs ((:scalevel-x (meters 0))
    (:scalevel-y :copy scalevel-x)
    (:fade-r -1.7066667)
    (:fade-g -0.85333335)
    (:fade-a -0.64)
    )
  )

(defpart 335
  :init-specs ((:texture (glow level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 5))
    (:rot-x (degrees 11.25))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 24.0)
    (:scalevel-x (meters 0.5))
    (:rotvel-z (degrees 0.3))
    (:scalevel-y :copy scalevel-x)
    (:fade-r -4.266667)
    (:fade-g 0.0)
    (:fade-b -8.5)
    (:fade-a 0.0)
    (:timer (seconds 0.217))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:next-time (seconds 0.1))
    (:next-launcher 347)
    )
  )

(defpart 347
  :init-specs ((:scalevel-x (meters -0.2857143))
    (:scalevel-y :copy scalevel-x)
    (:fade-r -3.6571429)
    (:fade-g -1.8285714)
    (:fade-a -1.3714286)
    )
  )

(defpart 339
  :init-specs ((:texture (specs level-default-sprite))
    (:num 6.0 2.0)
    (:x (meters 0.25))
    (:scale-x (meters 1) (meters 0.25))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 16.0 48.0)
    (:vel-y (meters 0.083333336) (meters 0.083333336))
    (:scalevel-x (meters 0.006666667) (meters 0.0016666667))
    (:rotvel-z (degrees -0.12) (degrees 0.24))
    (:scalevel-y :copy scalevel-x)
    (:fade-r -3.1)
    (:fade-g 0.0)
    (:fade-b -5.1)
    (:accel-y (meters -0.00016666666) (meters -0.00033333333))
    (:friction 0.87)
    (:timer (seconds 3.335))
    (:flags (sp-cpuinfo-flag-2))
    (:next-time (seconds 0.117) (seconds 0.047))
    (:next-launcher 348)
    (:conerot-x (degrees 0) (degrees 360))
    )
  )

(defpart 348
  :init-specs ((:scalevel-x (meters 0.0016666667))
    (:scalevel-y :copy scalevel-x)
    (:fade-r -0.33333334)
    (:fade-g -0.14444445)
    (:next-time (seconds 0.15) (seconds 0.047))
    (:next-launcher 349)
    )
  )

(defpart 349
  :init-specs ((:fade-r -0.08695652) (:fade-g 0.0) (:fade-a -0.18478261))
  )

(defpart 337
  :init-specs ((:texture (bigpuff level-default-sprite))
    (:num 2.0 1.0)
    (:x (meters 0) (meters 0.6))
    (:scale-x (meters 2.5) (meters 2))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 70.0 20.0)
    (:g 70.0 20.0)
    (:b 70.0 20.0)
    (:a 0.0 40.0)
    (:vel-y (meters 0) (meters 0.1))
    (:scalevel-x (meters 0.033333335) (meters 0.02))
    (:rotvel-z (degrees -0.12) (degrees 0.24))
    (:scalevel-y :copy scalevel-x)
    (:fade-r 1.2)
    (:fade-g 3.3)
    (:fade-b 0.4)
    (:fade-a 1.76)
    (:friction 0.88)
    (:timer (seconds 2.367))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:next-time (seconds 0.117) (seconds 0.047))
    (:next-launcher 350)
    (:conerot-x (degrees -1440) (degrees 2880))
    )
  )

(defpart 350
  :init-specs ((:scalevel-x (meters 0.0033333334))
    (:scalevel-y :copy scalevel-x)
    (:fade-r -2.1666667)
    (:fade-g -1.0833334)
    (:fade-b -2.1666667)
    (:fade-a -0.46666667)
    (:next-time (seconds 0.15) (seconds 0.047))
    (:next-launcher 351)
    )
  )

(defpart 351
  :init-specs ((:fade-r 0.0) (:fade-g -1.7) (:fade-b -0.8) (:fade-a -1.0) (:next-time (seconds 0.167)) (:next-launcher 352))
  )

(defpart 352
  :init-specs ((:scalevel-x (meters 0))
    (:scalevel-y :copy scalevel-x)
    (:fade-r 0.0)
    (:fade-g -0.17)
    (:fade-b -0.3)
    (:fade-a -0.1)
    )
  )

(defpart 338
  :init-specs ((:texture (motion-blur-part level-default-sprite))
    (:num 4.0 2.0)
    (:scale-x (meters 0.2) (meters 0.5))
    (:rot-x 4)
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y (meters 0.2) (meters 0.1))
    (:r 64.0)
    (:g 192.0 64.0)
    (:b 64.0)
    (:a 32.0 96.0)
    (:scalevel-x (meters 0.13333334) (meters 0.02))
    (:fade-r -1.4222223)
    (:fade-g -1.4222223)
    (:fade-b -1.4222223)
    (:fade-a -1.4222223)
    (:timer (seconds 0.3))
    (:flags (sp-cpuinfo-flag-2))
    )
  )

(defpart 353
  :init-specs ((:texture (redpuff level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 0.5) (meters 0.5))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 128.0 20.0)
    (:b 128.0)
    (:a 0.0)
    (:omega (degrees 0))
    (:vel-z (meters 0.13333334))
    (:scalevel-x (meters 0.01))
    (:scalevel-y :copy scalevel-x)
    (:fade-a 3.4)
    (:timer (seconds 2))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat))
    (:func 'sparticle-red-2-glow-trail-halt)
    (:next-time (seconds 0.25))
    (:next-launcher 354)
    (:rotate-y (degrees 0))
    )
  )

(defpart 354
  :init-specs ((:scalevel-x (meters 0))
    (:scalevel-y :copy scalevel-x)
    (:fade-a 0.0)
    (:next-time (seconds 0.017) (seconds 0.247))
    (:next-launcher 355)
    )
  )

(defpart 355
  :init-specs ((:scalevel-x (meters -0.0033333334) (meters -0.006666667)) (:scalevel-y :copy scalevel-x) (:fade-a -1.7))
  )

(defpart 356
  :init-specs ((:texture (blue-beam-dest level-default-water))
    (:birth-func 'birth-func-set-quat)
    (:num 1.0)
    (:scale-x (meters 1.5))
    (:scale-y (meters 1))
    (:r 128.0 64.0)
    (:g 128.0 64.0)
    (:b 128.0 64.0)
    (:a 128.0)
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-14 left-multiply-quat))
    )
  )

(defpart 357
  :init-specs ((:texture (shockwave level-default-sprite))
    (:num 2.0)
    (:scale-x (meters 1.5))
    (:scale-y :copy scale-x)
    (:r 40.0)
    (:g 40.0)
    (:b 255.0)
    (:a 128.0)
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-3))
    (:func 'sparticle-fade-alpha-dist)
    (:rotate-y (degrees 0))
    )
  )

(defpartgroup gun-blue-muzzle-flare
  :id 106
  :flags (sp0 sp4)
  :bounds (static-bspherem 0 0 0 100)
  :parts ((sp-item 358) (sp-item 359))
  )

(defpartgroup group-gun-blue-2-muzzle-flare
  :id 107
  :duration (seconds 1)
  :linger-duration (seconds 1)
  :flags (sp0 sp4)
  :bounds (static-bspherem 0 0 0 100)
  :parts ((sp-item 360) (sp-item 361) (sp-item 362))
  )

(defpart 360
  :init-specs ((:texture (glow-soft level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 5) (meters 1))
    (:rot-x (degrees 6.7500005))
    (:rot-z (degrees 0) (degrees 3599))
    (:scale-y :copy scale-x)
    (:r 64.0)
    (:g 64.0)
    (:b 255.0)
    (:a 20.0 10.0)
    (:omega (degrees 6761.25))
    (:timer (seconds 0.005))
    (:flags (sp-cpuinfo-flag-3 glow))
    (:userdata 4096.0)
    )
  )

(defpart 361
  :init-specs ((:texture (lightning-anim-01 level-default-sprite))
    (:num 1.0 20.0)
    (:scale-x (meters 0.1) (meters 0.5))
    (:rot-x 4)
    (:rot-z (degrees 0) (degrees 3598.0002))
    (:scale-y (meters 1) (meters 0.5))
    (:r 128.0)
    (:g 128.0)
    (:b 255.0)
    (:a 128.0)
    (:fade-a -1.6)
    (:timer (seconds 0.3) (seconds 0.197))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:next-time (seconds 0.035))
    (:next-launcher 363)
    )
  )

(defpart 362
  :init-specs ((:texture (lightning-anim-01 level-default-sprite))
    (:birth-func 'birth-func-texture-group)
    (:num 1.0 5.0)
    (:scale-x (meters 1) (meters 1))
    (:rot-x 4)
    (:rot-z (degrees 0) (degrees 3598.0002))
    (:scale-y (meters 1) (meters 0.5))
    (:r 128.0)
    (:g 128.0)
    (:b 255.0)
    (:a 128.0)
    (:fade-a -1.6)
    (:timer (seconds 0.3) (seconds 0.197))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:userdata :data (new 'static 'boxed-array :type int32 5 1 0 #x405700 #x405800 #x405900))
    (:next-time (seconds 0.035))
    (:next-launcher 363)
    )
  )

(defpart 363
  :init-specs ((:r 64.0) (:g 64.0) (:fade-r -2.0) (:fade-g -0.8) (:fade-a -4.0))
  )

(defpart 364
  :init-specs ((:texture (gun-enemy-muzzleflash level-default-sprite))
    (:birth-func 'birth-func-set-quat)
    (:num 1.0)
    (:scale-x (meters 1) (meters 1))
    (:scale-y (meters 3) (meters 0.6))
    (:r 40.0)
    (:g 200.0)
    (:b 255.0)
    (:a 128.0)
    (:scalevel-x (meters 0.08))
    (:fade-r -4.0)
    (:fade-g -3.2)
    (:fade-a -6.4)
    (:timer (seconds 0.067))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-14 left-multiply-quat))
    )
  )

(defpartgroup group-gun-blue3-shot-impact
  :id 108
  :duration (seconds 1)
  :flags (sp0)
  :bounds (static-bspherem 0 0 0 100)
  :parts ((sp-item 285 :fade-after (meters 120) :falloff-to (meters 140) :period (seconds 2) :length (seconds 0.017))
    (sp-item 286 :flags (sp6) :period (seconds 2) :length (seconds 0.017))
    )
  )

(defpart 285
  :init-specs ((:texture (motion-blur-part level-default-sprite))
    (:num 8.0 16.0)
    (:scale-x (meters 2) (meters 2))
    (:rot-x 4)
    (:scale-y (meters 0.05) (meters 0.05))
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 64.0 128.0)
    (:omega (degrees 0.0225))
    (:vel-y (meters 0.016666668) (meters 0.1))
    (:fade-r -10.2 -10.2)
    (:fade-g -5.1 -5.1)
    (:friction 0.85)
    (:timer (seconds 0.167))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-3))
    (:func 'sparticle-motion-blur)
    (:conerot-x (degrees 0) (degrees 3600))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 286
  :init-specs ((:texture (starflash level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 0.1) (meters 0.4))
    (:rot-x (degrees 2.25))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 200.0)
    (:g 200.0 30.0)
    (:b 255.0)
    (:a 255.0)
    (:omega (degrees 4511.25))
    (:scalevel-x (meters 0.033333335) (meters 0.033333335))
    (:scalevel-y :copy scalevel-x)
    (:fade-r -10.2)
    (:fade-g -6.375)
    (:fade-a -8.5 -8.5)
    (:timer (seconds 0.1))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 409.6)
    )
  )

(defpart 358
  :init-specs ((:texture (glow level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 1) (meters 1))
    (:rot-x (degrees 2.25))
    (:scale-y :copy scale-x)
    (:r 40.0)
    (:g 40.0)
    (:b 255.0)
    (:a 128.0)
    (:omega (degrees 4511.25))
    (:fade-a -5.1)
    (:timer (seconds 0.05) (seconds 0.097))
    (:flags (sp-cpuinfo-flag-3 sp-cpuinfo-flag-14 glow))
    (:userdata 4096.0)
    (:func 'sparticle-track-gun-joint)
    )
  )

(defpart 359
  :init-specs ((:texture (lightning-anim-01 level-default-sprite))
    (:birth-func 'birth-func-texture-group)
    (:num 0.0 0.3)
    (:scale-x (meters 0.2) (meters 1.5))
    (:rot-x 4)
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 50.0)
    (:g 50.0)
    (:b 128.0)
    (:a 128.0)
    (:scalevel-x (meters 0) (meters -0.006666667))
    (:rotvel-z (degrees -0.26666668) (degrees 0.53333336))
    (:scalevel-y :copy scalevel-x)
    (:timer (seconds 0.017) (seconds 0.247))
    (:flags (sp-cpuinfo-flag-3 sp-cpuinfo-flag-14))
    (:userdata :data (new 'static 'boxed-array :type int32 5 1 0 #x405700 #x405800 #x405900))
    (:func 'sparticle-track-gun-joint)
    )
  )

(defpart 365
  :init-specs ((:texture (glow-hotdot level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 1))
    (:scale-y :copy scale-x)
    (:r 128.0 64.0)
    (:g 128.0 64.0)
    (:b 128.0 64.0)
    (:a 128.0)
    (:omega (degrees 4511.25))
    (:rotvel-z (degrees 0.3))
    (:fade-g -1.0666667)
    (:fade-b -1.0666667)
    (:fade-a -8.533334)
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-14 glow))
    (:userdata 4096.0)
    (:rotate-y (degrees 0))
    )
  )

(defpart 366
  :init-specs ((:texture (lightning-anim-01 level-default-sprite))
    (:birth-func 'birth-func-texture-group)
    (:num 1.0 4.0)
    (:scale-x (meters 1) (meters 2))
    (:rot-x 4)
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y (meters 1) (meters 2))
    (:r 50.0)
    (:g 50.0)
    (:b 128.0)
    (:a 128.0)
    (:scalevel-x (meters 0) (meters 0.006666667))
    (:rotvel-z (degrees -0.033333335) (degrees 0.06666667))
    (:scalevel-y :copy scalevel-x)
    (:timer (seconds 0.017) (seconds 0.065))
    (:flags (sp-cpuinfo-flag-3 sp-cpuinfo-flag-14))
    (:userdata :data (new 'static 'boxed-array :type int32 10 1 0 #x405700 #x405800 #x405900))
    (:func 'sparticle-texture-animate)
    )
  )

(defpart 367
  :init-specs ((:texture (lightning-anim-01 level-default-sprite))
    (:num 0.1 0.3)
    (:scale-x (meters 0.1) (meters 0.1))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 100.0)
    (:g 100.0)
    (:b 255.0)
    (:a 128.0 128.0)
    (:scalevel-x (meters 0.016666668) (meters 0.033333335))
    (:rotvel-z (degrees -0.033333335) (degrees 0.06666667))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.64)
    (:timer (seconds 0.667))
    (:flags (sp-cpuinfo-flag-3 sp-cpuinfo-flag-14))
    (:userdata :data (new 'static 'boxed-array :type int32 20 1 0 #x405700 #x405800 #x405900))
    (:func 'sparticle-texture-animate)
    )
  )

(defpart 368
  :init-specs ((:texture (lightning-anim-01 level-default-sprite))
    (:birth-func 'birth-func-texture-group)
    (:num 0.0 0.3)
    (:scale-x (meters 0.2) (meters 1.5))
    (:rot-x 4)
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 50.0)
    (:g 50.0)
    (:b 128.0)
    (:a 128.0)
    (:scalevel-x (meters 0) (meters -0.006666667))
    (:rotvel-z (degrees -0.26666668) (degrees 0.53333336))
    (:scalevel-y :copy scalevel-x)
    (:timer (seconds 0.017) (seconds 0.247))
    (:flags (sp-cpuinfo-flag-3 sp-cpuinfo-flag-14))
    (:userdata :data (new 'static 'boxed-array :type int32 5 1 0 #x405700 #x405800 #x405900))
    (:func 'sparticle-track-gun-joint)
    )
  )

(defpartgroup group-red-2-charge
  :id 109
  :duration (seconds 0)
  :flags (sp0 sp4)
  :bounds (static-bspherem 0 0 0 640)
  :parts ((sp-item 369 :flags (sp7))
    (sp-item 370 :flags (sp7))
    (sp-item 371 :flags (sp7))
    (sp-item 372 :flags (sp6))
    (sp-item 373 :flags (sp6))
    )
  )

(defpart 369
  :init-specs ((:texture (bigpuff level-default-sprite))
    (:birth-func 'birth-func-converge)
    (:num 0.5 0.5)
    (:x (meters 1))
    (:scale-x (meters 5))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 0.0)
    (:b 0.0)
    (:a 0.0)
    (:scalevel-x (meters -0.013333334))
    (:scalevel-y :copy scalevel-x)
    (:fade-a 0.035555556)
    (:accel-x (meters -0.00033333333))
    (:friction 0.98 0.01)
    (:timer (seconds 1.5))
    (:flags (sp-cpuinfo-flag-3 left-multiply-quat))
    (:func 'sparticle-red-2-converge)
    (:rotate-x (degrees 0) (degrees 36000))
    (:rotate-y (degrees 0) (degrees 36000))
    (:rotate-z (degrees 0) (degrees 36000))
    )
  )

(defpart 370
  :init-specs ((:texture (bigpuff level-default-sprite))
    (:birth-func 'birth-func-converge)
    (:num 0.5 0.5)
    (:x (meters 1))
    (:scale-x (meters 5))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 0.0)
    (:b 0.0)
    (:a 0.0)
    (:scalevel-x (meters -0.013333334))
    (:scalevel-y :copy scalevel-x)
    (:fade-a 0.035555556)
    (:accel-x (meters -0.00033333333))
    (:friction 0.98 0.01)
    (:timer (seconds 1.5))
    (:flags (left-multiply-quat))
    (:func 'sparticle-red-2-converge)
    (:rotate-x (degrees 0) (degrees 36000))
    (:rotate-y (degrees 0) (degrees 36000))
    (:rotate-z (degrees 0) (degrees 36000))
    )
  )

(defpart 371
  :init-specs ((:texture (specs level-default-sprite))
    (:num 0.1)
    (:scale-x (meters 5) (meters 2))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 32.0 20.0)
    (:b 32.0)
    (:a 0.0)
    (:scalevel-x (meters -0.013333334) (meters -0.01))
    (:scalevel-y :copy scalevel-x)
    (:fade-a 0.64)
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:func 'sparticle-track-gun-joint-player-y)
    (:next-time (seconds 0.335))
    (:next-launcher 374)
    )
  )

(defpart 374
  :init-specs ((:fade-a 0.0))
  )

(defpart 372
  :init-specs ((:texture (starflash level-default-sprite))
    (:num 0.5)
    (:scale-x (meters 1))
    (:rot-x (degrees 2.25))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 140.0)
    (:b 128.0)
    (:a 20.0 40.0)
    (:omega (degrees 4511.25))
    (:timer (seconds 0.167))
    (:flags (glow))
    (:userdata 409.6)
    (:func 'sparticle-track-gun-joint)
    )
  )

(defpart 373
  :init-specs ((:texture (ring level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 2.5))
    (:rot-x (degrees 22.5))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 0.0)
    (:b 0.0)
    (:a 10.0 5.0)
    (:omega (degrees 4511.25))
    (:timer (seconds 0.017))
    (:flags (glow))
    (:userdata 4096.0)
    (:func 'sparticle-track-gun-joint)
    )
  )

(defun sparticle-track-gun-joint-player-y ((arg0 sparticle-system) (arg1 sparticle-cpuinfo) (arg2 vector))
  (-> arg1 key)
  (let ((v1-1 *target*)
        (a1-1 36)
        )
    (vector<-cspace! (new 'stack-no-clear 'vector) (-> v1-1 node-list data a1-1))
    )
  (set! (-> arg2 x) (-> *target* gun fire-point x))
  (set! (-> arg2 y) (+ 4096.0 (-> *target* control trans y)))
  (set! (-> arg2 z) (-> *target* gun fire-point z))
  0
  (none)
  )

(define *last-player-pos* (new 'static 'vector))

(defun birth-func-converge ((arg0 sparticle-system) (arg1 sparticle-cpuinfo) (arg2 vector))
  (local-vars (v1-2 uint128) (v1-3 uint128))
  (rlet ((vf1 :class vf)
         (vf2 :class vf)
         )
    (let ((s3-0 (new 'stack-no-clear 'vector))
          (s5-0 (new 'stack-no-clear 'vector))
          (s4-0 (new 'stack 'vector4w))
          )
      (set! (-> s3-0 quad) (-> *target* gun fire-point quad))
      (set! (-> s5-0 x) (- (-> arg2 x) (-> s3-0 x)))
      (set! (-> s5-0 y) (- (-> arg2 y) (-> s3-0 y)))
      (set! (-> s5-0 z) (- (-> arg2 z) (-> s3-0 z)))
      (vector-normalize! s5-0 1.0)
      (.lvf vf1 (&-> s5-0 quad))
      (vftoi12.xyzw vf2 vf1)
      (.mov v1-2 vf2)
      (.ppach v1-3 (the-as uint128 0) v1-2)
      (set! (-> s4-0 quad) v1-3)
      (vitof15.xyzw vf1 vf2)
      (.svf (&-> s5-0 quad) vf1)
      (set! (-> arg1 user-float) (the-as float (-> s4-0 x)))
      (set! (-> arg1 omega) (the-as float (-> s4-0 y)))
      )
    (none)
    )
  )

;; WARN: Return type mismatch float vs none.
(defun sparticle-red-2-converge ((arg0 sparticle-system) (arg1 sparticle-cpuinfo) (arg2 vector))
  (local-vars (v1-4 uint128) (v1-5 uint128) (v1-6 float))
  (rlet ((vf1 :class vf)
         (vf2 :class vf)
         )
    (-> arg1 key)
    (let ((s5-0 (new 'stack-no-clear 'vector))
          (s4-0 (new 'stack-no-clear 'vector))
          )
      (let ((v1-2 (new 'stack 'vector4w)))
        (set! (-> v1-2 x) (the-as int (-> arg1 user-float)))
        (set! (-> v1-2 y) (the-as int (-> arg1 omega)))
        (let ((v1-3 (-> v1-2 quad)))
          (.pextlh v1-4 v1-3 0)
          )
        )
      (.pw.sra v1-5 v1-4 16)
      (.mov vf2 v1-5)
      (vitof12.xyzw vf1 vf2)
      (.svf (&-> s4-0 quad) vf1)
      (.mov v1-6 vf1)
      (-> arg1 timer)
      0.0
      0.0
      (let* ((f0-3 (* 0.0022222223 (the float (-> arg1 timer))))
             (f0-4 (* f0-3 f0-3))
             (f0-5 (- 1.0 f0-4))
             )
        (vector-normalize! s4-0 (lerp 10240.0 0.0 f0-5))
        )
      (set! (-> s5-0 quad) (-> *target* gun fire-point quad))
      (set! (-> arg2 x) (+ (-> s4-0 x) (-> s5-0 x)))
      (set! (-> arg2 y) (+ (-> s4-0 y) (-> s5-0 y)))
      (set! (-> arg2 z) (+ (-> s4-0 z) (-> s5-0 z)))
      )
    (none)
    )
  )

;; WARN: Return type mismatch float vs none.
(defun sparticle-red-2-glow-trail-halt ((arg0 sparticle-system) (arg1 sparticle-cpuinfo) (arg2 vector))
  (let ((f30-0 (-> arg1 omega))
        (s5-0 (new 'stack-no-clear 'vector))
        )
    (set! (-> s5-0 x) (-> arg1 vel-sxvel x))
    (set! (-> s5-0 y) (-> arg1 vel-sxvel y))
    (set! (-> s5-0 z) (-> arg1 vel-sxvel z))
    (set! (-> s5-0 w) 1.0)
    (let* ((f0-4 (vector-normalize-ret-len! s5-0 1.0))
           (f0-6 (- (* 300.0 f0-4) (* f30-0 (seconds-per-frame))))
           (f0-7 (fmax 0.0 f0-6))
           (f0-8 (* 0.0033333334 f0-7))
           )
      (vector-normalize! s5-0 f0-8)
      )
    (set! (-> arg1 vel-sxvel x) (-> s5-0 x))
    (set! (-> arg1 vel-sxvel y) (-> s5-0 y))
    (set! (-> arg1 vel-sxvel z) (-> s5-0 z))
    )
  (none)
  )

(define *gun-dark-3-nuke-fade-time* (seconds 2))

(when (or (zero? *gun-dark-3-nuke-fade-curve*) (!= loading-level global))
  (set! *gun-dark-3-nuke-fade-curve* (new 'loading-level 'curve-color-piecewise))
  (curve-color-piecewise-method-10 *gun-dark-3-nuke-fade-curve* 5 'loading-level (the-as uint #f))
  )

(set! (-> *gun-dark-3-nuke-fade-curve* pts data 0 first) 0.0)

(set! (-> *gun-dark-3-nuke-fade-curve* pts data 0 second x) 1.0)

(set! (-> *gun-dark-3-nuke-fade-curve* pts data 0 second y) 1.0)

(set! (-> *gun-dark-3-nuke-fade-curve* pts data 0 second z) 1.0)

(set! (-> *gun-dark-3-nuke-fade-curve* pts data 0 second w) 0.0)

(set! (-> *gun-dark-3-nuke-fade-curve* pts data 1 first) 0.05)

(set! (-> *gun-dark-3-nuke-fade-curve* pts data 1 second x) 1.0)

(set! (-> *gun-dark-3-nuke-fade-curve* pts data 1 second y) 1.0)

(set! (-> *gun-dark-3-nuke-fade-curve* pts data 1 second z) 1.0)

(set! (-> *gun-dark-3-nuke-fade-curve* pts data 1 second w) 1.0)

(set! (-> *gun-dark-3-nuke-fade-curve* pts data 2 first) 0.2)

(set! (-> *gun-dark-3-nuke-fade-curve* pts data 2 second x) 1.0)

(set! (-> *gun-dark-3-nuke-fade-curve* pts data 2 second y) 1.0)

(set! (-> *gun-dark-3-nuke-fade-curve* pts data 2 second z) 1.0)

(set! (-> *gun-dark-3-nuke-fade-curve* pts data 2 second w) 1.0)

(set! (-> *gun-dark-3-nuke-fade-curve* pts data 3 first) 0.5)

(set! (-> *gun-dark-3-nuke-fade-curve* pts data 3 second x) 1.0)

(set! (-> *gun-dark-3-nuke-fade-curve* pts data 3 second y) 1.0)

(set! (-> *gun-dark-3-nuke-fade-curve* pts data 3 second z) 1.0)

(set! (-> *gun-dark-3-nuke-fade-curve* pts data 3 second w) 0.78125)

(set! (-> *gun-dark-3-nuke-fade-curve* pts data 4 first) 1.0)

(set! (-> *gun-dark-3-nuke-fade-curve* pts data 4 second x) 1.0)

(set! (-> *gun-dark-3-nuke-fade-curve* pts data 4 second y) 0.78125)

(set! (-> *gun-dark-3-nuke-fade-curve* pts data 4 second z) 0.0)

(set! (-> *gun-dark-3-nuke-fade-curve* pts data 4 second w) 0.0)

(define *gun-dark-3-nuke-blur-segs* (the-as uint 10))

(define *gun-dark-3-nuke-blur-time* (seconds 5))

(when (or (zero? *gun-dark-3-nuke-blur-curve*) (!= loading-level global))
  (set! *gun-dark-3-nuke-blur-curve* (new 'loading-level 'curve2d-piecewise))
  (curve2d-piecewise-method-10 *gun-dark-3-nuke-blur-curve* 4 'loading-level (the-as int #f))
  )

(set! (-> *gun-dark-3-nuke-blur-curve* pts data 0 first) 0.0)

(set! (-> *gun-dark-3-nuke-blur-curve* pts data 0 second) 0.0)

(set! (-> *gun-dark-3-nuke-blur-curve* pts data 1 first) 0.1)

(set! (-> *gun-dark-3-nuke-blur-curve* pts data 1 second) 1.0)

(set! (-> *gun-dark-3-nuke-blur-curve* pts data 2 first) 0.5)

(set! (-> *gun-dark-3-nuke-blur-curve* pts data 2 second) 0.8)

(set! (-> *gun-dark-3-nuke-blur-curve* pts data 3 first) 1.0)

(set! (-> *gun-dark-3-nuke-blur-curve* pts data 3 second) 0.0)

(define *gun-dark-3-mushroom-speed* 8192.0)

(define *gun-dark-3-mushroom-size-time* (seconds 5))

(when (or (zero? *gun-dark-3-nuke-mushroom-size-curve-x*) (!= loading-level global))
  (set! *gun-dark-3-nuke-mushroom-size-curve-x* (new 'loading-level 'curve2d-piecewise))
  (curve2d-piecewise-method-10 *gun-dark-3-nuke-mushroom-size-curve-x* 2 'loading-level (the-as int #f))
  )

(set! (-> *gun-dark-3-nuke-mushroom-size-curve-x* pts data 0 first) 0.0)

(set! (-> *gun-dark-3-nuke-mushroom-size-curve-x* pts data 0 second) 32768.0)

(set! (-> *gun-dark-3-nuke-mushroom-size-curve-x* pts data 1 first) 1.0)

(set! (-> *gun-dark-3-nuke-mushroom-size-curve-x* pts data 1 second) 49152.0)

(when (or (zero? *gun-dark-3-nuke-mushroom-size-curve-y*) (!= loading-level global))
  (set! *gun-dark-3-nuke-mushroom-size-curve-y* (new 'loading-level 'curve2d-piecewise))
  (curve2d-piecewise-method-10 *gun-dark-3-nuke-mushroom-size-curve-y* 2 'loading-level (the-as int #f))
  )

(set! (-> *gun-dark-3-nuke-mushroom-size-curve-y* pts data 0 first) 0.0)

(set! (-> *gun-dark-3-nuke-mushroom-size-curve-y* pts data 0 second) 16384.0)

(set! (-> *gun-dark-3-nuke-mushroom-size-curve-y* pts data 1 first) 1.0)

(set! (-> *gun-dark-3-nuke-mushroom-size-curve-y* pts data 1 second) 20480.0)

(defpartgroup group-gun-dark3-stalk
  :id 110
  :duration (seconds 0.085)
  :linger-duration (seconds 8)
  :flags (sp0)
  :bounds (static-bspherem 0 0 0 640)
  :parts ((sp-item 375 :flags (sp3)) (sp-item 376) (sp-item 377) (sp-item 378 :flags (sp3)))
  )

(defpart 377
  :init-specs ((:texture (edge-cloud level-default-sprite))
    (:num 10.0)
    (:x (meters 0.5) (meters 1))
    (:y (meters -4) (meters 8))
    (:scale-x (meters 1))
    (:rot-x 4)
    (:rot-z (degrees -90))
    (:scale-y (meters 1))
    (:r 255.0)
    (:g 120.0 40.0)
    (:b 40.0 10.0)
    (:a 128.0)
    (:scalevel-x (meters 0.0016666667) (meters 0.0033333334))
    (:scalevel-y (meters 0.00066666666) (meters 0.00066666666))
    (:fade-r -0.042666666)
    (:fade-g -0.042666666)
    (:fade-b -0.042666666)
    (:fade-a -0.042666666)
    (:accel-y (meters 0.00033333333) (meters 0.0016666667))
    (:friction 0.82)
    (:timer (seconds 10))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-14))
    (:next-time (seconds 5))
    (:next-launcher 379)
    (:conerot-x (degrees -10) (degrees 20))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 379
  :init-specs ((:fade-a -0.08533333))
  )

(defpart 376
  :init-specs ((:texture (water-drops level-default-sprite))
    (:num 10.0)
    (:x (meters 0.5) (meters 1))
    (:y (meters -4) (meters 8))
    (:scale-x (meters 1))
    (:rot-x 4)
    (:rot-z (degrees -90))
    (:scale-y (meters 1))
    (:r 255.0)
    (:g 160.0 40.0)
    (:b 90.0 30.0)
    (:a 255.0)
    (:scalevel-x (meters 0.0016666667) (meters 0.0033333334))
    (:scalevel-y (meters 0.00066666666) (meters 0.00066666666))
    (:fade-a -0.1275 -0.1275)
    (:accel-y (meters 0.00033333333) (meters 0.0016666667))
    (:friction 0.82)
    (:timer (seconds 10))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:conerot-x (degrees -10) (degrees 20))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 378
  :init-specs ((:texture (glow-soft level-default-sprite))
    (:num 1.0)
    (:y (meters 5.5))
    (:scale-x (meters 17))
    (:rot-x (degrees 22.5))
    (:rot-z (degrees 90))
    (:scale-y (meters 7.2))
    (:r 128.0)
    (:g 128.0)
    (:b 128.0)
    (:a 255.0)
    (:omega (degrees 6761.25))
    (:vel-y (meters 0.0056666667))
    (:fade-a -0.10333333)
    (:timer (seconds 10))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 4096.0)
    )
  )

(defpart 375
  :init-specs ((:texture (glow-soft level-default-sprite))
    (:num 1.0)
    (:y (meters 5))
    (:scale-x (meters 30))
    (:rot-x (degrees 22.5))
    (:scale-y (meters 50))
    (:r 255.0)
    (:g 128.0)
    (:b 40.0)
    (:a 255.0)
    (:omega (degrees 6761.25))
    (:fade-a -0.102)
    (:timer (seconds 10))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 4096.0)
    )
  )

(defpartgroup group-gun-dark3-ring
  :id 111
  :flags (sp0)
  :bounds (static-bspherem 0 0 0 640)
  :parts ((sp-item 380 :flags (is-3d sp3))
    (sp-item 381 :flags (is-3d sp3))
    (sp-item 382 :flags (is-3d sp3))
    (sp-item 383 :period (seconds 10) :length (seconds 3))
    (sp-item 384 :flags (sp7) :period (seconds 10) :length (seconds 6))
    )
  )

(defpart 380
  :init-specs ((:texture (ring level-default-sprite))
    (:num 5.0)
    (:y (meters 7) (meters 0.3))
    (:scale-x (meters 6))
    (:rot-y (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 50.0)
    (:b 0.0)
    (:a 1.0)
    (:fade-a 0.000100000005)
    (:timer (seconds 10))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:next-time (seconds 3.335))
    (:next-launcher 385)
    )
  )

(defpart 385
  :init-specs ((:scalevel-x (meters 0.008333334))
    (:scalevel-y :copy scalevel-x)
    (:fade-a 0.21333334)
    (:next-time (seconds 2))
    (:next-launcher 386)
    )
  )

(defpart 386
  :init-specs ((:fade-a -0.425))
  )

(defpart 381
  :init-specs ((:texture (ring level-default-sprite))
    (:num 3.0)
    (:y (meters 8) (meters 0.3))
    (:scale-x (meters 10))
    (:rot-y (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 50.0)
    (:b 0.0)
    (:a 1.0)
    (:fade-a 0.000100000005)
    (:timer (seconds 10))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:next-time (seconds 3.835))
    (:next-launcher 385)
    )
  )

(defpart 382
  :init-specs ((:texture (ring level-default-sprite))
    (:num 1.0)
    (:y (meters 9) (meters 0.3))
    (:scale-x (meters 14))
    (:rot-y (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 50.0)
    (:b 0.0)
    (:a 1.0)
    (:fade-a 0.000100000005)
    (:timer (seconds 10))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:next-time (seconds 4.335))
    (:next-launcher 385)
    )
  )

(defpart 383
  :init-specs ((:texture (bigpuff level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 3))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 80.0)
    (:b 30.0)
    (:a 64.0 64.0)
    (:vel-z (meters 0.026666667) (meters 0.026666667))
    (:scalevel-x (meters 0.013333334))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.07111111 -0.07111111)
    (:timer (seconds 6))
    (:flags (sp-cpuinfo-flag-3))
    (:conerot-x (degrees -2) (degrees 4))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 384
  :init-specs ((:texture (water-drops level-default-sprite))
    (:num 1.0)
    (:x (meters 0) (meters 3))
    (:y (meters -2))
    (:scale-x (meters 6))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 80.0)
    (:b 30.0)
    (:a 64.0)
    (:vel-y (meters -0.006666667) (meters -0.01))
    (:scalevel-x (meters -0.006666667) (meters -0.006666667))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.10666667 -0.10666667)
    (:timer (seconds 2))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-3))
    (:conerot-x (degrees 160) (degrees 40))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(define *gun-dark-3-nuke-fade-time-small* (seconds 6))

(when (or (zero? *gun-dark-3-nuke-fade-curve-small*) (!= loading-level global))
  (set! *gun-dark-3-nuke-fade-curve-small* (new 'loading-level 'curve-color-piecewise))
  (curve-color-piecewise-method-10 *gun-dark-3-nuke-fade-curve-small* 5 'loading-level (the-as uint #f))
  )

(set! (-> *gun-dark-3-nuke-fade-curve-small* pts data 0 first) 0.0)

(set! (-> *gun-dark-3-nuke-fade-curve-small* pts data 0 second x) 1.0)

(set! (-> *gun-dark-3-nuke-fade-curve-small* pts data 0 second y) 1.0)

(set! (-> *gun-dark-3-nuke-fade-curve-small* pts data 0 second z) 1.0)

(set! (-> *gun-dark-3-nuke-fade-curve-small* pts data 0 second w) 0.0)

(set! (-> *gun-dark-3-nuke-fade-curve-small* pts data 1 first) 0.05)

(set! (-> *gun-dark-3-nuke-fade-curve-small* pts data 1 second x) 1.0)

(set! (-> *gun-dark-3-nuke-fade-curve-small* pts data 1 second y) 1.0)

(set! (-> *gun-dark-3-nuke-fade-curve-small* pts data 1 second z) 1.0)

(set! (-> *gun-dark-3-nuke-fade-curve-small* pts data 1 second w) 1.0)

(set! (-> *gun-dark-3-nuke-fade-curve-small* pts data 2 first) 0.2)

(set! (-> *gun-dark-3-nuke-fade-curve-small* pts data 2 second x) 1.0)

(set! (-> *gun-dark-3-nuke-fade-curve-small* pts data 2 second y) 1.0)

(set! (-> *gun-dark-3-nuke-fade-curve-small* pts data 2 second z) 1.0)

(set! (-> *gun-dark-3-nuke-fade-curve-small* pts data 2 second w) 1.0)

(set! (-> *gun-dark-3-nuke-fade-curve-small* pts data 3 first) 0.5)

(set! (-> *gun-dark-3-nuke-fade-curve-small* pts data 3 second x) 1.0)

(set! (-> *gun-dark-3-nuke-fade-curve-small* pts data 3 second y) 1.0)

(set! (-> *gun-dark-3-nuke-fade-curve-small* pts data 3 second z) 1.0)

(set! (-> *gun-dark-3-nuke-fade-curve-small* pts data 3 second w) 0.78125)

(set! (-> *gun-dark-3-nuke-fade-curve-small* pts data 4 first) 1.0)

(set! (-> *gun-dark-3-nuke-fade-curve-small* pts data 4 second x) 1.0)

(set! (-> *gun-dark-3-nuke-fade-curve-small* pts data 4 second y) 0.78125)

(set! (-> *gun-dark-3-nuke-fade-curve-small* pts data 4 second z) 0.0)

(set! (-> *gun-dark-3-nuke-fade-curve-small* pts data 4 second w) 0.0)

(define *gun-dark-3-nuke-blur-segs-small* (the-as uint 10))

(define *gun-dark-3-nuke-blur-time-small* (seconds 6))

(when (or (zero? *gun-dark-3-nuke-blur-curve-small*) (!= loading-level global))
  (set! *gun-dark-3-nuke-blur-curve-small* (new 'loading-level 'curve2d-piecewise))
  (curve2d-piecewise-method-10 *gun-dark-3-nuke-blur-curve-small* 4 'loading-level (the-as int #f))
  )

(set! (-> *gun-dark-3-nuke-blur-curve-small* pts data 0 first) 0.0)

(set! (-> *gun-dark-3-nuke-blur-curve-small* pts data 0 second) 0.0)

(set! (-> *gun-dark-3-nuke-blur-curve-small* pts data 1 first) 0.1)

(set! (-> *gun-dark-3-nuke-blur-curve-small* pts data 1 second) 1.0)

(set! (-> *gun-dark-3-nuke-blur-curve-small* pts data 2 first) 0.5)

(set! (-> *gun-dark-3-nuke-blur-curve-small* pts data 2 second) 0.8)

(set! (-> *gun-dark-3-nuke-blur-curve-small* pts data 3 first) 1.0)

(set! (-> *gun-dark-3-nuke-blur-curve-small* pts data 3 second) 0.0)

(defpartgroup group-gun-dark3-missile-trail
  :id 112
  :duration (seconds 3)
  :linger-duration (seconds 3)
  :flags (sp0)
  :bounds (static-bspherem 0 0 0 640)
  :parts ((sp-item 387))
  )

(defpartgroup group-gun-dark3-missile-trail-smoke
  :id 113
  :duration (seconds 3)
  :linger-duration (seconds 3)
  :flags (sp0)
  :bounds (static-bspherem 0 0 0 640)
  :parts ((sp-item 388 :flags (sp7)))
  )

(defpart 387
  :init-specs ((:texture (starflash level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 0.7) (meters 0.1))
    (:rot-x (degrees 22.5))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0 64.0)
    (:g 100.0)
    (:b 30.0)
    (:a 128.0 55.0)
    (:omega (degrees 4511.25))
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-3 sp-cpuinfo-flag-14 glow))
    (:userdata 4096.0)
    )
  )

(defpart 388
  :init-specs ((:texture (bigpuff level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 0.5))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 128.0)
    (:b 128.0)
    (:a 24.0 32.0)
    (:scalevel-x (meters 0.01))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.32)
    (:timer (seconds 0.335))
    (:flags (sp-cpuinfo-flag-2))
    (:rotate-y (degrees 0))
    )
  )

(defpartgroup group-gun-dark3-small
  :id 114
  :flags (sp0)
  :bounds (static-bspherem 0 0 0 640)
  :parts ((sp-item 389 :period (seconds 15) :length (seconds 6))
    (sp-item 390 :period (seconds 15) :length (seconds 3))
    (sp-item 391 :period (seconds 15) :length (seconds 0.035))
    (sp-item 392 :flags (sp3))
    )
  )

(defpart 389
  :init-specs ((:texture (motion-blur-part level-default-sprite))
    (:num 8.0)
    (:x (meters -10) (meters 20))
    (:y (meters -10) (meters 20))
    (:z (meters -10) (meters 20))
    (:scale-x (meters 0.04) (meters 0.04))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 20.0 40.0)
    (:b 0.0)
    (:a 128.0 128.0)
    (:omega (degrees 0.045))
    (:vel-y (meters 0) (meters 0.01))
    (:fade-a -0.2125 -0.2125)
    (:timer (seconds 5))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:func 'sparticle-motion-blur)
    (:next-time (seconds 0.017))
    (:next-launcher 393)
    (:conerot-x (degrees 0) (degrees 360))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 393
  :init-specs ((:accel-x (meters -0.0033333334) 1 (meters 0.006666667))
    (:accel-y (meters -0.0033333334) 1 (meters 0.006666667))
    (:accel-z (meters -0.0033333334) 1 (meters 0.006666667))
    (:next-time (seconds 0.067) (seconds 0.03))
    (:next-launcher 393)
    )
  )

(defpart 390
  :init-specs ((:texture (bigpuff level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 3))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 60.0 20.0)
    (:b 30.0)
    (:a 64.0)
    (:vel-z (meters 0.026666667) (meters 0.026666667))
    (:scalevel-x (meters 0.02))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.07111111 -0.07111111)
    (:timer (seconds 6))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-3))
    (:conerot-x (degrees -8) (degrees 16))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 391
  :init-specs ((:texture (explosion-edge level-default-sprite))
    (:num 20.0)
    (:scale-x (meters 3))
    (:rot-y (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 80.0 20.0)
    (:b 30.0)
    (:a 255.0)
    (:vel-y (meters 0.00033333333) (meters 0.0033333334))
    (:scalevel-x (meters 0.006666667))
    (:scalevel-y :copy scalevel-x)
    (:fade-g -0.032)
    (:fade-b -0.012)
    (:fade-a -0.102 -0.102)
    (:friction 0.999)
    (:timer (seconds 10))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-3 sp-cpuinfo-flag-14))
    (:func 'sparticle-2d-spline-align-instant)
    (:conerot-x (degrees 0) (degrees 360))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 392
  :init-specs ((:texture (glow-soft level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 30))
    (:rot-x (degrees 22.5))
    (:scale-y (meters 50))
    (:r 255.0)
    (:g 128.0)
    (:b 40.0)
    (:a 255.0)
    (:omega (degrees 6761.25))
    (:fade-a -0.17)
    (:timer (seconds 5))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 4096.0)
    )
  )

(defpartgroup group-gun3-dark-scorched-earth
  :id 115
  :flags (sp0 sp1)
  :bounds (static-bspherem 0 0 0 640)
  :parts ((sp-item 394 :flags (is-3d sp3 sp7)))
  )

(defpart 394
  :init-specs ((:texture (dirtpuff01 level-default-sprite))
    (:num 3.0)
    (:scale-x (meters 4) (meters 6))
    (:scale-y (meters 5) (meters 7))
    (:r 0.0)
    (:g 0.0)
    (:b 0.0)
    (:a 64.0)
    (:timer (seconds 10))
    (:flags (left-multiply-quat))
    (:next-time (seconds 6))
    (:next-launcher 395)
    (:rotate-y (degrees 0))
    )
  )

(defpart 395
  :init-specs ((:fade-a -0.21333334))
  )

(defpartgroup group-gun-dark2-black-hole
  :id 116
  :bounds (static-bspherem 0 0 0 10)
  :parts ((sp-item 396 :flags (sp6)) (sp-item 397 :flags (sp6)))
  )

(defpartgroup group-gun-dark2-black-hole-glow
  :id 117
  :bounds (static-bspherem 0 0 0 10)
  :parts ((sp-item 396 :flags (sp6)) (sp-item 397 :flags (sp6)))
  )

(defpart 396
  :init-specs ((:texture (middot level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 3))
    (:scale-y :copy scale-x)
    (:r 0.0)
    (:g 0.0)
    (:b 0.0)
    (:a 128.0)
    (:timer (seconds 0.017))
    (:flags ())
    )
  )

(defpart 397
  :init-specs ((:texture (glow-hotdot level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 6))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 0.0)
    (:b 0.0)
    (:a 100.0)
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-3))
    )
  )

(defpartgroup group-gravity-gun-rise
  :id 118
  :flags (sp0 sp4)
  :bounds (static-bspherem 0 0 0 30)
  :parts ((sp-item 398 :flags (sp7)) (sp-item 399 :flags (sp7)))
  )

(defpartgroup group-gravity-gun-rise-no-flare
  :id 119
  :flags (sp0 sp4)
  :bounds (static-bspherem 0 0 0 30)
  :parts ((sp-item 398 :flags (sp7)))
  )

(defpart 398
  :init-specs ((:texture (middot level-default-sprite))
    (:num 1.0)
    (:y (meters -0.3))
    (:scale-x (meters 0.05) (meters 0.1))
    (:scale-y :copy scale-x)
    (:r 80.0)
    (:g 200.0)
    (:b 128.0)
    (:a 128.0)
    (:omega (degrees 0.1125))
    (:scalevel-y (meters -0.00006666667))
    (:fade-a -0.21333334 -0.21333334)
    (:accel-y (meters 0.0001) (meters 0.0001))
    (:timer (seconds 2))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:func 'sparticle-motion-blur)
    (:rotate-y (degrees 0))
    )
  )

(defpart 399
  :init-specs ((:texture (starflash level-default-sprite))
    (:num 0.06)
    (:scale-x (meters 0))
    (:rot-x (degrees 45))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 80.0)
    (:g 100.0 50.0)
    (:b 128.0)
    (:a 128.0)
    (:omega (degrees 4511.25))
    (:scalevel-x (meters 0.0033333334) (meters 0.0033333334))
    (:scalevel-y :copy scalevel-x)
    (:timer (seconds 2))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-3 glow))
    (:userdata 8192.0)
    (:next-time (seconds 0.5) (seconds 0.497))
    (:next-launcher 400)
    (:rotate-y (degrees 0))
    )
  )

(defpart 400
  :init-specs ((:scalevel-x (meters -0.0033333334) (meters -0.0033333334)) (:scalevel-y :copy scalevel-x))
  )

(defpartgroup group-gravity-gun-muzzle
  :id 120
  :duration (seconds 0.5)
  :flags (sp0)
  :bounds (static-bspherem 0 0 0 640)
  :parts ((sp-item 401 :period (seconds 5) :length (seconds 0.017))
    (sp-item 402 :period (seconds 5) :length (seconds 0.017))
    )
  )

(defpart 401
  :init-specs ((:texture (colorflash level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 6))
    (:rot-x (degrees 22.5))
    (:scale-y (meters 10))
    (:r 128.0)
    (:g 128.0)
    (:b 128.0)
    (:a 128.0)
    (:omega (degrees 6767.9995))
    (:scalevel-x (meters -0.033333335))
    (:scalevel-y (meters 0.4))
    (:fade-r -1.6)
    (:fade-g -1.6)
    (:fade-b -1.6)
    (:timer (seconds 0.267))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 4096.0)
    )
  )

(defpart 402
  :init-specs ((:texture (rainbow-halo level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 5))
    (:rot-x (degrees 22.5))
    (:scale-y (meters 15))
    (:r 32.0)
    (:g 128.0)
    (:b 128.0)
    (:a 128.0)
    (:omega (degrees 6767.9995))
    (:scalevel-x (meters 0.1))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.85333335)
    (:timer (seconds 0.5))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 4096.0)
    )
  )

(defpartgroup group-gun-dark-1-upgrade-shot
  :id 121
  :duration (seconds 0)
  :flags (sp0 sp4)
  :bounds (static-bspherem 0 0 0 64)
  :parts ((sp-item 403 :flags (sp7)) (sp-item 404 :flags (sp7)) (sp-item 405 :flags (sp3 sp7)))
  )

(defpart 403
  :init-specs ((:texture (colorflash level-default-sprite))
    (:num 0.5)
    (:scale-x (meters 3) (meters 0.25))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 128.0)
    (:b 128.0)
    (:a 64.0 64.0)
    (:timer (seconds 0.167))
    (:flags (sp-cpuinfo-flag-3))
    (:func 'sparticle-track-root)
    (:rotate-y (degrees 0))
    )
  )

(defpart 404
  :init-specs ((:texture (water-radiate level-default-sprite))
    (:num 2.0)
    (:scale-x (meters 5))
    (:rot-x 4)
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y (meters 1) (meters 1))
    (:r 16.0)
    (:g 32.0 32.0)
    (:b 255.0)
    (:a 0.0)
    (:vel-y (meters -0.016666668))
    (:scalevel-x (meters -0.016666668) (meters 0.033333335))
    (:rotvel-z (degrees -0.2) (degrees 0.4))
    (:scalevel-y (meters -0.0016666667))
    (:timer (seconds 0.167) (seconds 0.165))
    (:flags (sp-cpuinfo-flag-3 left-multiply-quat))
    (:func 'sparticle-track-root)
    (:next-time (seconds 0.017))
    (:next-launcher 406)
    (:conerot-x (degrees -180) (degrees 360))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 406
  :init-specs ((:a 255.0) (:fade-a -1.28))
  )

(defpart 405
  :init-specs ((:num 1.0)
    (:rot-x 8)
    (:r 16384.0)
    (:g 1024.0)
    (:b 4096.0)
    (:timer (seconds 1.335))
    (:flags (distort))
    (:func 'sparticle-track-root)
    (:rotate-y (degrees 0))
    )
  )

(defun spt-func-part-gun-dark-1-upgrade-shot-edges ((arg0 sparticle-system) (arg1 sparticle-cpuinfo) (arg2 vector))
  (sparticle-track-root arg0 arg1 arg2)
  (sparticle-2d-spline-align-instant arg0 arg1 (the-as sprite-vec-data-2d arg2))
  (none)
  )
