;;-*-Lisp-*-
(in-package goal)

;; name: settings-h.gc
;; name in dgo: settings-h
;; dgos: GAME

;; +++cam-master-options
(defenum cam-master-options
  :type uint64
  :bitfield #t
  (HAVE_TARGET) ;; 1
  (SET_COMBINER_AXIS) ;; 2
  (FLIP_COMBINER) ;; 4
  (HAVE_EASE_TO_POS) ;; 8
  (IN_BASE_REGION) ;; 10
  (IGNORE_ANALOG) ;; 20
  (BLOCK_RIGHT_STICK) ;; 40
  (USE_L1_R1) ;; 80
  (READ_BUTTONS)
  (IMMEDIATE_STRING_MIN_MAX)
  )
;; ---cam-master-options


;; +++cam-slave-options
(defenum cam-slave-options
  :type uint64
  :bitfield #t
  (BUTT_CAM)
  (SAME_SIDE)
  (MOVE_SPHERICAL)
  (ALLOW_Z_ROT)
  (JUMP_PITCHES)
  (COLLIDE)
  (FIND_HIDDEN_TARGET)
  (DRAG)
  (PLAYER_MOVING_CAMERA)
  (LINE_OF_SIGHT)
  (MOVEMENT_BLOCKED)
  (SHRINK_MAX_ANGLE)
  (GOTO_GOOD_POINT)
  (BIKE_MODE)
  (NO_ROTATE)
  (STICKY_ANGLE)
  (BLOCK_RIGHT_STICK)
  (ALLOW_SHIFT_BUTTONS)
  (GUN_CAM)
  (WIDE_FOV)
  (RAPID_TRACKING)
  (EASE_SPLINE_IDX)
  (VERTICAL_FOLLOW_MATCHES_CAMERA)
  (HAVE_BUTT_HANDLE)
  (BOMBBOT)
  (JUMP_LAG)
  )
;; ---cam-slave-options


;; +++game-feature
(defenum game-feature
  :type uint64
  :bitfield #t
  )
;; ---game-feature


;; +++game-secrets
(defenum game-secrets
  :type uint64
  :bitfield #t
  )
;; ---game-secrets


;; DECOMP BEGINS

(deftype user-setting-data (structure)
  ((border-mode             symbol)
   (process-mask            process-mask)
   (unknown-int32           int32)
   (language                language-enum)
   (movie                   (pointer process)      :offset  32)
   (talking                 (pointer process))
   (spooling                (pointer process))
   (hint                    (pointer process))
   (ambient                 (pointer process))
   (video-mode              symbol)
   (aspect-ratio            symbol)
   (auto-save               symbol                 :offset  64)
   (bg-r                    float)
   (bg-g                    float)
   (bg-b                    float)
   (bg-a                    float)
   (bg-a-speed              float)
   (bg-a-force              float)
   (blur-a                  float)
   (blur-a-speed            float)
   (allow-progress          symbol)
   (allow-pause             symbol)
   (movie-name              symbol                 :offset 120)
   (weather                 symbol)
   (task-mask               task-mask              :offset 140)
   (duck                    symbol                 :offset 148)
   (attack                  symbol)
   (gun                     symbol)
   (board                   symbol)
   (jump                    symbol)
   (speed-mult              float)
   (features                uint64)
   (vehicles                uint64)
   (sfx-volume              float)
   (sfx-volume-movie        float)
   (music-volume            float)
   (music-volume-movie      float)
   (dialog-volume           float)
   (dialog-volume-talker    float)
   (ambient-volume          float)
   (ambient-volume-movie    float)
   (dynamic-ambient-volume  float)
   (talker-volume           float)
   (sound-flava             uint8)
   (sound-flava-priority    float)
   (mode-sound-bank         uint32)
   (sound-excitement        float)
   (sound-reverb            float)
   (stereo-mode             int32)
   (music                   symbol)
   (sound-stinger           int32)
   (spool-anim              spool-anim)
   (sound-mode              uint32)
   (task-manager            (pointer process))
   (task                    symbol)
   (airlock                 symbol)
   (minimap                 uint32)
   (sound-tune              uint32)
   (allow-continue          symbol)
   (subtitle                symbol                 :offset 304)
   (doorway                 symbol)
   (gem                     symbol)
   (half-speed              symbol)
   (gun-buoy                symbol)
   (double-jump             symbol)
   (pilot                   symbol)
   (pilot-exit              symbol)
   (pilot-death             basic)
   (speech-control          symbol)
   (vehicle-hijacking       symbol)
   (darkjak                 symbol)
   (lightjak                basic)
   (endlessfall             symbol)
   (rain                    float)
   (snow                    float)
   (exclusive-load          symbol)
   (render                  symbol)
   (allow-timeout           symbol)
   (mirror                  symbol)
   (movie-skip-frame        float)
   (allow-blackout          symbol)
   (race-minimap            int32)
   (beard                   symbol)
   (ignore-target           symbol)
   (subtitle-language       uint8)
   (sound-bank-load         symbol)
   (allow-error             symbol)
   (under-water-pitch-mod   float)
   (slow-time               float)
   (restart-info            basic                  :offset 428)
   (fail-info               basic)
   (death-info              basic)
   (quit-info               basic)
   (extra-bank-count        uint32)
   (extra-bank              pair               3)
   (borrow-count            uint32)
   (borrow                  pair               3)
   (exclusive-task-count    uint32)
   (exclusive-task          int32              3)
   (level-trans-time        int32)
   (scarf                   float)
   (goggles                 float)
   (board-trail             basic)
   (letterbox               float                  :offset 572)
   (letterbox-speed         float)
   (borrow-city-count       uint32                 :offset 620)
   (borrow-city             pair               3)
   (audio-language          language-enum          :offset 748)
   (special-volume          float                  :offset 796)
   (pad                     uint8              108 :offset 800)
   )
  (:methods
    (user-setting-data-method-9 (_type_ engine engine-pers engine) user-setting-data)
    (user-setting-data-method-10 (_type_ object symbol float uint) user-setting-data)
    )
  )


(deftype cam-setting-data (structure)
  ((fov                            degrees)
   (pov-handle                     handle  :offset  16)
   (pov-bone                       int32)
   (pov-offset                     vector  :inline)
   (string-default                 symbol)
   (string-max-length              meters)
   (string-min-length              meters)
   (string-max-height              meters)
   (string-min-height              meters)
   (string-cliff-height            meters)
   (string-camera-floor            meters)
   (string-camera-ceiling          meters)
   (gun-max-height                 meters)
   (gun-min-height                 meters)
   (string-local-down              vector  :inline)
   (slave-options                  cam-slave-options)
   (matrix-blend-max-angle         degrees)
   (matrix-blend-max-partial       float)
   (string-spline-max-move         meters)
   (string-spline-accel            meters)
   (string-spline-max-move-player  meters)
   (string-spline-accel-player     meters)
   (string-startup-vector          vector  :inline)
   (use-string-startup-vector      symbol)
   (look-at-point                  vector  :inline)
   (use-look-at-point              symbol)
   (target-height                  meters)
   (foot-offset                    meters)
   (head-offset                    meters)
   (teleport-on-entity-change      symbol)
   (entity-name                    string)
   (cam-slope                      string)
   (entity-or-mode-changed         symbol)
   (master-options                 cam-master-options)
   (entity-mask                    uint32)
   (mode-name                      symbol)
   (real-entity-name               string)
   (cam-mode                       symbol)
   (interp-time                    uint32)
   (no-intro                       symbol)
   (use-point-of-interest          symbol)
   (point-of-interest              vector  :inline)
   (handle-of-interest             handle)
   (mouse-tumble-point             vector  :inline)
   (use-mouse-tumble-point         symbol)
   (mouse-input                    symbol)
   (cpad1-skip-buttons             symbol)
   (butt-handle                    handle)
   (butt-angle                     float)
   (extra-follow-height            float)
   (interp-time-priority           uint32)
   (string-max-length-default      symbol)
   (string-min-length-default      symbol)
   (string-max-height-default      symbol)
   (string-min-height-default      symbol)
   (flip-vertical                  symbol)
   (flip-horizontal                symbol)
   (fov-priority                   float   :offset 384)
   (dummy                          object  98)
   )
  (:methods
    (cam-setting-data-method-9 (_type_ engine engine-pers engine) _type_)
    (cam-setting-data-method-10 (_type_ object (pointer process) float int) _type_)
    )
  )


(deftype setting-control (basic)
  ((user-current                  user-setting-data  :inline)
   (user-target                   user-setting-data  :inline)
   (user-default                  user-setting-data  :inline)
   (cam-current                   cam-setting-data   :inline)
   (cam-target                    cam-setting-data   :inline)
   (cam-default                   cam-setting-data   :inline)
   (engine                        engine)
   (engine-pers                   engine-pers)
   (engine-hi                     engine)
   (sound-stinger-time            time-frame)
   (sound-stinger-change-time     time-frame         4)
   (sound-excitement-change-time  time-frame)
   (sound-excitement-targ         float)
   (sound-excitement-level        uint32)
   )
  (:methods
    (new (symbol type int) _type_)
    (add-setting (_type_ process symbol object object object) none)
    (persist-with-delay (_type_ symbol time-frame symbol symbol float int) none)
    (set-setting (_type_ process symbol object object object) none)
    (remove-setting (_type_ process symbol) none)
    (kill-persister (_type_ engine-pers object) none)
    (setting-control-method-14 (_type_ object) connectable)
    (remove-setting-by-arg0 (_type_ object) none)
    (set-setting-by-param (_type_ symbol object object object) connection)
    (setting-control-method-17 () none)
    (setting-control-method-18 () none)
    (setting-control-method-19 () none)
    )
  )


(defmethod new setting-control ((allocation symbol) (type-to-make type) (arg0 int))
  (let ((s4-0 (object-new allocation type-to-make (the-as int (-> type-to-make size)))))
    (set! (-> s4-0 engine) ((method-of-type engine new) allocation engine 'setting-control arg0 connection))
    (set! (-> s4-0 engine-hi) ((method-of-type engine new) allocation engine 'setting-control arg0 connection))
    (set! (-> s4-0 engine-pers)
          ((method-of-type engine-pers new) allocation engine-pers 'setting-control arg0 connection-pers)
          )
    s4-0
    )
  )
