;;-*-Lisp-*-
(in-package goal)

;; name: sync-info-h.gc
;; name in dgo: sync-info-h
;; dgos: GAME

;; +++sync-flags
(defenum sync-flags
  :type uint64
  :bitfield #t
  (pong 0)
  )
;; ---sync-flags


;; DECOMP BEGINS

(deftype sync-info-params (structure)
  "Parameters used to set up a [[sync-info]]."
  ((sync-type   symbol)
   (sync-flags  sync-flags)
   (entity      basic)
   (period      uint32)
   (percent     float)
   (ease-in     float)
   (ease-out    float)
   (pause-in    float)
   (pause-out   float)
   )
  )


(deftype sync-info (structure)
  ((sync-flags  sync-flags)
   (offset      float)
   (period      uint32)
   )
  (:methods
    (sync-info-method-9 () none)
    (sync-info-method-10 () none)
    (sync-info-method-11 () none)
    (sync-info-method-12 () none)
    (sync-info-method-13 () none)
    (sync-info-method-14 () none)
    (sync-info-method-15 () none)
    )
  )


(deftype sync-linear (sync-info)
  ()
  :pack-me
  )


(deftype sync-eased (sync-info)
  ((tlo        float)
   (thi        float)
   (ylo        float)
   (m2         float)
   (yend       float)
   (pause-in   float)
   (pause-out  float)
   )
  :pack-me
  )


(deftype sync-paused (sync-info)
  ((pause-in   float)
   (pause-out  float)
   )
  )


(deftype delayed-rand-float (structure)
  ((min-time    int32)
   (max-time    int32)
   (max-val     float)
   (timer       int32)
   (start-time  time-frame)
   (value       float)
   )
  :pack-me
  (:methods
    (delayed-rand-float-method-9 () none)
    (delayed-rand-float-method-10 () none)
    (delayed-rand-float-method-11 () none)
    (delayed-rand-float-method-12 () none)
    )
  )


(deftype oscillating-float (structure)
  ((value    float)
   (target   float)
   (vel      float)
   (max-vel  float)
   (damping  float)
   (accel    float)
   )
  :allow-misaligned
  (:methods
    (oscillating-float-method-9 () none)
    (oscillating-float-method-10 () none)
    )
  )


(deftype bouncing-float (structure)
  ((osc         oscillating-float  :inline)
   (max-value   float)
   (min-value   float)
   (elasticity  float)
   (state       int32)
   )
  :allow-misaligned
  (:methods
    (bouncing-float-method-9 () none)
    (bouncing-float-method-10 () none)
    (bouncing-float-method-11 () none)
    (bouncing-float-method-12 () none)
    )
  )


(deftype delayed-rand-vector (structure)
  ((min-time    int32)
   (max-time    int32)
   (xz-max      float)
   (y-max       float)
   (timer       int32)
   (start-time  time-frame)
   (value       vector  :inline)
   )
  (:methods
    (delayed-rand-vector-method-9 () none)
    (delayed-rand-vector-method-10 () none)
    (delayed-rand-vector-method-11 () none)
    (delayed-rand-vector-method-12 () none)
    )
  )


(deftype oscillating-vector (structure)
  ((value    vector  :inline)
   (target   vector  :inline)
   (vel      vector  :inline)
   (max-vel  float)
   (damping  float)
   (accel    float)
   )
  (:methods
    (oscillating-vector-method-9 () none)
    (oscillating-vector-method-10 () none)
    )
  )
