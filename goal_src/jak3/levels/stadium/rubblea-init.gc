;;-*-Lisp-*-
(in-package goal)

;; name: rubblea-init.gc
;; name in dgo: rubblea-init
;; dgos: STAA

(define-extern *lpattack-adjacency* nav-network-data)

;; DECOMP BEGINS

(defun rubblea-login ((arg0 level))
  (format 0 "rubblea-login~%")
  0
  (none)
  )

(defun rubblea-activate ((arg0 level))
  (format 0 "rubblea-activate~%")
  (let ((v1-0 *traffic-info*)
        (a0-2 (-> arg0 name))
        )
    (set! (-> v1-0 vehicle-level) arg0)
    (set! (-> v1-0 vehicle-levels 10) a0-2)
    (set! (-> v1-0 vehicle-levels 12) a0-2)
    (set! (-> v1-0 vehicle-levels 13) a0-2)
    (set! (-> v1-0 vehicle-levels 14) a0-2)
    (set! (-> v1-0 vehicle-levels 15) a0-2)
    (set! (-> v1-0 vehicle-levels 16) a0-2)
    (set! (-> v1-0 vehicle-levels 17) a0-2)
    (set! (-> v1-0 vehicle-levels 18) a0-2)
    (set! (-> v1-0 vehicle-levels 19) a0-2)
    )
  (vehicle-manager-start (the-as process *entity-pool*))
  (if (and (nonzero? *nav-network*) *nav-network*)
      (init-by-other! *nav-network* arg0 *lpattack-adjacency*)
      )
  0
  (none)
  )

(defun rubblea-deactivate ((arg0 level))
  (format 0 "rubblea-deactivate~%")
  (let ((v1-0 *traffic-info*))
    (set! (-> v1-0 vehicle-level) (the-as level #f))
    )
  (vehicle-manager-kill)
  0
  (none)
  )

(defun lpattack-login ((arg0 level))
  (set! *nav-network* (new 'loading-level 'nav-network))
  (alloc-nav-network-for-level! *nav-network* 64 10)
  0
  (none)
  )

(defun lpattack-logout ((arg0 level))
  (set! *nav-network* (the-as nav-network 0))
  0
  (none)
  )
