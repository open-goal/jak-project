;;-*-Lisp-*-
(in-package goal)

;; name: stadium-scenes.gc
;; name in dgo: stadium-scenes
;; dgos: STAA

(define-extern *range-sat-explo-fma-color* curve-color-fast)
(define-extern *range-sat-explo-fma-alpha* curve2d-fast)
(define-extern *range-sat-explo-fma-scale-x* curve2d-fast)
(define-extern *range-sat-explo-fma-scale-y* curve2d-fast)
(define-extern *curve-sat-explo-fma-alpha* curve2d-fast)
(define-extern *curve-sat-explo-fma-scale-x* curve2d-fast)
(define-extern *curve-sat-explo-fma-scale-y* curve2d-fast)

;; DECOMP BEGINS

(defskelgroup skel-rub-rhino-door-fma rub-rhino-door rub-rhino-door-lod0-jg rub-rhino-door-idle-ja
              ((rub-rhino-door-lod0-mg (meters 999999)))
              :bounds (static-spherem 0 0 0 100)
              :origin-joint-index 3
              )

(defskelgroup skel-neo-satellite-rub-intro neo-satellite neo-satellite-lod0-jg neo-satellite-idle-ja
              ((neo-satellite-lod0-mg (meters 999999)))
              :bounds (static-spherem 0 0 0 10)
              :shadow neo-satellite-shadow-mg
              :origin-joint-index 3
              :global-effects 32
              )

(defskelgroup skel-rhino-wheel-stadium-fma rhino-wheel-fma rhino-wheel-fma-lod0-jg rhino-wheel-fma-idle-ja
              ((rhino-wheel-fma-lod0-mg (meters 999999)))
              :bounds (static-spherem 0 0 0 100)
              :origin-joint-index 3
              )

(load-scene (new 'static 'scene
              :name "palace-ruins-patrol-intro"
              :extra #f
              :info #f
              :scene-flags (scene-flags scf1 scf2 scf3 scf4)
              :mask-to-clear (process-mask movie projectile)
              :entity "scene-stage-205"
              :art-group "scenecamera"
              :anim "palace-ruins-patrol-intro"
              :parts 5
              :command-list '((253 (part-tracker
                       "group-fma-battle-amulet-glow"
                       entity
                       "battle-amulet"
                       joint
                       "main"
                       track
                       #t
                       duration
                       (frame-range 253 260)
                       )
                     )
                (302 (part-tracker
                       "group-fma-battle-amulet-glow"
                       entity
                       "battle-amulet"
                       joint
                       "main"
                       track
                       #t
                       duration
                       (frame-range 302 310)
                       )
                     )
                (314 (part-tracker
                       "group-fma-battle-amulet-glow"
                       entity
                       "battle-amulet"
                       joint
                       "main"
                       track
                       #t
                       duration
                       (frame-range 314 320)
                       )
                     )
                (322 (part-tracker
                       "group-fma-battle-amulet-glow"
                       entity
                       "battle-amulet"
                       joint
                       "main"
                       track
                       #t
                       duration
                       (frame-range 322 325)
                       )
                     )
                (331 (part-tracker
                       "group-fma-battle-amulet-glow"
                       entity
                       "battle-amulet"
                       joint
                       "main"
                       track
                       #t
                       duration
                       (frame-range 331 338)
                       )
                     )
                (342 (part-tracker
                       "group-fma-battle-amulet-glow"
                       entity
                       "battle-amulet"
                       joint
                       "main"
                       track
                       #t
                       duration
                       (frame-range 342 349)
                       )
                     )
                (500 (fadeout (frame-time-30 10)))
                (10000 (task-close! "palace-ruins-patrol-stadium"))
                )
              :cut-list '(0 40 82 133 224 288 510)
              :wait-ground-time (seconds 1)
              :actor (new 'static 'boxed-array :type scene-actor
                (new 'static 'scene-actor
                  :name "scenecamera"
                  :level #f
                  :art-group "skel-scenecamera"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :camera 4
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "jakc-highres"
                  :level 'ctygenb
                  :art-group "skel-jakc-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '(40 510)
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  :no-draw-seg #x80
                  )
                (new 'static 'scene-actor
                  :name "sidekick-highres"
                  :level 'stadium
                  :art-group "skel-sidekick-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "battle-amulet"
                  :level 'ctygenb
                  :art-group "skel-battle-amulet"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                )
              :load-point "stadium-tunnel"
              :end-point "stadium-start"
              :borrow '()
              :sfx-volume -1.0
              :ambient-volume -1.0
              :music-delay 1500.0
              :scene-task #x101
              :on-running '(sound-play-loop "ruin-amb-mov")
              :on-complete #f
              )
            )

(load-scene (new 'static 'scene
              :name "palace-ruins-attack-intro"
              :extra #f
              :info #f
              :scene-flags (scene-flags scf1 scf2 scf3 scf4)
              :mask-to-clear (process-mask movie projectile)
              :entity "scene-stage-190"
              :art-group "scenecamera"
              :anim "palace-ruins-attack-intro"
              :parts 44
              :command-list '((0 (kill "rub-rhino-door-5"))
                (783 (part-tracker
                       "group-fma-door-break-dust"
                       entity
                       "particleman"
                       joint
                       "particleA"
                       track
                       #t
                       duration
                       (frame-range 783 789)
                       )
                     )
                (805 (part-tracker
                       "group-fma-neo-satellite-explosion"
                       entity
                       "particleman"
                       joint
                       "particleB"
                       track
                       #t
                       duration
                       (frame-range 805 838)
                       )
                     )
                (810 (part-tracker
                       "group-fma-neo-satellite-explosion"
                       entity
                       "particleman"
                       joint
                       "particleC"
                       track
                       #t
                       duration
                       (frame-range 810 842)
                       )
                     )
                (10000 (task-close! "palace-ruins-attack-introduction"))
                )
              :cut-list '(74 137 184 254 313 388 463 507 580 689 799 824 866 899 971 1020 1062 1147 1244)
              :wait-ground-time (seconds 1)
              :actor (new 'static 'boxed-array :type scene-actor
                (new 'static 'scene-actor
                  :name "scenecamera"
                  :level #f
                  :art-group "skel-scenecamera"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :camera 4
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "particleman"
                  :level 'rubblea
                  :art-group "skel-particleman"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "jakc-highres"
                  :level 'stadiumb
                  :art-group "skel-jakc-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '(388 507 689 799 899 900 1020)
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  :no-draw-seg #x80
                  )
                (new 'static 'scene-actor
                  :name "sidekick-highres"
                  :level 'rubblea
                  :art-group "skel-sidekick-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "pecker-highres"
                  :level 'rubblea
                  :art-group "skel-pecker-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "damus-highres"
                  :level 'rubblea
                  :art-group "skel-damus-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '((980) (1062 1147))
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  :no-draw-seg #x2
                  )
                (new 'static 'scene-actor
                  :name "rhino-fma"
                  :level 'lpattack
                  :art-group "skel-rhino-fma"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "rhino-wheel-stadium-fma"
                  :level 'rubblea
                  :art-group "skel-rhino-wheel-stadium-fma"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "neo-satellite-rub-intro"
                  :level 'rubblea
                  :art-group "skel-neo-satellite-rub-intro"
                  :prefix "a-"
                  :draw-frames '((74 max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "neo-satellite-rub-intro"
                  :level 'rubblea
                  :art-group "skel-neo-satellite-rub-intro"
                  :prefix "b-"
                  :draw-frames '((74 max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "neo-satellite-rub-intro"
                  :level 'rubblea
                  :art-group "skel-neo-satellite-rub-intro"
                  :prefix "c-"
                  :draw-frames '((74 max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "neo-satellite-break"
                  :level 'rubblea
                  :art-group "skel-neo-satellite-break"
                  :prefix ""
                  :draw-frames '((805 max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "neo-satellite-break"
                  :level 'rubblea
                  :art-group "skel-neo-satellite-break"
                  :prefix "a-"
                  :draw-frames '((809 max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "rub-rhino-door-fma"
                  :level 'rubblea
                  :art-group "skel-rub-rhino-door-fma"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                )
              :load-point "rubblea-start"
              :end-point "rubblea-rhino"
              :borrow '((stadiuma 0 lpattack special))
              :sfx-volume -1.0
              :ambient-volume -1.0
              :music-delay 1500.0
              :scene-task #x103
              :on-running '(sound-play-loop "ruin-amb-mov")
              :on-complete #f
              )
            )

(defpartgroup group-fma-battle-amulet-glow
  :id 1005
  :flags (sp0 sp4)
  :bounds (static-bspherem 0 0 0 100)
  :parts ((sp-item 3663))
  )

(defpart 3663
  :init-specs ((:texture (glow-soft level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 0.4))
    (:rot-x (degrees 6.7500005))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 0.0)
    (:b 0.0)
    (:a 16.0)
    (:omega (degrees 4511.25))
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-3 glow))
    (:userdata 1228.8)
    )
  )

(defpartgroup group-fma-door-break-dust
  :id 1006
  :flags (sp0 sp4)
  :bounds (static-bspherem 0 0 0 100)
  :parts ((sp-item 3664 :flags (sp7)) (sp-item 3665 :flags (sp7)))
  )

(defpart 3664
  :init-specs ((:texture (edge-cloud level-default-sprite))
    (:birth-func 'birth-func-texture-group)
    (:num 30.0)
    (:y (meters 0) (meters 4))
    (:scale-x (meters 4) (meters 8))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 90.0 10.0)
    (:g 80.0 10.0)
    (:b 60.0 10.0)
    (:a 32.0 32.0)
    (:vel-z (meters 0.06666667) (meters 0.26666668))
    (:scalevel-x (meters 0.006666667) (meters 0.016666668))
    (:rotvel-z (degrees -0.2) (degrees 0.4))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.10666667)
    (:accel-y (meters 0.000033333334) (meters 0.00016666666))
    (:friction 0.99)
    (:timer (seconds 2))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-13))
    (:userdata :data (new 'static 'boxed-array :type int32 10 1 0 #x409b00 #x40a000))
    (:conerot-y (degrees 0) (degrees 70))
    (:rotate-y (degrees 0))
    (:rotate-z (degrees 0) (degrees 3600))
    )
  )

;; WARN: Return type mismatch float vs none.
(defun spt-birth-func-brightness-buggy-door ((arg0 sparticle-system) (arg1 sparticle-cpuinfo) (arg2 sparticle-launchinfo))
  (let ((s5-0 (+ (mod (the-as int (rand-uint31-gen *random-generator*)) 51) 200))
        (s3-0 (logand 0 (rand-uint31-gen *random-generator*)))
        (s4-0 (+ (mod (the-as int (rand-uint31-gen *random-generator*)) 11) 20))
        (v1-6 (+ (mod (the-as int (rand-uint31-gen *random-generator*)) 11) 60))
        )
    (set! (-> arg2 rotate-x) (the float (- s5-0 (the-as int s3-0))))
    (set! (-> arg2 rotate-y) (the float (- s5-0 s4-0)))
    (set! (-> arg2 rotate-z) (the float (- s5-0 v1-6)))
    )
  (none)
  )

(defpart 3665
  :init-specs ((:texture (rockbit01 level-default-sprite))
    (:birth-func 'spt-birth-func-part-buggy-door)
    (:num 20.0)
    (:y (meters 0) (meters 4))
    (:scale-x (meters 0.5) (meters 0.5))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 128.0)
    (:b 128.0)
    (:a 128.0)
    (:vel-z (meters 0.16666667) (meters 0.33333334))
    (:rotvel-z (degrees -2) (degrees 4))
    (:accel-y (meters -0.0016666667))
    (:timer (seconds 0.335))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-13 launch-along-z))
    (:userdata :data (new 'static 'boxed-array :type int32
                       10
                       1
                       0
                       #x408b00
                       #x408c00
                       #x40a100
                       #x40a200
                       #x40a300
                       #x40a400
                       #x40a500
                       #x40a600
                       #x40a700
                       #x40a800
                       #x40a900
                       #x40aa00
                       #x40ab00
                       #x40ac00
                       #x40ad00
                       #x40ae00
                       )
               )
    (:func 'sparticle-texture-animate)
    (:conerot-x (degrees 0) (degrees 70))
    (:rotate-y (degrees 0))
    (:rotate-z (degrees 0) (degrees 3600))
    )
  )

(defun spt-birth-func-part-buggy-door ((arg0 sparticle-system) (arg1 sparticle-cpuinfo) (arg2 sparticle-launchinfo) (arg3 object) (arg4 object))
  (birth-func-texture-group-2d arg0 arg1 arg2 arg3 arg4)
  (spt-birth-func-brightness-buggy-door arg0 arg1 arg2)
  (none)
  )

(defpartgroup group-fma-neo-satellite-explosion
  :id 1007
  :flags (sp0 sp4)
  :bounds (static-bspherem 0 0 0 20)
  :parts ((sp-item 3666 :flags (sp3))
    (sp-item 3667 :flags (sp3))
    (sp-item 3668 :flags (sp3))
    (sp-item 3669 :period (seconds 30) :length (seconds 0.167))
    (sp-item 3670 :period (seconds 30) :length (seconds 0.335))
    (sp-item 3671 :period (seconds 30) :length (seconds 0.667) :offset 300)
    (sp-item 3672 :period (seconds 30) :length (seconds 0.117))
    )
  )

(defpart 3672
  :init-specs ((:texture (motion-blur-part level-default-sprite))
    (:num 10.0)
    (:y (meters -3.5) (meters 2))
    (:scale-x (meters 5))
    (:rot-x 4)
    (:scale-y (meters 0.2) (meters 0.4))
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 255.0)
    (:omega (degrees 0.0675))
    (:vel-y (meters 0.26666668) (meters 0.33333334))
    (:fade-a -0.51 -0.51)
    (:accel-y (meters -0.0033333334) (meters -0.0016666667))
    (:friction 0.9 0.08)
    (:timer (seconds 1.5) (seconds 0.997))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:func 'sparticle-motion-blur)
    (:conerot-x (degrees 0) (degrees 140))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 3671
  :init-specs ((:texture (motion-blur-part level-default-sprite))
    (:num 10.0)
    (:x (meters -5) (meters 10))
    (:y (meters -5) (meters 10))
    (:z (meters -5) (meters 10))
    (:scale-x (meters 0.05) (meters 0.2))
    (:scale-y :copy scale-x)
    (:r 64.0 128.0)
    (:g 0.0 32.0)
    (:b 255.0)
    (:a 120.0 120.0)
    (:omega (degrees 0.045))
    (:vel-y (meters 0) (meters 0.01))
    (:fade-a -0.17 -0.1275)
    (:timer (seconds 10))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-14))
    (:func 'sparticle-motion-blur)
    (:next-time (seconds 0.017))
    (:next-launcher 3673)
    (:conerot-x (degrees 0) (degrees 360))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 3673
  :init-specs ((:accel-x (meters -0.0033333334) 1 (meters 0.006666667))
    (:accel-y (meters -0.0033333334) 1 (meters 0.006666667))
    (:accel-z (meters -0.0033333334) 1 (meters 0.006666667))
    (:next-time (seconds 0.067) (seconds 0.03))
    (:next-launcher 3673)
    )
  )

(defpart 3666
  :init-specs ((:texture (glow-soft level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 40))
    (:rot-x (degrees 225))
    (:scale-y :copy scale-x)
    (:r 160.0)
    (:g 0.0)
    (:b 255.0)
    (:a 64.0)
    (:fade-a -0.21333334)
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 40960.0)
    )
  )

(defpart 3667
  :init-specs ((:texture (bigpuff level-default-sprite))
    (:num 30.0)
    (:scale-x (meters 6) (meters 4))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 160.0)
    (:g 30.0)
    (:b 255.0)
    (:a 128.0)
    (:vel-y (meters 0) (meters 0.13333334))
    (:scalevel-x (meters 0.033333335))
    (:scalevel-y :copy scalevel-x)
    (:fade-r -0.06666667)
    (:fade-g -0.025)
    (:fade-a -0.10666667 -0.10666667)
    (:friction 0.99)
    (:timer (seconds 4))
    (:flags (sp-cpuinfo-flag-3))
    (:conerot-x (degrees 0) (degrees 360))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 3669
  :init-specs ((:texture (explosion-edge level-default-sprite))
    (:num 5.0)
    (:scale-x (meters 6) (meters 4))
    (:rot-y (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 80.0 20.0)
    (:g 30.0)
    (:b 128.0)
    (:a 128.0)
    (:vel-y (meters 0.6666667) (meters 0.26666668))
    (:scalevel-x (meters 0.06666667))
    (:scalevel-y :copy scalevel-x)
    (:fade-r -0.13333334)
    (:fade-g -0.05)
    (:fade-a -0.21333334 -0.21333334)
    (:friction 0.8)
    (:timer (seconds 2))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-3 sp-cpuinfo-flag-14))
    (:func 'sparticle-2d-spline-align-instant)
    (:conerot-x (degrees 0) (degrees 360))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 3670
  :init-specs ((:texture (explosion-nebula level-default-sprite))
    (:birth-func 'birth-func-curve)
    (:num 1.0)
    (:x (meters -4) (meters 8))
    (:y (meters -4) (meters 8))
    (:scale-x (meters 1))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 128.0)
    (:b 128.0)
    (:a 128.0)
    (:vel-y (meters 0.13333334) (meters 0.06666667))
    (:friction 0.9)
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-14))
    (:userdata 0.0)
    (:func 'live-func-curve)
    (:conerot-x (degrees 20) (degrees 90))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(if #t
    (set! *range-sat-explo-fma-color* (new 'static 'curve-color-fast
                                        :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                        :ys (new 'static 'inline-array vector 4
                                          (new 'static 'vector :x 32.0 :z 128.0 :w 128.0)
                                          (new 'static 'vector :x 64.0 :z 128.0 :w 128.0)
                                          (new 'static 'vector :x 64.0 :z 128.0 :w 128.0)
                                          (new 'static 'vector :x 64.0 :z 128.0 :w 128.0)
                                          )
                                        :one-over-x-deltas (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
                                        )
          )
    )

(if #t
    (set! *range-sat-explo-fma-alpha* (new 'static 'curve2d-fast
                                        :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                        :ys (new 'static 'vector :x 128.0 :y 128.0 :z 129.0 :w 130.0)
                                        :one-over-x-deltas (new 'static 'vector :y 1.0 :z 1.0 :w 1.0)
                                        )
          )
    )

(if #t
    (set! *range-sat-explo-fma-scale-x* (new 'static 'curve2d-fast
                                          :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                          :ys (new 'static 'vector :x 20.0 :y 40.0 :z 41.0 :w 42.0)
                                          :one-over-x-deltas (new 'static 'vector :x 20.0 :y 1.0 :z 1.0 :w 1.0)
                                          )
          )
    )

(if #t
    (set! *range-sat-explo-fma-scale-y* (new 'static 'curve2d-fast
                                          :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                          :ys (new 'static 'vector :x 20.0 :y 40.0 :z 41.0 :w 42.0)
                                          :one-over-x-deltas (new 'static 'vector :x 20.0 :y 1.0 :z 1.0 :w 1.0)
                                          )
          )
    )

(if #t
    (set! *curve-sat-explo-fma-alpha* (new 'static 'curve2d-fast
                                        :xs (new 'static 'vector :y -0.05 :z -0.7 :w -1.0)
                                        :ys (new 'static 'vector :y 1.0 :z 0.8)
                                        :one-over-x-deltas (new 'static 'vector :x 20.0 :y -0.3076923 :z -2.6666665 :w 1.0)
                                        )
          )
    )

(if #t
    (set! *curve-sat-explo-fma-scale-x* (new 'static 'curve2d-fast
                                          :xs (new 'static 'vector :y -0.2 :z -1.0 :w -2.0)
                                          :ys (new 'static 'vector :y 1.0 :z 1.5 :w 2.5)
                                          :one-over-x-deltas (new 'static 'vector :x 5.0 :y 0.625 :z 1.0 :w 1.0)
                                          )
          )
    )

(if #t
    (set! *curve-sat-explo-fma-scale-y* (new 'static 'curve2d-fast
                                          :xs (new 'static 'vector :y -0.2 :z -1.0 :w -2.0)
                                          :ys (new 'static 'vector :y 1.0 :z 1.5 :w 2.5)
                                          :one-over-x-deltas (new 'static 'vector :x 5.0 :y 0.625 :z 1.0 :w 1.0)
                                          )
          )
    )

(define *part-fma-neo-satellite-explosion-texture-curve-settings* (new 'static 'particle-curve-settings
                                                                    :lifetime-base (seconds 0.7)
                                                                    :lifetime-offset (seconds 0.6)
                                                                    :flags (particle-curve-flags pcf0)
                                                                    )
        )

(set! (-> *part-id-table* 3670 init-specs 16 initial-valuef)
      (the-as float *part-fma-neo-satellite-explosion-texture-curve-settings*)
      )

(set! (-> *part-fma-neo-satellite-explosion-texture-curve-settings* color-start) *range-sat-explo-fma-color*)

(set! (-> *part-fma-neo-satellite-explosion-texture-curve-settings* alpha-start) *range-sat-explo-fma-alpha*)

(set! (-> *part-fma-neo-satellite-explosion-texture-curve-settings* scale-x-start)
      *range-sat-explo-fma-scale-x*
      )

(set! (-> *part-fma-neo-satellite-explosion-texture-curve-settings* scale-y-start)
      *range-sat-explo-fma-scale-y*
      )

(set! (-> *part-fma-neo-satellite-explosion-texture-curve-settings* r-scalar) #f)

(set! (-> *part-fma-neo-satellite-explosion-texture-curve-settings* g-scalar) #f)

(set! (-> *part-fma-neo-satellite-explosion-texture-curve-settings* b-scalar) #f)

(set! (-> *part-fma-neo-satellite-explosion-texture-curve-settings* a-scalar) *curve-sat-explo-fma-alpha*)

(set! (-> *part-fma-neo-satellite-explosion-texture-curve-settings* scale-x-scalar)
      *curve-sat-explo-fma-scale-x*
      )

(set! (-> *part-fma-neo-satellite-explosion-texture-curve-settings* scale-y-scalar)
      *curve-sat-explo-fma-scale-y*
      )

(defpart 3668
  :init-specs ((:texture (starflash level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 30))
    (:rot-x (degrees 2.25))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 80.0)
    (:g 40.0)
    (:b 128.0)
    (:a 128.0)
    (:omega (degrees 6767.9995))
    (:scalevel-x (meters -0.33333334))
    (:scalevel-y :copy scalevel-x)
    (:timer (seconds 0.135))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 4096.0)
    )
  )
