;;-*-Lisp-*-
(in-package goal)

;; name: wasstada-mood.gc
;; name in dgo: wasstada-mood
;; dgos: WASSTADA

;; DECOMP BEGINS

(deftype wasstada-states (structure)
  ((flame0  flames-state  :inline)
   (flame1  flames-state  :inline)
   )
  )


(define *wasstada-mood-color-table*
  (new 'static 'mood-color-table :data (new 'static 'inline-array mood-color 8
                                         (new 'static 'mood-color
                                           :lgt-color (new 'static 'vector :x 1.5091 :y 1.2698)
                                           :amb-color (new 'static 'vector :x 0.4979 :y 0.4405 :z 0.5776 :w 1.0)
                                           )
                                         (new 'static 'mood-color
                                           :lgt-color (new 'static 'vector :x 1.6167 :y 1.4674 :z 1.0975)
                                           :amb-color (new 'static 'vector :x 0.4198 :y 0.5195 :z 0.5975 :w 1.0)
                                           )
                                         (new 'static 'mood-color
                                           :lgt-color (new 'static 'vector :x 1.8411 :y 1.6849 :z 1.4373)
                                           :amb-color (new 'static 'vector :x 0.4198 :y 0.5195 :z 0.5975 :w 1.0)
                                           )
                                         (new 'static 'mood-color
                                           :lgt-color (new 'static 'vector :x 1.6167 :y 1.4674 :z 1.0975)
                                           :amb-color (new 'static 'vector :x 0.4198 :y 0.5195 :z 0.5975 :w 1.0)
                                           )
                                         (new 'static 'mood-color
                                           :lgt-color (new 'static 'vector :x 1.6463 :y 1.2601)
                                           :amb-color (new 'static 'vector :x 0.3983 :y 0.4477 :z 0.5975 :w 1.0)
                                           )
                                         (new 'static 'mood-color
                                           :lgt-color (new 'static 'vector :x 0.4259 :y 0.3583 :z 0.7049)
                                           :amb-color (new 'static 'vector :x 0.3461 :y 0.4738 :z 0.3922 :w 1.0)
                                           )
                                         (new 'static 'mood-color
                                           :lgt-color (new 'static 'vector :x 0.2659 :y 0.4621 :z 0.5888)
                                           :amb-color (new 'static 'vector :x 0.3866 :y 0.2752 :z 0.2538 :w 1.0)
                                           )
                                         (new 'static 'mood-color
                                           :lgt-color (new 'static 'vector :x 0.3562 :y 0.4967 :z 0.2218)
                                           :amb-color (new 'static 'vector :x 0.3561 :y 0.3385 :z 0.2812 :w 1.0)
                                           )
                                         )
                                 )
  )

(define *wasstada-mood-fog-table*
  (new 'static 'mood-fog-table :data (new 'static 'inline-array mood-fog 8
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 136.3943 :y 92.6951 :z 52.9687 :w 128.0)
                                         :fog-dists (new 'static 'vector :y 1228800.0 :z 255.0 :w 180.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 154.1268 :y 114.1443 :z 76.7967 :w 128.0)
                                         :fog-dists (new 'static 'vector :y 3276800.0 :z 255.0 :w 180.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 171.8592 :y 135.5935 :z 100.625 :w 128.0)
                                         :fog-dists (new 'static 'vector :y 3276800.0 :z 255.0 :w 180.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 154.1268 :y 114.1443 :z 76.7967 :w 128.0)
                                         :fog-dists (new 'static 'vector :y 3276800.0 :z 255.0 :w 180.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 136.3943 :y 92.6951 :z 52.9687 :w 128.0)
                                         :fog-dists (new 'static 'vector :y 3276800.0 :z 255.0 :w 180.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 46.0 :y 27.0 :z 22.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :y 3276800.0 :z 255.0 :w 180.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 46.0 :y 27.0 :z 22.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :y 3276800.0 :z 255.0 :w 180.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 44.0 :y 35.0 :z 20.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :y 3276800.0 :z 255.0 :w 180.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       )
                               )
  )

(defbehavior update-mood-wasstada time-of-day-proc ((arg0 mood-context) (arg1 float) (arg2 int))
  (copy-mood-exterior arg0)
  (when (not (-> *time-of-day-context* overide-enable))
    (let* ((f2-0 (vector-vector-distance (target-pos 0) (new 'static 'vector :x 9521914.0 :y 365150.22 :z -2056695.8)))
           (f30-0 (fmax 0.0 (fmin 1.0 (* 0.0000032552084 (+ -442368.0 f2-0)))))
           )
      (overide-mood-color arg0 arg1 (the-as int *wasstada-mood-color-table*) f30-0)
      (overide-mood-fog arg0 arg1 (the-as int *wasstada-mood-fog-table*) f30-0)
      )
    )
  (let ((a0-6 (-> arg0 light-group 1)))
    (mem-copy! (the-as pointer a0-6) (the-as pointer (-> arg0 light-group)) 192)
    )
  (when (and (= (-> *level* level arg2 status) 'active)
             (< (the-as uint (-> *time-of-day-context* mode)) (the-as uint 9))
             )
    (-> arg0 state)
    (update-mood-flames arg0 5 1 0 0.9 0.000390625 1.5)
    (update-mood-flames arg0 6 1 8 1.0 0.00048828125 1.5)
    (set! (-> arg0 times 7 w) 1.0)
    )
  0
  (none)
  )

(defbehavior update-mood-copy-wasstada time-of-day-proc ((arg0 mood-context) (arg1 float) (arg2 int))
  (let ((v1-1 (level-get *level* 'wasstada)))
    (if (and v1-1 (= (-> v1-1 status) 'active))
        (mem-copy! (the-as pointer arg0) (the-as pointer (-> v1-1 mood-context)) 1968)
        (copy-mood-exterior arg0)
        )
    )
  0
  (none)
  )
