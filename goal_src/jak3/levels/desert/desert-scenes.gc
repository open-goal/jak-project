;;-*-Lisp-*-
(in-package goal)

;; name: desert-scenes.gc
;; name in dgo: desert-scenes
;; dgos: HGA, WIN, DST

(define-extern *range-oasis-hellcat-dust-color* curve-color-fast)
(define-extern *range-oasis-hellcat-dust-alpha* curve2d-fast)
(define-extern *range-oasis-hellcat-dust-scale-x* curve2d-fast)
(define-extern *range-oasis-hellcat-dust-scale-y* curve2d-fast)
(define-extern *curve-oasis-hellcat-dust-alpha* curve2d-fast)
(define-extern *curve-oasis-hellcat-dust-scale-x* curve2d-fast)
(define-extern *curve-oasis-hellcat-dust-scale-y* curve2d-fast)
(define-extern *range-terraformer-fma-explo-color* curve-color-fast)
(define-extern *range-terraformer-fma-explo-alpha* curve2d-fast)
(define-extern *range-terraformer-fma-explo-scale-x* curve2d-fast)
(define-extern *range-terraformer-fma-explo-scale-y* curve2d-fast)
(define-extern *curve-terraformer-fma-explo-alpha* curve2d-fast)
(define-extern *curve-terraformer-fma-explo-scale-x* curve2d-fast)
(define-extern *curve-terraformer-fma-explo-scale-y* curve2d-fast)
(define-extern *range-color-desert-scenes-impact-dust* curve-color-fast)
(define-extern *range-alpha-desert-scenes-impact-dust* curve2d-fast)
(define-extern *range-scale-desert-scenes-impact-dust-x* curve2d-fast)
(define-extern *range-scale-desert-scenes-impact-dust-y* curve2d-fast)
(define-extern *curve-alpha-desert-scenes-impact-dust* curve2d-fast)
(define-extern *curve-desert-scenes-impact-dust-x* curve2d-fast)
(define-extern *curve-desert-scenes-impact-dust-y* curve2d-fast)
(define-extern *range-terexplo-color* curve-color-fast)
(define-extern *range-terexplo-alpha* curve2d-fast)
(define-extern *range-terexplo-scale-x* curve2d-fast)
(define-extern *range-terexplo-scale-y* curve2d-fast)
(define-extern *curve-terexplo-alpha* curve2d-fast)
(define-extern *curve-terexplo-scale-x* curve2d-fast)
(define-extern *curve-terexplo-scale-y* curve2d-fast)

;; DECOMP BEGINS

(defskelgroup skel-desert-lizard-movie flut-saddle flut-saddle-lod0-jg -1
              ((flut-saddle-lod0-mg (meters 999999)))
              :bounds (static-spherem 0 2 0 4)
              :shadow flut-saddle-shadow-mg
              :origin-joint-index 3
              )

(defskelgroup skel-desert-eggwall-break desert-eggwall-break desert-eggwall-break-lod0-jg desert-eggwall-break-idle-ja
              ((desert-eggwall-break-lod0-mg (meters 999999)))
              :bounds (static-spherem 0 0 0 600)
              :origin-joint-index 3
              )

(defskelgroup skel-desert-eggwall-break-a desert-eggwall-break desert-eggwall-break-a-lod0-jg desert-eggwall-break-a-idle-ja
              ((desert-eggwall-break-a-lod0-mg (meters 999999)))
              :bounds (static-spherem 0 0 0 600)
              :origin-joint-index 3
              )

(defskelgroup skel-scorpion-wheel-fma scorpion-wheel-fma scorpion-wheel-fma-lod0-jg scorpion-wheel-fma-idle-ja
              ((scorpion-wheel-fma-lod0-mg (meters 999999)))
              :bounds (static-spherem 0 0 0 10)
              :shadow scorpion-wheel-fma-shadow-mg
              :origin-joint-index 3
              :shadow-joint-index 3
              )

(defskelgroup skel-mh-communicator mh-communicator mh-communicator-lod0-jg mh-communicator-idle-ja
              ((mh-communicator-lod0-mg (meters 999999)))
              :bounds (static-spherem 0 0 0 1)
              :origin-joint-index 3
              )

(defskelgroup skel-interceptor-wheel-fma interceptor-wheel-fma interceptor-wheel-fma-lod0-jg interceptor-wheel-fma-idle-ja
              ((interceptor-wheel-fma-lod0-mg (meters 999999)))
              :bounds (static-spherem 0 0 0 5.5)
              :shadow interceptor-wheel-fma-shadow-mg
              :origin-joint-index 3
              :shadow-joint-index 3
              )

(defskelgroup skel-jakc-scarf jakc-scarf jakc-scarf-lod0-jg jakc-scarf-idle-ja
              ((jakc-scarf-lod0-mg (meters 999999)))
              :bounds (static-spherem 0 0 0 5.5)
              :origin-joint-index 3
              )

(defskelgroup skel-des-terraformer-break des-terraformer-break des-terraformer-break-lod0-jg des-terraformer-break-idle-ja
              ((des-terraformer-break-lod0-mg (meters 999999)))
              :bounds (static-spherem 0 0 0 10000000)
              :origin-joint-index 3
              :global-effects 32
              )

(defskelgroup skel-des-terraformer-break-a des-terraformer-break des-terraformer-break-a-lod0-jg des-terraformer-break-a-idle-ja
              ((des-terraformer-break-a-lod0-mg (meters 999999)))
              :bounds (static-spherem 0 0 0 10000000)
              :origin-joint-index 3
              :global-effects 32
              )

(defskelgroup skel-terraformer-head terraformer-head terraformer-head-lod0-jg terraformer-head-idle-ja
              ((terraformer-head-lod0-mg (meters 20))
               (terraformer-head-lod0-mg (meters 40))
               (terraformer-head-lod0-mg (meters 999999))
               )
              :bounds (static-spherem 0 0 0 150)
              :origin-joint-index 3
              :global-effects 32
              )

(defskelgroup skel-terraformer-des-fma terraformer terraformer-lod0-jg terraformer-walk-ja
              ((terraformer-lod0-mg (meters 20)) (terraformer-lod0-mg (meters 40)) (terraformer-lod0-mg (meters 999999)))
              :bounds (static-spherem 0 175 75 25000)
              :origin-joint-index 3
              :global-effects 32
              )

(defskelgroup skel-terraformer-des-fma-leg-a terraformer-leg-a terraformer-leg-a-lod0-jg terraformer-leg-a-lf-walk-ja
              ((terraformer-leg-a-lod0-mg (meters 20))
               (terraformer-leg-a-lod0-mg (meters 40))
               (terraformer-leg-a-lod0-mg (meters 999999))
               )
              :bounds (static-spherem 0 38 0 50)
              :shadow terraformer-leg-a-shadow-mg
              :origin-joint-index 3
              :global-effects 32
              )

(defskelgroup skel-terraformer-des-fma-leg-b terraformer-leg-b terraformer-leg-b-lod0-jg terraformer-leg-b-lf-walk-ja
              ((terraformer-leg-b-lod0-mg (meters 20))
               (terraformer-leg-b-lod0-mg (meters 40))
               (terraformer-leg-b-lod0-mg (meters 999999))
               )
              :bounds (static-spherem 0 61 0 68)
              :shadow terraformer-leg-b-shadow-mg
              :origin-joint-index 4
              :global-effects 32
              )

(defskelgroup skel-terraformer-des-fma-leg-c terraformer-leg-c terraformer-leg-c-lod0-jg terraformer-leg-c-lf-walk-ja
              ((terraformer-leg-c-lod0-mg (meters 20))
               (terraformer-leg-c-lod0-mg (meters 40))
               (terraformer-leg-c-lod0-mg (meters 999999))
               )
              :bounds (static-spherem 0 25 0 75)
              :shadow terraformer-leg-c-shadow-mg
              :origin-joint-index 5
              :global-effects 32
              )

(defskelgroup skel-terraformer-des-fma-spike terraformer-spike terraformer-spike-lod0-jg terraformer-spike-idle-ja
              ((terraformer-spike-lod0-mg (meters 20))
               (terraformer-spike-lod0-mg (meters 40))
               (terraformer-spike-lod0-mg (meters 999999))
               )
              :bounds (static-spherem 0 40 20 35)
              :origin-joint-index 3
              :global-effects 32
              )

(defskelgroup skel-des-final-snake snake snake-lod0-jg snake-idle-ja
              ((snake-lod0-mg (meters 999999)))
              :bounds (static-spherem 0 0 0 5)
              :shadow snake-shadow-mg
              :origin-joint-index 3
              :shadow-joint-index 3
              )

(load-scene (new 'static 'scene
              :name "nest-destroy-barrier"
              :extra #f
              :info #f
              :scene-flags (scene-flags scf1 scf2 scf3 scf4)
              :mask-to-clear (process-mask movie projectile)
              :entity "scene-stage-118"
              :art-group "scenecamera"
              :anim "nest-destroy-barrier"
              :parts 6
              :command-list '((0
                  (send-event "desert-eggwall-1" 'die)
                  (task-close! "nest-eggs-wall")
                  (send-event *target* 'kill-vehicle)
                  (fadein (frame-time-30 10))
                  (part-tracker
                    "group-desert-buggy-dust"
                    entity
                    "particleman"
                    joint
                    "particleA"
                    track
                    #t
                    duration
                    (frame-range 0 85)
                    )
                  (part-tracker
                    "group-desert-buggy-dust"
                    entity
                    "particleman"
                    joint
                    "particleB"
                    track
                    #t
                    duration
                    (frame-range 0 85)
                    )
                  (part-tracker
                    "group-desert-buggy-dust"
                    entity
                    "particleman"
                    joint
                    "particleC"
                    track
                    #t
                    duration
                    (frame-range 0 85)
                    )
                  (part-tracker
                    "group-desert-buggy-dust"
                    entity
                    "particleman"
                    joint
                    "particleD"
                    track
                    #t
                    duration
                    (frame-range 0 85)
                    )
                  (hide-cloth *target*)
                  )
                (40
                  (part-tracker
                    "group-desert-buggy-dust-stop"
                    entity
                    "particleman"
                    joint
                    "particleA"
                    track
                    #t
                    duration
                    (frame-range 40 70)
                    )
                  (part-tracker
                    "group-desert-buggy-dust-stop"
                    entity
                    "particleman"
                    joint
                    "particleB"
                    track
                    #t
                    duration
                    (frame-range 40 70)
                    )
                  (send-event *target* 'draw #f)
                  )
                (280 (part-tracker
                       "group-desert-gun-charge"
                       entity
                       "sig-highres"
                       joint
                       "blast"
                       track
                       #t
                       duration
                       (frame-range 280 359)
                       )
                     )
                (360
                  (part-tracker
                    "group-desert-shot"
                    entity
                    "particleman"
                    joint
                    "particleG"
                    track
                    #t
                    duration
                    (frame-range 360 400)
                    )
                  (part-tracker
                    "group-desert-shot-muzzle"
                    entity
                    "sig-highres"
                    joint
                    "blast"
                    track
                    #f
                    duration
                    (frame-range 360 400)
                    )
                  )
                (400 (part-tracker
                       "group-desert-barrier-explosion"
                       entity
                       "particleman"
                       joint
                       "particleG"
                       track
                       #f
                       duration
                       (frame-range 400 490)
                       )
                     )
                (401
                  (part-tracker
                    "group-nst-barrier-egg-explode"
                    entity
                    "desert-eggwall-break"
                    joint
                    "k"
                    track
                    #t
                    duration
                    (frame-range 401 402)
                    )
                  (part-tracker
                    "group-nst-barrier-egg-explode"
                    entity
                    "desert-eggwall-break"
                    joint
                    "m"
                    track
                    #t
                    duration
                    (frame-range 401 402)
                    )
                  (part-tracker
                    "group-nst-barrier-egg-explode"
                    entity
                    "desert-eggwall-break"
                    joint
                    "n"
                    track
                    #t
                    duration
                    (frame-range 401 402)
                    )
                  (part-tracker
                    "group-nst-barrier-egg-explode"
                    entity
                    "desert-eggwall-break"
                    joint
                    "s"
                    track
                    #t
                    duration
                    (frame-range 401 402)
                    )
                  )
                (403 (part-tracker
                       "group-nst-barrier-egg-explode"
                       entity
                       "desert-eggwall-break"
                       joint
                       "v"
                       track
                       #t
                       duration
                       (frame-range 403 404)
                       )
                     )
                (414
                  (part-tracker
                    "group-nst-barrier-egg-explode"
                    entity
                    "desert-eggwall-break"
                    joint
                    "f"
                    track
                    #t
                    duration
                    (frame-range 414 415)
                    )
                  (part-tracker
                    "group-nst-barrier-egg-explode"
                    entity
                    "desert-eggwall-break"
                    joint
                    "r"
                    track
                    #t
                    duration
                    (frame-range 414 415)
                    )
                  )
                (416
                  (part-tracker
                    "group-nst-barrier-egg-explode"
                    entity
                    "desert-eggwall-break"
                    joint
                    "b"
                    track
                    #t
                    duration
                    (frame-range 416 417)
                    )
                  (part-tracker
                    "group-nst-barrier-egg-explode"
                    entity
                    "desert-eggwall-break"
                    joint
                    "g"
                    track
                    #t
                    duration
                    (frame-range 416 417)
                    )
                  )
                (417 (part-tracker
                       "group-nst-barrier-egg-explode"
                       entity
                       "desert-eggwall-break"
                       joint
                       "t"
                       track
                       #t
                       duration
                       (frame-range 417 418)
                       )
                     )
                (425
                  (part-tracker
                    "group-nst-barrier-egg-explode"
                    entity
                    "desert-eggwall-break"
                    joint
                    "d"
                    track
                    #t
                    duration
                    (frame-range 425 426)
                    )
                  (part-tracker
                    "group-nst-barrier-egg-explode"
                    entity
                    "desert-eggwall-break"
                    joint
                    "o"
                    track
                    #t
                    duration
                    (frame-range 425 426)
                    )
                  )
                (428
                  (part-tracker
                    "group-nst-barrier-egg-explode"
                    entity
                    "desert-eggwall-break"
                    joint
                    "e"
                    track
                    #t
                    duration
                    (frame-range 428 429)
                    )
                  (part-tracker
                    "group-nst-barrier-egg-explode"
                    entity
                    "desert-eggwall-break"
                    joint
                    "i"
                    track
                    #t
                    duration
                    (frame-range 428 429)
                    )
                  (part-tracker
                    "group-nst-barrier-egg-explode"
                    entity
                    "desert-eggwall-break"
                    joint
                    "p"
                    track
                    #t
                    duration
                    (frame-range 428 429)
                    )
                  )
                (431
                  (part-tracker
                    "group-nst-barrier-egg-explode"
                    entity
                    "desert-eggwall-break"
                    joint
                    "h"
                    track
                    #t
                    duration
                    (frame-range 431 432)
                    )
                  (part-tracker
                    "group-nst-barrier-egg-explode"
                    entity
                    "desert-eggwall-break"
                    joint
                    "q"
                    track
                    #t
                    duration
                    (frame-range 431 432)
                    )
                  (part-tracker
                    "group-nst-barrier-egg-explode"
                    entity
                    "desert-eggwall-break"
                    joint
                    "u"
                    track
                    #t
                    duration
                    (frame-range 431 432)
                    )
                  )
                (437 (part-tracker
                       "group-nst-barrier-egg-explode"
                       entity
                       "desert-eggwall-break"
                       joint
                       "j"
                       track
                       #t
                       duration
                       (frame-range 437 438)
                       )
                     )
                (453 (part-tracker
                       "group-nst-barrier-egg-explode"
                       entity
                       "desert-eggwall-break"
                       joint
                       "c"
                       track
                       #t
                       duration
                       (frame-range 453 454)
                       )
                     )
                (490 (fadeout (frame-time-30 10)))
                (10000 (want-vehicle "scorpion"))
                )
              :cut-list '()
              :wait-ground-time (seconds 1)
              :actor (new 'static 'boxed-array :type scene-actor
                (new 'static 'scene-actor
                  :name "scenecamera"
                  :level #f
                  :art-group "skel-scenecamera"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :camera 4
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "particleman"
                  :level 'desertg
                  :art-group "skel-particleman"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "jakc-highres"
                  :level 'lnstcst
                  :art-group "skel-jakc-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "sidekick-highres"
                  :level 'lnstcst
                  :art-group "skel-sidekick-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "sig-highres"
                  :level 'lnstcst
                  :art-group "skel-sig-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "desert-eggwall-break"
                  :level 'lnstcst
                  :art-group "skel-desert-eggwall-break"
                  :prefix ""
                  :draw-frames '((285 max))
                  :scissor-frames '((480 490))
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "desert-eggwall-break-a"
                  :level 'lnstcst
                  :art-group "skel-desert-eggwall-break-a"
                  :prefix "a-"
                  :draw-frames '((285 max))
                  :scissor-frames '((480 490))
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "v-scorpion"
                  :level 'wasall
                  :art-group "skel-v-scorpion"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "scorpion-wheel-fma"
                  :level 'lnstcst
                  :art-group "skel-scorpion-wheel-fma"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                )
              :load-point "desertg-egg-wall-scene"
              :end-point "desert-nest-entrance"
              :borrow '()
              :sfx-volume -1.0
              :ambient-volume -1.0
              :music-delay 1500.0
              :on-running #f
              :on-complete #f
              )
            )

(defpartgroup group-desert-gun-charge
  :id 345
  :linger-duration (seconds 0)
  :flags (sp0 sp4)
  :bounds (static-bspherem 0 0 0 10)
  :parts ((sp-item 1488 :flags (sp7))
    (sp-item 1489 :flags (sp7))
    (sp-item 1490 :flags (sp6))
    (sp-item 1491 :flags (sp6))
    )
  )

(defpart 1488
  :init-specs ((:texture (bigpuff level-default-sprite))
    (:num 0.5 0.5)
    (:x (meters 2))
    (:scale-x (meters 7))
    (:scale-y :copy scale-x)
    (:r 0.0)
    (:g 0.0)
    (:b 255.0)
    (:a 0.0)
    (:scalevel-x (meters -0.016666668))
    (:scalevel-y :copy scalevel-x)
    (:fade-a 0.053333335)
    (:accel-x (meters -0.00033333333))
    (:friction 0.98 0.01)
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-3 left-multiply-quat))
    (:rotate-x (degrees 0) (degrees 36000))
    (:rotate-y (degrees 0) (degrees 36000))
    (:rotate-z (degrees 0) (degrees 36000))
    )
  )

(defpart 1489
  :init-specs ((:texture (dust-sparkle desert-sprite))
    (:num 0.1)
    (:scale-x (meters 5) (meters 2))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 32.0)
    (:g 32.0 20.0)
    (:b 255.0)
    (:a 0.0)
    (:scalevel-x (meters -0.013333334) (meters -0.01))
    (:scalevel-y :copy scalevel-x)
    (:fade-a 0.64)
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:next-time (seconds 0.335))
    (:next-launcher 1492)
    )
  )

(defpart 1492
  :init-specs ((:fade-a 0.0))
  )

(defpart 1490
  :init-specs ((:texture (starflash level-default-sprite))
    (:num 0.5)
    (:scale-x (meters 1))
    (:rot-x (degrees 2.25))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 140.0)
    (:b 255.0)
    (:a 20.0 40.0)
    (:omega (degrees 4511.25))
    (:timer (seconds 0.167))
    (:flags (glow))
    (:userdata 409.6)
    )
  )

(defpart 1491
  :init-specs ((:texture (ring level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 2.5))
    (:rot-x (degrees 22.5))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 0.0)
    (:g 0.0)
    (:b 255.0)
    (:a 10.0 5.0)
    (:omega (degrees 4511.25))
    (:timer (seconds 0.017))
    (:flags (glow))
    (:userdata 4096.0)
    )
  )

(defpartgroup group-desert-shot-muzzle
  :id 346
  :flags (sp0 sp4)
  :bounds (static-bspherem 0 0 0 64)
  :parts ((sp-item 1493 :flags (sp3 sp7)))
  )

(defpart 1493
  :init-specs ((:texture (motion-blur-part level-default-sprite))
    (:num 100.0)
    (:scale-x (meters 1))
    (:scale-y (meters 0.2))
    (:r 32.0)
    (:g 32.0 20.0)
    (:b 255.0)
    (:a 255.0)
    (:vel-z (meters 0.2))
    (:scalevel-x (meters -0.0033333334))
    (:scalevel-y (meters -0.00066666666))
    (:fade-a -2.55)
    (:friction 0.96)
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:func 'sparticle-2d-spline-align-instant)
    (:conerot-x (degrees 0) (degrees 30))
    (:rotate-z (degrees 0) (degrees 3600))
    )
  )

(defpartgroup group-desert-shot
  :id 347
  :flags (sp0 sp4)
  :bounds (static-bspherem 0 0 0 64)
  :parts ((sp-item 1494 :flags (sp7) :period (seconds 10) :length (seconds 1.167))
    (sp-item 1495 :flags (sp7) :period (seconds 10) :length (seconds 1.167))
    (sp-item 1496 :flags (sp3 sp7))
    )
  )

(defpart 1494
  :init-specs ((:texture (colorflash level-default-sprite))
    (:num 0.5)
    (:scale-x (meters 6) (meters 0.5))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 128.0)
    (:b 128.0)
    (:a 64.0 64.0)
    (:timer (seconds 0.167))
    (:flags (sp-cpuinfo-flag-3))
    (:func 'sparticle-track-root)
    (:rotate-y (degrees 0))
    )
  )

(defpart 1495
  :init-specs ((:texture (water-radiate level-default-sprite))
    (:num 2.0)
    (:scale-x (meters 10))
    (:rot-x 4)
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y (meters 2) (meters 2))
    (:r 16.0)
    (:g 32.0 32.0)
    (:b 255.0)
    (:a 0.0)
    (:vel-y (meters -0.016666668))
    (:scalevel-x (meters -0.033333335) (meters 0.06666667))
    (:rotvel-z (degrees -0.2) (degrees 0.4))
    (:scalevel-y (meters -0.0033333334))
    (:timer (seconds 0.167) (seconds 0.165))
    (:flags (sp-cpuinfo-flag-3 left-multiply-quat))
    (:func 'sparticle-track-root)
    (:next-time (seconds 0.017))
    (:next-launcher 1497)
    (:conerot-x (degrees -180) (degrees 360))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 1497
  :init-specs ((:a 255.0) (:fade-a -1.28))
  )

(defpart 1496
  :init-specs ((:num 1.0)
    (:rot-x 8)
    (:r 32768.0)
    (:g 2048.0)
    (:b 8192.0)
    (:timer (seconds 1.335))
    (:flags (distort))
    (:func 'sparticle-track-root)
    (:rotate-y (degrees 0))
    )
  )

(defun spt-func-part-desert-shot-edges ((arg0 sparticle-system) (arg1 sparticle-cpuinfo) (arg2 sparticle-launchinfo))
  (sparticle-track-root arg0 arg1 (the-as vector arg2))
  (sparticle-2d-spline-align-instant arg0 arg1 (the-as sprite-vec-data-2d arg2))
  (none)
  )

(defpartgroup group-desert-barrier-explosion
  :id 348
  :flags (sp0 sp4)
  :bounds (static-bspherem 0 0 0 20)
  :parts ((sp-item 1499 :period (seconds 4) :length (seconds 0.25))
    (sp-item 1500 :period (seconds 4) :length (seconds 0.335))
    (sp-item 1501 :period (seconds 4) :length (seconds 0.035))
    (sp-item 1502 :flags (sp3))
    (sp-item 1503 :flags (sp3))
    (sp-item 1504 :flags (sp3) :binding 1498)
    (sp-item 1504 :flags (sp3) :binding 1498)
    (sp-item 1504 :flags (sp3) :binding 1498)
    (sp-item 1504 :flags (sp3) :binding 1498)
    (sp-item 1504 :flags (sp3) :binding 1498)
    (sp-item 1504 :flags (sp3) :binding 1498)
    (sp-item 1504 :flags (sp3) :binding 1498)
    (sp-item 1504 :flags (sp3) :binding 1498)
    (sp-item 1504 :flags (sp3) :binding 1498)
    (sp-item 1504 :flags (sp3) :binding 1498)
    (sp-item 1498 :flags (sp2))
    (sp-item 1498 :flags (sp2))
    (sp-item 1498 :flags (sp2))
    (sp-item 1498 :flags (sp2))
    (sp-item 1498 :flags (sp2))
    (sp-item 1498 :flags (sp2))
    (sp-item 1498 :flags (sp2))
    (sp-item 1498 :flags (sp2))
    (sp-item 1498 :flags (sp2))
    (sp-item 1498 :flags (sp2))
    )
  )

(defpart 1499
  :init-specs ((:texture (explosion-edge level-default-sprite))
    (:num 3.0)
    (:scale-x (meters 0.5) (meters 4))
    (:scale-y :copy scale-x)
    (:r 80.0 80.0)
    (:g 128.0)
    (:b 10.0)
    (:a 100.0 100.0)
    (:vel-y (meters 0.1) (meters 1))
    (:scalevel-x (meters 0.13333334) (meters 0.26666668))
    (:scalevel-y (meters 0.4) (meters 0.13333334))
    (:fade-a -2.0)
    (:friction 0.85)
    (:timer (seconds 2))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-14))
    (:func 'spt-func-part-desert-barrier-puffs)
    (:next-time (seconds 0.167))
    (:next-launcher 1505)
    (:conerot-x (degrees 0) (degrees 3600))
    (:conerot-z (degrees 0) (degrees 3600))
    (:conerot-radius (meters 0) (meters 0.5))
    )
  )

(defun spt-func-spt-func-part-desert-barrier-puffs ((arg0 sparticle-system) (arg1 sparticle-cpuinfo) (arg2 sparticle-launchinfo))
  (sparticle-motion-blur arg0 arg1 (the-as vector arg2))
  (check-drop-group-center arg0 arg1 arg2)
  (none)
  )

(defpart 1505
  :init-specs ((:scalevel-x (meters 0.026666667))
    (:scalevel-y (meters 0.06666667))
    (:fade-r -0.09090909)
    (:fade-b -0.018181818)
    (:fade-a -0.27272728 -0.27272728)
    (:friction 0.95)
    )
  )

(defpart 1500
  :init-specs ((:texture (bigpuff level-default-sprite))
    (:num 4.0)
    (:x (meters 0) (meters 0.5))
    (:scale-x (meters 1) (meters 2))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 80.0 80.0)
    (:g 128.0)
    (:b 0.0)
    (:a 128.0 128.0)
    (:vel-y (meters 0.13333334) (meters 0.26666668))
    (:scalevel-x (meters 0.02) (meters 0.04))
    (:scalevel-y :copy scalevel-x)
    (:fade-r -0.6666667)
    (:fade-g -0.36)
    (:fade-b -0.64)
    (:fade-a -0.85 -0.85)
    (:friction 0.9)
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-3 sp-cpuinfo-flag-14))
    (:func 'check-drop-group-center)
    (:conerot-x (degrees 0) (degrees 90))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 1501
  :init-specs ((:texture (water-drops level-default-sprite))
    (:num 100.0)
    (:z (meters 6) (meters 6))
    (:scale-x (meters 1) (meters 2))
    (:rot-z (degrees 0) (degrees 3600))
    (:scale-y :copy scale-x)
    (:r 80.0 80.0)
    (:g 128.0)
    (:b 0.0)
    (:a 64.0 64.0)
    (:vel-y (meters 0.06666667) (meters 0.033333335))
    (:scalevel-x (meters 0.05))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.14222223 -0.14222223)
    (:accel-y (meters -0.0013333333) (meters -0.0013333333))
    (:timer (seconds 3))
    (:flags (sp-cpuinfo-flag-2 launch-along-z))
    (:func 'check-drop-group-center)
    (:conerot-x (degrees 0) (degrees 90))
    (:rotate-y (degrees 0) (degrees 3600))
    (:rotate-z (degrees 0) (degrees 3600))
    )
  )

(defpart 1502
  :init-specs ((:texture (motion-blur-part level-default-sprite))
    (:num 200.0)
    (:x (meters 0) (meters 0.5))
    (:scale-x (meters 0.4) (meters 0.8))
    (:scale-y :copy scale-x)
    (:r 80.0 80.0)
    (:g 128.0)
    (:b 10.0)
    (:a 100.0 100.0)
    (:omega (degrees 0.0225))
    (:vel-y (meters 0.33333334) (meters 0.6666667))
    (:scalevel-x (meters -0.001) (meters -0.0013333333))
    (:scalevel-y :copy scalevel-x)
    (:accel-y (meters -0.00066666666) (meters -0.0026666666))
    (:friction 0.94)
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-3))
    (:func 'spt-func-part-desert-barrier-sparks)
    (:conerot-x (degrees 0) (degrees 90))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defun spt-func-spt-func-part-desert-barrier-sparks ((arg0 sparticle-system) (arg1 sparticle-cpuinfo) (arg2 sparticle-launchinfo))
  (sparticle-motion-blur arg0 arg1 (the-as vector arg2))
  (check-drop-group-center arg0 arg1 arg2)
  (none)
  )

(defpart 1503
  :init-specs ((:texture (glow-soft level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 200))
    (:rot-x (degrees 67.5))
    (:rot-z (degrees 0) (degrees 3600))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 128.0)
    (:b 10.0)
    (:a 128.0)
    (:omega (degrees 6761.25))
    (:fade-a -0.42666668)
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-3 sp-cpuinfo-flag-14 glow))
    (:userdata 12288.0)
    )
  )

(defpart 1504
  :init-specs ((:texture (hotdot level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 9) (meters 9))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 200.0)
    (:a 128.0)
    (:vel-y (meters 0.1) (meters 0.1))
    (:scalevel-x (meters -0.033333335) (meters -0.033333335))
    (:scalevel-y :copy scalevel-x)
    (:accel-y (meters -0.0016666667))
    (:timer (seconds 1.335) (seconds 0.165))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-3 sp-cpuinfo-flag-14))
    (:conerot-x (degrees 0) (degrees 70))
    (:rotate-y (degrees 0) (degrees 180))
    )
  )

(defpart 1498
  :init-specs ((:texture (dirtpuff01 level-default-sprite))
    (:birth-func 'birth-func-inherit-size)
    (:num 0.5)
    (:scale-x (meters 0.00024414062) (meters 0.00012207031))
    (:rot-z (degrees 0) (degrees 3600))
    (:scale-y :copy scale-x)
    (:r 80.0 80.0)
    (:g 128.0)
    (:b 10.0)
    (:a 64.0 64.0)
    (:fade-a -0.42666668 -0.42666668)
    (:accel-y (meters 0) (meters -0.00006666667))
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-2))
    )
  )

(defpartgroup group-nst-barrier-egg-explode
  :id 349
  :flags (sp0 sp4)
  :bounds (static-bspherem 0 0 0 640)
  :parts ((sp-item 1506 :fade-after (meters 300) :period (seconds 20) :length (seconds 0.017))
    (sp-item 1507 :fade-after (meters 300) :period (seconds 20) :length (seconds 0.017))
    (sp-item 1508 :fade-after (meters 300) :period (seconds 20) :length (seconds 0.017))
    )
  )

(defpart 1506
  :init-specs ((:texture (glow level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 5) (meters 4))
    (:rot-x (degrees 45))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 128.0)
    (:b 128.0)
    (:a 255.0)
    (:scalevel-x (meters -0.033333335))
    (:scalevel-y :copy scalevel-x)
    (:timer (seconds 0.085))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    )
  )

(defpart 1507
  :init-specs ((:texture (shockwave level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 5))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 128.0)
    (:b 128.0)
    (:a 128.0)
    (:scalevel-x (meters 0.33333334) (meters 0.06666667))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -1.0)
    (:timer (seconds 0.335))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    )
  )

(defpart 1508
  :init-specs ((:texture (water-drops level-default-sprite))
    (:num 10.0)
    (:z (meters 2) (meters 2))
    (:scale-x (meters 1) (meters 2))
    (:rot-z (degrees 0) (degrees 3600))
    (:scale-y :copy scale-x)
    (:r 64.0 64.0)
    (:g 128.0)
    (:b 0.0)
    (:a 64.0 64.0)
    (:vel-y (meters 0.0033333334) (meters 0.016666668))
    (:scalevel-x (meters 0.033333335) (meters 0.033333335))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.42666668 -0.42666668)
    (:accel-y (meters -0.0016666667))
    (:friction 0.98)
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-2 launch-along-z))
    (:next-time (seconds 0.5))
    (:next-launcher 1509)
    (:conerot-x (degrees 0) (degrees 60))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 1509
  :init-specs ((:scalevel-x (meters 0.0033333334)) (:scalevel-y :copy scalevel-x))
  )

(load-scene
  (new 'static 'scene
    :name "nest-hunt-intro"
    :extra #f
    :info #f
    :scene-flags (scene-flags scf1 scf2 scf3 scf4)
    :mask-to-clear (process-mask movie projectile)
    :entity "scene-stage-118"
    :art-group "scenecamera"
    :anim "nest-hunt-intro"
    :parts 5
    :command-list '((0 (apply ,(lambda :behavior scene-player
                   ()
                   (let ((gp-0 12))
                     (while (>= 19 gp-0)
                       (let* ((s5-0 (handle->process (-> *vehicle-info* handle-by-vehicle-type gp-0)))
                              (a0-5 (if (type? s5-0 process-focusable)
                                        s5-0
                                        )
                                    )
                              )
                         (if a0-5
                             (send-event a0-5 'go-die)
                             )
                         )
                       (+! gp-0 1)
                       )
                     )
                   #f
                   )
                )
         )
      (4 (send-event *target* 'draw #f))
      (590 (fadeout (frame-time-30 10)))
      (10000 (task-close! "nest-hunt-sig") (want-vehicle "scorpion"))
      )
    :cut-list '(111 203 333 434 484)
    :wait-ground-time (seconds 1)
    :actor (new 'static 'boxed-array :type scene-actor
      (new 'static 'scene-actor
        :name "scenecamera"
        :level #f
        :art-group "skel-scenecamera"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :camera 4
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "jakc-highres"
        :level 'lnstcst
        :art-group "skel-jakc-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '(333 434 484)
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        :no-draw-seg #x80
        )
      (new 'static 'scene-actor
        :name "sidekick-highres"
        :level 'lnstcst
        :art-group "skel-sidekick-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "sig-highres"
        :level 'lnstcst
        :art-group "skel-sig-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "v-scorpion"
        :level 'wasall
        :art-group "skel-v-scorpion"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "scorpion-wheel-fma"
        :level 'lnstcst
        :art-group "skel-scorpion-wheel-fma"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      )
    :load-point "desertg-egg-wall-scene"
    :end-point "desert-hunt-intro"
    :borrow '()
    :sfx-volume -1.0
    :ambient-volume -1.0
    :music-delay 1500.0
    :on-running #f
    :on-complete #f
    )
  )

(define *nest-hunt-res-point* (new 'static 'boxed-array :type vector
                                (new 'static 'vector :x 8483346.0 :y -92807.58 :z 8054675.5 :w 1.0)
                                (new 'static 'vector :x 8562667.0 :y -65303.758 :z 8378369.5 :w 1.0)
                                (new 'static 'vector :x 8522370.0 :y -29965.107 :z 8752567.0 :w 1.0)
                                (new 'static 'vector :x 8580009.0 :y 11769.856 :z 8871891.0 :w 1.0)
                                (new 'static 'vector :x 8677199.0 :y 20138.803 :z 8937588.0 :w 1.0)
                                (new 'static 'vector :x 8971180.0 :y 74662.71 :z 9045608.0 :w 1.0)
                                (new 'static 'vector :x 9236406.0 :y 85022.31 :z 9187503.0 :w 1.0)
                                (new 'static 'vector :x 9562071.0 :y 83312.64 :z 9319875.0 :w 1.0)
                                (new 'static 'vector :x 10347479.0 :y 131358.72 :z 9451930.0 :w 1.0)
                                (new 'static 'vector :x 10918501.0 :y 200778.95 :z 9415480.0 :w 1.0)
                                (new 'static 'vector :x 11191828.0 :y 270950.4 :z 9236644.0 :w 1.0)
                                (new 'static 'vector :x 11902116.0 :y 190504.95 :z 8885125.0 :w 1.0)
                                (new 'static 'vector :x 12766618.0 :y 181862.4 :z 8457667.0 :w 1.0)
                                (new 'static 'vector :x 13127643.0 :y 172078.69 :z 7851675.0 :w 1.0)
                                (new 'static 'vector :x 13231882.0 :y 145080.31 :z 7645430.0 :w 1.0)
                                (new 'static 'vector :x 13231882.0 :y 145080.31 :z 7645430.0 :w 1.0)
                                )
        )

(define *nest-hunt-res-index* 0)

(load-scene
  (new 'static 'scene
    :name "nest-hunt-res"
    :extra #f
    :info #f
    :scene-flags (scene-flags scf1 scf2 scf3 scf4 scf5 scf6)
    :mask-to-clear (process-mask movie projectile)
    :entity "scene-stage-118"
    :art-group "scenecamera"
    :anim "nest-hunt-res"
    :parts 14
    :command-list '((0
        (kill "desert-eggwall-break-1")
        (apply ,(lambda :behavior scene-player () (kill-by-type eco-pill *active-pool*) (none)))
        (apply ,(lambda :behavior scene-player
                  ()
                  (when *target*
                    (let ((gp-0 (handle->process (-> *target* pilot vehicle))))
                      (when gp-0
                        (set! *nest-hunt-res-index* 0)
                        (send-event gp-0 'set-control-hook-ai)
                        (send-event gp-0 'ai-ignore-nav-mesh #t)
                        (send-event gp-0 'ai-set-target-speed 114688.0)
                        (send-event gp-0 'ai-set-target-position (-> *nest-hunt-res-point* *nest-hunt-res-index*))
                        )
                      )
                    )
                  (none)
                  )
               )
        (send-event
          self
          'trans-hook
          ,(lambda :behavior scene-player
             ()
             (when *target*
               (let ((gp-0 (handle->process (-> *target* pilot vehicle)))
                     (s4-0 (+ (length *nest-hunt-res-point*) -2))
                     )
                 (when (and gp-0 (>= s4-0 *nest-hunt-res-index*))
                   (let ((a1-1 (-> *nest-hunt-res-point* *nest-hunt-res-index*))
                         (s5-0 (-> *nest-hunt-res-point* (+ *nest-hunt-res-index* 1)))
                         )
                     (let ((s3-0 (new 'stack-no-clear 'vector)))
                       (vector-segment-distance-point! (-> (the-as process-drawable gp-0) root trans) a1-1 s5-0 s3-0)
                       (cond
                         ((and (= *nest-hunt-res-index* s4-0) (let ((f0-0 (vector-vector-distance-squared s3-0 s5-0))
                                                                    (f1-0 20480.0)
                                                                    )
                                                                (< f0-0 (* f1-0 f1-0))
                                                                )
                               )
                          (send-event gp-0 'ai-set-target-speed 40960.0)
                          )
                         ((let ((f0-1 (vector-vector-distance-squared s3-0 s5-0))
                                (f1-3 20480.0)
                                )
                            (< f0-1 (* f1-3 f1-3))
                            )
                          (if (< *nest-hunt-res-index* s4-0)
                              (set! *nest-hunt-res-index* (+ *nest-hunt-res-index* 1))
                              )
                          )
                         )
                       )
                     (send-event gp-0 'ai-set-target-position s5-0)
                     )
                   )
                 )
               )
             (none)
             )
          )
        )
      (10000
        (task-close! "nest-hunt-resolution")
        (apply ,(lambda :behavior scene-player
                  ()
                  (when *target*
                    (let ((gp-0 (handle->process (-> *target* pilot vehicle))))
                      (when gp-0
                        (send-event gp-0 'set-control-hook-player)
                        (send-event gp-0 'ai-ignore-nav-mesh #f)
                        )
                      )
                    )
                  (none)
                  )
               )
        )
      )
    :cut-list '(272 385 471 585 704 860 913 1046 1247 1339 1458)
    :wait-ground-time (seconds 1)
    :actor (new 'static 'boxed-array :type scene-actor
      (new 'static 'scene-actor
        :name "scenecamera"
        :level #f
        :art-group "skel-scenecamera"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :camera 4
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "jakc-highres"
        :level 'ldesgcst
        :art-group "skel-jakc-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        :no-draw-seg #x80
        )
      (new 'static 'scene-actor
        :name "sidekick-highres"
        :level 'ldesgcst
        :art-group "skel-sidekick-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "sig-highres"
        :level 'ldesgcst
        :art-group "skel-sig-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      )
    :load-point "desertg-hunt-res-start"
    :end-point "desertg-hunt-res-end"
    :borrow '((desert-game alias desert copy ldesgcst special))
    :sfx-volume -1.0
    :ambient-volume -1.0
    :music-delay 1500.0
    :scene-task #xbc
    :on-running #f
    :on-complete #f
    )
  )

(load-scene (new 'static 'scene
              :name "desert-oasis-defense-res"
              :extra #f
              :info #f
              :scene-flags (scene-flags scf1 scf2 scf3 scf4)
              :mask-to-clear (process-mask movie projectile)
              :entity "scene-stage-134"
              :art-group "scenecamera"
              :anim "desert-oasis-defense-res"
              :parts 24
              :command-list '((0
                  (fma-sphere
                    (nav kill-once)
                    sphere
                    (new 'static 'sphere :x 2451109.0 :y 90663.32 :z 10344619.0 :r 204800.0)
                    nav-mesh-id
                    46553
                    )
                  (kill "desoasis-hellcat-2")
                  (fadein (frame-time-30 10))
                  )
                (1280 (part-tracker
                        "group-desert-car-fly"
                        entity
                        "particleman"
                        joint
                        "particleA"
                        track
                        #t
                        duration
                        (frame-range 1280 1300)
                        )
                      )
                (1350 (part-tracker
                        "group-lizard-catch-buggy-dust-skid"
                        entity
                        "particleman"
                        joint
                        "particleA"
                        track
                        #t
                        duration
                        (frame-range 1350 1377)
                        )
                      )
                (1430 (fadeout (frame-time-30 10)))
                (10000 (task-close! "desert-oasis-defense-meeting"))
                )
              :cut-list '(61 129 189 271 389 457 531 573 661 746 853 896 1021 1113 1210 1347)
              :wait-ground-time (seconds 1)
              :actor (new 'static 'boxed-array :type scene-actor
                (new 'static 'scene-actor
                  :name "scenecamera"
                  :level #f
                  :art-group "skel-scenecamera"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :camera 4
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "particleman"
                  :level 'oasiscst
                  :art-group "skel-particleman"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "sidekick-highres"
                  :level 'oasiscst
                  :art-group "skel-sidekick-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "jakc-highres"
                  :level 'oasiscst
                  :art-group "skel-jakc-highres"
                  :prefix ""
                  :draw-frames '((0 61) (128 max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  :no-draw-seg #x80
                  )
                (new 'static 'scene-actor
                  :name "ashelin-highres"
                  :level 'oasiscst
                  :art-group "skel-ashelin-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "marauder"
                  :level 'desoasis
                  :art-group "skel-marauder"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  :no-draw-seg #x103a
                  )
                (new 'static 'scene-actor
                  :name "marauder"
                  :level 'desoasis
                  :art-group "skel-marauder"
                  :prefix "c-"
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  :no-draw-seg #x2f80
                  )
                (new 'static 'scene-actor
                  :name "marauder"
                  :level 'desoasis
                  :art-group "skel-marauder"
                  :prefix "b-"
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  :no-draw-seg #x3f80
                  )
                (new 'static 'scene-actor
                  :name "v-marauder"
                  :level 'desoasis
                  :art-group "skel-v-marauder"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  :no-draw-seg #x78
                  )
                (new 'static 'scene-actor
                  :name "v-marauder"
                  :level 'desoasis
                  :art-group "skel-v-marauder"
                  :prefix "c-"
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  :no-draw-seg #x42
                  )
                (new 'static 'scene-actor
                  :name "v-marauder"
                  :level 'desoasis
                  :art-group "skel-v-marauder"
                  :prefix "b-"
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  :no-draw-seg #xa
                  )
                (new 'static 'scene-actor
                  :name "interceptor-wheel-fma"
                  :level 'oasiscst
                  :art-group "skel-interceptor-wheel-fma"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "interceptor-wheel-fma"
                  :level 'oasiscst
                  :art-group "skel-interceptor-wheel-fma"
                  :prefix "b-"
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "interceptor-wheel-fma"
                  :level 'oasiscst
                  :art-group "skel-interceptor-wheel-fma"
                  :prefix "c-"
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "hellcat-movie"
                  :level 'desoasis
                  :art-group "skel-hellcat-movie"
                  :prefix ""
                  :draw-frames '((0 max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  :no-draw-seg #x1fe
                  )
                (new 'static 'scene-actor
                  :name "particleman"
                  :level 'oasiscst
                  :art-group "skel-particleman"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                )
              :load-point "desert-ashelin-movie"
              :end-point "desert-ashelin"
              :borrow '((desert-game alias desert copy desoasis special))
              :sfx-volume -1.0
              :ambient-volume -1.0
              :music-delay 1500.0
              :scene-task #x60
              :on-running #f
              :on-complete #f
              )
            )

(defpartgroup group-desert-car-fly
  :id 350
  :flags (sp0 sp4)
  :bounds (static-bspherem 0 0 0 64)
  :parts ((sp-item 1510 :flags (sp7)) (sp-item 1511 :flags (sp7)))
  )

(defpart 1510
  :init-specs ((:texture (dirtpuff01 level-default-sprite))
    (:num 10.0)
    (:x (meters 0) (meters 4))
    (:scale-x (meters 1) (meters 2))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 150.0)
    (:g 120.0)
    (:b 90.0)
    (:a 30.0 10.0)
    (:vel-z (meters -0.06666667))
    (:scalevel-x (meters 0.016666668) (meters 0.016666668))
    (:rotvel-z (degrees -0.2) (degrees 0.4))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.06666667 -0.05)
    (:accel-y (meters -0.00016666666) (meters -0.00016666666))
    (:friction 0.95)
    (:timer (seconds 2.667))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-13 launch-along-z left-multiply-quat))
    (:next-time (seconds 0.335))
    (:next-launcher 1512)
    (:conerot-x (degrees -30) (degrees 60))
    (:conerot-y (degrees -10) (degrees 20))
    (:rotate-y (degrees 0))
    )
  )

(defpart 1512
  :init-specs ((:scalevel-x (meters 0.0033333334)) (:scalevel-y :copy scalevel-x))
  )

;; WARN: Return type mismatch float vs none.
(defun spt-birth-func-brightness-buggy-fly ((arg0 sparticle-system) (arg1 sparticle-cpuinfo) (arg2 sparticle-launchinfo))
  (let ((s5-0 (+ (mod (the-as int (rand-uint31-gen *random-generator*)) 51) 200))
        (s3-0 (logand 0 (rand-uint31-gen *random-generator*)))
        (s4-0 (+ (mod (the-as int (rand-uint31-gen *random-generator*)) 11) 20))
        (v1-6 (+ (mod (the-as int (rand-uint31-gen *random-generator*)) 11) 60))
        )
    (set! (-> arg2 rotate-x) (the float (- s5-0 (the-as int s3-0))))
    (set! (-> arg2 rotate-y) (the float (- s5-0 s4-0)))
    (set! (-> arg2 rotate-z) (the float (- s5-0 v1-6)))
    )
  (none)
  )

(defpart 1511
  :init-specs ((:texture (rockbit01 level-default-sprite))
    (:birth-func 'spt-birth-func-part-buggy-fly)
    (:num 20.0)
    (:x (meters 0) (meters 4))
    (:scale-x (meters 0.1) (meters 0.05))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 128.0)
    (:b 128.0)
    (:a 128.0)
    (:vel-z (meters -0.05) (meters -0.016666668))
    (:rotvel-z (degrees -2) (degrees 4))
    (:accel-y (meters -0.0016666667))
    (:timer (seconds 0.335))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-13 launch-along-z))
    (:userdata :data (new 'static 'boxed-array :type int32
                       10
                       1
                       0
                       #x408b00
                       #x408c00
                       #x40a100
                       #x40a200
                       #x40a300
                       #x40a400
                       #x40a500
                       #x40a600
                       #x40a700
                       #x40a800
                       #x40a900
                       #x40aa00
                       #x40ab00
                       #x40ac00
                       #x40ad00
                       #x40ae00
                       )
               )
    (:func 'sparticle-texture-animate)
    (:conerot-x (degrees 20))
    (:conerot-y (degrees -20) (degrees 40))
    (:rotate-y (degrees 0))
    )
  )

(defun spt-birth-func-part-buggy-fly ((arg0 sparticle-system) (arg1 sparticle-cpuinfo) (arg2 sparticle-launchinfo) (arg3 object) (arg4 object))
  (birth-func-texture-group-2d arg0 arg1 arg2 arg3 arg4)
  (spt-birth-func-brightness-buggy-fly arg0 arg1 arg2)
  (none)
  )

(load-scene (new 'static 'scene
              :name "desert-oasis-defense-res-b"
              :extra #f
              :info #f
              :scene-flags (scene-flags scf1 scf2 scf3 scf4)
              :mask-to-clear (process-mask movie projectile)
              :entity "scene-stage-134"
              :art-group "scenecamera"
              :anim "desert-oasis-defense-res-b"
              :parts 12
              :command-list '((0 (kill "desoasis-hellcat-2") (fadein (frame-time-30 10)))
                (720
                  (part-tracker
                    "group-oasis-medallion-sparkle"
                    entity
                    "kidmedallion"
                    joint
                    "main"
                    track
                    #t
                    duration
                    (frame-range 680 730)
                    )
                  )
                (883
                  (part-tracker
                    "group-oasis-hellcat-dust-trail"
                    entity
                    "particleman"
                    joint
                    "particleA"
                    track
                    #t
                    duration
                    (frame-range 883 977)
                    )
                  (part-tracker
                    "group-oasis-hellcat-thrusters"
                    entity
                    "particleman"
                    joint
                    "particleB"
                    track
                    #t
                    duration
                    (frame-range 883 1050)
                    )
                  (part-tracker
                    "group-oasis-hellcat-thruster-trail"
                    entity
                    "particleman"
                    joint
                    "particleB"
                    track
                    #t
                    duration
                    (frame-range 883 1050)
                    )
                  (part-tracker
                    "group-oasis-hellcat-thrusters"
                    entity
                    "particleman"
                    joint
                    "particleC"
                    track
                    #t
                    duration
                    (frame-range 883 1050)
                    )
                  (part-tracker
                    "group-oasis-hellcat-thruster-trail"
                    entity
                    "particleman"
                    joint
                    "particleC"
                    track
                    #t
                    duration
                    (frame-range 883 1050)
                    )
                  (part-tracker
                    "group-oasis-hellcat-heathaze"
                    entity
                    "particleman"
                    joint
                    "particleD"
                    track
                    #t
                    duration
                    (frame-range 883 920)
                    )
                  )
                (1040 (fadeout (frame-time-30 10)))
                (10000
                  (kill "w-parking-spot-20")
                  (send-event self 'user-data-set! (task-closed? "desert-oasis-defense-resolution"))
                  (unless (scene-select?) (task-close! "desert-oasis-defense-resolution"))
                  )
                )
              :cut-list '(108 218 363 420 480 555 649 685 809)
              :wait-ground-time (seconds 1)
              :actor (new 'static 'boxed-array :type scene-actor
                (new 'static 'scene-actor
                  :name "scenecamera"
                  :level #f
                  :art-group "skel-scenecamera"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :camera 4
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "sidekick-highres"
                  :level 'oasiscst
                  :art-group "skel-sidekick-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "jakc-highres"
                  :level 'oasiscst
                  :art-group "skel-jakc-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  :no-draw-seg #x80
                  )
                (new 'static 'scene-actor
                  :name "ashelin-highres"
                  :level 'oasiscst
                  :art-group "skel-ashelin-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "board"
                  :level #f
                  :art-group "skel-board"
                  :prefix ""
                  :draw-frames '((0 108))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "kidmedallion"
                  :level 'oasiscst
                  :art-group "skel-kidmedallion"
                  :prefix ""
                  :draw-frames '((642 max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "particleman"
                  :level 'oasiscst
                  :art-group "skel-particleman"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "hellcat-movie"
                  :level 'desoasis
                  :art-group "skel-hellcat-movie"
                  :prefix ""
                  :draw-frames '((0 218) (363 max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  :no-draw-seg #x1fe
                  )
                )
              :load-point "desert-ashelin-movie"
              :end-point "desert-ashelin-end"
              :borrow '((desert-game alias desert copy desoasis special))
              :sfx-volume -1.0
              :ambient-volume -1.0
              :music-delay 1500.0
              :scene-task #x62
              :on-running #f
              :on-complete '(unless (send-event self 'user-data) (talker-spawn "powup013"))
              )
            )

(defpartgroup group-oasis-medallion-sparkle
  :id 351
  :flags (sp0 sp4 sp12)
  :bounds (static-bspherem 0 0 0 640)
  :parts ((sp-item 1513 :flags (sp7)))
  )

(defpart 1513
  :init-specs ((:texture (starflash level-default-sprite))
    (:num 0.0 0.6)
    (:x (meters -0.05) (meters 0.1))
    (:y (meters -0.07) (meters 0.14))
    (:z (meters -0.05) (meters 0.1))
    (:scale-x (meters 0.01))
    (:rot-x (degrees 22.5))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 100.0)
    (:b 100.0)
    (:a 0.0)
    (:scalevel-x (meters 0.00033333333) (meters 0.00033333333))
    (:scalevel-y :copy scalevel-x)
    (:fade-a 0.75 0.75)
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 819.2 3276.8)
    (:func 'spt-func-relative-pos)
    (:next-time (seconds 0.135) (seconds 0.13))
    (:next-launcher 1514)
    )
  )

(defpart 1514
  :init-specs ((:scalevel-x (meters -0.00066666666) (meters -0.00066666666))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -1.625 -1.625)
    )
  )

(defpartgroup group-oasis-hellcat-dust-trail
  :id 352
  :flags (sp0 sp4)
  :bounds (static-bspherem 0 0 0 64)
  :parts ((sp-item 1515 :flags (sp7)))
  )

(defpart 1515
  :init-specs ((:texture (dirtpuff01 level-default-sprite))
    (:birth-func 'birth-func-curve)
    (:num 1.0)
    (:x (meters 0) (meters 3))
    (:scale-x (meters 0.5))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 128.0)
    (:b 128.0)
    (:a 0.0)
    (:vel-x (meters 0.033333335) (meters 0.06666667))
    (:accel-y (meters 0) (meters 0.00016666666))
    (:timer (seconds 3))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-13 launch-along-z))
    (:userdata 0.0)
    (:func 'live-func-curve)
    (:conerot-z (degrees 0))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(if #t
    (set! *range-oasis-hellcat-dust-color* (new 'static 'curve-color-fast
                                             :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                             :ys (new 'static 'inline-array vector 4
                                               (new 'static 'vector :x 140.0 :y 120.0 :z 80.0 :w 128.0)
                                               (new 'static 'vector :x 100.0 :y 80.0 :z 40.0 :w 128.0)
                                               (new 'static 'vector :x 100.0 :y 80.0 :z 40.0 :w 128.0)
                                               (new 'static 'vector :x 100.0 :y 80.0 :z 40.0 :w 128.0)
                                               )
                                             :one-over-x-deltas (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
                                             )
          )
    )

(if #t
    (set! *range-oasis-hellcat-dust-alpha* (new 'static 'curve2d-fast
                                             :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                             :ys (new 'static 'vector :x 32.0 :y 40.0 :z 41.0 :w 42.0)
                                             :one-over-x-deltas (new 'static 'vector :x 8.0 :y 1.0 :z 1.0 :w 1.0)
                                             )
          )
    )

(if #t
    (set! *range-oasis-hellcat-dust-scale-x* (new 'static 'curve2d-fast
                                               :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                               :ys (new 'static 'vector :x 2.0 :y 2.3 :z 3.3 :w 4.3)
                                               :one-over-x-deltas (new 'static 'vector :x 0.29999995 :y 1.0 :z 1.0000002 :w 1.0)
                                               )
          )
    )

(if #t
    (set! *range-oasis-hellcat-dust-scale-y* (new 'static 'curve2d-fast
                                               :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                               :ys (new 'static 'vector :x 2.0 :y 2.3 :z 3.3 :w 4.3)
                                               :one-over-x-deltas (new 'static 'vector :x 0.29999995 :y 1.0 :z 1.0000002 :w 1.0)
                                               )
          )
    )

(if #t
    (set! *curve-oasis-hellcat-dust-alpha* (new 'static 'curve2d-fast
                                             :xs (new 'static 'vector :y -0.1 :z -0.5 :w -1.0)
                                             :ys (new 'static 'vector :y 1.0 :z 1.0)
                                             :one-over-x-deltas (new 'static 'vector :x 10.0 :z -2.0 :w 1.0)
                                             )
          )
    )

(if #t
    (set! *curve-oasis-hellcat-dust-scale-x*
          (new 'static 'curve2d-fast
            :xs (new 'static 'vector :y -0.3 :z -0.4 :w -1.0)
            :ys (new 'static 'vector :y 5.0 :z 6.0 :w 6.5)
            :one-over-x-deltas (new 'static 'vector :x 16.666666 :y 10.000001 :z 0.8333333 :w 1.0)
            )
          )
    )

(if #t
    (set! *curve-oasis-hellcat-dust-scale-y*
          (new 'static 'curve2d-fast
            :xs (new 'static 'vector :y -0.3 :z -0.4 :w -1.0)
            :ys (new 'static 'vector :y 5.0 :z 6.0 :w 6.5)
            :one-over-x-deltas (new 'static 'vector :x 16.666666 :y 10.000001 :z 0.8333333 :w 1.0)
            )
          )
    )

(define *part-oasis-hellcat-dust-trail-curve-settings*
  (new 'static 'particle-curve-settings :lifetime-offset (seconds 4) :flags (particle-curve-flags pcf0))
  )

(set! (-> *part-id-table* 1515 init-specs 15 initial-valuef)
      (the-as float *part-oasis-hellcat-dust-trail-curve-settings*)
      )

(set! (-> *part-oasis-hellcat-dust-trail-curve-settings* color-start) *range-oasis-hellcat-dust-color*)

(set! (-> *part-oasis-hellcat-dust-trail-curve-settings* alpha-start) *range-oasis-hellcat-dust-alpha*)

(set! (-> *part-oasis-hellcat-dust-trail-curve-settings* scale-x-start) *range-oasis-hellcat-dust-scale-x*)

(set! (-> *part-oasis-hellcat-dust-trail-curve-settings* scale-y-start) *range-oasis-hellcat-dust-scale-y*)

(set! (-> *part-oasis-hellcat-dust-trail-curve-settings* r-scalar) #f)

(set! (-> *part-oasis-hellcat-dust-trail-curve-settings* g-scalar) #f)

(set! (-> *part-oasis-hellcat-dust-trail-curve-settings* b-scalar) #f)

(set! (-> *part-oasis-hellcat-dust-trail-curve-settings* a-scalar) *curve-oasis-hellcat-dust-alpha*)

(set! (-> *part-oasis-hellcat-dust-trail-curve-settings* scale-x-scalar) *curve-oasis-hellcat-dust-scale-x*)

(set! (-> *part-oasis-hellcat-dust-trail-curve-settings* scale-y-scalar) *curve-oasis-hellcat-dust-scale-y*)

(defpartgroup group-oasis-hellcat-thrusters
  :id 353
  :flags (sp0 sp4)
  :bounds (static-bspherem 0 0 0 640)
  :parts ((sp-item 1516 :flags (is-3d sp7) :period (seconds 0.017) :length (seconds 0.017))
    (sp-item 1517 :flags (sp7) :period (seconds 0.017) :length (seconds 0.017))
    )
  )

(defpart 1516
  :init-specs ((:texture (gun-enemy-muzzleflash level-default-sprite))
    (:num 4.0)
    (:z (meters -1.5))
    (:scale-x (meters 1) (meters 1))
    (:rot-x (degrees 180))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0) 1 (degrees 90))
    (:scale-y (meters 3) (meters 1))
    (:r 10.0 20.0)
    (:g 200.0)
    (:b 255.0)
    (:a 30.0 30.0)
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:conerot-z (degrees 0))
    (:rotate-x (degrees 0))
    (:rotate-y (degrees 0))
    )
  )

(defpart 1517
  :init-specs ((:texture (glow-soft level-default-sprite))
    (:num 3.0)
    (:scale-x (meters 5) (meters 1))
    (:rot-x (degrees 6.7500005))
    (:scale-y :copy scale-x)
    (:r 0.0)
    (:g 100.0 28.0)
    (:b 255.0)
    (:a 12.0 2.0)
    (:omega (degrees 4511.25))
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 4.096)
    (:conerot-z (degrees 0))
    (:rotate-y (degrees 0))
    )
  )

(defpartgroup group-oasis-hellcat-thruster-trail
  :id 354
  :flags (sp0 sp4)
  :bounds (static-bspherem 0 0 0 640)
  :parts ((sp-item 1518 :flags (sp7) :period (seconds 0.035) :length (seconds 0.035))
    (sp-item 1519 :flags (sp7) :period (seconds 0.035) :length (seconds 0.035))
    )
  )

(defpart 1518
  :init-specs ((:texture (dirtpuff01 level-default-sprite))
    (:num 4.0)
    (:scale-x (meters 1))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 120.0)
    (:g 120.0)
    (:b 255.0)
    (:a 10.0 5.0)
    (:vel-z (meters 0) (meters -0.33333334))
    (:scalevel-x (meters 0.006666667) (meters 0.006666667))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.05 -0.05)
    (:friction 0.5)
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-13))
    (:conerot-z (degrees 0))
    (:rotate-y (degrees 0))
    )
  )

(defpart 1519
  :init-specs ((:texture (dirtpuff01 level-default-sprite))
    (:num 4.0)
    (:scale-x (meters 1))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 120.0)
    (:g 120.0)
    (:b 255.0)
    (:a 10.0 5.0)
    (:vel-z (meters -0.33333334) (meters -0.33333334))
    (:scalevel-x (meters 0.006666667) (meters 0.006666667))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.05 -0.05)
    (:friction 0.5)
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-13))
    (:conerot-z (degrees 0))
    (:rotate-y (degrees 0))
    )
  )

(defpartgroup group-oasis-hellcat-heathaze
  :id 355
  :flags (sp0 sp4)
  :bounds (static-bspherem 0 0 0 640)
  :parts ((sp-item 1520 :flags (sp7)) (sp-item 1521 :flags (sp7)))
  )

(defpart 1522
  :init-specs ((:num 2.0)
    (:x (meters 0) (meters 5))
    (:rot-x 6)
    (:r 2048.0)
    (:g 1024.0)
    (:b 1024.0)
    (:vel-y (meters -0.016666668))
    (:fade-b -2.7306666)
    (:timer (seconds 0.667))
    (:flags (distort))
    (:next-time (seconds 0.335))
    (:next-launcher 1523)
    (:conerot-x (degrees -10) (degrees 20))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 1523
  :init-specs ((:fade-b 2.7306666))
  )

(defpart 1521
  :init-specs ((:num 2.0)
    (:x (meters 0) (meters 5))
    (:rot-x 6)
    (:r 2048.0)
    (:g 1024.0)
    (:b 1024.0)
    (:vel-y (meters -0.016666668))
    (:fade-b 2.7306666)
    (:timer (seconds 0.667))
    (:flags (distort))
    (:next-time (seconds 0.335))
    (:next-launcher 1524)
    (:conerot-x (degrees -10) (degrees 20))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 1524
  :init-specs ((:fade-b -2.7306666))
  )

(load-scene (new 'static 'scene
              :name "desert-rescue-res-a"
              :extra #f
              :info #f
              :scene-flags (scene-flags scf1 scf2 scf3 scf4)
              :mask-to-clear (process-mask movie projectile)
              :entity "scene-stage-149"
              :art-group "scenecamera"
              :anim "desert-rescue-res-a"
              :parts 3
              :command-list '((0 (send-event *task-manager* 'hide-wlander))
                (1
                  (part-tracker
                    "group-desert-beast-fall-crystal-glow"
                    entity
                    "eco-crystal-dark"
                    joint
                    "main"
                    track
                    #t
                    duration
                    (frame-range 1 247)
                    )
                  )
                (247 (send-event *task-manager* 'spawn-enemy))
                (10000
                  (send-event self 'user-data-set! (task-closed? "desert-rescue-dead-wlander-movie"))
                  (task-close! "desert-rescue-dead-wlander-movie")
                  )
                )
              :cut-list '(74)
              :wait-ground-time (seconds 1)
              :actor (new 'static 'boxed-array :type scene-actor
                (new 'static 'scene-actor
                  :name "scenecamera"
                  :level #f
                  :art-group "skel-scenecamera"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :camera 4
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "jakc-highres"
                  :level 'desrescc
                  :art-group "skel-jakc-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "sidekick-highres"
                  :level 'desrescc
                  :art-group "skel-sidekick-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "wland-passenger"
                  :level 'desresc
                  :art-group "skel-wland-passenger"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "wlander-male"
                  :level 'desresc
                  :art-group "skel-wlander-male"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  :no-draw-seg #x1bc0f20
                  )
                (new 'static 'scene-actor
                  :name "eco-crystal-dark"
                  :level 'desresc
                  :art-group "skel-eco-crystal-dark"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                )
              :load-point "desert-rescue-movie"
              :end-point "desert-rescue-movie-finish"
              :borrow '((desert-game alias desert copy desresc special) (desresc 0 desrescc special))
              :sfx-volume -1.0
              :ambient-volume -1.0
              :music-delay 1500.0
              :on-running #f
              :on-complete '(unless (send-event self 'user-data) (talker-spawn "powup099"))
              )
            )

(load-scene (new 'static 'scene
              :name "desert-hover-res"
              :extra #f
              :info #f
              :scene-flags (scene-flags scf1 scf2 scf3 scf4)
              :mask-to-clear (process-mask movie projectile)
              :entity "scene-stage-141"
              :art-group "scenecamera"
              :anim "desert-hover-res"
              :parts 10
              :command-list '((0
                  (kill "des-beast-2")
                  (kill "des-beast-3")
                  (kill "des-beast-4")
                  (kill "des-beast-5")
                  (apply
                    ,(lambda :behavior scene-player
                       ()
                       (set-setting! 'fog-special-interp-targ #f 0.2 0)
                       (set-setting! 'fog-special-interp-rate #f 2.0 0)
                       (none)
                       )
                    )
                  )
                (51
                  (part-tracker
                    "group-desert-scenes-beast-fall-dust"
                    entity
                    "particleman"
                    joint
                    "particleA"
                    track
                    #t
                    duration
                    (frame-range 51 61)
                    )
                  )
                (57
                  (part-tracker
                    "group-desert-scenes-beast-fall-dust"
                    entity
                    "particleman"
                    joint
                    "particleB"
                    track
                    #t
                    duration
                    (frame-range 57 67)
                    )
                  )
                (61
                  (part-tracker
                    "group-desert-scenes-beast-fall-dust"
                    entity
                    "particleman"
                    joint
                    "particleC"
                    track
                    #t
                    duration
                    (frame-range 61 71)
                    )
                  )
                (75
                  part-tracker
                  "group-desert-beast-fall-crystal-glow"
                  entity
                  "eco-crystal-dark"
                  joint
                  "main"
                  track
                  #t
                  duration
                  (frame-range 75 780)
                  )
                (69 (part-tracker
                      "group-desert-scenes-impact-dust"
                      entity
                      "particleman"
                      joint
                      "particleD"
                      track
                      #f
                      duration
                      (frame-range 69 70)
                      )
                    )
                (77 (part-tracker
                      "group-desert-scenes-impact-dust"
                      entity
                      "particleman"
                      joint
                      "particleE"
                      track
                      #f
                      duration
                      (frame-range 77 78)
                      )
                    )
                (221 (send-event "jakc-highres" 'segment 64 128))
                (280 (part-tracker
                       "group-desert-scenes-hologram-light"
                       entity
                       "errol-effect"
                       joint
                       "head"
                       track
                       #f
                       duration
                       (frame-range 280 730)
                       )
                     )
                (730 (part-tracker
                       "group-desert-scenes-hologram-explosion"
                       entity
                       "particleman"
                       joint
                       "particleF"
                       track
                       #f
                       duration
                       (frame-range 730 750)
                       )
                     )
                (1172 (fadeout (frame-time-30 10)))
                (10000 (send-event self 'user-data-set! (task-closed? "desert-hover-resolution")))
                )
              :cut-list '(175 277 467 533 611 679 721 749 878 920)
              :wait-ground-time (seconds 1)
              :actor (new 'static 'boxed-array :type scene-actor
                (new 'static 'scene-actor
                  :name "scenecamera"
                  :level #f
                  :art-group "skel-scenecamera"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :camera 4
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "particleman"
                  :level 'deshover
                  :art-group "skel-particleman"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "jakc-highres"
                  :level 'deshover
                  :art-group "skel-jakc-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '((min 175))
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  :no-draw-seg #x40
                  )
                (new 'static 'scene-actor
                  :name "sidekick-highres"
                  :level 'deshover
                  :art-group "skel-sidekick-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "errol-effect"
                  :level 'deshover
                  :art-group "skel-errol-effect"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "des-beast"
                  :level 'deshover
                  :art-group "skel-des-beast"
                  :prefix ""
                  :draw-frames '((min 749))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "mh-communicator"
                  :level 'deshover
                  :art-group "skel-mh-communicator"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "eco-crystal-dark"
                  :level 'deshover
                  :art-group "skel-eco-crystal-dark"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "v-snake"
                  :level 'wasall
                  :art-group "skel-v-snake"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  :no-draw-seg #x2
                  )
                (new 'static 'scene-actor
                  :name "snake-wheel-fma"
                  :level 'deshover
                  :art-group "skel-snake-wheel-fma"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "jakc-scarf"
                  :level 'deserta
                  :art-group "skel-jakc-scarf"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                )
              :load-point "desert-hover-movie"
              :end-point "desert-hover-movie"
              :borrow '((desert-game alias desert copy deshover display))
              :sfx-volume -1.0
              :ambient-volume -1.0
              :music-delay 1500.0
              :on-running #f
              :on-complete '(unless (send-event self 'user-data) (talker-spawn "powup027"))
              )
            )

(load-scene (new 'static 'scene
              :name "desert-lizard-catch"
              :extra #f
              :info #f
              :scene-flags (scene-flags scf1 scf2 scf3)
              :mask-to-clear (process-mask movie projectile)
              :entity "scene-stage-148"
              :art-group "scenecamera"
              :anim "desert-lizard-catch"
              :parts 3
              :command-list '((0
                  (kill-by-type des-cactus-obstacle)
                  (kill "desert-elec-gate-1")
                  (kill "desert-elec-gate-2")
                  (kill "desert-elec-gate-3")
                  (kill "kleever-catch-lizards-1")
                  (kill "w-parking-spot-17")
                  )
                (13 (part-tracker
                      "group-desert-scenes-beast-fall-dust"
                      entity
                      "particleman"
                      joint
                      "particleE"
                      track
                      #t
                      duration
                      (frame-range 13 30)
                      )
                    )
                (144 (part-tracker
                       "group-scenes-daxter-impact-dust"
                       entity
                       "particleman"
                       joint
                       "particleF"
                       track
                       #f
                       duration
                       (frame-range 144 145)
                       )
                     )
                (158 (part-tracker
                       "group-scenes-daxter-run-dust"
                       entity
                       "sidekick-highres"
                       joint
                       "tailBase"
                       track
                       #t
                       duration
                       (frame-range 158 232)
                       )
                     )
                (170 (part-tracker
                       "group-lizard-catch-buggy-dust-skid"
                       entity
                       "particleman"
                       joint
                       "particleA"
                       track
                       #t
                       duration
                       (frame-range 170 206)
                       )
                     )
                (170 (part-tracker
                       "group-lizard-catch-buggy-dust-skid"
                       entity
                       "particleman"
                       joint
                       "particleB"
                       track
                       #t
                       duration
                       (frame-range 170 206)
                       )
                     )
                (170 (part-tracker
                       "group-lizard-catch-buggy-dust-skid"
                       entity
                       "particleman"
                       joint
                       "particleC"
                       track
                       #t
                       duration
                       (frame-range 170 206)
                       )
                     )
                (170 (part-tracker
                       "group-lizard-catch-buggy-dust-skid"
                       entity
                       "particleman"
                       joint
                       "particleD"
                       track
                       #t
                       duration
                       (frame-range 170 206)
                       )
                     )
                )
              :cut-list '(75 121 202 250)
              :wait-ground-time (seconds 1)
              :actor (new 'static 'boxed-array :type scene-actor
                (new 'static 'scene-actor
                  :name "scenecamera"
                  :level #f
                  :art-group "skel-scenecamera"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :camera 4
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "particleman"
                  :level 'desliz
                  :art-group "skel-particleman"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "jakc-highres"
                  :level 'desliz
                  :art-group "skel-jakc-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "sidekick-highres"
                  :level 'desliz
                  :art-group "skel-sidekick-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "desert-lizard-movie"
                  :level 'desliz
                  :art-group "skel-desert-lizard-movie"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  :no-draw-seg #x2
                  )
                (new 'static 'scene-actor
                  :name "v-snake"
                  :level 'wasall
                  :art-group "skel-v-snake"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  :no-draw-seg #x2
                  )
                (new 'static 'scene-actor
                  :name "snake-wheel-fma"
                  :level 'desliz
                  :art-group "skel-snake-wheel-fma"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                )
              :load-point "desert-lizard-corral"
              :end-point "desert-lizard-corral-snake-1"
              :borrow '((desert-game alias desert copy desliz special))
              :sfx-volume -1.0
              :ambient-volume -1.0
              :music-delay 1500.0
              :on-running #f
              :on-complete #f
              )
            )

(load-scene (new 'static 'scene
              :name "desert-lizard-catch-2"
              :extra #f
              :info #f
              :scene-flags (scene-flags scf1 scf2 scf3)
              :mask-to-clear (process-mask movie projectile)
              :entity "scene-stage-148"
              :art-group "scenecamera"
              :anim "desert-lizard-catch-2"
              :parts 3
              :command-list '((0
                  (kill-by-type des-cactus-obstacle)
                  (kill "desert-elec-gate-1")
                  (kill "desert-elec-gate-2")
                  (kill "desert-elec-gate-3")
                  (kill "kleever-catch-lizards-1")
                  (kill "w-parking-spot-17")
                  )
                (13 (part-tracker
                      "group-desert-scenes-beast-fall-dust"
                      entity
                      "particleman"
                      joint
                      "particleE"
                      track
                      #t
                      duration
                      (frame-range 13 30)
                      )
                    )
                (140 (part-tracker
                       "group-scenes-daxter-impact-dust"
                       entity
                       "particleman"
                       joint
                       "particleF"
                       track
                       #f
                       duration
                       (frame-range 140 141)
                       )
                     )
                (154 (part-tracker
                       "group-scenes-daxter-run-dust"
                       entity
                       "sidekick-highres"
                       joint
                       "tailBase"
                       track
                       #t
                       duration
                       (frame-range 154 229)
                       )
                     )
                (170 (part-tracker
                       "group-desert-buggy-dust-skid"
                       entity
                       "particleman"
                       joint
                       "particleA"
                       track
                       #t
                       duration
                       (frame-range 170 206)
                       )
                     )
                (170 (part-tracker
                       "group-desert-buggy-dust-skid"
                       entity
                       "particleman"
                       joint
                       "particleB"
                       track
                       #t
                       duration
                       (frame-range 170 206)
                       )
                     )
                (170 (part-tracker
                       "group-desert-buggy-dust-skid"
                       entity
                       "particleman"
                       joint
                       "particleC"
                       track
                       #t
                       duration
                       (frame-range 170 206)
                       )
                     )
                (170 (part-tracker
                       "group-desert-buggy-dust-skid"
                       entity
                       "particleman"
                       joint
                       "particleD"
                       track
                       #t
                       duration
                       (frame-range 170 206)
                       )
                     )
                )
              :cut-list '(59 120 191 254)
              :wait-ground-time (seconds 1)
              :actor (new 'static 'boxed-array :type scene-actor
                (new 'static 'scene-actor
                  :name "scenecamera"
                  :level #f
                  :art-group "skel-scenecamera"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :camera 4
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "particleman"
                  :level 'desliz
                  :art-group "skel-particleman"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "jakc-highres"
                  :level 'desliz
                  :art-group "skel-jakc-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "sidekick-highres"
                  :level 'desliz
                  :art-group "skel-sidekick-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "desert-lizard-movie"
                  :level 'desliz
                  :art-group "skel-desert-lizard-movie"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  :no-draw-seg #x2
                  )
                (new 'static 'scene-actor
                  :name "v-snake"
                  :level 'wasall
                  :art-group "skel-v-snake"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  :no-draw-seg #x2
                  )
                (new 'static 'scene-actor
                  :name "snake-wheel-fma"
                  :level 'desliz
                  :art-group "skel-snake-wheel-fma"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                )
              :load-point "desert-lizard-corral"
              :end-point "desert-lizard-corral-snake-2"
              :borrow '((desert-game alias desert copy desliz special))
              :sfx-volume -1.0
              :ambient-volume -1.0
              :music-delay 1500.0
              :on-running #f
              :on-complete #f
              )
            )

(load-scene (new 'static 'scene
              :name "desert-lizard-resolution"
              :extra #f
              :info #f
              :scene-flags (scene-flags scf1 scf2 scf3 scf4)
              :mask-to-clear (process-mask movie projectile)
              :entity "scene-stage-148"
              :art-group "scenecamera"
              :anim "desert-lizard-catch-3"
              :parts 6
              :command-list '((0
                  (kill-by-type des-cactus-obstacle)
                  (kill "desert-elec-gate-1")
                  (kill "desert-elec-gate-2")
                  (kill "desert-elec-gate-3")
                  (kill "kleever-catch-lizards-1")
                  )
                (13 (part-tracker
                      "group-desert-scenes-beast-fall-dust"
                      entity
                      "particleman"
                      joint
                      "particleE"
                      track
                      #t
                      duration
                      (frame-range 13 30)
                      )
                    )
                (142 (part-tracker
                       "group-scenes-daxter-impact-dust"
                       entity
                       "particleman"
                       joint
                       "particleF"
                       track
                       #f
                       duration
                       (frame-range 142 143)
                       )
                     )
                (158 (part-tracker
                       "group-scenes-daxter-run-dust"
                       entity
                       "sidekick-highres"
                       joint
                       "tailBase"
                       track
                       #t
                       duration
                       (frame-range 158 244)
                       )
                     )
                (170 (part-tracker
                       "group-desert-buggy-dust-skid"
                       entity
                       "particleman"
                       joint
                       "particleA"
                       track
                       #t
                       duration
                       (frame-range 170 216)
                       )
                     )
                (170 (part-tracker
                       "group-desert-buggy-dust-skid"
                       entity
                       "particleman"
                       joint
                       "particleB"
                       track
                       #t
                       duration
                       (frame-range 170 216)
                       )
                     )
                (170 (part-tracker
                       "group-desert-buggy-dust-skid"
                       entity
                       "particleman"
                       joint
                       "particleC"
                       track
                       #t
                       duration
                       (frame-range 170 216)
                       )
                     )
                (170 (part-tracker
                       "group-desert-buggy-dust-skid"
                       entity
                       "particleman"
                       joint
                       "particleD"
                       track
                       #t
                       duration
                       (frame-range 170 216)
                       )
                     )
                (660 (fadeout (frame-time-30 10)))
                (10000 (task-close! "desert-catch-lizards-resolution") (kill "w-parking-spot-19"))
                )
              :cut-list '(41 121 225 295 385 465 582 623)
              :wait-ground-time (seconds 1)
              :actor (new 'static 'boxed-array :type scene-actor
                (new 'static 'scene-actor
                  :name "scenecamera"
                  :level #f
                  :art-group "skel-scenecamera"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :camera 4
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "particleman"
                  :level 'desliz
                  :art-group "skel-particleman"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "jakc-highres"
                  :level 'desliz
                  :art-group "skel-jakc-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "sidekick-highres"
                  :level 'desliz
                  :art-group "skel-sidekick-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "kleever-highres"
                  :level 'desliz
                  :art-group "skel-kleever-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "desert-lizard-movie"
                  :level 'desliz
                  :art-group "skel-desert-lizard-movie"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  :no-draw-seg #x2
                  )
                (new 'static 'scene-actor
                  :name "v-snake"
                  :level 'wasall
                  :art-group "skel-v-snake"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  :no-draw-seg #x2
                  )
                (new 'static 'scene-actor
                  :name "snake-wheel-fma"
                  :level 'desliz
                  :art-group "skel-snake-wheel-fma"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                )
              :load-point "desert-lizard-corral"
              :end-point "desert-lizard-corral-post"
              :borrow '((desert-game alias desert copy desliz special))
              :sfx-volume -1.0
              :ambient-volume -1.0
              :music-delay 1500.0
              :scene-task #x30
              :on-running #f
              :on-complete #f
              )
            )

(load-scene (new 'static 'scene
              :name "desert-courserace-win"
              :extra #f
              :info #f
              :scene-flags (scene-flags scf1 scf2 scf3 scf4 scf5 scf6)
              :mask-to-clear (process-mask movie projectile)
              :entity "camera-start-178"
              :art-group "scenecamera"
              :anim "desert-courserace-win"
              :parts 2
              :command-list '((0 (fadein (frame-time-30 5))) (2881 (fadeout (frame-time-30 45))))
              :cut-list '()
              :wait-ground-time (seconds 1)
              :actor (new 'static 'boxed-array :type scene-actor
                (new 'static 'scene-actor
                  :name "scenecamera"
                  :level #f
                  :art-group "skel-scenecamera"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :camera 4
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "jakc-highres"
                  :level 'destrack
                  :art-group "skel-jakc-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  :no-draw-seg #x80
                  )
                (new 'static 'scene-actor
                  :name "sidekick-highres"
                  :level 'destrack
                  :art-group "skel-sidekick-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                )
              :load-point #f
              :end-point #f
              :borrow '((desert-game alias desert copy destrack display))
              :sfx-volume -1.0
              :ambient-volume -1.0
              :music-delay 1500.0
              :on-running #f
              :on-complete #f
              )
            )

(load-scene (new 'static 'scene
              :name "desert-jak-gets-on-t-a"
              :extra #f
              :info #f
              :scene-flags (scene-flags scf1 scf2 scf3 scf4)
              :mask-to-clear (process-mask movie projectile)
              :entity "scene-stage-211"
              :art-group "scenecamera"
              :anim "desert-jak-gets-on-t-a"
              :parts 11
              :command-list '((0
                  (fadein (frame-time-30 5))
                  (kill "terraformer-1")
                  (apply ,(lambda :behavior scene-player
                            ()
                            (set-setting! 'fog-special-interp-targ #f 0.4 0)
                            (set-setting! 'fog-special-interp-rate #f 100.0 0)
                            (none)
                            )
                         )
                  )
                (26 (part-tracker
                      "group-terraformer-foot-impact-dust"
                      entity
                      "particleman"
                      joint
                      "particleV"
                      track
                      #f
                      duration
                      (frame-range 26 28)
                      )
                    )
                (28 (part-tracker
                      "group-terraformer-fma-explosion"
                      entity
                      "particleman"
                      joint
                      "particleA"
                      track
                      #t
                      duration
                      (frame-time-30 30)
                      )
                    )
                (36 (part-tracker
                      "group-terraformer-fma-explosion"
                      entity
                      "particleman"
                      joint
                      "particleB"
                      track
                      #t
                      duration
                      (frame-time-30 30)
                      )
                    )
                (49 (part-tracker
                      "group-terraformer-fma-explosion"
                      entity
                      "particleman"
                      joint
                      "particleC"
                      track
                      #t
                      duration
                      (frame-time-30 30)
                      )
                    )
                (55 (part-tracker
                      "group-terraformer-fma-explosion"
                      entity
                      "particleman"
                      joint
                      "particleA"
                      track
                      #t
                      duration
                      (frame-time-30 30)
                      )
                    )
                (68 (part-tracker
                      "group-terraformer-fma-explosion"
                      entity
                      "particleman"
                      joint
                      "particleB"
                      track
                      #t
                      duration
                      (frame-time-30 30)
                      )
                    )
                (73 (part-tracker
                      "group-terraformer-fma-explosion"
                      entity
                      "particleman"
                      joint
                      "particleC"
                      track
                      #t
                      duration
                      (frame-time-30 30)
                      )
                    )
                (88 (part-tracker
                      "group-terraformer-fma-explosion"
                      entity
                      "particleman"
                      joint
                      "particleA"
                      track
                      #t
                      duration
                      (frame-time-30 30)
                      )
                    )
                (95 (part-tracker
                      "group-terraformer-fma-explosion"
                      entity
                      "particleman"
                      joint
                      "particleB"
                      track
                      #t
                      duration
                      (frame-time-30 30)
                      )
                    )
                (103 (part-tracker
                       "group-terraformer-fma-explosion"
                       entity
                       "particleman"
                       joint
                       "particleC"
                       track
                       #t
                       duration
                       (frame-time-30 30)
                       )
                     )
                (108 (part-tracker
                       "group-terraformer-fma-explosion"
                       entity
                       "particleman"
                       joint
                       "particleA"
                       track
                       #t
                       duration
                       (frame-time-30 30)
                       )
                     )
                (117 (part-tracker
                       "group-terraformer-fma-explosion"
                       entity
                       "particleman"
                       joint
                       "particleB"
                       track
                       #t
                       duration
                       (frame-time-30 30)
                       )
                     )
                (127 (part-tracker
                       "group-terraformer-fma-explosion"
                       entity
                       "particleman"
                       joint
                       "particleC"
                       track
                       #t
                       duration
                       (frame-time-30 30)
                       )
                     )
                (132 (part-tracker
                       "group-terraformer-foot-impact-dust"
                       entity
                       "particleman"
                       joint
                       "particleW"
                       track
                       #f
                       duration
                       (frame-range 132 134)
                       )
                     )
                (138 (part-tracker
                       "group-terraformer-fma-explosion"
                       entity
                       "particleman"
                       joint
                       "particleB"
                       track
                       #t
                       duration
                       (frame-time-30 30)
                       )
                     )
                (142 (part-tracker
                       "group-terraformer-fma-explosion"
                       entity
                       "particleman"
                       joint
                       "particleC"
                       track
                       #t
                       duration
                       (frame-time-30 30)
                       )
                     )
                (150 (part-tracker
                       "group-terraformer-fma-explosion"
                       entity
                       "particleman"
                       joint
                       "particleA"
                       track
                       #t
                       duration
                       (frame-time-30 30)
                       )
                     )
                (160 (part-tracker
                       "group-terraformer-fma-explosion"
                       entity
                       "particleman"
                       joint
                       "particleB"
                       track
                       #t
                       duration
                       (frame-time-30 30)
                       )
                     )
                (200 (part-tracker
                       "group-terraformer-fma-explosion"
                       entity
                       "particleman"
                       joint
                       "particleC"
                       track
                       #t
                       duration
                       (frame-time-30 30)
                       )
                     )
                (210 (part-tracker
                       "group-terraformer-fma-explosion"
                       entity
                       "particleman"
                       joint
                       "particleA"
                       track
                       #t
                       duration
                       (frame-time-30 30)
                       )
                     )
                (230 (part-tracker
                       "group-terraformer-fma-explosion"
                       entity
                       "particleman"
                       joint
                       "particleB"
                       track
                       #t
                       duration
                       (frame-time-30 30)
                       )
                     )
                (240 (part-tracker
                       "group-terraformer-fma-explosion"
                       entity
                       "particleman"
                       joint
                       "particleC"
                       track
                       #t
                       duration
                       (frame-time-30 30)
                       )
                     )
                (270 (part-tracker
                       "group-terraformer-fma-explosion"
                       entity
                       "particleman"
                       joint
                       "particleA"
                       track
                       #t
                       duration
                       (frame-time-30 30)
                       )
                     )
                (305 (part-tracker
                       "group-terraformer-fma-explosion"
                       entity
                       "particleman"
                       joint
                       "particleB"
                       track
                       #t
                       duration
                       (frame-time-30 30)
                       )
                     )
                (310 (part-tracker
                       "group-terraformer-fma-explosion"
                       entity
                       "particleman"
                       joint
                       "particleC"
                       track
                       #t
                       duration
                       (frame-time-30 30)
                       )
                     )
                (318 (part-tracker
                       "group-terraformer-fma-explosion"
                       entity
                       "particleman"
                       joint
                       "particleA"
                       track
                       #t
                       duration
                       (frame-time-30 30)
                       )
                     )
                (350 (part-tracker
                       "group-terraformer-fma-explosion"
                       entity
                       "particleman"
                       joint
                       "particleB"
                       track
                       #t
                       duration
                       (frame-time-30 30)
                       )
                     )
                (362 (part-tracker
                       "group-terraformer-fma-explosion"
                       entity
                       "particleman"
                       joint
                       "particleC"
                       track
                       #t
                       duration
                       (frame-time-30 30)
                       )
                     )
                (390 (part-tracker
                       "group-terraformer-fma-explosion"
                       entity
                       "particleman"
                       joint
                       "particleA"
                       track
                       #t
                       duration
                       (frame-time-30 30)
                       )
                     )
                (399
                  (part-tracker
                    "group-terraformer-fma-detach"
                    entity
                    "particleman"
                    joint
                    "particleD"
                    track
                    #f
                    duration
                    (frame-time-30 2)
                    )
                  (part-tracker
                    "group-terraformer-fma-smoke"
                    entity
                    "particleman"
                    joint
                    "particleD"
                    track
                    #t
                    duration
                    (frame-range 399 1000)
                    )
                  (part-tracker
                    "group-terraformer-fma-thrusters"
                    entity
                    "particleman"
                    joint
                    "particleE"
                    track
                    #t
                    duration
                    (frame-range 399 1000)
                    )
                  (part-tracker
                    "group-terraformer-fma-thrusters"
                    entity
                    "particleman"
                    joint
                    "particleF"
                    track
                    #t
                    duration
                    (frame-range 399 1000)
                    )
                  (part-tracker
                    "group-terraformer-fma-thrusters"
                    entity
                    "particleman"
                    joint
                    "particleG"
                    track
                    #t
                    duration
                    (frame-range 399 1000)
                    )
                  (part-tracker
                    "group-terraformer-fma-thrusters-sm"
                    entity
                    "particleman"
                    joint
                    "particleH"
                    track
                    #t
                    duration
                    (frame-range 399 1000)
                    )
                  (part-tracker
                    "group-terraformer-fma-thrusters-sm"
                    entity
                    "particleman"
                    joint
                    "particleI"
                    track
                    #t
                    duration
                    (frame-range 399 1000)
                    )
                  (part-tracker
                    "group-terraformer-fma-thrusters-sm"
                    entity
                    "particleman"
                    joint
                    "particleJ"
                    track
                    #t
                    duration
                    (frame-range 399 1000)
                    )
                  )
                (400 (part-tracker
                       "group-terraformer-fma-explosion"
                       entity
                       "particleman"
                       joint
                       "particleB"
                       track
                       #t
                       duration
                       (frame-time-30 30)
                       )
                     )
                (410 (apply ,(lambda :behavior scene-player
                               ()
                               (set-setting! 'fog-special-interp-targ #f 0.3 0)
                               (set-setting! 'fog-special-interp-rate #f 0.05 0)
                               (none)
                               )
                            )
                     )
                (430 (part-tracker
                       "group-terraformer-fma-explosion"
                       entity
                       "particleman"
                       joint
                       "particleC"
                       track
                       #t
                       duration
                       (frame-time-30 30)
                       )
                     )
                (465 (part-tracker
                       "group-terraformer-fma-explosion"
                       entity
                       "particleman"
                       joint
                       "particleA"
                       track
                       #t
                       duration
                       (frame-time-30 30)
                       )
                     )
                (470 (part-tracker
                       "group-terraformer-fma-explosion"
                       entity
                       "particleman"
                       joint
                       "particleB"
                       track
                       #t
                       duration
                       (frame-time-30 30)
                       )
                     )
                (490 (part-tracker
                       "group-terraformer-fma-explosion"
                       entity
                       "particleman"
                       joint
                       "particleC"
                       track
                       #t
                       duration
                       (frame-time-30 30)
                       )
                     )
                (515 (part-tracker
                       "group-terraformer-fma-explosion"
                       entity
                       "particleman"
                       joint
                       "particleA"
                       track
                       #t
                       duration
                       (frame-time-30 30)
                       )
                     )
                (530 (part-tracker
                       "group-terraformer-fma-explosion"
                       entity
                       "particleman"
                       joint
                       "particleB"
                       track
                       #t
                       duration
                       (frame-time-30 30)
                       )
                     )
                (543 (part-tracker
                       "group-terraformer-fma-explosion"
                       entity
                       "particleman"
                       joint
                       "particleC"
                       track
                       #t
                       duration
                       (frame-time-30 30)
                       )
                     )
                (570 (part-tracker
                       "group-terraformer-fma-explosion"
                       entity
                       "particleman"
                       joint
                       "particleA"
                       track
                       #t
                       duration
                       (frame-time-30 30)
                       )
                     )
                (595 (part-tracker
                       "group-terraformer-fma-explosion"
                       entity
                       "particleman"
                       joint
                       "particleB"
                       track
                       #t
                       duration
                       (frame-time-30 30)
                       )
                     )
                (610 (part-tracker
                       "group-terraformer-fma-explosion"
                       entity
                       "particleman"
                       joint
                       "particleC"
                       track
                       #t
                       duration
                       (frame-time-30 30)
                       )
                     )
                (650 (fadeout (frame-time-30 10)))
                (10000
                  (apply ,(lambda :behavior scene-player
                            ()
                            (when (-> self aborted?)
                              (disable *screen-filter*)
                              (set-blackout-frames (seconds 0.2))
                              (remove-setting! 'allow-blackout)
                              (task-close! "desert-final-boss-walker")
                              )
                            (none)
                            )
                         )
                  (want-load 'wasall 'desert-game 'desertb 'deswalk)
                  (save)
                  )
                )
              :cut-list '()
              :wait-ground-time (seconds 1)
              :actor (new 'static 'boxed-array :type scene-actor
                (new 'static 'scene-actor
                  :name "scenecamera"
                  :level #f
                  :art-group "skel-scenecamera"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :camera 4
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "terraformer-des-fma"
                  :level 'desboss1
                  :art-group "skel-terraformer-des-fma"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "terraformer-des-fma-leg-a"
                  :level 'desboss1
                  :art-group "skel-terraformer-des-fma-leg-a"
                  :prefix "lf-"
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "terraformer-des-fma-leg-a"
                  :level 'desboss1
                  :art-group "skel-terraformer-des-fma-leg-a"
                  :prefix "lm-"
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "terraformer-des-fma-leg-a"
                  :level 'desboss1
                  :art-group "skel-terraformer-des-fma-leg-a"
                  :prefix "lr-"
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "terraformer-des-fma-leg-a"
                  :level 'desboss1
                  :art-group "skel-terraformer-des-fma-leg-a"
                  :prefix "rf-"
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "terraformer-des-fma-leg-a"
                  :level 'desboss1
                  :art-group "skel-terraformer-des-fma-leg-a"
                  :prefix "rm-"
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "terraformer-des-fma-leg-a"
                  :level 'desboss1
                  :art-group "skel-terraformer-des-fma-leg-a"
                  :prefix "rr-"
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "terraformer-des-fma-leg-b"
                  :level 'desboss1
                  :art-group "skel-terraformer-des-fma-leg-b"
                  :prefix "lf-"
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "terraformer-des-fma-leg-b"
                  :level 'desboss1
                  :art-group "skel-terraformer-des-fma-leg-b"
                  :prefix "lm-"
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "terraformer-des-fma-leg-b"
                  :level 'desboss1
                  :art-group "skel-terraformer-des-fma-leg-b"
                  :prefix "lr-"
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "terraformer-des-fma-leg-b"
                  :level 'desboss1
                  :art-group "skel-terraformer-des-fma-leg-b"
                  :prefix "rf-"
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "terraformer-des-fma-leg-b"
                  :level 'desboss1
                  :art-group "skel-terraformer-des-fma-leg-b"
                  :prefix "rm-"
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "terraformer-des-fma-leg-b"
                  :level 'desboss1
                  :art-group "skel-terraformer-des-fma-leg-b"
                  :prefix "rr-"
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "terraformer-des-fma-leg-c"
                  :level 'desboss1
                  :art-group "skel-terraformer-des-fma-leg-c"
                  :prefix "lf-"
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "terraformer-des-fma-leg-c"
                  :level 'desboss1
                  :art-group "skel-terraformer-des-fma-leg-c"
                  :prefix "lm-"
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "terraformer-des-fma-leg-c"
                  :level 'desboss1
                  :art-group "skel-terraformer-des-fma-leg-c"
                  :prefix "lr-"
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "terraformer-des-fma-leg-c"
                  :level 'desboss1
                  :art-group "skel-terraformer-des-fma-leg-c"
                  :prefix "rf-"
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "terraformer-des-fma-leg-c"
                  :level 'desboss1
                  :art-group "skel-terraformer-des-fma-leg-c"
                  :prefix "rm-"
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "terraformer-des-fma-leg-c"
                  :level 'desboss1
                  :art-group "skel-terraformer-des-fma-leg-c"
                  :prefix "rr-"
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "terraformer-des-fma-spike"
                  :level 'desboss1
                  :art-group "skel-terraformer-des-fma-spike"
                  :prefix "lf-"
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "terraformer-des-fma-spike"
                  :level 'desboss1
                  :art-group "skel-terraformer-des-fma-spike"
                  :prefix "lm-"
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "terraformer-des-fma-spike"
                  :level 'desboss1
                  :art-group "skel-terraformer-des-fma-spike"
                  :prefix "lr-"
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "terraformer-des-fma-spike"
                  :level 'desboss1
                  :art-group "skel-terraformer-des-fma-spike"
                  :prefix "rf-"
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "terraformer-des-fma-spike"
                  :level 'desboss1
                  :art-group "skel-terraformer-des-fma-spike"
                  :prefix "rm-"
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "terraformer-des-fma-spike"
                  :level 'desboss1
                  :art-group "skel-terraformer-des-fma-spike"
                  :prefix "rr-"
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "particleman"
                  :level 'desboss1
                  :art-group "skel-particleman"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                )
              :load-point "desert-boss-res-a"
              :end-point "desert-deswalk"
              :borrow '((desert-game alias desert copy desboss1 special))
              :sfx-volume -1.0
              :ambient-volume -1.0
              :music-delay 1500.0
              :scene-task #x10b
              :on-running #f
              :on-complete #f
              )
            )

;; WARN: Return type mismatch float vs none.
(defun spt-birth-func-brightness-t-foot-impact-dust ((arg0 sparticle-system) (arg1 sparticle-cpuinfo) (arg2 sparticle-launchinfo))
  (let ((s5-0 (+ (logand 0 (rand-uint31-gen *random-generator*)) 140))
        (s3-0 (logand 0 (rand-uint31-gen *random-generator*)))
        (s4-0 (+ (logand 0 (rand-uint31-gen *random-generator*)) 20))
        (v1-3 (+ (logand 0 (rand-uint31-gen *random-generator*)) 65))
        )
    (set! (-> arg2 rotate-x) (the float (- s5-0 s3-0)))
    (set! (-> arg2 rotate-y) (the float (- s5-0 s4-0)))
    (set! (-> arg2 rotate-z) (the float (- s5-0 v1-3)))
    )
  (none)
  )

(defpartgroup group-terraformer-foot-impact-dust
  :id 356
  :flags (sp0)
  :bounds (static-bspherem 0 0 0 100)
  :parts ((sp-item 1525))
  )

(defpart 1525
  :init-specs ((:texture (big-cloud level-default-sprite))
    (:birth-func 'spt-birth-func-brightness-t-foot-impact-dust)
    (:num 8.0)
    (:scale-x (meters 10) (meters 10))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 0.0)
    (:g 0.0)
    (:b 0.0)
    (:a 32.0 32.0)
    (:vel-y (meters 0.2) (meters 0.1))
    (:scalevel-x (meters 0.033333335))
    (:rotvel-z (degrees -0.2) (degrees 0.4))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.042666666 -0.042666666)
    (:accel-y (meters -0.00033333333))
    (:friction 0.95)
    (:timer (seconds 5))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-13))
    (:conerot-x (degrees 60) (degrees 30))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpartgroup group-terraformer-fma-explosion
  :id 357
  :flags (sp0 sp5)
  :bounds (static-bspherem 0 0 0 100)
  :parts ((sp-item 1526 :flags (sp3))
    (sp-item 1527 :flags (sp3))
    (sp-item 1528 :period (seconds 30) :length (seconds 0.085))
    (sp-item 1529 :flags (sp3))
    (sp-item 1530 :period (seconds 30) :length (seconds 0.167))
    (sp-item 1531 :period (seconds 30) :length (seconds 0.5))
    )
  )

(defpart 1529
  :init-specs ((:texture (starflash level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 100))
    (:rot-x (degrees 2.25))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 80.0)
    (:b 40.0)
    (:a 128.0)
    (:omega (degrees 6767.9995))
    (:scalevel-x (meters -0.33333334))
    (:scalevel-y :copy scalevel-x)
    (:timer (seconds 0.135))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 4096.0)
    )
  )

(defpart 1526
  :init-specs ((:texture (glow-soft level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 100))
    (:rot-x (degrees 22.5))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 128.0)
    (:b 40.0)
    (:a 64.0)
    (:fade-a -0.21333334)
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    )
  )

(defpart 1527
  :init-specs ((:texture (bigpuff level-default-sprite))
    (:num 10.0)
    (:scale-x (meters 10) (meters 5))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 160.0)
    (:b 40.0)
    (:a 128.0)
    (:vel-y (meters 0) (meters 0.16666667))
    (:scalevel-x (meters 0.05))
    (:scalevel-y :copy scalevel-x)
    (:fade-g -0.13333334)
    (:fade-b -0.05)
    (:fade-a -0.21333334 -0.21333334)
    (:friction 0.93)
    (:timer (seconds 2))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:conerot-x (degrees 0) (degrees 360))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 1528
  :init-specs ((:texture (glow-hotdot level-default-sprite))
    (:num 5.0 5.0)
    (:scale-x (meters 1) (meters 3))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 80.0)
    (:b 0.0)
    (:a 128.0)
    (:omega (degrees 0.225))
    (:vel-y (meters 0) (meters 0.6666667))
    (:fade-a -0.21333334 -0.21333334)
    (:accel-y (meters -0.0033333334))
    (:friction 0.93 0.04)
    (:timer (seconds 2))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:func 'sparticle-motion-blur)
    (:conerot-x (degrees 100.00001) (degrees 80))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 1530
  :init-specs ((:texture (explosion-edge level-default-sprite))
    (:num 2.0)
    (:scale-x (meters 10) (meters 5))
    (:rot-y (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 80.0 20.0)
    (:b 30.0)
    (:a 128.0)
    (:vel-y (meters 0.8333333) (meters 0.33333334))
    (:scalevel-x (meters 0.083333336))
    (:scalevel-y :copy scalevel-x)
    (:fade-g -0.17777778)
    (:fade-b -0.06666667)
    (:fade-a -0.28444445 -0.28444445)
    (:friction 0.7)
    (:timer (seconds 1.5))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:func 'sparticle-2d-spline-align-instant)
    (:conerot-x (degrees 0) (degrees 360))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 1531
  :init-specs ((:texture (explo-texture level-default-sprite))
    (:birth-func 'birth-func-curve)
    (:num 1.0)
    (:x (meters -1) (meters 2))
    (:y (meters 0) (meters 2))
    (:scale-x (meters 1))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 128.0)
    (:b 128.0)
    (:a 128.0)
    (:vel-y (meters 0.16666667) (meters 0.083333336))
    (:friction 0.9)
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-14))
    (:userdata 0.0)
    (:func 'live-func-curve)
    (:conerot-x (degrees 20) (degrees 90))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(if #t
    (set! *range-terraformer-fma-explo-color* (new 'static 'curve-color-fast
                                                :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                                :ys (new 'static 'inline-array vector 4
                                                  (new 'static 'vector :x 255.0 :y 255.0 :z 255.0 :w 128.0)
                                                  (new 'static 'vector :x 255.0 :y 255.0 :z 255.0 :w 128.0)
                                                  (new 'static 'vector :x 255.0 :y 255.0 :z 255.0 :w 128.0)
                                                  (new 'static 'vector :x 255.0 :y 255.0 :z 255.0 :w 128.0)
                                                  )
                                                :one-over-x-deltas (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
                                                )
          )
    )

(if #t
    (set! *range-terraformer-fma-explo-alpha* (new 'static 'curve2d-fast
                                                :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                                :ys (new 'static 'vector :x 128.0 :y 128.0 :z 129.0 :w 130.0)
                                                :one-over-x-deltas (new 'static 'vector :y 1.0 :z 1.0 :w 1.0)
                                                )
          )
    )

(if #t
    (set! *range-terraformer-fma-explo-scale-x* (new 'static 'curve2d-fast
                                                  :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                                  :ys (new 'static 'vector :x 10.0 :y 15.0 :z 16.0 :w 17.0)
                                                  :one-over-x-deltas (new 'static 'vector :x 5.0 :y 1.0 :z 1.0 :w 1.0)
                                                  )
          )
    )

(if #t
    (set! *range-terraformer-fma-explo-scale-y* (new 'static 'curve2d-fast
                                                  :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                                  :ys (new 'static 'vector :x 10.0 :y 15.0 :z 16.0 :w 17.0)
                                                  :one-over-x-deltas (new 'static 'vector :x 5.0 :y 1.0 :z 1.0 :w 1.0)
                                                  )
          )
    )

(if #t
    (set! *curve-terraformer-fma-explo-alpha* (new 'static 'curve2d-fast
                                                :xs (new 'static 'vector :y -0.05 :z -0.7 :w -1.0)
                                                :ys (new 'static 'vector :y 1.0 :z 0.8)
                                                :one-over-x-deltas (new 'static 'vector :x 20.0 :y -0.3076923 :z -2.6666665 :w 1.0)
                                                )
          )
    )

(if #t
    (set! *curve-terraformer-fma-explo-scale-x* (new 'static 'curve2d-fast
                                                  :xs (new 'static 'vector :y -0.8 :z -1.0 :w -2.0)
                                                  :ys (new 'static 'vector :y 1.0 :z 1.5 :w 2.5)
                                                  :one-over-x-deltas (new 'static 'vector :x 1.25 :y 2.5000002 :z 1.0 :w 1.0)
                                                  )
          )
    )

(if #t
    (set! *curve-terraformer-fma-explo-scale-y* (new 'static 'curve2d-fast
                                                  :xs (new 'static 'vector :y -0.8 :z -1.0 :w -2.0)
                                                  :ys (new 'static 'vector :y 1.0 :z 1.5 :w 2.5)
                                                  :one-over-x-deltas (new 'static 'vector :x 1.25 :y 2.5000002 :z 1.0 :w 1.0)
                                                  )
          )
    )

(define *part-terraformer-fma-explosion-texture-curve-settings* (new 'static 'particle-curve-settings
                                                                  :lifetime-base (seconds 0.1)
                                                                  :lifetime-offset (seconds 0.6)
                                                                  :flags (particle-curve-flags pcf0)
                                                                  )
        )

(set! (-> *part-id-table* 1531 init-specs 16 initial-valuef)
      (the-as float *part-terraformer-fma-explosion-texture-curve-settings*)
      )

(set! (-> *part-terraformer-fma-explosion-texture-curve-settings* color-start)
      *range-terraformer-fma-explo-color*
      )

(set! (-> *part-terraformer-fma-explosion-texture-curve-settings* alpha-start)
      *range-terraformer-fma-explo-alpha*
      )

(set! (-> *part-terraformer-fma-explosion-texture-curve-settings* scale-x-start)
      *range-terraformer-fma-explo-scale-x*
      )

(set! (-> *part-terraformer-fma-explosion-texture-curve-settings* scale-y-start)
      *range-terraformer-fma-explo-scale-y*
      )

(set! (-> *part-terraformer-fma-explosion-texture-curve-settings* r-scalar) #f)

(set! (-> *part-terraformer-fma-explosion-texture-curve-settings* g-scalar) #f)

(set! (-> *part-terraformer-fma-explosion-texture-curve-settings* b-scalar) #f)

(set! (-> *part-terraformer-fma-explosion-texture-curve-settings* a-scalar)
      *curve-terraformer-fma-explo-alpha*
      )

(set! (-> *part-terraformer-fma-explosion-texture-curve-settings* scale-x-scalar)
      *curve-terraformer-fma-explo-scale-x*
      )

(set! (-> *part-terraformer-fma-explosion-texture-curve-settings* scale-y-scalar)
      *curve-terraformer-fma-explo-scale-y*
      )

(defpartgroup group-terraformer-fma-detach
  :id 358
  :flags (sp0)
  :bounds (static-bspherem 0 0 0 100)
  :parts ((sp-item 1532 :flags (sp3)) (sp-item 1533 :flags (sp3)) (sp-item 1534 :flags (sp3 sp7)))
  )

(defpart 1534
  :init-specs ((:texture (starflash level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 500))
    (:rot-x (degrees 2250))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 255.0)
    (:omega (degrees 18011.25))
    (:scalevel-x (meters -12.5))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -6.375)
    (:timer (seconds 0.135))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 409600.0)
    )
  )

(defpart 1533
  :init-specs ((:texture (middot level-default-sprite))
    (:num 100.0)
    (:scale-x (meters 2) (meters 4))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 128.0)
    (:omega (degrees 0.45))
    (:vel-y (meters 1.3333334) (meters 0.6666667))
    (:fade-a -0.21333334 -0.21333334)
    (:friction 0.94 0.04)
    (:timer (seconds 2))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:func 'sparticle-motion-blur)
    (:conerot-x (degrees 80) (degrees 20))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 1532
  :init-specs ((:texture (big-cloud level-default-sprite))
    (:num 100.0)
    (:scale-x (meters 10) (meters 20))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 80.0)
    (:g 0.0)
    (:b 255.0)
    (:a 128.0)
    (:vel-y (meters 1) (meters 1))
    (:scalevel-x (meters 0.06666667) (meters 0.33333334))
    (:scalevel-y :copy scalevel-x)
    (:fade-r 0.1)
    (:fade-g 0.5)
    (:fade-b -0.775)
    (:fade-a -0.42666668 -0.42666668)
    (:friction 0.93 0.02)
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:next-time (seconds 0.667))
    (:next-launcher 1535)
    (:conerot-x (degrees 60) (degrees 40))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 1535
  :init-specs ((:fade-r 0.0) (:fade-g 0.0) (:fade-b 0.0))
  )

(defpartgroup group-terraformer-fma-smoke
  :id 359
  :flags (sp0)
  :bounds (static-bspherem 0 0 0 100)
  :parts ((sp-item 1536 :flags (sp7)) (sp-item 1537 :flags (sp7)))
  )

(defpart 1536
  :init-specs ((:texture (big-cloud level-default-sprite))
    (:birth-func 'birth-func-texture-group)
    (:num 1.0 0.1)
    (:x (meters -20) (meters 40))
    (:y (meters -20) (meters 40))
    (:z (meters -20) (meters 40))
    (:scale-x (meters 40) (meters 60))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 60.0 80.0)
    (:b 0.0 20.0)
    (:a 0.0)
    (:scalevel-x (meters -0.06666667) (meters -0.13333334))
    (:rotvel-z (degrees -0.033333335) (degrees 0.06666667))
    (:scalevel-y :copy scalevel-x)
    (:fade-g -0.13333334)
    (:fade-a 0.42666668)
    (:timer (seconds 20))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:userdata :data (new 'static 'boxed-array :type int32 5 1 0 #x40a000 #x405c00))
    (:next-time (seconds 0.5))
    (:next-launcher 1538)
    (:rotate-x (degrees 0) (degrees 3600))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 1538
  :init-specs ((:fade-a -0.128 -0.128))
  )

(defpart 1537
  :init-specs ((:texture (big-cloud level-default-sprite))
    (:birth-func 'birth-func-texture-group)
    (:num 1.0 0.1)
    (:x (meters -10) (meters 20))
    (:y (meters -10) (meters 20))
    (:z (meters -10) (meters 20))
    (:scale-x (meters 20) (meters 50))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 16.0 64.0)
    (:g :copy r)
    (:b :copy r)
    (:a 0.0)
    (:vel-x (meters -0.033333335) (meters 0.06666667))
    (:vel-y (meters -0.033333335) (meters 0.06666667))
    (:vel-z (meters -0.033333335) (meters 0.06666667))
    (:scalevel-x (meters 0.033333335) (meters 0.1))
    (:rotvel-z (degrees -0.033333335) (degrees 0.06666667))
    (:scalevel-y :copy scalevel-x)
    (:fade-a 0.42666668)
    (:timer (seconds 20))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-13))
    (:userdata :data (new 'static 'boxed-array :type int32 5 1 0 #x40a000 #x409b00 #x409b00))
    (:next-time (seconds 0.5))
    (:next-launcher 1539)
    (:rotate-x (degrees 0) (degrees 3600))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 1539
  :init-specs ((:fade-a -0.021333333 -0.042666666))
  )

(defpartgroup group-terraformer-fma-thrusters
  :id 360
  :flags (sp0 sp5)
  :bounds (static-bspherem 0 0 0 100)
  :parts ((sp-item 1540 :flags (sp6)) (sp-item 1541 :flags (sp6)))
  )

(defpart 1541
  :init-specs ((:texture (colorflash level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 30) (meters 5))
    (:rot-x (degrees 112.5))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 255.0)
    (:omega (degrees 45011.25))
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-3 glow))
    (:userdata 81920.0)
    )
  )

(defpart 1540
  :init-specs ((:texture (glow-soft level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 100))
    (:rot-x (degrees 225))
    (:scale-y :copy scale-x)
    (:r 100.0)
    (:g 0.0)
    (:b 255.0)
    (:a 50.0 10.0)
    (:omega (degrees 45011.25))
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-3 glow))
    (:userdata 81920.0)
    )
  )

(defpartgroup group-terraformer-fma-thrusters-sm
  :id 361
  :flags (sp0 sp5)
  :bounds (static-bspherem 0 0 0 100)
  :parts ((sp-item 1542 :flags (sp6)) (sp-item 1543 :flags (sp6)))
  )

(defpart 1543
  :init-specs ((:texture (colorflash level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 10) (meters 2))
    (:rot-x (degrees 112.5))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 255.0)
    (:omega (degrees 45011.25))
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-3 glow))
    (:userdata 81920.0)
    )
  )

(defpart 1542
  :init-specs ((:texture (glow-soft level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 30))
    (:rot-x (degrees 225))
    (:scale-y :copy scale-x)
    (:r 100.0)
    (:g 0.0)
    (:b 255.0)
    (:a 50.0 10.0)
    (:omega (degrees 45011.25))
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-3 glow))
    (:userdata 81920.0)
    )
  )

(load-scene (new 'static 'scene
              :name "desert-jak-gets-on-t-b"
              :extra #f
              :info #f
              :scene-flags (scene-flags scf1 scf2 scf3 scf4)
              :mask-to-clear (process-mask movie projectile)
              :entity "scene-stage-211"
              :art-group "scenecamera"
              :anim "desert-jak-gets-on-t-b"
              :parts 12
              :command-list '((0 (want-display 'deswalk 'special))
                (1 (apply ,(lambda :behavior scene-player
                             ()
                             (set-setting! 'fog-special-interp-targ #f 0.3 0)
                             (set-setting! 'dust-storm-fog-scalar #f 0.5 0)
                             (set-setting! 'fog-special-interp-rate #f 100.0 0)
                             (none)
                             )
                          )
                   )
                (661 (fadein (frame-time-30 20)))
                (662
                  (part-tracker
                    "group-terraformer-fma2-smoke"
                    entity
                    "particleman"
                    joint
                    "particleD"
                    track
                    #t
                    duration
                    (frame-range 662 1169)
                    )
                  (part-tracker
                    "group-terraformer-fma2-thrusters"
                    entity
                    "particleman"
                    joint
                    "particleE"
                    track
                    #t
                    duration
                    (frame-range 662 1169)
                    )
                  (part-tracker
                    "group-terraformer-fma2-thrusters"
                    entity
                    "particleman"
                    joint
                    "particleF"
                    track
                    #t
                    duration
                    (frame-range 662 1169)
                    )
                  (part-tracker
                    "group-terraformer-fma2-thrusters"
                    entity
                    "particleman"
                    joint
                    "particleG"
                    track
                    #t
                    duration
                    (frame-range 662 1169)
                    )
                  (part-tracker
                    "group-terraformer-fma2-thrusters-sm"
                    entity
                    "particleman"
                    joint
                    "particleH"
                    track
                    #t
                    duration
                    (frame-range 662 1169)
                    )
                  (part-tracker
                    "group-terraformer-fma2-thrusters-sm"
                    entity
                    "particleman"
                    joint
                    "particleI"
                    track
                    #t
                    duration
                    (frame-range 662 1169)
                    )
                  (part-tracker
                    "group-terraformer-fma2-thrusters-sm"
                    entity
                    "particleman"
                    joint
                    "particleJ"
                    track
                    #t
                    duration
                    (frame-range 662 1169)
                    )
                  )
                (700 (apply ,(lambda :behavior scene-player
                               ()
                               (set-setting! 'fog-special-interp-targ #f 0.2 0)
                               (set-setting! 'fog-special-interp-rate #f 0.01 0)
                               (none)
                               )
                            )
                     )
                (1169
                  (part-tracker
                    "group-terraformer-fma2-dust-trails"
                    entity
                    "particleman"
                    joint
                    "particleS"
                    track
                    #t
                    duration
                    (frame-time-30 500)
                    )
                  (part-tracker
                    "group-terraformer-fma2-dust-trails"
                    entity
                    "particleman"
                    joint
                    "particleT"
                    track
                    #t
                    duration
                    (frame-time-30 500)
                    )
                  (part-tracker
                    "group-terraformer-fma2-dust-trails"
                    entity
                    "particleman"
                    joint
                    "particleU"
                    track
                    #t
                    duration
                    (frame-time-30 500)
                    )
                  )
                (1171 (part-tracker
                        "group-terraformer-fma2-hit-ground"
                        entity
                        "particleman"
                        joint
                        "particleK"
                        track
                        #f
                        duration
                        (frame-time-30 10)
                        )
                      )
                (1250 (part-tracker
                        "group-terraformer-fma2-hit-ground"
                        entity
                        "particleman"
                        joint
                        "particleL"
                        track
                        #f
                        duration
                        (frame-time-30 10)
                        )
                      )
                (1350 (part-tracker
                        "group-terraformer-fma2-hit-ground"
                        entity
                        "particleman"
                        joint
                        "particleM"
                        track
                        #f
                        duration
                        (frame-time-30 10)
                        )
                      )
                (1400 (part-tracker
                        "group-terraformer-fma2-hit-ground"
                        entity
                        "particleman"
                        joint
                        "particleN"
                        track
                        #f
                        duration
                        (frame-time-30 10)
                        )
                      )
                (1570 (apply ,(lambda :behavior scene-player
                                ()
                                (when (not (-> self aborted?))
                                  (disable *screen-filter*)
                                  (setup
                                    *screen-filter*
                                    (new 'static 'vector :x 255.0 :y 255.0 :z 255.0)
                                    (new 'static 'vector :x 255.0 :y 255.0 :z 255.0 :w 128.0)
                                    (* 0.05 (seconds-per-frame))
                                    (bucket-id tex-hud-pris2)
                                    #x3fffff
                                    #x33001
                                    #t
                                    )
                                  (set-setting! 'allow-blackout #f 0.0 0)
                                  )
                                (none)
                                )
                             )
                      )
                (1630 (setting-reset borrow mode '((desert-game alias desert copy desboss2 special))) (save))
                (10000
                  (apply ,(lambda :behavior scene-player
                            ()
                            (when (-> self aborted?)
                              (disable *screen-filter*)
                              (set-blackout-frames (seconds 0.2))
                              (remove-setting! 'allow-blackout)
                              (task-close! "desert-final-boss-walker")
                              )
                            (none)
                            )
                         )
                  (want-display 'deswalk 'display)
                  (save)
                  )
                )
              :cut-list '(661 917)
              :wait-ground-time (seconds 1)
              :actor (new 'static 'boxed-array :type scene-actor
                (new 'static 'scene-actor
                  :name "scenecamera"
                  :level #f
                  :art-group "skel-scenecamera"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :camera 4
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "terraformer-des-fma"
                  :level 'desboss1
                  :art-group "skel-terraformer-des-fma"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "terraformer-des-fma-spike"
                  :level 'desboss1
                  :art-group "skel-terraformer-des-fma-spike"
                  :prefix "lf-"
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "terraformer-des-fma-spike"
                  :level 'desboss1
                  :art-group "skel-terraformer-des-fma-spike"
                  :prefix "lm-"
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "terraformer-des-fma-spike"
                  :level 'desboss1
                  :art-group "skel-terraformer-des-fma-spike"
                  :prefix "lr-"
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "terraformer-des-fma-spike"
                  :level 'desboss1
                  :art-group "skel-terraformer-des-fma-spike"
                  :prefix "rf-"
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "terraformer-des-fma-spike"
                  :level 'desboss1
                  :art-group "skel-terraformer-des-fma-spike"
                  :prefix "rm-"
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "terraformer-des-fma-spike"
                  :level 'desboss1
                  :art-group "skel-terraformer-des-fma-spike"
                  :prefix "rr-"
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "particleman"
                  :level 'desboss1
                  :art-group "skel-particleman"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "jakc-highres"
                  :level 'desboss1
                  :art-group "skel-jakc-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  :no-draw-seg #x80
                  )
                (new 'static 'scene-actor
                  :name "sidekick-highres"
                  :level 'desboss1
                  :art-group "skel-sidekick-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "des-final-snake"
                  :level 'wasall
                  :art-group "skel-des-final-snake"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  :no-draw-seg #x2
                  )
                (new 'static 'scene-actor
                  :name "snake-wheel-fma"
                  :level 'desboss1
                  :art-group "skel-snake-wheel-fma"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                )
              :load-point "desert-boss-res-b"
              :end-point "desert-deswalk"
              :borrow '((desert-game alias desert copy desboss1 special))
              :sfx-volume -1.0
              :ambient-volume -1.0
              :music-delay 1500.0
              :on-running #f
              :on-complete #f
              )
            )

(defpartgroup group-terraformer-fma2-smoke
  :id 362
  :duration (seconds 20)
  :linger-duration (seconds 20)
  :flags (sp0)
  :bounds (static-bspherem 0 0 0 100)
  :parts ((sp-item 1544 :flags (sp7)) (sp-item 1545 :flags (sp7)))
  )

(defpart 1544
  :init-specs ((:texture (big-cloud level-default-sprite))
    (:birth-func 'birth-func-texture-group)
    (:num 1.0 0.1)
    (:x (meters -20) (meters 40))
    (:y (meters -20) (meters 40))
    (:z (meters -20) (meters 40))
    (:scale-x (meters 40) (meters 60))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 60.0 80.0)
    (:b 0.0 20.0)
    (:a 0.0)
    (:scalevel-x (meters -0.06666667) (meters -0.13333334))
    (:rotvel-z (degrees -0.033333335) (degrees 0.06666667))
    (:scalevel-y :copy scalevel-x)
    (:fade-g -0.13333334)
    (:fade-a 0.42666668)
    (:timer (seconds 20))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:userdata :data (new 'static 'boxed-array :type int32 5 1 0 #x40a000 #x405c00))
    (:next-time (seconds 0.5))
    (:next-launcher 1546)
    (:rotate-x (degrees 0) (degrees 3600))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 1546
  :init-specs ((:fade-a -0.128 -0.128))
  )

(defpart 1545
  :init-specs ((:texture (big-cloud level-default-sprite))
    (:birth-func 'birth-func-texture-group)
    (:num 1.0 0.1)
    (:x (meters -10) (meters 20))
    (:y (meters -10) (meters 20))
    (:z (meters -10) (meters 20))
    (:scale-x (meters 20) (meters 50))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 16.0 64.0)
    (:g :copy r)
    (:b :copy r)
    (:a 0.0)
    (:vel-x (meters -0.033333335) (meters 0.06666667))
    (:vel-y (meters -0.033333335) (meters 0.06666667))
    (:vel-z (meters -0.033333335) (meters 0.06666667))
    (:scalevel-x (meters 0.033333335) (meters 0.1))
    (:rotvel-z (degrees -0.033333335) (degrees 0.06666667))
    (:scalevel-y :copy scalevel-x)
    (:fade-a 0.42666668)
    (:timer (seconds 20))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-13))
    (:userdata :data (new 'static 'boxed-array :type int32 5 1 0 #x40a000 #x409b00 #x409b00))
    (:next-time (seconds 0.5))
    (:next-launcher 1547)
    (:rotate-x (degrees 0) (degrees 3600))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 1547
  :init-specs ((:fade-a -0.021333333 -0.042666666))
  )

(defpartgroup group-terraformer-fma2-thrusters
  :id 363
  :flags (sp0)
  :bounds (static-bspherem 0 0 0 100)
  :parts ((sp-item 1548 :flags (sp6)) (sp-item 1549 :flags (sp6)))
  )

(defpart 1549
  :init-specs ((:texture (colorflash level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 30) (meters 5))
    (:rot-x (degrees 225))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 255.0)
    (:omega (degrees 45011.25))
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-3))
    (:userdata 81920.0)
    )
  )

(defpart 1548
  :init-specs ((:texture (glow-soft level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 100))
    (:rot-x (degrees 225))
    (:scale-y :copy scale-x)
    (:r 100.0)
    (:g 0.0)
    (:b 255.0)
    (:a 50.0 10.0)
    (:omega (degrees 45011.25))
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-3))
    (:userdata 81920.0)
    )
  )

(defpartgroup group-terraformer-fma2-thrusters-sm
  :id 364
  :flags (sp0)
  :bounds (static-bspherem 0 0 0 100)
  :parts ((sp-item 1550 :flags (sp6)) (sp-item 1551 :flags (sp6)))
  )

(defpart 1551
  :init-specs ((:texture (colorflash level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 10) (meters 2))
    (:rot-x (degrees 225))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 255.0)
    (:omega (degrees 45011.25))
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-3))
    (:userdata 81920.0)
    )
  )

(defpart 1550
  :init-specs ((:texture (glow-soft level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 30))
    (:rot-x (degrees 225))
    (:scale-y :copy scale-x)
    (:r 100.0)
    (:g 0.0)
    (:b 255.0)
    (:a 50.0 10.0)
    (:omega (degrees 45011.25))
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-3))
    (:userdata 81920.0)
    )
  )

(defpartgroup group-terraformer-fma2-dust-trails
  :id 365
  :flags (sp0)
  :bounds (static-bspherem 0 0 0 100)
  :parts ((sp-item 1552 :flags (sp7)))
  )

(defpart 1552
  :init-specs ((:texture (big-cloud level-default-sprite))
    (:birth-func 'birth-func-texture-group)
    (:num 0.3 0.3)
    (:x (meters -2) (meters 4))
    (:y (meters -2) (meters 4))
    (:z (meters -2) (meters 4))
    (:scale-x (meters 20) (meters 50))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 190.0)
    (:g 150.0)
    (:b 90.0)
    (:a 0.0)
    (:scalevel-x (meters 0.033333335) (meters 0.1))
    (:rotvel-z (degrees -0.033333335) (degrees 0.06666667))
    (:scalevel-y :copy scalevel-x)
    (:fade-a 1.28)
    (:timer (seconds 20))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-13))
    (:userdata :data (new 'static 'boxed-array :type int32 5 1 0 #x40a000 #x409b00 #x405c00))
    (:next-time (seconds 0.167))
    (:next-launcher 1553)
    (:rotate-x (degrees 0) (degrees 3600))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 1553
  :init-specs ((:fade-a -0.042666666 -0.021333333))
  )

(defpartgroup group-terraformer-fma2-hit-ground
  :id 366
  :flags (sp0 sp4)
  :bounds (static-bspherem 0 0 0 100)
  :parts ((sp-item 1554 :flags (sp7)))
  )

(defpart 1554
  :init-specs ((:texture (edge-cloud level-default-sprite))
    (:birth-func 'birth-func-texture-group)
    (:num 5.0)
    (:scale-x (meters 60) (meters 30))
    (:rot-z (degrees -90))
    (:scale-y :copy scale-x)
    (:r 190.0)
    (:g 150.0)
    (:b 90.0)
    (:a 64.0)
    (:vel-y (meters 0.033333335) (meters 0.1))
    (:scalevel-x (meters 0.1) (meters 0.13333334))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.10666667)
    (:accel-y (meters 0) (meters 0.00033333333))
    (:friction 0.95)
    (:timer (seconds 2))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-13))
    (:userdata :data (new 'static 'boxed-array :type int32 20 1 0 #x409b00 #x40a000 #x405c00))
    (:conerot-x (degrees 0) (degrees 90))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(load-scene (new 'static 'scene
              :name "desert-jak-gets-on-t-c"
              :extra #f
              :info #f
              :scene-flags (scene-flags scf1 scf2 scf3 scf4)
              :mask-to-clear (process-mask movie projectile)
              :entity "scene-stage-211"
              :art-group "scenecamera"
              :anim "desert-jak-gets-on-t-c"
              :parts 8
              :command-list '((0 (apply ,(lambda :behavior scene-player
                             ()
                             (when (not (-> self aborted?))
                               (disable *screen-filter*)
                               (setup
                                 *screen-filter*
                                 (new 'static 'vector :x 255.0 :y 255.0 :z 255.0 :w 128.0)
                                 (new 'static 'vector :x 255.0 :y 255.0 :z 255.0)
                                 (* 0.1 (seconds-per-frame))
                                 (bucket-id tex-hud-pris2)
                                 #x3fffff
                                 #x33001
                                 #t
                                 )
                               (set-setting! 'allow-blackout #f 0.0 0)
                               )
                             (none)
                             )
                          )
                   )
                (120
                  (part-tracker
                    "group-desert-buggy-dust"
                    entity
                    "particleman"
                    joint
                    "particleO"
                    track
                    #t
                    duration
                    (frame-range 120 300)
                    )
                  (part-tracker
                    "group-desert-buggy-dust"
                    entity
                    "particleman"
                    joint
                    "particleP"
                    track
                    #t
                    duration
                    (frame-range 120 300)
                    )
                  (part-tracker
                    "group-desert-buggy-dust"
                    entity
                    "particleman"
                    joint
                    "particleQ"
                    track
                    #t
                    duration
                    (frame-range 120 300)
                    )
                  (part-tracker
                    "group-desert-buggy-dust"
                    entity
                    "particleman"
                    joint
                    "particleR"
                    track
                    #t
                    duration
                    (frame-range 120 300)
                    )
                  )
                (1950 (apply ,(lambda :behavior scene-player
                                ()
                                (set-setting! 'fog-special-interp-targ #f 0.2 0)
                                (set-setting! 'dust-storm-fog-scalar #f 0.5 0)
                                (set-setting! 'fog-special-interp-rate #f 0.05 0)
                                (none)
                                )
                             )
                      )
                (2567 (fadeout (frame-time-30 5)))
                (10000
                  (apply ,(lambda :behavior scene-player
                            ()
                            (when (-> self aborted?)
                              (disable *screen-filter*)
                              (set-blackout-frames (seconds 0.2))
                              (remove-setting! 'allow-blackout)
                              )
                            (none)
                            )
                         )
                  (task-close! "desert-final-boss-walker")
                  )
                )
              :cut-list '()
              :wait-ground-time (seconds 1)
              :actor (new 'static 'boxed-array :type scene-actor
                (new 'static 'scene-actor
                  :name "scenecamera"
                  :level #f
                  :art-group "skel-scenecamera"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :camera 4
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "particleman"
                  :level 'desboss2
                  :art-group "skel-particleman"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "jakc-highres"
                  :level 'desboss2
                  :art-group "skel-jakc-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '((min 2400))
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  :no-draw-seg #x80
                  )
                (new 'static 'scene-actor
                  :name "sidekick-highres"
                  :level 'desboss2
                  :art-group "skel-sidekick-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "des-final-snake"
                  :level 'wasall
                  :art-group "skel-des-final-snake"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  :no-draw-seg #x2
                  )
                (new 'static 'scene-actor
                  :name "snake-wheel-fma"
                  :level 'desboss2
                  :art-group "skel-snake-wheel-fma"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                )
              :load-point "desert-boss-res-b"
              :end-point "desert-deswalk"
              :borrow '((desert-game alias desert copy desboss2 special))
              :sfx-volume -1.0
              :ambient-volume -1.0
              :music-delay 1500.0
              :on-running #f
              :on-complete #f
              )
            )

(load-scene
  (new 'static 'scene
    :name "desert-final-boss-res-b"
    :extra #f
    :info #f
    :scene-flags (scene-flags scf1 scf2 scf3 scf4)
    :mask-to-clear (process-mask movie projectile)
    :entity "scene-stage-209"
    :art-group "scenecamera"
    :anim "desert-final-boss-res-b"
    :parts 21
    :command-list '((0
        (apply
          ,(lambda :behavior scene-player
             ()
             (when (not (-> self aborted?))
               (format #t "here~%")
               (remove-setting! 'allow-blackout)
               (disable *screen-filter*)
               (setup
                 *screen-filter*
                 (new 'static 'vector :x 255.0 :y 255.0 :z 255.0 :w 128.0)
                 (new 'static 'vector :x 255.0 :y 255.0 :z 255.0)
                 (* 0.2 (seconds-per-frame))
                 (bucket-id tex-hud-pris2)
                 #x3fffff
                 #x33001
                 #t
                 )
               )
             (none)
             )
          )
        )
      (1
        (apply
          ,(lambda :behavior scene-player
             ()
             (set-setting! 'fog-special-interp-targ #f 0.15 0)
             (set-setting! 'fog-special-interp-rate #f 100.0 0)
             (none)
             )
          )
        (send-event "scenecamera" 'trans-hook scenecamera-fog-update)
        (setting-reset part-bounds-check mode #f)
        )
      (34
        (part-tracker
          "group-terraformer-explosion"
          entity
          "particleman"
          joint
          "particleQ"
          track
          #t
          duration
          (frame-range 34 156)
          )
        )
      (46
        (part-tracker
          "group-desert-dust-wave"
          entity
          "particleman"
          joint
          "particleH"
          track
          #t
          duration
          (frame-range 46 112)
          )
        (part-tracker
          "group-desert-dust-wave"
          entity
          "particleman"
          joint
          "particleI"
          track
          #t
          duration
          (frame-range 46 112)
          )
        (part-tracker
          "group-desert-dust-wave"
          entity
          "particleman"
          joint
          "particleJ"
          track
          #t
          duration
          (frame-range 46 112)
          )
        (part-tracker
          "group-desert-dust-wave"
          entity
          "particleman"
          joint
          "particleK"
          track
          #t
          duration
          (frame-range 46 112)
          )
        (part-tracker
          "group-desert-dust-wave"
          entity
          "particleman"
          joint
          "particleL"
          track
          #t
          duration
          (frame-range 46 112)
          )
        (part-tracker
          "group-desert-dust-wave"
          entity
          "particleman"
          joint
          "particleM"
          track
          #t
          duration
          (frame-range 46 112)
          )
        (part-tracker
          "group-desert-dust-wave"
          entity
          "particleman"
          joint
          "particleN"
          track
          #t
          duration
          (frame-range 46 112)
          )
        (part-tracker
          "group-desert-dust-wave"
          entity
          "particleman"
          joint
          "particleO"
          track
          #t
          duration
          (frame-range 46 112)
          )
        (part-tracker
          "group-desert-dust-wave"
          entity
          "particleman"
          joint
          "particleP"
          track
          #t
          duration
          (frame-range 46 112)
          )
        )
      (56
        (part-tracker
          "group-terraformer-explosion"
          entity
          "particleman"
          joint
          "particleR"
          track
          #t
          duration
          (frame-range 56 176)
          )
        )
      (67
        (part-tracker
          "group-terraformer-explosion"
          entity
          "particleman"
          joint
          "particleS"
          track
          #t
          duration
          (frame-range 67 187)
          )
        )
      (90)
      (92
        (part-tracker
          "group-terraformer-explosion"
          entity
          "particleman"
          joint
          "particleT"
          track
          #t
          duration
          (frame-range 92 212)
          )
        )
      (105
        (apply
          ,(lambda :behavior scene-player
             ()
             (set-setting! 'fog-special-interp-targ #f 1.0 0)
             (set-setting! 'dust-storm-fog-scalar #f 1.0 0)
             (set-setting! 'fog-special-interp-rate #f 1.0 0)
             (none)
             )
          )
        )
      (284
        (apply
          ,(lambda :behavior scene-player
             ()
             (set-setting! 'fog-special-interp-targ #f 0.7 0)
             (set-setting! 'dust-storm-fog-scalar #f 0.7 0)
             (none)
             )
          )
        (cloth-slow-mo "jakc-highres")
        (apply
          ,(lambda :behavior scene-player
             ()
             (send-event (handle->process (-> *game-info* dust-storm)) 'clock-scalar #x3d4ccccd)
             (none)
             )
          )
        )
      (285 (apply ,(lambda :behavior scene-player
                     ()
                     (when (not (-> self aborted?))
                       (let ((gp-0 (new 'stack-no-clear 'vector)))
                         (set! (-> gp-0 quad) (-> *time-of-day-context* current-fog fog-color quad))
                         (set! (-> gp-0 w) 128.0)
                         (disable *screen-filter*)
                         (setup *screen-filter* gp-0 gp-0 1.0 (bucket-id tex-hud-pris2) #x3fffff #x33001 #t)
                         )
                       )
                     (none)
                     )
                  )
           )
      (295
        (apply
          ,(lambda :behavior scene-player
             ()
             (when (not (-> self aborted?))
               (let ((gp-0 (new 'stack-no-clear 'vector))
                     (s5-0 (new 'stack-no-clear 'vector))
                     )
                 (set! (-> gp-0 quad) (-> *time-of-day-context* current-fog fog-color quad))
                 (set! (-> s5-0 quad) (-> *time-of-day-context* current-fog fog-color quad))
                 (set! (-> gp-0 w) 128.0)
                 (set! (-> s5-0 w) 0.0)
                 (disable *screen-filter*)
                 (setup
                   *screen-filter*
                   gp-0
                   s5-0
                   (* 0.0033333334 (seconds-per-frame))
                   (bucket-id tex-hud-pris2)
                   #x3fffff
                   #x33001
                   #t
                   )
                 )
               )
             (none)
             )
          )
        )
      (730 (send-event "jakc-highres" 'segment 64 128))
      (907
        (cloth-restore-mo "jakc-highres")
        (apply ,(lambda :behavior scene-player
                  ()
                  (send-event (handle->process (-> *game-info* dust-storm)) 'clock-scalar #x3f800000)
                  (none)
                  )
               )
        )
      (1220 (fadeout (frame-time-30 10)))
      (10000 (apply ,(lambda :behavior scene-player
                       ()
                       (when (-> self aborted?)
                         (disable *screen-filter*)
                         (task-close! "city-win-introduction")
                         )
                       (none)
                       )
                    )
             )
      )
    :cut-list '(225 285 484 674 783 907 1011)
    :wait-ground-time (seconds 1)
    :actor (new 'static 'boxed-array :type scene-actor
      (new 'static 'scene-actor
        :name "scenecamera"
        :level #f
        :art-group "skel-scenecamera"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :camera 4
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "particleman"
        :level 'desbcst
        :art-group "skel-particleman"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "des-final-snake"
        :level 'wasall
        :art-group "skel-des-final-snake"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        :no-draw-seg #x2
        )
      (new 'static 'scene-actor
        :name "snake-wheel-fma"
        :level 'desbcst
        :art-group "skel-snake-wheel-fma"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "ashelin-highres"
        :level 'desbcst
        :art-group "skel-ashelin-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "sig-highres"
        :level 'desbcst
        :art-group "skel-sig-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "jakc-highres"
        :level 'desbcst
        :art-group "skel-jakc-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '((905 910))
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "sidekick-highres"
        :level 'desbcst
        :art-group "skel-sidekick-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "des-terraformer-break"
        :level 'desbcst
        :art-group "skel-des-terraformer-break"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '((min max))
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "des-terraformer-break-a"
        :level 'desbcst
        :art-group "skel-des-terraformer-break-a"
        :prefix "a-"
        :draw-frames '((min max))
        :scissor-frames '((min max))
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "particleman"
        :level 'desbcst
        :art-group "skel-particleman"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "jakc-scarf"
        :level 'desbcst
        :art-group "skel-jakc-scarf"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      )
    :load-point "desert-final-boss-res-movie"
    :end-point "title-credits"
    :borrow '((desert-game alias desert copy desboss2 special))
    :sfx-volume -1.0
    :ambient-volume -1.0
    :music-delay 1500.0
    :scene-task #x10b
    :on-running #f
    :on-complete #f
    )
  )

(defpartgroup group-desert-dust-wave
  :id 367
  :flags (sp0 sp4)
  :bounds (static-bspherem 0 0 0 64)
  :parts ((sp-item 1555 :flags (sp7)))
  )

(defpart 1555
  :init-specs ((:texture (edge-cloud level-default-sprite))
    (:num 0.5)
    (:x (meters -20) (meters 40))
    (:y (meters 0) (meters 1))
    (:scale-x (meters 1) (meters 1))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 150.0)
    (:g 120.0)
    (:b 90.0)
    (:a 0.0)
    (:vel-y (meters 0) (meters 0.1))
    (:vel-z (meters 0.033333335) (meters 0.33333334))
    (:scalevel-x (meters 0.16666667) (meters 0.33333334))
    (:rotvel-z (degrees -0.033333335) (degrees 0.06666667))
    (:scalevel-y :copy scalevel-x)
    (:fade-a 1.2)
    (:timer (seconds 3))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-13 launch-along-z left-multiply-quat))
    (:next-time (seconds 0.167))
    (:next-launcher 1556)
    (:rotate-y (degrees 0))
    )
  )

(defpart 1556
  :init-specs ((:scalevel-x (meters 0.13333334) (meters 0.2))
    (:scalevel-y :copy scalevel-x)
    (:fade-a 0.0)
    (:next-time (seconds 0.335))
    (:next-launcher 1557)
    )
  )

(defpart 1557
  :init-specs ((:scalevel-x (meters 0.06666667) (meters 0.16666667)) (:scalevel-y :copy scalevel-x) (:fade-a -0.08 -0.08))
  )

(defpartgroup group-chunks-slide-dust
  :id 368
  :flags (sp0 sp4)
  :bounds (static-bspherem 0 0 0 40)
  :parts ((sp-item 1558) (sp-item 1559))
  )

(defpart 1558
  :init-specs ((:texture (edge-cloud level-default-sprite))
    (:num 0.5)
    (:scale-x (meters 1) (meters 1))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 150.0)
    (:g 120.0)
    (:b 90.0)
    (:a 32.0 32.0)
    (:vel-x (meters 0) (meters 0.01))
    (:scalevel-x (meters 0.0016666667) (meters 0.0026666666))
    (:rotvel-z (degrees -0.033333335) (degrees 0.06666667))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.042666666 -0.042666666)
    (:accel-y (meters 0) (meters 0.000016666667))
    (:friction 0.99)
    (:timer (seconds 10))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-13 launch-along-z))
    (:conerot-y (degrees -40) (degrees 80))
    (:rotate-y (degrees 30))
    )
  )

(defpart 1559
  :init-specs ((:texture (water-drops level-default-sprite))
    (:birth-func 'birth-func-texture-group)
    (:num 1.0 3.0)
    (:scale-x (meters 0.5) (meters 0.5))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 150.0)
    (:g 120.0)
    (:b 90.0)
    (:a 32.0 32.0)
    (:vel-y (meters 0.006666667) (meters 0.006666667))
    (:scalevel-x (meters 0.001) (meters 0.001))
    (:rotvel-z (degrees -0.033333335) (degrees 0.06666667))
    (:scalevel-y :copy scalevel-x)
    (:accel-y (meters -0.00016666666))
    (:friction 0.999)
    (:timer (seconds 10))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-13 launch-along-z))
    (:userdata :data (new 'static 'boxed-array :type int32 5 1 0 #x406500 #x404a00))
    (:conerot-x (degrees 0) (degrees 30))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(load-scene
  (new 'static 'scene
    :name "desert-final-boss-res"
    :extra #f
    :info #f
    :scene-flags (scene-flags scf1 scf2 scf3 scf4)
    :mask-to-clear (process-mask movie projectile)
    :entity "scene-stage-211"
    :art-group "scenecamera"
    :anim "desert-final-boss-res"
    :parts 5
    :command-list '((0
        (apply
          ,(lambda :behavior scene-player
             ()
             (kill-by-type-inherited projectile *active-pool*)
             (kill-by-type-inherited light-trail-tracker *active-pool*)
             (none)
             )
          )
        )
      (1
        (part-tracker
          "group-final-boss-head-smoke"
          entity
          "terraformer-head"
          joint
          "head"
          track
          #t
          duration
          (frame-range 1 550)
          )
        )
      (340
        (part-tracker "group-desert-gun-charge" entity "gun" joint "muzzle" track #t duration (frame-range 340 508))
        )
      (508
        (part-tracker "group-desert-shot" entity "gun" joint "muzzle" track #t duration (frame-range 508 537))
        (part-tracker "group-desert-shot-muzzle" entity "gun" joint "muzzle" track #f duration (frame-range 508 537))
        )
      (545 (apply ,(lambda :behavior scene-player
                     ()
                     (when (not (-> self aborted?))
                       (disable *screen-filter*)
                       (setup
                         *screen-filter*
                         (new 'static 'vector :x 255.0 :y 255.0 :z 255.0)
                         (new 'static 'vector :x 255.0 :y 255.0 :z 255.0 :w 128.0)
                         0.2
                         (bucket-id tex-hud-pris2)
                         #x3fffff
                         #x33001
                         #t
                         )
                       (set-setting! 'allow-blackout #f 0.0 0)
                       )
                     (none)
                     )
                  )
           )
      (550 (apply ,(lambda :behavior scene-player () (set-filter-color! 1.0 1.0 1.0) (none))))
      (10000 (apply ,(lambda :behavior scene-player
                       ()
                       (when (-> self aborted?)
                         (disable *screen-filter*)
                         (set-blackout-frames (seconds 0.2))
                         (remove-setting! 'allow-blackout)
                         (task-close! "city-win-introduction")
                         )
                       (none)
                       )
                    )
             )
      )
    :cut-list '(55 90 125 155 225 291 361 433 517 539)
    :wait-ground-time (seconds 1)
    :actor (new 'static 'boxed-array :type scene-actor
      (new 'static 'scene-actor
        :name "scenecamera"
        :level #f
        :art-group "skel-scenecamera"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :camera 4
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "jakc-highres"
        :level 'desboss2
        :art-group "skel-jakc-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        :no-draw-seg #x80
        )
      (new 'static 'scene-actor
        :name "sidekick-highres"
        :level 'desboss2
        :art-group "skel-sidekick-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "errol"
        :level 'desboss2
        :art-group "skel-errol"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "terraformer-head"
        :level 'desboss2
        :art-group "skel-terraformer-head"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '((min max))
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "gun"
        :level #f
        :art-group "skel-gun"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      )
    :load-point "desert-final-boss-res-movie-a"
    :end-point "title-credits"
    :borrow '((desert-game alias desert copy desboss2 special))
    :sfx-volume -1.0
    :ambient-volume -1.0
    :music-delay 1500.0
    :scene-task #x10b
    :on-running #f
    :on-complete #f
    )
  )

(defpartgroup group-final-boss-head-smoke
  :id 369
  :flags (sp0)
  :bounds (static-bspherem 0 0 0 100)
  :parts ((sp-item 1560 :flags (sp7)) (sp-item 1561 :flags (sp7)))
  )

(defpart 1560
  :init-specs ((:texture (big-cloud level-default-sprite))
    (:birth-func 'birth-func-texture-group)
    (:num 1.0 1.0)
    (:x (meters -3) (meters 6))
    (:y (meters -3) (meters 6))
    (:z (meters -3) (meters 6))
    (:scale-x (meters 3) (meters 3))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0 128.0)
    (:g 0.0)
    (:b 128.0 128.0)
    (:a 64.0)
    (:scalevel-x (meters -0.02) (meters -0.02))
    (:scalevel-y :copy scalevel-x)
    (:timer (seconds 0.5))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:userdata :data (new 'static 'boxed-array :type int32 5 1 0 #x40a000 #x405c00))
    (:rotate-x (degrees 0) (degrees 3600))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 1561
  :init-specs ((:texture (big-cloud level-default-sprite))
    (:birth-func 'birth-func-texture-group)
    (:num 1.0 1.0)
    (:x (meters -1) (meters 2))
    (:y (meters -1) (meters 2))
    (:z (meters -1) (meters 2))
    (:scale-x (meters 3) (meters 3))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 16.0 64.0)
    (:g :copy r)
    (:b :copy r)
    (:a 0.0)
    (:vel-x (meters -0.0033333334) (meters 0.006666667))
    (:vel-y (meters -0.0033333334) (meters 0.006666667))
    (:vel-z (meters -0.0033333334) (meters 0.006666667))
    (:scalevel-x (meters 0.0033333334) (meters 0.0033333334))
    (:rotvel-z (degrees -0.033333335) (degrees 0.06666667))
    (:scalevel-y :copy scalevel-x)
    (:fade-a 0.42666668)
    (:timer (seconds 5))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-13))
    (:userdata :data (new 'static 'boxed-array :type int32 5 1 0 #x40a000 #x409b00 #x409b00))
    (:next-time (seconds 0.5))
    (:next-launcher 1562)
    (:rotate-x (degrees 0) (degrees 3600))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 1562
  :init-specs ((:fade-a -0.053333335 -0.10666667))
  )

(load-scene
  (new 'static 'scene
    :name "desert-final-boss-fall"
    :extra #f
    :info #f
    :scene-flags (scene-flags scf1 scf2 scf3 scf4)
    :mask-to-clear (process-mask movie projectile)
    :entity "scene-stage-149"
    :art-group "scenecamera"
    :anim "desert-rescue-res-a"
    :parts 3
    :command-list '((247 (send-event *task-manager* 'spawn-enemy)) (10000 (task-close! "desert-rescue-dead-wlander-movie")))
    :cut-list '(74)
    :wait-ground-time (seconds 1)
    :actor (new 'static 'boxed-array :type scene-actor
      (new 'static 'scene-actor
        :name "scenecamera"
        :level #f
        :art-group "skel-scenecamera"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :camera 4
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "jakc-highres"
        :level 'desrescc
        :art-group "skel-jakc-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "sidekick-highres"
        :level 'desrescc
        :art-group "skel-sidekick-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "wland-passenger"
        :level 'desresc
        :art-group "skel-wland-passenger"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "wlander-male"
        :level 'desresc
        :art-group "skel-wlander-male"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        :no-draw-seg #x1bc0f20
        )
      (new 'static 'scene-actor
        :name "eco-crystal-dark"
        :level 'desresc
        :art-group "skel-eco-crystal-dark"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      )
    :load-point "desert-rescue-movie"
    :end-point "desert-rescue-movie-finish"
    :borrow '((desert-game alias desert copy desresc special) (desresc 0 desrescc special))
    :sfx-volume -1.0
    :ambient-volume -1.0
    :music-delay 1500.0
    :on-running #f
    :on-complete #f
    )
  )

(defpartgroup group-desert-beast-fall-crystal-glow
  :id 370
  :flags (sp0 sp4 sp12)
  :bounds (static-bspherem 0 0 0 10)
  :parts ((sp-item 1563 :flags (sp6 sp7)))
  )

(defpart 1563
  :init-specs ((:texture (colorflash level-default-sprite))
    (:num 0.2 0.5)
    (:x (meters -0.05) (meters 0.1))
    (:y (meters -0.05) (meters 0.1))
    (:z (meters -0.05) (meters 0.1))
    (:scale-x (meters 0.05) (meters 0.2))
    (:rot-x (degrees 0.9))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 0.0 2 128.0)
    (:g 0.0 1 128.0)
    (:b 255.0)
    (:a 0.0)
    (:vel-z (meters 0))
    (:fade-a 0.21333334 0.21333334)
    (:timer (seconds 2))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 0.4096)
    (:func 'spt-func-relative-pos)
    (:next-time (seconds 0.5) (seconds 0.497))
    (:next-launcher 1564)
    )
  )

(defpart 1564
  :init-specs ((:fade-a -0.42666668))
  )

(defpartgroup group-lizard-catch-buggy-dust-skid
  :id 371
  :flags (sp0 sp4)
  :bounds (static-bspherem 0 0 0 64)
  :parts ((sp-item 1565 :flags (sp7)) (sp-item 1566 :flags (sp7)))
  )

(defpart 1565
  :init-specs ((:texture (dirtpuff01 level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 1) (meters 2))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 150.0)
    (:g 120.0)
    (:b 90.0)
    (:a 30.0 10.0)
    (:vel-z (meters -0.06666667))
    (:scalevel-x (meters 0.016666668))
    (:rotvel-z (degrees -0.2) (degrees 0.4))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.06666667 -0.05)
    (:accel-y (meters 0) (meters 0.00016666666))
    (:friction 0.95)
    (:timer (seconds 2.667))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-13 launch-along-z left-multiply-quat))
    (:next-time (seconds 0.335))
    (:next-launcher 1567)
    (:conerot-x (degrees 10) (degrees 30))
    (:conerot-y (degrees -10) (degrees 20))
    (:rotate-y (degrees 0))
    )
  )

(defpart 1567
  :init-specs ((:scalevel-x (meters 0.0033333334)) (:scalevel-y :copy scalevel-x))
  )

;; WARN: Return type mismatch float vs none.
(defun spt-birth-func-brightness-buggy-skid ((arg0 sparticle-system) (arg1 sparticle-cpuinfo) (arg2 sparticle-launchinfo))
  (let ((s5-0 (+ (mod (the-as int (rand-uint31-gen *random-generator*)) 51) 200))
        (s3-0 (logand 0 (rand-uint31-gen *random-generator*)))
        (s4-0 (+ (mod (the-as int (rand-uint31-gen *random-generator*)) 11) 20))
        (v1-6 (+ (mod (the-as int (rand-uint31-gen *random-generator*)) 11) 60))
        )
    (set! (-> arg2 rotate-x) (the float (- s5-0 (the-as int s3-0))))
    (set! (-> arg2 rotate-y) (the float (- s5-0 s4-0)))
    (set! (-> arg2 rotate-z) (the float (- s5-0 v1-6)))
    )
  (none)
  )

(defpart 1566
  :init-specs ((:texture (rockbit01 level-default-sprite))
    (:birth-func 'spt-birth-func-part-buggy-skid)
    (:num 2.0)
    (:scale-x (meters 0.1) (meters 0.05))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 128.0)
    (:b 128.0)
    (:a 128.0)
    (:vel-z (meters -0.05) (meters -0.016666668))
    (:rotvel-z (degrees -2) (degrees 4))
    (:accel-y (meters -0.0016666667))
    (:timer (seconds 0.335))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-13 launch-along-z))
    (:userdata :data (new 'static 'boxed-array :type int32
                       10
                       1
                       0
                       #x408b00
                       #x408c00
                       #x40a100
                       #x40a200
                       #x40a300
                       #x40a400
                       #x40a500
                       #x40a600
                       #x40a700
                       #x40a800
                       #x40a900
                       #x40aa00
                       #x40ab00
                       #x40ac00
                       #x40ad00
                       #x40ae00
                       )
               )
    (:func 'sparticle-texture-animate)
    (:conerot-x (degrees 20))
    (:conerot-y (degrees -20) (degrees 40))
    (:rotate-y (degrees 0))
    )
  )

(defun spt-birth-func-part-buggy-skid ((arg0 sparticle-system) (arg1 sparticle-cpuinfo) (arg2 sparticle-launchinfo) (arg3 object) (arg4 object))
  (birth-func-texture-group-2d arg0 arg1 arg2 arg3 arg4)
  (spt-birth-func-brightness-buggy-skid arg0 arg1 arg2)
  (none)
  )

(defpartgroup group-desert-scenes-beast-fall-dust
  :id 372
  :flags (sp0 sp4)
  :bounds (static-bspherem 0 0 0 20)
  :parts ((sp-item 1568 :flags (sp7)))
  )

(defpart 1568
  :init-specs ((:texture (edge-cloud level-default-sprite))
    (:birth-func 'birth-func-texture-group)
    (:num 2.0)
    (:z (meters -1) (meters 2))
    (:scale-x (meters 1) (meters 2.5))
    (:rot-z (degrees 90) (degrees 10))
    (:scale-y :copy scale-x)
    (:r 190.0)
    (:g 150.0)
    (:b 90.0)
    (:a 64.0)
    (:vel-x (meters 0.016666668) (meters 0.016666668))
    (:vel-y (meters 0.006666667))
    (:fade-a -0.14)
    (:accel-y (meters 0) (meters 0.00033333333))
    (:friction 0.95)
    (:timer (seconds 2))
    (:flags (sp-cpuinfo-flag-13 launch-along-z left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type int32 20 1 0 #x409b00 #x405c00))
    (:rotate-y (degrees 90))
    )
  )

;; WARN: Return type mismatch float vs none.
(defun spt-birth-func-brightness-daxter-impact-dust ((arg0 sparticle-system) (arg1 sparticle-cpuinfo) (arg2 sparticle-launchinfo))
  (let ((s5-0 (+ (logand 0 (rand-uint31-gen *random-generator*)) 140))
        (s3-0 (logand 0 (rand-uint31-gen *random-generator*)))
        (s4-0 (+ (logand 0 (rand-uint31-gen *random-generator*)) 20))
        (v1-3 (+ (logand 0 (rand-uint31-gen *random-generator*)) 65))
        )
    (set! (-> arg2 rotate-x) (the float (- s5-0 s3-0)))
    (set! (-> arg2 rotate-y) (the float (- s5-0 s4-0)))
    (set! (-> arg2 rotate-z) (the float (- s5-0 v1-3)))
    )
  (none)
  )

(defpartgroup group-scenes-daxter-impact-dust
  :id 373
  :flags (sp0)
  :bounds (static-bspherem 0 0 0 12)
  :parts ((sp-item 1569))
  )

(defpart 1569
  :init-specs ((:texture (dirtpuff01 level-default-sprite))
    (:birth-func 'spt-birth-func-brightness-daxter-impact-dust)
    (:num 8.0)
    (:scale-x (meters 1) (meters 1))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 0.0)
    (:g 0.0)
    (:b 0.0)
    (:a 32.0 32.0)
    (:vel-y (meters 0.02) (meters 0.01))
    (:scalevel-x (meters 0.0033333334))
    (:rotvel-z (degrees -0.2) (degrees 0.4))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.042666666 -0.042666666)
    (:accel-y (meters -0.00033333333))
    (:friction 0.95)
    (:timer (seconds 5))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-13))
    (:conerot-x (degrees 60) (degrees 30))
    (:conerot-y (degrees 0) (degrees 3600))
    )
  )

;; WARN: Return type mismatch float vs none.
(defun spt-birth-func-brightness-daxter-run-dust ((arg0 sparticle-system) (arg1 sparticle-cpuinfo) (arg2 sparticle-launchinfo))
  (let ((s5-0 (+ (logand 0 (rand-uint31-gen *random-generator*)) 140))
        (s3-0 (logand 0 (rand-uint31-gen *random-generator*)))
        (s4-0 (+ (logand 0 (rand-uint31-gen *random-generator*)) 30))
        (v1-3 (+ (logand 0 (rand-uint31-gen *random-generator*)) 75))
        )
    (set! (-> arg2 rotate-x) (the float (- s5-0 s3-0)))
    (set! (-> arg2 rotate-y) (the float (- s5-0 s4-0)))
    (set! (-> arg2 rotate-z) (the float (- s5-0 v1-3)))
    )
  (none)
  )

(defpartgroup group-scenes-daxter-run-dust
  :id 374
  :flags (sp0 sp4)
  :bounds (static-bspherem 0 0 0 12)
  :parts ((sp-item 1570 :flags (sp7)))
  )

(defpart 1570
  :init-specs ((:texture (dirtpuff01 level-default-sprite))
    (:birth-func 'spt-birth-func-brightness-daxter-run-dust)
    (:num 2.5)
    (:x (meters -0.25))
    (:scale-x (meters 0.5))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 0.0)
    (:g 0.0)
    (:b 0.0)
    (:a 32.0 32.0)
    (:vel-y (meters 0.01) (meters 0.006666667))
    (:scalevel-x (meters 0.0033333334))
    (:rotvel-z (degrees -0.2) (degrees 0.4))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.084 -0.084)
    (:friction 0.95)
    (:timer (seconds 3.335))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-13))
    (:conerot-x (degrees 60) (degrees 30))
    (:conerot-y (degrees 0) (degrees 3600))
    )
  )

(defpartgroup group-desert-scenes-impact-dust
  :id 375
  :flags (sp0 sp4)
  :bounds (static-bspherem 0 0 0 20)
  :parts ((sp-item 1571 :flags (sp7)) (sp-item 1572 :flags (sp7)))
  )

(defpart 1571
  :init-specs ((:texture (dirtpuff01 level-default-sprite))
    (:birth-func 'birth-func-curve)
    (:num 5.0)
    (:scale-x (meters 1))
    (:rot-z (degrees -90))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 128.0)
    (:b 128.0)
    (:a 128.0)
    (:vel-y (meters 0.0033333334) (meters 0.01))
    (:rotvel-z (degrees -0.06666667) (degrees 0.13333334))
    (:accel-y (meters 0.000033333334))
    (:friction 0.8)
    (:timer (seconds 0.005))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-13))
    (:userdata 0.0)
    (:func 'live-func-curve)
    (:conerot-x (degrees 0) (degrees 90))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(if #t
    (set! *range-color-desert-scenes-impact-dust* (new 'static 'curve-color-fast
                                                    :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                                    :ys (new 'static 'inline-array vector 4
                                                      (new 'static 'vector :x 190.0 :y 140.0 :z 80.0 :w 128.0)
                                                      (new 'static 'vector :x 130.0 :y 100.0 :z 60.0 :w 128.0)
                                                      (new 'static 'vector :x 130.0 :y 100.0 :z 60.0 :w 128.0)
                                                      (new 'static 'vector :x 130.0 :y 100.0 :z 60.0 :w 128.0)
                                                      )
                                                    :one-over-x-deltas (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
                                                    )
          )
    )

(if #t
    (set! *range-alpha-desert-scenes-impact-dust* (new 'static 'curve2d-fast
                                                    :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                                    :ys (new 'static 'vector :x 32.0 :y 64.0 :z 65.0 :w 66.0)
                                                    :one-over-x-deltas (new 'static 'vector :x 32.0 :y 1.0 :z 1.0 :w 1.0)
                                                    )
          )
    )

(if #t
    (set! *range-scale-desert-scenes-impact-dust-x* (new 'static 'curve2d-fast
                                                      :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                                      :ys (new 'static 'vector :x 0.2 :y 0.4 :z 1.4 :w 2.4)
                                                      :one-over-x-deltas (new 'static 'vector :x 0.2 :y 1.0 :z 1.0000001 :w 1.0)
                                                      )
          )
    )

(if #t
    (set! *range-scale-desert-scenes-impact-dust-y* (new 'static 'curve2d-fast
                                                      :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                                      :ys (new 'static 'vector :x 0.2 :y 0.4 :z 1.4 :w 2.4)
                                                      :one-over-x-deltas (new 'static 'vector :x 0.2 :y 1.0 :z 1.0000001 :w 1.0)
                                                      )
          )
    )

(if #t
    (set! *curve-alpha-desert-scenes-impact-dust* (new 'static 'curve2d-fast
                                                    :xs (new 'static 'vector :y -0.1 :z -1.0 :w -2.0)
                                                    :ys (new 'static 'vector :y 1.0 :w 1.0)
                                                    :one-over-x-deltas (new 'static 'vector :x 10.0 :y -1.1111112 :z 1.0 :w 1.0)
                                                    )
          )
    )

(if #t
    (set! *curve-desert-scenes-impact-dust-x* (new 'static 'curve2d-fast
                                                :xs (new 'static 'vector :y -0.2 :z -1.0 :w -2.0)
                                                :ys (new 'static 'vector :x 1.0 :y 2.0 :z 4.0 :w 5.0)
                                                :one-over-x-deltas (new 'static 'vector :x 5.0 :y 2.5 :z 1.0 :w 1.0)
                                                )
          )
    )

(if #t
    (set! *curve-desert-scenes-impact-dust-y* (new 'static 'curve2d-fast
                                                :xs (new 'static 'vector :y -0.2 :z -1.0 :w -2.0)
                                                :ys (new 'static 'vector :x 1.0 :y 2.0 :z 4.0 :w 5.0)
                                                :one-over-x-deltas (new 'static 'vector :x 5.0 :y 2.5 :z 1.0 :w 1.0)
                                                )
          )
    )

(define *part-desert-scenes-impact-dust-curve-settings* (new 'static 'particle-curve-settings
                                                          :lifetime-base (seconds 1)
                                                          :lifetime-offset (seconds 1)
                                                          :flags (particle-curve-flags pcf0)
                                                          )
        )

(set! (-> *part-id-table* 1571 init-specs 16 initial-valuef)
      (the-as float *part-desert-scenes-impact-dust-curve-settings*)
      )

(set! (-> *part-desert-scenes-impact-dust-curve-settings* color-start)
      *range-color-desert-scenes-impact-dust*
      )

(set! (-> *part-desert-scenes-impact-dust-curve-settings* alpha-start)
      *range-alpha-desert-scenes-impact-dust*
      )

(set! (-> *part-desert-scenes-impact-dust-curve-settings* scale-x-start)
      *range-scale-desert-scenes-impact-dust-x*
      )

(set! (-> *part-desert-scenes-impact-dust-curve-settings* scale-y-start)
      *range-scale-desert-scenes-impact-dust-y*
      )

(set! (-> *part-desert-scenes-impact-dust-curve-settings* r-scalar) #f)

(set! (-> *part-desert-scenes-impact-dust-curve-settings* g-scalar) #f)

(set! (-> *part-desert-scenes-impact-dust-curve-settings* b-scalar) #f)

(set! (-> *part-desert-scenes-impact-dust-curve-settings* a-scalar) *curve-alpha-desert-scenes-impact-dust*)

(set! (-> *part-desert-scenes-impact-dust-curve-settings* scale-x-scalar) *curve-desert-scenes-impact-dust-x*)

(set! (-> *part-desert-scenes-impact-dust-curve-settings* scale-y-scalar) *curve-desert-scenes-impact-dust-y*)

(defpart 1572
  :init-specs ((:texture (rockbit01 level-default-sprite))
    (:birth-func 'spt-birth-func-part-desert-scenes-bits)
    (:num 20.0)
    (:scale-x (meters 0.01) (meters 0.01))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y (meters 0.01) (meters 0.01))
    (:r 140.0)
    (:g 100.0)
    (:b 60.0)
    (:a 128.0)
    (:vel-y (meters 0.0033333334) (meters 0.016666668))
    (:rotvel-z (degrees -6.0000005) (degrees 12.000001))
    (:accel-y (meters -0.0016666667))
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-13 launch-along-z left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type int32
                       10
                       1
                       0
                       #x408b00
                       #x408c00
                       #x40a100
                       #x40a200
                       #x40a300
                       #x40a400
                       #x40a500
                       #x40a600
                       #x40a700
                       #x40a800
                       #x40a900
                       #x40aa00
                       #x40ab00
                       #x40ac00
                       #x40ad00
                       #x40ae00
                       )
               )
    (:func 'sparticle-texture-animate)
    (:conerot-x (degrees 0) (degrees 30))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defun spt-birth-func-part-desert-scenes-bits ((arg0 sparticle-system) (arg1 sparticle-cpuinfo) (arg2 sparticle-launchinfo) (arg3 object) (arg4 object))
  (birth-func-texture-group-2d arg0 arg1 arg2 arg3 arg4)
  (spt-birth-func-brightness-buggy-skid arg0 arg1 arg2)
  (none)
  )

(defpartgroup group-desert-scenes-hologram-explosion
  :id 376
  :duration (seconds 4)
  :flags (sp0 sp5)
  :bounds (static-bspherem 0 0 0 15)
  :parts ((sp-item 1573 :flags (sp3) :period (seconds 30) :length (seconds 0.017))
    (sp-item 1574 :flags (sp3) :period (seconds 30) :length (seconds 0.017))
    (sp-item 1575 :period (seconds 30) :length (seconds 0.05))
    )
  )

(defpart 1573
  :init-specs ((:texture (colorflash level-default-sprite))
    (:num 1.0)
    (:y (meters 0.2))
    (:scale-x (meters 1))
    (:rot-x (degrees 67.5))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 255.0)
    (:scalevel-x (meters -0.006666667))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -2.55)
    (:timer (seconds 0.335))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 40.96)
    )
  )

(defpart 1574
  :init-specs ((:texture (rainbow-halo level-default-sprite))
    (:num 1.0)
    (:y (meters 0.2))
    (:scale-x (meters 1))
    (:rot-x (degrees 67.5))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 128.0)
    (:scalevel-x (meters 0.0033333334))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.85333335)
    (:timer (seconds 0.5))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 40.96)
    )
  )

(defpart 1575
  :init-specs ((:texture (colorflash level-default-sprite))
    (:num 50.0)
    (:y (meters 0))
    (:scale-x (meters 0.02) (meters 0.02))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 128.0)
    (:vel-y (meters 0.013333334) (meters 0.023333333))
    (:scalevel-x (meters -0.00016666666))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.28444445 -0.28444445)
    (:accel-y (meters -0.00066666666))
    (:friction 0.9)
    (:timer (seconds 1.5))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-3))
    (:conerot-x (degrees 0) (degrees 60))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpartgroup group-desert-scenes-hologram-light
  :id 377
  :flags (sp0 sp5)
  :bounds (static-bspherem 0 0 0 15)
  :parts ((sp-item 1576 :flags (sp6)))
  )

(defpart 1576
  :init-specs ((:texture (colorflash level-default-sprite))
    (:num 1.0)
    (:y (meters 0.1))
    (:scale-x (meters 0.5))
    (:rot-x (degrees 67.5))
    (:rot-z (degrees 90))
    (:scale-y (meters 0.15))
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 200.0 30.0)
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-3 glow))
    (:userdata 409.6)
    )
  )

(defpartgroup group-terraformer-explosion
  :id 378
  :duration (seconds 4)
  :linger-duration (seconds 2)
  :flags (sp0 sp5)
  :bounds (static-bspherem 0 0 0 100)
  :parts ((sp-item 1578 :flags (sp3) :period (seconds 30) :length (seconds 0.017))
    (sp-item 1579 :flags (sp3) :period (seconds 30) :length (seconds 0.017))
    (sp-item 1580 :flags (sp3) :period (seconds 30) :length (seconds 0.017))
    (sp-item 1581 :period (seconds 30) :length (seconds 0.167))
    (sp-item 1582 :period (seconds 30) :length (seconds 0.5))
    (sp-item 1583 :flags (sp3) :binding 1577)
    (sp-item 1583 :flags (sp3) :binding 1577)
    (sp-item 1577 :flags (sp2) :period (seconds 4) :length (seconds 2))
    (sp-item 1577 :flags (sp2) :period (seconds 4) :length (seconds 2))
    )
  )

(defpart 1578
  :init-specs ((:texture (starflash level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 300) (meters 300))
    (:rot-x (degrees 675))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 80.0)
    (:b 40.0)
    (:a 128.0)
    (:omega (degrees 90011.25))
    (:scalevel-x (meters -5))
    (:scalevel-y :copy scalevel-x)
    (:timer (seconds 0.135))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 122880.0)
    )
  )

(defpart 1579
  :init-specs ((:texture (glow-soft level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 300) (meters 300))
    (:rot-x (degrees 675))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 128.0)
    (:b 40.0)
    (:a 64.0)
    (:omega (degrees 90011.25))
    (:fade-a -0.21333334)
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 122880.0)
    )
  )

(defpart 1580
  :init-specs ((:texture (explosion-nebula level-default-sprite))
    (:num 30.0)
    (:scale-x (meters 30) (meters 15))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 160.0)
    (:b 40.0)
    (:a 128.0)
    (:vel-y (meters 0.1) (meters 0.3))
    (:scalevel-x (meters 0.1) (meters 0.05))
    (:scalevel-y :copy scalevel-x)
    (:fade-g -0.22857143)
    (:fade-b -0.08571429)
    (:fade-a -0.36571428 -0.36571428)
    (:friction 0.95)
    (:timer (seconds 1.167))
    (:flags (sp-cpuinfo-flag-3))
    (:conerot-x (degrees 0) (degrees 90))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 1581
  :init-specs ((:texture (explosion-edge level-default-sprite))
    (:num 5.0)
    (:scale-x (meters 18) (meters 12))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 80.0 20.0)
    (:b 30.0)
    (:a 128.0)
    (:vel-y (meters 2) (meters 0.8))
    (:scalevel-x (meters 0.2))
    (:scalevel-y :copy scalevel-x)
    (:fade-g -0.17777778)
    (:fade-b -0.06666667)
    (:fade-a -0.28444445 -0.28444445)
    (:friction 0.8)
    (:timer (seconds 1.5))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-3))
    (:func 'sparticle-2d-spline-align-instant)
    (:conerot-x (degrees 0) (degrees 90))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 1582
  :init-specs ((:texture (explo-texture level-default-sprite))
    (:birth-func 'birth-func-curve)
    (:num 8.0)
    (:x (meters -6) (meters 12))
    (:y (meters 0) (meters 12))
    (:scale-x (meters 1))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 128.0)
    (:b 128.0)
    (:a 128.0)
    (:vel-y (meters 0.4) (meters 0.2))
    (:friction 0.9)
    (:timer (seconds 1))
    (:flags ())
    (:userdata 0.0)
    (:func 'live-func-curve)
    (:conerot-x (degrees 20) (degrees 90))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(if #t
    (set! *range-terexplo-color* (new 'static 'curve-color-fast
                                   :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                   :ys (new 'static 'inline-array vector 4
                                     (new 'static 'vector :x 255.0 :y 255.0 :z 255.0 :w 128.0)
                                     (new 'static 'vector :x 255.0 :y 255.0 :z 255.0 :w 128.0)
                                     (new 'static 'vector :x 255.0 :y 255.0 :z 255.0 :w 128.0)
                                     (new 'static 'vector :x 255.0 :y 255.0 :z 255.0 :w 128.0)
                                     )
                                   :one-over-x-deltas (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
                                   )
          )
    )

(if #t
    (set! *range-terexplo-alpha* (new 'static 'curve2d-fast
                                   :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                   :ys (new 'static 'vector :x 128.0 :y 128.0 :z 129.0 :w 130.0)
                                   :one-over-x-deltas (new 'static 'vector :y 1.0 :z 1.0 :w 1.0)
                                   )
          )
    )

(if #t
    (set! *range-terexplo-scale-x* (new 'static 'curve2d-fast
                                     :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                     :ys (new 'static 'vector :x 18.0 :y 30.0 :z 31.0 :w 32.0)
                                     :one-over-x-deltas (new 'static 'vector :x 12.0 :y 1.0 :z 1.0 :w 1.0)
                                     )
          )
    )

(if #t
    (set! *range-terexplo-scale-y* (new 'static 'curve2d-fast
                                     :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                     :ys (new 'static 'vector :x 18.0 :y 30.0 :z 31.0 :w 32.0)
                                     :one-over-x-deltas (new 'static 'vector :x 12.0 :y 1.0 :z 1.0 :w 1.0)
                                     )
          )
    )

(if #t
    (set! *curve-terexplo-alpha* (new 'static 'curve2d-fast
                                   :xs (new 'static 'vector :y -0.05 :z -0.7 :w -1.0)
                                   :ys (new 'static 'vector :y 1.0 :z 0.8)
                                   :one-over-x-deltas (new 'static 'vector :x 20.0 :y -0.3076923 :z -2.6666665 :w 1.0)
                                   )
          )
    )

(if #t
    (set! *curve-terexplo-scale-x* (new 'static 'curve2d-fast
                                     :xs (new 'static 'vector :y -0.8 :z -1.0 :w -2.0)
                                     :ys (new 'static 'vector :y 1.0 :z 1.5 :w 2.5)
                                     :one-over-x-deltas (new 'static 'vector :x 1.25 :y 2.5000002 :z 1.0 :w 1.0)
                                     )
          )
    )

(if #t
    (set! *curve-terexplo-scale-y* (new 'static 'curve2d-fast
                                     :xs (new 'static 'vector :y -0.8 :z -1.0 :w -2.0)
                                     :ys (new 'static 'vector :y 1.0 :z 1.5 :w 2.5)
                                     :one-over-x-deltas (new 'static 'vector :x 1.25 :y 2.5000002 :z 1.0 :w 1.0)
                                     )
          )
    )

(define *part-terraformer-explosion-texture-curve-settings* (new 'static 'particle-curve-settings
                                                              :lifetime-base (seconds 0.1)
                                                              :lifetime-offset (seconds 0.6)
                                                              :flags (particle-curve-flags pcf0)
                                                              )
        )

(set! (-> *part-id-table* 1582 init-specs 16 initial-valuef)
      (the-as float *part-terraformer-explosion-texture-curve-settings*)
      )

(set! (-> *part-terraformer-explosion-texture-curve-settings* color-start) *range-terexplo-color*)

(set! (-> *part-terraformer-explosion-texture-curve-settings* alpha-start) *range-terexplo-alpha*)

(set! (-> *part-terraformer-explosion-texture-curve-settings* scale-x-start) *range-terexplo-scale-x*)

(set! (-> *part-terraformer-explosion-texture-curve-settings* scale-y-start) *range-terexplo-scale-y*)

(set! (-> *part-terraformer-explosion-texture-curve-settings* r-scalar) #f)

(set! (-> *part-terraformer-explosion-texture-curve-settings* g-scalar) #f)

(set! (-> *part-terraformer-explosion-texture-curve-settings* b-scalar) #f)

(set! (-> *part-terraformer-explosion-texture-curve-settings* a-scalar) *curve-terexplo-alpha*)

(set! (-> *part-terraformer-explosion-texture-curve-settings* scale-x-scalar) *curve-terexplo-scale-x*)

(set! (-> *part-terraformer-explosion-texture-curve-settings* scale-y-scalar) *curve-terexplo-scale-y*)

(defpart 1583
  :init-specs ((:texture (middot level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 60) (meters 24))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 180.0)
    (:b 0.0)
    (:a 32.0)
    (:vel-y (meters 0.6) (meters 0.13333334))
    (:scalevel-x (meters -0.2) (meters -0.2))
    (:scalevel-y :copy scalevel-x)
    (:accel-y (meters -0.00066666666) (meters -0.00066666666))
    (:friction 0.99)
    (:timer (seconds 2))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-3))
    (:conerot-x (degrees 0) (degrees 170))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 1577
  :init-specs ((:texture (explosion-nebula level-default-sprite))
    (:birth-func 'birth-func-inherit-size)
    (:num 0.7)
    (:scale-x (meters 0.00024414062) (meters 0.00012207031))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 128.0)
    (:b 32.0)
    (:a 128.0)
    (:fade-a -0.36571428 -0.36571428)
    (:accel-y (meters 0) (meters -0.00033333333))
    (:timer (seconds 1.167))
    (:flags (sp-cpuinfo-flag-3))
    )
  )
