;;-*-Lisp-*-
(in-package goal)

;; name: wvehicle-h.gc
;; name in dgo: wvehicle-h
;; dgos: LPATK, LFACCAR, WASALL

;; added
(deftype wvehicle-draw-thruster-params (structure)
  ((quat     quaternion :inline :offset-assert 0)
   (trans    vector     :inline :offset-assert 16)
   (mat      matrix     :inline :offset 48)
   (thrust   float              :offset 32)
   (width    float              :offset 36)
   (length   float              :offset 40)
   (fog-fade float              :offset 44)
   )
  )

(deftype wvehicle-stack-type0 (structure)
  ((float-arr float 4 :offset 0)
   (vec00 vector :inline :offset 96)
   (float03326 float :offset 16)
   (float0335 float :offset 20)
   (float032 float :offset 24)
   (float03623423 float :offset 28)
   (word00 uint32 :offset 28 :score 1)
   (float00 float :offset 80)
   (float01 float :offset 96)
   (float000 float :offset 116)
   (float8 float :offset 120)
   (float02 float :offset 124)
   (float03 float :offset 128)
   (float04 float :offset 132)
   (float05 float :offset 136)
   (float06 float :offset 140)
   (float07 float :offset 144)
   )
  )

(deftype wvehicle-stack-type1 (structure)
  ((vec00 vector :inline :offset 0)
   (float00 float :offset 16)
   (float01 float :offset 20)
   (byte00 int8 :offset 24)
   )
  )

(deftype wvehicle-stack-type2 (structure)
  ((cquery collide-query :inline :offset 0)
   (mat0 matrix :inline :offset 544)
   (vec0 vector :inline :offset 592)
   (vec1 vector :inline :offset 624)
   (vec2 vector :inline :offset 640)
   (vec3 vector :inline :offset 656)
   (float0 float :offset 672)
   )
  )

(deftype wvehicle-stack-type3 (structure)
  ((vec0 vector :inline :offset 0)
   (mat0 matrix :inline :offset 16)
   (float0 float :offset 80)
   )
  )

(deftype wvehicle-stack-type4 (structure)
  ((byte0 int8 :offset 0)
   (float0 float :offset 4)
   (float1 float :offset 8)
   (float2 float :offset 12)
   )
  )

;; added
(deftype wvehicle-stack-type5 (structure)
  ((vec0 vector :inline :offset 0)
   (vec1 vector :inline :offset 16)
   (vec2 vector :inline :offset 32)
   (vec3 vector :inline :offset 48)
   (vec4 vector :inline :offset 64)
   (vec5 vector :inline :offset 80)
   (vec6 vector :inline :offset 96)
   (vec7 vector :inline :offset 112)
   (vec8 vector :inline :offset 128)
   (vec9 vector :inline :offset 144)
   )
  )

(deftype wvehicle-stack-type6 (structure)
  ((mat0    matrix     :inline :offset 0)
   (quat0   quaternion :inline :offset 64)
   (quat1   quaternion :inline :offset 80)
   (quat2   quaternion :inline :offset 96)
   (quat3   quaternion :inline :offset 112)
   (quat4   quaternion :inline :offset 128)
   (vec0    vector     :inline :offset 144)
   (vec1    vector     :inline :offset 160)
   (vec2    vector     :inline :offset 176)
   (vec3    vector     :inline :offset 192)
   (float0  float              :offset 240)
   )
  )

(deftype wvehicle-jmod-work (structure)
  ((quat0  quaternion  :inline :offset 0)
   (quat1  quaternion  :inline :offset 16)
   (mat0   matrix      :inline :offset 32)
   (vec0   vector      :inline :offset 96)
   (float0 float               :offset 112)
   (float1 float               :offset 116)
   (float2 float               :offset 120)
   )
  )

;; +++vehicle-wheel-surface-flag
(defenum vehicle-wheel-surface-flag
  :type uint8
  :bitfield #t
  (moving)
  )
;; ---vehicle-wheel-surface-flag


(declare-type wvehicle-part-work structure)
(declare-type wvehicle-wheel-launcher-spec structure)
(declare-type vehicle-wheel-surface structure)
(define-extern *wvehicle-surfaces* (inline-array vehicle-wheel-surface))

;; +++vehicle-wheel-surface-type
(defenum vehicle-wheel-surface-type
  :type uint8
  (stone)
  (dirt)
  (sand)
  (quicksand)
  (water)
  (wall)
  (conveyor)
  (none)
  )
;; ---vehicle-wheel-surface-type


;; DECOMP BEGINS

(deftype wvehicle-sound-loop-state (structure)
  ((id     sound-id)
   (vol    float)
   (pitch  float)
   )
  :allow-misaligned
  )


(deftype vehicle-wheel-surface (structure)
  ((flags             vehicle-wheel-surface-flag)
   (surface-type      vehicle-wheel-surface-type)
   (friction          float)
   (drag              float)
   (depth             float)
   (damage            float)
   (tire-roll-mix     float  4)
   (tire-roll-hum     float  :overlay-at (-> tire-roll-mix 0))
   (tire-roll-dirt    float  :overlay-at (-> tire-roll-mix 1))
   (tire-roll-sand    float  :overlay-at (-> tire-roll-mix 2))
   (tire-roll-knobby  float  :overlay-at (-> tire-roll-mix 3))
   (tire-slide-mix    float  2)
   (tire-slide-road   float  :overlay-at (-> tire-slide-mix 0))
   (tire-slide-dirt   float  :overlay-at (-> tire-slide-mix 1))
   )
  )


(deftype vehicle-wheel-state (structure)
  ((info              vehicle-wheel-info)
   (flags             uint8)
   (prev-flags        uint8)
   (handle            handle)
   (probe-local-pos   vector                    :inline)
   (probe-local-dir   vector                    :inline)
   (local-axis        vector                    :inline)
   (surface-pos       vector                    :inline)
   (ground-pos        vector                    :inline)
   (ground-normal     vector                    :inline)
   (trans             vector                    :inline)
   (quat              quaternion                :inline)
   (trail-pos         vector                    2 :inline)
   (surface           vehicle-wheel-surface)
   (pos               float)
   (pos2              float)
   (inertia           float)
   (steer-angle       float)
   (angle             float)
   (rev               float)
   (x-scale           float)
   (torque            float)
   (braking-torque    float)
   (up-force          float)
   (drive-diff        float)
   (side-vel          float)
   (up-vel            float)
   (forward-vel       float)
   (forward-slip-vel  float)
   (friction-coef     float)
   (sink-depth        float)
   (sin-susp-ang      float)
   (cos-susp-ang      float)
   (part-birth-accum  sparticle-launch-control  4)
   (tread-time        uint32)
   (tread-tracker     handle)
   )
  )


(deftype wvehicle-probe-work (structure)
  ((local-pos     vector  :inline)
   (local-normal  vector  :inline)
   (world-pos     vector  :inline)
   (world-normal  vector  :inline)
   (wheel-axis    vector  :inline)
   (side-dir      vector  :inline)
   (forward-dir   vector  :inline)
   (velocity      vector  :inline)
   (probe-uu      float)
   )
  )


(deftype wvehicle-physics-work (structure)
  ((mat                    matrix               :inline)
   (force                  vector               :inline)
   (velocity               vector               :inline)
   (world-pos              vector               :inline)
   (world-normal           vector               :inline)
   (local-pos              vector               :inline)
   (steering-axis          vector               :inline)
   (probe-dir              vector               :inline)
   (tmp                    vector               :inline)
   (p-body                 vector               :inline)
   (axis                   vector               :inline)
   (dir                    vector               :inline)
   (ground-normal-sum      vector               :inline)
   (ground-pos             vector               :inline)
   (forward-dir            vector               :inline)
   (side-dir               vector               :inline)
   (wheel-axis             vector               :inline)
   (wsphere                sphere               :inline)
   (friction-coef          float)
   (wheel-radius           float)
   (side-force             float)
   (forward-force          float)
   (max-forward-tire-grip  float)
   (max-side-tire-grip     float)
   (inertia-eff            float)
   (ground-torque          float)
   (braking-torque         float)
   (total-torque           float)
   (limit-braking-torque   float)
   (max-braking-torque     float)
   (surface-drag           float)
   (water-y                float)
   (cur-time               uint32)
   (surface-type           uint8)
   (surface-depth          float)
   (material               uint64)
   (probe-work-array       wvehicle-probe-work  4 :inline)
   (cquery                 collide-query        :inline)
   )
  )


(deftype wvehicle (vehicle)
  ((race                     race-control               :inline)
   (target-status            squad-target-status        :inline)
   (ai-controls              vehicle-controls           :inline)
   (minimap                  connection-minimap)
   (net                      basic)
   (engine-rev               float)
   (engine-inertia           float)
   (engine-torque            float)
   (engine-max-torque        float)
   (engine-rpm               float)
   (sound-engine-rpm         float)
   (wheel-rev                float)
   (wheel-inertia            float)
   (wheel-torque             float)
   (wheel-braking-torque     float)
   (wheel-ground-torque      float)
   (clutch-grab              float)
   (gear-ratio               float)
   (final-drive-ratio        float)
   (total-gear-ratio         float)
   (inv-total-gear-ratio     float)
   (avg-drive-wheel-radius   float)
   (drive-wheel-inertia      float)
   (clutch-inertia           float)
   (idle-throttle            float)
   (susp-spring-control      float)
   (jump-control             float)
   (ai-min-speed             float)
   (ai-max-speed             float)
   (shortcut-speed-factor    float)
   (path-deviation           float)
   (turbo-supply             float)
   (turbo-ready              float)
   (ai-state                 uint8)
   (return-ai-state          uint8)
   (i-barrel                 int8)
   (shift-state              uint8)
   (gear-select              int8)
   (next-gear-select         int8)
   (shift-time               uint32)
   (impact                   rigid-body-impact          :inline)
   (wheel                    vehicle-wheel-state        4 :inline)
   (gravity-dir              vector                     :inline)
   (ai-target-point          vector                     :inline)
   (surface-velocity         vector                     :inline)
   (turret-local-pos         vector                     :inline)
   (gun-local-pos            vector                     :inline)
   (gun-local-dir            vector                     :inline)
   (gun-aim-yaw              float)
   (gun-aim-yaw-vel          float)
   (gun-targ-yaw             float)
   (gun-targ-pitch           float)
   (gun-yaw                  float)
   (gun-pitch                float)
   (gun-yaw-vel              float)
   (gun-pitch-vel            float)
   (gun-kick                 float)
   (lock-turret              basic)
   (tire-roll-loop-state     wvehicle-sound-loop-state  4 :inline)
   (tire-slide-loop-state    wvehicle-sound-loop-state  2 :inline)
   (engine1-sound-id         sound-id                   :offset 2472)
   (engine2-sound-id         sound-id)
   (engine3-sound-id         sound-id)
   (damage-sound-id          sound-id)
   (water-sound-id           sound-id)
   (turbo-sound-id           sound-id)
   (shortcut-time            uint32)
   (overturned-time          uint32)
   (splash-time              uint32)
   (knobby-time              uint32)
   (susp-creak-time          uint32)
   (shoot-time               uint32)
   (shoot-delay              uint32)
   (jump-time                uint32)
   (ground-time              uint32)
   (ram-time                 uint32)
   (attached-array           handle                     16)
   (eng1-vol                 float)
   (eng2-vol                 float)
   (eng3-vol                 float)
   (eng-pitch-variance       float)
   (eng-pitch-variance-seek  float)
   (eng-vol-variance         float)
   (eng-vol-variance-seek    float)
   (eng-pitch-offset         float)
   (eng-flutter-envelope     float)
   (water-sound-envelope     float)
   (other-proc               handle)
   (other-pos                vector                     :inline)
   )
  :allow-misaligned
  (:state-methods
    hostile
    undefined0
    race-waiting
    race-racing
    race-finished
    undefined1
    explode-into-nothing
    sink
    )
  (:methods
    (wvehicle-method-160 (_type_ wvehicle-physics-work) none)
    (spawn-wheels! (_type_ skeleton-group skeleton-group skeleton-group skeleton-group) none)
    (wvehicle-method-162 (_type_ float) none)
    (wvehicle-method-163 (_type_) none)
    (wvehicle-method-164 (_type_ vehicle-wheel-state vehicle-wheel-info) none)
    (wvehicle-method-165 (_type_) none)
    (wvehicle-method-166 (_type_ float float) float)
    (wvehicle-method-167 (_type_) none)
    (wvehicle-method-168 (_type_) none)
    (wvehicle-method-169 (_type_) none)
    (wvehicle-method-170 (_type_) none)
    (wvehicle-method-171 (_type_ vector int) none)
    (wvehicle-method-172 (_type_ quaternion int) none)
    (wvehicle-method-173 (_type_ vector) int)
    (get-attached-by-idx (_type_ int) process-focusable)
    (add-attached-at-idx (_type_ int process-focusable) none)
    (remove-attached-from-arr (_type_ process-focusable) symbol)
    (wvehicle-method-177 (_type_ vehicle-controls) none)
    (wvehicle-method-178 (_type_) none)
    (wvehicle-method-179 (_type_) none)
    (race-select-path-randomly-from-mask (_type_ uint) none)
    (wvehicle-method-181 (_type_) none)
    (wvehicle-method-182 (_type_) none)
    (wvehicle-method-183 (_type_ vehicle-controls) none)
    (wvehicle-method-184 (_type_) none)
    (wvehicle-method-185 (_type_) none)
    (wvehicle-method-186 (_type_) none)
    (wvehicle-method-187 (_type_) none)
    (wvehicle-method-188 (_type_) none)
    (wvehicle-method-189 (_type_ vehicle-wheel-state wvehicle-part-work wvehicle-wheel-launcher-spec) none)
    (wvehicle-method-190 (_type_ vehicle-wheel-state wvehicle-part-work) none)
    (wvehicle-method-191 (_type_ vehicle-wheel-state wvehicle-part-work) symbol)
    (wvehicle-method-192 (_type_ vehicle-wheel-state wvehicle-part-work) none)
    (wvehicle-method-193 (_type_ vehicle-wheel-state wvehicle-part-work) none)
    (wvehicle-method-194 (_type_ vehicle-wheel-state wvehicle-part-work) none)
    (wvehicle-method-195 (_type_) none)
    (wvehicle-method-196 (_type_) none)
    (race-setup (_type_ int) symbol)
    (wvehicle-method-198 (_type_) none)
    (wvehicle-method-199 (_type_) none)
    (wvehicle-method-200 (_type_ vector wvehicle-part-work) none)
    (wvehicle-method-201 (_type_ float) none)
    (wvehicle-method-202 (_type_ float) none)
    )
  )


;; WARN: Return type mismatch float vs degrees.
(defun rpm->radians-per-sec ((arg0 float))
  (the-as degrees (* 0.10471976 arg0))
  )

(defun radians-per-sec->rpm ((arg0 degrees))
  (* 9.549297 arg0)
  )

(deftype wvehicle-ai-drop-off-params (structure)
  ((dest  vector  :inline)
   (proc  process)
   )
  )


(defun wvehicle-surface-type-from-material ((arg0 int))
  (let ((v1-0 arg0))
    (cond
      ((or (= v1-0 23) (= v1-0 6))
       0
       )
      ((or (= v1-0 15) (zero? v1-0))
       1
       )
      ((= v1-0 5)
       2
       )
      ((= v1-0 2)
       3
       )
      ((= v1-0 16)
       6
       )
      (else
        1
        )
      )
    )
  )
