;;-*-Lisp-*-
(in-package goal)

;; name: vehicle-h.gc
;; name in dgo: vehicle-h
;; dgos: HGA, LPATK, RAILA, LFACCAR, CWI, WASALL, LFACTORY, COMBA

;; +++vehicle-wheel-flag
(defenum vehicle-wheel-flag
  :type uint64
  :bitfield #t
  (vwf0 0)
  (vwf1 1)
  (vwf2 2)
  (vwf3 3)
  (vwf4 4)
  (vwf5 5)
  )
;; ---vehicle-wheel-flag


;; +++vehicle-seat-flag
(defenum vehicle-seat-flag
  :type uint8
  :bitfield #t
  (vsf0 0)
  (vsf1 1)
  (vsf2 2)
  )
;; ---vehicle-seat-flag


;; +++vehicle-flag
(defenum vehicle-flag
  :type uint64
  :bitfield #t
  (enable-collision 0)
  (disturbed 1)
  (damaged 2)
  (dead 3)
  (player-touching 4)
  (player-edge-grabbing 5)
  (player-standing-on 6)
  (player-impulse-force 7)
  (player-contact-force 8)
  (persistent 9)
  (impact 10)
  (in-air 11)
  (on-ground 12)
  (on-flight-level 13)
  (riding 14)
  (player-grabbed 15)
  (player-dismounting 16)
  (player-driving 17)
  (net-player-driving 18)
  (ai-driving 19)
  (waiting-for-player 20)
  (ignition 21)
  (nav-spheres 22)
  (turbo-boost 23)
  (reverse-gear 24)
  (traffic-managed 25)
  (flight-level-transition 26)
  (flight-level-transition-ending 27)
  (camera-bike-mode 28)
  (camera-rapid-tracking-mode 29)
  (camera 30)
  (camera-inside-view 31)
  (camera-look-mode 32)
  (alert 33)
  (in-pursuit 34)
  (target-in-sight 35)
  (rammed-target 36)
  (sounds 37)
  (particles 38)
  (joints 39)
  (lights-on 40)
  (lights-update 41)
  (lights-dead 42)
  (no-hijack 43)
  (unique 44)
  (tracking-mode 45)
  (overturned 46)
  (gun-dark-2-zero-g 47)
  (ignore-damage 48)
  (ignore-impulse 49)
  (player-killed 50)
  (draw-marks 51)
  (vf52 52)
  (vf53 53)
  (vf54 54)
  (vf55 55)
  (vf56 56)
  )
;; ---vehicle-flag


(deftype mystery-vehicle-type0 (structure)
  "vehicle::check-player-get-on"
  ((mat    matrix 3      :inline :offset-assert 0)
   (vec    vector 2      :inline :offset-assert 192)
   (proc   handle 2              :offset-assert 224)
   (cquery collide-query :inline :offset-assert 240)
   (floats float  5              :offset-assert 780)
   )
  )

(deftype mystery-vehicle-type1 (structure)
  "vehicle::94"
  ((vec0 vector :inline :offset 0)
   (time uint32 :offset 0)
   (word01 uint32 :offset 4)
   (word00 uint32 :offset 8)
   (float00 float :offset 16)
   (word02 uint32 :offset 20)
   )
  )

(deftype mystery-vehicle-type2 (structure)
  "vehicle::93"
  ((time uint32 :offset 0)
   (word01 uint32 :offset 4)
   (word00 uint32 :offset 8)
   (float00 float :offset 16)
   (word02 uint32 :offset 20)
   )
  )

(deftype vehicle-thruster-work (structure)
  ((quat0  quaternion       :inline :offset 0)
   (vec0   vector           :inline :offset 32)
   (vec1   vector           :inline :offset 48)
   (quat1  quaternion       :inline :offset 64)
   (vec2   vector           :inline :offset 80)
   (vec3   vector           :inline :offset 96)
   (vec4   vector           :inline :offset 112)
   (float0 float                    :offset 128)
   (float1 float                    :offset 132)
   (glow   sprite-glow-data :inline :offset 144)
   )
  )

(deftype vehicle-stack-type3 (structure)
  ((vec0 vector :inline :offset 0)
   (vec1 vector :inline :offset 16)
   (vec2 vector :inline :offset 32)
   (vec3 vector :inline :offset 48)
   (mat0 matrix :inline :offset 64)
   (glow sprite-glow-data :inline :offset 128)
   (float0 float        :offset 192)
   (float1 float        :offset 196)
   (byte0 int8          :offset 200)
   )
  )

(declare-type vehicle-physics-work structure)
(declare-type vehicle-wheel-state structure)

;; DECOMP BEGINS

(deftype vehicle-info (structure)
  ((handle-by-vehicle-type  handle  44)
   )
  )


(deftype vehicle-lookup-info (structure)
  ((turn-radius        meters)
   (throttle-turning   float)
   (throttle-straight  float)
   )
  )


(deftype vehicle-control-point (structure)
  ((local-pos  vector  :inline)
   (normal     vector  :inline)
   )
  )


(deftype vehicle-attach-point (structure)
  ((local-pos  vector  :inline)
   (rot        vector  :inline)
   )
  )


(deftype vehicle-wheel-info (structure)
  ((local-pos           vector  :inline)
   (flags               vehicle-wheel-flag)
   (callback            (function rigid-body-object vehicle-wheel-state vehicle-wheel-info none))
   (inertia             float)
   (radius              float)
   (susp-arm-length     float)
   (steer-arm-length    float)
   (scale               float)
   (travel              float)
   (probe-y-offset      float)
   (width               float)
   (suspension-spring   float)
   (suspension-damping  float)
   (forward-grip        float)
   (side-grip           float)
   (max-brake-torque    float)
   (camber              float)
   (settle-pos          float)
   (probe-radius        float)
   (tread-texture       string)
   (tread-tid           texture-id)
   )
  )


(deftype vehicle-engine-info (structure)
  ((max-torque           float)
   (inertia              float)
   (drag                 float)
   (idle-rpm             float)
   (clutch-min-rpm       float)
   (clutch-max-rpm       float)
   (min-rpm              float)
   (max-rpm              float)
   (peak-torque-rpm      float)
   (powerband-width-rpm  float)
   )
  :pack-me
  )


(deftype vehicle-transmission-info (structure)
  ((inertia            float)
   (upshift-rpm        float)
   (downshift-rpm      float)
   (final-drive-ratio  float)
   (gear-ratio-array   float  8)
   (gear-count         int8)
   )
  )


(deftype vehicle-handling-info (structure)
  ((max-engine-thrust                  meters)
   (inv-max-engine-thrust              float)
   (engine-response-rate               float)
   (engine-intake-factor               float)
   (brake-factor                       float)
   (turbo-boost-factor                 float)
   (turbo-boost-duration               uint16)
   (max-xz-speed                       meters)
   (player-turn-anim-bias              float)
   (player-turn-anim-min               float)
   (player-turn-anim-max               float)
   (pilot-x-accel-factor               float)
   (pilot-y-accel-factor               float)
   (pilot-z-accel-factor               float)
   (ground-probe-distance              meters)
   (ground-probe-offset                meters)
   (cos-ground-effect-angle            float)
   (spring-lift-factor                 float)
   (air-steering-factor                float)
   (air-drag-factor                    float)
   (steering-fin-angle                 float)
   (steering-thruster-factor           float)
   (steering-thruster-max-gain         float)
   (steering-thruster-half-gain-speed  meters)
   (tire-steering-angle                float)
   (tire-steering-speed-factor         float)
   (tire-steering-speed-bias           float)
   (ackermann-factor                   float)
   (tire-friction-factor               float)
   (tire-static-friction               float)
   (tire-static-friction-speed         meters)
   (tire-dynamic-friction              float)
   (tire-dynamic-friction-speed        meters)
   (tire-inv-max-friction-speed        float)
   (airfoil-factor                     float)
   (drag-force-factor                  float)
   (rolling-resistance                 float)
   (speed-scrubbing-drag               float)
   (speed-limiting-drag                float)
   (pitch-control-factor               float)
   (roll-control-factor                float)
   (roll-angle                         float)
   (jump-thrust-factor                 float)
   (buoyancy-factor                    float)
   (water-drag-factor                  float)
   (player-weight                      float)
   (player-shift-x                     meters)
   (player-shift-z                     meters)
   (air-roll-torque                    float)
   (air-pitch-torque                   float)
   (air-angular-damping                float)
   (hop-turn-torque                    float)
   (ground-torque-scale                float)
   (ai-steering-factor                 float)
   (ai-throttle-factor                 float)
   )
  :pack-me
  )


(deftype vehicle-physics-model-info (structure)
  ((lift-thruster-count      int8)
   (roll-thruster-count      int8)
   (stabilizer-count         int8)
   (inv-lift-thruster-count  float)
   (lift-thruster-array      vehicle-attach-point  4 :inline)
   (roll-thruster-array      vehicle-attach-point  2 :inline)
   (stabilizer-array         vehicle-attach-point  6 :inline)
   (engine-thrust-local-pos  vector                :inline)
   (brake-local-pos          vector                :inline)
   (wheel-count              int8)
   (drive-wheel-count        int8)
   (front-wheel              vehicle-wheel-info    :inline)
   (rear-wheel               vehicle-wheel-info    :inline)
   )
  )


(deftype vehicle-camera-info (structure)
  ((string-min-height        meters)
   (string-max-height        meters)
   (string-min-length        meters)
   (string-max-length        meters)
   (min-fov                  float)
   (max-fov                  float)
   (head-offset              float)
   (foot-offset              float)
   (normal-max-angle-offset  float)
   (air-max-angle-offset     float)
   (max-lookaround-speed     float)
   (look-pos-array           vector  4 :inline)
   (look-front               vector  :inline :overlay-at (-> look-pos-array 0))
   (look-left                vector  :inline :overlay-at (-> look-pos-array 1))
   (look-right               vector  :inline :overlay-at (-> look-pos-array 2))
   (look-rear                vector  :inline :overlay-at (-> look-pos-array 3))
   )
  )


(deftype vehicle-sound-loop-info (structure)
  ((sound         sound-name)
   (speed         float)
   (min-speed     float)
   (max-speed     float)
   (pitch-offset  float)
   (pitch-scale   float)
   (min-pitch     float)
   (max-pitch     float)
   )
  )


(deftype vehicle-sound-info (structure)
  ((engine-pitch-scale      float)
   (engine-pitch-offset     float)
   (engine-pitch-mod-amp    float)
   (engine-sound-select     int8)
   (thrust-sound            sound-name                       :offset  16)
   (scrape-sound            sound-name)
   (glance-sound            sound-name)
   (impact-sound            sound-name)
   (impact2-sound           sound-name)
   (explode-sound           sound-name)
   (explode2-sound          sound-name)
   (extra-sound             sound-name)
   (water-sound             sound-name)
   (jump-sound              sound-name)
   (turbo-sound             sound-name)
   (damage-sound            sound-name)
   (bank-replace            pair)
   (idle-rpm                float)
   (idle-pitch-scale        float)
   (idle-crossover-rpm      float)
   (engine-rpm              float)
   (engine-crossover-rpm    float)
   (start-sound             sound-name                       :offset 240)
   (stop-sound              sound-name)
   (idle-sound              sound-name)
   (engine-sound            sound-name)
   (engine-load-sound       sound-name)
   (susp-creak-sound        sound-name)
   (susp-bottom-out-sound   sound-name)
   (susp-speed-threshold    float)
   (tire-roll-sounds        vehicle-sound-loop-info  4 :inline)
   (tire-slide-sounds       vehicle-sound-loop-info  2 :inline)
   (tire-roll-hum-sound     vehicle-sound-loop-info  :inline :overlay-at (-> tire-roll-sounds 0))
   (tire-roll-dirt-sound    vehicle-sound-loop-info  :inline :offset 416)
   (tire-roll-sand-sound    vehicle-sound-loop-info  :inline :offset 464)
   (tire-roll-knobby-sound  vehicle-sound-loop-info  :inline :offset 512)
   (tire-slide-road-sound   vehicle-sound-loop-info  :inline :overlay-at (-> tire-slide-sounds 0))
   (tire-slide-dirt-sound   vehicle-sound-loop-info  :inline :offset 608)
   )
  )


(deftype vehicle-particle-info (structure)
  ((headlight-count        int8)
   (taillight-count        int8)
   (thruster-flame-width   meters)
   (thruster-flame-length  meters)
   (thruster-local-pos     vector  2 :inline)
   (exhaust-local-pos      vector  2 :inline)
   (exhaust-local-dir      vector  2 :inline)
   (smoke-local-pos        vector  2 :inline)
   (smoke-local-vel        vector  2 :inline)
   (headlight-local-pos    vector  3 :inline)
   (taillight-local-pos    vector  2 :inline)
   )
  )


(deftype vehicle-section-info (structure)
  ((damage-seg-array  uint64  3)
   (damage-seg-count  int8)
   )
  :pack-me
  )


(deftype vehicle-damage-info (structure)
  ((inv-toughness-factor     float)
   (hit-points               float)
   (inv-hit-points           float)
   (hit-threshold            float)
   (hit-small                float)
   (hit-big                  float)
   (hit-deadly               float)
   (impact-damage-factor     float)
   (section-count            int8)
   (section-array            vehicle-section-info  4 :inline)
   (section-bike-front       vehicle-section-info  :inline :overlay-at (-> section-array 0))
   (section-bike-rear        vehicle-section-info  :inline :offset  72)
   (section-car-front-left   vehicle-section-info  :inline :overlay-at (-> section-array 0))
   (section-car-rear-left    vehicle-section-info  :inline :overlay-at section-bike-rear)
   (section-car-front-right  vehicle-section-info  :inline :offset 104)
   (section-car-rear-right   vehicle-section-info  :inline :offset 136)
   )
  )


(deftype vehicle-setup-info (structure)
  ((settle-height        float)
   (settle-rot-x         float)
   (shadow-bot-clip      float)
   (shadow-locus-dist    float)
   (look-select          uint8)
   (color-option-count   int8)
   (color-option-select  int8)
   (color                (inline-array vector))
   (gun-yaw-min          float)
   (gun-yaw-max          float)
   (gun-pitch-min        float)
   (gun-pitch-max        float)
   (gun-z-offset         float)
   )
  :pack-me
  )


(deftype vehicle-seat-info (structure)
  ((data      uint8              16)
   (position  vector             :inline :overlay-at (-> data 0))
   (pos-x     float                      :overlay-at (-> data 0))
   (pos-y     float                      :overlay-at (-> data 4))
   (pos-z     float                      :overlay-at (-> data 8))
   (angle     int16                      :overlay-at (-> data 12))
   (flags     vehicle-seat-flag          :overlay-at (-> data 14))
   )
  )


(deftype vehicle-grab-rail-info (structure)
  ((local-pos  vector  2 :inline)
   (normal     vector  :inline)
   )
  )


(deftype vehicle-rider-info (structure)
  ((seat-count          int8)
   (rider-stance        uint8)
   (grab-rail-count     int8)
   (attach-point-count  int8)
   (grab-rail-array     (inline-array vehicle-grab-rail-info))
   (seat-array          vehicle-seat-info  4 :inline)
   (rider-hand-offset   vector             2 :inline)
   (attach-point-array  (inline-array vehicle-attach-point))
   )
  )


(deftype vehicle-explosion-info (joint-exploder-static-params)
  ((skel       skeleton-group)
   (skel-name  string)
   (anim       int32)
   )
  )


(deftype vehicle-particle-common-info (structure)
  ((sp-system2d              sparticle-system)
   (sp-system3d              sparticle-system)
   (part-thruster            sparticle-launcher)
   (part-thruster-x          sp-field-init-spec)
   (part-spec2               sp-field-init-spec)
   (part-quat                quaternion)
   (part-vel                 vector)
   (headlight-glow-template  sprite-glow-data)
   (taillight-glow-template  sprite-glow-data)
   (thruster-glow-template   sprite-glow-data)
   )
  (:methods
    (init! (_type_) none)
    )
  )


(deftype rigid-body-vehicle-constants (rigid-body-object-constants)
  ((flags                uint32)
   (object-type          traffic-type)
   (guard-type           uint8)
   (vehicle-type         vehicle-type-u8)
   (engine               vehicle-engine-info         :inline)
   (transmission         vehicle-transmission-info   :inline)
   (handling             vehicle-handling-info       :inline)
   (target-speed-offset  meters)
   (turning-accel        meters)
   (camera               vehicle-camera-info         :inline)
   (sound                vehicle-sound-info          :inline)
   (particles            vehicle-particle-info       :inline)
   (damage               vehicle-damage-info         :inline)
   (physics-model        vehicle-physics-model-info  :inline)
   (setup                vehicle-setup-info          :inline)
   (rider                vehicle-rider-info          :inline)
   (explosion            vehicle-explosion-info)
   (explosion-part       int32)
   (debris               debris-static-params)
   (name-text            text-id)
   (particle-common      vehicle-particle-common-info)
   )
  (:methods
    (init-part! (_type_) none)
    )
  )


(deftype vehicle-section (structure)
  ((damage  float)
   )
  :allow-misaligned
  )


(deftype vehicle (rigid-body-object)
  ((self                      vehicle                      :override)
   (info                      rigid-body-vehicle-constants :override)
   (v-flags                   vehicle-flag                  :overlay-at flags)
   (unknown-flags             vehicle-flag                  :offset 296)
   (squad                     squad-control)
   (control-hook              (function vehicle vehicle-controls))
   (controls                  vehicle-controls              :inline)
   (prev-controls             vehicle-controls              :inline)
   (engine-power-factor       float)
   (force-scale               float)
   (target-distance2          meters)
   (water-flags               uint32)
   (target-acceleration       vector                        :inline)
   (impact-pos                vector                        :inline)
   (impact-local-pos          vector                        :inline)
   (lin-acceleration          vector                        :inline)
   (hit-points                float)
   (damage-factor             float)
   (crash-level               int8)
   (force-level               int8)
   (traffic-hash-id           int8)
   (traffic-priority-id       int8)
   (power-fluctuation-factor  float)
   (power-level               float)
   (overlap-player-counter    uint8)
   (physics-counter           uint8)
   (cam-view                  int8)
   (brake-factor              float)
   (cam-speed-interp          float)
   (camera-dist2              float)
   (player-dist2              float)
   (bound-radius              float)
   (rider-array               handle                        4)
   (impact-proc               handle)
   (impact-pat                uint32)
   (impact-time               uint32)
   (prev-impact-time          uint32)
   (sent-attack-time          uint32)
   (air-time                  uint32)
   (water-time                uint32)
   (offscreen-time            uint32)
   (crash-time                uint32)
   (turbo-boost-time          uint32)
   (player-dismount-time      uint32)
   (crash-duration            uint16)
   (turbo-boost-duration      uint16)
   (turbo-boost-factor        float)
   (crash-impulse             float)
   (water-height              float)
   (lights-factor             float)
   (outgoing-attack-id        uint32)
   (fog-fade                  float)
   (scrape-sound-id           sound-id)
   (damage-zap-sound-id       sound-id)
   (scrape-sound-envelope     float)
   (exhaust-part-accum        sparticle-launch-control      2)
   (smoke-part-accum          sparticle-launch-control      2)
   (section-array             vehicle-section               4 :inline)
   )
  (:state-methods
    inactive
    waiting
    player-control
    crash
    explode
    die
    )
  (:methods
    (vehicle-method-62 (_type_) none)
    (vehicle-method-63 (_type_) none)
    (vehicle-method-64 (_type_) none)
    (vehicle-method-65 (_type_) int)
    (vehicle-method-66 (_type_ vector int) none)
    (get-rider-in-seat (_type_ int) process)
    (find-rider (_type_) process)
    (put-rider-in-seat (_type_ int process) none)
    (vehicle-method-70 (_type_) uint)
    (get-best-seat (_type_ vector vehicle-seat-flag int) int)
    (remove-riders (_type_ handle) none)
    (vehicle-method-73 (_type_) float)
    (vehicle-method-74 (_type_ int time-frame) none)
    (vehicle-method-75 (_type_) none)
    (vehicle-method-76 (_type_) none)
    (vehicle-method-77 (_type_) none)
    (vehicle-method-78 (_type_) none)
    (vehicle-method-79 (_type_) none)
    (vehicle-method-80 (_type_) none)
    (vehicle-method-81 (_type_) none)
    (vehicle-method-82 (_type_) none)
    (vehicle-method-83 (_type_) none)
    (vehicle-method-84 (_type_) none)
    (vehicle-method-85 (_type_) none)
    (vehicle-method-86 (_type_) none)
    (vehicle-method-87 (_type_) none)
    (vehicle-method-88 (_type_ vehicle-controls) none)
    (init-reverse (_type_ vehicle-controls) none)
    (control-hook-ai (_type_ vehicle-controls) none)
    (control-hook-player (_type_) none)
    (vehicle-method-92 (_type_ vehicle-controls) none)
    (vehicle-method-93 (_type_) none)
    (vehicle-method-94 (_type_) none)
    (vehicle-method-95 (_type_ vector float) none)
    (vehicle-method-96 (_type_ float) none)
    (vehicle-method-97 (_type_ float vehicle-physics-work) none)
    (vehicle-method-98 (_type_) none)
    (vehicle-method-99 (_type_) none)
    (vehicle-method-100 (_type_) none)
    (vehicle-method-101 (_type_) none)
    (vehicle-method-102 (_type_) symbol)
    (vehicle-method-103 (_type_) none)
    (vehicle-method-104 (_type_) none)
    (vehicle-method-105 (_type_) none)
    (vehicle-method-106 (_type_) none)
    (vehicle-method-107 (_type_ int process) none)
    (vehicle-method-108 (_type_ int) none)
    (vehicle-method-109 (_type_) none)
    (vehicle-method-110 (_type_) none)
    (get-linear-accel! (_type_ vector) none)
    (copy-vehicle-controls! (_type_ vehicle-controls) none)
    (vehicle-method-113 (_type_ vector int int) none)
    (vehicle-method-114 (_type_ int) none)
    (vehicle-method-115 (_type_) none)
    (vehicle-method-116 (_type_ symbol) none)
    (vehicle-method-117 (_type_) none)
    (vehicle-method-118 (_type_) none)
    (vehicle-method-119 (_type_) none)
    (apply-gravity (_type_ float) none)
    (apply-gravity1 (_type_ float) none)
    (vehicle-method-122 (_type_) none)
    (vehicle-method-123 (_type_) none)
    (vehicle-method-124 (_type_) none)
    (vehicle-method-125 (_type_) none)
    (vehicle-method-126 (_type_) none)
    (check-player-get-on (_type_ process-focusable) symbol)
    (vehicle-method-128 (_type_) symbol)
    (vehicle-method-129 (_type_) none)
    (vehicle-method-130 (_type_) none)
    (vehicle-method-131 (_type_ traffic-object-spawn-params) none)
    (vehicle-method-132 (_type_ traffic-object-spawn-params) none)
    (vehicle-method-133 (_type_ traffic-object-spawn-params) none)
    (vehicle-method-134 (_type_) none)
    (vehicle-method-135 (_type_) none)
    (vehicle-method-136 (_type_) none)
    (vehicle-method-137 (_type_) none)
    (vehicle-method-138 (_type_) none)
    (vehicle-method-139 (_type_) none)
    (vehicle-method-140 (_type_) none)
    (vehicle-method-141 (_type_) symbol)
    (vehicle-method-142 (_type_) none)
    (vehicle-method-143 (_type_ process) object)
    (vehicle-method-144 (_type_) none)
    (vehicle-method-145 (_type_) none)
    (vehicle-method-146 (_type_ vector) none)
    (vehicle-method-147 (_type_) none)
    (vehicle-method-148 (_type_) none)
    (vehicle-method-149 (_type_) none)
    (vehicle-method-150 (_type_) none)
    (set-hit-points (_type_ float) none)
    )
  )


(deftype vehicle-probe-work (structure)
  ((local-pos      vector  :inline)
   (local-normal   vector  :inline)
   (world-pos      vector  :inline)
   (world-normal   vector  :inline)
   (probe-pos      vector  :inline)
   (ground-pos     vector  :inline)
   (ground-normal  vector  :inline)
   (velocity       vector  :inline)
   (tire-force     vector  :inline)
   (wheel-axis     vector  :inline)
   )
  )


(deftype vehicle-physics-work (structure)
  ((mat               matrix              :inline)
   (force             vector              :inline)
   (velocity          vector              :inline)
   (world-pos         vector              :inline)
   (world-normal      vector              :inline)
   (local-pos         vector              :inline)
   (steering-axis     vector              :inline)
   (lift-dir          vector              :inline)
   (normal            vector              :inline)
   (tmp               vector              :inline)
   (p-body            vector              :inline)
   (axis              vector              :inline)
   (dir               vector              :inline)
   (ground-normal     vector              :inline)
   (impulse           float)
   (vel-dot-norm      float)
   (friction-coef     float)
   (speed-factor      float)
   (probe-work-array  vehicle-probe-work  4 :inline)
   )
  )


(deftype vehicle-draw-thruster-params (structure)
  ((quat      quaternion  :inline)
   (trans     vector      :inline)
   (thrust    float)
   (width     float)
   (length    float)
   (fog-fade  float)
   )
  )


(defun meters-per-sec->mph ((arg0 float))
  (* 0.00031568037 arg0)
  )

(deftype debug-vehicle-work (basic)
  ((impact-time   time-frame)
   (impact        rigid-body-impact  :inline)
   (prim-sphere1  sphere             :inline)
   (prim-sphere2  sphere             :inline)
   )
  )
