;;-*-Lisp-*-
(in-package goal)

;; name: factory-scenes.gc
;; name in dgo: factory-scenes
;; dgos: FACTORYA

(define-extern *range-fac-dust-color* curve-color-fast)
(define-extern *range-fac-dust-alpha* curve2d-fast)
(define-extern *range-fac-dust-scale-x* curve2d-fast)
(define-extern *range-fac-dust-scale-y* curve2d-fast)
(define-extern *curve-fac-dust-alpha* curve2d-fast)
(define-extern *curve-fac-dust-scale-x* curve2d-fast)
(define-extern *curve-fac-dust-scale-y* curve2d-fast)

;; DECOMP BEGINS

(define *war-factory-vehicle-mask* (the-as uint 0))

(define *war-factory-effects-mask* (the-as uint 0))

(load-scene (new 'static 'scene
              :name "factory-sky-battle-intro-b"
              :extra #f
              :info #f
              :scene-flags (scene-flags scf1 scf2 scf3 scf4)
              :mask-to-clear (process-mask movie projectile)
              :entity "scene-stage-150"
              :art-group "scenecamera"
              :anim "factory-sky-battle-intro-b"
              :parts 8
              :command-list '((0
                  (fadein (frame-time-30 10))
                  (kill "lfac-hanger-door-1")
                  (part-tracker
                    "group-fma-hellcat-heathaze-ground"
                    entity
                    "particleman"
                    joint
                    "particleA"
                    track
                    #t
                    duration
                    (frame-range 0 297)
                    )
                  (apply ,(lambda :behavior scene-player
                            ()
                            (set-lfacrm1-door! 0.0)
                            (let ((v1-1 (level-get *level* 'lfaccity)))
                              (if v1-1
                                  (logclear! (-> v1-1 info level-flags) (level-flags use-camera-other))
                                  )
                              )
                            (none)
                            )
                         )
                  )
                (262 (part-tracker
                       "group-hellcat-thrusters-fire"
                       entity
                       "particleman"
                       joint
                       "particleB"
                       track
                       #t
                       duration
                       (frame-range 262 285)
                       )
                     )
                (266 (part-tracker
                       "group-hellcat-dust-landing-fac"
                       entity
                       "particleman"
                       joint
                       "particleD"
                       track
                       #t
                       duration
                       (frame-range 266 285)
                       )
                     )
                (270 (part-tracker
                       "group-hellcat-thrusters-fire"
                       entity
                       "particleman"
                       joint
                       "particleC"
                       track
                       #t
                       duration
                       (frame-range 270 285)
                       )
                     )
                (286
                  (part-tracker
                    "group-hellcat-thrusters-fac"
                    entity
                    "particleman"
                    joint
                    "particleB"
                    track
                    #t
                    duration
                    (frame-range 286 704)
                    )
                  (part-tracker
                    "group-hellcat-thrusters-fac"
                    entity
                    "particleman"
                    joint
                    "particleC"
                    track
                    #t
                    duration
                    (frame-range 286 704)
                    )
                  (part-tracker
                    "group-hellcat-dust-landing-fac"
                    entity
                    "particleman"
                    joint
                    "particleD"
                    track
                    #t
                    duration
                    (frame-range 286 400)
                    )
                  )
                (297 (part-tracker
                       "group-fma-hellcat-heathaze"
                       entity
                       "particleman"
                       joint
                       "particleA"
                       track
                       #t
                       duration
                       (frame-range 298 701)
                       )
                     )
                (510 (apply ,(lambda :behavior scene-player () (none))))
                (690 (apply ,(lambda :behavior scene-player
                               ()
                               (when (not (-> self aborted?))
                                 (disable *screen-filter*)
                                 (setup
                                   *screen-filter*
                                   (new 'static 'vector :x 255.0 :y 255.0 :z 255.0)
                                   (new 'static 'vector :x 255.0 :y 255.0 :z 255.0 :w 128.0)
                                   (* 1.1111112 (seconds-per-frame))
                                   (bucket-id tex-hud-pris2)
                                   #x3fffff
                                   #x33001
                                   #t
                                   )
                                 (set-setting! 'allow-blackout #f 0.0 0)
                                 )
                               (none)
                               )
                            )
                     )
                (701 (want-display 'factoryb 'display))
                (702
                  (part-tracker
                    "group-hellcat-thrusters-follow"
                    entity
                    "particleman"
                    joint
                    "particleB"
                    track
                    #t
                    duration
                    (frame-range 702 1000)
                    )
                  (part-tracker
                    "group-hellcat-thrusters-follow"
                    entity
                    "particleman"
                    joint
                    "particleC"
                    track
                    #t
                    duration
                    (frame-range 702 1000)
                    )
                  )
                (720 (apply ,(lambda :behavior scene-player
                               ()
                               (when (not (-> self aborted?))
                                 (remove-setting! 'allow-blackout)
                                 (setup
                                   *screen-filter*
                                   (new 'static 'vector :x 255.0 :y 255.0 :z 255.0 :w 128.0)
                                   (new 'static 'vector :x 255.0 :y 255.0 :z 255.0)
                                   (* 1.1111112 (seconds-per-frame))
                                   (bucket-id tex-hud-pris2)
                                   #x3fffff
                                   #x33001
                                   #t
                                   )
                                 (set-filter-color! 1.0 1.0 1.0)
                                 )
                               (none)
                               )
                            )
                     )
                (870 (fadeout (frame-time-30 30)))
                (10000
                  (apply ,(lambda :behavior scene-player
                            ()
                            (let ((v1-1 (level-get *level* 'lfaccity)))
                              (if v1-1
                                  (logior! (-> v1-1 info level-flags) (level-flags use-camera-other))
                                  )
                              )
                            (none)
                            )
                         )
                  (task-close! "factory-sky-battle-hanger")
                  )
                )
              :cut-list '(111 210 297 701)
              :wait-ground-time (seconds 1)
              :actor (new 'static 'boxed-array :type scene-actor
                (new 'static 'scene-actor
                  :name "scenecamera"
                  :level #f
                  :art-group "skel-scenecamera"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :camera 4
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "jakc-highres"
                  :level 'factorya
                  :art-group "skel-jakc-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :light-index #xa
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  :no-draw-seg #x80
                  )
                (new 'static 'scene-actor
                  :name "sidekick-highres"
                  :level 'factorya
                  :art-group "skel-sidekick-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :light-index #xa
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "hellcat-movie"
                  :level 'factorya
                  :art-group "skel-hellcat-movie"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :light-index #xa
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  :no-draw-seg #x1fe
                  )
                (new 'static 'scene-actor
                  :name "particleman"
                  :level 'factorya
                  :art-group "skel-particleman"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "lfac-hanger-door"
                  :level 'factorya
                  :art-group "skel-lfac-hanger-door"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :light-index #xa
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                )
              :load-point "factorya-intro-b"
              :end-point "factoryb-start"
              :borrow '((factorya 1 lfacrm1 copy))
              :sfx-volume -1.0
              :ambient-volume -1.0
              :music-delay 1500.0
              :on-running #f
              :on-complete #f
              )
            )

(load-scene
  (new 'static 'scene
    :name "factory-sky-battle-res"
    :extra #f
    :info #f
    :scene-flags (scene-flags scf1 scf2 scf3 scf4 scf8)
    :mask-to-clear (process-mask movie projectile)
    :entity "scene-stage-151"
    :art-group "scenecamera"
    :anim "factory-sky-battle-res"
    :parts 6
    :command-list '((0
        (fadein (frame-time-30 10))
        (send-event "h-warf" 'eval ,(lambda :behavior scene-player
                                      ((arg0 process-drawable))
                                      (when (nonzero? *war-factory-vehicle-mask*)
                                        (set! (-> arg0 draw seg-mask) *war-factory-vehicle-mask*)
                                        (set! (-> arg0 draw effect-mask) *war-factory-effects-mask*)
                                        )
                                      (none)
                                      )
                    )
        (part-tracker
          "group-hellcat-thrusters-fac"
          entity
          "particleman"
          joint
          "particleA"
          track
          #t
          duration
          (frame-range 0 250)
          )
        (part-tracker
          "group-hellcat-thruster-trail-fac"
          entity
          "particleman"
          joint
          "particleA"
          track
          #t
          duration
          (frame-range 0 250)
          )
        (part-tracker
          "group-hellcat-thrusters-fac"
          entity
          "particleman"
          joint
          "particleB"
          track
          #t
          duration
          (frame-range 0 250)
          )
        (part-tracker
          "group-hellcat-thruster-trail-fac"
          entity
          "particleman"
          joint
          "particleB"
          track
          #t
          duration
          (frame-range 0 250)
          )
        (want-display 'lfacrm2 'display)
        )
      (141 (part-tracker
             "group-fma-hellcat-heathaze"
             entity
             "particleman"
             joint
             "particleE"
             track
             #t
             duration
             (frame-range 141 270)
             )
           )
      (210 (part-tracker
             "group-hellcat-dust-landing-fac"
             entity
             "particleman"
             joint
             "particleC"
             track
             #t
             duration
             (frame-range 210 260)
             )
           )
      (230 (part-tracker
             "group-hellcat-dust-landing-fac"
             entity
             "particleman"
             joint
             "particleD"
             track
             #t
             duration
             (frame-range 230 270)
             )
           )
      (595 (fadeout (frame-time-30 20)))
      (10000 (task-close! "factory-sky-battle-resolution"))
      )
    :cut-list '(141)
    :wait-ground-time (seconds 1)
    :actor (new 'static 'boxed-array :type scene-actor
      (new 'static 'scene-actor
        :name "scenecamera"
        :level #f
        :art-group "skel-scenecamera"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :camera 4
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "particleman"
        :level 'factoryb
        :art-group "skel-particleman"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "jakc-highres"
        :level 'factoryb
        :art-group "skel-jakc-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        :no-draw-seg #x280
        )
      (new 'static 'scene-actor
        :name "sidekick-highres"
        :level 'factoryb
        :art-group "skel-sidekick-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "h-warf"
        :level 'factorya
        :art-group "skel-h-warf"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        :no-draw-seg #x1fe
        )
      )
    :load-point "factorya-movie"
    :end-point "factoryc-start-lfacrm2"
    :borrow '()
    :sfx-volume -1.0
    :ambient-volume -1.0
    :music-delay 1500.0
    :scene-task #xd9
    :on-running #f
    :on-complete #f
    )
  )

(load-scene (new 'static 'scene
              :name "factory-assault-res"
              :extra #f
              :info #f
              :scene-flags (scene-flags scf1 scf2 scf3 scf4)
              :mask-to-clear (process-mask movie enemy platform projectile)
              :entity "camera-start-151"
              :art-group "scenecamera"
              :anim "arena-training-1-intro"
              :parts 16
              :command-list '((10000 (task-close! "factory-boss-introduction")))
              :cut-list '()
              :wait-ground-time (seconds 1)
              :actor (new 'static 'boxed-array :type scene-actor (new 'static 'scene-actor
                                                            :name "scenecamera"
                                                            :level #f
                                                            :art-group "skel-scenecamera"
                                                            :prefix ""
                                                            :draw-frames '((min max))
                                                            :scissor-frames '()
                                                            :shadow-frames '((min max))
                                                            :cloth-reset-frames '()
                                                            :cloth-commands '()
                                                            :camera 4
                                                            :shadow-flags -1
                                                            :shadow-volume-joint #f
                                                            )
                                                          )
              :load-point "factoryc-start"
              :end-point "factoryd-start"
              :borrow '()
              :sfx-volume -1.0
              :ambient-volume -1.0
              :music-delay 1500.0
              :scene-task #xe5
              :on-running #f
              :on-complete #f
              )
            )

(load-scene (new 'static 'scene
              :name "factory-boss-intro"
              :extra #f
              :info #f
              :scene-flags (scene-flags scf1 scf2 scf3 scf4)
              :mask-to-clear (process-mask movie enemy platform projectile)
              :entity "scene-stage-204"
              :art-group "scenecamera"
              :anim "factory-boss-intro"
              :parts 16
              :command-list '((0
                  (fadein (frame-time-30 10))
                  (apply ,(lambda :behavior scene-player
                            ()
                            (let ((gp-0 (level-get *level* 'factorya)))
                              (when gp-0
                                (clear-mood-context (-> gp-0 mood-context))
                                (if #f
                                    ((the-as (function mood-context none) #f) (-> gp-0 mood-context))
                                    )
                                (set! (-> gp-0 info mood-func) 'update-mood-factoryd)
                                (logior! (-> gp-0 info level-flags) (level-flags lf9))
                                )
                              )
                            (none)
                            )
                         )
                  )
                (1801 (fadeout (frame-time-30 10)))
                (10000
                  (apply ,(lambda :behavior scene-player
                            ()
                            (let ((gp-0 (level-get *level* 'factorya)))
                              (when gp-0
                                (clear-mood-context (-> gp-0 mood-context))
                                (if #f
                                    ((the-as (function mood-context none) #f) (-> gp-0 mood-context))
                                    )
                                (set! (-> gp-0 info mood-func) 'update-mood-factory)
                                (logior! (-> gp-0 info level-flags) (level-flags lf9))
                                )
                              )
                            (none)
                            )
                         )
                  (task-close! "factory-boss-introduction")
                  )
                )
              :cut-list '(0 353 415 851 989 1065 1254 1748)
              :wait-ground-time (seconds 1)
              :actor (new 'static 'boxed-array :type scene-actor
                (new 'static 'scene-actor
                  :name "scenecamera"
                  :level #f
                  :art-group "skel-scenecamera"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :camera 4
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "jakc-highres"
                  :level 'factorya
                  :art-group "skel-jakc-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  :no-draw-seg #x280
                  )
                (new 'static 'scene-actor
                  :name "sidekick-highres"
                  :level 'factorya
                  :art-group "skel-sidekick-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "errol"
                  :level 'factorya
                  :art-group "skel-errol"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                )
              :load-point "factoryd-start"
              :end-point "factoryd-start"
              :borrow '()
              :sfx-volume -1.0
              :ambient-volume -1.0
              :music-delay 1500.0
              :scene-task #xe6
              :on-running '(sound-play-loop "factory-amb-mov")
              :on-complete #f
              )
            )

(load-scene (new 'static 'scene
              :name "factory-indax-1-intro"
              :extra #f
              :info #f
              :scene-flags (scene-flags scf1 scf2 scf3 scf4)
              :mask-to-clear (process-mask movie enemy platform projectile)
              :entity "scene-stage-181"
              :art-group "scenecamera"
              :anim "factory-indax-1-intro"
              :parts 4
              :command-list '((0
                  (apply ,(lambda :behavior scene-player
                            ()
                            (let ((gp-0 (level-get *level* 'factorya)))
                              (when gp-0
                                (clear-mood-context (-> gp-0 mood-context))
                                (if #f
                                    ((the-as (function mood-context none) #f) (-> gp-0 mood-context))
                                    )
                                (set! (-> gp-0 info mood-func) 'update-mood-factoryc)
                                (logior! (-> gp-0 info level-flags) (level-flags lf9))
                                )
                              )
                            (none)
                            )
                         )
                  (fadein (frame-time-30 10))
                  )
                (410 (fadeout (frame-time-30 20)))
                (10000
                  (apply ,(lambda :behavior scene-player
                            ()
                            (let ((gp-0 (level-get *level* 'factorya)))
                              (when gp-0
                                (clear-mood-context (-> gp-0 mood-context))
                                (if #f
                                    ((the-as (function mood-context none) #f) (-> gp-0 mood-context))
                                    )
                                (set! (-> gp-0 info mood-func) 'update-mood-factory)
                                (logior! (-> gp-0 info level-flags) (level-flags lf9))
                                )
                              )
                            (none)
                            )
                         )
                  (task-close! "factory-assault-indax-1-introduction")
                  )
                )
              :cut-list '(200)
              :wait-ground-time (seconds 1)
              :actor (new 'static 'boxed-array :type scene-actor
                (new 'static 'scene-actor
                  :name "scenecamera"
                  :level #f
                  :art-group "skel-scenecamera"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :camera 4
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "sidekick-highres"
                  :level 'factorya
                  :art-group "skel-sidekick-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "jakc-highres"
                  :level 'factorya
                  :art-group "skel-jakc-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  :no-draw-seg #x80
                  )
                )
              :load-point "factoryc-start"
              :end-point "factory-indax-1"
              :borrow '()
              :sfx-volume -1.0
              :ambient-volume -1.0
              :music-delay 1500.0
              :scene-task #xdb
              :on-running '(sound-play-loop "factory-amb-mov")
              :on-complete #f
              )
            )

(load-scene (new 'static 'scene
              :name "factory-indax-2-intro"
              :extra #f
              :info #f
              :scene-flags (scene-flags scf1 scf2 scf3 scf4)
              :mask-to-clear (process-mask movie enemy platform projectile)
              :entity "scene-stage-180"
              :art-group "scenecamera"
              :anim "factory-indax-2-intro"
              :parts 3
              :command-list '((0
                  (apply ,(lambda :behavior scene-player
                            ()
                            (let ((gp-0 (level-get *level* 'factorya)))
                              (when gp-0
                                (clear-mood-context (-> gp-0 mood-context))
                                (if #f
                                    ((the-as (function mood-context none) #f) (-> gp-0 mood-context))
                                    )
                                (set! (-> gp-0 info mood-func) 'update-mood-factoryc)
                                (logior! (-> gp-0 info level-flags) (level-flags lf9))
                                )
                              )
                            (none)
                            )
                         )
                  (fadein (frame-time-30 10))
                  )
                (340 (fadeout (frame-time-30 20)))
                (10000
                  (apply ,(lambda :behavior scene-player
                            ()
                            (let ((gp-0 (level-get *level* 'factorya)))
                              (when gp-0
                                (clear-mood-context (-> gp-0 mood-context))
                                (if #f
                                    ((the-as (function mood-context none) #f) (-> gp-0 mood-context))
                                    )
                                (set! (-> gp-0 info mood-func) 'update-mood-factory)
                                (logior! (-> gp-0 info level-flags) (level-flags lf9))
                                )
                              )
                            (none)
                            )
                         )
                  (task-close! "factory-assault-indax-2-introduction")
                  )
                )
              :cut-list '(163)
              :wait-ground-time (seconds 1)
              :actor (new 'static 'boxed-array :type scene-actor
                (new 'static 'scene-actor
                  :name "scenecamera"
                  :level #f
                  :art-group "skel-scenecamera"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :camera 4
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "sidekick-highres"
                  :level 'factorya
                  :art-group "skel-sidekick-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "jakc-highres"
                  :level 'factorya
                  :art-group "skel-jakc-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  :no-draw-seg #x80
                  )
                )
              :load-point "factoryc-start"
              :end-point "factory-indax-2"
              :borrow '()
              :sfx-volume -1.0
              :ambient-volume -1.0
              :music-delay 1500.0
              :scene-task #xdd
              :on-running '(sound-play-loop "factory-amb-mov")
              :on-complete #f
              )
            )

(load-scene (new 'static 'scene
              :name "factory-indax-3-intro"
              :extra #f
              :info #f
              :scene-flags (scene-flags scf1 scf2 scf3 scf4)
              :mask-to-clear (process-mask movie enemy platform projectile)
              :entity "scene-stage-179"
              :art-group "scenecamera"
              :anim "factory-indax-3-intro"
              :parts 3
              :command-list '((0
                  (apply ,(lambda :behavior scene-player
                            ()
                            (let ((gp-0 (level-get *level* 'factorya)))
                              (when gp-0
                                (clear-mood-context (-> gp-0 mood-context))
                                (if #f
                                    ((the-as (function mood-context none) #f) (-> gp-0 mood-context))
                                    )
                                (set! (-> gp-0 info mood-func) 'update-mood-factoryc)
                                (logior! (-> gp-0 info level-flags) (level-flags lf9))
                                )
                              )
                            (none)
                            )
                         )
                  (fadein (frame-time-30 10))
                  )
                (320 (fadeout (frame-time-30 20)))
                (10000
                  (apply ,(lambda :behavior scene-player
                            ()
                            (let ((gp-0 (level-get *level* 'factorya)))
                              (when gp-0
                                (clear-mood-context (-> gp-0 mood-context))
                                (if #f
                                    ((the-as (function mood-context none) #f) (-> gp-0 mood-context))
                                    )
                                (set! (-> gp-0 info mood-func) 'update-mood-factory)
                                (logior! (-> gp-0 info level-flags) (level-flags lf9))
                                )
                              )
                            (none)
                            )
                         )
                  (task-close! "factory-assault-indax-3-introduction")
                  )
                )
              :cut-list '(145 241)
              :wait-ground-time (seconds 1)
              :actor (new 'static 'boxed-array :type scene-actor
                (new 'static 'scene-actor
                  :name "scenecamera"
                  :level #f
                  :art-group "skel-scenecamera"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :camera 4
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "sidekick-highres"
                  :level 'factorya
                  :art-group "skel-sidekick-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "jakc-highres"
                  :level 'factorya
                  :art-group "skel-jakc-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  :no-draw-seg #x80
                  )
                )
              :load-point "factoryc-start"
              :end-point "factory-indax-3"
              :borrow '()
              :sfx-volume -1.0
              :ambient-volume -1.0
              :music-delay 1500.0
              :scene-task #xdf
              :on-running '(sound-play-loop "factory-amb-mov")
              :on-complete #f
              )
            )

(load-scene (new 'static 'scene
              :name "factory-indax-4-intro"
              :extra #f
              :info #f
              :scene-flags (scene-flags scf1 scf2 scf3 scf4)
              :mask-to-clear (process-mask movie enemy platform projectile)
              :entity "scene-stage-178"
              :art-group "scenecamera"
              :anim "factory-indax-4-intro"
              :parts 3
              :command-list '((0
                  (apply ,(lambda :behavior scene-player
                            ()
                            (let ((gp-0 (level-get *level* 'factorya)))
                              (when gp-0
                                (clear-mood-context (-> gp-0 mood-context))
                                (if #f
                                    ((the-as (function mood-context none) #f) (-> gp-0 mood-context))
                                    )
                                (set! (-> gp-0 info mood-func) 'update-mood-factoryc)
                                (logior! (-> gp-0 info level-flags) (level-flags lf9))
                                )
                              )
                            (none)
                            )
                         )
                  (fadein (frame-time-30 10))
                  )
                (340 (fadeout (frame-time-30 20)))
                (10000
                  (apply ,(lambda :behavior scene-player
                            ()
                            (let ((gp-0 (level-get *level* 'factorya)))
                              (when gp-0
                                (clear-mood-context (-> gp-0 mood-context))
                                (if #f
                                    ((the-as (function level none) #f) (the-as level (-> gp-0 mood-context)))
                                    )
                                (set! (-> gp-0 info mood-func) 'update-mood-factory)
                                (logior! (-> gp-0 info level-flags) (level-flags lf9))
                                )
                              )
                            (none)
                            )
                         )
                  (task-close! "factory-assault-indax-4-introduction")
                  )
                )
              :cut-list '(191)
              :wait-ground-time (seconds 1)
              :actor (new 'static 'boxed-array :type scene-actor
                (new 'static 'scene-actor
                  :name "scenecamera"
                  :level #f
                  :art-group "skel-scenecamera"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :camera 4
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "sidekick-highres"
                  :level 'factorya
                  :art-group "skel-sidekick-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "jakc-highres"
                  :level 'factorya
                  :art-group "skel-jakc-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  :no-draw-seg #x80
                  )
                )
              :load-point "factoryc-start"
              :end-point "factory-indax-4"
              :borrow '()
              :sfx-volume -1.0
              :ambient-volume -1.0
              :music-delay 1500.0
              :scene-task #xe1
              :on-running '(sound-play-loop "factory-amb-mov")
              :on-complete #f
              )
            )

(defpartgroup group-fma-hellcat-heathaze-ground
  :id 756
  :flags (sp0 sp4)
  :bounds (static-bspherem 0 0 0 640)
  :parts ((sp-item 2833 :flags (sp7)) (sp-item 2834 :flags (sp7)))
  )

(defpart 2833
  :init-specs ((:num 2.0)
    (:x (meters 0) (meters 5))
    (:rot-x 6)
    (:r 2048.0)
    (:g 1024.0)
    (:b 1024.0)
    (:vel-y (meters -0.016666668))
    (:fade-b -5.4613333)
    (:accel-x (meters -0.00066666666) (meters 0.0013333333))
    (:accel-y (meters 0.001))
    (:accel-z (meters -0.00066666666) (meters 0.0013333333))
    (:timer (seconds 0.335))
    (:flags (distort))
    (:next-time (seconds 0.167))
    (:next-launcher 2835)
    (:conerot-x (degrees -10) (degrees 20))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 2835
  :init-specs ((:fade-b 5.4613333))
  )

(defpart 2834
  :init-specs ((:num 2.0)
    (:x (meters 0) (meters 5))
    (:rot-x 6)
    (:r 2048.0)
    (:g 1024.0)
    (:b 1024.0)
    (:vel-y (meters -0.016666668))
    (:fade-b 5.4613333)
    (:accel-x (meters -0.00066666666) (meters 0.0013333333))
    (:accel-y (meters 0.001))
    (:accel-z (meters -0.00066666666) (meters 0.0013333333))
    (:timer (seconds 0.335))
    (:flags (distort))
    (:next-time (seconds 0.167))
    (:next-launcher 2836)
    (:conerot-x (degrees -10) (degrees 20))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 2836
  :init-specs ((:fade-b -5.4613333))
  )

(defpartgroup group-fma-hellcat-heathaze
  :id 757
  :flags (sp0 sp4)
  :bounds (static-bspherem 0 0 0 640)
  :parts ((sp-item 2837 :flags (sp7)) (sp-item 2838 :flags (sp7)))
  )

(defpart 2837
  :init-specs ((:num 2.0)
    (:x (meters 0) (meters 5))
    (:rot-x 6)
    (:r 2048.0)
    (:g 1024.0)
    (:b 1024.0)
    (:vel-y (meters -0.016666668))
    (:fade-b -2.7306666)
    (:timer (seconds 0.667))
    (:flags (distort))
    (:next-time (seconds 0.335))
    (:next-launcher 2839)
    (:conerot-x (degrees -10) (degrees 20))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 2839
  :init-specs ((:fade-b 2.7306666))
  )

(defpart 2838
  :init-specs ((:num 2.0)
    (:x (meters 0) (meters 5))
    (:rot-x 6)
    (:r 2048.0)
    (:g 1024.0)
    (:b 1024.0)
    (:vel-y (meters -0.016666668))
    (:fade-b 2.7306666)
    (:timer (seconds 0.667))
    (:flags (distort))
    (:next-time (seconds 0.335))
    (:next-launcher 2840)
    (:conerot-x (degrees -10) (degrees 20))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 2840
  :init-specs ((:fade-b -2.7306666))
  )

(defpartgroup group-hellcat-thrusters-fire
  :id 758
  :flags (sp0 sp4)
  :bounds (static-bspherem 0 0 0 640)
  :parts ((sp-item 2841 :flags (is-3d sp7) :period (seconds 0.017) :length (seconds 0.017))
    (sp-item 2842 :flags (sp7) :period (seconds 0.017) :length (seconds 0.017))
    )
  )

(defpart 2841
  :init-specs ((:texture (gun-enemy-muzzleflash level-default-sprite))
    (:num 2.0)
    (:z (meters -1.5))
    (:scale-x (meters 3) (meters 1))
    (:rot-x (degrees 180))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0) 1 (degrees 90))
    (:scale-y (meters 3) (meters 1))
    (:r 255.0)
    (:g 150.0)
    (:b 0.0)
    (:a 30.0 30.0)
    (:scalevel-x (meters -0.02))
    (:fade-a -0.6)
    (:timer (seconds 0.335))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:conerot-z (degrees 0))
    (:rotate-x (degrees 0))
    (:rotate-y (degrees 0))
    )
  )

(defpart 2842
  :init-specs ((:texture (glow level-default-sprite))
    (:num 1.0)
    (:scale-x (meters 6) (meters 1))
    (:rot-x (degrees 22.5))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 100.0)
    (:b 0.0)
    (:a 10.0 2.0)
    (:omega (degrees 4511.25))
    (:fade-a -0.12)
    (:timer (seconds 0.335))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 819.2)
    (:conerot-z (degrees 0))
    (:rotate-y (degrees 0))
    )
  )

(defpartgroup group-hellcat-thrusters-fac
  :id 759
  :flags (sp0 sp4)
  :bounds (static-bspherem 0 0 0 640)
  :parts ((sp-item 2843 :flags (is-3d sp7) :period (seconds 0.017) :length (seconds 0.017))
    (sp-item 2844 :flags (sp7) :period (seconds 0.017) :length (seconds 0.017))
    )
  )

(defpart 2843
  :init-specs ((:texture (gun-enemy-muzzleflash level-default-sprite))
    (:num 4.0)
    (:z (meters -1.5))
    (:scale-x (meters 1) (meters 1))
    (:rot-x (degrees 180))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0) 1 (degrees 90))
    (:scale-y (meters 3) (meters 1))
    (:r 10.0 20.0)
    (:g 200.0)
    (:b 255.0)
    (:a 30.0 30.0)
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:conerot-z (degrees 0))
    (:rotate-x (degrees 0))
    (:rotate-y (degrees 0))
    )
  )

(defpart 2844
  :init-specs ((:texture (glow-soft level-default-sprite))
    (:num 3.0)
    (:scale-x (meters 5) (meters 1))
    (:rot-x (degrees 6.7500005))
    (:scale-y :copy scale-x)
    (:r 0.0)
    (:g 100.0 28.0)
    (:b 255.0)
    (:a 12.0 2.0)
    (:omega (degrees 4511.25))
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 4.096)
    (:conerot-z (degrees 0))
    (:rotate-y (degrees 0))
    )
  )

(defpartgroup group-hellcat-thrusters-follow
  :id 760
  :flags (sp0 sp4)
  :bounds (static-bspherem 0 0 0 640)
  :parts ((sp-item 2845 :flags (is-3d sp7) :period (seconds 0.017) :length (seconds 0.017))
    (sp-item 2846 :flags (sp7) :period (seconds 0.017) :length (seconds 0.017))
    )
  )

(defpart 2845
  :init-specs ((:texture (gun-enemy-muzzleflash level-default-sprite))
    (:num 4.0)
    (:z (meters -1.5))
    (:scale-x (meters 1) (meters 1))
    (:rot-x (degrees 180))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0) 1 (degrees 90))
    (:scale-y (meters 3) (meters 1))
    (:r 10.0 20.0)
    (:g 200.0)
    (:b 255.0)
    (:a 30.0 30.0)
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:conerot-z (degrees 0))
    (:rotate-x (degrees 0))
    (:rotate-y (degrees 0))
    )
  )

(defpart 2846
  :init-specs ((:texture (glow-soft level-default-sprite))
    (:num 3.0)
    (:scale-x (meters 5) (meters 1))
    (:scale-y :copy scale-x)
    (:r 0.0)
    (:g 100.0 28.0)
    (:b 255.0)
    (:a 12.0 2.0)
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:conerot-z (degrees 0))
    (:rotate-y (degrees 0))
    )
  )

(defpartgroup group-hellcat-thruster-trail-fac
  :id 761
  :flags (sp0 sp4)
  :bounds (static-bspherem 0 0 0 640)
  :parts ((sp-item 2847 :flags (sp7) :period (seconds 0.035) :length (seconds 0.035))
    (sp-item 2848 :flags (sp7) :period (seconds 0.035) :length (seconds 0.035))
    )
  )

(defpart 2847
  :init-specs ((:texture (dirtpuff01 level-default-sprite))
    (:num 4.0)
    (:scale-x (meters 1))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 120.0)
    (:g 120.0)
    (:b 255.0)
    (:a 10.0 5.0)
    (:vel-z (meters 0) (meters -0.33333334))
    (:scalevel-x (meters 0.006666667) (meters 0.006666667))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.05 -0.05)
    (:friction 0.5)
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-13))
    (:conerot-z (degrees 0))
    (:rotate-y (degrees 0))
    )
  )

(defpart 2848
  :init-specs ((:texture (dirtpuff01 level-default-sprite))
    (:num 4.0)
    (:scale-x (meters 1))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 120.0)
    (:g 120.0)
    (:b 255.0)
    (:a 10.0 5.0)
    (:vel-z (meters -0.33333334) (meters -0.33333334))
    (:scalevel-x (meters 0.006666667) (meters 0.006666667))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.05 -0.05)
    (:friction 0.5)
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-13))
    (:conerot-z (degrees 0))
    (:rotate-y (degrees 0))
    )
  )

(defpartgroup group-hellcat-dust-landing-fac
  :id 762
  :flags (sp0 sp4)
  :bounds (static-bspherem 0 0 0 64)
  :parts ((sp-item 2849 :flags (sp7)))
  )

(defpart 2849
  :init-specs ((:texture (dirtpuff01 level-default-sprite))
    (:birth-func 'birth-func-curve)
    (:num 1.0)
    (:x (meters 0) (meters 3))
    (:scale-x (meters 0.5))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 100.0)
    (:b 60.0)
    (:a 0.0)
    (:vel-x (meters 0.033333335) (meters 0.06666667))
    (:accel-y (meters 0) (meters 0.00016666666))
    (:timer (seconds 3))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-13 launch-along-z))
    (:userdata 0.0)
    (:func 'live-func-curve)
    (:conerot-z (degrees 0))
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(if #t
    (set! *range-fac-dust-color* (new 'static 'curve-color-fast
                                   :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                   :ys (new 'static 'inline-array vector 4
                                     (new 'static 'vector :x 120.0 :y 120.0 :z 120.0 :w 128.0)
                                     (new 'static 'vector :x 80.0 :y 80.0 :z 80.0 :w 128.0)
                                     (new 'static 'vector :x 80.0 :y 80.0 :z 80.0 :w 128.0)
                                     (new 'static 'vector :x 80.0 :y 80.0 :z 80.0 :w 128.0)
                                     )
                                   :one-over-x-deltas (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
                                   )
          )
    )

(if #t
    (set! *range-fac-dust-alpha* (new 'static 'curve2d-fast
                                   :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                   :ys (new 'static 'vector :x 20.0 :y 40.0 :z 41.0 :w 42.0)
                                   :one-over-x-deltas (new 'static 'vector :x 20.0 :y 1.0 :z 1.0 :w 1.0)
                                   )
          )
    )

(if #t
    (set! *range-fac-dust-scale-x* (new 'static 'curve2d-fast
                                     :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                     :ys (new 'static 'vector :x 1.0 :y 2.0 :z 3.0 :w 4.0)
                                     :one-over-x-deltas (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
                                     )
          )
    )

(if #t
    (set! *range-fac-dust-scale-y* (new 'static 'curve2d-fast
                                     :xs (new 'static 'vector :y -1.0 :z -2.0 :w -3.0)
                                     :ys (new 'static 'vector :x 1.0 :y 2.0 :z 3.0 :w 4.0)
                                     :one-over-x-deltas (new 'static 'vector :x 1.0 :y 1.0 :z 1.0 :w 1.0)
                                     )
          )
    )

(if #t
    (set! *curve-fac-dust-alpha* (new 'static 'curve2d-fast
                                   :xs (new 'static 'vector :y -0.3 :z -0.5 :w -1.0)
                                   :ys (new 'static 'vector :y 1.0 :z 1.0)
                                   :one-over-x-deltas (new 'static 'vector :x 3.3333333 :z -2.0 :w 1.0)
                                   )
          )
    )

(if #t
    (set! *curve-fac-dust-scale-x* (new 'static 'curve2d-fast
                                     :xs (new 'static 'vector :y -0.3 :z -0.4 :w -1.0)
                                     :ys (new 'static 'vector :y 5.0 :z 6.0 :w 6.5)
                                     :one-over-x-deltas (new 'static 'vector :x 16.666666 :y 10.000001 :z 0.8333333 :w 1.0)
                                     )
          )
    )

(if #t
    (set! *curve-fac-dust-scale-y* (new 'static 'curve2d-fast
                                     :xs (new 'static 'vector :y -0.3 :z -0.4 :w -1.0)
                                     :ys (new 'static 'vector :y 5.0 :z 6.0 :w 6.5)
                                     :one-over-x-deltas (new 'static 'vector :x 16.666666 :y 10.000001 :z 0.8333333 :w 1.0)
                                     )
          )
    )

(define *part-hellcat-dust-landing-fac-curve-settings* (new 'static 'particle-curve-settings
                                                         :lifetime-base (seconds 1.5)
                                                         :lifetime-offset (seconds 1)
                                                         :flags (particle-curve-flags pcf0)
                                                         )
        )

(set! (-> *part-id-table* 2849 init-specs 15 initial-valuef)
      (the-as float *part-hellcat-dust-landing-fac-curve-settings*)
      )

(set! (-> *part-hellcat-dust-landing-fac-curve-settings* color-start) *range-fac-dust-color*)

(set! (-> *part-hellcat-dust-landing-fac-curve-settings* alpha-start) *range-fac-dust-alpha*)

(set! (-> *part-hellcat-dust-landing-fac-curve-settings* scale-x-start) *range-fac-dust-scale-x*)

(set! (-> *part-hellcat-dust-landing-fac-curve-settings* scale-y-start) *range-fac-dust-scale-y*)

(set! (-> *part-hellcat-dust-landing-fac-curve-settings* r-scalar) #f)

(set! (-> *part-hellcat-dust-landing-fac-curve-settings* g-scalar) #f)

(set! (-> *part-hellcat-dust-landing-fac-curve-settings* b-scalar) #f)

(set! (-> *part-hellcat-dust-landing-fac-curve-settings* a-scalar) *curve-fac-dust-alpha*)

(set! (-> *part-hellcat-dust-landing-fac-curve-settings* scale-x-scalar) *curve-fac-dust-scale-x*)

(set! (-> *part-hellcat-dust-landing-fac-curve-settings* scale-y-scalar) *curve-fac-dust-scale-y*)
