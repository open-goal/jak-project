;;-*-Lisp-*-
(in-package goal)

;; name: hvehicle-h.gc
;; name in dgo: hvehicle-h
;; dgos: HGA, CWI, LFACTORY

(declare-type ff-squad-control squad-control)
(define-extern *ff-squad-control* ff-squad-control)
(declare-type citizen-norm-rider process-focusable)
(define-extern vehicle-rider-spawn (function vehicle type traffic-object-spawn-params process))

;; DECOMP BEGINS

(deftype hvehicle (vehicle)
  ((flight-level-index       int8)
   (flight-level-index-prev  int8)
   (flight-level             float)
   (jump-time                float)
   (jump-thrust              float)
   (engine-thrust            float)
   (lift-thrust              float               4)
   (roll-thrust              float               2)
   (engine-sound-id          sound-id)
   (thrust-sound-id          sound-id)
   (roll-sound-id            sound-id)
   (damage-pop-sound-id      sound-id)
   (extra-sound-id           sound-id)
   (engine-sound-envelope    float)
   (engine-sound-factor      float)
   (sputter-sound-envelope   float)
   (transition-time          time-frame)
   (transition-end-time      time-frame)
   (controller               vehicle-controller  :inline)
   )
  (:methods
    (transition-flight-level (_type_ int) none)
    (hvehicle-method-153 (_type_) none)
    (hvehicle-method-154 (_type_) none)
    (hvehicle-method-155 (_type_) none)
    (hvehicle-method-156 (_type_) none)
    (hvehicle-method-157 (_type_) none)
    (hvehicle-method-158 (_type_) none)
    (hvehicle-method-159 (_type_) none)
    (adjust-throttle (_type_ float) none)
    (hvehicle-method-161 (_type_ traffic-object-spawn-params) object)
    )
  )
