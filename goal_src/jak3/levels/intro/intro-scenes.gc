;;-*-Lisp-*-
(in-package goal)

;; name: intro-scenes.gc
;; name in dgo: intro-scenes
;; dgos: INTROCST

;; DECOMP BEGINS

(defskelgroup skel-air-train-fma air-train-fma air-train-fma-lod0-jg air-train-fma-idle-ja
              ((air-train-fma-lod0-mg (meters 999999)))
              :bounds (static-spherem 0 2 -2 12.5)
              :shadow air-train-fma-shadow-mg
              :origin-joint-index 3
              :shadow-joint-index 3
              )

(defskelgroup skel-beacon beacon beacon-lod0-jg beacon-idle-ja
              ((beacon-lod0-mg (meters 999999)))
              :bounds (static-spherem 0 0 0 2)
              :origin-joint-index 3
              )

(defskelgroup skel-handcuffs handcuffs handcuffs-lod0-jg handcuffs-idle-ja
              ((handcuffs-lod0-mg (meters 999999)))
              :bounds (static-spherem 0 0 0 2)
              :origin-joint-index 3
              )

(defskelgroup skel-hellcat-lowres-fma hellcat-lowres-fma hellcat-lowres-fma-lod0-jg hellcat-lowres-fma-idle-ja
              ((hellcat-lowres-fma-lod0-mg (meters 999999)))
              :bounds (static-spherem 0 0 0 6.8)
              :origin-joint-index 3
              )

(defskelgroup skel-ctypal-palace-break ctypal-palace-break ctypal-palace-break-lod0-jg ctypal-palace-break-idle-ja
              ((ctypal-palace-break-lod0-mg (meters 999999)))
              :bounds (static-spherem 0 0 0 500)
              :origin-joint-index 3
              )

(defskelgroup skel-ctypal-palace-break-a ctypal-palace-break ctypal-palace-break-a-lod0-jg ctypal-palace-break-a-idle-ja
              ((ctypal-palace-break-a-lod0-mg (meters 999999)))
              :bounds (static-spherem 0 0 0 750)
              :origin-joint-index 3
              )

(defskelgroup skel-ctypal-palace-break-b ctypal-palace-break ctypal-palace-break-b-lod0-jg ctypal-palace-break-b-idle-ja
              ((ctypal-palace-break-b-lod0-mg (meters 999999)))
              :bounds (static-spherem 0 0 0 1000)
              :origin-joint-index 3
              )

(defskelgroup skel-ctypal-palace-break-c ctypal-palace-break ctypal-palace-break-c-lod0-jg ctypal-palace-break-c-idle-ja
              ((ctypal-palace-break-c-lod0-mg (meters 999999)))
              :bounds (static-spherem 0 0 0 640)
              :origin-joint-index 3
              )

(defskelgroup skel-ctypal-palace-break-d ctypal-palace-break ctypal-palace-break-d-lod0-jg ctypal-palace-break-d-idle-ja
              ((ctypal-palace-break-d-lod0-mg (meters 999999)))
              :bounds (static-spherem 0 0 0 640)
              :origin-joint-index 3
              )

(defskelgroup skel-ctypal-palace-break-e ctypal-palace-break ctypal-palace-break-e-lod0-jg ctypal-palace-break-e-idle-ja
              ((ctypal-palace-break-e-lod0-mg (meters 999999)))
              :bounds (static-spherem 0 0 0 640)
              :origin-joint-index 3
              )

(defskelgroup skel-ctypal-cable-break ctypal-cable-break ctypal-cable-break-lod0-jg ctypal-cable-break-idle-ja
              ((ctypal-cable-break-lod0-mg (meters 999999)))
              :bounds (static-spherem 200 0 0 640)
              :origin-joint-index 3
              )

(defskelgroup skel-ctypal-support-break ctypal-support-break ctypal-support-break-lod0-jg ctypal-support-break-idle-ja
              ((ctypal-support-break-lod0-mg (meters 999999)))
              :bounds (static-spherem 0 -150 0 300)
              :origin-joint-index 3
              )

(defskelgroup skel-ctypal-rail ctypal-rail ctypal-rail-lod0-jg ctypal-rail-idle-ja
              ((ctypal-rail-lod0-mg (meters 999999)))
              :bounds (static-spherem -40 0 35 75)
              :origin-joint-index 3
              )

(defskelgroup skel-ctypal-base-break ctypal-base-break ctypal-base-break-lod0-jg ctypal-base-break-idle-ja
              ((ctypal-base-break-lod0-mg (meters 999999)))
              :bounds (static-spherem 0 0 0 500)
              :origin-joint-index 3
              )

(load-scene
  (new 'static 'scene
    :name "intro-drop"
    :extra #f
    :info #f
    :scene-flags (scene-flags scf1 scf2 scf3 scf4)
    :mask-to-clear (process-mask movie projectile)
    :entity "scene-stage-110"
    :art-group "scenecamera"
    :anim "intro-drop"
    :parts 59
    :command-list '((0
        (send-event *time-of-day* 'change 'ratio (float 0))
        (send-event *time-of-day* 'change 'hour (int 18))
        (apply ,(lambda :behavior scene-player
                  ()
                  (let ((v1-1 (level-get *level* 'wasintro)))
                    (if v1-1
                        (set! (-> v1-1 info fog-mult) 100.0)
                        )
                    )
                  (set-cloud-and-fog-interp! *mood-control* 0.0 0.5 0.0 0.0)
                  (none)
                  )
               )
        (send-event
          "air-train-fma"
          'shadow-bot-plane
          (float (new 'static 'bfloat))
          (float (new 'static 'bfloat :data 1.0))
          (float (new 'static 'bfloat))
          (meters (new 'static 'bfloat :data 50.0))
          )
        (send-event "air-train-fma" 'shadow-fade-dist (meters (new 'static 'bfloat :data 200.0)))
        (fadein (frame-time-30 60))
        (part-tracker
          "group-drop-dust-trail"
          entity
          "particleman"
          joint
          "particleA"
          track
          #t
          duration
          (frame-range 0 360)
          )
        (part-tracker
          "group-drop-thrusters"
          entity
          "air-train-fma"
          joint
          "thruster_l"
          track
          #t
          duration
          (frame-range 0 720)
          )
        (part-tracker
          "group-drop-thruster-trail"
          entity
          "air-train-fma"
          joint
          "thruster_l"
          track
          #t
          duration
          (frame-range 0 720)
          )
        (part-tracker
          "group-drop-thrusters"
          entity
          "air-train-fma"
          joint
          "thruster_r"
          track
          #t
          duration
          (frame-range 0 720)
          )
        (part-tracker
          "group-drop-thruster-trail"
          entity
          "air-train-fma"
          joint
          "thruster_r"
          track
          #t
          duration
          (frame-range 0 720)
          )
        )
      (20 (apply ,(lambda :behavior scene-player
                    ()
                    (case (scf-get-territory)
                      ((1)
                       (talker-spawn-func (-> *talker-speech* 58) *entity-pool* (target-pos 0) (the-as region #f))
                       )
                      ((3)
                       (talker-spawn-func (-> *talker-speech* 60) *entity-pool* (target-pos 0) (the-as region #f))
                       )
                      (else
                        (talker-spawn-func (-> *talker-speech* 57) *entity-pool* (target-pos 0) (the-as region #f))
                        )
                      )
                    (none)
                    )
                 )
          )
      (245
        (apply
          ,(lambda :behavior scene-player
             ()
             (process-spawn-function
               process
               (lambda :behavior scene-player
                 ()
                 (logclear! (-> self mask) (process-mask pause))
                 (let ((gp-0 (new 'stack 'hud-sprite))
                       (s5-0 (level-get *level* 'inttitle))
                       (f30-0 0.0)
                       )
                   (set! (-> gp-0 flags) (hud-sprite-flags hsf3))
                   (set! (-> gp-0 tid) (the-as texture-id (get-texture NaughtyDog inttitle-minimap)))
                   (set-vector! (-> gp-0 pos) 256 180 #xffffff 0)
                   (let ((v1-6 (-> gp-0 color-ptr)))
                     (set! (-> v1-6 0) 128)
                     (set! (-> v1-6 1) 128)
                     (set! (-> v1-6 2) 128)
                     (set! (-> v1-6 3) 128)
                     )
                   (set! (-> gp-0 scale-x) 1.0)
                   (set! (-> gp-0 scale-y) 1.0)
                   (when (and s5-0 (-> gp-0 tid))
                     (let ((s4-0 (current-time)))
                       (until (time-elapsed? s4-0 (seconds 3))
                         (let ((f0-2 1.0))
                           (cond
                             ((< f30-0 1.0)
                              (set! f0-2 f30-0)
                              )
                             ((< 2.0 f30-0)
                              (set! f0-2 (- 3.0 f30-0))
                              )
                             )
                           (set! (-> gp-0 color w) (the int (* 128.0 f0-2)))
                           )
                         (with-dma-buffer-add-bucket ((s2-0 (-> *display* frames (-> *display* on-screen) global-buf))
                                                      (bucket-id hud-draw-pris2)
                                                      )
                           (draw gp-0 s2-0 s5-0 #f)
                           )
                         (if (not (paused?))
                             (+! f30-0 (seconds-per-frame))
                             )
                         (suspend)
                         )
                       )
                     )
                   )
                 (none)
                 )
               :name "logo-naughtydog"
               :to self
               )
             (none)
             )
          )
        )
      (496
        (part-tracker
          "group-drop-dust-trail"
          entity
          "particleman"
          joint
          "particleA"
          track
          #t
          duration
          (frame-range 496 540)
          )
        )
      (520
        (apply
          ,(lambda :behavior scene-player
             ()
             (process-spawn-function
               process
               (lambda :behavior scene-player
                 ()
                 (logclear! (-> self mask) (process-mask pause))
                 (let ((gp-0 (new 'stack 'hud-sprite))
                       (s5-0 (new 'stack 'hud-sprite))
                       (s4-0 (level-get *level* 'inttitle))
                       (f30-0 0.0)
                       )
                   (set! (-> gp-0 flags) (hud-sprite-flags hsf3))
                   (set! (-> gp-0 scale-x) 0.85)
                   (set! (-> gp-0 scale-y) 0.85)
                   (let ((v1-8 (-> gp-0 color-ptr)))
                     (set! (-> v1-8 0) 128)
                     (set! (-> v1-8 1) 128)
                     (set! (-> v1-8 2) 128)
                     (set! (-> v1-8 3) 128)
                     )
                   (scf-get-territory)
                   (set-vector! (-> gp-0 pos) 256 188 #xffffff 0)
                   (set! (-> gp-0 tid) (the-as texture-id (get-texture JakIII inttitle-minimap)))
                   (set! (-> s5-0 tid) (the-as texture-id #f))
                   (when (and s4-0 (-> gp-0 tid))
                     (let ((s3-0 (current-time)))
                       (until (time-elapsed? s3-0 (seconds 4.33))
                         (let ((f0-2 1.0))
                           (cond
                             ((< f30-0 0.5)
                              (set! f0-2 (* 2.0 f30-0))
                              )
                             ((< 3.83 f30-0)
                              (set! f0-2 (* 2.0 (- 4.33 f30-0)))
                              )
                             )
                           (set! (-> gp-0 color w) (the int (* 128.0 f0-2)))
                           (set! (-> s5-0 color w) (the int (* 128.0 f0-2)))
                           )
                         (with-dma-buffer-add-bucket ((s1-0 (-> *display* frames (-> *display* on-screen) global-buf))
                                                      (bucket-id hud-draw-pris2)
                                                      )
                           (draw gp-0 s1-0 s4-0 #f)
                           (if (-> s5-0 tid)
                               (draw s5-0 s1-0 s4-0 #f)
                               )
                           )
                         (if (not (paused?))
                             (+! f30-0 (seconds-per-frame))
                             )
                         (suspend)
                         )
                       )
                     )
                   )
                 (none)
                 )
               :name "logo-title"
               :to self
               )
             (none)
             )
          )
        )
      (650 (apply ,(lambda :behavior scene-player
                     ()
                     (if (not (-> *setting-control* user-current subtitle))
                         (process-spawn-function
                           process
                           (lambda :behavior scene-player
                             ()
                             (talker-spawn-func (-> *talker-speech* 61) self (target-pos 0) (the-as region #f))
                             (let ((gp-1 (current-time)))
                               (until (time-elapsed? gp-1 (seconds 5))
                                 (if (cpad-pressed? 0 square)
                                     (return #f)
                                     )
                                 (suspend)
                                 )
                               )
                             (none)
                             )
                           :to self
                           )
                         )
                     (none)
                     )
                  )
           )
      (651
        (part-tracker
          "group-drop-dust-landing"
          entity
          "particleman"
          joint
          "particleA"
          track
          #t
          duration
          (frame-range 651 790)
          )
        )
      (721
        (part-tracker
          "group-drop-thrusters-powerdown"
          entity
          "air-train-fma"
          joint
          "thruster_l"
          track
          #t
          duration
          (frame-range 721 800)
          )
        (part-tracker
          "group-drop-thrusters-powerdown"
          entity
          "air-train-fma"
          joint
          "thruster_r"
          track
          #t
          duration
          (frame-range 721 800)
          )
        )
      (822
        (part-tracker
          "group-drop-handcuff-light"
          entity
          "handcuffs"
          joint
          "light"
          track
          #t
          duration
          (frame-range 0 2248)
          )
        )
      (2360
        (part-tracker
          "group-drop-beacon-glow"
          entity
          "beacon"
          joint
          "glow"
          track
          #t
          duration
          (seconds (new 'static 'bfloat :data 49.2))
          )
        )
      (2497
        (part-tracker
          "group-drop-thrusters"
          entity
          "air-train-fma"
          joint
          "thruster_l"
          track
          #t
          duration
          (frame-range 2497 2690)
          )
        (part-tracker
          "group-drop-thrusters"
          entity
          "air-train-fma"
          joint
          "thruster_r"
          track
          #t
          duration
          (frame-range 2497 2690)
          )
        )
      (2600
        (part-tracker
          "group-drop-dust-takeoff"
          entity
          "particleman"
          joint
          "particleA"
          track
          #t
          duration
          (frame-range 2600 2760)
          )
        )
      (2700
        (part-tracker
          "group-drop-dust-cloud"
          entity
          "particleman"
          joint
          "particleD"
          track
          #t
          duration
          (frame-range 2700 2701)
          )
        )
      (2812
        (part-tracker
          "group-drop-pecker-dustoff"
          entity
          "particleman"
          joint
          "particleE"
          track
          #t
          duration
          (frame-range 2812 2813)
          )
        )
      (2817
        (part-tracker
          "group-drop-pecker-dustoff"
          entity
          "particleman"
          joint
          "particleE"
          track
          #t
          duration
          (frame-range 2817 2818)
          )
        )
      (2825
        (part-tracker
          "group-drop-pecker-dustoff"
          entity
          "particleman"
          joint
          "particleE"
          track
          #t
          duration
          (frame-range 2825 2826)
          )
        )
      (2838
        (part-tracker
          "group-drop-pecker-dustoff"
          entity
          "particleman"
          joint
          "particleE"
          track
          #t
          duration
          (frame-range 2838 2839)
          )
        )
      (3500
        (apply
          ,(lambda :behavior scene-player
             ()
             (when (not (-> self aborted?))
               (disable *screen-filter*)
               (setup
                 *screen-filter*
                 (new 'static 'vector :x 255.0 :y 255.0 :z 255.0)
                 (new 'static 'vector :x 255.0 :y 255.0 :z 255.0 :w 128.0)
                 (* 1.4992504 (seconds-per-frame))
                 (bucket-id tex-hud-pris2)
                 #x3fffff
                 #x33001
                 #t
                 )
               (set-setting! 'allow-blackout #f 0.0 0)
               )
             (none)
             )
          )
        )
      (10000
        (send-event *time-of-day* 'change 'ratio (float 1))
        (apply ,(lambda :behavior scene-player
                  ()
                  (when (-> self aborted?)
                    (disable *screen-filter*)
                    (set-blackout-frames (seconds 0.2))
                    (remove-setting! 'allow-blackout)
                    (kill-current-talker '() '() 'die)
                    (kill-by-type talker *active-pool*)
                    (kill-current-talker '() '(daxter voicebox message) 'exit)
                    )
                  (set-cloud-and-fog-interp! *mood-control* 0.0 0.5 1.0 1.0)
                  (set-filter-color! 1.0 1.0 1.0)
                  (none)
                  )
               )
        )
      )
    :cut-list '(151
       201
       361
       496
       651
       721
       821
       891
       1001
       1096
       1206
       1291
       1403
       1481
       1566
       1676
       1741
       1866
       1901
       1936
       2051
       2111
       2161
       2221
       2286
       2341
       2411
       2451
       2496
       2546
       2586
       2641
       2691
       2771
       2841
       2936
       3016
       3126
       3201
       3258
       3551
       3436
       )
    :wait-ground-time (seconds 1)
    :actor (new 'static 'boxed-array :type scene-actor
      (new 'static 'scene-actor
        :name "scenecamera"
        :level #f
        :art-group "skel-scenecamera"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :camera 4
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "particleman"
        :level 'introcst
        :art-group "skel-particleman"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "jak-highres"
        :level 'introcst
        :art-group "skel-jak-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((821 max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "sidekick-highres"
        :level 'introcst
        :art-group "skel-sidekick-highres"
        :prefix ""
        :draw-frames '((821 max))
        :scissor-frames '()
        :shadow-frames '((821 max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "ashelin-highres"
        :level 'introcst
        :art-group "skel-ashelin-highres"
        :prefix ""
        :draw-frames '((821 2411) (2451 2691))
        :scissor-frames '()
        :shadow-frames '((821 2641))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "veger-highres"
        :level 'introcst
        :art-group "skel-veger-highres"
        :prefix ""
        :draw-frames '((821 2161) (2221 2691))
        :scissor-frames '()
        :shadow-frames '((821 2641))
        :cloth-reset-frames '((1840 1950) 2200 2385)
        :cloth-commands '(((2493 2499) set-flags local-space))
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "pecker-highres"
        :level 'introcst
        :art-group "skel-pecker-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((821 max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "crimson-guard-highres"
        :level 'introcst
        :art-group "skel-crimson-guard-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((821 2641))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "crimson-guard-highres"
        :level 'introcst
        :art-group "skel-crimson-guard-highres"
        :prefix "b-"
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((821 2641))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "air-train-fma"
        :level 'introcst
        :art-group "skel-air-train-fma"
        :prefix ""
        :draw-frames '((min 1480) (1566 1676) (1741 1901) (1936 2161) (2221 2691))
        :scissor-frames '((2586 2641))
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "beacon"
        :level 'introcst
        :art-group "skel-beacon"
        :prefix ""
        :draw-frames '((2286 max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "handcuffs"
        :level 'introcst
        :art-group "skel-handcuffs"
        :prefix ""
        :draw-frames '((821 max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      )
    :load-point "wasintro-start"
    :end-point "title-restart"
    :borrow '((wasintro 0 inttitle special))
    :sfx-volume 0.75
    :ambient-volume -1.0
    :music-delay 1500.0
    :on-running #f
    :on-complete #f
    )
  )

(load-scene (new 'static 'scene
              :name "intro-lost"
              :extra #f
              :info #f
              :scene-flags (scene-flags scf1 scf2 scf3 scf4 scf7)
              :mask-to-clear (process-mask movie projectile)
              :entity "scene-stage-110"
              :art-group "scenecamera"
              :anim "intro-lost"
              :parts 7
              :command-list '((0
                  (send-event *time-of-day* 'change 'ratio (float (new 'static 'bfloat)))
                  (send-event *time-of-day* 'change 'hour (int 10))
                  (apply
                    ,(lambda :behavior scene-player
                       ()
                       (set-cloud-and-fog-interp! *mood-control* 0.0 0.5 0.0 0.0)
                       (set-filter-color! 1.25 1.25 1.25)
                       (none)
                       )
                    )
                  (apply
                    ,(lambda :behavior scene-player
                       ()
                       (set-setting! 'borrow '((wasintro 0 intpalrf special)) 0.0 0)
                       (apply-settings *setting-control*)
                       (none)
                       )
                    )
                  (apply
                    ,(lambda :behavior scene-player
                       ()
                       (when (not (-> self aborted?))
                         (remove-setting! 'allow-blackout)
                         (setup
                           *screen-filter*
                           (new 'static 'vector :x 255.0 :y 255.0 :z 255.0 :w 128.0)
                           (new 'static 'vector :x 255.0 :y 255.0 :z 255.0)
                           (* 1.4992504 (seconds-per-frame))
                           (bucket-id tex-hud-pris2)
                           #x3fffff
                           #x33001
                           #t
                           )
                         (set-filter-color! 1.0 1.0 1.0)
                         )
                       (none)
                       )
                    )
                  )
                (1
                  (part-tracker
                    "group-lost-desert-heathaze"
                    entity
                    "particleman"
                    joint
                    "particleA"
                    track
                    #t
                    duration
                    (frame-range 1 179)
                    )
                  )
                (181
                  (part-tracker
                    "group-desert-impact-dust"
                    entity
                    "particleman"
                    joint
                    "particleB"
                    track
                    #t
                    duration
                    (frame-range 181 183)
                    )
                  )
                (334
                  (part-tracker
                    "group-desert-impact-dust"
                    entity
                    "particleman"
                    joint
                    "particleB"
                    track
                    #t
                    duration
                    (frame-range 334 336)
                    )
                  )
                (345
                  (part-tracker
                    "group-desert-impact-dust"
                    entity
                    "particleman"
                    joint
                    "particleC"
                    track
                    #t
                    duration
                    (frame-range 345 347)
                    )
                  )
                (455
                  (part-tracker
                    "group-desert-impact-dust"
                    entity
                    "particleman"
                    joint
                    "particleC"
                    track
                    #t
                    duration
                    (frame-range 455 457)
                    )
                  )
                (650
                  (apply ,(lambda :behavior scene-player
                            ()
                            (when (not (-> self aborted?))
                              (set! (-> *display* force-sync) (the-as uint 180))
                              (persist-with-delay *setting-control* 'blur-a (seconds 4) 'blur-a 'abs 0.8 0)
                              (sound-play "trans1")
                              (set-setting! 'allow-blackout #f 0.0 0)
                              )
                            (none)
                            )
                         )
                  (want-display 'freehq 'special)
                  (save)
                  )
                (735
                  (apply
                    ,(lambda :behavior scene-player
                       ()
                       (when (not (-> self aborted?))
                         (disable *screen-filter*)
                         (setup
                           *screen-filter*
                           (new 'static 'vector :x 255.0 :y 255.0 :z 255.0)
                           (new 'static 'vector :x 255.0 :y 255.0 :z 255.0 :w 128.0)
                           (* 5.988024 (seconds-per-frame))
                           (bucket-id tex-hud-pris2)
                           #x3fffff
                           #x33001
                           #t
                           )
                         (set-setting! 'allow-blackout #f 0.0 0)
                         )
                       (none)
                       )
                    )
                  )
                (10000
                  (send-event *time-of-day* 'change 'ratio (float 1))
                  (apply ,(lambda :behavior scene-player
                            ()
                            (when (-> self aborted?)
                              (disable *screen-filter*)
                              (set-blackout-frames (seconds 0.2))
                              (remove-setting! 'allow-blackout)
                              )
                            (set-cloud-and-fog-interp! *mood-control* 0.0 0.5 1.0 1.0)
                            (set-filter-color! 1.0 1.0 1.0)
                            (none)
                            )
                         )
                  )
                )
              :cut-list '(71 208 274 354 444 497 559 641)
              :wait-ground-time (seconds 1)
              :actor (new 'static 'boxed-array :type scene-actor
                (new 'static 'scene-actor
                  :name "scenecamera"
                  :level #f
                  :art-group "skel-scenecamera"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :camera 4
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "particleman"
                  :level 'introcst
                  :art-group "skel-particleman"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "jak-highres"
                  :level 'introcst
                  :art-group "skel-jak-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "sidekick-highres"
                  :level 'introcst
                  :art-group "skel-sidekick-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                (new 'static 'scene-actor
                  :name "pecker-highres"
                  :level 'introcst
                  :art-group "skel-pecker-highres"
                  :prefix ""
                  :draw-frames '((min max))
                  :scissor-frames '()
                  :shadow-frames '((min max))
                  :cloth-reset-frames '()
                  :cloth-commands '()
                  :flags #x1
                  :shadow-flags -1
                  :shadow-volume-joint #f
                  )
                )
              :load-point "wasintro-start"
              :end-point "title-restart"
              :borrow '((wasintro 0 intpalrf special))
              :sfx-volume 0.75
              :ambient-volume -1.0
              :music-delay 1500.0
              :on-running #f
              :on-complete #f
              )
            )

(load-scene
  (new 'static 'scene
    :name "intro-ffhq"
    :extra #f
    :info #f
    :scene-flags (scene-flags scf1 scf2 scf3 scf4 scf7)
    :mask-to-clear (process-mask movie projectile)
    :entity "scene-stage-98"
    :art-group "scenecamera"
    :anim "intro-ffhq"
    :parts 8
    :command-list '((0
        (send-event *time-of-day* 'change 'ratio (float (new 'static 'bfloat)))
        (send-event *time-of-day* 'change 'hour (int 19))
        (apply ,(lambda :behavior scene-player
                  ()
                  (when (not (-> self aborted?))
                    (remove-setting! 'allow-blackout)
                    (setup
                      *screen-filter*
                      (new 'static 'vector :x 255.0 :y 255.0 :z 255.0 :w 128.0)
                      (new 'static 'vector :x 255.0 :y 255.0 :z 255.0)
                      (* 5.988024 (seconds-per-frame))
                      (bucket-id tex-hud-pris2)
                      #x3fffff
                      #x33001
                      #t
                      )
                    (set-filter-color! 1.0 1.0 1.0)
                    )
                  (none)
                  )
               )
        (want-display 'wasintro '#f)
        (want-display 'freehq 'display)
        )
      (900
        (apply ,(lambda :behavior scene-player
                  ()
                  (when (not (-> self aborted?))
                    (set! (-> *display* force-sync) (the-as uint 150))
                    (persist-with-delay *setting-control* 'blur-a (seconds 3) 'blur-a 'abs 0.8 0)
                    (sound-play "trans2")
                    )
                  (none)
                  )
               )
        (want-display 'wasintro 'special)
        (save)
        )
      (955 (apply ,(lambda :behavior scene-player
                     ()
                     (when (not (-> self aborted?))
                       (disable *screen-filter*)
                       (setup
                         *screen-filter*
                         (new 'static 'vector :x 255.0 :y 255.0 :z 255.0)
                         (new 'static 'vector :x 255.0 :y 255.0 :z 255.0 :w 128.0)
                         (* 5.988024 (seconds-per-frame))
                         (bucket-id tex-hud-pris2)
                         #x3fffff
                         #x33001
                         #t
                         )
                       (set-setting! 'allow-blackout #f 0.0 0)
                       )
                     (none)
                     )
                  )
           )
      (10000 (send-event *time-of-day* 'change 'ratio (float 1)) (apply ,(lambda :behavior scene-player
                                                                           ()
                                                                           (when (-> self aborted?)
                                                                             (disable *screen-filter*)
                                                                             (set-blackout-frames (seconds 0.2))
                                                                             (remove-setting! 'allow-blackout)
                                                                             )
                                                                           (set-filter-color! 1.0 1.0 1.0)
                                                                           (none)
                                                                           )
                                                                        )
             )
      )
    :cut-list '(126 216 291 401 476 546 611 706 771 861)
    :wait-ground-time (seconds 1)
    :actor (new 'static 'boxed-array :type scene-actor
      (new 'static 'scene-actor
        :name "scenecamera"
        :level #f
        :art-group "skel-scenecamera"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :camera 4
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "jak-highres"
        :level 'introcst
        :art-group "skel-jak-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "sidekick-highres"
        :level 'introcst
        :art-group "skel-sidekick-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "torn-highres"
        :level 'ltorn
        :art-group "skel-torn-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "ashelin-highres"
        :level 'introcst
        :art-group "skel-ashelin-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "samos-highres"
        :level 'introcst
        :art-group "skel-samos-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      )
    :load-point "freehq-intro"
    :end-point "title-restart"
    :borrow '((wasintro 0 intpalrf special))
    :sfx-volume -1.0
    :ambient-volume -1.0
    :music-delay 1500.0
    :on-running #f
    :on-complete #f
    )
  )

(load-scene
  (new 'static 'scene
    :name "intro-tired"
    :extra #f
    :info #f
    :scene-flags (scene-flags scf1 scf2 scf3 scf4 scf7)
    :mask-to-clear (process-mask movie projectile)
    :entity "scene-stage-110"
    :art-group "scenecamera"
    :anim "intro-tired"
    :parts 7
    :command-list '((0
        (send-event *time-of-day* 'change 'ratio (float (new 'static 'bfloat)))
        (send-event *time-of-day* 'change 'hour (int 8))
        (apply
          ,(lambda :behavior scene-player
             ()
             (set-cloud-and-fog-interp! *mood-control* 0.0 0.5 0.0 0.0)
             (set-filter-color! 1.25 1.25 1.25)
             (none)
             )
          )
        (want-display 'freehq '#f)
        (want-display 'wasintro 'display)
        (apply
          ,(lambda :behavior scene-player
             ()
             (when (not (-> self aborted?))
               (remove-setting! 'allow-blackout)
               (setup
                 *screen-filter*
                 (new 'static 'vector :x 255.0 :y 255.0 :z 255.0 :w 128.0)
                 (new 'static 'vector :x 255.0 :y 255.0 :z 255.0)
                 (* 5.988024 (seconds-per-frame))
                 (bucket-id tex-hud-pris2)
                 #x3fffff
                 #x33001
                 #t
                 )
               (set-filter-color! 1.0 1.0 1.0)
               )
             (none)
             )
          )
        )
      (1
        (part-tracker
          "group-tired-desert-heathaze"
          entity
          "particleman"
          joint
          "particleA"
          track
          #f
          duration
          (frame-range 1 100)
          )
        )
      (2
        (part-tracker
          "group-tired-desert-heathaze"
          entity
          "particleman"
          joint
          "particleJ"
          track
          #f
          duration
          (frame-range 2 360)
          )
        (want-load 'introcst 'wasintro 'intpfall)
        (want-display 'wasintro 'display)
        )
      (120
        (send-event *time-of-day* 'change 'hour (int 10))
        (apply ,(lambda :behavior scene-player () (set-filter-color! 1.0 1.0 1.0) (none)))
        )
      (220
        (part-tracker
          "group-desert-impact-dust"
          entity
          "particleman"
          joint
          "particleB"
          track
          #t
          duration
          (frame-range 220 222)
          )
        )
      (250
        (part-tracker
          "group-desert-impact-dust"
          entity
          "particleman"
          joint
          "particleC"
          track
          #t
          duration
          (frame-range 250 252)
          )
        )
      (287
        (part-tracker
          "group-desert-impact-dust"
          entity
          "particleman"
          joint
          "particleD"
          track
          #t
          duration
          (frame-range 287 289)
          )
        )
      (293
        (part-tracker
          "group-desert-impact-dust"
          entity
          "particleman"
          joint
          "particleE"
          track
          #t
          duration
          (frame-range 293 295)
          )
        )
      (330
        (part-tracker
          "group-tired-desert-heathaze"
          entity
          "particleman"
          joint
          "particleK"
          track
          #f
          duration
          (frame-range 330 450)
          )
        )
      (400
        (part-tracker
          "group-tired-desert-heathaze"
          entity
          "particleman"
          joint
          "particleL"
          track
          #f
          duration
          (frame-range 400 550)
          )
        )
      (445
        (part-tracker
          "group-desert-impact-dust"
          entity
          "particleman"
          joint
          "particleF"
          track
          #t
          duration
          (frame-range 445 447)
          )
        )
      (557 (want-display 'intpfall 'special) (save))
      (561
        (part-tracker
          "group-desert-impact-dust"
          entity
          "particleman"
          joint
          "particleG"
          track
          #t
          duration
          (frame-range 561 563)
          )
        )
      (563
        (part-tracker
          "group-desert-impact-dust"
          entity
          "particleman"
          joint
          "particleH"
          track
          #t
          duration
          (frame-range 563 565)
          )
        )
      (566
        (part-tracker
          "group-desert-impact-dust"
          entity
          "particleman"
          joint
          "particleI"
          track
          #t
          duration
          (frame-range 566 568)
          )
        )
      (585 (send-event "jak-highres" 'shadow-mask 4) (send-event "jak-highres" 'shadow-values 2816))
      (625 (apply ,(lambda :behavior scene-player
                     ()
                     (when (not (-> self aborted?))
                       (set! (-> *display* force-sync) (the-as uint 215))
                       (persist-with-delay *setting-control* 'blur-a (seconds 5.167) 'blur-a 'abs 0.8 0)
                       (sound-play "trans3")
                       )
                     (none)
                     )
                  )
           )
      (745
        (apply
          ,(lambda :behavior scene-player
             ()
             (when (not (-> self aborted?))
               (disable *screen-filter*)
               (setup
                 *screen-filter*
                 (new 'static 'vector :x 255.0 :y 255.0 :z 255.0)
                 (new 'static 'vector :x 255.0 :y 255.0 :z 255.0 :w 128.0)
                 (* 5.988024 (seconds-per-frame))
                 (bucket-id tex-hud-pris2)
                 #x3fffff
                 #x33001
                 #t
                 )
               (set-setting! 'allow-blackout #f 0.0 0)
               )
             (none)
             )
          )
        )
      (10000
        (send-event "jak-highres" 'shadow-mask 0)
        (send-event "jak-highres" 'shadow-values 0)
        (send-event *time-of-day* 'change 'ratio (float 1))
        (apply ,(lambda :behavior scene-player
                  ()
                  (when (-> self aborted?)
                    (disable *screen-filter*)
                    (set-blackout-frames (seconds 0.2))
                    (remove-setting! 'allow-blackout)
                    )
                  (set-cloud-and-fog-interp! *mood-control* 0.0 0.5 1.0 1.0)
                  (set-filter-color! 1.0 1.0 1.0)
                  (none)
                  )
               )
        )
      )
    :cut-list '(120 391 465 557 586)
    :wait-ground-time (seconds 1)
    :actor (new 'static 'boxed-array :type scene-actor
      (new 'static 'scene-actor
        :name "scenecamera"
        :level #f
        :art-group "skel-scenecamera"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :camera 4
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "particleman"
        :level 'introcst
        :art-group "skel-particleman"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "jak-highres"
        :level 'introcst
        :art-group "skel-jak-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "sidekick-highres"
        :level 'introcst
        :art-group "skel-sidekick-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "pecker-highres"
        :level 'introcst
        :art-group "skel-pecker-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      )
    :load-point "wasintro-tired"
    :end-point "title-restart"
    :borrow '((wasintro 0 intpalrf special))
    :sfx-volume -1.0
    :ambient-volume -1.0
    :music-delay 1500.0
    :on-running #f
    :on-complete #f
    )
  )

(load-scene
  (new 'static 'scene
    :name "intro-palace"
    :extra #f
    :info #f
    :scene-flags (scene-flags scf1 scf2 scf3 scf4 scf7)
    :mask-to-clear (process-mask movie projectile)
    :entity "scene-stage-103"
    :art-group "scenecamera"
    :anim "intro-palace"
    :parts 34
    :command-list '((0
        (send-event *time-of-day* 'change 'ratio (float (new 'static 'bfloat)))
        (send-event *time-of-day* 'change 'hour (int 18))
        (apply ,(lambda :behavior scene-player
                  ()
                  (let ((v1-1 (level-get *level* 'wasintro)))
                    (if v1-1
                        (set! (-> v1-1 info fog-mult) 1.0)
                        )
                    )
                  (none)
                  )
               )
        (want-display 'wasintro 'special)
        (want-display 'intpfall 'display)
        (apply
          ,(lambda :behavior scene-player
             ()
             (set-setting! 'borrow '((wasintro 0 intpalrf display)) 0.0 0)
             (apply-settings *setting-control*)
             (none)
             )
          )
        (apply
          ,(lambda :behavior scene-player
             ()
             (when (not (-> self aborted?))
               (remove-setting! 'allow-blackout)
               (setup
                 *screen-filter*
                 (new 'static 'vector :x 255.0 :y 255.0 :z 255.0 :w 128.0)
                 (new 'static 'vector :x 255.0 :y 255.0 :z 255.0)
                 (* 5.988024 (seconds-per-frame))
                 (bucket-id tex-hud-pris2)
                 #x3fffff
                 #x33001
                 #t
                 )
               (set-filter-color! 1.0 1.0 1.0)
               )
             (none)
             )
          )
        )
      (176
        (apply
          ,(lambda :behavior scene-player
             ()
             (set-setting! 'borrow '((wasintro 0 #f #f)) 0.0 0)
             (apply-settings *setting-control*)
             (set! (-> ctyfarma memory-mode) (level-memory-mode small-center))
             (none)
             )
          )
        (want-load 'introcst 'ctyfarma 'intpfall)
        )
      (1
        (part-tracker
          "group-hellcat-thruster-little-trail"
          entity
          "particleman"
          joint
          "particleX"
          track
          #t
          duration
          (frame-range 1 402)
          )
        )
      (175
        (part-tracker
          "group-palace-tracer-fire"
          entity
          "particleman"
          joint
          "particleP"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-hellcat-thrusters"
          entity
          "particleman"
          joint
          "particleN"
          track
          #t
          duration
          (frame-range 175 382)
          )
        (part-tracker
          "group-hellcat-thruster-trail"
          entity
          "particleman"
          joint
          "particleN"
          track
          #t
          duration
          (frame-range 175 382)
          )
        (part-tracker
          "group-hellcat-thrusters"
          entity
          "particleman"
          joint
          "particleO"
          track
          #t
          duration
          (frame-range 175 382)
          )
        (part-tracker
          "group-hellcat-thruster-trail"
          entity
          "particleman"
          joint
          "particleO"
          track
          #t
          duration
          (frame-range 0 382)
          )
        )
      (181
        (part-tracker
          "group-palace-tracer-fire"
          entity
          "particleman"
          joint
          "particleP"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (185
        (part-tracker
          "group-palace-tracer-fire"
          entity
          "particleman"
          joint
          "particleP"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (187
        (part-tracker
          "group-palace-tracer-fire"
          entity
          "particleman"
          joint
          "particleP"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-palace-missile-explode"
          entity
          "particleman"
          joint
          "particleQ"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (191
        (part-tracker
          "group-palace-tracer-fire"
          entity
          "particleman"
          joint
          "particleP"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (195
        (part-tracker
          "group-palace-tracer-fire"
          entity
          "particleman"
          joint
          "particleP"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (197
        (part-tracker
          "group-palace-missile-explode"
          entity
          "particleman"
          joint
          "particleQ"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (201
        (part-tracker
          "group-palace-tracer-fire"
          entity
          "particleman"
          joint
          "particleP"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (204
        (part-tracker
          "group-palace-missile-explode"
          entity
          "particleman"
          joint
          "particleQ"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (205
        (part-tracker
          "group-palace-tracer-fire"
          entity
          "particleman"
          joint
          "particleP"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (209
        (part-tracker
          "group-palace-tracer-fire"
          entity
          "particleman"
          joint
          "particleP"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (213
        (part-tracker
          "group-palace-tracer-fire"
          entity
          "particleman"
          joint
          "particleP"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (219
        (part-tracker
          "group-palace-tracer-fire"
          entity
          "particleman"
          joint
          "particleP"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (220
        (part-tracker
          "group-palace-missile-explode"
          entity
          "particleman"
          joint
          "particleQ"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (223
        (part-tracker
          "group-palace-tracer-fire"
          entity
          "particleman"
          joint
          "particleP"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (229
        (part-tracker
          "group-palace-tracer-fire"
          entity
          "particleman"
          joint
          "particleP"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (231
        (part-tracker
          "group-palace-tracer-fire"
          entity
          "particleman"
          joint
          "particleP"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (233
        (part-tracker
          "group-palace-tracer-fire"
          entity
          "particleman"
          joint
          "particleP"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (237
        (part-tracker
          "group-palace-tracer-fire"
          entity
          "particleman"
          joint
          "particleP"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-palace-missile-explode"
          entity
          "particleman"
          joint
          "particleQ"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (243
        (part-tracker
          "group-palace-tracer-fire"
          entity
          "particleman"
          joint
          "particleP"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (245
        (part-tracker
          "group-palace-tracer-fire"
          entity
          "particleman"
          joint
          "particleP"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (247
        (part-tracker
          "group-palace-tracer-fire"
          entity
          "particleman"
          joint
          "particleP"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (248
        (part-tracker
          "group-palace-missile-explode"
          entity
          "particleman"
          joint
          "particleQ"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (253
        (send-event "ashelin-highres" 'shadow-mask 16)
        (send-event "ashelin-highres" 'shadow-values 655360)
        (send-event "torn-highres" 'shadow-mask 16)
        (send-event "torn-highres" 'shadow-values 655360)
        (send-event "hellcat-movie" 'shadow-mask 16)
        (send-event "hellcat-movie" 'shadow-values 655360)
        )
      (291
        (part-tracker
          "group-palace-tracer-fire"
          entity
          "particleman"
          joint
          "particleP"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (321
        (part-tracker
          "group-palace-tracer-fire"
          entity
          "particleman"
          joint
          "particleP"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (327
        (part-tracker
          "group-palace-flak"
          entity
          "particleman"
          joint
          "particleM"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (344
        (part-tracker
          "group-palace-flak"
          entity
          "particleman"
          joint
          "particleM"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (328
        (part-tracker
          "group-palace-flak"
          entity
          "particleman"
          joint
          "particleM"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (333
        (part-tracker
          "group-palace-missile-explode"
          entity
          "particleman"
          joint
          "particleQ"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (349
        (part-tracker
          "group-palace-missile-explode"
          entity
          "particleman"
          joint
          "particleQ"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (351
        (part-tracker
          "group-palace-flak"
          entity
          "particleman"
          joint
          "particleM"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (361
        (part-tracker
          "group-palace-missile-explode"
          entity
          "particleman"
          joint
          "particleQ"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (365
        (part-tracker
          "group-palace-tracer-fire"
          entity
          "particleman"
          joint
          "particleP"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (367
        (part-tracker
          "group-palace-tracer-fire"
          entity
          "particleman"
          joint
          "particleP"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (368
        (part-tracker
          "group-palace-flak"
          entity
          "particleman"
          joint
          "particleM"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (371
        (part-tracker
          "group-palace-missile-explode"
          entity
          "particleman"
          joint
          "particleQ"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (372
        (part-tracker
          "group-palace-flak"
          entity
          "particleman"
          joint
          "particleM"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (380
        (part-tracker
          "group-palace-flak"
          entity
          "particleman"
          joint
          "particleM"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (382
        (send-event "ashelin-highres" 'shadow-mask 0)
        (send-event "torn-highres" 'shadow-mask 0)
        (send-event "hellcat-movie" 'shadow-mask 0)
        )
      (383
        (part-tracker
          "group-palace-tracer-fire"
          entity
          "particleman"
          joint
          "particleP"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (387
        (part-tracker
          "group-palace-tracer-fire"
          entity
          "particleman"
          joint
          "particleP"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (395
        (part-tracker
          "group-palace-tracer-fire"
          entity
          "particleman"
          joint
          "particleP"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (399
        (part-tracker
          "group-palace-flak"
          entity
          "particleman"
          joint
          "particleM"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (401
        (part-tracker
          "group-palace-missile-explode"
          entity
          "particleman"
          joint
          "particleQ"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (403
        (part-tracker
          "group-palace-hellcat-explode"
          entity
          "particleman"
          joint
          "particleX"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (406
        (part-tracker
          "group-hellcat-thruster-fire-trail"
          entity
          "particleman"
          joint
          "particleX"
          track
          #t
          duration
          (frame-range 406 434)
          )
        )
      (413
        (part-tracker
          "group-palace-tracer-fire"
          entity
          "particleman"
          joint
          "particleP"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (425
        (part-tracker
          "group-palace-missile-explode"
          entity
          "particleman"
          joint
          "particleQ"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (427
        (part-tracker
          "group-palace-flak"
          entity
          "particleman"
          joint
          "particleM"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-palace-tracer-fire"
          entity
          "particleman"
          joint
          "particleP"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (429
        (part-tracker
          "group-palace-tracer-fire"
          entity
          "particleman"
          joint
          "particleP"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (435
        (send-event "ashelin-highres" 'shadow-mask 16)
        (send-event "torn-highres" 'shadow-mask 16)
        (send-event "hellcat-movie" 'shadow-mask 16)
        (part-tracker
          "group-hellcat-thruster-little-trail"
          entity
          "particleman"
          joint
          "particleX"
          track
          #t
          duration
          (frame-range 435 850)
          )
        )
      (501
        (send-event "ashelin-highres" 'shadow-mask 0)
        (send-event "torn-highres" 'shadow-mask 0)
        (send-event "hellcat-movie" 'shadow-mask 0)
        (part-tracker
          "group-hellcat-thrusters"
          entity
          "particleman"
          joint
          "particleN"
          track
          #t
          duration
          (frame-range 501 596)
          )
        (part-tracker
          "group-hellcat-thruster-trail"
          entity
          "particleman"
          joint
          "particleN"
          track
          #t
          duration
          (frame-range 501 596)
          )
        (part-tracker
          "group-hellcat-thrusters"
          entity
          "particleman"
          joint
          "particleO"
          track
          #t
          duration
          (frame-range 501 596)
          )
        (part-tracker
          "group-hellcat-thruster-trail"
          entity
          "particleman"
          joint
          "particleO"
          track
          #t
          duration
          (frame-range 501 596)
          )
        )
      (505 (part-tracker
             "group-palace-missile-explode"
             entity
             "particleman"
             joint
             "particleQ"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (506 (part-tracker
             "group-palace-flak"
             entity
             "particleman"
             joint
             "particleM"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (507 (part-tracker
             "group-palace-tracer-fire"
             entity
             "particleman"
             joint
             "particleP"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (509 (part-tracker
             "group-palace-missile-explode"
             entity
             "particleman"
             joint
             "particleQ"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (515 (part-tracker
             "group-palace-tracer-fire"
             entity
             "particleman"
             joint
             "particleP"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (517
        (part-tracker
          "group-palace-flak"
          entity
          "particleman"
          joint
          "particleM"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-palace-missile-explode"
          entity
          "particleman"
          joint
          "particleQ"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (527
        (part-tracker
          "group-palace-flak"
          entity
          "particleman"
          joint
          "particleM"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-palace-tracer-fire"
          entity
          "particleman"
          joint
          "particleP"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (531 (part-tracker
             "group-palace-tracer-fire"
             entity
             "particleman"
             joint
             "particleP"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (537 (part-tracker
             "group-palace-missile-explode"
             entity
             "particleman"
             joint
             "particleQ"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (539 (part-tracker
             "group-palace-flak"
             entity
             "particleman"
             joint
             "particleM"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (550 (part-tracker
             "group-palace-flak"
             entity
             "particleman"
             joint
             "particleM"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (551 (part-tracker
             "group-palace-missile-explode"
             entity
             "particleman"
             joint
             "particleQ"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (555 (part-tracker
             "group-palace-tracer-fire"
             entity
             "particleman"
             joint
             "particleP"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (563 (part-tracker
             "group-palace-flak"
             entity
             "particleman"
             joint
             "particleM"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (565 (part-tracker
             "group-palace-missile-explode"
             entity
             "particleman"
             joint
             "particleQ"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (571 (part-tracker
             "group-palace-tracer-fire"
             entity
             "particleman"
             joint
             "particleP"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (573 (part-tracker
             "group-palace-tracer-fire"
             entity
             "particleman"
             joint
             "particleP"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (574 (part-tracker
             "group-palace-flak"
             entity
             "particleman"
             joint
             "particleM"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (583 (part-tracker
             "group-palace-tracer-fire"
             entity
             "particleman"
             joint
             "particleP"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (589
        (part-tracker
          "group-palace-flak"
          entity
          "particleman"
          joint
          "particleM"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-palace-tracer-fire"
          entity
          "particleman"
          joint
          "particleP"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (591 (part-tracker
             "group-palace-missile-explode"
             entity
             "particleman"
             joint
             "particleQ"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (607 (part-tracker
             "group-palace-flak"
             entity
             "particleman"
             joint
             "particleM"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (615 (part-tracker
             "group-palace-tracer-fire"
             entity
             "particleman"
             joint
             "particleP"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (617 (part-tracker
             "group-palace-flak"
             entity
             "particleman"
             joint
             "particleM"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (627 (part-tracker
             "group-palace-tracer-fire"
             entity
             "particleman"
             joint
             "particleP"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (634 (part-tracker
             "group-palace-flak"
             entity
             "particleman"
             joint
             "particleM"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (643 (part-tracker
             "group-palace-tracer-fire"
             entity
             "particleman"
             joint
             "particleP"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (649 (part-tracker
             "group-palace-flak"
             entity
             "particleman"
             joint
             "particleM"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (657 (part-tracker
             "group-palace-tracer-fire"
             entity
             "particleman"
             joint
             "particleP"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (663 (part-tracker
             "group-palace-missile-explode"
             entity
             "particleman"
             joint
             "particleQ"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (669 (part-tracker
             "group-palace-tracer-fire"
             entity
             "particleman"
             joint
             "particleP"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (670 (part-tracker
             "group-palace-flak"
             entity
             "particleman"
             joint
             "particleM"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (683 (part-tracker
             "group-palace-tracer-fire"
             entity
             "particleman"
             joint
             "particleP"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (685 (part-tracker
             "group-palace-flak"
             entity
             "particleman"
             joint
             "particleM"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (691 (part-tracker
             "group-palace-tracer-fire"
             entity
             "particleman"
             joint
             "particleP"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (698 (part-tracker
             "group-palace-flak"
             entity
             "particleman"
             joint
             "particleM"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (709 (part-tracker
             "group-palace-tracer-fire"
             entity
             "particleman"
             joint
             "particleP"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (719 (part-tracker
             "group-palace-tracer-fire"
             entity
             "particleman"
             joint
             "particleP"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (733 (part-tracker
             "group-palace-missile-explode"
             entity
             "particleman"
             joint
             "particleQ"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (734 (part-tracker
             "group-palace-flak"
             entity
             "particleman"
             joint
             "particleM"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (735 (part-tracker
             "group-palace-tracer-fire"
             entity
             "particleman"
             joint
             "particleP"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (745 (part-tracker
             "group-palace-tracer-fire"
             entity
             "particleman"
             joint
             "particleP"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (748 (part-tracker
             "group-palace-flak"
             entity
             "particleman"
             joint
             "particleM"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (755 (part-tracker
             "group-palace-missile-explode"
             entity
             "particleman"
             joint
             "particleQ"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (757 (part-tracker
             "group-palace-tracer-fire"
             entity
             "particleman"
             joint
             "particleP"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (765 (part-tracker
             "group-palace-missile-explode"
             entity
             "particleman"
             joint
             "particleQ"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (776 (part-tracker
             "group-palace-flak"
             entity
             "particleman"
             joint
             "particleM"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (789 (part-tracker
             "group-palace-missile-explode"
             entity
             "particleman"
             joint
             "particleQ"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (795 (part-tracker
             "group-palace-tracer-fire"
             entity
             "particleman"
             joint
             "particleP"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (807 (part-tracker
             "group-palace-tracer-fire"
             entity
             "particleman"
             joint
             "particleP"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (813 (part-tracker
             "group-palace-missile-explode"
             entity
             "particleman"
             joint
             "particleQ"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (823 (part-tracker
             "group-palace-tracer-fire"
             entity
             "particleman"
             joint
             "particleP"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (833 (part-tracker
             "group-palace-missile-explode"
             entity
             "particleman"
             joint
             "particleQ"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (839
        (part-tracker
          "group-palace-tracer-fire"
          entity
          "particleman"
          joint
          "particleP"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-palace-missile-explode"
          entity
          "particleman"
          joint
          "particleQ"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (853
        (part-tracker
          "group-palace-tracer-fire"
          entity
          "particleman"
          joint
          "particleP"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-palace-missile-explode"
          entity
          "particleman"
          joint
          "particleQ"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (863 (part-tracker
             "group-palace-missile-explode"
             entity
             "particleman"
             joint
             "particleQ"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (865 (part-tracker
             "group-palace-missile"
             entity
             "particleman"
             joint
             "particleB"
             track
             #t
             duration
             (frame-range 865 962)
             )
           )
      (869 (part-tracker
             "group-palace-tracer-fire"
             entity
             "particleman"
             joint
             "particleP"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (871 (part-tracker
             "group-palace-missile-explode"
             entity
             "particleman"
             joint
             "particleQ"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (876 (part-tracker
             "group-palace-missile"
             entity
             "particleman"
             joint
             "particleA"
             track
             #t
             duration
             (frame-range 876 957)
             )
           )
      (881 (part-tracker
             "group-palace-tracer-fire"
             entity
             "particleman"
             joint
             "particleP"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (887 (part-tracker
             "group-palace-missile-explode"
             entity
             "particleman"
             joint
             "particleQ"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (895 (part-tracker
             "group-palace-tracer-fire"
             entity
             "particleman"
             joint
             "particleP"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (911 (part-tracker
             "group-palace-tracer-fire"
             entity
             "particleman"
             joint
             "particleP"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (913 (part-tracker
             "group-palace-missile-explode"
             entity
             "particleman"
             joint
             "particleQ"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (931 (part-tracker
             "group-palace-missile-explode"
             entity
             "particleman"
             joint
             "particleQ"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (932 (part-tracker
             "group-palace-missile"
             entity
             "particleman"
             joint
             "particleK"
             track
             #t
             duration
             (frame-range 932 962)
             )
           )
      (933 (part-tracker
             "group-palace-tracer-fire"
             entity
             "particleman"
             joint
             "particleP"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (950
        (part-tracker
          "group-palace-missile"
          entity
          "particleman"
          joint
          "particleI"
          track
          #t
          duration
          (frame-range 950 963)
          )
        (part-tracker
          "group-palace-missile"
          entity
          "particleman"
          joint
          "particleJ"
          track
          #t
          duration
          (frame-range 950 965)
          )
        (part-tracker
          "group-palace-missile"
          entity
          "particleman"
          joint
          "particleL"
          track
          #t
          duration
          (frame-range 950 982)
          )
        )
      (953 (part-tracker
             "group-palace-flak"
             entity
             "particleman"
             joint
             "particleM"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (955 (part-tracker
             "group-palace-tracer-fire"
             entity
             "particleman"
             joint
             "particleP"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (956 (part-tracker
             "group-palace-missile-explode"
             entity
             "ctypal-palace-break-c"
             joint
             "bd"
             track
             #t
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (957
        (part-tracker
          "group-ctypal-palace-break-trailer-small"
          entity
          "ctypal-palace-break-c"
          joint
          "ba"
          track
          #t
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-ctypal-palace-break-trailer-small"
          entity
          "ctypal-palace-break-c"
          joint
          "bb"
          track
          #t
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-ctypal-palace-break-trailer-small"
          entity
          "ctypal-palace-break-c"
          joint
          "bc"
          track
          #t
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-ctypal-palace-break-trailer-small"
          entity
          "ctypal-palace-break-c"
          joint
          "bd"
          track
          #t
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-ctypal-palace-break-trailer-small"
          entity
          "ctypal-palace-break-c"
          joint
          "bf"
          track
          #t
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-ctypal-palace-break-trailer-small"
          entity
          "ctypal-palace-break-c"
          joint
          "be"
          track
          #t
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-ctypal-palace-break-trailer-small"
          entity
          "ctypal-palace-break-c"
          joint
          "bg"
          track
          #t
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (962 (part-tracker
             "group-palace-missile-explode"
             entity
             "particleman"
             joint
             "particleC"
             track
             #t
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (963 (part-tracker
             "group-palace-missile-explode"
             entity
             "particleman"
             joint
             "particleQ"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (964
        (part-tracker
          "group-palace-missile-explode"
          entity
          "ctypal-palace-break-c"
          joint
          "bd"
          track
          #t
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-palace-flak"
          entity
          "particleman"
          joint
          "particleM"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (965
        (part-tracker
          "group-ctypal-palace-break-trailer-small"
          entity
          "ctypal-palace-break-c"
          joint
          "as"
          track
          #t
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-ctypal-palace-break-trailer-small"
          entity
          "ctypal-palace-break-c"
          joint
          "at"
          track
          #t
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-ctypal-palace-break-trailer-small"
          entity
          "ctypal-palace-break-c"
          joint
          "au"
          track
          #t
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-ctypal-palace-break-trailer-small"
          entity
          "ctypal-palace-break-c"
          joint
          "av"
          track
          #t
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-ctypal-palace-break-trailer-small"
          entity
          "ctypal-palace-break-c"
          joint
          "aw"
          track
          #t
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (967 (part-tracker
             "group-palace-missile-explode"
             entity
             "particleman"
             joint
             "particleD"
             track
             #t
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (971 (part-tracker
             "group-palace-flak"
             entity
             "particleman"
             joint
             "particleM"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (979 (part-tracker
             "group-palace-tracer-fire"
             entity
             "particleman"
             joint
             "particleP"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (982 (part-tracker
             "group-palace-flak"
             entity
             "particleman"
             joint
             "particleM"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (985 (part-tracker
             "group-palace-flak"
             entity
             "particleman"
             joint
             "particleM"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (987
        (part-tracker
          "group-palace-missile-explode"
          entity
          "particleman"
          joint
          "particleC"
          track
          #t
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-palace-missile-explode"
          entity
          "particleman"
          joint
          "particleQ"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (991 (part-tracker
             "group-palace-tracer-fire"
             entity
             "particleman"
             joint
             "particleP"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (994 (part-tracker
             "group-palace-flak"
             entity
             "particleman"
             joint
             "particleM"
             track
             #f
             duration
             (seconds (new 'static 'bfloat :data 5.0))
             )
           )
      (1000
        (part-tracker
          "group-palace-missile"
          entity
          "particleman"
          joint
          "particleI"
          track
          #t
          duration
          (frame-range 1000 1040)
          )
        (part-tracker
          "group-palace-missile"
          entity
          "particleman"
          joint
          "particleJ"
          track
          #t
          duration
          (frame-range 1000 1037)
          )
        )
      (1009 (part-tracker
              "group-palace-missile-explode"
              entity
              "particleman"
              joint
              "particleQ"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1011 (part-tracker
              "group-palace-tracer-fire"
              entity
              "particleman"
              joint
              "particleP"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1021 (part-tracker
              "group-palace-missile-explode"
              entity
              "ctypal-palace-break-d"
              joint
              "bs"
              track
              #t
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1027 (part-tracker
              "group-palace-missile-explode"
              entity
              "particleman"
              joint
              "particleQ"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1031 (part-tracker
              "group-palace-tracer-fire"
              entity
              "particleman"
              joint
              "particleP"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1040 (part-tracker
              "group-palace-missile-explode"
              entity
              "ctypal-palace-break-b"
              joint
              "t"
              track
              #t
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1041 (part-tracker
              "group-palace-missile-explode"
              entity
              "ctypal-palace-break-c"
              joint
              "bd"
              track
              #t
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1042
        (part-tracker
          "group-ctypal-palace-break-explode-small"
          entity
          "ctypal-palace-break-a"
          joint
          "r"
          track
          #t
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-ctypal-palace-break-trailer-small"
          entity
          "ctypal-palace-break-a"
          joint
          "s"
          track
          #t
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-ctypal-palace-break-trailer-small"
          entity
          "ctypal-palace-break-b"
          joint
          "t"
          track
          #t
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-ctypal-palace-break-trailer-small"
          entity
          "ctypal-palace-break-b"
          joint
          "u"
          track
          #t
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-ctypal-palace-break-trailer-small"
          entity
          "ctypal-palace-break-b"
          joint
          "v"
          track
          #t
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-ctypal-palace-break-trailer-small"
          entity
          "ctypal-palace-break-b"
          joint
          "w"
          track
          #t
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-ctypal-palace-break-trailer-small"
          entity
          "ctypal-palace-break-b"
          joint
          "x"
          track
          #t
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-ctypal-palace-break-trailer-small"
          entity
          "ctypal-palace-break-b"
          joint
          "y"
          track
          #t
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-ctypal-palace-break-trailer-small"
          entity
          "ctypal-palace-break-b"
          joint
          "z"
          track
          #t
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-ctypal-palace-break-trailer-small"
          entity
          "ctypal-palace-break-b"
          joint
          "zz"
          track
          #t
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-ctypal-palace-break-trailer-small"
          entity
          "ctypal-palace-break-b"
          joint
          "aa"
          track
          #t
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-ctypal-palace-break-trailer-small"
          entity
          "ctypal-palace-break-b"
          joint
          "ab"
          track
          #t
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-ctypal-palace-break-trailer-small"
          entity
          "ctypal-palace-break-b"
          joint
          "ac"
          track
          #t
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-ctypal-palace-break-trailer-small"
          entity
          "ctypal-palace-break-b"
          joint
          "ad"
          track
          #t
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-ctypal-palace-break-trailer-small"
          entity
          "ctypal-palace-break-b"
          joint
          "ae"
          track
          #t
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-ctypal-palace-break-trailer-small"
          entity
          "ctypal-palace-break-b"
          joint
          "af"
          track
          #t
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (1048 (part-tracker
              "group-palace-flak"
              entity
              "particleman"
              joint
              "particleM"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1053 (part-tracker
              "group-palace-smoke-plume"
              entity
              "particleman"
              joint
              "particleE"
              track
              #t
              duration
              (frame-range 1053 1880)
              )
            )
      (1057 (part-tracker
              "group-palace-flak"
              entity
              "particleman"
              joint
              "particleM"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1068 (part-tracker
              "group-palace-flak"
              entity
              "particleman"
              joint
              "particleM"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1075 (part-tracker
              "group-palace-flak"
              entity
              "particleman"
              joint
              "particleM"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1081 (part-tracker
              "group-palace-missile"
              entity
              "particleman"
              joint
              "particleI"
              track
              #t
              duration
              (frame-range 1081 1117)
              )
            )
      (1083
        (part-tracker
          "group-palace-missile"
          entity
          "particleman"
          joint
          "particleJ"
          track
          #t
          duration
          (frame-range 1083 1135)
          )
        (part-tracker
          "group-palace-missile"
          entity
          "particleman"
          joint
          "particleK"
          track
          #t
          duration
          (frame-range 1083 1162)
          )
        )
      (1089 (part-tracker
              "group-palace-missile-explode"
              entity
              "particleman"
              joint
              "particleQ"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1090 (part-tracker
              "group-palace-missile-explode"
              entity
              "particleman"
              joint
              "particleD"
              track
              #t
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1095 (part-tracker
              "group-palace-tracer-fire"
              entity
              "particleman"
              joint
              "particleP"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1109 (part-tracker
              "group-palace-missile-explode"
              entity
              "particleman"
              joint
              "particleQ"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1117 (part-tracker
              "group-palace-flak"
              entity
              "particleman"
              joint
              "particleM"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1122 (part-tracker
              "group-palace-missile-explode"
              entity
              "particleman"
              joint
              "particleC"
              track
              #t
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1127 (part-tracker
              "group-palace-tracer-fire"
              entity
              "particleman"
              joint
              "particleP"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1128 (part-tracker
              "group-palace-flak"
              entity
              "particleman"
              joint
              "particleM"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1133 (part-tracker
              "group-palace-missile-explode"
              entity
              "particleman"
              joint
              "particleQ"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1134 (part-tracker
              "group-palace-missile-explode"
              entity
              "particleman"
              joint
              "particleD"
              track
              #t
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1135
        (part-tracker
          "group-ctypal-palace-break-trailer-small"
          entity
          "ctypal-palace-break-c"
          joint
          "ax"
          track
          #t
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-ctypal-palace-break-trailer-small"
          entity
          "ctypal-palace-break-c"
          joint
          "ay"
          track
          #t
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-ctypal-palace-break-trailer-small"
          entity
          "ctypal-palace-break-c"
          joint
          "az"
          track
          #t
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-ctypal-palace-break-explode-small"
          entity
          "ctypal-palace-break-c"
          joint
          "ay"
          track
          #t
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (1137 (part-tracker
              "group-palace-tracer-fire"
              entity
              "particleman"
              joint
              "particleP"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1139 (part-tracker
              "group-palace-smoke-plume"
              entity
              "particleman"
              joint
              "particleG"
              track
              #t
              duration
              (frame-range 1139 1880)
              )
            )
      (1141 (part-tracker
              "group-palace-flak"
              entity
              "particleman"
              joint
              "particleM"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1154 (part-tracker
              "group-palace-smoke-plume"
              entity
              "particleman"
              joint
              "particleF"
              track
              #t
              duration
              (frame-range 1154 1880)
              )
            )
      (1155
        (part-tracker
          "group-palace-missile-explode"
          entity
          "ctypal-palace-break-d"
          joint
          "bp"
          track
          #t
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-palace-tracer-fire"
          entity
          "particleman"
          joint
          "particleP"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (1156 (part-tracker
              "group-palace-flak"
              entity
              "particleman"
              joint
              "particleM"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1157 (part-tracker
              "group-palace-missile-explode"
              entity
              "particleman"
              joint
              "particleQ"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1160 (part-tracker
              "group-palace-missile-explode"
              entity
              "particleman"
              joint
              "particleC"
              track
              #t
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1162 (part-tracker
              "group-palace-flak"
              entity
              "particleman"
              joint
              "particleM"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1163
        (part-tracker
          "group-ctypal-palace-break-trailer-small"
          entity
          "ctypal-palace-break-c"
          joint
          "bk"
          track
          #t
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-ctypal-palace-break-trailer-small"
          entity
          "ctypal-palace-break-c"
          joint
          "bl"
          track
          #t
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (1169 (part-tracker
              "group-palace-tracer-fire"
              entity
              "particleman"
              joint
              "particleP"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1174 (part-tracker
              "group-ctypal-palace-break-trailer-small"
              entity
              "ctypal-palace-break-c"
              joint
              "bj"
              track
              #t
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1177 (part-tracker
              "group-palace-missile-explode"
              entity
              "particleman"
              joint
              "particleQ"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1179
        (part-tracker
          "group-ctypal-palace-break-trailer-small"
          entity
          "ctypal-palace-break-c"
          joint
          "bh"
          track
          #t
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-ctypal-palace-break-trailer-small"
          entity
          "ctypal-palace-break-c"
          joint
          "bi"
          track
          #t
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (1183 (part-tracker
              "group-palace-tracer-fire"
              entity
              "particleman"
              joint
              "particleP"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1187 (part-tracker
              "group-palace-flak"
              entity
              "particleman"
              joint
              "particleM"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1193 (part-tracker
              "group-palace-small-explode"
              entity
              "particleman"
              joint
              "particleD"
              track
              #t
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1199
        (part-tracker
          "group-palace-tracer-fire"
          entity
          "particleman"
          joint
          "particleP"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-palace-missile-explode"
          entity
          "particleman"
          joint
          "particleQ"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (1208 (part-tracker
              "group-palace-flak"
              entity
              "particleman"
              joint
              "particleM"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1215 (part-tracker
              "group-palace-tracer-fire"
              entity
              "particleman"
              joint
              "particleP"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1219 (part-tracker
              "group-palace-missile-explode"
              entity
              "particleman"
              joint
              "particleQ"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1223 (part-tracker
              "group-palace-flak"
              entity
              "particleman"
              joint
              "particleM"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1229 (part-tracker
              "group-palace-tracer-fire"
              entity
              "particleman"
              joint
              "particleP"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1234 (part-tracker
              "group-palace-flak"
              entity
              "particleman"
              joint
              "particleM"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1235 (part-tracker
              "group-palace-missile-explode"
              entity
              "particleman"
              joint
              "particleQ"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1247 (part-tracker
              "group-palace-tracer-fire"
              entity
              "particleman"
              joint
              "particleP"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1263
        (part-tracker
          "group-palace-flak"
          entity
          "particleman"
          joint
          "particleM"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-palace-tracer-fire"
          entity
          "particleman"
          joint
          "particleP"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (1273 (part-tracker
              "group-palace-tracer-fire"
              entity
              "particleman"
              joint
              "particleP"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1275 (part-tracker
              "group-palace-flak"
              entity
              "particleman"
              joint
              "particleM"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1289 (part-tracker
              "group-palace-tracer-fire"
              entity
              "particleman"
              joint
              "particleP"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1296 (part-tracker
              "group-palace-flak"
              entity
              "particleman"
              joint
              "particleM"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1301
        (part-tracker
          "group-palace-tracer-fire"
          entity
          "particleman"
          joint
          "particleP"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-palace-missile-explode"
          entity
          "particleman"
          joint
          "particleQ"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (1307 (part-tracker
              "group-ctypal-palace-break-explode-dust"
              entity
              "ctypal-palace-break-d"
              joint
              "cc"
              track
              #t
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1310 (part-tracker
              "group-palace-huge-explosion"
              entity
              "ctypal-palace-break-d"
              joint
              "bw"
              track
              #t
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1313 (part-tracker
              "group-palace-small-explode"
              entity
              "particleman"
              joint
              "particleC"
              track
              #t
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1325 (part-tracker
              "group-palace-missile-explode"
              entity
              "particleman"
              joint
              "particleQ"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1345
        (part-tracker
          "group-palace-tracer-fire"
          entity
          "particleman"
          joint
          "particleP"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-hellcat-thrusters"
          entity
          "particleman"
          joint
          "particleN"
          track
          #t
          duration
          (frame-range 1345 1560)
          )
        (part-tracker
          "group-hellcat-thruster-trail"
          entity
          "particleman"
          joint
          "particleN"
          track
          #t
          duration
          (frame-range 1345 1560)
          )
        (part-tracker
          "group-hellcat-thrusters"
          entity
          "particleman"
          joint
          "particleO"
          track
          #t
          duration
          (frame-range 1345 1560)
          )
        (part-tracker
          "group-hellcat-thruster-trail"
          entity
          "particleman"
          joint
          "particleO"
          track
          #t
          duration
          (frame-range 1345 1560)
          )
        )
      (1349 (part-tracker
              "group-palace-flak"
              entity
              "particleman"
              joint
              "particleM"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1362 (part-tracker
              "group-palace-flak"
              entity
              "particleman"
              joint
              "particleM"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1367 (part-tracker
              "group-palace-tracer-fire"
              entity
              "particleman"
              joint
              "particleP"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1373 (part-tracker
              "group-palace-smoke-plume"
              entity
              "particleman"
              joint
              "particleF"
              track
              #t
              duration
              (frame-range 1373 1880)
              )
            )
      (1377 (part-tracker
              "group-palace-flak"
              entity
              "particleman"
              joint
              "particleM"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1389 (part-tracker
              "group-palace-tracer-fire"
              entity
              "particleman"
              joint
              "particleP"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1396 (part-tracker
              "group-palace-flak"
              entity
              "particleman"
              joint
              "particleM"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1401 (part-tracker
              "group-palace-flak"
              entity
              "particleman"
              joint
              "particleM"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1409 (part-tracker
              "group-palace-tracer-fire"
              entity
              "particleman"
              joint
              "particleP"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1423 (part-tracker
              "group-palace-missile-explode"
              entity
              "particleman"
              joint
              "particleQ"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1441 (part-tracker
              "group-palace-missile-explode"
              entity
              "particleman"
              joint
              "particleQ"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1461 (part-tracker
              "group-palace-missile-explode"
              entity
              "particleman"
              joint
              "particleQ"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1487 (part-tracker
              "group-palace-missile-explode"
              entity
              "particleman"
              joint
              "particleQ"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1535 (part-tracker
              "group-palace-missile-explode"
              entity
              "particleman"
              joint
              "particleQ"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1551
        (part-tracker
          "group-palace-tracer-fire"
          entity
          "particleman"
          joint
          "particleP"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-palace-missile-explode"
          entity
          "particleman"
          joint
          "particleD"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (kill "ctypal-ctyfarma-1")
        (want-display 'ctyfarma 'display)
        )
      (1552
        (part-tracker
          "group-ctypal-support-break-trailer"
          entity
          "particleman"
          joint
          "particleT"
          track
          #t
          duration
          (frame-range 1552 1587)
          )
        (part-tracker
          "group-ctypal-support-break-trailer"
          entity
          "particleman"
          joint
          "particleU"
          track
          #t
          duration
          (frame-range 1552 1587)
          )
        (part-tracker
          "group-ctypal-support-break-trailer"
          entity
          "particleman"
          joint
          "particleV"
          track
          #t
          duration
          (frame-range 1552 1587)
          )
        )
      (1576 (part-tracker
              "group-palace-flak"
              entity
              "particleman"
              joint
              "particleM"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1585
        (part-tracker
          "group-palace-flak"
          entity
          "particleman"
          joint
          "particleM"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        (part-tracker
          "group-palace-dust-cloud-big"
          entity
          "particleman"
          joint
          "particleL"
          track
          #f
          duration
          (seconds (new 'static 'bfloat :data 5.0))
          )
        )
      (1586)
      (1587 (part-tracker
              "group-palace-missile-explode"
              entity
              "particleman"
              joint
              "particleS"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1593 (part-tracker
              "group-palace-flak"
              entity
              "particleman"
              joint
              "particleM"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1597 (part-tracker
              "group-palace-dust-cloud-big"
              entity
              "particleman"
              joint
              "particleL"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1603 (part-tracker
              "group-palace-tracer-fire"
              entity
              "particleman"
              joint
              "particleP"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1608 (part-tracker
              "group-palace-flak"
              entity
              "particleman"
              joint
              "particleM"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1619 (part-tracker
              "group-palace-flak"
              entity
              "particleman"
              joint
              "particleM"
              track
              #t
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1626 (part-tracker
              "group-palace-dust-cloud-big"
              entity
              "particleman"
              joint
              "particleL"
              track
              #t
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1630 (part-tracker
              "group-palace-flak"
              entity
              "particleman"
              joint
              "particleM"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1638 (part-tracker
              "group-palace-dust-cloud-big"
              entity
              "particleman"
              joint
              "particleL"
              track
              #t
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1642 (part-tracker
              "group-palace-dust-cloud-big"
              entity
              "particleman"
              joint
              "particleL"
              track
              #t
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1648 (part-tracker
              "group-palace-dust-cloud-big"
              entity
              "particleman"
              joint
              "particleL"
              track
              #t
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1655
        (part-tracker
          "group-palace-smoke-plume"
          entity
          "particleman"
          joint
          "particleF"
          track
          #t
          duration
          (frame-range 1655 2000)
          )
        (part-tracker
          "group-hellcat-thrusters"
          entity
          "particleman"
          joint
          "particleN"
          track
          #t
          duration
          (frame-range 1655 1710)
          )
        (part-tracker
          "group-hellcat-thruster-trail"
          entity
          "particleman"
          joint
          "particleN"
          track
          #t
          duration
          (frame-range 1655 1710)
          )
        (part-tracker
          "group-hellcat-thrusters"
          entity
          "particleman"
          joint
          "particleO"
          track
          #t
          duration
          (frame-range 1655 1710)
          )
        (part-tracker
          "group-hellcat-thruster-trail"
          entity
          "particleman"
          joint
          "particleO"
          track
          #t
          duration
          (frame-range 1655 1710)
          )
        )
      (1665 (part-tracker
              "group-palace-dust-cloud-big"
              entity
              "particleman"
              joint
              "particleL"
              track
              #t
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1670 (part-tracker
              "group-palace-smoke-plume"
              entity
              "particleman"
              joint
              "particleE"
              track
              #t
              duration
              (frame-range 1670 2000)
              )
            )
      (1674 (part-tracker
              "group-palace-flak"
              entity
              "particleman"
              joint
              "particleM"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1683 (part-tracker
              "group-palace-dust-cloud-big"
              entity
              "particleman"
              joint
              "particleL"
              track
              #t
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1684 (part-tracker
              "group-palace-flak"
              entity
              "particleman"
              joint
              "particleM"
              track
              #f
              duration
              (seconds (new 'static 'bfloat :data 5.0))
              )
            )
      (1705 (set! *artist-all-visible* #f))
      (1710
        (want-load 'introcst 'wasintro 'intpfall)
        (want-display 'wasintro 'special)
        (apply ,(lambda :behavior scene-player
                  ()
                  (set-setting! 'borrow '((introcst 0 lwlandm special)) 0.0 0)
                  (apply-settings *setting-control*)
                  (none)
                  )
               )
        (save)
        )
      (1784
        (part-tracker
          "group-hellcat-thrusters"
          entity
          "particleman"
          joint
          "particleN"
          track
          #t
          duration
          (frame-range 1784 1933)
          )
        (part-tracker
          "group-hellcat-thruster-trail"
          entity
          "particleman"
          joint
          "particleN"
          track
          #t
          duration
          (frame-range 1784 1880)
          )
        (part-tracker
          "group-hellcat-thrusters"
          entity
          "particleman"
          joint
          "particleO"
          track
          #t
          duration
          (frame-range 1784 1933)
          )
        (part-tracker
          "group-hellcat-thruster-trail"
          entity
          "particleman"
          joint
          "particleO"
          track
          #t
          duration
          (frame-range 1784 1880)
          )
        )
      (1940 (apply ,(lambda :behavior scene-player
                      ()
                      (when (not (-> self aborted?))
                        (set! (-> *display* force-sync) (the-as uint 150))
                        (persist-with-delay *setting-control* 'blur-a (seconds 3) 'blur-a 'abs 0.8 0)
                        (sound-play "trans4")
                        )
                      (none)
                      )
                   )
            )
      (1990 (apply ,(lambda :behavior scene-player
                      ()
                      (when (not (-> self aborted?))
                        (disable *screen-filter*)
                        (setup
                          *screen-filter*
                          (new 'static 'vector :x 255.0 :y 255.0 :z 255.0)
                          (new 'static 'vector :x 255.0 :y 255.0 :z 255.0 :w 128.0)
                          (* 3.003003 (seconds-per-frame))
                          (bucket-id tex-hud-pris2)
                          #x3fffff
                          #x33001
                          #t
                          )
                        (set-setting! 'allow-blackout #f 0.0 0)
                        )
                      (none)
                      )
                   )
            )
      (10000 (apply ,(lambda :behavior scene-player
                       ()
                       (let ((v1-1 (level-get *level* 'wasintro)))
                         (if v1-1
                             (set! (-> v1-1 info fog-mult) 100.0)
                             )
                         )
                       (send-event (ppointer->process *time-of-day*) 'change 'ratio 1.0)
                       (set! (-> ctyfarma memory-mode) (level-memory-mode small-edge))
                       (when (-> self aborted?)
                         (disable *screen-filter*)
                         (set-blackout-frames (seconds 0.2))
                         (remove-setting! 'allow-blackout)
                         )
                       (set-filter-color! 1.0 1.0 1.0)
                       (none)
                       )
                    )
             )
      )
    :cut-list '(175 253 382 434 501 596 670 715 787 952 1000 1037 1086 1239 1308 1344 1411 1551 1705 1875)
    :wait-ground-time (seconds 1)
    :actor (new 'static 'boxed-array :type scene-actor
      (new 'static 'scene-actor
        :name "scenecamera"
        :level #f
        :art-group "skel-scenecamera"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :camera 4
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "particleman"
        :level 'introcst
        :art-group "skel-particleman"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "jak-highres"
        :level 'introcst
        :art-group "skel-jak-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((175 434) (501 max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "sidekick-highres"
        :level 'introcst
        :art-group "skel-sidekick-highres"
        :prefix ""
        :draw-frames '((min 1551) (1705 max))
        :scissor-frames '()
        :shadow-frames '((175 434) (501 max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "torn-highres"
        :level 'ltorn
        :art-group "skel-torn-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "ashelin-highres"
        :level 'introcst
        :art-group "skel-ashelin-highres"
        :prefix ""
        :draw-frames '((min 1551) (1705 max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "samos-highres"
        :level 'introcst
        :art-group "skel-samos-highres"
        :prefix ""
        :draw-frames '((min 1551) (1705 max))
        :scissor-frames '()
        :shadow-frames '((175 434) (501 715) (787 max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "hellcat-movie"
        :level 'intpfall
        :art-group "skel-hellcat-movie"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "hellcat-lowres-fma"
        :level 'intpfall
        :art-group "skel-hellcat-lowres-fma"
        :prefix ""
        :draw-frames '((min 952))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "palmpilot"
        :level 'intpfall
        :art-group "skel-palmpilot"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "ctypal-palace-break"
        :level 'intpfall
        :art-group "skel-ctypal-palace-break"
        :prefix ""
        :draw-frames '((501 596) (952 1000) (1037 1239) (1308 1411) (1551 max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "ctypal-palace-break-a"
        :level 'intpfall
        :art-group "skel-ctypal-palace-break-a"
        :prefix "a-"
        :draw-frames '((501 596) (952 1000) (1037 1239) (1308 1411) (1551 max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "ctypal-palace-break-b"
        :level 'intpfall
        :art-group "skel-ctypal-palace-break-b"
        :prefix "b-"
        :draw-frames '((501 596) (952 1000) (1037 1239) (1308 1411) (1705 max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "ctypal-palace-break-c"
        :level 'intpfall
        :art-group "skel-ctypal-palace-break-c"
        :prefix "c-"
        :draw-frames '((501 596) (952 1000) (1037 1239))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "ctypal-palace-break-d"
        :level 'intpfall
        :art-group "skel-ctypal-palace-break-d"
        :prefix "d-"
        :draw-frames '((501 596) (952 1000) (1020 1239) (1308 1411) (1705 max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "ctypal-palace-break-e"
        :level 'intpfall
        :art-group "skel-ctypal-palace-break-e"
        :prefix "e-"
        :draw-frames '((501 596) (952 1000) (1037 1239) (1308 1411) (1551 1600) (1705 max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "ctypal-cable-break"
        :level 'intpfall
        :art-group "skel-ctypal-cable-break"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "ctypal-cable-break"
        :level 'intpfall
        :art-group "skel-ctypal-cable-break"
        :prefix "a-"
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "ctypal-cable-break"
        :level 'intpfall
        :art-group "skel-ctypal-cable-break"
        :prefix "b-"
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "ctypal-cable-break"
        :level 'intpfall
        :art-group "skel-ctypal-cable-break"
        :prefix "c-"
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "ctypal-cable-break"
        :level 'intpfall
        :art-group "skel-ctypal-cable-break"
        :prefix "d-"
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "ctypal-cable-break"
        :level 'intpfall
        :art-group "skel-ctypal-cable-break"
        :prefix "e-"
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "ctypal-support-break"
        :level 'intpfall
        :art-group "skel-ctypal-support-break"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "ctypal-support-break"
        :level 'intpfall
        :art-group "skel-ctypal-support-break"
        :prefix "a-"
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "ctypal-support-break"
        :level 'intpfall
        :art-group "skel-ctypal-support-break"
        :prefix "b-"
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "ctypal-support-break"
        :level 'intpfall
        :art-group "skel-ctypal-support-break"
        :prefix "c-"
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "ctypal-support-break"
        :level 'intpfall
        :art-group "skel-ctypal-support-break"
        :prefix "d-"
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "ctypal-support-break"
        :level 'intpfall
        :art-group "skel-ctypal-support-break"
        :prefix "e-"
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "ctypal-rail"
        :level 'intpfall
        :art-group "skel-ctypal-rail"
        :prefix ""
        :draw-frames '((175 253) (382 434) (596 670) (715 952) (1000 1037) (1239 1308) (1411 1551))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "ctypal-base-break"
        :level 'intpfall
        :art-group "skel-ctypal-base-break"
        :prefix ""
        :draw-frames '((501 596) (952 1000) (1037 1239) (1308 1411) (1620 1705))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      )
    :load-point "wasintro-palace"
    :end-point "title-restart"
    :borrow '((wasintro 0 intpalrf special))
    :sfx-volume -1.0
    :ambient-volume -1.0
    :music-delay 1500.0
    :on-running #f
    :on-complete #f
    )
  )

(load-scene
  (new 'static 'scene
    :name "intro-rescue"
    :extra #f
    :info #f
    :scene-flags (scene-flags scf1 scf2 scf3 scf4 scf7)
    :mask-to-clear (process-mask movie projectile)
    :entity "scene-stage-110"
    :art-group "scenecamera"
    :anim "intro-rescue"
    :parts 8
    :command-list '((0
        (send-event *time-of-day* 'change 'ratio (float (new 'static 'bfloat)))
        (send-event *time-of-day* 'change 'hour (int 18))
        (apply
          ,(lambda :behavior scene-player
             ()
             (send-event (handle->process (-> *game-info* dust-storm)) 'set-intensity 0)
             (set-filter-color! 1.125 1.125 1.125)
             (set-cloud-and-fog-interp! *mood-control* 0.0 0.5 0.0 0.0)
             (none)
             )
          )
        (want-display 'wasintro 'display)
        (apply
          ,(lambda :behavior scene-player
             ()
             (set-setting! 'ambient-volume 'rel 1.0 0)
             (when (not (-> self aborted?))
               (remove-setting! 'allow-blackout)
               (setup
                 *screen-filter*
                 (new 'static 'vector :x 255.0 :y 255.0 :z 255.0 :w 128.0)
                 (new 'static 'vector :x 255.0 :y 255.0 :z 255.0)
                 (* 3.003003 (seconds-per-frame))
                 (bucket-id tex-hud-pris2)
                 #x3fffff
                 #x33001
                 #t
                 )
               (set-filter-color! 1.0 1.0 1.0)
               )
             (none)
             )
          )
        (set-cloth-ground-height "damus-highres" 98304)
        )
      (1
        (part-tracker
          "group-desert-blowing-dust"
          entity
          "particleman"
          joint
          "particleI"
          track
          #f
          duration
          (frame-range 1 550)
          )
        (part-tracker
          "group-desert-blowing-dust"
          entity
          "particleman"
          joint
          "particleD"
          track
          #f
          duration
          (frame-range 1 550)
          )
        )
      (2 (want-load 'introcst 'wasintro 'title) (want-display 'wasintro 'display))
      (270
        (part-tracker "group-drop-beacon-glow" entity "beacon" joint "glow" track #t duration (frame-range 270 432))
        )
      (448
        (part-tracker
          "group-desert-impact-dust-blow"
          entity
          "particleman"
          joint
          "particleB"
          track
          #f
          duration
          (frame-range 448 449)
          )
        )
      (473
        (part-tracker
          "group-desert-impact-dust-blow"
          entity
          "particleman"
          joint
          "particleE"
          track
          #f
          duration
          (frame-range 473 474)
          )
        (want-display 'title 'display)
        (save)
        )
      (500
        (setting-reset sfx-volume mode 'abs value (new 'static 'bfloat :data 1.0))
        (send-event *time-of-day* 'change 'ratio (float 1))
        (apply
          ,(lambda :behavior scene-player
             ()
             (send-event (handle->process (-> *game-info* dust-storm)) 'set-intro #t)
             (set-setting! 'fog-special-interp-targ #f 1.0 0)
             (set-setting! 'fog-special-interp-rate #f 0.21 0)
             (apply-settings *setting-control*)
             (none)
             )
          )
        )
      (600
        (setting-reset letterbox-speed mode 'abs value (new 'static 'bfloat :data 0.5))
        (setting-reset letterbox mode 'abs value (new 'static 'bfloat))
        )
      (680
        (apply
          ,(lambda :behavior scene-player
             ()
             (set-setting! 'fog-special-interp-targ #f 2.0 0)
             (set-setting! 'fog-special-interp-rate #f 4.0 0)
             (persist-with-delay
               *setting-control*
               'fog-special-interp-targ
               (seconds 1000)
               'fog-special-interp-targ
               #f
               2.0
               0
               )
             (apply-settings *setting-control*)
             (none)
             )
          )
        )
      (678 (apply ,(lambda :behavior scene-player
                     ()
                     (if (not (-> self aborted?))
                         (set-setting! 'allow-blackout #f 0.0 0)
                         )
                     (none)
                     )
                  )
           )
      (10000
        (send-event *time-of-day* 'change 'ratio (float 1))
        (task-close! "city-start-introduction")
        (apply
          ,(lambda :behavior scene-player
             ()
             (cond
               ((scene-select?)
                (persist-with-delay *setting-control* 'fog-special-interp-targ 0 'fog-special-interp-targ #f 2.0 0)
                (remove-setting! 'fog-special-interp-targ)
                (remove-setting! 'fog-special-interp-rate)
                )
               ((-> self aborted?)
                (disable *screen-filter*)
                (set-blackout-frames (seconds 0.2))
                (remove-setting! 'allow-blackout)
                )
               (else
                 (set! (-> self end-point) "title-from-intro")
                 (set! (-> self blackout-end) #f)
                 )
               )
             (set-cloud-and-fog-interp! *mood-control* 0.0 0.5 1.0 1.0)
             (none)
             )
          )
        )
      )
    :cut-list '(251 296 347 431 498)
    :wait-ground-time (seconds 1)
    :actor (new 'static 'boxed-array :type scene-actor
      (new 'static 'scene-actor
        :name "scenecamera"
        :level #f
        :art-group "skel-scenecamera"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :camera 4
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "particleman"
        :level 'introcst
        :art-group "skel-particleman"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "jak-highres"
        :level 'introcst
        :art-group "skel-jak-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "sidekick-highres"
        :level 'introcst
        :art-group "skel-sidekick-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "damus-highres"
        :level 'introcst
        :art-group "skel-damus-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '((296 347))
        :shadow-frames '((min max))
        :cloth-reset-frames '((0 5))
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "kleever-highres"
        :level 'introcst
        :art-group "skel-kleever-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '((0 5))
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "wlander-male"
        :level 'lwlandm
        :art-group "skel-wlander-male"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        :draw-seg #x3fe0000
        :no-draw-seg #xffffffffffffffff
        )
      (new 'static 'scene-actor
        :name "pecker-highres"
        :level 'introcst
        :art-group "skel-pecker-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "beacon"
        :level 'introcst
        :art-group "skel-beacon"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-frames '((min max))
        :cloth-reset-frames '()
        :cloth-commands '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      )
    :load-point "wasintro-rescue"
    :end-point "title-restart"
    :borrow '((introcst 0 lwlandm display))
    :sfx-volume -1.0
    :ambient-volume 1.0
    :music-delay 1500.0
    :on-running #f
    :on-complete #f
    )
  )
