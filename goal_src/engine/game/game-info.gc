;;-*-Lisp-*-
(in-package goal)

;; name: game-info.gc
;; name in dgo: game-info
;; dgos: GAME, ENGINE

(defmethod debug-draw! border-plane ((obj border-plane))
  "Debug draw a border plane with a vector and text."
  (let* ((v1-0 (-> obj action))
         ;; pick color based on action 
         (s5-0 (if (= v1-0 'load)
                   (new 'static 'rgba :g #xff :a #x80)
                   (new 'static 'rgba :r #xff :a #x80)
                   )
           )
         )

    ;; add text and vector
    (add-debug-text-sphere #t (bucket-id debug-draw1) (-> obj trans) 819.2 (symbol->string (-> obj name)) s5-0)
    (add-debug-vector #t (bucket-id debug-draw1) (-> obj trans) (-> obj normal) 8192.0 s5-0)
    )
  0
  (none)
  )

(defmethod point-past-plane? border-plane ((obj border-plane) (arg0 vector))
  "Which side of the plane is the given point on?
   #t = on the plane, or on the side the normal points toward."
  (>= (vector-dot
       (vector-! (new 'stack-no-clear 'vector) arg0 (-> obj trans))
       (-> obj normal))
      0.0)
  )
