;;-*-Lisp-*-
(in-package goal)

;; name: task-control-h.gc
;; name in dgo: task-control-h
;; dgos: GAME, ENGINE

;; custom enums
(defenum task-status
  :type uint64
  (invalid 0)
  (unknown 1)
  (need-hint 2)
  (need-introduction 3)
  (need-reminder-a 4)
  (need-reminder 5)
  (need-reward-speech 6)
  (need-resolution 7)
  (*unknown* 999999)
  )

(defenum game-task
  :type uint8
  (none 0)
  (complete 1)
  (jungle-eggtop 2)
  (jungle-lurkerm 3)
  (jungle-tower 4)
  (jungle-fishgame 5)
  (jungle-plant 6)
  (jungle-buzzer 7)
  (jungle-canyon-end 8)
  (jungle-temple-door 9)
  (village1-yakow 10)
  (village1-mayor-money 11)
  (village1-uncle-money 12)
  (village1-oracle-money1 13)
  (village1-oracle-money2 14)
  (beach-ecorocks 15)
  (beach-pelican 16)
  (beach-flutflut 17)
  (beach-seagull 18)
  (beach-cannon 19)
  (beach-buzzer 20)
  (beach-gimmie 21)
  (beach-sentinel 22)
  (misty-muse 23)
  (misty-boat 24)
  (misty-warehouse 25)
  (misty-cannon 26)
  (misty-bike 27)
  (misty-buzzer 28)
  (misty-bike-jump 29)
  (misty-eco-challenge 30)
  (village2-gambler-money 31)
  (village2-geologist-money 32)
  (village2-warrior-money 33)
  (village2-oracle-money1 34)
  (village2-oracle-money2 35)
  (swamp-billy 36)
  (swamp-flutflut 37)
  (swamp-battle 38)
  (swamp-tether-1 39)
  (swamp-tether-2 40)
  (swamp-tether-3 41)
  (swamp-tether-4 42)
  (swamp-buzzer 43)
  (sunken-platforms 44)
  (sunken-pipe 45)
  (sunken-slide 46)
  (sunken-room 47)
  (sunken-sharks 48)
  (sunken-buzzer 49)
  (sunken-top-of-helix 50)
  (sunken-spinning-room 51)
  (rolling-race 52)
  (rolling-robbers 53)
  (rolling-moles 54)
  (rolling-plants 55)
  (rolling-lake 56)
  (rolling-buzzer 57)
  (rolling-ring-chase-1 58)
  (rolling-ring-chase-2 59)
  (snow-eggtop 60)
  (snow-ram 61)
  (snow-fort 62)
  (snow-ball 63)
  (snow-bunnies 64)
  (snow-buzzer 65)
  (snow-bumpers 66)
  (snow-cage 67)
  (firecanyon-buzzer 68)
  (firecanyon-end 69)
  (citadel-sage-green 70)
  (citadel-sage-blue 71)
  (citadel-sage-red 72)
  (citadel-sage-yellow 73)
  (village3-extra1 74)
  (village1-buzzer 75)
  (village2-buzzer 76)
  (village3-buzzer 77)
  (cave-gnawers 78)
  (cave-dark-crystals 79)
  (cave-dark-climb 80)
  (cave-robot-climb 81)
  (cave-swing-poles 82)
  (cave-spider-tunnel 83)
  (cave-platforms 84)
  (cave-buzzer 85)
  (ogre-boss 86)
  (ogre-end 87)
  (ogre-buzzer 88)
  (lavatube-end 89)
  (lavatube-buzzer 90)
  (citadel-buzzer 91)
  (training-gimmie 92)
  (training-door 93)
  (training-climb 94)
  (training-buzzer 95)
  (village3-miner-money1 96)
  (village3-miner-money2 97)
  (village3-miner-money3 98)
  (village3-miner-money4 99)
  (village3-oracle-money1 100)
  (village3-oracle-money2 101)
  (firecanyon-assistant 102)
  (village2-levitator 103)
  (swamp-arm 104)
  (village3-button 105)
  (red-eggtop 106)
  (lavatube-balls 107)
  (lavatube-start 108)
  (intro 109)
  (ogre-secret 110)
  (village4-button 111)
  (finalboss-movies 112)
  (plunger-lurker-hit 113)
  (leaving-misty 114)
  (assistant-village3 115)
  (max 116)
  (*unknown* 255))

;; definition of type task-cstage
(declare-type task-control basic)
(deftype task-cstage (structure)
  ((game-task game-task   :offset-assert 0)
   (status    task-status  :offset-assert 8)
   (flags     uint8   :offset-assert 16)
   (condition (function task-control symbol) :offset-assert 20)
   )
  :method-count-assert 16
  :size-assert         #x18
  :flag-assert         #x1000000018
  (:methods
    (get-game-task (_type_) uint 9)
    (get-task-status (_type_) uint 10)
    (TODO-RENAME-11 (_type_ task-control) symbol 11)
    (first-flag-bit? (_type_) symbol 12)
    (third-flag-bit? (_type_) symbol 13)
    (TODO-RENAME-14 (_type_) int 14)
    (clear-all-but-first-flag-bit (_type_) int 15)
    )
  )

;; definition of type task-control
(deftype task-control (basic)
  ((current-stage int16  :offset-assert 4)
   (stage         (array task-cstage)  :offset-assert 8)
   )
  :method-count-assert 19
  :size-assert         #xc
  :flag-assert         #x130000000c
  (:methods
    (current-task (_type_) int 9)
    (current-status (_type_) int 10)
    (close-current! (_type_) none 11)
    (close-status! (_type_ int) int 12)
    (first-any (_type_ symbol) int 13)
    (reset! (_type_ symbol symbol) int 14)
    (closed? (_type_ int int) symbol 15)
    (get-reminder (_type_ int) int 16)
    (save-reminder (_type_ int int) int 17) ;; TODO - i believe this is none
    (exists? (_type_ int int) symbol 18)
    )
  )

;; definition of type ambient-control
(deftype ambient-control (structure)
  ((last-ambient-time uint64  :offset-assert 0)
   (last-ambient      basic   :offset-assert 8)
   (last-ambient-id   uint32  :offset-assert 12)
   )
  :method-count-assert 12
  :size-assert         #x10
  :flag-assert         #xc00000010
  (:methods
    (dummy-9 () none 9)
    (dummy-10 () none 10)
    (dummy-11 () none 11)
    )
  )

;; definition of type process-taskable
(deftype process-taskable (process-drawable)
  ((tasks                basic                   :offset-assert 176)
   (query                gui-query       :inline :offset-assert 180)
   (old-target-pos       transformq      :inline :offset-assert 208)
   (cell-for-task        uint8                   :offset-assert 256)
   (cell-x               uint64                  :offset-assert 264)
   (cam-joint-index      int32                   :offset-assert 272)
   (skippable            basic                   :offset-assert 276)
   (blend-on-exit        basic                   :offset-assert 280)
   (camera               uint64                  :offset-assert 288)
   (will-talk            basic                   :offset-assert 296)
   (talk-message         uint32                  :offset-assert 300)
   (last-talk            uint64                  :offset-assert 304)
   (bounce-away          basic                   :offset-assert 312)
   (ambient              ambient-control :inline :offset-assert 320)
   (center-joint-index   int32                   :offset-assert 336)
   (draw-bounds-y-offset float                   :offset-assert 340)
   (neck-joint-index     int32                   :offset-assert 344)
   (fuel-cell-anim       basic                   :offset-assert 348)
   (sound-flava          uint8                   :offset-assert 352)
   (have-flava           basic                   :offset-assert 356)
   (music                basic                   :offset-assert 360)
   (have-music           basic                   :offset-assert 364)
   (been-kicked          basic                   :offset-assert 368)
   (cur-trans-hook       basic                   :offset-assert 372)
   (shadow-backup        basic                   :offset-assert 376)
   )
  :heap-base #x110
  :method-count-assert 53
  :size-assert         #x17c
  :flag-assert         #x350110017c
  (:methods
    (dummy-20 () none 20)
    (dummy-21 () none 21)
    (dummy-22 () none 22)
    (dummy-23 () none 23)
    (dummy-24 () none 24)
    (dummy-25 () none 25)
    (dummy-26 () none 26)
    (dummy-27 () none 27)
    (dummy-28 () none 28)
    (dummy-29 () none 29)
    (dummy-30 () none 30)
    (dummy-31 () none 31)
    (dummy-32 () none 32)
    (dummy-33 () none 33)
    (dummy-34 () none 34)
    (dummy-35 () none 35)
    (dummy-36 () none 36)
    (dummy-37 () none 37)
    (dummy-38 () none 38)
    (dummy-39 () none 39)
    (dummy-40 () none 40)
    (dummy-41 () none 41)
    (dummy-42 () none 42)
    (dummy-43 () none 43)
    (dummy-44 () none 44)
    (dummy-45 () none 45)
    (dummy-46 () none 46)
    (dummy-47 () none 47)
    (dummy-48 () none 48)
    (dummy-49 () none 49)
    (dummy-50 () none 50)
    (dummy-51 () none 51)
    (dummy-52 () none 52)
    )
  )

(define-extern task-closed? (function int int symbol))
