;;-*-Lisp-*-
(in-package goal)

;; name: game-h.gc
;; name in dgo: game-h
;; dgos: GAME, ENGINE

; TODO - for hud-h.gc
(deftype process-drawable (process)
  ((root        basic   :offset-assert 112)
   (node-list   basic   :offset-assert 116)
   (draw        basic   :offset-assert 120)
   (skel        basic   :offset-assert 124)
   (nav         basic   :offset-assert 128)
   (align       basic   :offset-assert 132)
   (path        basic   :offset-assert 136)
   (vol         basic   :offset-assert 140)
   (fact        basic   :offset-assert 144)
   (link        basic   :offset-assert 148)
   (part        basic   :offset-assert 152)
   (water       basic   :offset-assert 156)
   (sound       basic   :offset-assert 160)
   (state-flags uint32  :offset-assert 164)
   (state-time  uint64  :offset-assert 168)
   )
  :heap-base #x40
  :method-count-assert 20
  :size-assert         #xb0
  :flag-assert         #x14004000b0
  ;; inherited inspect of process
  (:methods
    (dummy-14 () none 14)
    (dummy-15 () none 15)
    (dummy-16 () none 16)
    (dummy-17 () none 17)
    (dummy-18 () none 18)
    (dummy-19 () none 19)
    )
  )

; TODO - for target-h
(deftype attack-info (structure)
  ((trans        vector :inline :offset-assert 0)
   (vector       vector :inline :offset-assert 16)
   (intersection vector :inline :offset-assert 32)
   (attacker     uint64         :offset-assert 48) ;; handle
   (invinc-time  uint64         :offset-assert 56)
   (mask         uint32         :offset-assert 64)
   (mode         basic          :offset-assert 68)
   (shove-back   float         :offset-assert 72) ;; meters
   (shove-up     float         :offset-assert 76) ;; meters
   (speed        float         :offset-assert 80) ;; meters
   (dist         float         :offset-assert 84) ;; meters
   (control      float          :offset-assert 88)
   (angle        basic          :offset-assert 92)
   (rotate-to    float            :offset-assert 96) ;; deg
   (prev-state   basic          :offset-assert 100)
   )
  :method-count-assert 10
  :size-assert         #x68
  :flag-assert         #xa00000068
  ;; field handle is likely a value type
  (:methods
    (dummy-9 () none 9)
    )
  )