;;-*-Lisp-*-
(in-package goal)

;; name: collectables.gc
;; name in dgo: collectables
;; dgos: GAME, ENGINE

;; TODO - for nav-enemy
(define-extern birth-pickup-at-point (function vector int float symbol process-drawable fact-info (pointer process)))

;; TODO - for entity and beach-rocks
(deftype collectable (process-drawable)
  ((root-override   collide-shape-moving :score 100 :offset 112)
   (pickup-type     pickup-type          :offset-assert 176)
   (pickup-amount   float          :offset-assert 180)
   (notify-parent   basic          :offset-assert 184)
   (old-base        vector :inline :offset-assert 192)
   (base            vector :inline :offset-assert 208)
   (extra-trans     vector :inline :offset-assert 224)
   (jump-pos        vector :inline :offset-assert 240)
   (flags           uint32         :offset-assert 256)
   (birth-time      uint64         :offset-assert 264)
   (collect-timeout uint64         :offset-assert 272)
   (fadeout-timeout uint64         :offset-assert 280)
   (bob-offset      uint64         :offset-assert 288)
   (bob-amount      float          :offset-assert 296)
   (pickup-handle   handle         :offset-assert 304) ;; not sure it's a handle
   (actor-pause     symbol          :offset-assert 312)
   )
  (:methods
    (TODO-RENAME-20 (_type_) _type_ 20)
    (dummy-21 (_type_ uint float) none 21) ;; TODO - weird math issue
    )
  :heap-base #xd0

  :method-count-assert 22
  :size-assert         #x13c
  :flag-assert         #x1600d0013c
  )
(deftype eco-collectable (collectable)
  ((eco-effect          sparticle-launch-group          :offset-assert 316)
   (collect-effect      sparticle-launch-group          :offset-assert 320)
   (collect-effect2     sparticle-launch-group          :offset-assert 324)
   (collect-effect-time uint64         :offset-assert 328)
   (respawn-delay       uint64         :offset-assert 336)
   (sound-name          sound-spec          :offset-assert 344)
   (target              uint64         :offset-assert 352)
   (suck-time           uint64         :offset-assert 360)
   (suck-y-offset       float          :offset-assert 368)
   (speed               vector :inline :offset-assert 384)
   (movie-pos-index     int32          :offset-assert 400)
   )
  (:methods
    (wait () _type_ :state 22) ;; state
    (pickup () _type_ :state 23) ;; state
    (die () _type_ :state 24) ;; state
    (jump () _type_ :state 25)
    (notice-blue () _type_ :state 26) ;; state
    (get-pickup-sound (_type_ pickup-type) ambient-sound 27)
    (dummy-28 (_type_ basic pickup-type float) none 28)
    (update-sound! (_type_) none 29) ;; something to do with particles too
    (blocked () _type_ :state 30)
    )
  :heap-base #x130
  :method-count-assert 31
  :size-assert         #x194
  :flag-assert         #x1f01300194
  )
(deftype fuel-cell (eco-collectable)
  ((victory-anim spool-anim :offset-assert 404)
   (state-object symbol :offset-assert 408))
  :heap-base #x130
  :method-count-assert 31
  :size-assert         #x19c
  :flag-assert         #x1f0130019c
  )
(define-extern fuel-cell-init-as-clone (function handle object none))
(define-extern fuel-cell-pick-anim (function process-drawable spool-anim))

(defskelgroup *money-sg* money
  0
  4
  ((1 (meters 20)) (2 (meters 40)) (3 (meters 999999)))
  :bounds (static-spherem 0 0 0 0.6000000238418579)
  :longest-edge (meters 0)
  :texture-level 2
  )

;; failed to figure out what this is:
(defskelgroup *fuel-cell-sg* fuel-cell
  0
  2
  ((1 (meters 999999)))
  :bounds (static-spherem 0 1 0 1.600000023841858)
  :longest-edge (meters 0)
  :texture-level 2
  )

;; definition of type money
(deftype money (eco-collectable)
  ()
  :heap-base #x130
  :method-count-assert 31
  :size-assert         #x194
  :flag-assert         #x1f01300194
  )

(define-extern money-init-by-other-no-bob (function vector vector int float entity none))
