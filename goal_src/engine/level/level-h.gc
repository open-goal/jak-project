;;-*-Lisp-*-
(in-package goal)

;; name: level-h.gc
;; name in dgo: level-h
;; dgos: GAME, ENGINE

(deftype level-vis-info (basic)
  ((level              basic            :offset-assert 4)
   (from-level         basic            :offset-assert 8)
   (from-bsp           basic            :offset-assert 12)
   (flags              uint32           :offset-assert 16)
   (length             uint32           :offset-assert 20)
   (allocated-length   uint32           :offset-assert 24)
   (dictionary-length  uint32           :offset-assert 28)
   (dictionary         uint32           :offset-assert 32)
   (string-block       uint32           :offset-assert 36)
   (ramdisk            uint32           :offset-assert 40)
   (vis-bits           uint32           :offset-assert 44)
   (current-vis-string uint32           :offset-assert 48)
   (vis-string         uint8 :dynamic :offset-assert 52)
   )
  :method-count-assert 9
  :size-assert         #x34
  :flag-assert         #x900000034
  )


(defmethod asize-of level-vis-info ((obj level-vis-info))
  (the-as int (+ (-> level-vis-info size) (-> obj dictionary-length)))
  )

(deftype level-load-info (basic)
  ((name-list         basic 3 :offset-assert 4)
   (index             int32     :offset-assert 16)
   (name              basic     :offset 4)
   (visname           basic     :offset 8)
   (nickname          basic     :offset 12)
   (packages          basic     :offset-assert 20)
   (sound-banks       basic     :offset-assert 24)
   (music-bank        basic     :offset-assert 28)
   (ambient-sounds    basic     :offset-assert 32)
   (mood              basic     :offset-assert 36)
   (mood-func         basic     :offset-assert 40)
   (ocean             basic     :offset-assert 44)
   (sky               basic     :offset-assert 48)
   (sun-fade          float     :offset-assert 52)
   (continues         basic     :offset-assert 56)
   (tasks             basic     :offset-assert 60)
   (priority          int32     :offset-assert 64)
   (load-commands     basic     :offset-assert 68)
   (alt-load-commands basic     :offset-assert 72)
   (bsp-mask          uint64    :offset-assert 80)
   (bsphere           sphere    :offset-assert 88)
   (buzzer            int32     :offset-assert 92)
   (bottom-height     float    :offset-assert 96) ;; meters
   (run-packages      basic     :offset-assert 100)
   (prev-level        basic     :offset-assert 104)
   (next-level        basic     :offset-assert 108)
   (wait-for-load     basic     :offset-assert 112)
   )
  :method-count-assert 9
  :size-assert         #x74
  :flag-assert         #x900000074
  )

(deftype login-state (basic)
  ((state int32      :offset-assert 4)
   (pos   uint32     :offset-assert 8)
   (elts  uint32     :offset-assert 12)
   (elt   uint32 16 :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x50
  :flag-assert         #x900000050
  )

(deftype level (basic)
  ((name                      basic           :offset-assert 4)
   (load-name                 basic           :offset-assert 8)
   (nickname                  basic           :offset-assert 12)
   (index                     int32           :offset-assert 16)
   (status                    basic           :offset-assert 20)
   (other                     basic           :offset-assert 24)
   (heap                      kheap   :inline :offset-assert 32)
   (bsp                       basic           :offset-assert 48)
   (art-group                 basic           :offset-assert 52)
   (info                      basic           :offset-assert 56)
   (texture-page              basic 9       :offset-assert 60)
   (loaded-texture-page       basic 16      :offset-assert 96)
   (loaded-texture-page-count int32           :offset-assert 160)
   (foreground-sink-group     dma-foreground-sink-group 3 :inline :offset-assert 176) ;; inline basic
   (foreground-draw-engine    basic 3       :offset-assert 272)
   (entity                    basic           :offset-assert 284)
   (ambient                   basic           :offset-assert 288)
   (closest-object            basic 9       :offset-assert 292)
   (upload-size               uint32 9       :offset-assert 328)
   (level-distance            float          :offset-assert 364) ; meters
   (inside-sphere?            basic           :offset-assert 368)
   (inside-boxes?             basic           :offset-assert 372)
   (display?                  basic           :offset-assert 376)
   (meta-inside?              basic           :offset-assert 380)
   (mood                      basic           :offset-assert 384)
   (mood-func                 basic           :offset-assert 388)
   (vis-bits                  uint32          :offset-assert 392)
   (all-visible?              basic           :offset-assert 396)
   (force-all-visible?        basic           :offset-assert 400)
   (linking                   basic           :offset-assert 404)
   (vis-info                  level-vis-info 8       :offset-assert 408)
   (vis-self-index            int32           :offset-assert 440)
   (vis-adj-index             int32           :offset-assert 444)
   (vis-buffer                uint8 2048    :offset-assert 448)
   (mem-usage-block           basic           :offset-assert 2496)
   (mem-usage                 int32           :offset-assert 2500)
   (code-memory-start         uint32          :offset-assert 2504)
   (code-memory-end           uint32          :offset-assert 2508)
   (texture-mask              uint32 9       :offset-assert 2512)
   (force-inside?             basic           :offset-assert 2548)
   (pad                       uint8 56)
   )
  :method-count-assert 29
  :size-assert         #xa30
  :flag-assert         #x1d00000a30
  (:methods
    (dummy-9 () none 9)
    (dummy-10 () none 10)
    (dummy-11 () none 11)
    (dummy-12 () none 12)
    (dummy-13 () none 13)
    (dummy-14 () none 14)
    (dummy-15 () none 15)
    (dummy-16 () none 16)
    (dummy-17 () none 17)
    (dummy-18 () none 18)
    (dummy-19 () none 19)
    (dummy-20 () none 20)
    (dummy-21 () none 21)
    (dummy-22 () none 22)
    (dummy-23 () none 23)
    (dummy-24 () none 24)
    (dummy-25 () none 25)
    (dummy-26 () none 26)
    (dummy-27 () none 27)
    (dummy-28 () none 28)
    )
  )

(declare-type entity-links structure)

(deftype level-group (basic)
  ((length          int32                :offset-assert 4)
   (entity-link     entity-links         :offset 16) ;; not sure what's going on here
   (border?         basic                :offset-assert 20)
   (vis?            basic                :offset-assert 24)
   (want-level      basic                :offset-assert 28)
   (receiving-level basic                :offset-assert 32)
   (load-commands   basic                :offset-assert 36)
   (play?           basic                :offset-assert 40)
   ;; there's something? from 40 -> 96. 
   (hack-pad        uint8                :offset 90)
   
   ;(level           level 3 :inline      :offset-assert 96)
   ;(data            level 3 :inline      :offset-assert 100)
   (level0          level        :inline :offset-assert 96) ;; inline basic
   (level1          level        :inline :offset-assert 2704) ;; inline basic
   (level-default   level        :inline :offset-assert 5312) ;; inline basic
   ;; this actually went earlier, 
   (level           level 3      :inline :offset 96)
   (pad uint32)
   )
  :method-count-assert 27
  :size-assert         #x1ef4
  :flag-assert         #x1b00001ef4
  (:methods
    (dummy-9 () none 9)
    (dummy-10 () none 10)
    (dummy-11 () none 11)
    (dummy-12 () none 12)
    (dummy-13 () none 13)
    (dummy-14 () none 14)
    (dummy-15 () none 15)
    (dummy-16 () none 16)
    (dummy-17 () none 17)
    (dummy-18 () none 18)
    (dummy-19 () none 19)
    (dummy-20 () none 20)
    (dummy-21 () none 21)
    (dummy-22 () none 22)
    (dummy-23 () none 23)
    (dummy-24 () none 24)
    (dummy-25 () none 25)
    (dummy-26 () none 26)
    )
  )
