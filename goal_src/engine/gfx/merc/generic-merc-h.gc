;;-*-Lisp-*-
(in-package goal)

;; name: generic-merc-h.gc
;; name in dgo: generic-merc-h
;; dgos: GAME, ENGINE

;; The "generic merc" renderer converts merc data to be used by generic.
;; It is used for environment mapping and scissoring in the original game.

(deftype merc-matrix (structure)
  ((quad   uint128 8                     :offset-assert 0)
   (vector vector  8 :inline :offset   0)
   (tag    uint64  :offset   0)
   )
  :method-count-assert 9
  :size-assert         #x80
  :flag-assert         #x900000080
  )

(deftype generic-merc-tag (dma-packet)
  ((next-ptr uint32 :offset  12)
   (size     uint32 :offset   8)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype generic-merc-ctrl (structure)
  ((tag    generic-merc-tag :inline :offset-assert 0)
   (lights vu-lights        :inline :offset-assert 16)
   (header merc-ctrl-header :inline :offset-assert 128)
   (effect merc-effect      :inline :offset-assert 208)
   )
  :method-count-assert 9
  :size-assert         #xf0
  :flag-assert         #x9000000f0
  )

(deftype generic-merc-ctrl-with-sfx (generic-merc-ctrl)
  ((sfx-data uint128 11 :offset-assert 240)
   )
  :method-count-assert 9
  :size-assert         #x1a0
  :flag-assert         #x9000001a0
  )

(deftype generic-merc-input (structure)
  ((geo-tag     generic-merc-tag           :inline             :offset-assert 0)
   (geo-block   uint8                      1296                :offset-assert 16)
   (byte-header merc-byte-header           :inline :offset  16)
   (matrix      merc-matrix                9 :inline           :offset-assert 1312)
   (control     generic-merc-ctrl-with-sfx :inline             :offset-assert 2464)
   (end-tag     generic-merc-tag           :inline             :offset-assert 2880)
   (shader      adgif-shader               :inline             :offset-assert 2896)
   )
  :method-count-assert 9
  :size-assert         #xba0
  :flag-assert         #x900000ba0
  )

(deftype generic-merc-output (structure)
  ((info             gsf-info   :inline         :offset-assert 0)
   (header           gsf-header :inline         :offset-assert 16)
   (index-kick-table uint16     80              :offset-assert 32)
   (index-table      uint8      160 :offset  32)
   (inverse-table    uint8      256             :offset-assert 192)
   (vertex-table     gsf-vertex 72 :inline      :offset-assert 448)
   )
  :method-count-assert 9
  :size-assert         #xac0
  :flag-assert         #x900000ac0
  )

(deftype generic-merc-dcache (structure)
  ((output-a    generic-merc-output :inline :offset-assert 0)
   (output-b    generic-merc-output :inline :offset-assert 2752)
   (inv-table-1 uint8               544     :offset-assert 5504)
   (inv-table-7 uint8               544     :offset-assert 6048)
   (inv-safety  uint8               16      :offset-assert 6592)
   (effect-data uint8               1584    :offset-assert 6608)
   )
  :method-count-assert 9
  :size-assert         #x2000
  :flag-assert         #x900002000
  )

(deftype gm-shadow (structure)
  ((perspective                matrix              :inline :offset-assert 0)
   (isometric                  matrix              :inline :offset-assert 64)
   (inv-camera-rot             matrix              :inline :offset-assert 128)
   (envmap-shader              adgif-shader        :inline :offset-assert 192)
   (current-chain              uint32                      :offset-assert 272)
   (next-chain                 uint32                      :offset-assert 276)
   (buf-index                  uint32                      :offset-assert 280)
   (fragment-count             uint32                      :offset-assert 284)
   (write-limit                pointer                     :offset-assert 288)
   (indexed-input-base         generic-merc-input          :offset-assert 292)
   (other-input-base           generic-merc-input          :offset-assert 296)
   (indexed-output-base        generic-merc-output         :offset-assert 300)
   (other-output-base          generic-merc-output         :offset-assert 304)
   (p-input                    uint32                      :offset-assert 308)
   (gsf-buf                    generic-merc-dcache         :offset-assert 312)
   (p-fheader                  merc-fp-header              :offset-assert 316)
   (mercneric-convert          basic                       :offset-assert 320)
   (generic-prepare-dma-single basic                       :offset-assert 324)
   (generic-prepare-dma-double basic                       :offset-assert 328)
   (generic-light-proc         basic                       :offset-assert 332)
   (generic-envmap-proc        basic                       :offset-assert 336)
   (high-speed-reject          basic                       :offset-assert 340)
   (hsr-xmult                  vector              :inline :offset-assert 352)
   (hsr-ymult                  vector              :inline :offset-assert 368)
   )
  :method-count-assert 9
  :size-assert         #x180
  :flag-assert         #x900000180
  )

(deftype generic-merc-work (structure)
  ((input-a generic-merc-input         :inline :offset-assert 0)
   (input-b generic-merc-input         :inline :offset-assert 2976)
   (ctrl    generic-merc-ctrl-with-sfx :inline :offset-assert 5952)
   (shadow  gm-shadow                  :inline :offset-assert 6368)
   (stack   uint128                    16      :offset-assert 6752)
   )
  :method-count-assert 9
  :size-assert         #x1b60
  :flag-assert         #x900001b60
  )
