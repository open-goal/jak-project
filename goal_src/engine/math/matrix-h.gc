;;-*-Lisp-*-
(in-package goal)

;; name: matrix-h.gc
;; name in dgo: matrix-h
;; dgos: GAME, ENGINE

;; matrix-h
(deftype matrix (structure)
  ((data   float 16 :offset-assert 0)
   (vector vector 4 :inline :offset 0)
   (quad   uint128 4  :offset 0)
   )
  :method-count-assert 10
  :size-assert         #x40
  :flag-assert         #xa00000040
  (:methods
    (dummy-9 () none 9)
    )
  )

(deftype matrix3 (structure)
  ((data   float 12 :offset-assert 0)
   (vector vector 3  :inline :offset 0)
   (quad   uint128 3  :offset 0)
   )
  :method-count-assert 9
  :size-assert         #x30
  :flag-assert         #x900000030
  )

;; guess on signs here
(deftype matrix4h (structure)
  ((data     int16 16 :offset-assert 0)
   (vector4h vector4h 4 :inline :offset 0)
   (long     int64 4  :offset 0)
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

(defun matrix-copy! ((arg0 matrix) (arg1 matrix))
  (let ((v1-0 (-> arg1 vector 0 quad))
        (a2-0 (-> arg1 vector 1 quad))
        (a3-0 (-> arg1 vector 2 quad))
        (a1-1 (-> arg1 vector 3 quad))
        )
   (set! (-> arg0 vector 0 quad) v1-0)
   (set! (-> arg0 vector 1 quad) a2-0)
   (set! (-> arg0 vector 2 quad) a3-0)
   (set! (-> arg0 vector 3 quad) a1-1)
   )
  arg0
  )
