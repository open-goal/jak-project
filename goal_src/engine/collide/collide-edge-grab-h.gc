;;-*-Lisp-*-
(in-package goal)

;; name: collide-edge-grab-h.gc
;; name in dgo: collide-edge-grab-h
;; dgos: GAME, ENGINE

(deftype edge-grab-info (structure)
  ((world-vertex             vector 6 :inline      :offset-assert 0)
   (local-vertex             vector 6 :inline      :offset-assert 96)
   (actor-cshape-prim-offset int32           :offset-assert 192)
   (actor-handle             uint64          :offset-assert 200)
   (hanging-matrix           matrix  :inline :offset-assert 208)
   (edge-vertex              vector 2 :inline       :offset 0)
   (center-hold              vector  :inline :offset 32)
   (tri-vertex               vector 3 :inline     :offset 48)
   (left-hand-hold           vector  :inline :offset-assert 272)
   (right-hand-hold          vector  :inline :offset-assert 288)
   (center-hold-old          vector  :inline :offset-assert 304)
   (edge-tri-pat             uint32          :offset-assert 320)
   )
  :method-count-assert 11
  :size-assert         #x144
  :flag-assert         #xb00000144
  (:methods
    (dummy-9 () none 9)
    (dummy-10 () none 10)
    )
  )

(declare-type collide-cache-tri structure)
(deftype collide-edge-tri (structure)
  ((ctri   collide-cache-tri         :offset-assert 0)
   (normal vector            :inline :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

(deftype collide-edge-edge (structure)
  ((ignore        basic                    :offset-assert 0)
   (etri          collide-edge-tri         :offset-assert 4)
   (vertex-ptr    vector         2       :offset-assert 8)
   (outward       vector           :inline :offset-assert 16)
   (edge-vec-norm vector           :inline :offset-assert 32)
   )
  :method-count-assert 9
  :size-assert         #x30
  :flag-assert         #x900000030
  )

(deftype collide-edge-hold-item (structure)
  ((next       collide-edge-hold-item         :offset-assert 0)
   (rating     float                          :offset-assert 4)
   (split      int8                           :offset-assert 8)
   (edge       collide-edge-edge              :offset-assert 12)
   (center-pt  vector                 :inline :offset-assert 16)
   (outward-pt vector                 :inline :offset-assert 32)
   )
  :method-count-assert 9
  :size-assert         #x30
  :flag-assert         #x900000030
  )

(deftype collide-edge-hold-list (structure)
  ((num-allocs   uint32                    :offset-assert 0)
   (num-attempts uint32                    :offset-assert 4)
   (head         collide-edge-hold-item    :offset-assert 8)
   (items        collide-edge-hold-item  32 :inline :offset-assert 16)
   (attempts     qword   32 :inline :offset-assert 1552)
   )
  :method-count-assert 11
  :size-assert         #x810
  :flag-assert         #xb00000810
  (:methods
    (dummy-9 () none 9)
    (dummy-10 () none 10)
    )
  )

(deftype collide-edge-work (structure)
  ((ccache                       basic                          :offset-assert 0)
   (cshape                       basic                          :offset-assert 4)
   (num-verts                    uint32                         :offset-assert 8)
   (num-edges                    uint32                         :offset-assert 12)
   (num-tris                     uint32                         :offset-assert 16)
   (cache-fill-box               bounding-box           :inline :offset-assert 32)
   (within-reach-box             bounding-box           :inline :offset-assert 64)
   (within-reach-box4w           bounding-box4w         :inline :offset-assert 96)
   (search-pt                    vector                 :inline :offset-assert 128)
   (search-dir-vec               vector                 :inline :offset-assert 144)
   (max-dist-sqrd-to-outward-pt  float                          :offset-assert 160)
   (max-dir-cosa-delta           float                          :offset-assert 164)
   (split-dists                  float                2       :offset-assert 168)
   (outward-offset               vector                 :inline :offset-assert 176)
   (local-cache-fill-box         bounding-box           :inline :offset-assert 192)
   (local-within-reach-box       bounding-box           :inline :offset-assert 224)
   (local-player-spheres         sphere   12   :inline   :offset-assert 256)
   (world-player-spheres         sphere                12  :inline    :offset-assert 448)
   (local-player-hanging-spheres sphere                6   :inline    :offset 256)
   (world-player-hanging-spheres sphere                6    :inline   :offset 448)
   (local-player-leap-up-spheres sphere                6    :inline   :offset 352)
   (world-player-leap-up-spheres sphere                6    :inline   :offset 544)
   (verts                        vector      64 :inline     :offset-assert 640)
   (edges                        collide-edge-edge     96  :inline    :offset-assert 1664)
   (tris                         collide-edge-tri    48  :inline    :offset-assert 6272)
   (hold-list                    collide-edge-hold-list :inline :offset-assert 7808)
   )
  :method-count-assert 20
  :size-assert         #x2690
  :flag-assert         #x1400002690
  (:methods
    (dummy-9 () none 9)
    (dummy-10 () none 10)
    (dummy-11 () none 11)
    (dummy-12 () none 12)
    (dummy-13 () none 13)
    (dummy-14 () none 14)
    (dummy-15 () none 15)
    (dummy-16 () none 16)
    (dummy-17 () none 17)
    (dummy-18 () none 18)
    (dummy-19 () none 19)
    )
  )

(define *collide-edge-work*
    (new 'static 'collide-edge-work
         :max-dist-sqrd-to-outward-pt 37748736.000000
         :max-dir-cosa-delta (the-as float #x3f19999a)
         :split-dists (new 'static 'array float 2 1024.000000 (the-as float #x44b33333))
         :outward-offset (new 'static 'vector
                              :x (the-as float #x443126e9)
                              :y 13312.000000
                              :w 1.000000
                              )
         :local-cache-fill-box (new 'static 'bounding-box
                                    :min (new 'static 'vector
                                              :x -8192.000000
                                              :y (the-as float #xc62ccccd)
                                              :z -8192.000000
                                              :w 1.000000
                                              )
                                    :max (new 'static 'vector
                                              :x 8192.000000
                                              :y 24576.000000
                                              :z 8192.000000
                                              :w 1.000000
                                              )
                                    )
         :local-within-reach-box (new 'static 'bounding-box
                                      :min (new 'static 'vector
                                                :x -6144.000000
                                                :y (the-as float #x45a66666)
                                                :z -6144.000000
                                                :w 1.000000
                                                )
                                      :max (new 'static 'vector
                                                :x 6144.000000
                                                :y (the-as float #x462ccccd)
                                                :z 6144.000000
                                                :w 1.000000
                                                )
                                      )
         :local-player-spheres (new 'static 'inline-array sphere 12
                                    (new 'static 'sphere
                                         :x (the-as float #x44d70a3d)
                                         :y (the-as float #xc44ccccd)
                                         :w (the-as float #x44b33333)
                                         )
                                    (new 'static 'sphere
                                         :x (the-as float #x450f5c29)
                                         :y (the-as float #xc54ccccd)
                                         :w (the-as float #x44eb851f)
                                         )
                                    (new 'static 'sphere
                                         :x (the-as float #x44f5c28f)
                                         :y -6144.000000
                                         :w (the-as float #x44c28f5c)
                                         )
                                    (new 'static 'sphere
                                         :x (the-as float #x44f5c28f)
                                         :y (the-as float #xc6066666)
                                         :w (the-as float #x44c28f5c)
                                         )
                                    (new 'static 'sphere
                                         :x (the-as float #x44dc28f6)
                                         :y (the-as float #xc62ccccd)
                                         :w (the-as float #x44a8f5c3)
                                         )
                                    (new 'static 'sphere
                                         :x (the-as float #x44d1eb85)
                                         :y -13312.000000
                                         :w (the-as float #x449eb852)
                                         )
                                    (new 'static 'sphere
                                         :x (the-as float #xc43851ec)
                                         :y 4096.000000
                                         :w 3072.000000
                                         )
                                    (new 'static 'sphere
                                         :x (the-as float #xc43851ec)
                                         :y (the-as float #x45cccccd)
                                         :w 3072.000000
                                         )
                                    (new 'static 'sphere
                                         :x (the-as float #xc43851ec)
                                         :y (the-as float #x46133333)
                                         :w 3072.000000
                                         )
                                    (new 'static 'sphere
                                         :x (the-as float #x44d70a3d)
                                         :y (the-as float #x45666666)
                                         :w (the-as float #x453851ec)
                                         )
                                    (new 'static 'sphere
                                         :x (the-as float #x44d70a3d)
                                         :y (the-as float #x45b33333)
                                         :w (the-as float #x453851ec)
                                         )
                                    (new 'static 'sphere
                                         :x (the-as float #x44d70a3d)
                                         :y (the-as float #x46066666)
                                         :w (the-as float #x453851ec)
                                         )
                                    )
         )
  )

(define-perm *edge-grab-info* edge-grab-info (new 'global 'edge-grab-info))
