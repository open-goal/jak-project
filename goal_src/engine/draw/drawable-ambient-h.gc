;;-*-Lisp-*-
(in-package goal)

;; name: drawable-ambient-h.gc
;; name in dgo: drawable-ambient-h
;; dgos: GAME, ENGINE


(declare-type entity-ambient basic)
(deftype drawable-ambient (drawable)
  ((ambient entity-ambient :offset 8)
   )
  :method-count-assert 19
  :size-assert         #x20
  :flag-assert         #x1300000020
  (:methods
    (dummy-18 () none 18)
    )
  )

(defmethod inspect drawable-ambient ((obj drawable-ambient))
  (format #t "[~8x] ~A~%" obj (-> obj type))
  (format #t "~Tid: ~D~%" (-> obj id))
  (format #t "~Tbsphere: ~`vector`P~%" (-> obj bsphere))
  (format #t "~Tambient: ~A~%" (-> obj ambient))
  obj
  )

(deftype drawable-tree-ambient (drawable-tree)
  ()
  :method-count-assert 18
  :size-assert         #x24
  :flag-assert         #x1200000024
  )

(deftype drawable-inline-array-ambient (drawable-inline-array)
  ((data drawable-ambient 1 :inline)
   (pad uint8 4))
  :flag-assert #x1200000044
  )

(defmethod dummy-10 drawable-tree-ambient ((obj _type_) (arg0 drawable) (arg1 display-frame))
  0
  )

(defmethod dummy-16 drawable-tree-ambient ((obj drawable-tree-ambient) (arg0 object) (arg1 object))
  arg1
  )

(deftype level-hint (process)
  ((text-id-to-display uint32  :offset-assert 112)
   (sound-to-play      basic   :offset-assert 116)
   (trans              vector  :offset-assert 120)
   (sound-id           sound-id  :offset-assert 124)
   (mode               basic   :offset-assert 128)
   (total-time         uint64  :offset-assert 136)
   (total-off-time     uint64  :offset-assert 144)
   (last-time          uint64  :offset-assert 152)
   (voicebox           uint64  :offset-assert 160)
   )
  :heap-base #x40
  :method-count-assert 16
  :size-assert         #xa8
  :flag-assert         #x10004000a8
  (:methods
    (dummy-14 () none 14)
    (dummy-15 () none 15)
    )
  )

(defmethod inspect level-hint ((obj level-hint))
  (let ((t9-0 (method-of-type process inspect)))
   (t9-0 obj)
   )
  (format #t "~T~Ttext-id-to-display: ~D~%" (-> obj text-id-to-display))
  (format #t "~T~Tsound-to-play: ~A~%" (-> obj sound-to-play))
  (format #t "~T~Ttrans: #<vector @ #x~X>~%" (-> obj trans))
  (format #t "~T~Tsound-id: ~D~%" (-> obj sound-id))
  (format #t "~T~Tmode: ~A~%" (-> obj mode))
  (format #t "~T~Ttotal-time: ~D~%" (-> obj total-time))
  (format #t "~T~Ttotal-off-time: ~D~%" (-> obj total-off-time))
  (format #t "~T~Tlast-time: ~D~%" (-> obj last-time))
  (format #t "~T~Tvoicebox: ~D~%" (-> obj voicebox))
  obj
  )

(deftype ambient-list (structure)
  ((num-items int32       :offset-assert 0)
   (items     uint32 2048 :offset-assert 4)
   )
  :method-count-assert 9
  :size-assert         #x2004
  :flag-assert         #x900002004
  )

