;;-*-Lisp-*-
(in-package goal)

;; name: draw-node-h.gc
;; name in dgo: draw-node-h
;; dgos: GAME, ENGINE

(deftype draw-node (drawable)
  ((child-count uint8          :offset 6)
   (flags       uint8          :offset 7)
   (child       uint32         :offset 8)
   (distance    float          :offset 12)
   )
  :method-count-assert 18
  :size-assert         #x20
  :flag-assert         #x1200000020
  ;; field distance is a float printed as hex? 
  )

(deftype drawable-inline-array-node (drawable-inline-array)
  ((data draw-node 1 :inline)
   (pad uint32)
   )
  :method-count-assert 18
  :size-assert         #x44
  :flag-assert         #x1200000044
  ;;  too many basic blocks
  (:methods

    )
  )

;; the types of these fields are a guess for now.
(deftype draw-node-dma (structure)
  ((banka draw-node 32 :inline :offset-assert 0)
   (bankb draw-node 32 :inline :offset-assert 1024)
   )
  :method-count-assert 9
  :size-assert         #x800
  :flag-assert         #x900000800
  )
