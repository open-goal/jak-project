;;-*-Lisp-*-
(in-package goal)

;; name: sparticle-launcher-h.gc
;; name in dgo: sparticle-launcher-h
;; dgos: GAME, ENGINE

(deftype sp-field-init-spec (structure)
  ((field          uint16  :offset-assert 0)
   (flags          uint16  :offset-assert 2)
   (initial-value  int32   :offset-assert 4)
   (random-range   int32   :offset-assert 8)
   (random-mult    int32   :offset-assert 12)
   (initial-valuef float   :offset 4) ;; TODO - floats suck - some of these values end up being NaN - these should come before the int32 fields
   (random-rangef  float   :offset 8) ;; TODO - floats suck - some of these values end up being NaN - these should come before the int32 fields
   (random-multf   float   :offset 12) ;; TODO - floats suck - some of these values end up being NaN - these should come before the int32 fields
   (func           basic   :offset 4)
   (tex            uint32  :offset 4)
   (pntr           uint32  :offset 4)
   (sym            basic   :offset 4)
   (sound          basic   :offset 4)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype sparticle-launcher (basic)
  ((birthaccum float   :offset-assert 4)
   (soundaccum float   :offset-assert 8)
   (init-specs (inline-array sp-field-init-spec)  :offset-assert 12)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype sparticle-group-item (structure)
  ((launcher   uint32  :offset-assert   0)
   (fade-after meters  :offset-assert   4)
   (falloff-to meters  :offset-assert   8)
   (flags      uint16  :offset-assert  12)
   (period     uint16  :offset-assert  14)
   (length     uint16  :offset-assert  16)
   (offset     uint16  :offset-assert  18)
   (hour-mask  uint32  :offset-assert  20)
   (binding    uint32  :offset-assert  24)
   )
  :method-count-assert 9
  :size-assert         #x1c
  :flag-assert         #x90000001c
  )

(deftype sparticle-launch-state (structure)
  ((group-item sparticle-group-item             :offset-assert 0)
   (flags      uint16                           :offset-assert 4)
   (randomize  uint16                           :offset-assert 6)
   (origin     vector                           :offset-assert 8)
   (sprite3d   sprite-vec-data-3d               :offset-assert 12)
   (sprite     basic                            :offset-assert 16)
   (offset     uint32                           :offset-assert 20)
   (accum      float                            :offset-assert 24)
   (spawn-time uint32                           :offset-assert 28)
   (swarm      basic                :offset  20)
   (seed       uint32               :offset  24)
   (time       uint32               :offset  28)
   (spec       basic                :offset  16)
   (id         uint32               :offset  12)
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

(deftype sparticle-launch-group (basic)
  ((length          int16          :offset-assert 4)
   (duration        uint16         :offset-assert 6)
   (linger-duration uint16         :offset-assert 8)
   (flags           uint16         :offset-assert 10)
   (name            basic          :offset-assert 12)
   (launcher        uint32         :offset-assert 16)
   (bounds          sphere :inline :offset-assert 32)
   )
  :method-count-assert 10
  :size-assert         #x30
  :flag-assert         #xa00000030
  (:methods
    (dummy-9 (_type_ process) _type_ 9)
    )
  )

(deftype sparticle-launch-control (inline-array-class)
  ((group            basic           :offset-assert 16)
   (proc             basic           :offset-assert 20)
   (local-clock      int32           :offset-assert 24)
   (fade             float           :offset-assert 28)
   (matrix           int32           :offset-assert 32)
   (last-spawn-frame int32           :offset-assert 36)
   (last-spawn-time  int32           :offset-assert 40)
   (center           vector :inline  :offset-assert 48)
   (data             uint8  :dynamic :offset-assert 64)
   )
  :method-count-assert 14
  :size-assert         #x40
  :flag-assert         #xe00000040
  (:methods
    (dummy-9 () none 9)
    (dummy-10 () none 10)
    (dummy-11 () none 11)
    (dummy-12 () none 12)
    (dummy-13 () none 13)
    )
  )

(set! (-> sparticle-launch-control heap-base) (the-as uint 32))
