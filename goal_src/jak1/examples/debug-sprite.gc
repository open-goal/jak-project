

(defun open-progress ()
  (if (not *target*)
      (test-make-target))
  (activate-progress *dproc* (the progress-screen 0)))



(defun debug-dump-hud-sprite ((count int))
  (dotimes (i count)
    (let ((arr (the (inline-array sprite-vec-data-2d) (&-> *sprite-array-2d* data (* 1920 3)))))
      (format #t "----------------------~D~%" i)
      ;; first, the data
      (inspect (-> arr i))
      ;; next, adgif
      (let ((adg (-> *sprite-array-2d* adgif-data (+ 1920 i))))
        (inspect (-> adg tex0))
        (inspect (-> adg tex1))
        )
      ;; matrix
      (when (nonzero? (-> arr i matrix))
        (inspect (the vector (-> *sprite-hvdf-data* data (-> arr i matrix))))
        )
      ;; vector
      (let ((vec (the (inline-array vector) (&+ (-> *sprite-array-2d* vec-data) (* 16 3 (+ i 1920))))))
        (dotimes (j 3)
          (print (-> vec j))
          (format #t "~%")
          )
        )
      (format #t "~%")
      )
    )
  )


;; these are part-group-id-table entries for sprites that should work.
(define *test-sprite-ids* (new 'static 'boxed-array :type int32 :length 13
                               85 86 87 91 570 571 572 573 92 93 94 95 96)
        )