;;-*-Lisp-*-
(in-package goal)

#|
	This file has the game-specific implementation of the pckernel (see pckernel-h.gc and pckernel.gc).
 |#


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;; constants
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


                                            ;; version: 1.10.3.1
(defconstant PC_KERNEL_VERSION (static-pckernel-version 1 10 3 1))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;; types and enums
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


;; The Jak 1 version of the pc-settings object.
(deftype pc-settings-jak1 (pc-settings)
  (
   (skip-movies? symbol) ;; if on, enable cutscene skipping
   (subtitles? symbol) ;; if on, cutscene subtitles will show up
   (subtitle-language pc-subtitle-lang) ;; language for subtitles
   (money-starburst? symbol) ;; add a starburst to the money
   (extra-hud? symbol) ;; extra hud elements.
	 )
  )

(define *pc-settings* (the pc-settings-jak1 #f))


;; jak 1 discord rpc structure
(deftype discord-info (structure)
  ((fuel (pointer float))
   (money-total (pointer float))
   (buzzer-total (pointer float))
   (deaths (pointer int32))
   (status string)
   (level string)
   (cutscene? symbol)
   (ogreboss? symbol)
   (plant-boss? symbol)
   (racer? symbol)
   (flutflut? symbol)
   (time-of-day (pointer float))
   )
  )


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;; debug settings
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(define *fallback-text-lookup?* #t)

(define *display-bug-report* #f)

(define *mood-override-debug* #f)
(define *mood-override-table* (new 'global 'inline-array 'float 8))


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;; resets
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


(defmethod reset-misc pc-settings-jak1 ((obj pc-settings-jak1))
  "Set the default misc settings"

  ((method-of-type pc-settings reset-misc) obj)
  (set! (-> obj text-language) (the pc-subtitle-lang (scf-get-language)))
  (set! (-> obj subtitle-language) (the pc-subtitle-lang (scf-get-language)))
  (set! (-> obj skip-movies?) #t)
  (set! (-> obj subtitles?) *debug-segment*)
  (cond
    ((and (= *jak1-territory* GAME_TERRITORY_SCEE) (= (-> obj text-language) (pc-subtitle-lang english)))
      (set! (-> obj text-language) (pc-subtitle-lang uk-english))
      ;(set! (-> obj subtitle-language) (pc-subtitle-lang uk-english))
      )
    ((= *jak1-territory* GAME_TERRITORY_SCEI)
      (set! (-> obj text-language) (pc-subtitle-lang japanese))
      ;(set! (-> obj subtitle-language) (pc-subtitle-lang japanese))
      )
    (else
      ))
  (set! (-> obj money-starburst?) #f)
  (set! (-> obj extra-hud?) #f)
  (none))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;; other
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


(defun get-video-params () *video-parms*)

(defun set-reactive-controller-led! ((current-hp float) (eco-level float) (eco-kind int))
  ;; Apply LED color based on HP if enabled and if eco is not active
  (when (and (= eco-level 0.0) (-> *pc-settings* controller-hp-led?))
    (case current-hp
      ((0.0)
        (pc-set-controller-led! 0 255 0 0))
      ((1.0)
        (pc-set-controller-led! 0 255 127 0))
      ((2.0)
        (pc-set-controller-led! 0 255 255 0))
      ((3.0)
        (pc-set-controller-led! 0 0 255 0))))
  ;; Otherwise apply LED color based on eco if enabled
  (when (and (!= eco-level 0.0) (-> *pc-settings* controller-eco-led?))
    (case eco-kind
      ((2)
        (pc-set-controller-led! 0 255 0 0))
      ((3)
        (pc-set-controller-led! 0 0 0 255))
      ((1)
        (pc-set-controller-led! 0 255 255 0))
      ((4)
        (pc-set-controller-led! 0 0 255 0))))
  (none)
)
