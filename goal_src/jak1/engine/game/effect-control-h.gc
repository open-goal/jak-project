;;-*-Lisp-*-
(in-package goal)

;; name: effect-control-h.gc
;; name in dgo: effect-control-h
;; dgos: GAME, ENGINE

(define-extern effect-param->sound-spec (function sound-spec (pointer float) int sound-spec))

;; DECOMP BEGINS

(deftype effect-control (basic)
  ((process           process-drawable)
   (flags             uint32)
   (last-frame-group  art-joint-anim)
   (last-frame-num    float)
   (channel-offset    int32)
   (res               res-lump)
   (name              (pointer res-tag))
   (param             uint32)
   )
  (:methods
    (new (symbol type process-drawable) _type_)
    (effect-control-method-9 (_type_) none)
    (effect-control-method-10 (_type_ symbol float int) object)
    (effect-control-method-11 (_type_ symbol float int basic pat-surface) none)
    (effect-control-method-12 (_type_ symbol float int basic sound-name) int)
    (set-channel-offset! (_type_ int) none)
    (effect-control-method-14 (_type_ float float float) none)
    )
  )


(defmethod new effect-control ((allocation symbol) (type-to-make type) (arg0 process-drawable))
  (cond
    ((res-lump-struct (-> arg0 draw jgeo extra) 'effect-name structure)
     (let ((v0-1 (object-new allocation type-to-make (the-as int (-> type-to-make size)))))
       (set! (-> v0-1 process) arg0)
       (set! (-> v0-1 last-frame-group) #f)
       v0-1
       )
     )
    (else
      (the-as effect-control #f)
      )
    )
  )

(defmethod set-channel-offset! ((this effect-control) (arg0 int))
  (set! (-> this channel-offset) arg0)
  0
  (none)
  )
