;;-*-Lisp-*-
(in-package goal)

;; name: mood-tables.gc
;; name in dgo: mood-tables
;; dgos: GAME, ENGINE

;; DECOMP BEGINS

(defun make-light-kit ((arg0 light-group) (arg1 float) (arg2 float) (arg3 float) (arg4 float))
  (let ((s4-0 (new 'stack-no-clear 'matrix)))
    (matrix-rotate-y! s4-0 arg1)
    (let ((v1-0 (-> arg0 dir0)))
      (set! (-> v1-0 direction x) -0.612)
      (set! (-> v1-0 direction y) 0.5)
      (set! (-> v1-0 direction z) 0.612)
      (set! (-> v1-0 direction w) 0.0)
      )
    (set-vector! (-> arg0 dir0 color) 0.8 0.775 0.7 1.0)
    (set! (-> arg0 dir0 levels x) arg2)
    (let ((v1-2 (-> arg0 dir1)))
      (set! (-> v1-2 direction x) 0.612)
      (set! (-> v1-2 direction y) 0.5)
      (set! (-> v1-2 direction z) -0.612)
      (set! (-> v1-2 direction w) 0.0)
      )
    (set-vector! (-> arg0 dir1 color) 0.8 0.775 0.7 1.0)
    (set! (-> arg0 dir1 levels x) arg3)
    (vector-matrix*! (the-as vector (-> arg0 dir0)) (the-as vector (-> arg0 dir0)) s4-0)
    (vector-matrix*! (the-as vector (-> arg0 dir1)) (the-as vector (-> arg0 dir1)) s4-0)
    )
  (let ((v1-4 (-> arg0 dir2)))
    (set! (-> v1-4 direction x) 0.0)
    (set! (-> v1-4 direction y) -1.0)
    (set! (-> v1-4 direction z) 0.0)
    (set! (-> v1-4 direction w) 0.0)
    )
  (set-vector! (-> arg0 dir2 color) 0.8 0.775 0.7 1.0)
  (set! (-> arg0 dir2 levels x) arg4)
  (none)
  )

(defun make-village1-light-kit ((arg0 mood-context))
  (make-light-kit (-> arg0 light-group 1) 38229.332 0.9 0.9 0.4)
  (let ((s5-0 (-> arg0 light-group 2)))
    (make-light-kit s5-0 2730.6667 1.0 1.0 0.8)
    (let ((v1-0 (-> s5-0 dir2)))
      (set! (-> v1-0 direction x) 0.0)
      (set! (-> v1-0 direction y) -1.0)
      (set! (-> v1-0 direction z) 0.0)
      (set! (-> v1-0 direction w) 0.0)
      )
    (set-vector! (-> s5-0 dir2 color) 0.75 0.375 0.0 1.0)
    )
  (make-light-kit (-> arg0 light-group 3) 53703.11 0.9 0.9 0.5)
  (make-light-kit (-> arg0 light-group 4) 54613.332 0.9 0.9 0.4)
  (make-light-kit (-> arg0 light-group 5) 54613.332 0.9 0.9 0.4)
  (make-light-kit (-> arg0 light-group 6) 5461.3335 0.9 0.0 0.4)
  (make-light-kit (-> arg0 light-group 7) 41870.223 0.9 0.9 0.4)
  (none)
  )

(defun make-misty-light-kit ((arg0 mood-context))
  (let ((gp-0 (-> arg0 light-group 1)))
    (make-light-kit gp-0 24576.0 1.0 0.4 1.0)
    (set-vector! (-> gp-0 dir0 color) 0.75 0.3 0.0 1.0)
    (set-vector! (-> gp-0 dir2 color) 0.75 0.3 0.0 1.0)
    )
  (none)
  )

(defun make-village2-light-kit ((arg0 mood-context))
  (let ((v1-0 (-> arg0 light-group 1)))
    (let ((a0-1 (-> v1-0 dir0)))
      (set! (-> a0-1 direction x) 0.0)
      (set! (-> a0-1 direction y) 1.0)
      (set! (-> a0-1 direction z) 0.0)
      (set! (-> a0-1 direction w) 1.0)
      )
    (set-vector! (-> v1-0 dir0 color) 0.375 0.25 0.25 1.0)
    (set! (-> v1-0 dir0 levels x) 1.0)
    (let ((a0-3 (-> v1-0 dir1)))
      (set! (-> a0-3 direction x) -0.6119)
      (set! (-> a0-3 direction y) 0.5)
      (set! (-> a0-3 direction z) -0.6119)
      (set! (-> a0-3 direction w) 1.0)
      )
    (set-vector! (-> v1-0 dir1 color) 0.25 0.75 1.0 1.0)
    (set! (-> v1-0 dir1 levels x) 0.666)
    (let ((a0-5 (-> v1-0 dir2)))
      (set! (-> a0-5 direction x) 0.9961)
      (set! (-> a0-5 direction y) 0.0)
      (set! (-> a0-5 direction z) -0.0871)
      (set! (-> a0-5 direction w) 1.0)
      )
    (set-vector! (-> v1-0 dir2 color) 0.0 0.25 1.0 1.0)
    (set! (-> v1-0 dir2 levels x) 1.0)
    )
  (let ((v1-2 (-> arg0 light-group 2)))
    (let ((a0-7 (-> v1-2 dir0)))
      (set! (-> a0-7 direction x) 0.2239)
      (set! (-> a0-7 direction y) 0.5)
      (set! (-> a0-7 direction z) 0.836)
      (set! (-> a0-7 direction w) 1.0)
      )
    (set-vector! (-> v1-2 dir0 color) 0.8 0.8 0.8 1.0)
    (set! (-> v1-2 dir0 levels x) 0.7)
    (let ((a0-9 (-> v1-2 dir1)))
      (set! (-> a0-9 direction x) -0.2959)
      (set! (-> a0-9 direction y) 0.5)
      (set! (-> a0-9 direction z) -0.8133)
      (set! (-> a0-9 direction w) 1.0)
      )
    (set-vector! (-> v1-2 dir1 color) 0.8 0.8 0.8 1.0)
    (set! (-> v1-2 dir1 levels x) 0.7)
    )
  (let ((s5-0 (-> arg0 light-group 3)))
    (make-light-kit s5-0 5461.3335 1.0 0.8 0.2)
    (set-vector! (-> s5-0 dir0 color) 0.675 0.45 0.15 1.0)
    )
  (let ((s5-1 (-> arg0 light-group 4)))
    (make-light-kit s5-1 57344.0 1.0 0.8 0.2)
    (set-vector! (-> s5-1 dir0 color) 0.675 0.45 0.15 1.0)
    )
  (let ((v1-6 (-> arg0 light-group 5)))
    (let ((a0-13 (-> v1-6 dir0)))
      (set! (-> a0-13 direction x) 0.2425)
      (set! (-> a0-13 direction y) -0.9701)
      (set! (-> a0-13 direction z) 0.0)
      (set! (-> a0-13 direction w) 0.0)
      )
    (set-vector! (-> v1-6 dir0 color) 2.0 1.0 0.0 1.0)
    (set! (-> v1-6 dir1 levels x) 0.0)
    (set! (-> v1-6 dir2 levels x) 0.0)
    )
  (let ((v1-8 (-> arg0 light-group 6)))
    (set-vector! (-> v1-8 dir0 color) 1.0 0.5 0.0 1.0)
    (set-vector! (-> v1-8 dir1 color) 0.6 0.58125 0.525 1.0)
    (set! (-> v1-8 dir1 levels x) 0.0)
    (set! (-> v1-8 dir2 levels x) 0.0)
    )
  (none)
  )

(defun make-rolling-light-kit ((arg0 mood-context))
  (let ((s5-0 (-> arg0 light-group 1)))
    (make-light-kit s5-0 0.0 1.0 0.0 0.0)
    (let ((v1-0 (-> s5-0 dir0)))
      (set! (-> v1-0 direction x) 0.0)
      (set! (-> v1-0 direction y) 1.0)
      (set! (-> v1-0 direction z) 0.0)
      (set! (-> v1-0 direction w) 1.0)
      )
    (set-vector! (-> s5-0 dir0 color) 1.0 0.9 0.0 1.0)
    )
  (let ((s5-1 (-> arg0 light-group 2)))
    (make-light-kit s5-1 0.0 1.0 0.0 0.0)
    (let ((v1-2 (-> s5-1 dir0)))
      (set! (-> v1-2 direction x) 0.0)
      (set! (-> v1-2 direction y) 1.0)
      (set! (-> v1-2 direction z) 0.0)
      (set! (-> v1-2 direction w) 1.0)
      )
    (set-vector! (-> s5-1 dir0 color) 1.0 0.9 0.0 1.0)
    )
  (let ((s5-2 (-> arg0 light-group 3)))
    (make-light-kit s5-2 0.0 1.0 0.0 0.0)
    (let ((v1-4 (-> s5-2 dir0)))
      (set! (-> v1-4 direction x) 0.0)
      (set! (-> v1-4 direction y) 1.0)
      (set! (-> v1-4 direction z) 0.0)
      (set! (-> v1-4 direction w) 1.0)
      )
    (set-vector! (-> s5-2 dir0 color) 1.0 0.9 0.0 1.0)
    )
  (let ((s5-3 (-> arg0 light-group 4)))
    (make-light-kit s5-3 0.0 1.0 0.0 0.0)
    (let ((v1-6 (-> s5-3 dir0)))
      (set! (-> v1-6 direction x) 0.0)
      (set! (-> v1-6 direction y) 1.0)
      (set! (-> v1-6 direction z) 0.0)
      (set! (-> v1-6 direction w) 1.0)
      )
    (set-vector! (-> s5-3 dir0 color) 1.0 0.9 0.0 1.0)
    )
  (let ((s5-4 (-> arg0 light-group 5)))
    (make-light-kit s5-4 0.0 1.0 0.0 0.0)
    (let ((v1-8 (-> s5-4 dir0)))
      (set! (-> v1-8 direction x) 0.0)
      (set! (-> v1-8 direction y) 1.0)
      (set! (-> v1-8 direction z) 0.0)
      (set! (-> v1-8 direction w) 1.0)
      )
    (set-vector! (-> s5-4 dir0 color) 1.0 0.9 0.0 1.0)
    )
  (let ((gp-1 (-> arg0 light-group 6)))
    (make-light-kit gp-1 0.0 1.0 0.0 0.0)
    (let ((v1-10 (-> gp-1 dir0)))
      (set! (-> v1-10 direction x) 0.0)
      (set! (-> v1-10 direction y) 1.0)
      (set! (-> v1-10 direction z) 0.0)
      (set! (-> v1-10 direction w) 1.0)
      )
    (set-vector! (-> gp-1 dir0 color) 1.0 0.9 0.0 1.0)
    )
  (none)
  )

(defun make-village3-light-kit ((arg0 mood-context))
  (let ((v1-0 (-> arg0 light-group 1)))
    (let ((a1-0 (-> v1-0 dir0)))
      (set! (-> a1-0 direction x) 0.6281)
      (set! (-> a1-0 direction y) 0.7208)
      (set! (-> a1-0 direction z) 0.2929)
      (set! (-> a1-0 direction w) 1.0)
      )
    (set-vector! (-> v1-0 dir0 color) 0.5 1.0 1.0 1.0)
    (set! (-> v1-0 dir0 levels x) 1.0)
    (let ((a1-2 (-> v1-0 dir2)))
      (set! (-> a1-2 direction x) 0.0)
      (set! (-> a1-2 direction y) -1.0)
      (set! (-> a1-2 direction z) 0.0)
      (set! (-> a1-2 direction w) 1.0)
      )
    (set-vector! (-> v1-0 dir2 color) 0.625 0.375 0.1 1.0)
    )
  (let ((v1-2 (-> arg0 light-group 2)))
    (let ((a0-1 (-> v1-2 dir0)))
      (set! (-> a0-1 direction x) 0.6281)
      (set! (-> a0-1 direction y) 0.7208)
      (set! (-> a0-1 direction z) 0.2929)
      (set! (-> a0-1 direction w) 1.0)
      )
    (set-vector! (-> v1-2 dir0 color) 0.25 0.5 0.5 1.0)
    (set! (-> v1-2 dir0 levels x) 1.0)
    (let ((a0-3 (-> v1-2 dir2)))
      (set! (-> a0-3 direction x) 0.0)
      (set! (-> a0-3 direction y) -1.0)
      (set! (-> a0-3 direction z) 0.0)
      (set! (-> a0-3 direction w) 1.0)
      )
    (set-vector! (-> v1-2 dir2 color) 0.625 0.375 0.1 1.0)
    )
  (none)
  )

(defun update-mood-shadow-direction ((arg0 mood-lights))
  (let ((v1-0 (-> arg0 shadow)))
    (set! (-> v1-0 x) (- (-> arg0 direction x)))
    (set! (-> v1-0 y) (- (-> arg0 direction y)))
    (set! (-> v1-0 z) (- (-> arg0 direction z)))
    (when (< (-> arg0 direction y) 0.9063)
      (let* ((f0-7 0.4226)
             (f1-1 (-> v1-0 x))
             (f1-3 (* f1-1 f1-1))
             (f2-0 (-> v1-0 z))
             (f0-8 (/ f0-7 (sqrtf (+ f1-3 (* f2-0 f2-0)))))
             )
        (set! (-> v1-0 x) (* (-> v1-0 x) f0-8))
        (set! (-> v1-0 y) -0.9063)
        (set! (-> v1-0 z) (* (-> v1-0 z) f0-8))
        )
      )
    )
  0
  (none)
  )

(defun update-mood-erase-color ((arg0 mood-fog) (arg1 mood-lights))
  (let ((s5-0 (-> arg0 erase-color)))
    (vector+float*! s5-0 (-> arg1 amb-color) (-> arg1 lgt-color) (-> arg1 direction y))
    (vector*! s5-0 s5-0 (-> *ocean-map-village2* far-color))
    (set! (-> s5-0 x) (* 2.0 (-> s5-0 x)))
    (set! (-> s5-0 y) (* 2.0 (-> s5-0 y)))
    (set! (-> s5-0 z) (* 2.0 (-> s5-0 z)))
    (let ((f0-8 (* 0.003921569 (- 255.0 (-> arg0 fog-dists w)))))
      (vector4-lerp! s5-0 s5-0 (-> arg0 fog-color) f0-8)
      )
    )
  0
  (none)
  )

(defun update-mood-erase-color2 ((arg0 mood-fog) (arg1 mood-lights) (arg2 mood-lights))
  (let ((s5-0 (-> arg0 erase-color)))
    (let ((s4-0 (new 'stack-no-clear 'mood-fog)))
      (set! (-> s4-0 fog-color quad) (the-as uint128 0))
      (vector+float*! s5-0 (-> arg1 amb-color) (-> arg1 lgt-color) (-> arg1 direction y))
      (vector*! s5-0 s5-0 (-> *ocean-map-village2* far-color))
      (set! (-> s5-0 x) (* 2.0 (-> s5-0 x)))
      (set! (-> s5-0 y) (* 2.0 (-> s5-0 y)))
      (set! (-> s5-0 z) (* 2.0 (-> s5-0 z)))
      (vector+float*! (the-as vector s4-0) (-> arg2 amb-color) (-> arg2 lgt-color) (-> arg2 direction y))
      (vector*! (the-as vector s4-0) (the-as vector s4-0) (-> *ocean-map-village2* far-color))
      (set! (-> s4-0 fog-color x) (* 2.0 (-> s4-0 fog-color x)))
      (set! (-> s4-0 fog-color y) (* 2.0 (-> s4-0 fog-color y)))
      (set! (-> s4-0 fog-color z) (* 2.0 (-> s4-0 fog-color z)))
      (vector4-lerp! s5-0 s5-0 (the-as vector s4-0) 0.5)
      )
    (let ((f0-15 (* 0.003921569 (- 255.0 (-> arg0 fog-dists w)))))
      (vector4-lerp! s5-0 s5-0 (-> arg0 fog-color) f0-15)
      )
    )
  0
  (none)
  )

(define *default-interp-table*
  (new 'static 'sky-color-day
    :hour (new 'static 'inline-array sky-color-hour 24
      (new 'static 'sky-color-hour :snapshot1 6 :snapshot2 7 :morph-start 0.2 :morph-end 0.4)
      (new 'static 'sky-color-hour :snapshot1 6 :snapshot2 7 :morph-start 0.4 :morph-end 0.6)
      (new 'static 'sky-color-hour :snapshot1 6 :snapshot2 7 :morph-start 0.6 :morph-end 0.8)
      (new 'static 'sky-color-hour :snapshot1 6 :snapshot2 7 :morph-start 0.8 :morph-end 0.99)
      (new 'static 'sky-color-hour :snapshot2 7 :morph-start 0.99 :morph-end 0.8)
      (new 'static 'sky-color-hour :snapshot2 7 :morph-start 0.8 :morph-end 0.6)
      (new 'static 'sky-color-hour :snapshot2 7 :morph-start 0.6)
      (new 'static 'sky-color-hour :snapshot2 1 :morph-end 0.5)
      (new 'static 'sky-color-hour :snapshot2 1 :morph-start 0.5 :morph-end 0.99)
      (new 'static 'sky-color-hour :snapshot1 2 :snapshot2 1 :morph-start 0.99 :morph-end 0.66)
      (new 'static 'sky-color-hour :snapshot1 2 :snapshot2 1 :morph-start 0.66 :morph-end 0.33)
      (new 'static 'sky-color-hour :snapshot1 2 :snapshot2 1 :morph-start 0.33)
      (new 'static 'sky-color-hour :snapshot1 2 :snapshot2 3 :morph-end 0.33)
      (new 'static 'sky-color-hour :snapshot1 2 :snapshot2 3 :morph-start 0.33 :morph-end 0.66)
      (new 'static 'sky-color-hour :snapshot1 2 :snapshot2 3 :morph-start 0.66 :morph-end 0.99)
      (new 'static 'sky-color-hour :snapshot1 4 :snapshot2 3 :morph-start 0.99 :morph-end 0.75)
      (new 'static 'sky-color-hour :snapshot1 4 :snapshot2 3 :morph-start 0.75 :morph-end 0.5)
      (new 'static 'sky-color-hour :snapshot1 4 :snapshot2 3 :morph-start 0.5)
      (new 'static 'sky-color-hour :snapshot1 4 :snapshot2 5 :morph-end 0.99)
      (new 'static 'sky-color-hour :snapshot1 6 :snapshot2 5 :morph-start 0.99 :morph-end 0.75)
      (new 'static 'sky-color-hour :snapshot1 6 :snapshot2 5 :morph-start 0.75 :morph-end 0.5)
      (new 'static 'sky-color-hour :snapshot1 6 :snapshot2 5 :morph-start 0.5 :morph-end 0.25)
      (new 'static 'sky-color-hour :snapshot1 6 :snapshot2 5 :morph-start 0.25)
      (new 'static 'sky-color-hour :snapshot1 6 :snapshot2 7 :morph-end 0.2)
      )
    )
  )

(define *village1-palette-interp-table*
  (new 'static 'sky-color-day
    :hour (new 'static 'inline-array sky-color-hour 24
      (new 'static 'sky-color-hour :snapshot1 6 :snapshot2 7 :morph-start 0.2 :morph-end 0.4)
      (new 'static 'sky-color-hour :snapshot1 6 :snapshot2 7 :morph-start 0.4 :morph-end 0.6)
      (new 'static 'sky-color-hour :snapshot1 6 :snapshot2 7 :morph-start 0.6 :morph-end 0.8)
      (new 'static 'sky-color-hour :snapshot1 6 :snapshot2 7 :morph-start 0.8 :morph-end 0.99)
      (new 'static 'sky-color-hour :snapshot2 7 :morph-start 0.99 :morph-end 0.8)
      (new 'static 'sky-color-hour :snapshot2 7 :morph-start 0.8 :morph-end 0.6)
      (new 'static 'sky-color-hour :snapshot2 7 :morph-start 0.6)
      (new 'static 'sky-color-hour :snapshot2 1 :morph-end 0.5)
      (new 'static 'sky-color-hour :snapshot2 1 :morph-start 0.5 :morph-end 0.99)
      (new 'static 'sky-color-hour :snapshot1 2 :snapshot2 1 :morph-start 0.99 :morph-end 0.66)
      (new 'static 'sky-color-hour :snapshot1 2 :snapshot2 1 :morph-start 0.66 :morph-end 0.33)
      (new 'static 'sky-color-hour :snapshot1 2 :snapshot2 1 :morph-start 0.33)
      (new 'static 'sky-color-hour :snapshot1 2 :snapshot2 3 :morph-end 0.33)
      (new 'static 'sky-color-hour :snapshot1 2 :snapshot2 3 :morph-start 0.33 :morph-end 0.66)
      (new 'static 'sky-color-hour :snapshot1 2 :snapshot2 3 :morph-start 0.66 :morph-end 0.99)
      (new 'static 'sky-color-hour :snapshot1 4 :snapshot2 3 :morph-start 0.99 :morph-end 0.75)
      (new 'static 'sky-color-hour :snapshot1 4 :snapshot2 3 :morph-start 0.75 :morph-end 0.5)
      (new 'static 'sky-color-hour :snapshot1 4 :snapshot2 3 :morph-start 0.5)
      (new 'static 'sky-color-hour :snapshot1 4 :snapshot2 6 :morph-end 0.75)
      (new 'static 'sky-color-hour :snapshot1 4 :snapshot2 6 :morph-start 0.75 :morph-end 0.82)
      (new 'static 'sky-color-hour :snapshot1 4 :snapshot2 6 :morph-start 0.82 :morph-end 0.88)
      (new 'static 'sky-color-hour :snapshot1 4 :snapshot2 6 :morph-start 0.88 :morph-end 0.94)
      (new 'static 'sky-color-hour :snapshot1 4 :snapshot2 6 :morph-start 0.94 :morph-end 0.99)
      (new 'static 'sky-color-hour :snapshot1 6 :snapshot2 7 :morph-end 0.2)
      )
    )
  )

(define *misty-palette-interp-table*
  (new 'static 'sky-color-day
    :hour (new 'static 'inline-array sky-color-hour 24
      (new 'static 'sky-color-hour :snapshot1 1 :morph-start 0.04 :morph-end 0.08)
      (new 'static 'sky-color-hour :snapshot1 1 :morph-start 0.08 :morph-end 0.12)
      (new 'static 'sky-color-hour :snapshot1 1 :morph-start 0.12 :morph-end 0.16)
      (new 'static 'sky-color-hour :snapshot1 1 :morph-start 0.16 :morph-end 0.2)
      (new 'static 'sky-color-hour :snapshot1 1 :morph-start 0.2 :morph-end 0.23)
      (new 'static 'sky-color-hour :snapshot1 1 :morph-start 0.23 :morph-end 0.25)
      (new 'static 'sky-color-hour :snapshot1 1 :morph-start 0.25 :morph-end 0.75)
      (new 'static 'sky-color-hour :snapshot1 1 :morph-start 0.75 :morph-end 0.8)
      (new 'static 'sky-color-hour :snapshot1 1 :morph-start 0.8 :morph-end 0.85)
      (new 'static 'sky-color-hour :snapshot1 1 :morph-start 0.85 :morph-end 0.9)
      (new 'static 'sky-color-hour :snapshot1 1 :morph-start 0.9 :morph-end 0.95)
      (new 'static 'sky-color-hour :snapshot1 1 :morph-start 0.95 :morph-end 0.99)
      (new 'static 'sky-color-hour :snapshot1 1 :morph-start 0.99 :morph-end 0.96)
      (new 'static 'sky-color-hour :snapshot1 1 :morph-start 0.96 :morph-end 0.92)
      (new 'static 'sky-color-hour :snapshot1 1 :morph-start 0.92 :morph-end 0.88)
      (new 'static 'sky-color-hour :snapshot1 1 :morph-start 0.88 :morph-end 0.84)
      (new 'static 'sky-color-hour :snapshot1 1 :morph-start 0.84 :morph-end 0.8)
      (new 'static 'sky-color-hour :snapshot1 1 :morph-start 0.8 :morph-end 0.75)
      (new 'static 'sky-color-hour :snapshot1 1 :morph-start 0.75 :morph-end 0.25)
      (new 'static 'sky-color-hour :snapshot1 1 :morph-start 0.25 :morph-end 0.18)
      (new 'static 'sky-color-hour :snapshot1 1 :morph-start 0.18 :morph-end 0.12)
      (new 'static 'sky-color-hour :snapshot1 1 :morph-start 0.12 :morph-end 0.06)
      (new 'static 'sky-color-hour :snapshot1 1 :morph-start 0.06)
      (new 'static 'sky-color-hour :snapshot1 1 :morph-end 0.04)
      )
    )
  )

(define *firecanyon-palette-interp-table*
  (new 'static 'sky-color-day
    :hour (new 'static 'inline-array sky-color-hour 24
      (new 'static 'sky-color-hour :snapshot1 3 :morph-end 0.08)
      (new 'static 'sky-color-hour :snapshot1 3 :morph-start 0.08 :morph-end 0.12)
      (new 'static 'sky-color-hour :snapshot1 3 :morph-start 0.12 :morph-end 0.16)
      (new 'static 'sky-color-hour :snapshot1 3 :morph-start 0.16 :morph-end 0.2)
      (new 'static 'sky-color-hour :snapshot1 3 :morph-start 0.2 :morph-end 0.23)
      (new 'static 'sky-color-hour :snapshot1 3 :morph-start 0.23 :morph-end 0.25)
      (new 'static 'sky-color-hour :snapshot1 3 :morph-start 0.25 :morph-end 0.99)
      (new 'static 'sky-color-hour :snapshot1 1 :morph-start 0.99 :morph-end 0.5)
      (new 'static 'sky-color-hour :snapshot1 1 :morph-start 0.5 :morph-end 0.38)
      (new 'static 'sky-color-hour :snapshot1 1 :morph-start 0.38 :morph-end 0.26)
      (new 'static 'sky-color-hour :snapshot1 1 :morph-start 0.26 :morph-end 0.22)
      (new 'static 'sky-color-hour :snapshot1 1 :morph-start 0.22)
      (new 'static 'sky-color-hour :snapshot1 1 :snapshot2 2 :morph-end 0.1)
      (new 'static 'sky-color-hour :snapshot1 1 :snapshot2 2 :morph-start 0.1 :morph-end 0.2)
      (new 'static 'sky-color-hour :snapshot1 1 :snapshot2 2 :morph-start 0.2 :morph-end 0.3)
      (new 'static 'sky-color-hour :snapshot1 1 :snapshot2 2 :morph-start 0.3 :morph-end 0.4)
      (new 'static 'sky-color-hour :snapshot1 1 :snapshot2 2 :morph-start 0.4 :morph-end 0.5)
      (new 'static 'sky-color-hour :snapshot1 1 :snapshot2 2 :morph-start 0.5 :morph-end 0.99)
      (new 'static 'sky-color-hour :snapshot1 3 :snapshot2 2 :morph-start 0.99 :morph-end 0.25)
      (new 'static 'sky-color-hour :snapshot1 3 :snapshot2 2 :morph-start 0.25 :morph-end 0.18)
      (new 'static 'sky-color-hour :snapshot1 3 :snapshot2 2 :morph-start 0.18 :morph-end 0.12)
      (new 'static 'sky-color-hour :snapshot1 3 :snapshot2 2 :morph-start 0.12 :morph-end 0.06)
      (new 'static 'sky-color-hour :snapshot1 3 :snapshot2 2 :morph-start 0.06)
      (new 'static 'sky-color-hour :snapshot1 3 :morph-end 0.04)
      )
    )
  )

(define *rolling-palette-interp-table*
  (new 'static 'sky-color-day
    :hour (new 'static 'inline-array sky-color-hour 24
      (new 'static 'sky-color-hour :snapshot1 2 :snapshot2 3 :morph-start 0.2 :morph-end 0.4)
      (new 'static 'sky-color-hour :snapshot1 2 :snapshot2 3 :morph-start 0.4 :morph-end 0.6)
      (new 'static 'sky-color-hour :snapshot1 2 :snapshot2 3 :morph-start 0.6 :morph-end 0.8)
      (new 'static 'sky-color-hour :snapshot1 2 :snapshot2 3 :morph-start 0.8 :morph-end 0.99)
      (new 'static 'sky-color-hour :snapshot2 3 :morph-start 0.99 :morph-end 0.88)
      (new 'static 'sky-color-hour :snapshot2 3 :morph-start 0.88 :morph-end 0.75)
      (new 'static 'sky-color-hour :snapshot2 3 :morph-start 0.75 :morph-end 0.25)
      (new 'static 'sky-color-hour :snapshot2 3 :morph-start 0.25 :morph-end 0.12)
      (new 'static 'sky-color-hour :snapshot2 3 :morph-start 0.12)
      (new 'static 'sky-color-hour :snapshot2 1 :morph-end 0.16)
      (new 'static 'sky-color-hour :snapshot2 1 :morph-start 0.16 :morph-end 0.34)
      (new 'static 'sky-color-hour :snapshot2 1 :morph-start 0.34 :morph-end 0.5)
      (new 'static 'sky-color-hour :snapshot2 1 :morph-start 0.5 :morph-end 0.66)
      (new 'static 'sky-color-hour :snapshot2 1 :morph-start 0.66 :morph-end 0.84)
      (new 'static 'sky-color-hour :snapshot2 1 :morph-start 0.84 :morph-end 0.99)
      (new 'static 'sky-color-hour :snapshot1 2 :snapshot2 1 :morph-start 0.99 :morph-end 0.84)
      (new 'static 'sky-color-hour :snapshot1 2 :snapshot2 1 :morph-start 0.84 :morph-end 0.8)
      (new 'static 'sky-color-hour :snapshot1 2 :snapshot2 1 :morph-start 0.8 :morph-end 0.75)
      (new 'static 'sky-color-hour :snapshot1 2 :snapshot2 1 :morph-start 0.75 :morph-end 0.25)
      (new 'static 'sky-color-hour :snapshot1 2 :snapshot2 1 :morph-start 0.25 :morph-end 0.17)
      (new 'static 'sky-color-hour :snapshot1 2 :snapshot2 1 :morph-start 0.17 :morph-end 0.12)
      (new 'static 'sky-color-hour :snapshot1 2 :snapshot2 1 :morph-start 0.12 :morph-end 0.06)
      (new 'static 'sky-color-hour :snapshot1 2 :snapshot2 1 :morph-start 0.06)
      (new 'static 'sky-color-hour :snapshot1 2 :snapshot2 3 :morph-end 0.2)
      )
    )
  )

(define *village2-sky-texture-table*
  (new 'static 'sky-color-day
    :hour (new 'static 'inline-array sky-color-hour 24
      (new 'static 'sky-color-hour :snapshot1 1 :snapshot2 4 :morph-start 0.2 :morph-end 0.4)
      (new 'static 'sky-color-hour :snapshot1 1 :snapshot2 4 :morph-start 0.4 :morph-end 0.6)
      (new 'static 'sky-color-hour :snapshot1 1 :snapshot2 4 :morph-start 0.6 :morph-end 0.8)
      (new 'static 'sky-color-hour :snapshot1 1 :snapshot2 4 :morph-start 0.8 :morph-end 0.99)
      (new 'static 'sky-color-hour :snapshot1 5 :snapshot2 4 :morph-start 0.99 :morph-end 0.8)
      (new 'static 'sky-color-hour :snapshot1 5 :snapshot2 4 :morph-start 0.8 :morph-end 0.6)
      (new 'static 'sky-color-hour :snapshot1 5 :snapshot2 4 :morph-start 0.6)
      (new 'static 'sky-color-hour :snapshot1 5 :snapshot2 6 :morph-end 0.5)
      (new 'static 'sky-color-hour :snapshot1 5 :snapshot2 6 :morph-start 0.5 :morph-end 0.99)
      (new 'static 'sky-color-hour :snapshot2 6 :morph-start 0.99 :morph-end 0.66)
      (new 'static 'sky-color-hour :snapshot2 6 :morph-start 0.66 :morph-end 0.33)
      (new 'static 'sky-color-hour :snapshot2 6 :morph-start 0.33)
      (new 'static 'sky-color-hour :snapshot2 6 :morph-end 0.33)
      (new 'static 'sky-color-hour :snapshot2 6 :morph-start 0.33 :morph-end 0.66)
      (new 'static 'sky-color-hour :snapshot2 6 :morph-start 0.66 :morph-end 0.99)
      (new 'static 'sky-color-hour :snapshot1 7 :snapshot2 6 :morph-start 0.99 :morph-end 0.75)
      (new 'static 'sky-color-hour :snapshot1 7 :snapshot2 6 :morph-start 0.75 :morph-end 0.5)
      (new 'static 'sky-color-hour :snapshot1 7 :snapshot2 6 :morph-start 0.5)
      (new 'static 'sky-color-hour :snapshot1 7 :snapshot2 1 :morph-end 0.75)
      (new 'static 'sky-color-hour :snapshot1 7 :snapshot2 1 :morph-start 0.75 :morph-end 0.82)
      (new 'static 'sky-color-hour :snapshot1 7 :snapshot2 1 :morph-start 0.82 :morph-end 0.88)
      (new 'static 'sky-color-hour :snapshot1 7 :snapshot2 1 :morph-start 0.88 :morph-end 0.94)
      (new 'static 'sky-color-hour :snapshot1 7 :snapshot2 1 :morph-start 0.94 :morph-end 0.99)
      (new 'static 'sky-color-hour :snapshot1 1 :snapshot2 4 :morph-end 0.2)
      )
    )
  )

(define *finalboss-interp-table*
  (new 'static 'sky-color-day
    :hour (new 'static 'inline-array sky-color-hour 24
      (new 'static 'sky-color-hour :snapshot1 6 :snapshot2 7 :morph-start 0.2 :morph-end 0.4)
      (new 'static 'sky-color-hour :snapshot1 6 :snapshot2 7 :morph-start 0.4 :morph-end 0.6)
      (new 'static 'sky-color-hour :snapshot1 6 :snapshot2 7 :morph-start 0.6 :morph-end 0.8)
      (new 'static 'sky-color-hour :snapshot1 6 :snapshot2 7 :morph-start 0.8 :morph-end 0.99)
      (new 'static 'sky-color-hour :snapshot2 7 :morph-start 0.99 :morph-end 0.8)
      (new 'static 'sky-color-hour :snapshot2 7 :morph-start 0.8 :morph-end 0.6)
      (new 'static 'sky-color-hour :snapshot2 7 :morph-start 0.6)
      (new 'static 'sky-color-hour :snapshot2 1 :morph-end 0.5)
      (new 'static 'sky-color-hour :snapshot2 1 :morph-start 0.5 :morph-end 0.99)
      (new 'static 'sky-color-hour :snapshot1 2 :snapshot2 1 :morph-start 0.99 :morph-end 0.66)
      (new 'static 'sky-color-hour :snapshot1 2 :snapshot2 1 :morph-start 0.66 :morph-end 0.33)
      (new 'static 'sky-color-hour :snapshot1 2 :snapshot2 1 :morph-start 0.33)
      (new 'static 'sky-color-hour :snapshot1 2 :snapshot2 1 :morph-end 0.33)
      (new 'static 'sky-color-hour :snapshot1 2 :snapshot2 1 :morph-start 0.33 :morph-end 0.66)
      (new 'static 'sky-color-hour :snapshot1 2 :snapshot2 1 :morph-start 0.66 :morph-end 0.99)
      (new 'static 'sky-color-hour :snapshot1 4 :snapshot2 1 :morph-start 0.99 :morph-end 0.75)
      (new 'static 'sky-color-hour :snapshot1 4 :snapshot2 1 :morph-start 0.75 :morph-end 0.5)
      (new 'static 'sky-color-hour :snapshot1 4 :snapshot2 1 :morph-start 0.5)
      (new 'static 'sky-color-hour :snapshot1 4 :snapshot2 5 :morph-end 0.99)
      (new 'static 'sky-color-hour :snapshot1 6 :snapshot2 5 :morph-start 0.99 :morph-end 0.75)
      (new 'static 'sky-color-hour :snapshot1 6 :snapshot2 5 :morph-start 0.75 :morph-end 0.5)
      (new 'static 'sky-color-hour :snapshot1 6 :snapshot2 5 :morph-start 0.5 :morph-end 0.25)
      (new 'static 'sky-color-hour :snapshot1 6 :snapshot2 5 :morph-start 0.25)
      (new 'static 'sky-color-hour :snapshot1 6 :snapshot2 7 :morph-end 0.2)
      )
    )
  )

(define *village1-mood-fog-table*
  (new 'static 'mood-fog-table :data (new 'static 'inline-array mood-fog 8
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 160.0 :y 150.0 :z 200.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 6717440.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 150.0 :y 165.0 :z 220.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 6717440.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 128.0 :y 180.0 :z 243.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 6717440.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 150.0 :y 165.0 :z 220.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 6717440.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 160.0 :y 150.0 :z 200.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 6717440.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 16.0 :y 32.0 :z 100.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 6717440.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 4984832.0 :z 255.0 :w 51.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :y 80.0 :z 64.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 3690496.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       )
                               )
  )

(define *village1-mood-lights-table*
  (new 'static 'mood-lights-table :data (new 'static 'inline-array mood-lights 8
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x -0.066987306 :y 0.25000003 :z 0.9659258)
                                            :lgt-color (new 'static 'vector :x 1.558 :y 1.454 :z 0.228 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.4 :y 0.266 :z 0.6 :w 1.0)
                                            :shadow (new 'static 'vector :x -0.066987306 :y 0.25000003 :z 0.9659258)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x -0.1830127 :y 0.6830127 :z 0.70710677)
                                            :lgt-color (new 'static 'vector :x 1.632 :y 1.586 :z 1.428 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.387 :y 0.387 :z 0.475 :w 1.0)
                                            :shadow (new 'static 'vector :x -0.1830127 :y 0.6830127 :z 0.70710677)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x -0.25881904 :y 0.9659258)
                                            :lgt-color (new 'static 'vector :x 1.644 :y 1.598 :z 1.438 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.362 :y 0.362 :z 0.425 :w 1.0)
                                            :shadow (new 'static 'vector :x -0.25881904 :y 0.9659258)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x -0.1830127 :y 0.6830127 :z -0.70710677)
                                            :lgt-color (new 'static 'vector :x 1.632 :y 1.586 :z 1.428 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.387 :y 0.387 :z 0.475 :w 1.0)
                                            :shadow (new 'static 'vector :x -0.1830127 :y 0.6830127 :z -0.70710677)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x -0.066987306 :y 0.25000003 :z -0.9659258)
                                            :lgt-color (new 'static 'vector :x 1.646 :y 1.118 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.32 :y 0.35 :z 0.6 :w 1.0)
                                            :shadow (new 'static 'vector :x -0.066987306 :y 0.25000003 :z -0.9659258)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :y 1.0)
                                            :lgt-color (new 'static 'vector :x 0.25 :y 0.5 :z 1.0 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.31 :y 0.29 :z 0.35 :w 1.0)
                                            :shadow (new 'static 'vector :x 0.8365163 :y 0.4829629 :z 0.25881907)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x 0.8365163 :y 0.4829629 :z 0.25881907)
                                            :lgt-color (new 'static 'vector :x 0.192 :y 0.256 :z 0.961 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.383 :y 0.439 :z 0.7 :w 1.0)
                                            :shadow (new 'static 'vector :x 0.8365163 :y 0.4829629 :z 0.25881907)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x 0.354 :y 0.866 :z 0.354)
                                            :lgt-color (new 'static 'vector :x 0.0495 :y 0.62075 :z 0.326 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.25 :y 0.439 :z 0.7 :w 1.0)
                                            :shadow (new 'static 'vector :x 0.5393 :y 0.7652 :z -0.3514)
                                            )
                                          )
                                  )
  )

(update-mood-shadow-direction (the-as mood-lights (-> *village1-mood-lights-table* data)))

(update-mood-shadow-direction (-> *village1-mood-lights-table* data 1))

(update-mood-shadow-direction (-> *village1-mood-lights-table* data 2))

(update-mood-shadow-direction (-> *village1-mood-lights-table* data 3))

(update-mood-shadow-direction (-> *village1-mood-lights-table* data 4))

(update-mood-shadow-direction (-> *village1-mood-lights-table* data 5))

(update-mood-shadow-direction (-> *village1-mood-lights-table* data 6))

(update-mood-shadow-direction (-> *village1-mood-lights-table* data 7))

(define *village1-mood-sun-table*
  (new 'static 'mood-sun-table :data (new 'static 'inline-array mood-sun 8
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :x 255.0 :y 128.0 :w 128.0)
                                         :env-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 255.0)
                                         )
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
                                         :env-color (new 'static 'vector :x 255.0 :y 255.0 :z 255.0 :w 255.0)
                                         )
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
                                         :env-color (new 'static 'vector :x 255.0 :y 255.0 :z 255.0 :w 255.0)
                                         )
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
                                         :env-color (new 'static 'vector :x 255.0 :y 255.0 :z 255.0 :w 255.0)
                                         )
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :x 255.0 :y 128.0 :w 128.0)
                                         :env-color (new 'static 'vector :x 255.0 :y 196.0 :z 64.0 :w 255.0)
                                         )
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
                                         :env-color (new 'static 'vector :x 96.0 :y 96.0 :z 196.0 :w 255.0)
                                         )
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
                                         :env-color (new 'static 'vector :x 64.0 :y 64.0 :z 150.0 :w 255.0)
                                         )
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
                                         :env-color (new 'static 'vector :x 64.0 :y 150.0 :z 196.0 :w 255.0)
                                         )
                                       )
                               )
  )

(define *training-mood-fog-table*
  (new 'static 'mood-fog-table :data (new 'static 'inline-array mood-fog 8
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 160.0 :y 150.0 :z 200.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 10240000.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 150.0 :y 165.0 :z 220.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 10240000.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 128.0 :y 180.0 :z 243.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 10240000.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 150.0 :y 165.0 :z 220.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 10240000.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 160.0 :y 150.0 :z 200.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 10240000.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 16.0 :y 32.0 :z 100.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 10240000.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 10240000.0 :z 255.0 :w 51.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :y 80.0 :z 64.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 10240000.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       )
                               )
  )

(define *snow-mood-fog-table*
  (new 'static 'mood-fog-table :data (new 'static 'inline-array mood-fog 8
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 210.0 :y 183.0 :z 160.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 819200.0 :y 2662400.0 :z 255.0 :w 51.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 190.25 :y 198.0 :z 195.25 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 819200.0 :y 2662400.0 :z 255.0 :w 51.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 180.5 :y 203.0 :z 220.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 819200.0 :y 2662400.0 :z 255.0 :w 51.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 192.75 :y 190.5 :z 197.75 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 819200.0 :y 2662400.0 :z 255.0 :w 51.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 205.0 :y 178.0 :z 175.5 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 819200.0 :y 2662400.0 :z 255.0 :w 51.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 48.0 :y 44.0 :z 64.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 819200.0 :y 2662400.0 :z 255.0 :w 51.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 8.0 :y 16.0 :z 32.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 819200.0 :y 2662400.0 :z 255.0 :w 51.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 16.0 :y 64.0 :z 60.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 819200.0 :y 2662400.0 :z 255.0 :w 51.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       )
                               )
  )

(define *snow-mood-lights-table*
  (new 'static 'mood-lights-table :data (new 'static 'inline-array mood-lights 8
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x -0.067 :y 0.25 :z 0.966)
                                            :lgt-color (new 'static 'vector :x 0.943 :y 0.88 :z 0.137 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.449 :y 0.35 :z 0.599 :w 1.0)
                                            :shadow (new 'static 'vector :x -0.066987306 :y 0.25000003 :z 0.9659258)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x -0.259 :y 0.966)
                                            :lgt-color (new 'static 'vector :x 0.66 :y 0.436 :z 0.291 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.358 :y 0.575 :z 0.716 :w 1.0)
                                            :shadow (new 'static 'vector :x -0.25881904 :y 0.9659258)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x -0.067 :y 0.25 :z -0.966)
                                            :lgt-color (new 'static 'vector :x 1.056 :y 0.747 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.383 :y 0.366 :z 0.599 :w 1.0)
                                            :shadow (new 'static 'vector :x -0.066987306 :y 0.25000003 :z -0.9659258)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x 0.866 :y 0.5)
                                            :lgt-color (new 'static 'vector :x 0.067 :y 0.089 :z 0.333 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.304 :y 0.409 :z 0.76 :w 1.0)
                                            :shadow (new 'static 'vector :x 0.8365163 :y 0.4829629 :z 0.25881907)
                                            )
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          )
                                  )
  )

(update-mood-shadow-direction (the-as mood-lights (-> *snow-mood-lights-table* data)))

(update-mood-shadow-direction (-> *snow-mood-lights-table* data 1))

(update-mood-shadow-direction (-> *snow-mood-lights-table* data 2))

(update-mood-shadow-direction (-> *snow-mood-lights-table* data 3))

(update-mood-erase-color
  (the-as mood-fog (-> *snow-mood-fog-table* data))
  (the-as mood-lights (-> *snow-mood-lights-table* data))
  )

(update-mood-erase-color (-> *snow-mood-fog-table* data 2) (-> *snow-mood-lights-table* data 1))

(update-mood-erase-color (-> *snow-mood-fog-table* data 4) (-> *snow-mood-lights-table* data 2))

(update-mood-erase-color (-> *snow-mood-fog-table* data 6) (-> *snow-mood-lights-table* data 3))

(update-mood-erase-color2
  (-> *snow-mood-fog-table* data 1)
  (the-as mood-lights (-> *snow-mood-lights-table* data))
  (-> *snow-mood-lights-table* data 1)
  )

(update-mood-erase-color2
  (-> *snow-mood-fog-table* data 3)
  (-> *snow-mood-lights-table* data 1)
  (-> *snow-mood-lights-table* data 2)
  )

(update-mood-erase-color2
  (-> *snow-mood-fog-table* data 5)
  (-> *snow-mood-lights-table* data 2)
  (-> *snow-mood-lights-table* data 3)
  )

(update-mood-erase-color2
  (-> *snow-mood-fog-table* data 7)
  (-> *snow-mood-lights-table* data 3)
  (the-as mood-lights (-> *snow-mood-lights-table* data))
  )

(vector4-lerp!
  (-> *snow-mood-fog-table* data 0 erase-color)
  (-> *snow-mood-fog-table* data 0 erase-color)
  (the-as vector (-> *snow-mood-fog-table* data))
  0.41
  )

(vector4-lerp!
  (-> *snow-mood-fog-table* data 1 erase-color)
  (-> *snow-mood-fog-table* data 1 erase-color)
  (the-as vector (-> *snow-mood-fog-table* data 1))
  0.41
  )

(vector4-lerp!
  (-> *snow-mood-fog-table* data 2 erase-color)
  (-> *snow-mood-fog-table* data 2 erase-color)
  (the-as vector (-> *snow-mood-fog-table* data 2))
  0.41
  )

(vector4-lerp!
  (-> *snow-mood-fog-table* data 3 erase-color)
  (-> *snow-mood-fog-table* data 3 erase-color)
  (the-as vector (-> *snow-mood-fog-table* data 3))
  0.41
  )

(vector4-lerp!
  (-> *snow-mood-fog-table* data 4 erase-color)
  (-> *snow-mood-fog-table* data 4 erase-color)
  (the-as vector (-> *snow-mood-fog-table* data 4))
  0.41
  )

(vector4-lerp!
  (-> *snow-mood-fog-table* data 5 erase-color)
  (-> *snow-mood-fog-table* data 5 erase-color)
  (the-as vector (-> *snow-mood-fog-table* data 5))
  0.41
  )

(vector4-lerp!
  (-> *snow-mood-fog-table* data 6 erase-color)
  (-> *snow-mood-fog-table* data 6 erase-color)
  (the-as vector (-> *snow-mood-fog-table* data 6))
  0.41
  )

(vector4-lerp!
  (-> *snow-mood-fog-table* data 7 erase-color)
  (-> *snow-mood-fog-table* data 7 erase-color)
  (the-as vector (-> *snow-mood-fog-table* data 7))
  0.41
  )

(define *snow-mood-sun-table*
  (new 'static 'mood-sun-table :data (new 'static 'inline-array mood-sun 8
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :x 255.0 :y 128.0 :w 128.0)
                                         :env-color (new 'static 'vector :x 192.0 :y 176.5 :z 96.0 :w 255.0)
                                         )
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :w 128.0)
                                         :env-color (new 'static 'vector :x 128.0 :y 176.0 :z 192.0 :w 255.0)
                                         )
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :w 128.0)
                                         :env-color (new 'static 'vector :x 128.0 :y 180.0 :z 194.0 :w 255.0)
                                         )
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :w 128.0)
                                         :env-color (new 'static 'vector :x 128.0 :y 176.0 :z 192.0 :w 255.0)
                                         )
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :x 255.0 :y 128.0 :w 128.0)
                                         :env-color (new 'static 'vector :x 192.0 :y 176.5 :z 96.0 :w 255.0)
                                         )
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :w 128.0)
                                         :env-color (new 'static 'vector :x 80.0 :y 80.0 :z 173.0 :w 255.0)
                                         )
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :w 128.0)
                                         :env-color (new 'static 'vector :x 64.0 :y 64.0 :z 150.0 :w 255.0)
                                         )
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :w 128.0)
                                         :env-color (new 'static 'vector :x 64.0 :y 107.0 :z 173.0 :w 255.0)
                                         )
                                       )
                               )
  )

(define *jungleb-mood-fog-table*
  (new 'static 'mood-fog-table :data (new 'static 'inline-array mood-fog 8
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :w 128.0)
                                         :fog-dists (new 'static 'vector :x 98304.0 :y 3072000.0 :z 255.0 :w 150.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       )
                               )
  )

(define *jungleb-mood-lights-table*
  (new 'static 'mood-lights-table :data (new 'static 'inline-array mood-lights 8
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :y 1.0)
                                            :lgt-color (new 'static 'vector :x 0.287 :y 0.283 :z 0.4 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.14125 :y 0.1875 :z 0.375 :w 1.0)
                                            :shadow (new 'static 'vector :y -1.0)
                                            )
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          )
                                  )
  )

(define *jungleb-mood-sun-table*
  (new 'static 'mood-sun-table :data (new 'static 'inline-array mood-sun 8
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
                                         :env-color (new 'static 'vector :x 48.0 :y 60.0 :z 96.0 :w 255.0)
                                         )
                                       (new 'static 'mood-sun)
                                       (new 'static 'mood-sun)
                                       (new 'static 'mood-sun)
                                       (new 'static 'mood-sun)
                                       (new 'static 'mood-sun)
                                       (new 'static 'mood-sun)
                                       (new 'static 'mood-sun)
                                       )
                               )
  )

(define *maincave-mood-fog-table*
  (new 'static 'mood-fog-table :data (new 'static 'inline-array mood-fog 8
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :y 96.0 :z 96.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 434176.0 :y 1048576.0 :z 255.0 :w 51.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       )
                               )
  )

(define *maincave-mood-lights-table*
  (new 'static 'mood-lights-table :data (new 'static 'inline-array mood-lights 8
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :y 1.0)
                                            :lgt-color (new 'static 'vector :x 0.25 :y 0.6 :z 0.75 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.15 :y 0.2 :z 0.25 :w 1.0)
                                            :shadow (new 'static 'vector :y -1.0)
                                            )
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          )
                                  )
  )

(define *maincave-mood-sun-table*
  (new 'static 'mood-sun-table :data (new 'static 'inline-array mood-sun 8
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
                                         :env-color (new 'static 'vector :x 128.0 :y 255.0 :z 255.0 :w 255.0)
                                         )
                                       (new 'static 'mood-sun)
                                       (new 'static 'mood-sun)
                                       (new 'static 'mood-sun)
                                       (new 'static 'mood-sun)
                                       (new 'static 'mood-sun)
                                       (new 'static 'mood-sun)
                                       (new 'static 'mood-sun)
                                       )
                               )
  )

(define *robocave-mood-fog-table*
  (new 'static 'mood-fog-table :data (new 'static 'inline-array mood-fog 8
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 2048000.0 :z 255.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       )
                               )
  )

(define *darkcave-mood-fog-table*
  (new 'static 'mood-fog-table :data (new 'static 'inline-array mood-fog 8
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 1024000.0 :z 255.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       )
                               )
  )

(define *darkcave-mood-lights-table*
  (new 'static 'mood-lights-table :data (new 'static 'inline-array mood-lights 8
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :y -1.0)
                                            :lgt-color (new 'static 'vector :x 0.3 :y 0.4 :z 0.5 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.3 :y 0.4 :z 0.5 :w 1.0)
                                            :shadow (new 'static 'vector :y -1.0)
                                            )
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          )
                                  )
  )

(define *darkcave-mood-sun-table*
  (new 'static 'mood-sun-table :data (new 'static 'inline-array mood-sun 8
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
                                         :env-color (new 'static 'vector :x 127.5 :y 255.0 :z 127.5 :w 255.0)
                                         )
                                       (new 'static 'mood-sun)
                                       (new 'static 'mood-sun)
                                       (new 'static 'mood-sun)
                                       (new 'static 'mood-sun)
                                       (new 'static 'mood-sun)
                                       (new 'static 'mood-sun)
                                       (new 'static 'mood-sun)
                                       )
                               )
  )

(define *misty-mood-fog-table*
  (new 'static 'mood-fog-table :data (new 'static 'inline-array mood-fog 8
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 186.0 :y 148.0 :z 164.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :y 737280.0 :z 255.0 :w 50.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 132.0 :y 140.0 :z 227.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :y 737280.0 :z 255.0 :w 50.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 132.0 :y 140.0 :z 243.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :y 737280.0 :z 255.0 :w 50.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 132.0 :y 140.0 :z 241.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :y 737280.0 :z 255.0 :w 50.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 186.0 :y 148.0 :z 164.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :y 737280.0 :z 255.0 :w 50.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :y 64.0 :z 152.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :y 737280.0 :z 255.0 :w 50.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :y 32.0 :z 96.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :y 737280.0 :z 255.0 :w 50.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 17.0 :y 119.0 :z 143.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :y 737280.0 :z 255.0 :w 50.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       )
                               )
  )

(define *misty-mood-lights-table*
  (new 'static 'mood-lights-table :data (new 'static 'inline-array mood-lights 8
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x -0.25 :y 0.9330127 :z 0.25881904)
                                            :lgt-color (new 'static 'vector :x 0.877 :y 0.877 :z 0.877 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.374 :y 0.374 :z 0.375 :w 1.0)
                                            :shadow (new 'static 'vector :x -0.25 :y 0.9330127 :z 0.25881904)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x 0.8365163 :y 0.4829629 :z 0.25881904)
                                            :lgt-color (new 'static 'vector :x 0.334 :y 0.348 :z 0.64 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.428 :y 0.44 :z 0.55 :w 1.0)
                                            :shadow (new 'static 'vector :x 0.8365163 :y 0.4829629 :z 0.25881904)
                                            )
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          )
                                  )
  )

(update-mood-shadow-direction (the-as mood-lights (-> *misty-mood-lights-table* data)))

(update-mood-shadow-direction (-> *misty-mood-lights-table* data 1))

(define *misty-mood-sun-table*
  (new 'static 'mood-sun-table :data (new 'static 'inline-array mood-sun 8
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :x 255.0 :y 128.0 :w 128.0)
                                         :env-color (new 'static 'vector :x 186.0 :y 148.0 :z 164.0 :w 255.0)
                                         )
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
                                         :env-color (new 'static 'vector :x 132.0 :y 140.0 :z 227.0 :w 255.0)
                                         )
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
                                         :env-color (new 'static 'vector :x 132.0 :y 140.0 :z 243.0 :w 255.0)
                                         )
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
                                         :env-color (new 'static 'vector :x 132.0 :y 140.0 :z 241.0 :w 255.0)
                                         )
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :x 255.0 :y 128.0 :w 128.0)
                                         :env-color (new 'static 'vector :x 186.0 :y 148.0 :z 164.0 :w 255.0)
                                         )
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
                                         :env-color (new 'static 'vector :x 32.0 :y 48.0 :z 160.0 :w 255.0)
                                         )
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
                                         :env-color (new 'static 'vector :x 32.0 :y 48.0 :z 150.0 :w 255.0)
                                         )
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
                                         :env-color (new 'static 'vector :x 32.0 :y 100.0 :z 160.0 :w 255.0)
                                         )
                                       )
                               )
  )

(define *village2-mood-fog-table*
  (new 'static 'mood-fog-table :data (new 'static 'inline-array mood-fog 8
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 75.0 :y 82.0 :z 96.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 1843200.0 :z 255.0 :w 51.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 100.0 :y 102.0 :z 116.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 1843200.0 :z 255.0 :w 102.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 112.0 :y 114.0 :z 132.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 1843200.0 :z 255.0 :w 51.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 100.0 :y 102.0 :z 116.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 1843200.0 :z 255.0 :w 51.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 75.0 :y 82.0 :z 96.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 1843200.0 :z 255.0 :w 51.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 27.5 :y 40.0 :z 52.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 1843200.0 :z 255.0 :w 51.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 10.0 :y 23.0 :z 28.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 1843200.0 :z 255.0 :w 51.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 5.0 :y 35.0 :z 35.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 1843200.0 :z 255.0 :w 51.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       )
                               )
  )

(define *village2-mood-lights-table*
  (new 'static 'mood-lights-table :data (new 'static 'inline-array mood-lights 8
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x -0.25 :y 0.9330127 :z 0.25881904)
                                            :lgt-color (new 'static 'vector :x 0.793 :y 0.793 :z 0.793 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.374 :y 0.374 :z 0.374 :w 1.0)
                                            :shadow (new 'static 'vector :x -0.25 :y 0.9330127 :z 0.25881904)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x 0.8365163 :y 0.4829629 :z 0.25881904)
                                            :lgt-color (new 'static 'vector :x 0.173 :y 0.259 :z 0.432 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.463 :y 0.412 :z 0.55 :w 1.0)
                                            :shadow (new 'static 'vector :x 0.8365163 :y 0.4829629 :z 0.25881904)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x 0.40957603 :y 0.57357645 :z 0.7094065)
                                            :lgt-color (new 'static 'vector :x 2.0 :y 2.0 :z 2.0 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :w 1.0)
                                            :shadow (new 'static 'vector :x 0.40957603 :y 0.57357645 :z 0.7094065)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x -0.40957603 :y 0.57357645 :z -0.7094065)
                                            :lgt-color (new 'static 'vector :x 2.0 :y 2.0 :z 2.0 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :w 1.0)
                                            :shadow (new 'static 'vector :x -0.40957603 :y 0.57357645 :z -0.7094065)
                                            )
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          )
                                  )
  )

(update-mood-shadow-direction (the-as mood-lights (-> *village2-mood-lights-table* data)))

(update-mood-shadow-direction (-> *village2-mood-lights-table* data 1))

(update-mood-shadow-direction (-> *village2-mood-lights-table* data 2))

(update-mood-shadow-direction (-> *village2-mood-lights-table* data 3))

(define *village2-mood-sun-table*
  (new 'static 'mood-sun-table
    :data (new 'static 'inline-array mood-sun 8
      (new 'static 'mood-sun
        :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
        :env-color (new 'static 'vector :x 128.0 :y 133.0 :z 194.0 :w 255.0)
        )
      (new 'static 'mood-sun
        :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
        :env-color (new 'static 'vector :y 32.0 :z 76.0 :w 255.0)
        )
      (new 'static 'mood-sun :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0))
      (new 'static 'mood-sun :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0))
      (new 'static 'mood-sun
        :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
        :env-color (new 'static 'vector :x 17.0 :y 76.0 :z 96.0 :w 255.0)
        )
      (new 'static 'mood-sun
        :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
        :env-color (new 'static 'vector :x 132.0 :y 131.0 :z 160.0 :w 255.0)
        )
      (new 'static 'mood-sun
        :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
        :env-color (new 'static 'vector :x 128.0 :y 126.0 :z 192.0 :w 255.0)
        )
      (new 'static 'mood-sun
        :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
        :env-color (new 'static 'vector :x 153.0 :y 141.0 :z 192.0 :w 255.0)
        )
      )
    )
  )

(define *swamp-mood-fog-table*
  (new 'static 'mood-fog-table :data (new 'static 'inline-array mood-fog 8
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 22.0 :y 89.0 :z 101.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 20480.0 :y 783360.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 32.0 :y 105.0 :z 116.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 20480.0 :y 783360.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 36.0 :y 118.0 :z 130.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 20480.0 :y 783360.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 32.0 :y 105.0 :z 116.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 20480.0 :y 783360.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 22.0 :y 89.0 :z 101.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 20480.0 :y 783360.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 20.0 :y 60.0 :z 70.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 20480.0 :y 783360.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 12.0 :y 42.0 :z 60.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 20480.0 :y 783360.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 17.0 :y 76.0 :z 86.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 20480.0 :y 783360.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       )
                               )
  )

(define *swamp-mood-lights-table*
  (new 'static 'mood-lights-table :data (new 'static 'inline-array mood-lights 8
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x -0.25 :y 0.9330127 :z 0.25881904)
                                            :lgt-color (new 'static 'vector :x 0.825 :y 0.825 :z 0.825 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.374 :y 0.374 :z 0.374 :w 1.0)
                                            :shadow (new 'static 'vector :x -0.25 :y 0.9330127 :z 0.25881904)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x 0.8365163 :y 0.4829629 :z 0.25881904)
                                            :lgt-color (new 'static 'vector :x 0.173 :y 0.259 :z 0.519 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.412 :y 0.463 :z 0.55 :w 1.0)
                                            :shadow (new 'static 'vector :x 0.8365163 :y 0.4829629 :z 0.25881904)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x 0.7094065 :y 0.57357645 :z -0.40957603)
                                            :lgt-color (new 'static 'vector :x 2.0 :y 2.0 :z 2.0 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :w 1.0)
                                            :shadow (new 'static 'vector :x 0.7094065 :y 0.57357645 :z -0.40957603)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x -0.7094065 :y 0.57357645 :z 0.40957603)
                                            :lgt-color (new 'static 'vector :x 2.0 :y 2.0 :z 2.0 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :w 1.0)
                                            :shadow (new 'static 'vector :x -0.7094065 :y 0.57357645 :z 0.40957603)
                                            )
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          )
                                  )
  )

(update-mood-shadow-direction (the-as mood-lights (-> *swamp-mood-lights-table* data)))

(update-mood-shadow-direction (-> *swamp-mood-lights-table* data 1))

(update-mood-shadow-direction (-> *swamp-mood-lights-table* data 2))

(update-mood-shadow-direction (-> *swamp-mood-lights-table* data 3))

(define *swamp-mood-sun-table*
  (new 'static 'mood-sun-table
    :data (new 'static 'inline-array mood-sun 8
      (new 'static 'mood-sun
        :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
        :env-color (new 'static 'vector :x 24.0 :y 133.0 :z 243.0 :w 255.0)
        )
      (new 'static 'mood-sun
        :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
        :env-color (new 'static 'vector :y 32.0 :z 96.0 :w 255.0)
        )
      (new 'static 'mood-sun :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0))
      (new 'static 'mood-sun :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0))
      (new 'static 'mood-sun
        :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
        :env-color (new 'static 'vector :x 17.0 :y 119.0 :z 143.0 :w 255.0)
        )
      (new 'static 'mood-sun
        :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
        :env-color (new 'static 'vector :x 132.0 :y 131.0 :z 200.0 :w 255.0)
        )
      (new 'static 'mood-sun
        :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
        :env-color (new 'static 'vector :x 87.0 :y 126.0 :z 227.0 :w 255.0)
        )
      (new 'static 'mood-sun
        :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
        :env-color (new 'static 'vector :x 153.0 :y 141.0 :z 240.0 :w 255.0)
        )
      )
    )
  )

(define *sunken-mood-fog-table*
  (new 'static 'mood-fog-table :data (new 'static 'inline-array mood-fog 8
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 16.512 :y 26.112 :z 54.912 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 1351680.0 :z 255.0)
                                         :erase-color (new 'static 'vector :x 16.512 :y 26.112 :z 54.912 :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 4.096 :y 15.744 :z 54.912 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 1351680.0 :z 255.0)
                                         :erase-color (new 'static 'vector :x 4.096 :y 15.744 :z 54.912 :w 128.0)
                                         )
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       )
                               )
  )

(define *sunken-mood-lights-table*
  (new 'static 'mood-lights-table :data (new 'static 'inline-array mood-lights 8
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :y 1.0)
                                            :lgt-color (new 'static 'vector :x 0.265 :y 0.387 :z 0.509 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.374 :y 0.374 :z 0.374 :w 1.0)
                                            :shadow (new 'static 'vector :y -1.0)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :y 1.0)
                                            :lgt-color (new 'static 'vector :x 0.172 :y 0.185 :z 0.298 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.463 :y 0.412 :z 0.55 :w 1.0)
                                            :shadow (new 'static 'vector :y -1.0)
                                            )
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          )
                                  )
  )

(update-mood-shadow-direction (the-as mood-lights (-> *sunken-mood-lights-table* data)))

(update-mood-shadow-direction (-> *sunken-mood-lights-table* data 1))

(define *sunken-mood-sun-table*
  (new 'static 'mood-sun-table :data (new 'static 'inline-array mood-sun 8
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
                                         :env-color (new 'static 'vector :x 127.5 :y 191.25 :z 255.0 :w 255.0)
                                         )
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
                                         :env-color (new 'static 'vector :x 76.5 :y 102.0 :z 255.0 :w 255.0)
                                         )
                                       (new 'static 'mood-sun)
                                       (new 'static 'mood-sun)
                                       (new 'static 'mood-sun)
                                       (new 'static 'mood-sun)
                                       (new 'static 'mood-sun)
                                       (new 'static 'mood-sun)
                                       )
                               )
  )

(define *rolling-mood-fog-table*
  (new 'static 'mood-fog-table :data (new 'static 'inline-array mood-fog 8
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 42.0 :y 50.0 :z 68.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 2236416.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 94.0 :y 106.0 :z 126.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 2236416.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 104.0 :y 116.0 :z 136.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 2236416.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 94.0 :y 106.0 :z 126.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 2236416.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 42.0 :y 50.0 :z 68.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 2236416.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 17.0 :y 26.0 :z 43.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 2236416.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :y 12.0 :z 18.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 2236416.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :y 12.0 :z 18.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 2236416.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       )
                               )
  )

(define *rolling-mood-lights-table*
  (new 'static 'mood-lights-table :data (new 'static 'inline-array mood-lights 8
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x -0.1830127 :y 0.6830127 :z 0.70710677)
                                            :lgt-color (new 'static 'vector :x 0.922 :y 0.905 :z 0.873 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.346 :y 0.359 :z 0.384 :w 1.0)
                                            :shadow (new 'static 'vector :x -0.1830127 :y 0.6830127 :z 0.70710677)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x -0.24321035 :y 0.90767336 :z -0.34202015)
                                            :lgt-color (new 'static 'vector :x 0.914 :y 0.898 :z 0.866 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.346 :y 0.359 :z 0.384 :w 1.0)
                                            :shadow (new 'static 'vector :x -0.24321035 :y 0.90767336 :z -0.34202015)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x 0.8365163 :y 0.4829629 :z 0.25881904)
                                            :lgt-color (new 'static 'vector :x 0.09 :y 0.135 :z 0.225 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.398 :y 0.398 :z 0.574 :w 1.0)
                                            :shadow (new 'static 'vector :x 0.8365163 :y 0.4829629 :z 0.25881904)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x 0.6262 :y 0.7098 :z 0.3222)
                                            :lgt-color (new 'static 'vector :x 0.0464 :y 0.1344 :z 0.1254 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.398 :y 0.398 :z 0.574 :w 1.0)
                                            :shadow (new 'static 'vector :x 0.6262 :y 0.7098 :z 0.3222)
                                            )
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          )
                                  )
  )

(update-mood-shadow-direction (the-as mood-lights (-> *rolling-mood-lights-table* data)))

(update-mood-shadow-direction (-> *rolling-mood-lights-table* data 1))

(update-mood-shadow-direction (-> *rolling-mood-lights-table* data 2))

(update-mood-shadow-direction (-> *rolling-mood-lights-table* data 3))

(define *rolling-mood-sun-table*
  (new 'static 'mood-sun-table
    :data (new 'static 'inline-array mood-sun 8
      (new 'static 'mood-sun
        :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
        :env-color (new 'static 'vector :x 128.0 :y 133.0 :z 194.0 :w 255.0)
        )
      (new 'static 'mood-sun
        :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
        :env-color (new 'static 'vector :y 32.0 :z 76.0 :w 255.0)
        )
      (new 'static 'mood-sun :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0))
      (new 'static 'mood-sun :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0))
      (new 'static 'mood-sun
        :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
        :env-color (new 'static 'vector :x 17.0 :y 76.0 :z 96.0 :w 255.0)
        )
      (new 'static 'mood-sun
        :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
        :env-color (new 'static 'vector :x 132.0 :y 131.0 :z 160.0 :w 255.0)
        )
      (new 'static 'mood-sun
        :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
        :env-color (new 'static 'vector :x 128.0 :y 126.0 :z 192.0 :w 255.0)
        )
      (new 'static 'mood-sun
        :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
        :env-color (new 'static 'vector :x 153.0 :y 141.0 :z 192.0 :w 255.0)
        )
      )
    )
  )

(define *firecanyon-mood-fog-table*
  (new 'static 'mood-fog-table :data (new 'static 'inline-array mood-fog 8
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 180.0 :y 113.0 :z 80.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 131072.0 :y 2048000.0 :z 255.0 :w 119.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 180.0 :y 113.0 :z 80.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 131072.0 :y 2048000.0 :z 255.0 :w 119.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 180.0 :y 113.0 :z 80.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 131072.0 :y 2048000.0 :z 255.0 :w 119.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 180.0 :y 113.0 :z 80.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 131072.0 :y 2048000.0 :z 255.0 :w 119.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 180.0 :y 113.0 :z 80.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 131072.0 :y 2048000.0 :z 255.0 :w 119.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 140.0 :y 64.5 :z 60.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 131072.0 :y 2048000.0 :z 255.0 :w 119.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 128.0 :y 44.0 :z 40.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 131072.0 :y 2048000.0 :z 255.0 :w 119.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 140.0 :y 50.0 :z 60.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 131072.0 :y 2048000.0 :z 255.0 :w 119.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       )
                               )
  )

(define *firecanyon-mood-lights-table*
  (new 'static 'mood-lights-table :data (new 'static 'inline-array mood-lights 8
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x -0.0278 :y 0.6578 :z 0.7526)
                                            :lgt-color (new 'static 'vector :x 1.0979 :y 1.0567 :z 0.4653 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.574 :y 0.32 :z 0.487 :w 1.0)
                                            :shadow (new 'static 'vector :x -0.0278 :y 0.6578 :z 0.7526)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x -0.25881904 :y 0.9659258)
                                            :lgt-color (new 'static 'vector :x 1.644 :y 1.598 :z 1.438 :w 128.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.368 :y 0.368 :z 0.4 :w 1.0)
                                            :shadow (new 'static 'vector :x -0.25881904 :y 0.9659258)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x -0.0353 :y 0.8338 :z -0.5508 :w 1.0)
                                            :lgt-color (new 'static 'vector :x 1.1419 :y 0.8887 :z 0.3513 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.347 :y 0.362 :z 0.487 :w 1.0)
                                            :shadow (new 'static 'vector :x -0.0353 :y 0.8338 :z -0.5508 :w 1.0)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x 0.8365 :y 0.4829 :z 0.2588)
                                            :lgt-color (new 'static 'vector :x 0.1824 :y 0.2574 :z 0.6964 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.434 :y 0.423 :z 0.625 :w 1.0)
                                            :shadow (new 'static 'vector :x 0.8365 :y 0.4829 :z 0.2588)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :y -1.0)
                                            :lgt-color (new 'static 'vector :x 1.0 :y 0.364 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :shadow (new 'static 'vector :y -1.0)
                                            )
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          )
                                  )
  )

(update-mood-shadow-direction (the-as mood-lights (-> *firecanyon-mood-lights-table* data)))

(update-mood-shadow-direction (-> *firecanyon-mood-lights-table* data 1))

(update-mood-shadow-direction (-> *firecanyon-mood-lights-table* data 2))

(update-mood-shadow-direction (-> *firecanyon-mood-lights-table* data 3))

(define *firecanyon-mood-sun-table*
  (new 'static 'mood-sun-table :data (new 'static 'inline-array mood-sun 8
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
                                         :env-color (new 'static 'vector :x 200.0 :y 200.0 :z 128.0 :w 255.0)
                                         )
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
                                         :env-color (new 'static 'vector :x 200.0 :y 200.0 :z 200.0 :w 255.0)
                                         )
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
                                         :env-color (new 'static 'vector :x 255.0 :y 255.0 :z 255.0 :w 255.0)
                                         )
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
                                         :env-color (new 'static 'vector :x 200.0 :y 200.0 :z 200.0 :w 255.0)
                                         )
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
                                         :env-color (new 'static 'vector :x 255.0 :y 196.0 :z 64.0 :w 255.0)
                                         )
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
                                         :env-color (new 'static 'vector :x 96.0 :y 96.0 :z 150.0 :w 255.0)
                                         )
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
                                         :env-color (new 'static 'vector :x 64.0 :y 64.0 :z 150.0 :w 255.0)
                                         )
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
                                         :env-color (new 'static 'vector :x 96.0 :y 200.0 :z 150.0 :w 255.0)
                                         )
                                       )
                               )
  )

(define *ogre-mood-fog-table*
  (new 'static 'mood-fog-table :data (new 'static 'inline-array mood-fog 8
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 64.0 :y 68.0 :z 68.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 2236416.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 74.0 :y 86.0 :z 106.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 2236416.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 74.0 :y 86.0 :z 106.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 2236416.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 74.0 :y 86.0 :z 106.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 2236416.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 64.0 :y 68.0 :z 68.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 2236416.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :y 12.0 :z 18.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 2236416.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :y 12.0 :z 18.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 2236416.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :y 18.0 :z 18.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 2236416.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       )
                               )
  )

(define *ogre-mood-lights-table*
  (new 'static 'mood-lights-table :data (new 'static 'inline-array mood-lights 8
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x -0.1830127 :y 0.6830127 :z 0.70710677)
                                            :lgt-color (new 'static 'vector :x 1.154 :y 1.132 :z 1.093 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.346 :y 0.359 :z 0.384 :w 1.0)
                                            :shadow (new 'static 'vector :x -0.1830127 :y 0.6830127 :z 0.70710677)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x -0.24321035 :y 0.90767336 :z -0.34202015)
                                            :lgt-color (new 'static 'vector :x 1.144 :y 1.124 :z 0.939 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.346 :y 0.359 :z 0.384 :w 1.0)
                                            :shadow (new 'static 'vector :x -0.24321035 :y 0.90767336 :z -0.34202015)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x 0.8365163 :y 0.4829629 :z 0.25881904)
                                            :lgt-color (new 'static 'vector :x 0.113 :y 0.169 :z 0.282 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.398 :y 0.398 :z 0.574 :w 1.0)
                                            :shadow (new 'static 'vector :x 0.8365163 :y 0.4829629 :z 0.25881904)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x 0.6262 :y 0.7098 :z 0.3222)
                                            :lgt-color (new 'static 'vector :x 0.058 :y 0.168 :z 0.157 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.398 :y 0.398 :z 0.574 :w 1.0)
                                            :shadow (new 'static 'vector :x 0.6262 :y 0.7098 :z 0.3222)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x 0.40957603 :y 0.57357645 :z 0.7094065)
                                            :lgt-color (new 'static 'vector :x 2.0 :y 2.0 :z 2.0 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :w 1.0)
                                            :shadow (new 'static 'vector :x 0.40957603 :y 0.57357645 :z 0.7094065)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x -0.40957603 :y 0.57357645 :z -0.7094065)
                                            :lgt-color (new 'static 'vector :x 2.0 :y 2.0 :z 2.0 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :w 1.0)
                                            :shadow (new 'static 'vector :x -0.40957603 :y 0.57357645 :z -0.7094065)
                                            )
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          )
                                  )
  )

(update-mood-shadow-direction (the-as mood-lights (-> *ogre-mood-lights-table* data)))

(update-mood-shadow-direction (-> *ogre-mood-lights-table* data 1))

(update-mood-shadow-direction (-> *ogre-mood-lights-table* data 2))

(update-mood-shadow-direction (-> *ogre-mood-lights-table* data 3))

(update-mood-shadow-direction (-> *ogre-mood-lights-table* data 4))

(update-mood-shadow-direction (-> *ogre-mood-lights-table* data 5))

(define *ogre2-mood-lights-table*
  (new 'static 'mood-lights-table :data (new 'static 'inline-array mood-lights 8
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x -0.25 :y 0.9330127 :z 0.25881904)
                                            :lgt-color (new 'static 'vector :x 0.793 :y 0.793 :z 0.793 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.374 :y 0.374 :z 0.374 :w 1.0)
                                            :shadow (new 'static 'vector :x -0.25 :y 0.9330127 :z 0.25881904)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x -0.25 :y 0.9330127 :z 0.25881904)
                                            :lgt-color (new 'static 'vector :x 0.793 :y 0.793 :z 0.793 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.374 :y 0.374 :z 0.374 :w 1.0)
                                            :shadow (new 'static 'vector :x -0.25 :y 0.9330127 :z 0.25881904)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x 0.8365163 :y 0.4829629 :z 0.25881904)
                                            :lgt-color (new 'static 'vector :x 0.173 :y 0.259 :z 0.432 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.463 :y 0.412 :z 0.55 :w 1.0)
                                            :shadow (new 'static 'vector :x 0.8365163 :y 0.4829629 :z 0.25881904)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x 0.8365163 :y 0.4829629 :z 0.25881904)
                                            :lgt-color (new 'static 'vector :x 0.173 :y 0.259 :z 0.432 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.463 :y 0.412 :z 0.55 :w 1.0)
                                            :shadow (new 'static 'vector :x 0.8365163 :y 0.4829629 :z 0.25881904)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x 0.40957603 :y 0.57357645 :z 0.7094065)
                                            :lgt-color (new 'static 'vector :x 2.0 :y 2.0 :z 2.0 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :w 1.0)
                                            :shadow (new 'static 'vector :x 0.40957603 :y 0.57357645 :z 0.7094065)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x -0.40957603 :y 0.57357645 :z -0.7094065)
                                            :lgt-color (new 'static 'vector :x 2.0 :y 2.0 :z 2.0 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :w 1.0)
                                            :shadow (new 'static 'vector :x -0.40957603 :y 0.57357645 :z -0.7094065)
                                            )
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          )
                                  )
  )

(update-mood-shadow-direction (the-as mood-lights (-> *ogre2-mood-lights-table* data)))

(update-mood-shadow-direction (-> *ogre2-mood-lights-table* data 1))

(update-mood-shadow-direction (-> *ogre2-mood-lights-table* data 2))

(update-mood-shadow-direction (-> *ogre2-mood-lights-table* data 3))

(update-mood-shadow-direction (-> *ogre2-mood-lights-table* data 4))

(update-mood-shadow-direction (-> *ogre2-mood-lights-table* data 5))

(define *ogre3-mood-fog-table*
  (new 'static 'mood-fog-table :data (new 'static 'inline-array mood-fog 8
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 255.0 :y 96.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 393216.0 :y 7458816.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       )
                               )
  )

(define *ogre3-mood-lights-table*
  (new 'static 'mood-lights-table :data (new 'static 'inline-array mood-lights 8
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :y 0.666 :z 0.745)
                                            :lgt-color (new 'static 'vector :x 0.6 :y 0.51 :z 0.51 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.313 :y 0.375 :z 0.375 :w 1.0)
                                            :shadow (new 'static 'vector :x -0.25 :y 0.9330127 :z 0.25881904)
                                            )
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          )
                                  )
  )

(update-mood-shadow-direction (the-as mood-lights (-> *ogre3-mood-lights-table* data)))

(define *village3-mood-fog-table*
  (new 'static 'mood-fog-table :data (new 'static 'inline-array mood-fog 8
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 64.0 :y 68.0 :z 68.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 2236416.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 74.0 :y 86.0 :z 106.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 2236416.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 74.0 :y 86.0 :z 106.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 2236416.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 74.0 :y 86.0 :z 106.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 2236416.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 64.0 :y 68.0 :z 68.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 2236416.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :y 12.0 :z 18.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 2236416.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :y 12.0 :z 18.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 2236416.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :y 18.0 :z 18.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 2236416.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       )
                               )
  )

(define *village3-mood-lights-table*
  (new 'static 'mood-lights-table :data (new 'static 'inline-array mood-lights 8
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x -0.067 :y 0.25 :z 0.966)
                                            :lgt-color (new 'static 'vector :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.449 :y 0.35 :z 0.599 :w 1.0)
                                            :shadow (new 'static 'vector :y -1.0)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x -0.259 :y 0.966)
                                            :lgt-color (new 'static 'vector :x 0.66 :y 0.436 :z 0.291 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.358 :y 0.575 :z 0.716 :w 1.0)
                                            :shadow (new 'static 'vector :y -1.0)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x -0.067 :y 0.25 :z -0.966)
                                            :lgt-color (new 'static 'vector :x 1.056 :y 0.747 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.383 :y 0.366 :z 0.599 :w 1.0)
                                            :shadow (new 'static 'vector :y -1.0)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :x 0.866 :y 0.5)
                                            :lgt-color (new 'static 'vector :x 0.067 :y 0.089 :z 0.333 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.304 :y 0.409 :z 0.76 :w 1.0)
                                            :shadow (new 'static 'vector :y -1.0)
                                            )
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          )
                                  )
  )

(define *lavatube-mood-fog-table*
  (new 'static 'mood-fog-table :data (new 'static 'inline-array mood-fog 8
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 255.0 :y 96.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 1851392.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       )
                               )
  )

(define *lavatube-mood-lights-table*
  (new 'static 'mood-lights-table :data (new 'static 'inline-array mood-lights 8
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :y 1.0)
                                            :lgt-color (new 'static 'vector :x 0.19 :y 0.128 :z 0.128 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.31 :y 0.372 :z 0.372 :w 1.0)
                                            :shadow (new 'static 'vector :y -1.0)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :y -1.0)
                                            :lgt-color (new 'static 'vector :x 1.0 :y 0.364 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :shadow (new 'static 'vector :y -1.0)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :y -1.0)
                                            :lgt-color (new 'static 'vector :x 1.0 :y 0.364 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :shadow (new 'static 'vector :y -1.0)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :y -1.0)
                                            :lgt-color (new 'static 'vector :x 1.0 :y 0.364 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :shadow (new 'static 'vector :y -1.0)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :y -1.0)
                                            :lgt-color (new 'static 'vector :x 1.0 :y 0.364 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :shadow (new 'static 'vector :y -1.0)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :y -1.0)
                                            :lgt-color (new 'static 'vector :x 1.0 :y 0.364 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :shadow (new 'static 'vector :y -1.0)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :y -1.0)
                                            :lgt-color (new 'static 'vector :x 1.0 :y 0.364 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :shadow (new 'static 'vector :y -1.0)
                                            )
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :y -1.0)
                                            :lgt-color (new 'static 'vector :x 1.0 :y 0.364 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :shadow (new 'static 'vector :y -1.0)
                                            )
                                          )
                                  )
  )

(update-mood-shadow-direction (the-as mood-lights (-> *lavatube-mood-lights-table* data)))

(define *lavatube-mood-sun-table*
  (new 'static 'mood-sun-table :data (new 'static 'inline-array mood-sun 8
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
                                         :env-color (new 'static 'vector :x 255.0 :y 175.0 :z 128.0 :w 255.0)
                                         )
                                       (new 'static 'mood-sun)
                                       (new 'static 'mood-sun)
                                       (new 'static 'mood-sun)
                                       (new 'static 'mood-sun)
                                       (new 'static 'mood-sun)
                                       (new 'static 'mood-sun)
                                       (new 'static 'mood-sun)
                                       )
                               )
  )

(define *finalboss-mood-sun-table*
  (new 'static 'mood-sun-table :data (new 'static 'inline-array mood-sun 8
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :x 255.0 :y 128.0 :w 128.0)
                                         :env-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 255.0)
                                         )
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
                                         :env-color (new 'static 'vector :x 255.0 :y 255.0 :z 255.0 :w 255.0)
                                         )
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
                                         :env-color (new 'static 'vector :x 255.0 :y 255.0 :z 255.0 :w 255.0)
                                         )
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
                                         :env-color (new 'static 'vector :x 109.0 :y 64.0 :z 160.0 :w 255.0)
                                         )
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :x 255.0 :y 128.0 :w 128.0)
                                         :env-color (new 'static 'vector :x 255.0 :y 196.0 :z 64.0 :w 255.0)
                                         )
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
                                         :env-color (new 'static 'vector :x 96.0 :y 96.0 :z 196.0 :w 255.0)
                                         )
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
                                         :env-color (new 'static 'vector :x 64.0 :y 64.0 :z 150.0 :w 255.0)
                                         )
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :x 255.0 :y 225.0 :z 96.0 :w 128.0)
                                         :env-color (new 'static 'vector :x 64.0 :y 150.0 :z 196.0 :w 255.0)
                                         )
                                       )
                               )
  )

(define *finalboss-mood-fog-table*
  (new 'static 'mood-fog-table :data (new 'static 'inline-array mood-fog 8
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 160.0 :y 150.0 :z 200.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 22528000.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 150.0 :y 165.0 :z 220.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 22528000.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 128.0 :y 180.0 :z 243.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 22528000.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 45.0 :z 96.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 909312.0 :y 1912832.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 160.0 :y 150.0 :z 200.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 22528000.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :x 16.0 :y 32.0 :z 100.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 22528000.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 22528000.0 :z 255.0 :w 51.0)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :y 80.0 :z 64.0 :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 22528000.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       )
                               )
  )

(update-mood-erase-color
  (the-as mood-fog (-> *finalboss-mood-fog-table* data))
  (the-as mood-lights (-> *village1-mood-lights-table* data))
  )

(update-mood-erase-color (-> *finalboss-mood-fog-table* data 1) (-> *village1-mood-lights-table* data 1))

(update-mood-erase-color (-> *finalboss-mood-fog-table* data 2) (-> *village1-mood-lights-table* data 2))

(update-mood-erase-color (-> *finalboss-mood-fog-table* data 3) (-> *village1-mood-lights-table* data 3))

(update-mood-erase-color (-> *finalboss-mood-fog-table* data 4) (-> *village1-mood-lights-table* data 4))

(update-mood-erase-color (-> *finalboss-mood-fog-table* data 6) (-> *village1-mood-lights-table* data 6))

(update-mood-erase-color (-> *finalboss-mood-fog-table* data 7) (-> *village1-mood-lights-table* data 7))

(vector4-lerp!
  (-> *finalboss-mood-fog-table* data 5 erase-color)
  (-> *finalboss-mood-fog-table* data 4 erase-color)
  (-> *finalboss-mood-fog-table* data 6 erase-color)
  0.5
  )

(vector4-lerp!
  (-> *finalboss-mood-fog-table* data 0 erase-color)
  (-> *finalboss-mood-fog-table* data 0 erase-color)
  (the-as vector (-> *finalboss-mood-fog-table* data))
  0.41
  )

(vector4-lerp!
  (-> *finalboss-mood-fog-table* data 1 erase-color)
  (-> *finalboss-mood-fog-table* data 1 erase-color)
  (the-as vector (-> *finalboss-mood-fog-table* data 1))
  0.41
  )

(vector4-lerp!
  (-> *finalboss-mood-fog-table* data 2 erase-color)
  (-> *finalboss-mood-fog-table* data 2 erase-color)
  (the-as vector (-> *finalboss-mood-fog-table* data 2))
  0.41
  )

(vector4-lerp!
  (-> *finalboss-mood-fog-table* data 3 erase-color)
  (-> *finalboss-mood-fog-table* data 3 erase-color)
  (the-as vector (-> *finalboss-mood-fog-table* data 3))
  1.0
  )

(vector4-lerp!
  (-> *finalboss-mood-fog-table* data 4 erase-color)
  (-> *finalboss-mood-fog-table* data 4 erase-color)
  (the-as vector (-> *finalboss-mood-fog-table* data 4))
  0.41
  )

(vector4-lerp!
  (-> *finalboss-mood-fog-table* data 5 erase-color)
  (-> *finalboss-mood-fog-table* data 5 erase-color)
  (the-as vector (-> *finalboss-mood-fog-table* data 5))
  0.41
  )

(vector4-lerp!
  (-> *finalboss-mood-fog-table* data 6 erase-color)
  (-> *finalboss-mood-fog-table* data 6 erase-color)
  (the-as vector (-> *finalboss-mood-fog-table* data 6))
  0.41
  )

(vector4-lerp!
  (-> *finalboss-mood-fog-table* data 7 erase-color)
  (-> *finalboss-mood-fog-table* data 7 erase-color)
  (the-as vector (-> *finalboss-mood-fog-table* data 7))
  0.41
  )

(define *citadel-mood-fog-table*
  (new 'static 'mood-fog-table :data (new 'static 'inline-array mood-fog 8
                                       (new 'static 'mood-fog
                                         :fog-color (new 'static 'vector :w 128.0)
                                         :fog-dists (new 'static 'vector :x 262144.0 :y 2252800.0 :z 255.0 :w 25.5)
                                         :erase-color (new 'static 'vector :w 128.0)
                                         )
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       (new 'static 'mood-fog)
                                       )
                               )
  )

(define *citadel-mood-lights-table*
  (new 'static 'mood-lights-table :data (new 'static 'inline-array mood-lights 8
                                          (new 'static 'mood-lights
                                            :direction (new 'static 'vector :y 1.0)
                                            :lgt-color (new 'static 'vector :x 0.75 :y 0.725 :z 0.5 :w 1.0)
                                            :prt-color (new 'static 'vector :w 1.0)
                                            :amb-color (new 'static 'vector :x 0.3 :y 0.3 :z 0.3 :w 1.0)
                                            :shadow (new 'static 'vector :y -1.0)
                                            )
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          (new 'static 'mood-lights)
                                          )
                                  )
  )

(define *citadel-mood-sun-table*
  (new 'static 'mood-sun-table :data (new 'static 'inline-array mood-sun 8
                                       (new 'static 'mood-sun
                                         :sun-color (new 'static 'vector :w 128.0)
                                         :env-color (new 'static 'vector :x 96.0 :y 96.0 :z 96.0 :w 255.0)
                                         )
                                       (new 'static 'mood-sun)
                                       (new 'static 'mood-sun)
                                       (new 'static 'mood-sun)
                                       (new 'static 'mood-sun)
                                       (new 'static 'mood-sun)
                                       (new 'static 'mood-sun)
                                       (new 'static 'mood-sun)
                                       )
                               )
  )

(define *default-mood* (new 'global 'mood-context))

(set! (-> *default-mood* mood-fog-table) *village1-mood-fog-table*)

(set! (-> *default-mood* mood-lights-table) *village1-mood-lights-table*)

(set! (-> *default-mood* mood-sun-table) *village1-mood-sun-table*)

(set! (-> *default-mood* fog-interp) *default-interp-table*)

(set! (-> *default-mood* palette-interp) *village1-palette-interp-table*)

(set! (-> *default-mood* sky-texture-interp) *default-interp-table*)

(set! (-> *default-mood* num-stars) 85.0)

(define *village1-mood* (new 'global 'mood-context))

(set! (-> *village1-mood* mood-fog-table) *village1-mood-fog-table*)

(set! (-> *village1-mood* mood-lights-table) *village1-mood-lights-table*)

(set! (-> *village1-mood* mood-sun-table) *village1-mood-sun-table*)

(set! (-> *village1-mood* fog-interp) *default-interp-table*)

(set! (-> *village1-mood* palette-interp) *village1-palette-interp-table*)

(set! (-> *village1-mood* sky-texture-interp) *default-interp-table*)

(set! (-> *village1-mood* num-stars) 85.0)

(make-village1-light-kit *village1-mood*)

(define *beach-mood* (new 'global 'mood-context))

(set! (-> *beach-mood* mood-fog-table) *village1-mood-fog-table*)

(set! (-> *beach-mood* mood-lights-table) *village1-mood-lights-table*)

(set! (-> *beach-mood* mood-sun-table) *village1-mood-sun-table*)

(set! (-> *beach-mood* fog-interp) *default-interp-table*)

(set! (-> *beach-mood* palette-interp) *village1-palette-interp-table*)

(set! (-> *beach-mood* sky-texture-interp) *default-interp-table*)

(set! (-> *beach-mood* num-stars) 85.0)

(make-village1-light-kit *beach-mood*)

(define *jungle-mood* (new 'global 'mood-context))

(set! (-> *jungle-mood* mood-fog-table) *village1-mood-fog-table*)

(set! (-> *jungle-mood* mood-lights-table) *village1-mood-lights-table*)

(set! (-> *jungle-mood* mood-sun-table) *village1-mood-sun-table*)

(set! (-> *jungle-mood* fog-interp) *default-interp-table*)

(set! (-> *jungle-mood* palette-interp) *village1-palette-interp-table*)

(set! (-> *jungle-mood* sky-texture-interp) *default-interp-table*)

(set! (-> *jungle-mood* num-stars) 85.0)

(define *jungleb-mood* (new 'global 'mood-context))

(set! (-> *jungleb-mood* mood-fog-table) *jungleb-mood-fog-table*)

(set! (-> *jungleb-mood* mood-lights-table) *jungleb-mood-lights-table*)

(set! (-> *jungleb-mood* mood-sun-table) *jungleb-mood-sun-table*)

(set! (-> *jungleb-mood* fog-interp) *default-interp-table*)

(set! (-> *jungleb-mood* palette-interp) *default-interp-table*)

(set! (-> *jungleb-mood* sky-texture-interp) *default-interp-table*)

(set! (-> *jungleb-mood* num-stars) 0.0)

(define *misty-mood* (new 'global 'mood-context))

(set! (-> *misty-mood* mood-fog-table) *misty-mood-fog-table*)

(set! (-> *misty-mood* mood-lights-table) *misty-mood-lights-table*)

(set! (-> *misty-mood* mood-sun-table) *misty-mood-sun-table*)

(set! (-> *misty-mood* fog-interp) *default-interp-table*)

(set! (-> *misty-mood* palette-interp) *misty-palette-interp-table*)

(set! (-> *misty-mood* sky-texture-interp) *default-interp-table*)

(set! (-> *misty-mood* num-stars) 85.0)

(make-misty-light-kit *misty-mood*)

(define *firecanyon-mood* (new 'global 'mood-context))

(set! (-> *firecanyon-mood* mood-fog-table) *firecanyon-mood-fog-table*)

(set! (-> *firecanyon-mood* mood-lights-table) *firecanyon-mood-lights-table*)

(set! (-> *firecanyon-mood* mood-sun-table) *firecanyon-mood-sun-table*)

(set! (-> *firecanyon-mood* fog-interp) *default-interp-table*)

(set! (-> *firecanyon-mood* palette-interp) *firecanyon-palette-interp-table*)

(set! (-> *firecanyon-mood* sky-texture-interp) *default-interp-table*)

(set! (-> *firecanyon-mood* num-stars) 85.0)

(define *village2-mood* (new 'global 'mood-context))

(set! (-> *village2-mood* mood-fog-table) *village2-mood-fog-table*)

(set! (-> *village2-mood* mood-lights-table) *village2-mood-lights-table*)

(set! (-> *village2-mood* mood-sun-table) *village2-mood-sun-table*)

(set! (-> *village2-mood* fog-interp) *default-interp-table*)

(set! (-> *village2-mood* palette-interp) *misty-palette-interp-table*)

(set! (-> *village2-mood* sky-texture-interp) *village2-sky-texture-table*)

(set! (-> *village2-mood* num-stars) 0.0)

(make-village2-light-kit *village2-mood*)

(define *swamp-mood* (new 'global 'mood-context))

(set! (-> *swamp-mood* mood-fog-table) *swamp-mood-fog-table*)

(set! (-> *swamp-mood* mood-lights-table) *swamp-mood-lights-table*)

(set! (-> *swamp-mood* mood-sun-table) *swamp-mood-sun-table*)

(set! (-> *swamp-mood* fog-interp) *default-interp-table*)

(set! (-> *swamp-mood* palette-interp) *misty-palette-interp-table*)

(set! (-> *swamp-mood* sky-texture-interp) *village2-sky-texture-table*)

(set! (-> *swamp-mood* num-stars) 0.0)

(define *sunken-mood* (new 'global 'mood-context))

(set! (-> *sunken-mood* mood-fog-table) *sunken-mood-fog-table*)

(set! (-> *sunken-mood* mood-lights-table) *sunken-mood-lights-table*)

(set! (-> *sunken-mood* mood-sun-table) *sunken-mood-sun-table*)

(set! (-> *sunken-mood* fog-interp) *misty-palette-interp-table*)

(set! (-> *sunken-mood* palette-interp) *misty-palette-interp-table*)

(set! (-> *sunken-mood* sky-texture-interp) *misty-palette-interp-table*)

(set! (-> *sunken-mood* num-stars) 0.0)

(define *sunkenb-mood* (new 'global 'mood-context))

(set! (-> *sunkenb-mood* mood-fog-table) *sunken-mood-fog-table*)

(set! (-> *sunkenb-mood* mood-lights-table) *sunken-mood-lights-table*)

(set! (-> *sunkenb-mood* mood-sun-table) *sunken-mood-sun-table*)

(set! (-> *sunkenb-mood* fog-interp) *misty-palette-interp-table*)

(set! (-> *sunkenb-mood* palette-interp) *misty-palette-interp-table*)

(set! (-> *sunkenb-mood* sky-texture-interp) *misty-palette-interp-table*)

(set! (-> *sunkenb-mood* num-stars) 0.0)

(define *rolling-mood* (new 'global 'mood-context))

(set! (-> *rolling-mood* mood-fog-table) *rolling-mood-fog-table*)

(set! (-> *rolling-mood* mood-lights-table) *rolling-mood-lights-table*)

(set! (-> *rolling-mood* mood-sun-table) *rolling-mood-sun-table*)

(set! (-> *rolling-mood* fog-interp) *default-interp-table*)

(set! (-> *rolling-mood* palette-interp) *rolling-palette-interp-table*)

(set! (-> *rolling-mood* sky-texture-interp) *village2-sky-texture-table*)

(set! (-> *rolling-mood* num-stars) 0.0)

(make-rolling-light-kit *rolling-mood*)

(define *training-mood* (new 'global 'mood-context))

(set! (-> *training-mood* mood-fog-table) *training-mood-fog-table*)

(set! (-> *training-mood* mood-lights-table) *village1-mood-lights-table*)

(set! (-> *training-mood* mood-sun-table) *village1-mood-sun-table*)

(set! (-> *training-mood* fog-interp) *default-interp-table*)

(set! (-> *training-mood* palette-interp) *village1-palette-interp-table*)

(set! (-> *training-mood* sky-texture-interp) *default-interp-table*)

(set! (-> *training-mood* num-stars) 85.0)

(define *maincave-mood* (new 'global 'mood-context))

(set! (-> *maincave-mood* mood-fog-table) *maincave-mood-fog-table*)

(set! (-> *maincave-mood* mood-lights-table) *maincave-mood-lights-table*)

(set! (-> *maincave-mood* mood-sun-table) *maincave-mood-sun-table*)

(set! (-> *maincave-mood* fog-interp) *default-interp-table*)

(set! (-> *maincave-mood* palette-interp) *village1-palette-interp-table*)

(set! (-> *maincave-mood* sky-texture-interp) *default-interp-table*)

(set! (-> *maincave-mood* num-stars) 0.0)

(define *darkcave-mood* (new 'global 'mood-context))

(set! (-> *darkcave-mood* mood-fog-table) *darkcave-mood-fog-table*)

(set! (-> *darkcave-mood* mood-lights-table) *darkcave-mood-lights-table*)

(set! (-> *darkcave-mood* mood-sun-table) *darkcave-mood-sun-table*)

(set! (-> *darkcave-mood* fog-interp) *default-interp-table*)

(set! (-> *darkcave-mood* palette-interp) *village1-palette-interp-table*)

(set! (-> *darkcave-mood* sky-texture-interp) *default-interp-table*)

(set! (-> *darkcave-mood* num-stars) 0.0)

(define *robocave-mood* (new 'global 'mood-context))

(set! (-> *robocave-mood* mood-fog-table) *robocave-mood-fog-table*)

(set! (-> *robocave-mood* mood-lights-table) *maincave-mood-lights-table*)

(set! (-> *robocave-mood* mood-sun-table) *maincave-mood-sun-table*)

(set! (-> *robocave-mood* fog-interp) *default-interp-table*)

(set! (-> *robocave-mood* palette-interp) *village1-palette-interp-table*)

(set! (-> *robocave-mood* sky-texture-interp) *default-interp-table*)

(set! (-> *robocave-mood* num-stars) 0.0)

(define *snow-mood* (new 'global 'mood-context))

(set! (-> *snow-mood* mood-fog-table) *snow-mood-fog-table*)

(set! (-> *snow-mood* mood-lights-table) *snow-mood-lights-table*)

(set! (-> *snow-mood* mood-sun-table) *snow-mood-sun-table*)

(set! (-> *snow-mood* fog-interp) *default-interp-table*)

(set! (-> *snow-mood* palette-interp) *firecanyon-palette-interp-table*)

(set! (-> *snow-mood* sky-texture-interp) *default-interp-table*)

(set! (-> *snow-mood* num-stars) 0.0)

(define *ogre-mood* (new 'global 'mood-context))

(set! (-> *ogre-mood* mood-fog-table) *ogre-mood-fog-table*)

(set! (-> *ogre-mood* mood-lights-table) *ogre-mood-lights-table*)

(set! (-> *ogre-mood* mood-sun-table) *rolling-mood-sun-table*)

(set! (-> *ogre-mood* fog-interp) *default-interp-table*)

(set! (-> *ogre-mood* palette-interp) *rolling-palette-interp-table*)

(set! (-> *ogre-mood* sky-texture-interp) *village2-sky-texture-table*)

(set! (-> *ogre-mood* num-stars) 0.0)

(define *ogre2-mood* (new 'global 'mood-context))

(set! (-> *ogre2-mood* mood-fog-table) *ogre-mood-fog-table*)

(set! (-> *ogre2-mood* mood-lights-table) *ogre2-mood-lights-table*)

(set! (-> *ogre2-mood* mood-sun-table) *rolling-mood-sun-table*)

(set! (-> *ogre2-mood* fog-interp) *default-interp-table*)

(set! (-> *ogre2-mood* palette-interp) *rolling-palette-interp-table*)

(set! (-> *ogre2-mood* sky-texture-interp) *village2-sky-texture-table*)

(set! (-> *ogre2-mood* num-stars) 0.0)

(define *ogre3-mood* (new 'global 'mood-context))

(set! (-> *ogre3-mood* mood-fog-table) *ogre3-mood-fog-table*)

(set! (-> *ogre3-mood* mood-lights-table) *ogre3-mood-lights-table*)

(set! (-> *ogre3-mood* mood-sun-table) *rolling-mood-sun-table*)

(set! (-> *ogre3-mood* fog-interp) *default-interp-table*)

(set! (-> *ogre3-mood* palette-interp) *rolling-palette-interp-table*)

(set! (-> *ogre3-mood* sky-texture-interp) *village2-sky-texture-table*)

(set! (-> *ogre3-mood* num-stars) 0.0)

(define *village3-mood* (new 'global 'mood-context))

(set! (-> *village3-mood* mood-fog-table) *village3-mood-fog-table*)

(set! (-> *village3-mood* mood-lights-table) *village3-mood-lights-table*)

(set! (-> *village3-mood* mood-sun-table) *village1-mood-sun-table*)

(set! (-> *village3-mood* fog-interp) *default-interp-table*)

(set! (-> *village3-mood* palette-interp) *firecanyon-palette-interp-table*)

(set! (-> *village3-mood* sky-texture-interp) *default-interp-table*)

(set! (-> *village3-mood* num-stars) 0.0)

(make-village3-light-kit *village3-mood*)

(define *finalboss-mood* (new 'global 'mood-context))

(set! (-> *finalboss-mood* mood-fog-table) *finalboss-mood-fog-table*)

(set! (-> *finalboss-mood* mood-lights-table) *village1-mood-lights-table*)

(set! (-> *finalboss-mood* mood-sun-table) *finalboss-mood-sun-table*)

(set! (-> *finalboss-mood* fog-interp) *finalboss-interp-table*)

(set! (-> *finalboss-mood* palette-interp) *village1-palette-interp-table*)

(set! (-> *finalboss-mood* sky-texture-interp) *finalboss-interp-table*)

(set! (-> *finalboss-mood* num-stars) 85.0)

(define *finalboss2-mood* (new 'global 'mood-context))

(set! (-> *finalboss2-mood* mood-fog-table) *finalboss-mood-fog-table*)

(set! (-> *finalboss2-mood* mood-lights-table) *village1-mood-lights-table*)

(set! (-> *finalboss2-mood* mood-sun-table) *finalboss-mood-sun-table*)

(set! (-> *finalboss2-mood* fog-interp) *finalboss-interp-table*)

(set! (-> *finalboss2-mood* palette-interp) *village1-palette-interp-table*)

(set! (-> *finalboss2-mood* sky-texture-interp) *finalboss-interp-table*)

(set! (-> *finalboss2-mood* num-stars) 0.0)

(define *lavatube-mood* (new 'global 'mood-context))

(set! (-> *lavatube-mood* mood-fog-table) *lavatube-mood-fog-table*)

(set! (-> *lavatube-mood* mood-lights-table) *lavatube-mood-lights-table*)

(set! (-> *lavatube-mood* mood-sun-table) *lavatube-mood-sun-table*)

(set! (-> *lavatube-mood* fog-interp) *default-interp-table*)

(set! (-> *lavatube-mood* palette-interp) *default-interp-table*)

(set! (-> *lavatube-mood* sky-texture-interp) *default-interp-table*)

(set! (-> *lavatube-mood* num-stars) 0.0)

(define *citadel-mood* (new 'global 'mood-context))

(set! (-> *citadel-mood* mood-fog-table) *citadel-mood-fog-table*)

(set! (-> *citadel-mood* mood-lights-table) *citadel-mood-lights-table*)

(set! (-> *citadel-mood* mood-sun-table) *citadel-mood-sun-table*)

(set! (-> *citadel-mood* fog-interp) *default-interp-table*)

(set! (-> *citadel-mood* palette-interp) *default-interp-table*)

(set! (-> *citadel-mood* sky-texture-interp) *default-interp-table*)

(set! (-> *citadel-mood* num-stars) 0.0)




