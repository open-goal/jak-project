;;-*-Lisp-*-

(defmacro .mov.vf.x (dest src)
  "Performs `.mov.vf` on the provided arguments with a `:mask` of `#b0001`"
  `(.mov.vf ,dest ,src :mask #b0001))

(defmacro .mov.vf.y (dest src)
  "Performs `.mov.vf` on the provided arguments with a `:mask` of `#b0010`"
  `(.mov.vf ,dest ,src :mask #b0010))

(defmacro .mov.vf.z (dest src)
  "Performs `.mov.vf` on the provided arguments with a `:mask` of `#b0100`"
  `(.mov.vf ,dest ,src :mask #b0100))

(defmacro .mov.vf.w (dest src)
  "Performs `.mov.vf` on the provided arguments with a `:mask` of `#b1000`"
  `(.mov.vf ,dest ,src :mask #b1000))

(defmacro .mov.vf.xy (dest src)
  "Performs `.mov.vf` on the provided arguments with a `:mask` of `#b0011`"
  `(.mov.vf ,dest ,src :mask #b0011))

(defmacro .mov.vf.xz (dest src)
  "Performs `.mov.vf` on the provided arguments with a `:mask` of `#b0101`"
  `(.mov.vf ,dest ,src :mask #b0101))

(defmacro .mov.vf.xw (dest src)
  "Performs `.mov.vf` on the provided arguments with a `:mask` of `#b1001`"
  `(.mov.vf ,dest ,src :mask #b1001))

(defmacro .mov.vf.yz (dest src)
  "Performs `.mov.vf` on the provided arguments with a `:mask` of `#b0110`"
  `(.mov.vf ,dest ,src :mask #b0110))

(defmacro .mov.vf.yw (dest src)
  "Performs `.mov.vf` on the provided arguments with a `:mask` of `#b1010`"
  `(.mov.vf ,dest ,src :mask #b1010))

(defmacro .mov.vf.zw (dest src)
  "Performs `.mov.vf` on the provided arguments with a `:mask` of `#b1100`"
  `(.mov.vf ,dest ,src :mask #b1100))

(defmacro .mov.vf.xyz (dest src)
  "Performs `.mov.vf` on the provided arguments with a `:mask` of `#b0111`"
  `(.mov.vf ,dest ,src :mask #b0111))

(defmacro .mov.vf.xyw (dest src)
  "Performs `.mov.vf` on the provided arguments with a `:mask` of `#b1011`"
  `(.mov.vf ,dest ,src :mask #b1011))

(defmacro .mov.vf.xzw (dest src)
  "Performs `.mov.vf` on the provided arguments with a `:mask` of `#b1101`"
  `(.mov.vf ,dest ,src :mask #b1101))

(defmacro .mov.vf.yzw (dest src)
  "Performs `.mov.vf` on the provided arguments with a `:mask` of `#b1110`"
  `(.mov.vf ,dest ,src :mask #b1110))

(defmacro .mov.vf.xyzw (dest src)
  "Performs `.mov.vf` on the provided arguments with a `:mask` of `#b1111`"
  `(.mov.vf ,dest ,src :mask #b1111))

(defmacro .abs.vf.x (dest src)
  "Performs `.abs.vf` on the provided arguments with a `:mask` of `#b0001`"
  `(.abs.vf ,dest ,src :mask #b0001))

(defmacro .abs.vf.y (dest src)
  "Performs `.abs.vf` on the provided arguments with a `:mask` of `#b0010`"
  `(.abs.vf ,dest ,src :mask #b0010))

(defmacro .abs.vf.z (dest src)
  "Performs `.abs.vf` on the provided arguments with a `:mask` of `#b0100`"
  `(.abs.vf ,dest ,src :mask #b0100))

(defmacro .abs.vf.w (dest src)
  "Performs `.abs.vf` on the provided arguments with a `:mask` of `#b1000`"
  `(.abs.vf ,dest ,src :mask #b1000))

(defmacro .abs.vf.xy (dest src)
  "Performs `.abs.vf` on the provided arguments with a `:mask` of `#b0011`"
  `(.abs.vf ,dest ,src :mask #b0011))

(defmacro .abs.vf.xz (dest src)
  "Performs `.abs.vf` on the provided arguments with a `:mask` of `#b0101`"
  `(.abs.vf ,dest ,src :mask #b0101))

(defmacro .abs.vf.xw (dest src)
  "Performs `.abs.vf` on the provided arguments with a `:mask` of `#b1001`"
  `(.abs.vf ,dest ,src :mask #b1001))

(defmacro .abs.vf.yz (dest src)
  "Performs `.abs.vf` on the provided arguments with a `:mask` of `#b0110`"
  `(.abs.vf ,dest ,src :mask #b0110))

(defmacro .abs.vf.yw (dest src)
  "Performs `.abs.vf` on the provided arguments with a `:mask` of `#b1010`"
  `(.abs.vf ,dest ,src :mask #b1010))

(defmacro .abs.vf.zw (dest src)
  "Performs `.abs.vf` on the provided arguments with a `:mask` of `#b1100`"
  `(.abs.vf ,dest ,src :mask #b1100))

(defmacro .abs.vf.xyz (dest src)
  "Performs `.abs.vf` on the provided arguments with a `:mask` of `#b0111`"
  `(.abs.vf ,dest ,src :mask #b0111))

(defmacro .abs.vf.xyw (dest src)
  "Performs `.abs.vf` on the provided arguments with a `:mask` of `#b1011`"
  `(.abs.vf ,dest ,src :mask #b1011))

(defmacro .abs.vf.xzw (dest src)
  "Performs `.abs.vf` on the provided arguments with a `:mask` of `#b1101`"
  `(.abs.vf ,dest ,src :mask #b1101))

(defmacro .abs.vf.yzw (dest src)
  "Performs `.abs.vf` on the provided arguments with a `:mask` of `#b1110`"
  `(.abs.vf ,dest ,src :mask #b1110))

(defmacro .abs.vf.xyzw (dest src)
  "Performs `.abs.vf` on the provided arguments with a `:mask` of `#b1111`"
  `(.abs.vf ,dest ,src :mask #b1111))

(defmacro .xor.vf.x (dest src1 src2)
  "Performs `.xor.vf` on the provided arguments with a `:mask` of `#b0001`"
  `(.xor.vf ,dest ,src1 ,src2 :mask #b0001))

(defmacro .xor.vf.y (dest src1 src2)
  "Performs `.xor.vf` on the provided arguments with a `:mask` of `#b0010`"
  `(.xor.vf ,dest ,src1 ,src2 :mask #b0010))

(defmacro .xor.vf.z (dest src1 src2)
  "Performs `.xor.vf` on the provided arguments with a `:mask` of `#b0100`"
  `(.xor.vf ,dest ,src1 ,src2 :mask #b0100))

(defmacro .xor.vf.w (dest src1 src2)
  "Performs `.xor.vf` on the provided arguments with a `:mask` of `#b1000`"
  `(.xor.vf ,dest ,src1 ,src2 :mask #b1000))

(defmacro .xor.vf.xy (dest src1 src2)
  "Performs `.xor.vf` on the provided arguments with a `:mask` of `#b0011`"
  `(.xor.vf ,dest ,src1 ,src2 :mask #b0011))

(defmacro .xor.vf.xz (dest src1 src2)
  "Performs `.xor.vf` on the provided arguments with a `:mask` of `#b0101`"
  `(.xor.vf ,dest ,src1 ,src2 :mask #b0101))

(defmacro .xor.vf.xw (dest src1 src2)
  "Performs `.xor.vf` on the provided arguments with a `:mask` of `#b1001`"
  `(.xor.vf ,dest ,src1 ,src2 :mask #b1001))

(defmacro .xor.vf.yz (dest src1 src2)
  "Performs `.xor.vf` on the provided arguments with a `:mask` of `#b0110`"
  `(.xor.vf ,dest ,src1 ,src2 :mask #b0110))

(defmacro .xor.vf.yw (dest src1 src2)
  "Performs `.xor.vf` on the provided arguments with a `:mask` of `#b1010`"
  `(.xor.vf ,dest ,src1 ,src2 :mask #b1010))

(defmacro .xor.vf.zw (dest src1 src2)
  "Performs `.xor.vf` on the provided arguments with a `:mask` of `#b1100`"
  `(.xor.vf ,dest ,src1 ,src2 :mask #b1100))

(defmacro .xor.vf.xyz (dest src1 src2)
  "Performs `.xor.vf` on the provided arguments with a `:mask` of `#b0111`"
  `(.xor.vf ,dest ,src1 ,src2 :mask #b0111))

(defmacro .xor.vf.xyw (dest src1 src2)
  "Performs `.xor.vf` on the provided arguments with a `:mask` of `#b1011`"
  `(.xor.vf ,dest ,src1 ,src2 :mask #b1011))

(defmacro .xor.vf.xzw (dest src1 src2)
  "Performs `.xor.vf` on the provided arguments with a `:mask` of `#b1101`"
  `(.xor.vf ,dest ,src1 ,src2 :mask #b1101))

(defmacro .xor.vf.yzw (dest src1 src2)
  "Performs `.xor.vf` on the provided arguments with a `:mask` of `#b1110`"
  `(.xor.vf ,dest ,src1 ,src2 :mask #b1110))

(defmacro .xor.vf.xyzw (dest src1 src2)
  "Performs `.xor.vf` on the provided arguments with a `:mask` of `#b1111`"
  `(.xor.vf ,dest ,src1 ,src2 :mask #b1111))

(defmacro .blend.vf.x (dest src1 src2)
  "Performs `.blend.vf` on the provided arguments with a `:mask` of `#b0001`"
  `(.blend.vf ,dest ,src1 ,src2 :mask #b0001))

(defmacro .blend.vf.y (dest src1 src2)
  "Performs `.blend.vf` on the provided arguments with a `:mask` of `#b0010`"
  `(.blend.vf ,dest ,src1 ,src2 :mask #b0010))

(defmacro .blend.vf.z (dest src1 src2)
  "Performs `.blend.vf` on the provided arguments with a `:mask` of `#b0100`"
  `(.blend.vf ,dest ,src1 ,src2 :mask #b0100))

(defmacro .blend.vf.w (dest src1 src2)
  "Performs `.blend.vf` on the provided arguments with a `:mask` of `#b1000`"
  `(.blend.vf ,dest ,src1 ,src2 :mask #b1000))

(defmacro .blend.vf.xy (dest src1 src2)
  "Performs `.blend.vf` on the provided arguments with a `:mask` of `#b0011`"
  `(.blend.vf ,dest ,src1 ,src2 :mask #b0011))

(defmacro .blend.vf.xz (dest src1 src2)
  "Performs `.blend.vf` on the provided arguments with a `:mask` of `#b0101`"
  `(.blend.vf ,dest ,src1 ,src2 :mask #b0101))

(defmacro .blend.vf.xw (dest src1 src2)
  "Performs `.blend.vf` on the provided arguments with a `:mask` of `#b1001`"
  `(.blend.vf ,dest ,src1 ,src2 :mask #b1001))

(defmacro .blend.vf.yz (dest src1 src2)
  "Performs `.blend.vf` on the provided arguments with a `:mask` of `#b0110`"
  `(.blend.vf ,dest ,src1 ,src2 :mask #b0110))

(defmacro .blend.vf.yw (dest src1 src2)
  "Performs `.blend.vf` on the provided arguments with a `:mask` of `#b1010`"
  `(.blend.vf ,dest ,src1 ,src2 :mask #b1010))

(defmacro .blend.vf.zw (dest src1 src2)
  "Performs `.blend.vf` on the provided arguments with a `:mask` of `#b1100`"
  `(.blend.vf ,dest ,src1 ,src2 :mask #b1100))

(defmacro .blend.vf.xyz (dest src1 src2)
  "Performs `.blend.vf` on the provided arguments with a `:mask` of `#b0111`"
  `(.blend.vf ,dest ,src1 ,src2 :mask #b0111))

(defmacro .blend.vf.xyw (dest src1 src2)
  "Performs `.blend.vf` on the provided arguments with a `:mask` of `#b1011`"
  `(.blend.vf ,dest ,src1 ,src2 :mask #b1011))

(defmacro .blend.vf.xzw (dest src1 src2)
  "Performs `.blend.vf` on the provided arguments with a `:mask` of `#b1101`"
  `(.blend.vf ,dest ,src1 ,src2 :mask #b1101))

(defmacro .blend.vf.yzw (dest src1 src2)
  "Performs `.blend.vf` on the provided arguments with a `:mask` of `#b1110`"
  `(.blend.vf ,dest ,src1 ,src2 :mask #b1110))

(defmacro .blend.vf.xyzw (dest src1 src2)
  "Performs `.blend.vf` on the provided arguments with a `:mask` of `#b1111`"
  `(.blend.vf ,dest ,src1 ,src2 :mask #b1111))

(defmacro .max.vf.x (dest src1 src2)
  "Performs `.max.vf` on the provided arguments with a `:mask` of `#b0001`"
  `(.max.vf ,dest ,src1 ,src2 :mask #b0001))

(defmacro .max.vf.y (dest src1 src2)
  "Performs `.max.vf` on the provided arguments with a `:mask` of `#b0010`"
  `(.max.vf ,dest ,src1 ,src2 :mask #b0010))

(defmacro .max.vf.z (dest src1 src2)
  "Performs `.max.vf` on the provided arguments with a `:mask` of `#b0100`"
  `(.max.vf ,dest ,src1 ,src2 :mask #b0100))

(defmacro .max.vf.w (dest src1 src2)
  "Performs `.max.vf` on the provided arguments with a `:mask` of `#b1000`"
  `(.max.vf ,dest ,src1 ,src2 :mask #b1000))

(defmacro .max.vf.xy (dest src1 src2)
  "Performs `.max.vf` on the provided arguments with a `:mask` of `#b0011`"
  `(.max.vf ,dest ,src1 ,src2 :mask #b0011))

(defmacro .max.vf.xz (dest src1 src2)
  "Performs `.max.vf` on the provided arguments with a `:mask` of `#b0101`"
  `(.max.vf ,dest ,src1 ,src2 :mask #b0101))

(defmacro .max.vf.xw (dest src1 src2)
  "Performs `.max.vf` on the provided arguments with a `:mask` of `#b1001`"
  `(.max.vf ,dest ,src1 ,src2 :mask #b1001))

(defmacro .max.vf.yz (dest src1 src2)
  "Performs `.max.vf` on the provided arguments with a `:mask` of `#b0110`"
  `(.max.vf ,dest ,src1 ,src2 :mask #b0110))

(defmacro .max.vf.yw (dest src1 src2)
  "Performs `.max.vf` on the provided arguments with a `:mask` of `#b1010`"
  `(.max.vf ,dest ,src1 ,src2 :mask #b1010))

(defmacro .max.vf.zw (dest src1 src2)
  "Performs `.max.vf` on the provided arguments with a `:mask` of `#b1100`"
  `(.max.vf ,dest ,src1 ,src2 :mask #b1100))

(defmacro .max.vf.xyz (dest src1 src2)
  "Performs `.max.vf` on the provided arguments with a `:mask` of `#b0111`"
  `(.max.vf ,dest ,src1 ,src2 :mask #b0111))

(defmacro .max.vf.xyw (dest src1 src2)
  "Performs `.max.vf` on the provided arguments with a `:mask` of `#b1011`"
  `(.max.vf ,dest ,src1 ,src2 :mask #b1011))

(defmacro .max.vf.xzw (dest src1 src2)
  "Performs `.max.vf` on the provided arguments with a `:mask` of `#b1101`"
  `(.max.vf ,dest ,src1 ,src2 :mask #b1101))

(defmacro .max.vf.yzw (dest src1 src2)
  "Performs `.max.vf` on the provided arguments with a `:mask` of `#b1110`"
  `(.max.vf ,dest ,src1 ,src2 :mask #b1110))

(defmacro .max.vf.xyzw (dest src1 src2)
  "Performs `.max.vf` on the provided arguments with a `:mask` of `#b1111`"
  `(.max.vf ,dest ,src1 ,src2 :mask #b1111))

(defmacro .max.x.vf.x (dest src1 src2)
  "Performs `.max.x.vf` on the provided arguments with a `:mask` of `#b0001`"
  `(.max.x.vf ,dest ,src1 ,src2 :mask #b0001))

(defmacro .max.x.vf.y (dest src1 src2)
  "Performs `.max.x.vf` on the provided arguments with a `:mask` of `#b0010`"
  `(.max.x.vf ,dest ,src1 ,src2 :mask #b0010))

(defmacro .max.x.vf.z (dest src1 src2)
  "Performs `.max.x.vf` on the provided arguments with a `:mask` of `#b0100`"
  `(.max.x.vf ,dest ,src1 ,src2 :mask #b0100))

(defmacro .max.x.vf.w (dest src1 src2)
  "Performs `.max.x.vf` on the provided arguments with a `:mask` of `#b1000`"
  `(.max.x.vf ,dest ,src1 ,src2 :mask #b1000))

(defmacro .max.x.vf.xy (dest src1 src2)
  "Performs `.max.x.vf` on the provided arguments with a `:mask` of `#b0011`"
  `(.max.x.vf ,dest ,src1 ,src2 :mask #b0011))

(defmacro .max.x.vf.xz (dest src1 src2)
  "Performs `.max.x.vf` on the provided arguments with a `:mask` of `#b0101`"
  `(.max.x.vf ,dest ,src1 ,src2 :mask #b0101))

(defmacro .max.x.vf.xw (dest src1 src2)
  "Performs `.max.x.vf` on the provided arguments with a `:mask` of `#b1001`"
  `(.max.x.vf ,dest ,src1 ,src2 :mask #b1001))

(defmacro .max.x.vf.yz (dest src1 src2)
  "Performs `.max.x.vf` on the provided arguments with a `:mask` of `#b0110`"
  `(.max.x.vf ,dest ,src1 ,src2 :mask #b0110))

(defmacro .max.x.vf.yw (dest src1 src2)
  "Performs `.max.x.vf` on the provided arguments with a `:mask` of `#b1010`"
  `(.max.x.vf ,dest ,src1 ,src2 :mask #b1010))

(defmacro .max.x.vf.zw (dest src1 src2)
  "Performs `.max.x.vf` on the provided arguments with a `:mask` of `#b1100`"
  `(.max.x.vf ,dest ,src1 ,src2 :mask #b1100))

(defmacro .max.x.vf.xyz (dest src1 src2)
  "Performs `.max.x.vf` on the provided arguments with a `:mask` of `#b0111`"
  `(.max.x.vf ,dest ,src1 ,src2 :mask #b0111))

(defmacro .max.x.vf.xyw (dest src1 src2)
  "Performs `.max.x.vf` on the provided arguments with a `:mask` of `#b1011`"
  `(.max.x.vf ,dest ,src1 ,src2 :mask #b1011))

(defmacro .max.x.vf.xzw (dest src1 src2)
  "Performs `.max.x.vf` on the provided arguments with a `:mask` of `#b1101`"
  `(.max.x.vf ,dest ,src1 ,src2 :mask #b1101))

(defmacro .max.x.vf.yzw (dest src1 src2)
  "Performs `.max.x.vf` on the provided arguments with a `:mask` of `#b1110`"
  `(.max.x.vf ,dest ,src1 ,src2 :mask #b1110))

(defmacro .max.x.vf.xyzw (dest src1 src2)
  "Performs `.max.x.vf` on the provided arguments with a `:mask` of `#b1111`"
  `(.max.x.vf ,dest ,src1 ,src2 :mask #b1111))

(defmacro .max.y.vf.x (dest src1 src2)
  "Performs `.max.y.vf` on the provided arguments with a `:mask` of `#b0001`"
  `(.max.y.vf ,dest ,src1 ,src2 :mask #b0001))

(defmacro .max.y.vf.y (dest src1 src2)
  "Performs `.max.y.vf` on the provided arguments with a `:mask` of `#b0010`"
  `(.max.y.vf ,dest ,src1 ,src2 :mask #b0010))

(defmacro .max.y.vf.z (dest src1 src2)
  "Performs `.max.y.vf` on the provided arguments with a `:mask` of `#b0100`"
  `(.max.y.vf ,dest ,src1 ,src2 :mask #b0100))

(defmacro .max.y.vf.w (dest src1 src2)
  "Performs `.max.y.vf` on the provided arguments with a `:mask` of `#b1000`"
  `(.max.y.vf ,dest ,src1 ,src2 :mask #b1000))

(defmacro .max.y.vf.xy (dest src1 src2)
  "Performs `.max.y.vf` on the provided arguments with a `:mask` of `#b0011`"
  `(.max.y.vf ,dest ,src1 ,src2 :mask #b0011))

(defmacro .max.y.vf.xz (dest src1 src2)
  "Performs `.max.y.vf` on the provided arguments with a `:mask` of `#b0101`"
  `(.max.y.vf ,dest ,src1 ,src2 :mask #b0101))

(defmacro .max.y.vf.xw (dest src1 src2)
  "Performs `.max.y.vf` on the provided arguments with a `:mask` of `#b1001`"
  `(.max.y.vf ,dest ,src1 ,src2 :mask #b1001))

(defmacro .max.y.vf.yz (dest src1 src2)
  "Performs `.max.y.vf` on the provided arguments with a `:mask` of `#b0110`"
  `(.max.y.vf ,dest ,src1 ,src2 :mask #b0110))

(defmacro .max.y.vf.yw (dest src1 src2)
  "Performs `.max.y.vf` on the provided arguments with a `:mask` of `#b1010`"
  `(.max.y.vf ,dest ,src1 ,src2 :mask #b1010))

(defmacro .max.y.vf.zw (dest src1 src2)
  "Performs `.max.y.vf` on the provided arguments with a `:mask` of `#b1100`"
  `(.max.y.vf ,dest ,src1 ,src2 :mask #b1100))

(defmacro .max.y.vf.xyz (dest src1 src2)
  "Performs `.max.y.vf` on the provided arguments with a `:mask` of `#b0111`"
  `(.max.y.vf ,dest ,src1 ,src2 :mask #b0111))

(defmacro .max.y.vf.xyw (dest src1 src2)
  "Performs `.max.y.vf` on the provided arguments with a `:mask` of `#b1011`"
  `(.max.y.vf ,dest ,src1 ,src2 :mask #b1011))

(defmacro .max.y.vf.xzw (dest src1 src2)
  "Performs `.max.y.vf` on the provided arguments with a `:mask` of `#b1101`"
  `(.max.y.vf ,dest ,src1 ,src2 :mask #b1101))

(defmacro .max.y.vf.yzw (dest src1 src2)
  "Performs `.max.y.vf` on the provided arguments with a `:mask` of `#b1110`"
  `(.max.y.vf ,dest ,src1 ,src2 :mask #b1110))

(defmacro .max.y.vf.xyzw (dest src1 src2)
  "Performs `.max.y.vf` on the provided arguments with a `:mask` of `#b1111`"
  `(.max.y.vf ,dest ,src1 ,src2 :mask #b1111))

(defmacro .max.z.vf.x (dest src1 src2)
  "Performs `.max.z.vf` on the provided arguments with a `:mask` of `#b0001`"
  `(.max.z.vf ,dest ,src1 ,src2 :mask #b0001))

(defmacro .max.z.vf.y (dest src1 src2)
  "Performs `.max.z.vf` on the provided arguments with a `:mask` of `#b0010`"
  `(.max.z.vf ,dest ,src1 ,src2 :mask #b0010))

(defmacro .max.z.vf.z (dest src1 src2)
  "Performs `.max.z.vf` on the provided arguments with a `:mask` of `#b0100`"
  `(.max.z.vf ,dest ,src1 ,src2 :mask #b0100))

(defmacro .max.z.vf.w (dest src1 src2)
  "Performs `.max.z.vf` on the provided arguments with a `:mask` of `#b1000`"
  `(.max.z.vf ,dest ,src1 ,src2 :mask #b1000))

(defmacro .max.z.vf.xy (dest src1 src2)
  "Performs `.max.z.vf` on the provided arguments with a `:mask` of `#b0011`"
  `(.max.z.vf ,dest ,src1 ,src2 :mask #b0011))

(defmacro .max.z.vf.xz (dest src1 src2)
  "Performs `.max.z.vf` on the provided arguments with a `:mask` of `#b0101`"
  `(.max.z.vf ,dest ,src1 ,src2 :mask #b0101))

(defmacro .max.z.vf.xw (dest src1 src2)
  "Performs `.max.z.vf` on the provided arguments with a `:mask` of `#b1001`"
  `(.max.z.vf ,dest ,src1 ,src2 :mask #b1001))

(defmacro .max.z.vf.yz (dest src1 src2)
  "Performs `.max.z.vf` on the provided arguments with a `:mask` of `#b0110`"
  `(.max.z.vf ,dest ,src1 ,src2 :mask #b0110))

(defmacro .max.z.vf.yw (dest src1 src2)
  "Performs `.max.z.vf` on the provided arguments with a `:mask` of `#b1010`"
  `(.max.z.vf ,dest ,src1 ,src2 :mask #b1010))

(defmacro .max.z.vf.zw (dest src1 src2)
  "Performs `.max.z.vf` on the provided arguments with a `:mask` of `#b1100`"
  `(.max.z.vf ,dest ,src1 ,src2 :mask #b1100))

(defmacro .max.z.vf.xyz (dest src1 src2)
  "Performs `.max.z.vf` on the provided arguments with a `:mask` of `#b0111`"
  `(.max.z.vf ,dest ,src1 ,src2 :mask #b0111))

(defmacro .max.z.vf.xyw (dest src1 src2)
  "Performs `.max.z.vf` on the provided arguments with a `:mask` of `#b1011`"
  `(.max.z.vf ,dest ,src1 ,src2 :mask #b1011))

(defmacro .max.z.vf.xzw (dest src1 src2)
  "Performs `.max.z.vf` on the provided arguments with a `:mask` of `#b1101`"
  `(.max.z.vf ,dest ,src1 ,src2 :mask #b1101))

(defmacro .max.z.vf.yzw (dest src1 src2)
  "Performs `.max.z.vf` on the provided arguments with a `:mask` of `#b1110`"
  `(.max.z.vf ,dest ,src1 ,src2 :mask #b1110))

(defmacro .max.z.vf.xyzw (dest src1 src2)
  "Performs `.max.z.vf` on the provided arguments with a `:mask` of `#b1111`"
  `(.max.z.vf ,dest ,src1 ,src2 :mask #b1111))

(defmacro .max.w.vf.x (dest src1 src2)
  "Performs `.max.w.vf` on the provided arguments with a `:mask` of `#b0001`"
  `(.max.w.vf ,dest ,src1 ,src2 :mask #b0001))

(defmacro .max.w.vf.y (dest src1 src2)
  "Performs `.max.w.vf` on the provided arguments with a `:mask` of `#b0010`"
  `(.max.w.vf ,dest ,src1 ,src2 :mask #b0010))

(defmacro .max.w.vf.z (dest src1 src2)
  "Performs `.max.w.vf` on the provided arguments with a `:mask` of `#b0100`"
  `(.max.w.vf ,dest ,src1 ,src2 :mask #b0100))

(defmacro .max.w.vf.w (dest src1 src2)
  "Performs `.max.w.vf` on the provided arguments with a `:mask` of `#b1000`"
  `(.max.w.vf ,dest ,src1 ,src2 :mask #b1000))

(defmacro .max.w.vf.xy (dest src1 src2)
  "Performs `.max.w.vf` on the provided arguments with a `:mask` of `#b0011`"
  `(.max.w.vf ,dest ,src1 ,src2 :mask #b0011))

(defmacro .max.w.vf.xz (dest src1 src2)
  "Performs `.max.w.vf` on the provided arguments with a `:mask` of `#b0101`"
  `(.max.w.vf ,dest ,src1 ,src2 :mask #b0101))

(defmacro .max.w.vf.xw (dest src1 src2)
  "Performs `.max.w.vf` on the provided arguments with a `:mask` of `#b1001`"
  `(.max.w.vf ,dest ,src1 ,src2 :mask #b1001))

(defmacro .max.w.vf.yz (dest src1 src2)
  "Performs `.max.w.vf` on the provided arguments with a `:mask` of `#b0110`"
  `(.max.w.vf ,dest ,src1 ,src2 :mask #b0110))

(defmacro .max.w.vf.yw (dest src1 src2)
  "Performs `.max.w.vf` on the provided arguments with a `:mask` of `#b1010`"
  `(.max.w.vf ,dest ,src1 ,src2 :mask #b1010))

(defmacro .max.w.vf.zw (dest src1 src2)
  "Performs `.max.w.vf` on the provided arguments with a `:mask` of `#b1100`"
  `(.max.w.vf ,dest ,src1 ,src2 :mask #b1100))

(defmacro .max.w.vf.xyz (dest src1 src2)
  "Performs `.max.w.vf` on the provided arguments with a `:mask` of `#b0111`"
  `(.max.w.vf ,dest ,src1 ,src2 :mask #b0111))

(defmacro .max.w.vf.xyw (dest src1 src2)
  "Performs `.max.w.vf` on the provided arguments with a `:mask` of `#b1011`"
  `(.max.w.vf ,dest ,src1 ,src2 :mask #b1011))

(defmacro .max.w.vf.xzw (dest src1 src2)
  "Performs `.max.w.vf` on the provided arguments with a `:mask` of `#b1101`"
  `(.max.w.vf ,dest ,src1 ,src2 :mask #b1101))

(defmacro .max.w.vf.yzw (dest src1 src2)
  "Performs `.max.w.vf` on the provided arguments with a `:mask` of `#b1110`"
  `(.max.w.vf ,dest ,src1 ,src2 :mask #b1110))

(defmacro .max.w.vf.xyzw (dest src1 src2)
  "Performs `.max.w.vf` on the provided arguments with a `:mask` of `#b1111`"
  `(.max.w.vf ,dest ,src1 ,src2 :mask #b1111))

(defmacro .min.vf.x (dest src1 src2)
  "Performs `.min.vf` on the provided arguments with a `:mask` of `#b0001`"
  `(.min.vf ,dest ,src1 ,src2 :mask #b0001))

(defmacro .min.vf.y (dest src1 src2)
  "Performs `.min.vf` on the provided arguments with a `:mask` of `#b0010`"
  `(.min.vf ,dest ,src1 ,src2 :mask #b0010))

(defmacro .min.vf.z (dest src1 src2)
  "Performs `.min.vf` on the provided arguments with a `:mask` of `#b0100`"
  `(.min.vf ,dest ,src1 ,src2 :mask #b0100))

(defmacro .min.vf.w (dest src1 src2)
  "Performs `.min.vf` on the provided arguments with a `:mask` of `#b1000`"
  `(.min.vf ,dest ,src1 ,src2 :mask #b1000))

(defmacro .min.vf.xy (dest src1 src2)
  "Performs `.min.vf` on the provided arguments with a `:mask` of `#b0011`"
  `(.min.vf ,dest ,src1 ,src2 :mask #b0011))

(defmacro .min.vf.xz (dest src1 src2)
  "Performs `.min.vf` on the provided arguments with a `:mask` of `#b0101`"
  `(.min.vf ,dest ,src1 ,src2 :mask #b0101))

(defmacro .min.vf.xw (dest src1 src2)
  "Performs `.min.vf` on the provided arguments with a `:mask` of `#b1001`"
  `(.min.vf ,dest ,src1 ,src2 :mask #b1001))

(defmacro .min.vf.yz (dest src1 src2)
  "Performs `.min.vf` on the provided arguments with a `:mask` of `#b0110`"
  `(.min.vf ,dest ,src1 ,src2 :mask #b0110))

(defmacro .min.vf.yw (dest src1 src2)
  "Performs `.min.vf` on the provided arguments with a `:mask` of `#b1010`"
  `(.min.vf ,dest ,src1 ,src2 :mask #b1010))

(defmacro .min.vf.zw (dest src1 src2)
  "Performs `.min.vf` on the provided arguments with a `:mask` of `#b1100`"
  `(.min.vf ,dest ,src1 ,src2 :mask #b1100))

(defmacro .min.vf.xyz (dest src1 src2)
  "Performs `.min.vf` on the provided arguments with a `:mask` of `#b0111`"
  `(.min.vf ,dest ,src1 ,src2 :mask #b0111))

(defmacro .min.vf.xyw (dest src1 src2)
  "Performs `.min.vf` on the provided arguments with a `:mask` of `#b1011`"
  `(.min.vf ,dest ,src1 ,src2 :mask #b1011))

(defmacro .min.vf.xzw (dest src1 src2)
  "Performs `.min.vf` on the provided arguments with a `:mask` of `#b1101`"
  `(.min.vf ,dest ,src1 ,src2 :mask #b1101))

(defmacro .min.vf.yzw (dest src1 src2)
  "Performs `.min.vf` on the provided arguments with a `:mask` of `#b1110`"
  `(.min.vf ,dest ,src1 ,src2 :mask #b1110))

(defmacro .min.vf.xyzw (dest src1 src2)
  "Performs `.min.vf` on the provided arguments with a `:mask` of `#b1111`"
  `(.min.vf ,dest ,src1 ,src2 :mask #b1111))

(defmacro .min.x.vf.x (dest src1 src2)
  "Performs `.min.x.vf` on the provided arguments with a `:mask` of `#b0001`"
  `(.min.x.vf ,dest ,src1 ,src2 :mask #b0001))

(defmacro .min.x.vf.y (dest src1 src2)
  "Performs `.min.x.vf` on the provided arguments with a `:mask` of `#b0010`"
  `(.min.x.vf ,dest ,src1 ,src2 :mask #b0010))

(defmacro .min.x.vf.z (dest src1 src2)
  "Performs `.min.x.vf` on the provided arguments with a `:mask` of `#b0100`"
  `(.min.x.vf ,dest ,src1 ,src2 :mask #b0100))

(defmacro .min.x.vf.w (dest src1 src2)
  "Performs `.min.x.vf` on the provided arguments with a `:mask` of `#b1000`"
  `(.min.x.vf ,dest ,src1 ,src2 :mask #b1000))

(defmacro .min.x.vf.xy (dest src1 src2)
  "Performs `.min.x.vf` on the provided arguments with a `:mask` of `#b0011`"
  `(.min.x.vf ,dest ,src1 ,src2 :mask #b0011))

(defmacro .min.x.vf.xz (dest src1 src2)
  "Performs `.min.x.vf` on the provided arguments with a `:mask` of `#b0101`"
  `(.min.x.vf ,dest ,src1 ,src2 :mask #b0101))

(defmacro .min.x.vf.xw (dest src1 src2)
  "Performs `.min.x.vf` on the provided arguments with a `:mask` of `#b1001`"
  `(.min.x.vf ,dest ,src1 ,src2 :mask #b1001))

(defmacro .min.x.vf.yz (dest src1 src2)
  "Performs `.min.x.vf` on the provided arguments with a `:mask` of `#b0110`"
  `(.min.x.vf ,dest ,src1 ,src2 :mask #b0110))

(defmacro .min.x.vf.yw (dest src1 src2)
  "Performs `.min.x.vf` on the provided arguments with a `:mask` of `#b1010`"
  `(.min.x.vf ,dest ,src1 ,src2 :mask #b1010))

(defmacro .min.x.vf.zw (dest src1 src2)
  "Performs `.min.x.vf` on the provided arguments with a `:mask` of `#b1100`"
  `(.min.x.vf ,dest ,src1 ,src2 :mask #b1100))

(defmacro .min.x.vf.xyz (dest src1 src2)
  "Performs `.min.x.vf` on the provided arguments with a `:mask` of `#b0111`"
  `(.min.x.vf ,dest ,src1 ,src2 :mask #b0111))

(defmacro .min.x.vf.xyw (dest src1 src2)
  "Performs `.min.x.vf` on the provided arguments with a `:mask` of `#b1011`"
  `(.min.x.vf ,dest ,src1 ,src2 :mask #b1011))

(defmacro .min.x.vf.xzw (dest src1 src2)
  "Performs `.min.x.vf` on the provided arguments with a `:mask` of `#b1101`"
  `(.min.x.vf ,dest ,src1 ,src2 :mask #b1101))

(defmacro .min.x.vf.yzw (dest src1 src2)
  "Performs `.min.x.vf` on the provided arguments with a `:mask` of `#b1110`"
  `(.min.x.vf ,dest ,src1 ,src2 :mask #b1110))

(defmacro .min.x.vf.xyzw (dest src1 src2)
  "Performs `.min.x.vf` on the provided arguments with a `:mask` of `#b1111`"
  `(.min.x.vf ,dest ,src1 ,src2 :mask #b1111))

(defmacro .min.y.vf.x (dest src1 src2)
  "Performs `.min.y.vf` on the provided arguments with a `:mask` of `#b0001`"
  `(.min.y.vf ,dest ,src1 ,src2 :mask #b0001))

(defmacro .min.y.vf.y (dest src1 src2)
  "Performs `.min.y.vf` on the provided arguments with a `:mask` of `#b0010`"
  `(.min.y.vf ,dest ,src1 ,src2 :mask #b0010))

(defmacro .min.y.vf.z (dest src1 src2)
  "Performs `.min.y.vf` on the provided arguments with a `:mask` of `#b0100`"
  `(.min.y.vf ,dest ,src1 ,src2 :mask #b0100))

(defmacro .min.y.vf.w (dest src1 src2)
  "Performs `.min.y.vf` on the provided arguments with a `:mask` of `#b1000`"
  `(.min.y.vf ,dest ,src1 ,src2 :mask #b1000))

(defmacro .min.y.vf.xy (dest src1 src2)
  "Performs `.min.y.vf` on the provided arguments with a `:mask` of `#b0011`"
  `(.min.y.vf ,dest ,src1 ,src2 :mask #b0011))

(defmacro .min.y.vf.xz (dest src1 src2)
  "Performs `.min.y.vf` on the provided arguments with a `:mask` of `#b0101`"
  `(.min.y.vf ,dest ,src1 ,src2 :mask #b0101))

(defmacro .min.y.vf.xw (dest src1 src2)
  "Performs `.min.y.vf` on the provided arguments with a `:mask` of `#b1001`"
  `(.min.y.vf ,dest ,src1 ,src2 :mask #b1001))

(defmacro .min.y.vf.yz (dest src1 src2)
  "Performs `.min.y.vf` on the provided arguments with a `:mask` of `#b0110`"
  `(.min.y.vf ,dest ,src1 ,src2 :mask #b0110))

(defmacro .min.y.vf.yw (dest src1 src2)
  "Performs `.min.y.vf` on the provided arguments with a `:mask` of `#b1010`"
  `(.min.y.vf ,dest ,src1 ,src2 :mask #b1010))

(defmacro .min.y.vf.zw (dest src1 src2)
  "Performs `.min.y.vf` on the provided arguments with a `:mask` of `#b1100`"
  `(.min.y.vf ,dest ,src1 ,src2 :mask #b1100))

(defmacro .min.y.vf.xyz (dest src1 src2)
  "Performs `.min.y.vf` on the provided arguments with a `:mask` of `#b0111`"
  `(.min.y.vf ,dest ,src1 ,src2 :mask #b0111))

(defmacro .min.y.vf.xyw (dest src1 src2)
  "Performs `.min.y.vf` on the provided arguments with a `:mask` of `#b1011`"
  `(.min.y.vf ,dest ,src1 ,src2 :mask #b1011))

(defmacro .min.y.vf.xzw (dest src1 src2)
  "Performs `.min.y.vf` on the provided arguments with a `:mask` of `#b1101`"
  `(.min.y.vf ,dest ,src1 ,src2 :mask #b1101))

(defmacro .min.y.vf.yzw (dest src1 src2)
  "Performs `.min.y.vf` on the provided arguments with a `:mask` of `#b1110`"
  `(.min.y.vf ,dest ,src1 ,src2 :mask #b1110))

(defmacro .min.y.vf.xyzw (dest src1 src2)
  "Performs `.min.y.vf` on the provided arguments with a `:mask` of `#b1111`"
  `(.min.y.vf ,dest ,src1 ,src2 :mask #b1111))

(defmacro .min.z.vf.x (dest src1 src2)
  "Performs `.min.z.vf` on the provided arguments with a `:mask` of `#b0001`"
  `(.min.z.vf ,dest ,src1 ,src2 :mask #b0001))

(defmacro .min.z.vf.y (dest src1 src2)
  "Performs `.min.z.vf` on the provided arguments with a `:mask` of `#b0010`"
  `(.min.z.vf ,dest ,src1 ,src2 :mask #b0010))

(defmacro .min.z.vf.z (dest src1 src2)
  "Performs `.min.z.vf` on the provided arguments with a `:mask` of `#b0100`"
  `(.min.z.vf ,dest ,src1 ,src2 :mask #b0100))

(defmacro .min.z.vf.w (dest src1 src2)
  "Performs `.min.z.vf` on the provided arguments with a `:mask` of `#b1000`"
  `(.min.z.vf ,dest ,src1 ,src2 :mask #b1000))

(defmacro .min.z.vf.xy (dest src1 src2)
  "Performs `.min.z.vf` on the provided arguments with a `:mask` of `#b0011`"
  `(.min.z.vf ,dest ,src1 ,src2 :mask #b0011))

(defmacro .min.z.vf.xz (dest src1 src2)
  "Performs `.min.z.vf` on the provided arguments with a `:mask` of `#b0101`"
  `(.min.z.vf ,dest ,src1 ,src2 :mask #b0101))

(defmacro .min.z.vf.xw (dest src1 src2)
  "Performs `.min.z.vf` on the provided arguments with a `:mask` of `#b1001`"
  `(.min.z.vf ,dest ,src1 ,src2 :mask #b1001))

(defmacro .min.z.vf.yz (dest src1 src2)
  "Performs `.min.z.vf` on the provided arguments with a `:mask` of `#b0110`"
  `(.min.z.vf ,dest ,src1 ,src2 :mask #b0110))

(defmacro .min.z.vf.yw (dest src1 src2)
  "Performs `.min.z.vf` on the provided arguments with a `:mask` of `#b1010`"
  `(.min.z.vf ,dest ,src1 ,src2 :mask #b1010))

(defmacro .min.z.vf.zw (dest src1 src2)
  "Performs `.min.z.vf` on the provided arguments with a `:mask` of `#b1100`"
  `(.min.z.vf ,dest ,src1 ,src2 :mask #b1100))

(defmacro .min.z.vf.xyz (dest src1 src2)
  "Performs `.min.z.vf` on the provided arguments with a `:mask` of `#b0111`"
  `(.min.z.vf ,dest ,src1 ,src2 :mask #b0111))

(defmacro .min.z.vf.xyw (dest src1 src2)
  "Performs `.min.z.vf` on the provided arguments with a `:mask` of `#b1011`"
  `(.min.z.vf ,dest ,src1 ,src2 :mask #b1011))

(defmacro .min.z.vf.xzw (dest src1 src2)
  "Performs `.min.z.vf` on the provided arguments with a `:mask` of `#b1101`"
  `(.min.z.vf ,dest ,src1 ,src2 :mask #b1101))

(defmacro .min.z.vf.yzw (dest src1 src2)
  "Performs `.min.z.vf` on the provided arguments with a `:mask` of `#b1110`"
  `(.min.z.vf ,dest ,src1 ,src2 :mask #b1110))

(defmacro .min.z.vf.xyzw (dest src1 src2)
  "Performs `.min.z.vf` on the provided arguments with a `:mask` of `#b1111`"
  `(.min.z.vf ,dest ,src1 ,src2 :mask #b1111))

(defmacro .min.w.vf.x (dest src1 src2)
  "Performs `.min.w.vf` on the provided arguments with a `:mask` of `#b0001`"
  `(.min.w.vf ,dest ,src1 ,src2 :mask #b0001))

(defmacro .min.w.vf.y (dest src1 src2)
  "Performs `.min.w.vf` on the provided arguments with a `:mask` of `#b0010`"
  `(.min.w.vf ,dest ,src1 ,src2 :mask #b0010))

(defmacro .min.w.vf.z (dest src1 src2)
  "Performs `.min.w.vf` on the provided arguments with a `:mask` of `#b0100`"
  `(.min.w.vf ,dest ,src1 ,src2 :mask #b0100))

(defmacro .min.w.vf.w (dest src1 src2)
  "Performs `.min.w.vf` on the provided arguments with a `:mask` of `#b1000`"
  `(.min.w.vf ,dest ,src1 ,src2 :mask #b1000))

(defmacro .min.w.vf.xy (dest src1 src2)
  "Performs `.min.w.vf` on the provided arguments with a `:mask` of `#b0011`"
  `(.min.w.vf ,dest ,src1 ,src2 :mask #b0011))

(defmacro .min.w.vf.xz (dest src1 src2)
  "Performs `.min.w.vf` on the provided arguments with a `:mask` of `#b0101`"
  `(.min.w.vf ,dest ,src1 ,src2 :mask #b0101))

(defmacro .min.w.vf.xw (dest src1 src2)
  "Performs `.min.w.vf` on the provided arguments with a `:mask` of `#b1001`"
  `(.min.w.vf ,dest ,src1 ,src2 :mask #b1001))

(defmacro .min.w.vf.yz (dest src1 src2)
  "Performs `.min.w.vf` on the provided arguments with a `:mask` of `#b0110`"
  `(.min.w.vf ,dest ,src1 ,src2 :mask #b0110))

(defmacro .min.w.vf.yw (dest src1 src2)
  "Performs `.min.w.vf` on the provided arguments with a `:mask` of `#b1010`"
  `(.min.w.vf ,dest ,src1 ,src2 :mask #b1010))

(defmacro .min.w.vf.zw (dest src1 src2)
  "Performs `.min.w.vf` on the provided arguments with a `:mask` of `#b1100`"
  `(.min.w.vf ,dest ,src1 ,src2 :mask #b1100))

(defmacro .min.w.vf.xyz (dest src1 src2)
  "Performs `.min.w.vf` on the provided arguments with a `:mask` of `#b0111`"
  `(.min.w.vf ,dest ,src1 ,src2 :mask #b0111))

(defmacro .min.w.vf.xyw (dest src1 src2)
  "Performs `.min.w.vf` on the provided arguments with a `:mask` of `#b1011`"
  `(.min.w.vf ,dest ,src1 ,src2 :mask #b1011))

(defmacro .min.w.vf.xzw (dest src1 src2)
  "Performs `.min.w.vf` on the provided arguments with a `:mask` of `#b1101`"
  `(.min.w.vf ,dest ,src1 ,src2 :mask #b1101))

(defmacro .min.w.vf.yzw (dest src1 src2)
  "Performs `.min.w.vf` on the provided arguments with a `:mask` of `#b1110`"
  `(.min.w.vf ,dest ,src1 ,src2 :mask #b1110))

(defmacro .min.w.vf.xyzw (dest src1 src2)
  "Performs `.min.w.vf` on the provided arguments with a `:mask` of `#b1111`"
  `(.min.w.vf ,dest ,src1 ,src2 :mask #b1111))

(defmacro .add.vf.x (dest src1 src2)
  "Performs `.add.vf` on the provided arguments with a `:mask` of `#b0001`"
  `(.add.vf ,dest ,src1 ,src2 :mask #b0001))

(defmacro .add.vf.y (dest src1 src2)
  "Performs `.add.vf` on the provided arguments with a `:mask` of `#b0010`"
  `(.add.vf ,dest ,src1 ,src2 :mask #b0010))

(defmacro .add.vf.z (dest src1 src2)
  "Performs `.add.vf` on the provided arguments with a `:mask` of `#b0100`"
  `(.add.vf ,dest ,src1 ,src2 :mask #b0100))

(defmacro .add.vf.w (dest src1 src2)
  "Performs `.add.vf` on the provided arguments with a `:mask` of `#b1000`"
  `(.add.vf ,dest ,src1 ,src2 :mask #b1000))

(defmacro .add.vf.xy (dest src1 src2)
  "Performs `.add.vf` on the provided arguments with a `:mask` of `#b0011`"
  `(.add.vf ,dest ,src1 ,src2 :mask #b0011))

(defmacro .add.vf.xz (dest src1 src2)
  "Performs `.add.vf` on the provided arguments with a `:mask` of `#b0101`"
  `(.add.vf ,dest ,src1 ,src2 :mask #b0101))

(defmacro .add.vf.xw (dest src1 src2)
  "Performs `.add.vf` on the provided arguments with a `:mask` of `#b1001`"
  `(.add.vf ,dest ,src1 ,src2 :mask #b1001))

(defmacro .add.vf.yz (dest src1 src2)
  "Performs `.add.vf` on the provided arguments with a `:mask` of `#b0110`"
  `(.add.vf ,dest ,src1 ,src2 :mask #b0110))

(defmacro .add.vf.yw (dest src1 src2)
  "Performs `.add.vf` on the provided arguments with a `:mask` of `#b1010`"
  `(.add.vf ,dest ,src1 ,src2 :mask #b1010))

(defmacro .add.vf.zw (dest src1 src2)
  "Performs `.add.vf` on the provided arguments with a `:mask` of `#b1100`"
  `(.add.vf ,dest ,src1 ,src2 :mask #b1100))

(defmacro .add.vf.xyz (dest src1 src2)
  "Performs `.add.vf` on the provided arguments with a `:mask` of `#b0111`"
  `(.add.vf ,dest ,src1 ,src2 :mask #b0111))

(defmacro .add.vf.xyw (dest src1 src2)
  "Performs `.add.vf` on the provided arguments with a `:mask` of `#b1011`"
  `(.add.vf ,dest ,src1 ,src2 :mask #b1011))

(defmacro .add.vf.xzw (dest src1 src2)
  "Performs `.add.vf` on the provided arguments with a `:mask` of `#b1101`"
  `(.add.vf ,dest ,src1 ,src2 :mask #b1101))

(defmacro .add.vf.yzw (dest src1 src2)
  "Performs `.add.vf` on the provided arguments with a `:mask` of `#b1110`"
  `(.add.vf ,dest ,src1 ,src2 :mask #b1110))

(defmacro .add.vf.xyzw (dest src1 src2)
  "Performs `.add.vf` on the provided arguments with a `:mask` of `#b1111`"
  `(.add.vf ,dest ,src1 ,src2 :mask #b1111))

(defmacro .add.x.vf.x (dest src1 src2)
  "Performs `.add.x.vf` on the provided arguments with a `:mask` of `#b0001`"
  `(.add.x.vf ,dest ,src1 ,src2 :mask #b0001))

(defmacro .add.x.vf.y (dest src1 src2)
  "Performs `.add.x.vf` on the provided arguments with a `:mask` of `#b0010`"
  `(.add.x.vf ,dest ,src1 ,src2 :mask #b0010))

(defmacro .add.x.vf.z (dest src1 src2)
  "Performs `.add.x.vf` on the provided arguments with a `:mask` of `#b0100`"
  `(.add.x.vf ,dest ,src1 ,src2 :mask #b0100))

(defmacro .add.x.vf.w (dest src1 src2)
  "Performs `.add.x.vf` on the provided arguments with a `:mask` of `#b1000`"
  `(.add.x.vf ,dest ,src1 ,src2 :mask #b1000))

(defmacro .add.x.vf.xy (dest src1 src2)
  "Performs `.add.x.vf` on the provided arguments with a `:mask` of `#b0011`"
  `(.add.x.vf ,dest ,src1 ,src2 :mask #b0011))

(defmacro .add.x.vf.xz (dest src1 src2)
  "Performs `.add.x.vf` on the provided arguments with a `:mask` of `#b0101`"
  `(.add.x.vf ,dest ,src1 ,src2 :mask #b0101))

(defmacro .add.x.vf.xw (dest src1 src2)
  "Performs `.add.x.vf` on the provided arguments with a `:mask` of `#b1001`"
  `(.add.x.vf ,dest ,src1 ,src2 :mask #b1001))

(defmacro .add.x.vf.yz (dest src1 src2)
  "Performs `.add.x.vf` on the provided arguments with a `:mask` of `#b0110`"
  `(.add.x.vf ,dest ,src1 ,src2 :mask #b0110))

(defmacro .add.x.vf.yw (dest src1 src2)
  "Performs `.add.x.vf` on the provided arguments with a `:mask` of `#b1010`"
  `(.add.x.vf ,dest ,src1 ,src2 :mask #b1010))

(defmacro .add.x.vf.zw (dest src1 src2)
  "Performs `.add.x.vf` on the provided arguments with a `:mask` of `#b1100`"
  `(.add.x.vf ,dest ,src1 ,src2 :mask #b1100))

(defmacro .add.x.vf.xyz (dest src1 src2)
  "Performs `.add.x.vf` on the provided arguments with a `:mask` of `#b0111`"
  `(.add.x.vf ,dest ,src1 ,src2 :mask #b0111))

(defmacro .add.x.vf.xyw (dest src1 src2)
  "Performs `.add.x.vf` on the provided arguments with a `:mask` of `#b1011`"
  `(.add.x.vf ,dest ,src1 ,src2 :mask #b1011))

(defmacro .add.x.vf.xzw (dest src1 src2)
  "Performs `.add.x.vf` on the provided arguments with a `:mask` of `#b1101`"
  `(.add.x.vf ,dest ,src1 ,src2 :mask #b1101))

(defmacro .add.x.vf.yzw (dest src1 src2)
  "Performs `.add.x.vf` on the provided arguments with a `:mask` of `#b1110`"
  `(.add.x.vf ,dest ,src1 ,src2 :mask #b1110))

(defmacro .add.x.vf.xyzw (dest src1 src2)
  "Performs `.add.x.vf` on the provided arguments with a `:mask` of `#b1111`"
  `(.add.x.vf ,dest ,src1 ,src2 :mask #b1111))

(defmacro .add.y.vf.x (dest src1 src2)
  "Performs `.add.y.vf` on the provided arguments with a `:mask` of `#b0001`"
  `(.add.y.vf ,dest ,src1 ,src2 :mask #b0001))

(defmacro .add.y.vf.y (dest src1 src2)
  "Performs `.add.y.vf` on the provided arguments with a `:mask` of `#b0010`"
  `(.add.y.vf ,dest ,src1 ,src2 :mask #b0010))

(defmacro .add.y.vf.z (dest src1 src2)
  "Performs `.add.y.vf` on the provided arguments with a `:mask` of `#b0100`"
  `(.add.y.vf ,dest ,src1 ,src2 :mask #b0100))

(defmacro .add.y.vf.w (dest src1 src2)
  "Performs `.add.y.vf` on the provided arguments with a `:mask` of `#b1000`"
  `(.add.y.vf ,dest ,src1 ,src2 :mask #b1000))

(defmacro .add.y.vf.xy (dest src1 src2)
  "Performs `.add.y.vf` on the provided arguments with a `:mask` of `#b0011`"
  `(.add.y.vf ,dest ,src1 ,src2 :mask #b0011))

(defmacro .add.y.vf.xz (dest src1 src2)
  "Performs `.add.y.vf` on the provided arguments with a `:mask` of `#b0101`"
  `(.add.y.vf ,dest ,src1 ,src2 :mask #b0101))

(defmacro .add.y.vf.xw (dest src1 src2)
  "Performs `.add.y.vf` on the provided arguments with a `:mask` of `#b1001`"
  `(.add.y.vf ,dest ,src1 ,src2 :mask #b1001))

(defmacro .add.y.vf.yz (dest src1 src2)
  "Performs `.add.y.vf` on the provided arguments with a `:mask` of `#b0110`"
  `(.add.y.vf ,dest ,src1 ,src2 :mask #b0110))

(defmacro .add.y.vf.yw (dest src1 src2)
  "Performs `.add.y.vf` on the provided arguments with a `:mask` of `#b1010`"
  `(.add.y.vf ,dest ,src1 ,src2 :mask #b1010))

(defmacro .add.y.vf.zw (dest src1 src2)
  "Performs `.add.y.vf` on the provided arguments with a `:mask` of `#b1100`"
  `(.add.y.vf ,dest ,src1 ,src2 :mask #b1100))

(defmacro .add.y.vf.xyz (dest src1 src2)
  "Performs `.add.y.vf` on the provided arguments with a `:mask` of `#b0111`"
  `(.add.y.vf ,dest ,src1 ,src2 :mask #b0111))

(defmacro .add.y.vf.xyw (dest src1 src2)
  "Performs `.add.y.vf` on the provided arguments with a `:mask` of `#b1011`"
  `(.add.y.vf ,dest ,src1 ,src2 :mask #b1011))

(defmacro .add.y.vf.xzw (dest src1 src2)
  "Performs `.add.y.vf` on the provided arguments with a `:mask` of `#b1101`"
  `(.add.y.vf ,dest ,src1 ,src2 :mask #b1101))

(defmacro .add.y.vf.yzw (dest src1 src2)
  "Performs `.add.y.vf` on the provided arguments with a `:mask` of `#b1110`"
  `(.add.y.vf ,dest ,src1 ,src2 :mask #b1110))

(defmacro .add.y.vf.xyzw (dest src1 src2)
  "Performs `.add.y.vf` on the provided arguments with a `:mask` of `#b1111`"
  `(.add.y.vf ,dest ,src1 ,src2 :mask #b1111))

(defmacro .add.z.vf.x (dest src1 src2)
  "Performs `.add.z.vf` on the provided arguments with a `:mask` of `#b0001`"
  `(.add.z.vf ,dest ,src1 ,src2 :mask #b0001))

(defmacro .add.z.vf.y (dest src1 src2)
  "Performs `.add.z.vf` on the provided arguments with a `:mask` of `#b0010`"
  `(.add.z.vf ,dest ,src1 ,src2 :mask #b0010))

(defmacro .add.z.vf.z (dest src1 src2)
  "Performs `.add.z.vf` on the provided arguments with a `:mask` of `#b0100`"
  `(.add.z.vf ,dest ,src1 ,src2 :mask #b0100))

(defmacro .add.z.vf.w (dest src1 src2)
  "Performs `.add.z.vf` on the provided arguments with a `:mask` of `#b1000`"
  `(.add.z.vf ,dest ,src1 ,src2 :mask #b1000))

(defmacro .add.z.vf.xy (dest src1 src2)
  "Performs `.add.z.vf` on the provided arguments with a `:mask` of `#b0011`"
  `(.add.z.vf ,dest ,src1 ,src2 :mask #b0011))

(defmacro .add.z.vf.xz (dest src1 src2)
  "Performs `.add.z.vf` on the provided arguments with a `:mask` of `#b0101`"
  `(.add.z.vf ,dest ,src1 ,src2 :mask #b0101))

(defmacro .add.z.vf.xw (dest src1 src2)
  "Performs `.add.z.vf` on the provided arguments with a `:mask` of `#b1001`"
  `(.add.z.vf ,dest ,src1 ,src2 :mask #b1001))

(defmacro .add.z.vf.yz (dest src1 src2)
  "Performs `.add.z.vf` on the provided arguments with a `:mask` of `#b0110`"
  `(.add.z.vf ,dest ,src1 ,src2 :mask #b0110))

(defmacro .add.z.vf.yw (dest src1 src2)
  "Performs `.add.z.vf` on the provided arguments with a `:mask` of `#b1010`"
  `(.add.z.vf ,dest ,src1 ,src2 :mask #b1010))

(defmacro .add.z.vf.zw (dest src1 src2)
  "Performs `.add.z.vf` on the provided arguments with a `:mask` of `#b1100`"
  `(.add.z.vf ,dest ,src1 ,src2 :mask #b1100))

(defmacro .add.z.vf.xyz (dest src1 src2)
  "Performs `.add.z.vf` on the provided arguments with a `:mask` of `#b0111`"
  `(.add.z.vf ,dest ,src1 ,src2 :mask #b0111))

(defmacro .add.z.vf.xyw (dest src1 src2)
  "Performs `.add.z.vf` on the provided arguments with a `:mask` of `#b1011`"
  `(.add.z.vf ,dest ,src1 ,src2 :mask #b1011))

(defmacro .add.z.vf.xzw (dest src1 src2)
  "Performs `.add.z.vf` on the provided arguments with a `:mask` of `#b1101`"
  `(.add.z.vf ,dest ,src1 ,src2 :mask #b1101))

(defmacro .add.z.vf.yzw (dest src1 src2)
  "Performs `.add.z.vf` on the provided arguments with a `:mask` of `#b1110`"
  `(.add.z.vf ,dest ,src1 ,src2 :mask #b1110))

(defmacro .add.z.vf.xyzw (dest src1 src2)
  "Performs `.add.z.vf` on the provided arguments with a `:mask` of `#b1111`"
  `(.add.z.vf ,dest ,src1 ,src2 :mask #b1111))

(defmacro .add.w.vf.x (dest src1 src2)
  "Performs `.add.w.vf` on the provided arguments with a `:mask` of `#b0001`"
  `(.add.w.vf ,dest ,src1 ,src2 :mask #b0001))

(defmacro .add.w.vf.y (dest src1 src2)
  "Performs `.add.w.vf` on the provided arguments with a `:mask` of `#b0010`"
  `(.add.w.vf ,dest ,src1 ,src2 :mask #b0010))

(defmacro .add.w.vf.z (dest src1 src2)
  "Performs `.add.w.vf` on the provided arguments with a `:mask` of `#b0100`"
  `(.add.w.vf ,dest ,src1 ,src2 :mask #b0100))

(defmacro .add.w.vf.w (dest src1 src2)
  "Performs `.add.w.vf` on the provided arguments with a `:mask` of `#b1000`"
  `(.add.w.vf ,dest ,src1 ,src2 :mask #b1000))

(defmacro .add.w.vf.xy (dest src1 src2)
  "Performs `.add.w.vf` on the provided arguments with a `:mask` of `#b0011`"
  `(.add.w.vf ,dest ,src1 ,src2 :mask #b0011))

(defmacro .add.w.vf.xz (dest src1 src2)
  "Performs `.add.w.vf` on the provided arguments with a `:mask` of `#b0101`"
  `(.add.w.vf ,dest ,src1 ,src2 :mask #b0101))

(defmacro .add.w.vf.xw (dest src1 src2)
  "Performs `.add.w.vf` on the provided arguments with a `:mask` of `#b1001`"
  `(.add.w.vf ,dest ,src1 ,src2 :mask #b1001))

(defmacro .add.w.vf.yz (dest src1 src2)
  "Performs `.add.w.vf` on the provided arguments with a `:mask` of `#b0110`"
  `(.add.w.vf ,dest ,src1 ,src2 :mask #b0110))

(defmacro .add.w.vf.yw (dest src1 src2)
  "Performs `.add.w.vf` on the provided arguments with a `:mask` of `#b1010`"
  `(.add.w.vf ,dest ,src1 ,src2 :mask #b1010))

(defmacro .add.w.vf.zw (dest src1 src2)
  "Performs `.add.w.vf` on the provided arguments with a `:mask` of `#b1100`"
  `(.add.w.vf ,dest ,src1 ,src2 :mask #b1100))

(defmacro .add.w.vf.xyz (dest src1 src2)
  "Performs `.add.w.vf` on the provided arguments with a `:mask` of `#b0111`"
  `(.add.w.vf ,dest ,src1 ,src2 :mask #b0111))

(defmacro .add.w.vf.xyw (dest src1 src2)
  "Performs `.add.w.vf` on the provided arguments with a `:mask` of `#b1011`"
  `(.add.w.vf ,dest ,src1 ,src2 :mask #b1011))

(defmacro .add.w.vf.xzw (dest src1 src2)
  "Performs `.add.w.vf` on the provided arguments with a `:mask` of `#b1101`"
  `(.add.w.vf ,dest ,src1 ,src2 :mask #b1101))

(defmacro .add.w.vf.yzw (dest src1 src2)
  "Performs `.add.w.vf` on the provided arguments with a `:mask` of `#b1110`"
  `(.add.w.vf ,dest ,src1 ,src2 :mask #b1110))

(defmacro .add.w.vf.xyzw (dest src1 src2)
  "Performs `.add.w.vf` on the provided arguments with a `:mask` of `#b1111`"
  `(.add.w.vf ,dest ,src1 ,src2 :mask #b1111))

(defmacro .sub.vf.x (dest src1 src2)
  "Performs `.sub.vf` on the provided arguments with a `:mask` of `#b0001`"
  `(.sub.vf ,dest ,src1 ,src2 :mask #b0001))

(defmacro .sub.vf.y (dest src1 src2)
  "Performs `.sub.vf` on the provided arguments with a `:mask` of `#b0010`"
  `(.sub.vf ,dest ,src1 ,src2 :mask #b0010))

(defmacro .sub.vf.z (dest src1 src2)
  "Performs `.sub.vf` on the provided arguments with a `:mask` of `#b0100`"
  `(.sub.vf ,dest ,src1 ,src2 :mask #b0100))

(defmacro .sub.vf.w (dest src1 src2)
  "Performs `.sub.vf` on the provided arguments with a `:mask` of `#b1000`"
  `(.sub.vf ,dest ,src1 ,src2 :mask #b1000))

(defmacro .sub.vf.xy (dest src1 src2)
  "Performs `.sub.vf` on the provided arguments with a `:mask` of `#b0011`"
  `(.sub.vf ,dest ,src1 ,src2 :mask #b0011))

(defmacro .sub.vf.xz (dest src1 src2)
  "Performs `.sub.vf` on the provided arguments with a `:mask` of `#b0101`"
  `(.sub.vf ,dest ,src1 ,src2 :mask #b0101))

(defmacro .sub.vf.xw (dest src1 src2)
  "Performs `.sub.vf` on the provided arguments with a `:mask` of `#b1001`"
  `(.sub.vf ,dest ,src1 ,src2 :mask #b1001))

(defmacro .sub.vf.yz (dest src1 src2)
  "Performs `.sub.vf` on the provided arguments with a `:mask` of `#b0110`"
  `(.sub.vf ,dest ,src1 ,src2 :mask #b0110))

(defmacro .sub.vf.yw (dest src1 src2)
  "Performs `.sub.vf` on the provided arguments with a `:mask` of `#b1010`"
  `(.sub.vf ,dest ,src1 ,src2 :mask #b1010))

(defmacro .sub.vf.zw (dest src1 src2)
  "Performs `.sub.vf` on the provided arguments with a `:mask` of `#b1100`"
  `(.sub.vf ,dest ,src1 ,src2 :mask #b1100))

(defmacro .sub.vf.xyz (dest src1 src2)
  "Performs `.sub.vf` on the provided arguments with a `:mask` of `#b0111`"
  `(.sub.vf ,dest ,src1 ,src2 :mask #b0111))

(defmacro .sub.vf.xyw (dest src1 src2)
  "Performs `.sub.vf` on the provided arguments with a `:mask` of `#b1011`"
  `(.sub.vf ,dest ,src1 ,src2 :mask #b1011))

(defmacro .sub.vf.xzw (dest src1 src2)
  "Performs `.sub.vf` on the provided arguments with a `:mask` of `#b1101`"
  `(.sub.vf ,dest ,src1 ,src2 :mask #b1101))

(defmacro .sub.vf.yzw (dest src1 src2)
  "Performs `.sub.vf` on the provided arguments with a `:mask` of `#b1110`"
  `(.sub.vf ,dest ,src1 ,src2 :mask #b1110))

(defmacro .sub.vf.xyzw (dest src1 src2)
  "Performs `.sub.vf` on the provided arguments with a `:mask` of `#b1111`"
  `(.sub.vf ,dest ,src1 ,src2 :mask #b1111))

(defmacro .sub.x.vf.x (dest src1 src2)
  "Performs `.sub.x.vf` on the provided arguments with a `:mask` of `#b0001`"
  `(.sub.x.vf ,dest ,src1 ,src2 :mask #b0001))

(defmacro .sub.x.vf.y (dest src1 src2)
  "Performs `.sub.x.vf` on the provided arguments with a `:mask` of `#b0010`"
  `(.sub.x.vf ,dest ,src1 ,src2 :mask #b0010))

(defmacro .sub.x.vf.z (dest src1 src2)
  "Performs `.sub.x.vf` on the provided arguments with a `:mask` of `#b0100`"
  `(.sub.x.vf ,dest ,src1 ,src2 :mask #b0100))

(defmacro .sub.x.vf.w (dest src1 src2)
  "Performs `.sub.x.vf` on the provided arguments with a `:mask` of `#b1000`"
  `(.sub.x.vf ,dest ,src1 ,src2 :mask #b1000))

(defmacro .sub.x.vf.xy (dest src1 src2)
  "Performs `.sub.x.vf` on the provided arguments with a `:mask` of `#b0011`"
  `(.sub.x.vf ,dest ,src1 ,src2 :mask #b0011))

(defmacro .sub.x.vf.xz (dest src1 src2)
  "Performs `.sub.x.vf` on the provided arguments with a `:mask` of `#b0101`"
  `(.sub.x.vf ,dest ,src1 ,src2 :mask #b0101))

(defmacro .sub.x.vf.xw (dest src1 src2)
  "Performs `.sub.x.vf` on the provided arguments with a `:mask` of `#b1001`"
  `(.sub.x.vf ,dest ,src1 ,src2 :mask #b1001))

(defmacro .sub.x.vf.yz (dest src1 src2)
  "Performs `.sub.x.vf` on the provided arguments with a `:mask` of `#b0110`"
  `(.sub.x.vf ,dest ,src1 ,src2 :mask #b0110))

(defmacro .sub.x.vf.yw (dest src1 src2)
  "Performs `.sub.x.vf` on the provided arguments with a `:mask` of `#b1010`"
  `(.sub.x.vf ,dest ,src1 ,src2 :mask #b1010))

(defmacro .sub.x.vf.zw (dest src1 src2)
  "Performs `.sub.x.vf` on the provided arguments with a `:mask` of `#b1100`"
  `(.sub.x.vf ,dest ,src1 ,src2 :mask #b1100))

(defmacro .sub.x.vf.xyz (dest src1 src2)
  "Performs `.sub.x.vf` on the provided arguments with a `:mask` of `#b0111`"
  `(.sub.x.vf ,dest ,src1 ,src2 :mask #b0111))

(defmacro .sub.x.vf.xyw (dest src1 src2)
  "Performs `.sub.x.vf` on the provided arguments with a `:mask` of `#b1011`"
  `(.sub.x.vf ,dest ,src1 ,src2 :mask #b1011))

(defmacro .sub.x.vf.xzw (dest src1 src2)
  "Performs `.sub.x.vf` on the provided arguments with a `:mask` of `#b1101`"
  `(.sub.x.vf ,dest ,src1 ,src2 :mask #b1101))

(defmacro .sub.x.vf.yzw (dest src1 src2)
  "Performs `.sub.x.vf` on the provided arguments with a `:mask` of `#b1110`"
  `(.sub.x.vf ,dest ,src1 ,src2 :mask #b1110))

(defmacro .sub.x.vf.xyzw (dest src1 src2)
  "Performs `.sub.x.vf` on the provided arguments with a `:mask` of `#b1111`"
  `(.sub.x.vf ,dest ,src1 ,src2 :mask #b1111))

(defmacro .sub.y.vf.x (dest src1 src2)
  "Performs `.sub.y.vf` on the provided arguments with a `:mask` of `#b0001`"
  `(.sub.y.vf ,dest ,src1 ,src2 :mask #b0001))

(defmacro .sub.y.vf.y (dest src1 src2)
  "Performs `.sub.y.vf` on the provided arguments with a `:mask` of `#b0010`"
  `(.sub.y.vf ,dest ,src1 ,src2 :mask #b0010))

(defmacro .sub.y.vf.z (dest src1 src2)
  "Performs `.sub.y.vf` on the provided arguments with a `:mask` of `#b0100`"
  `(.sub.y.vf ,dest ,src1 ,src2 :mask #b0100))

(defmacro .sub.y.vf.w (dest src1 src2)
  "Performs `.sub.y.vf` on the provided arguments with a `:mask` of `#b1000`"
  `(.sub.y.vf ,dest ,src1 ,src2 :mask #b1000))

(defmacro .sub.y.vf.xy (dest src1 src2)
  "Performs `.sub.y.vf` on the provided arguments with a `:mask` of `#b0011`"
  `(.sub.y.vf ,dest ,src1 ,src2 :mask #b0011))

(defmacro .sub.y.vf.xz (dest src1 src2)
  "Performs `.sub.y.vf` on the provided arguments with a `:mask` of `#b0101`"
  `(.sub.y.vf ,dest ,src1 ,src2 :mask #b0101))

(defmacro .sub.y.vf.xw (dest src1 src2)
  "Performs `.sub.y.vf` on the provided arguments with a `:mask` of `#b1001`"
  `(.sub.y.vf ,dest ,src1 ,src2 :mask #b1001))

(defmacro .sub.y.vf.yz (dest src1 src2)
  "Performs `.sub.y.vf` on the provided arguments with a `:mask` of `#b0110`"
  `(.sub.y.vf ,dest ,src1 ,src2 :mask #b0110))

(defmacro .sub.y.vf.yw (dest src1 src2)
  "Performs `.sub.y.vf` on the provided arguments with a `:mask` of `#b1010`"
  `(.sub.y.vf ,dest ,src1 ,src2 :mask #b1010))

(defmacro .sub.y.vf.zw (dest src1 src2)
  "Performs `.sub.y.vf` on the provided arguments with a `:mask` of `#b1100`"
  `(.sub.y.vf ,dest ,src1 ,src2 :mask #b1100))

(defmacro .sub.y.vf.xyz (dest src1 src2)
  "Performs `.sub.y.vf` on the provided arguments with a `:mask` of `#b0111`"
  `(.sub.y.vf ,dest ,src1 ,src2 :mask #b0111))

(defmacro .sub.y.vf.xyw (dest src1 src2)
  "Performs `.sub.y.vf` on the provided arguments with a `:mask` of `#b1011`"
  `(.sub.y.vf ,dest ,src1 ,src2 :mask #b1011))

(defmacro .sub.y.vf.xzw (dest src1 src2)
  "Performs `.sub.y.vf` on the provided arguments with a `:mask` of `#b1101`"
  `(.sub.y.vf ,dest ,src1 ,src2 :mask #b1101))

(defmacro .sub.y.vf.yzw (dest src1 src2)
  "Performs `.sub.y.vf` on the provided arguments with a `:mask` of `#b1110`"
  `(.sub.y.vf ,dest ,src1 ,src2 :mask #b1110))

(defmacro .sub.y.vf.xyzw (dest src1 src2)
  "Performs `.sub.y.vf` on the provided arguments with a `:mask` of `#b1111`"
  `(.sub.y.vf ,dest ,src1 ,src2 :mask #b1111))

(defmacro .sub.z.vf.x (dest src1 src2)
  "Performs `.sub.z.vf` on the provided arguments with a `:mask` of `#b0001`"
  `(.sub.z.vf ,dest ,src1 ,src2 :mask #b0001))

(defmacro .sub.z.vf.y (dest src1 src2)
  "Performs `.sub.z.vf` on the provided arguments with a `:mask` of `#b0010`"
  `(.sub.z.vf ,dest ,src1 ,src2 :mask #b0010))

(defmacro .sub.z.vf.z (dest src1 src2)
  "Performs `.sub.z.vf` on the provided arguments with a `:mask` of `#b0100`"
  `(.sub.z.vf ,dest ,src1 ,src2 :mask #b0100))

(defmacro .sub.z.vf.w (dest src1 src2)
  "Performs `.sub.z.vf` on the provided arguments with a `:mask` of `#b1000`"
  `(.sub.z.vf ,dest ,src1 ,src2 :mask #b1000))

(defmacro .sub.z.vf.xy (dest src1 src2)
  "Performs `.sub.z.vf` on the provided arguments with a `:mask` of `#b0011`"
  `(.sub.z.vf ,dest ,src1 ,src2 :mask #b0011))

(defmacro .sub.z.vf.xz (dest src1 src2)
  "Performs `.sub.z.vf` on the provided arguments with a `:mask` of `#b0101`"
  `(.sub.z.vf ,dest ,src1 ,src2 :mask #b0101))

(defmacro .sub.z.vf.xw (dest src1 src2)
  "Performs `.sub.z.vf` on the provided arguments with a `:mask` of `#b1001`"
  `(.sub.z.vf ,dest ,src1 ,src2 :mask #b1001))

(defmacro .sub.z.vf.yz (dest src1 src2)
  "Performs `.sub.z.vf` on the provided arguments with a `:mask` of `#b0110`"
  `(.sub.z.vf ,dest ,src1 ,src2 :mask #b0110))

(defmacro .sub.z.vf.yw (dest src1 src2)
  "Performs `.sub.z.vf` on the provided arguments with a `:mask` of `#b1010`"
  `(.sub.z.vf ,dest ,src1 ,src2 :mask #b1010))

(defmacro .sub.z.vf.zw (dest src1 src2)
  "Performs `.sub.z.vf` on the provided arguments with a `:mask` of `#b1100`"
  `(.sub.z.vf ,dest ,src1 ,src2 :mask #b1100))

(defmacro .sub.z.vf.xyz (dest src1 src2)
  "Performs `.sub.z.vf` on the provided arguments with a `:mask` of `#b0111`"
  `(.sub.z.vf ,dest ,src1 ,src2 :mask #b0111))

(defmacro .sub.z.vf.xyw (dest src1 src2)
  "Performs `.sub.z.vf` on the provided arguments with a `:mask` of `#b1011`"
  `(.sub.z.vf ,dest ,src1 ,src2 :mask #b1011))

(defmacro .sub.z.vf.xzw (dest src1 src2)
  "Performs `.sub.z.vf` on the provided arguments with a `:mask` of `#b1101`"
  `(.sub.z.vf ,dest ,src1 ,src2 :mask #b1101))

(defmacro .sub.z.vf.yzw (dest src1 src2)
  "Performs `.sub.z.vf` on the provided arguments with a `:mask` of `#b1110`"
  `(.sub.z.vf ,dest ,src1 ,src2 :mask #b1110))

(defmacro .sub.z.vf.xyzw (dest src1 src2)
  "Performs `.sub.z.vf` on the provided arguments with a `:mask` of `#b1111`"
  `(.sub.z.vf ,dest ,src1 ,src2 :mask #b1111))

(defmacro .sub.w.vf.x (dest src1 src2)
  "Performs `.sub.w.vf` on the provided arguments with a `:mask` of `#b0001`"
  `(.sub.w.vf ,dest ,src1 ,src2 :mask #b0001))

(defmacro .sub.w.vf.y (dest src1 src2)
  "Performs `.sub.w.vf` on the provided arguments with a `:mask` of `#b0010`"
  `(.sub.w.vf ,dest ,src1 ,src2 :mask #b0010))

(defmacro .sub.w.vf.z (dest src1 src2)
  "Performs `.sub.w.vf` on the provided arguments with a `:mask` of `#b0100`"
  `(.sub.w.vf ,dest ,src1 ,src2 :mask #b0100))

(defmacro .sub.w.vf.w (dest src1 src2)
  "Performs `.sub.w.vf` on the provided arguments with a `:mask` of `#b1000`"
  `(.sub.w.vf ,dest ,src1 ,src2 :mask #b1000))

(defmacro .sub.w.vf.xy (dest src1 src2)
  "Performs `.sub.w.vf` on the provided arguments with a `:mask` of `#b0011`"
  `(.sub.w.vf ,dest ,src1 ,src2 :mask #b0011))

(defmacro .sub.w.vf.xz (dest src1 src2)
  "Performs `.sub.w.vf` on the provided arguments with a `:mask` of `#b0101`"
  `(.sub.w.vf ,dest ,src1 ,src2 :mask #b0101))

(defmacro .sub.w.vf.xw (dest src1 src2)
  "Performs `.sub.w.vf` on the provided arguments with a `:mask` of `#b1001`"
  `(.sub.w.vf ,dest ,src1 ,src2 :mask #b1001))

(defmacro .sub.w.vf.yz (dest src1 src2)
  "Performs `.sub.w.vf` on the provided arguments with a `:mask` of `#b0110`"
  `(.sub.w.vf ,dest ,src1 ,src2 :mask #b0110))

(defmacro .sub.w.vf.yw (dest src1 src2)
  "Performs `.sub.w.vf` on the provided arguments with a `:mask` of `#b1010`"
  `(.sub.w.vf ,dest ,src1 ,src2 :mask #b1010))

(defmacro .sub.w.vf.zw (dest src1 src2)
  "Performs `.sub.w.vf` on the provided arguments with a `:mask` of `#b1100`"
  `(.sub.w.vf ,dest ,src1 ,src2 :mask #b1100))

(defmacro .sub.w.vf.xyz (dest src1 src2)
  "Performs `.sub.w.vf` on the provided arguments with a `:mask` of `#b0111`"
  `(.sub.w.vf ,dest ,src1 ,src2 :mask #b0111))

(defmacro .sub.w.vf.xyw (dest src1 src2)
  "Performs `.sub.w.vf` on the provided arguments with a `:mask` of `#b1011`"
  `(.sub.w.vf ,dest ,src1 ,src2 :mask #b1011))

(defmacro .sub.w.vf.xzw (dest src1 src2)
  "Performs `.sub.w.vf` on the provided arguments with a `:mask` of `#b1101`"
  `(.sub.w.vf ,dest ,src1 ,src2 :mask #b1101))

(defmacro .sub.w.vf.yzw (dest src1 src2)
  "Performs `.sub.w.vf` on the provided arguments with a `:mask` of `#b1110`"
  `(.sub.w.vf ,dest ,src1 ,src2 :mask #b1110))

(defmacro .sub.w.vf.xyzw (dest src1 src2)
  "Performs `.sub.w.vf` on the provided arguments with a `:mask` of `#b1111`"
  `(.sub.w.vf ,dest ,src1 ,src2 :mask #b1111))

(defmacro .mul.vf.x (dest src1 src2)
  "Performs `.mul.vf` on the provided arguments with a `:mask` of `#b0001`"
  `(.mul.vf ,dest ,src1 ,src2 :mask #b0001))

(defmacro .mul.vf.y (dest src1 src2)
  "Performs `.mul.vf` on the provided arguments with a `:mask` of `#b0010`"
  `(.mul.vf ,dest ,src1 ,src2 :mask #b0010))

(defmacro .mul.vf.z (dest src1 src2)
  "Performs `.mul.vf` on the provided arguments with a `:mask` of `#b0100`"
  `(.mul.vf ,dest ,src1 ,src2 :mask #b0100))

(defmacro .mul.vf.w (dest src1 src2)
  "Performs `.mul.vf` on the provided arguments with a `:mask` of `#b1000`"
  `(.mul.vf ,dest ,src1 ,src2 :mask #b1000))

(defmacro .mul.vf.xy (dest src1 src2)
  "Performs `.mul.vf` on the provided arguments with a `:mask` of `#b0011`"
  `(.mul.vf ,dest ,src1 ,src2 :mask #b0011))

(defmacro .mul.vf.xz (dest src1 src2)
  "Performs `.mul.vf` on the provided arguments with a `:mask` of `#b0101`"
  `(.mul.vf ,dest ,src1 ,src2 :mask #b0101))

(defmacro .mul.vf.xw (dest src1 src2)
  "Performs `.mul.vf` on the provided arguments with a `:mask` of `#b1001`"
  `(.mul.vf ,dest ,src1 ,src2 :mask #b1001))

(defmacro .mul.vf.yz (dest src1 src2)
  "Performs `.mul.vf` on the provided arguments with a `:mask` of `#b0110`"
  `(.mul.vf ,dest ,src1 ,src2 :mask #b0110))

(defmacro .mul.vf.yw (dest src1 src2)
  "Performs `.mul.vf` on the provided arguments with a `:mask` of `#b1010`"
  `(.mul.vf ,dest ,src1 ,src2 :mask #b1010))

(defmacro .mul.vf.zw (dest src1 src2)
  "Performs `.mul.vf` on the provided arguments with a `:mask` of `#b1100`"
  `(.mul.vf ,dest ,src1 ,src2 :mask #b1100))

(defmacro .mul.vf.xyz (dest src1 src2)
  "Performs `.mul.vf` on the provided arguments with a `:mask` of `#b0111`"
  `(.mul.vf ,dest ,src1 ,src2 :mask #b0111))

(defmacro .mul.vf.xyw (dest src1 src2)
  "Performs `.mul.vf` on the provided arguments with a `:mask` of `#b1011`"
  `(.mul.vf ,dest ,src1 ,src2 :mask #b1011))

(defmacro .mul.vf.xzw (dest src1 src2)
  "Performs `.mul.vf` on the provided arguments with a `:mask` of `#b1101`"
  `(.mul.vf ,dest ,src1 ,src2 :mask #b1101))

(defmacro .mul.vf.yzw (dest src1 src2)
  "Performs `.mul.vf` on the provided arguments with a `:mask` of `#b1110`"
  `(.mul.vf ,dest ,src1 ,src2 :mask #b1110))

(defmacro .mul.vf.xyzw (dest src1 src2)
  "Performs `.mul.vf` on the provided arguments with a `:mask` of `#b1111`"
  `(.mul.vf ,dest ,src1 ,src2 :mask #b1111))

(defmacro .mul.x.vf.x (dest src1 src2)
  "Performs `.mul.x.vf` on the provided arguments with a `:mask` of `#b0001`"
  `(.mul.x.vf ,dest ,src1 ,src2 :mask #b0001))

(defmacro .mul.x.vf.y (dest src1 src2)
  "Performs `.mul.x.vf` on the provided arguments with a `:mask` of `#b0010`"
  `(.mul.x.vf ,dest ,src1 ,src2 :mask #b0010))

(defmacro .mul.x.vf.z (dest src1 src2)
  "Performs `.mul.x.vf` on the provided arguments with a `:mask` of `#b0100`"
  `(.mul.x.vf ,dest ,src1 ,src2 :mask #b0100))

(defmacro .mul.x.vf.w (dest src1 src2)
  "Performs `.mul.x.vf` on the provided arguments with a `:mask` of `#b1000`"
  `(.mul.x.vf ,dest ,src1 ,src2 :mask #b1000))

(defmacro .mul.x.vf.xy (dest src1 src2)
  "Performs `.mul.x.vf` on the provided arguments with a `:mask` of `#b0011`"
  `(.mul.x.vf ,dest ,src1 ,src2 :mask #b0011))

(defmacro .mul.x.vf.xz (dest src1 src2)
  "Performs `.mul.x.vf` on the provided arguments with a `:mask` of `#b0101`"
  `(.mul.x.vf ,dest ,src1 ,src2 :mask #b0101))

(defmacro .mul.x.vf.xw (dest src1 src2)
  "Performs `.mul.x.vf` on the provided arguments with a `:mask` of `#b1001`"
  `(.mul.x.vf ,dest ,src1 ,src2 :mask #b1001))

(defmacro .mul.x.vf.yz (dest src1 src2)
  "Performs `.mul.x.vf` on the provided arguments with a `:mask` of `#b0110`"
  `(.mul.x.vf ,dest ,src1 ,src2 :mask #b0110))

(defmacro .mul.x.vf.yw (dest src1 src2)
  "Performs `.mul.x.vf` on the provided arguments with a `:mask` of `#b1010`"
  `(.mul.x.vf ,dest ,src1 ,src2 :mask #b1010))

(defmacro .mul.x.vf.zw (dest src1 src2)
  "Performs `.mul.x.vf` on the provided arguments with a `:mask` of `#b1100`"
  `(.mul.x.vf ,dest ,src1 ,src2 :mask #b1100))

(defmacro .mul.x.vf.xyz (dest src1 src2)
  "Performs `.mul.x.vf` on the provided arguments with a `:mask` of `#b0111`"
  `(.mul.x.vf ,dest ,src1 ,src2 :mask #b0111))

(defmacro .mul.x.vf.xyw (dest src1 src2)
  "Performs `.mul.x.vf` on the provided arguments with a `:mask` of `#b1011`"
  `(.mul.x.vf ,dest ,src1 ,src2 :mask #b1011))

(defmacro .mul.x.vf.xzw (dest src1 src2)
  "Performs `.mul.x.vf` on the provided arguments with a `:mask` of `#b1101`"
  `(.mul.x.vf ,dest ,src1 ,src2 :mask #b1101))

(defmacro .mul.x.vf.yzw (dest src1 src2)
  "Performs `.mul.x.vf` on the provided arguments with a `:mask` of `#b1110`"
  `(.mul.x.vf ,dest ,src1 ,src2 :mask #b1110))

(defmacro .mul.x.vf.xyzw (dest src1 src2)
  "Performs `.mul.x.vf` on the provided arguments with a `:mask` of `#b1111`"
  `(.mul.x.vf ,dest ,src1 ,src2 :mask #b1111))

(defmacro .mul.y.vf.x (dest src1 src2)
  "Performs `.mul.y.vf` on the provided arguments with a `:mask` of `#b0001`"
  `(.mul.y.vf ,dest ,src1 ,src2 :mask #b0001))

(defmacro .mul.y.vf.y (dest src1 src2)
  "Performs `.mul.y.vf` on the provided arguments with a `:mask` of `#b0010`"
  `(.mul.y.vf ,dest ,src1 ,src2 :mask #b0010))

(defmacro .mul.y.vf.z (dest src1 src2)
  "Performs `.mul.y.vf` on the provided arguments with a `:mask` of `#b0100`"
  `(.mul.y.vf ,dest ,src1 ,src2 :mask #b0100))

(defmacro .mul.y.vf.w (dest src1 src2)
  "Performs `.mul.y.vf` on the provided arguments with a `:mask` of `#b1000`"
  `(.mul.y.vf ,dest ,src1 ,src2 :mask #b1000))

(defmacro .mul.y.vf.xy (dest src1 src2)
  "Performs `.mul.y.vf` on the provided arguments with a `:mask` of `#b0011`"
  `(.mul.y.vf ,dest ,src1 ,src2 :mask #b0011))

(defmacro .mul.y.vf.xz (dest src1 src2)
  "Performs `.mul.y.vf` on the provided arguments with a `:mask` of `#b0101`"
  `(.mul.y.vf ,dest ,src1 ,src2 :mask #b0101))

(defmacro .mul.y.vf.xw (dest src1 src2)
  "Performs `.mul.y.vf` on the provided arguments with a `:mask` of `#b1001`"
  `(.mul.y.vf ,dest ,src1 ,src2 :mask #b1001))

(defmacro .mul.y.vf.yz (dest src1 src2)
  "Performs `.mul.y.vf` on the provided arguments with a `:mask` of `#b0110`"
  `(.mul.y.vf ,dest ,src1 ,src2 :mask #b0110))

(defmacro .mul.y.vf.yw (dest src1 src2)
  "Performs `.mul.y.vf` on the provided arguments with a `:mask` of `#b1010`"
  `(.mul.y.vf ,dest ,src1 ,src2 :mask #b1010))

(defmacro .mul.y.vf.zw (dest src1 src2)
  "Performs `.mul.y.vf` on the provided arguments with a `:mask` of `#b1100`"
  `(.mul.y.vf ,dest ,src1 ,src2 :mask #b1100))

(defmacro .mul.y.vf.xyz (dest src1 src2)
  "Performs `.mul.y.vf` on the provided arguments with a `:mask` of `#b0111`"
  `(.mul.y.vf ,dest ,src1 ,src2 :mask #b0111))

(defmacro .mul.y.vf.xyw (dest src1 src2)
  "Performs `.mul.y.vf` on the provided arguments with a `:mask` of `#b1011`"
  `(.mul.y.vf ,dest ,src1 ,src2 :mask #b1011))

(defmacro .mul.y.vf.xzw (dest src1 src2)
  "Performs `.mul.y.vf` on the provided arguments with a `:mask` of `#b1101`"
  `(.mul.y.vf ,dest ,src1 ,src2 :mask #b1101))

(defmacro .mul.y.vf.yzw (dest src1 src2)
  "Performs `.mul.y.vf` on the provided arguments with a `:mask` of `#b1110`"
  `(.mul.y.vf ,dest ,src1 ,src2 :mask #b1110))

(defmacro .mul.y.vf.xyzw (dest src1 src2)
  "Performs `.mul.y.vf` on the provided arguments with a `:mask` of `#b1111`"
  `(.mul.y.vf ,dest ,src1 ,src2 :mask #b1111))

(defmacro .mul.z.vf.x (dest src1 src2)
  "Performs `.mul.z.vf` on the provided arguments with a `:mask` of `#b0001`"
  `(.mul.z.vf ,dest ,src1 ,src2 :mask #b0001))

(defmacro .mul.z.vf.y (dest src1 src2)
  "Performs `.mul.z.vf` on the provided arguments with a `:mask` of `#b0010`"
  `(.mul.z.vf ,dest ,src1 ,src2 :mask #b0010))

(defmacro .mul.z.vf.z (dest src1 src2)
  "Performs `.mul.z.vf` on the provided arguments with a `:mask` of `#b0100`"
  `(.mul.z.vf ,dest ,src1 ,src2 :mask #b0100))

(defmacro .mul.z.vf.w (dest src1 src2)
  "Performs `.mul.z.vf` on the provided arguments with a `:mask` of `#b1000`"
  `(.mul.z.vf ,dest ,src1 ,src2 :mask #b1000))

(defmacro .mul.z.vf.xy (dest src1 src2)
  "Performs `.mul.z.vf` on the provided arguments with a `:mask` of `#b0011`"
  `(.mul.z.vf ,dest ,src1 ,src2 :mask #b0011))

(defmacro .mul.z.vf.xz (dest src1 src2)
  "Performs `.mul.z.vf` on the provided arguments with a `:mask` of `#b0101`"
  `(.mul.z.vf ,dest ,src1 ,src2 :mask #b0101))

(defmacro .mul.z.vf.xw (dest src1 src2)
  "Performs `.mul.z.vf` on the provided arguments with a `:mask` of `#b1001`"
  `(.mul.z.vf ,dest ,src1 ,src2 :mask #b1001))

(defmacro .mul.z.vf.yz (dest src1 src2)
  "Performs `.mul.z.vf` on the provided arguments with a `:mask` of `#b0110`"
  `(.mul.z.vf ,dest ,src1 ,src2 :mask #b0110))

(defmacro .mul.z.vf.yw (dest src1 src2)
  "Performs `.mul.z.vf` on the provided arguments with a `:mask` of `#b1010`"
  `(.mul.z.vf ,dest ,src1 ,src2 :mask #b1010))

(defmacro .mul.z.vf.zw (dest src1 src2)
  "Performs `.mul.z.vf` on the provided arguments with a `:mask` of `#b1100`"
  `(.mul.z.vf ,dest ,src1 ,src2 :mask #b1100))

(defmacro .mul.z.vf.xyz (dest src1 src2)
  "Performs `.mul.z.vf` on the provided arguments with a `:mask` of `#b0111`"
  `(.mul.z.vf ,dest ,src1 ,src2 :mask #b0111))

(defmacro .mul.z.vf.xyw (dest src1 src2)
  "Performs `.mul.z.vf` on the provided arguments with a `:mask` of `#b1011`"
  `(.mul.z.vf ,dest ,src1 ,src2 :mask #b1011))

(defmacro .mul.z.vf.xzw (dest src1 src2)
  "Performs `.mul.z.vf` on the provided arguments with a `:mask` of `#b1101`"
  `(.mul.z.vf ,dest ,src1 ,src2 :mask #b1101))

(defmacro .mul.z.vf.yzw (dest src1 src2)
  "Performs `.mul.z.vf` on the provided arguments with a `:mask` of `#b1110`"
  `(.mul.z.vf ,dest ,src1 ,src2 :mask #b1110))

(defmacro .mul.z.vf.xyzw (dest src1 src2)
  "Performs `.mul.z.vf` on the provided arguments with a `:mask` of `#b1111`"
  `(.mul.z.vf ,dest ,src1 ,src2 :mask #b1111))

(defmacro .mul.w.vf.x (dest src1 src2)
  "Performs `.mul.w.vf` on the provided arguments with a `:mask` of `#b0001`"
  `(.mul.w.vf ,dest ,src1 ,src2 :mask #b0001))

(defmacro .mul.w.vf.y (dest src1 src2)
  "Performs `.mul.w.vf` on the provided arguments with a `:mask` of `#b0010`"
  `(.mul.w.vf ,dest ,src1 ,src2 :mask #b0010))

(defmacro .mul.w.vf.z (dest src1 src2)
  "Performs `.mul.w.vf` on the provided arguments with a `:mask` of `#b0100`"
  `(.mul.w.vf ,dest ,src1 ,src2 :mask #b0100))

(defmacro .mul.w.vf.w (dest src1 src2)
  "Performs `.mul.w.vf` on the provided arguments with a `:mask` of `#b1000`"
  `(.mul.w.vf ,dest ,src1 ,src2 :mask #b1000))

(defmacro .mul.w.vf.xy (dest src1 src2)
  "Performs `.mul.w.vf` on the provided arguments with a `:mask` of `#b0011`"
  `(.mul.w.vf ,dest ,src1 ,src2 :mask #b0011))

(defmacro .mul.w.vf.xz (dest src1 src2)
  "Performs `.mul.w.vf` on the provided arguments with a `:mask` of `#b0101`"
  `(.mul.w.vf ,dest ,src1 ,src2 :mask #b0101))

(defmacro .mul.w.vf.xw (dest src1 src2)
  "Performs `.mul.w.vf` on the provided arguments with a `:mask` of `#b1001`"
  `(.mul.w.vf ,dest ,src1 ,src2 :mask #b1001))

(defmacro .mul.w.vf.yz (dest src1 src2)
  "Performs `.mul.w.vf` on the provided arguments with a `:mask` of `#b0110`"
  `(.mul.w.vf ,dest ,src1 ,src2 :mask #b0110))

(defmacro .mul.w.vf.yw (dest src1 src2)
  "Performs `.mul.w.vf` on the provided arguments with a `:mask` of `#b1010`"
  `(.mul.w.vf ,dest ,src1 ,src2 :mask #b1010))

(defmacro .mul.w.vf.zw (dest src1 src2)
  "Performs `.mul.w.vf` on the provided arguments with a `:mask` of `#b1100`"
  `(.mul.w.vf ,dest ,src1 ,src2 :mask #b1100))

(defmacro .mul.w.vf.xyz (dest src1 src2)
  "Performs `.mul.w.vf` on the provided arguments with a `:mask` of `#b0111`"
  `(.mul.w.vf ,dest ,src1 ,src2 :mask #b0111))

(defmacro .mul.w.vf.xyw (dest src1 src2)
  "Performs `.mul.w.vf` on the provided arguments with a `:mask` of `#b1011`"
  `(.mul.w.vf ,dest ,src1 ,src2 :mask #b1011))

(defmacro .mul.w.vf.xzw (dest src1 src2)
  "Performs `.mul.w.vf` on the provided arguments with a `:mask` of `#b1101`"
  `(.mul.w.vf ,dest ,src1 ,src2 :mask #b1101))

(defmacro .mul.w.vf.yzw (dest src1 src2)
  "Performs `.mul.w.vf` on the provided arguments with a `:mask` of `#b1110`"
  `(.mul.w.vf ,dest ,src1 ,src2 :mask #b1110))

(defmacro .mul.w.vf.xyzw (dest src1 src2)
  "Performs `.mul.w.vf` on the provided arguments with a `:mask` of `#b1111`"
  `(.mul.w.vf ,dest ,src1 ,src2 :mask #b1111))

(defmacro .add.mul.vf.x (dest src1 src2 src3)
  "Performs `.add.mul.vf` on the provided arguments with a `:mask` of `#b0001`"
  `(.add.mul.vf ,dest ,src1 ,src2 ,src3 :mask #b0001))

(defmacro .add.mul.vf.y (dest src1 src2 src3)
  "Performs `.add.mul.vf` on the provided arguments with a `:mask` of `#b0010`"
  `(.add.mul.vf ,dest ,src1 ,src2 ,src3 :mask #b0010))

(defmacro .add.mul.vf.z (dest src1 src2 src3)
  "Performs `.add.mul.vf` on the provided arguments with a `:mask` of `#b0100`"
  `(.add.mul.vf ,dest ,src1 ,src2 ,src3 :mask #b0100))

(defmacro .add.mul.vf.w (dest src1 src2 src3)
  "Performs `.add.mul.vf` on the provided arguments with a `:mask` of `#b1000`"
  `(.add.mul.vf ,dest ,src1 ,src2 ,src3 :mask #b1000))

(defmacro .add.mul.vf.xy (dest src1 src2 src3)
  "Performs `.add.mul.vf` on the provided arguments with a `:mask` of `#b0011`"
  `(.add.mul.vf ,dest ,src1 ,src2 ,src3 :mask #b0011))

(defmacro .add.mul.vf.xz (dest src1 src2 src3)
  "Performs `.add.mul.vf` on the provided arguments with a `:mask` of `#b0101`"
  `(.add.mul.vf ,dest ,src1 ,src2 ,src3 :mask #b0101))

(defmacro .add.mul.vf.xw (dest src1 src2 src3)
  "Performs `.add.mul.vf` on the provided arguments with a `:mask` of `#b1001`"
  `(.add.mul.vf ,dest ,src1 ,src2 ,src3 :mask #b1001))

(defmacro .add.mul.vf.yz (dest src1 src2 src3)
  "Performs `.add.mul.vf` on the provided arguments with a `:mask` of `#b0110`"
  `(.add.mul.vf ,dest ,src1 ,src2 ,src3 :mask #b0110))

(defmacro .add.mul.vf.yw (dest src1 src2 src3)
  "Performs `.add.mul.vf` on the provided arguments with a `:mask` of `#b1010`"
  `(.add.mul.vf ,dest ,src1 ,src2 ,src3 :mask #b1010))

(defmacro .add.mul.vf.zw (dest src1 src2 src3)
  "Performs `.add.mul.vf` on the provided arguments with a `:mask` of `#b1100`"
  `(.add.mul.vf ,dest ,src1 ,src2 ,src3 :mask #b1100))

(defmacro .add.mul.vf.xyz (dest src1 src2 src3)
  "Performs `.add.mul.vf` on the provided arguments with a `:mask` of `#b0111`"
  `(.add.mul.vf ,dest ,src1 ,src2 ,src3 :mask #b0111))

(defmacro .add.mul.vf.xyw (dest src1 src2 src3)
  "Performs `.add.mul.vf` on the provided arguments with a `:mask` of `#b1011`"
  `(.add.mul.vf ,dest ,src1 ,src2 ,src3 :mask #b1011))

(defmacro .add.mul.vf.xzw (dest src1 src2 src3)
  "Performs `.add.mul.vf` on the provided arguments with a `:mask` of `#b1101`"
  `(.add.mul.vf ,dest ,src1 ,src2 ,src3 :mask #b1101))

(defmacro .add.mul.vf.yzw (dest src1 src2 src3)
  "Performs `.add.mul.vf` on the provided arguments with a `:mask` of `#b1110`"
  `(.add.mul.vf ,dest ,src1 ,src2 ,src3 :mask #b1110))

(defmacro .add.mul.vf.xyzw (dest src1 src2 src3)
  "Performs `.add.mul.vf` on the provided arguments with a `:mask` of `#b1111`"
  `(.add.mul.vf ,dest ,src1 ,src2 ,src3 :mask #b1111))

(defmacro .add.mul.x.vf.x (dest src1 src2 src3)
  "Performs `.add.mul.x.vf` on the provided arguments with a `:mask` of `#b0001`"
  `(.add.mul.x.vf ,dest ,src1 ,src2 ,src3 :mask #b0001))

(defmacro .add.mul.x.vf.y (dest src1 src2 src3)
  "Performs `.add.mul.x.vf` on the provided arguments with a `:mask` of `#b0010`"
  `(.add.mul.x.vf ,dest ,src1 ,src2 ,src3 :mask #b0010))

(defmacro .add.mul.x.vf.z (dest src1 src2 src3)
  "Performs `.add.mul.x.vf` on the provided arguments with a `:mask` of `#b0100`"
  `(.add.mul.x.vf ,dest ,src1 ,src2 ,src3 :mask #b0100))

(defmacro .add.mul.x.vf.w (dest src1 src2 src3)
  "Performs `.add.mul.x.vf` on the provided arguments with a `:mask` of `#b1000`"
  `(.add.mul.x.vf ,dest ,src1 ,src2 ,src3 :mask #b1000))

(defmacro .add.mul.x.vf.xy (dest src1 src2 src3)
  "Performs `.add.mul.x.vf` on the provided arguments with a `:mask` of `#b0011`"
  `(.add.mul.x.vf ,dest ,src1 ,src2 ,src3 :mask #b0011))

(defmacro .add.mul.x.vf.xz (dest src1 src2 src3)
  "Performs `.add.mul.x.vf` on the provided arguments with a `:mask` of `#b0101`"
  `(.add.mul.x.vf ,dest ,src1 ,src2 ,src3 :mask #b0101))

(defmacro .add.mul.x.vf.xw (dest src1 src2 src3)
  "Performs `.add.mul.x.vf` on the provided arguments with a `:mask` of `#b1001`"
  `(.add.mul.x.vf ,dest ,src1 ,src2 ,src3 :mask #b1001))

(defmacro .add.mul.x.vf.yz (dest src1 src2 src3)
  "Performs `.add.mul.x.vf` on the provided arguments with a `:mask` of `#b0110`"
  `(.add.mul.x.vf ,dest ,src1 ,src2 ,src3 :mask #b0110))

(defmacro .add.mul.x.vf.yw (dest src1 src2 src3)
  "Performs `.add.mul.x.vf` on the provided arguments with a `:mask` of `#b1010`"
  `(.add.mul.x.vf ,dest ,src1 ,src2 ,src3 :mask #b1010))

(defmacro .add.mul.x.vf.zw (dest src1 src2 src3)
  "Performs `.add.mul.x.vf` on the provided arguments with a `:mask` of `#b1100`"
  `(.add.mul.x.vf ,dest ,src1 ,src2 ,src3 :mask #b1100))

(defmacro .add.mul.x.vf.xyz (dest src1 src2 src3)
  "Performs `.add.mul.x.vf` on the provided arguments with a `:mask` of `#b0111`"
  `(.add.mul.x.vf ,dest ,src1 ,src2 ,src3 :mask #b0111))

(defmacro .add.mul.x.vf.xyw (dest src1 src2 src3)
  "Performs `.add.mul.x.vf` on the provided arguments with a `:mask` of `#b1011`"
  `(.add.mul.x.vf ,dest ,src1 ,src2 ,src3 :mask #b1011))

(defmacro .add.mul.x.vf.xzw (dest src1 src2 src3)
  "Performs `.add.mul.x.vf` on the provided arguments with a `:mask` of `#b1101`"
  `(.add.mul.x.vf ,dest ,src1 ,src2 ,src3 :mask #b1101))

(defmacro .add.mul.x.vf.yzw (dest src1 src2 src3)
  "Performs `.add.mul.x.vf` on the provided arguments with a `:mask` of `#b1110`"
  `(.add.mul.x.vf ,dest ,src1 ,src2 ,src3 :mask #b1110))

(defmacro .add.mul.x.vf.xyzw (dest src1 src2 src3)
  "Performs `.add.mul.x.vf` on the provided arguments with a `:mask` of `#b1111`"
  `(.add.mul.x.vf ,dest ,src1 ,src2 ,src3 :mask #b1111))

(defmacro .add.mul.y.vf.x (dest src1 src2 src3)
  "Performs `.add.mul.y.vf` on the provided arguments with a `:mask` of `#b0001`"
  `(.add.mul.y.vf ,dest ,src1 ,src2 ,src3 :mask #b0001))

(defmacro .add.mul.y.vf.y (dest src1 src2 src3)
  "Performs `.add.mul.y.vf` on the provided arguments with a `:mask` of `#b0010`"
  `(.add.mul.y.vf ,dest ,src1 ,src2 ,src3 :mask #b0010))

(defmacro .add.mul.y.vf.z (dest src1 src2 src3)
  "Performs `.add.mul.y.vf` on the provided arguments with a `:mask` of `#b0100`"
  `(.add.mul.y.vf ,dest ,src1 ,src2 ,src3 :mask #b0100))

(defmacro .add.mul.y.vf.w (dest src1 src2 src3)
  "Performs `.add.mul.y.vf` on the provided arguments with a `:mask` of `#b1000`"
  `(.add.mul.y.vf ,dest ,src1 ,src2 ,src3 :mask #b1000))

(defmacro .add.mul.y.vf.xy (dest src1 src2 src3)
  "Performs `.add.mul.y.vf` on the provided arguments with a `:mask` of `#b0011`"
  `(.add.mul.y.vf ,dest ,src1 ,src2 ,src3 :mask #b0011))

(defmacro .add.mul.y.vf.xz (dest src1 src2 src3)
  "Performs `.add.mul.y.vf` on the provided arguments with a `:mask` of `#b0101`"
  `(.add.mul.y.vf ,dest ,src1 ,src2 ,src3 :mask #b0101))

(defmacro .add.mul.y.vf.xw (dest src1 src2 src3)
  "Performs `.add.mul.y.vf` on the provided arguments with a `:mask` of `#b1001`"
  `(.add.mul.y.vf ,dest ,src1 ,src2 ,src3 :mask #b1001))

(defmacro .add.mul.y.vf.yz (dest src1 src2 src3)
  "Performs `.add.mul.y.vf` on the provided arguments with a `:mask` of `#b0110`"
  `(.add.mul.y.vf ,dest ,src1 ,src2 ,src3 :mask #b0110))

(defmacro .add.mul.y.vf.yw (dest src1 src2 src3)
  "Performs `.add.mul.y.vf` on the provided arguments with a `:mask` of `#b1010`"
  `(.add.mul.y.vf ,dest ,src1 ,src2 ,src3 :mask #b1010))

(defmacro .add.mul.y.vf.zw (dest src1 src2 src3)
  "Performs `.add.mul.y.vf` on the provided arguments with a `:mask` of `#b1100`"
  `(.add.mul.y.vf ,dest ,src1 ,src2 ,src3 :mask #b1100))

(defmacro .add.mul.y.vf.xyz (dest src1 src2 src3)
  "Performs `.add.mul.y.vf` on the provided arguments with a `:mask` of `#b0111`"
  `(.add.mul.y.vf ,dest ,src1 ,src2 ,src3 :mask #b0111))

(defmacro .add.mul.y.vf.xyw (dest src1 src2 src3)
  "Performs `.add.mul.y.vf` on the provided arguments with a `:mask` of `#b1011`"
  `(.add.mul.y.vf ,dest ,src1 ,src2 ,src3 :mask #b1011))

(defmacro .add.mul.y.vf.xzw (dest src1 src2 src3)
  "Performs `.add.mul.y.vf` on the provided arguments with a `:mask` of `#b1101`"
  `(.add.mul.y.vf ,dest ,src1 ,src2 ,src3 :mask #b1101))

(defmacro .add.mul.y.vf.yzw (dest src1 src2 src3)
  "Performs `.add.mul.y.vf` on the provided arguments with a `:mask` of `#b1110`"
  `(.add.mul.y.vf ,dest ,src1 ,src2 ,src3 :mask #b1110))

(defmacro .add.mul.y.vf.xyzw (dest src1 src2 src3)
  "Performs `.add.mul.y.vf` on the provided arguments with a `:mask` of `#b1111`"
  `(.add.mul.y.vf ,dest ,src1 ,src2 ,src3 :mask #b1111))

(defmacro .add.mul.z.vf.x (dest src1 src2 src3)
  "Performs `.add.mul.z.vf` on the provided arguments with a `:mask` of `#b0001`"
  `(.add.mul.z.vf ,dest ,src1 ,src2 ,src3 :mask #b0001))

(defmacro .add.mul.z.vf.y (dest src1 src2 src3)
  "Performs `.add.mul.z.vf` on the provided arguments with a `:mask` of `#b0010`"
  `(.add.mul.z.vf ,dest ,src1 ,src2 ,src3 :mask #b0010))

(defmacro .add.mul.z.vf.z (dest src1 src2 src3)
  "Performs `.add.mul.z.vf` on the provided arguments with a `:mask` of `#b0100`"
  `(.add.mul.z.vf ,dest ,src1 ,src2 ,src3 :mask #b0100))

(defmacro .add.mul.z.vf.w (dest src1 src2 src3)
  "Performs `.add.mul.z.vf` on the provided arguments with a `:mask` of `#b1000`"
  `(.add.mul.z.vf ,dest ,src1 ,src2 ,src3 :mask #b1000))

(defmacro .add.mul.z.vf.xy (dest src1 src2 src3)
  "Performs `.add.mul.z.vf` on the provided arguments with a `:mask` of `#b0011`"
  `(.add.mul.z.vf ,dest ,src1 ,src2 ,src3 :mask #b0011))

(defmacro .add.mul.z.vf.xz (dest src1 src2 src3)
  "Performs `.add.mul.z.vf` on the provided arguments with a `:mask` of `#b0101`"
  `(.add.mul.z.vf ,dest ,src1 ,src2 ,src3 :mask #b0101))

(defmacro .add.mul.z.vf.xw (dest src1 src2 src3)
  "Performs `.add.mul.z.vf` on the provided arguments with a `:mask` of `#b1001`"
  `(.add.mul.z.vf ,dest ,src1 ,src2 ,src3 :mask #b1001))

(defmacro .add.mul.z.vf.yz (dest src1 src2 src3)
  "Performs `.add.mul.z.vf` on the provided arguments with a `:mask` of `#b0110`"
  `(.add.mul.z.vf ,dest ,src1 ,src2 ,src3 :mask #b0110))

(defmacro .add.mul.z.vf.yw (dest src1 src2 src3)
  "Performs `.add.mul.z.vf` on the provided arguments with a `:mask` of `#b1010`"
  `(.add.mul.z.vf ,dest ,src1 ,src2 ,src3 :mask #b1010))

(defmacro .add.mul.z.vf.zw (dest src1 src2 src3)
  "Performs `.add.mul.z.vf` on the provided arguments with a `:mask` of `#b1100`"
  `(.add.mul.z.vf ,dest ,src1 ,src2 ,src3 :mask #b1100))

(defmacro .add.mul.z.vf.xyz (dest src1 src2 src3)
  "Performs `.add.mul.z.vf` on the provided arguments with a `:mask` of `#b0111`"
  `(.add.mul.z.vf ,dest ,src1 ,src2 ,src3 :mask #b0111))

(defmacro .add.mul.z.vf.xyw (dest src1 src2 src3)
  "Performs `.add.mul.z.vf` on the provided arguments with a `:mask` of `#b1011`"
  `(.add.mul.z.vf ,dest ,src1 ,src2 ,src3 :mask #b1011))

(defmacro .add.mul.z.vf.xzw (dest src1 src2 src3)
  "Performs `.add.mul.z.vf` on the provided arguments with a `:mask` of `#b1101`"
  `(.add.mul.z.vf ,dest ,src1 ,src2 ,src3 :mask #b1101))

(defmacro .add.mul.z.vf.yzw (dest src1 src2 src3)
  "Performs `.add.mul.z.vf` on the provided arguments with a `:mask` of `#b1110`"
  `(.add.mul.z.vf ,dest ,src1 ,src2 ,src3 :mask #b1110))

(defmacro .add.mul.z.vf.xyzw (dest src1 src2 src3)
  "Performs `.add.mul.z.vf` on the provided arguments with a `:mask` of `#b1111`"
  `(.add.mul.z.vf ,dest ,src1 ,src2 ,src3 :mask #b1111))

(defmacro .add.mul.w.vf.x (dest src1 src2 src3)
  "Performs `.add.mul.w.vf` on the provided arguments with a `:mask` of `#b0001`"
  `(.add.mul.w.vf ,dest ,src1 ,src2 ,src3 :mask #b0001))

(defmacro .add.mul.w.vf.y (dest src1 src2 src3)
  "Performs `.add.mul.w.vf` on the provided arguments with a `:mask` of `#b0010`"
  `(.add.mul.w.vf ,dest ,src1 ,src2 ,src3 :mask #b0010))

(defmacro .add.mul.w.vf.z (dest src1 src2 src3)
  "Performs `.add.mul.w.vf` on the provided arguments with a `:mask` of `#b0100`"
  `(.add.mul.w.vf ,dest ,src1 ,src2 ,src3 :mask #b0100))

(defmacro .add.mul.w.vf.w (dest src1 src2 src3)
  "Performs `.add.mul.w.vf` on the provided arguments with a `:mask` of `#b1000`"
  `(.add.mul.w.vf ,dest ,src1 ,src2 ,src3 :mask #b1000))

(defmacro .add.mul.w.vf.xy (dest src1 src2 src3)
  "Performs `.add.mul.w.vf` on the provided arguments with a `:mask` of `#b0011`"
  `(.add.mul.w.vf ,dest ,src1 ,src2 ,src3 :mask #b0011))

(defmacro .add.mul.w.vf.xz (dest src1 src2 src3)
  "Performs `.add.mul.w.vf` on the provided arguments with a `:mask` of `#b0101`"
  `(.add.mul.w.vf ,dest ,src1 ,src2 ,src3 :mask #b0101))

(defmacro .add.mul.w.vf.xw (dest src1 src2 src3)
  "Performs `.add.mul.w.vf` on the provided arguments with a `:mask` of `#b1001`"
  `(.add.mul.w.vf ,dest ,src1 ,src2 ,src3 :mask #b1001))

(defmacro .add.mul.w.vf.yz (dest src1 src2 src3)
  "Performs `.add.mul.w.vf` on the provided arguments with a `:mask` of `#b0110`"
  `(.add.mul.w.vf ,dest ,src1 ,src2 ,src3 :mask #b0110))

(defmacro .add.mul.w.vf.yw (dest src1 src2 src3)
  "Performs `.add.mul.w.vf` on the provided arguments with a `:mask` of `#b1010`"
  `(.add.mul.w.vf ,dest ,src1 ,src2 ,src3 :mask #b1010))

(defmacro .add.mul.w.vf.zw (dest src1 src2 src3)
  "Performs `.add.mul.w.vf` on the provided arguments with a `:mask` of `#b1100`"
  `(.add.mul.w.vf ,dest ,src1 ,src2 ,src3 :mask #b1100))

(defmacro .add.mul.w.vf.xyz (dest src1 src2 src3)
  "Performs `.add.mul.w.vf` on the provided arguments with a `:mask` of `#b0111`"
  `(.add.mul.w.vf ,dest ,src1 ,src2 ,src3 :mask #b0111))

(defmacro .add.mul.w.vf.xyw (dest src1 src2 src3)
  "Performs `.add.mul.w.vf` on the provided arguments with a `:mask` of `#b1011`"
  `(.add.mul.w.vf ,dest ,src1 ,src2 ,src3 :mask #b1011))

(defmacro .add.mul.w.vf.xzw (dest src1 src2 src3)
  "Performs `.add.mul.w.vf` on the provided arguments with a `:mask` of `#b1101`"
  `(.add.mul.w.vf ,dest ,src1 ,src2 ,src3 :mask #b1101))

(defmacro .add.mul.w.vf.yzw (dest src1 src2 src3)
  "Performs `.add.mul.w.vf` on the provided arguments with a `:mask` of `#b1110`"
  `(.add.mul.w.vf ,dest ,src1 ,src2 ,src3 :mask #b1110))

(defmacro .add.mul.w.vf.xyzw (dest src1 src2 src3)
  "Performs `.add.mul.w.vf` on the provided arguments with a `:mask` of `#b1111`"
  `(.add.mul.w.vf ,dest ,src1 ,src2 ,src3 :mask #b1111))

(defmacro .sub.mul.vf.x (dest src1 src2 src3)
  "Performs `.sub.mul.vf` on the provided arguments with a `:mask` of `#b0001`"
  `(.sub.mul.vf ,dest ,src1 ,src2 ,src3 :mask #b0001))

(defmacro .sub.mul.vf.y (dest src1 src2 src3)
  "Performs `.sub.mul.vf` on the provided arguments with a `:mask` of `#b0010`"
  `(.sub.mul.vf ,dest ,src1 ,src2 ,src3 :mask #b0010))

(defmacro .sub.mul.vf.z (dest src1 src2 src3)
  "Performs `.sub.mul.vf` on the provided arguments with a `:mask` of `#b0100`"
  `(.sub.mul.vf ,dest ,src1 ,src2 ,src3 :mask #b0100))

(defmacro .sub.mul.vf.w (dest src1 src2 src3)
  "Performs `.sub.mul.vf` on the provided arguments with a `:mask` of `#b1000`"
  `(.sub.mul.vf ,dest ,src1 ,src2 ,src3 :mask #b1000))

(defmacro .sub.mul.vf.xy (dest src1 src2 src3)
  "Performs `.sub.mul.vf` on the provided arguments with a `:mask` of `#b0011`"
  `(.sub.mul.vf ,dest ,src1 ,src2 ,src3 :mask #b0011))

(defmacro .sub.mul.vf.xz (dest src1 src2 src3)
  "Performs `.sub.mul.vf` on the provided arguments with a `:mask` of `#b0101`"
  `(.sub.mul.vf ,dest ,src1 ,src2 ,src3 :mask #b0101))

(defmacro .sub.mul.vf.xw (dest src1 src2 src3)
  "Performs `.sub.mul.vf` on the provided arguments with a `:mask` of `#b1001`"
  `(.sub.mul.vf ,dest ,src1 ,src2 ,src3 :mask #b1001))

(defmacro .sub.mul.vf.yz (dest src1 src2 src3)
  "Performs `.sub.mul.vf` on the provided arguments with a `:mask` of `#b0110`"
  `(.sub.mul.vf ,dest ,src1 ,src2 ,src3 :mask #b0110))

(defmacro .sub.mul.vf.yw (dest src1 src2 src3)
  "Performs `.sub.mul.vf` on the provided arguments with a `:mask` of `#b1010`"
  `(.sub.mul.vf ,dest ,src1 ,src2 ,src3 :mask #b1010))

(defmacro .sub.mul.vf.zw (dest src1 src2 src3)
  "Performs `.sub.mul.vf` on the provided arguments with a `:mask` of `#b1100`"
  `(.sub.mul.vf ,dest ,src1 ,src2 ,src3 :mask #b1100))

(defmacro .sub.mul.vf.xyz (dest src1 src2 src3)
  "Performs `.sub.mul.vf` on the provided arguments with a `:mask` of `#b0111`"
  `(.sub.mul.vf ,dest ,src1 ,src2 ,src3 :mask #b0111))

(defmacro .sub.mul.vf.xyw (dest src1 src2 src3)
  "Performs `.sub.mul.vf` on the provided arguments with a `:mask` of `#b1011`"
  `(.sub.mul.vf ,dest ,src1 ,src2 ,src3 :mask #b1011))

(defmacro .sub.mul.vf.xzw (dest src1 src2 src3)
  "Performs `.sub.mul.vf` on the provided arguments with a `:mask` of `#b1101`"
  `(.sub.mul.vf ,dest ,src1 ,src2 ,src3 :mask #b1101))

(defmacro .sub.mul.vf.yzw (dest src1 src2 src3)
  "Performs `.sub.mul.vf` on the provided arguments with a `:mask` of `#b1110`"
  `(.sub.mul.vf ,dest ,src1 ,src2 ,src3 :mask #b1110))

(defmacro .sub.mul.vf.xyzw (dest src1 src2 src3)
  "Performs `.sub.mul.vf` on the provided arguments with a `:mask` of `#b1111`"
  `(.sub.mul.vf ,dest ,src1 ,src2 ,src3 :mask #b1111))

(defmacro .sub.mul.x.vf.x (dest src1 src2 src3)
  "Performs `.sub.mul.x.vf` on the provided arguments with a `:mask` of `#b0001`"
  `(.sub.mul.x.vf ,dest ,src1 ,src2 ,src3 :mask #b0001))

(defmacro .sub.mul.x.vf.y (dest src1 src2 src3)
  "Performs `.sub.mul.x.vf` on the provided arguments with a `:mask` of `#b0010`"
  `(.sub.mul.x.vf ,dest ,src1 ,src2 ,src3 :mask #b0010))

(defmacro .sub.mul.x.vf.z (dest src1 src2 src3)
  "Performs `.sub.mul.x.vf` on the provided arguments with a `:mask` of `#b0100`"
  `(.sub.mul.x.vf ,dest ,src1 ,src2 ,src3 :mask #b0100))

(defmacro .sub.mul.x.vf.w (dest src1 src2 src3)
  "Performs `.sub.mul.x.vf` on the provided arguments with a `:mask` of `#b1000`"
  `(.sub.mul.x.vf ,dest ,src1 ,src2 ,src3 :mask #b1000))

(defmacro .sub.mul.x.vf.xy (dest src1 src2 src3)
  "Performs `.sub.mul.x.vf` on the provided arguments with a `:mask` of `#b0011`"
  `(.sub.mul.x.vf ,dest ,src1 ,src2 ,src3 :mask #b0011))

(defmacro .sub.mul.x.vf.xz (dest src1 src2 src3)
  "Performs `.sub.mul.x.vf` on the provided arguments with a `:mask` of `#b0101`"
  `(.sub.mul.x.vf ,dest ,src1 ,src2 ,src3 :mask #b0101))

(defmacro .sub.mul.x.vf.xw (dest src1 src2 src3)
  "Performs `.sub.mul.x.vf` on the provided arguments with a `:mask` of `#b1001`"
  `(.sub.mul.x.vf ,dest ,src1 ,src2 ,src3 :mask #b1001))

(defmacro .sub.mul.x.vf.yz (dest src1 src2 src3)
  "Performs `.sub.mul.x.vf` on the provided arguments with a `:mask` of `#b0110`"
  `(.sub.mul.x.vf ,dest ,src1 ,src2 ,src3 :mask #b0110))

(defmacro .sub.mul.x.vf.yw (dest src1 src2 src3)
  "Performs `.sub.mul.x.vf` on the provided arguments with a `:mask` of `#b1010`"
  `(.sub.mul.x.vf ,dest ,src1 ,src2 ,src3 :mask #b1010))

(defmacro .sub.mul.x.vf.zw (dest src1 src2 src3)
  "Performs `.sub.mul.x.vf` on the provided arguments with a `:mask` of `#b1100`"
  `(.sub.mul.x.vf ,dest ,src1 ,src2 ,src3 :mask #b1100))

(defmacro .sub.mul.x.vf.xyz (dest src1 src2 src3)
  "Performs `.sub.mul.x.vf` on the provided arguments with a `:mask` of `#b0111`"
  `(.sub.mul.x.vf ,dest ,src1 ,src2 ,src3 :mask #b0111))

(defmacro .sub.mul.x.vf.xyw (dest src1 src2 src3)
  "Performs `.sub.mul.x.vf` on the provided arguments with a `:mask` of `#b1011`"
  `(.sub.mul.x.vf ,dest ,src1 ,src2 ,src3 :mask #b1011))

(defmacro .sub.mul.x.vf.xzw (dest src1 src2 src3)
  "Performs `.sub.mul.x.vf` on the provided arguments with a `:mask` of `#b1101`"
  `(.sub.mul.x.vf ,dest ,src1 ,src2 ,src3 :mask #b1101))

(defmacro .sub.mul.x.vf.yzw (dest src1 src2 src3)
  "Performs `.sub.mul.x.vf` on the provided arguments with a `:mask` of `#b1110`"
  `(.sub.mul.x.vf ,dest ,src1 ,src2 ,src3 :mask #b1110))

(defmacro .sub.mul.x.vf.xyzw (dest src1 src2 src3)
  "Performs `.sub.mul.x.vf` on the provided arguments with a `:mask` of `#b1111`"
  `(.sub.mul.x.vf ,dest ,src1 ,src2 ,src3 :mask #b1111))

(defmacro .sub.mul.y.vf.x (dest src1 src2 src3)
  "Performs `.sub.mul.y.vf` on the provided arguments with a `:mask` of `#b0001`"
  `(.sub.mul.y.vf ,dest ,src1 ,src2 ,src3 :mask #b0001))

(defmacro .sub.mul.y.vf.y (dest src1 src2 src3)
  "Performs `.sub.mul.y.vf` on the provided arguments with a `:mask` of `#b0010`"
  `(.sub.mul.y.vf ,dest ,src1 ,src2 ,src3 :mask #b0010))

(defmacro .sub.mul.y.vf.z (dest src1 src2 src3)
  "Performs `.sub.mul.y.vf` on the provided arguments with a `:mask` of `#b0100`"
  `(.sub.mul.y.vf ,dest ,src1 ,src2 ,src3 :mask #b0100))

(defmacro .sub.mul.y.vf.w (dest src1 src2 src3)
  "Performs `.sub.mul.y.vf` on the provided arguments with a `:mask` of `#b1000`"
  `(.sub.mul.y.vf ,dest ,src1 ,src2 ,src3 :mask #b1000))

(defmacro .sub.mul.y.vf.xy (dest src1 src2 src3)
  "Performs `.sub.mul.y.vf` on the provided arguments with a `:mask` of `#b0011`"
  `(.sub.mul.y.vf ,dest ,src1 ,src2 ,src3 :mask #b0011))

(defmacro .sub.mul.y.vf.xz (dest src1 src2 src3)
  "Performs `.sub.mul.y.vf` on the provided arguments with a `:mask` of `#b0101`"
  `(.sub.mul.y.vf ,dest ,src1 ,src2 ,src3 :mask #b0101))

(defmacro .sub.mul.y.vf.xw (dest src1 src2 src3)
  "Performs `.sub.mul.y.vf` on the provided arguments with a `:mask` of `#b1001`"
  `(.sub.mul.y.vf ,dest ,src1 ,src2 ,src3 :mask #b1001))

(defmacro .sub.mul.y.vf.yz (dest src1 src2 src3)
  "Performs `.sub.mul.y.vf` on the provided arguments with a `:mask` of `#b0110`"
  `(.sub.mul.y.vf ,dest ,src1 ,src2 ,src3 :mask #b0110))

(defmacro .sub.mul.y.vf.yw (dest src1 src2 src3)
  "Performs `.sub.mul.y.vf` on the provided arguments with a `:mask` of `#b1010`"
  `(.sub.mul.y.vf ,dest ,src1 ,src2 ,src3 :mask #b1010))

(defmacro .sub.mul.y.vf.zw (dest src1 src2 src3)
  "Performs `.sub.mul.y.vf` on the provided arguments with a `:mask` of `#b1100`"
  `(.sub.mul.y.vf ,dest ,src1 ,src2 ,src3 :mask #b1100))

(defmacro .sub.mul.y.vf.xyz (dest src1 src2 src3)
  "Performs `.sub.mul.y.vf` on the provided arguments with a `:mask` of `#b0111`"
  `(.sub.mul.y.vf ,dest ,src1 ,src2 ,src3 :mask #b0111))

(defmacro .sub.mul.y.vf.xyw (dest src1 src2 src3)
  "Performs `.sub.mul.y.vf` on the provided arguments with a `:mask` of `#b1011`"
  `(.sub.mul.y.vf ,dest ,src1 ,src2 ,src3 :mask #b1011))

(defmacro .sub.mul.y.vf.xzw (dest src1 src2 src3)
  "Performs `.sub.mul.y.vf` on the provided arguments with a `:mask` of `#b1101`"
  `(.sub.mul.y.vf ,dest ,src1 ,src2 ,src3 :mask #b1101))

(defmacro .sub.mul.y.vf.yzw (dest src1 src2 src3)
  "Performs `.sub.mul.y.vf` on the provided arguments with a `:mask` of `#b1110`"
  `(.sub.mul.y.vf ,dest ,src1 ,src2 ,src3 :mask #b1110))

(defmacro .sub.mul.y.vf.xyzw (dest src1 src2 src3)
  "Performs `.sub.mul.y.vf` on the provided arguments with a `:mask` of `#b1111`"
  `(.sub.mul.y.vf ,dest ,src1 ,src2 ,src3 :mask #b1111))

(defmacro .sub.mul.z.vf.x (dest src1 src2 src3)
  "Performs `.sub.mul.z.vf` on the provided arguments with a `:mask` of `#b0001`"
  `(.sub.mul.z.vf ,dest ,src1 ,src2 ,src3 :mask #b0001))

(defmacro .sub.mul.z.vf.y (dest src1 src2 src3)
  "Performs `.sub.mul.z.vf` on the provided arguments with a `:mask` of `#b0010`"
  `(.sub.mul.z.vf ,dest ,src1 ,src2 ,src3 :mask #b0010))

(defmacro .sub.mul.z.vf.z (dest src1 src2 src3)
  "Performs `.sub.mul.z.vf` on the provided arguments with a `:mask` of `#b0100`"
  `(.sub.mul.z.vf ,dest ,src1 ,src2 ,src3 :mask #b0100))

(defmacro .sub.mul.z.vf.w (dest src1 src2 src3)
  "Performs `.sub.mul.z.vf` on the provided arguments with a `:mask` of `#b1000`"
  `(.sub.mul.z.vf ,dest ,src1 ,src2 ,src3 :mask #b1000))

(defmacro .sub.mul.z.vf.xy (dest src1 src2 src3)
  "Performs `.sub.mul.z.vf` on the provided arguments with a `:mask` of `#b0011`"
  `(.sub.mul.z.vf ,dest ,src1 ,src2 ,src3 :mask #b0011))

(defmacro .sub.mul.z.vf.xz (dest src1 src2 src3)
  "Performs `.sub.mul.z.vf` on the provided arguments with a `:mask` of `#b0101`"
  `(.sub.mul.z.vf ,dest ,src1 ,src2 ,src3 :mask #b0101))

(defmacro .sub.mul.z.vf.xw (dest src1 src2 src3)
  "Performs `.sub.mul.z.vf` on the provided arguments with a `:mask` of `#b1001`"
  `(.sub.mul.z.vf ,dest ,src1 ,src2 ,src3 :mask #b1001))

(defmacro .sub.mul.z.vf.yz (dest src1 src2 src3)
  "Performs `.sub.mul.z.vf` on the provided arguments with a `:mask` of `#b0110`"
  `(.sub.mul.z.vf ,dest ,src1 ,src2 ,src3 :mask #b0110))

(defmacro .sub.mul.z.vf.yw (dest src1 src2 src3)
  "Performs `.sub.mul.z.vf` on the provided arguments with a `:mask` of `#b1010`"
  `(.sub.mul.z.vf ,dest ,src1 ,src2 ,src3 :mask #b1010))

(defmacro .sub.mul.z.vf.zw (dest src1 src2 src3)
  "Performs `.sub.mul.z.vf` on the provided arguments with a `:mask` of `#b1100`"
  `(.sub.mul.z.vf ,dest ,src1 ,src2 ,src3 :mask #b1100))

(defmacro .sub.mul.z.vf.xyz (dest src1 src2 src3)
  "Performs `.sub.mul.z.vf` on the provided arguments with a `:mask` of `#b0111`"
  `(.sub.mul.z.vf ,dest ,src1 ,src2 ,src3 :mask #b0111))

(defmacro .sub.mul.z.vf.xyw (dest src1 src2 src3)
  "Performs `.sub.mul.z.vf` on the provided arguments with a `:mask` of `#b1011`"
  `(.sub.mul.z.vf ,dest ,src1 ,src2 ,src3 :mask #b1011))

(defmacro .sub.mul.z.vf.xzw (dest src1 src2 src3)
  "Performs `.sub.mul.z.vf` on the provided arguments with a `:mask` of `#b1101`"
  `(.sub.mul.z.vf ,dest ,src1 ,src2 ,src3 :mask #b1101))

(defmacro .sub.mul.z.vf.yzw (dest src1 src2 src3)
  "Performs `.sub.mul.z.vf` on the provided arguments with a `:mask` of `#b1110`"
  `(.sub.mul.z.vf ,dest ,src1 ,src2 ,src3 :mask #b1110))

(defmacro .sub.mul.z.vf.xyzw (dest src1 src2 src3)
  "Performs `.sub.mul.z.vf` on the provided arguments with a `:mask` of `#b1111`"
  `(.sub.mul.z.vf ,dest ,src1 ,src2 ,src3 :mask #b1111))

(defmacro .sub.mul.w.vf.x (dest src1 src2 src3)
  "Performs `.sub.mul.w.vf` on the provided arguments with a `:mask` of `#b0001`"
  `(.sub.mul.w.vf ,dest ,src1 ,src2 ,src3 :mask #b0001))

(defmacro .sub.mul.w.vf.y (dest src1 src2 src3)
  "Performs `.sub.mul.w.vf` on the provided arguments with a `:mask` of `#b0010`"
  `(.sub.mul.w.vf ,dest ,src1 ,src2 ,src3 :mask #b0010))

(defmacro .sub.mul.w.vf.z (dest src1 src2 src3)
  "Performs `.sub.mul.w.vf` on the provided arguments with a `:mask` of `#b0100`"
  `(.sub.mul.w.vf ,dest ,src1 ,src2 ,src3 :mask #b0100))

(defmacro .sub.mul.w.vf.w (dest src1 src2 src3)
  "Performs `.sub.mul.w.vf` on the provided arguments with a `:mask` of `#b1000`"
  `(.sub.mul.w.vf ,dest ,src1 ,src2 ,src3 :mask #b1000))

(defmacro .sub.mul.w.vf.xy (dest src1 src2 src3)
  "Performs `.sub.mul.w.vf` on the provided arguments with a `:mask` of `#b0011`"
  `(.sub.mul.w.vf ,dest ,src1 ,src2 ,src3 :mask #b0011))

(defmacro .sub.mul.w.vf.xz (dest src1 src2 src3)
  "Performs `.sub.mul.w.vf` on the provided arguments with a `:mask` of `#b0101`"
  `(.sub.mul.w.vf ,dest ,src1 ,src2 ,src3 :mask #b0101))

(defmacro .sub.mul.w.vf.xw (dest src1 src2 src3)
  "Performs `.sub.mul.w.vf` on the provided arguments with a `:mask` of `#b1001`"
  `(.sub.mul.w.vf ,dest ,src1 ,src2 ,src3 :mask #b1001))

(defmacro .sub.mul.w.vf.yz (dest src1 src2 src3)
  "Performs `.sub.mul.w.vf` on the provided arguments with a `:mask` of `#b0110`"
  `(.sub.mul.w.vf ,dest ,src1 ,src2 ,src3 :mask #b0110))

(defmacro .sub.mul.w.vf.yw (dest src1 src2 src3)
  "Performs `.sub.mul.w.vf` on the provided arguments with a `:mask` of `#b1010`"
  `(.sub.mul.w.vf ,dest ,src1 ,src2 ,src3 :mask #b1010))

(defmacro .sub.mul.w.vf.zw (dest src1 src2 src3)
  "Performs `.sub.mul.w.vf` on the provided arguments with a `:mask` of `#b1100`"
  `(.sub.mul.w.vf ,dest ,src1 ,src2 ,src3 :mask #b1100))

(defmacro .sub.mul.w.vf.xyz (dest src1 src2 src3)
  "Performs `.sub.mul.w.vf` on the provided arguments with a `:mask` of `#b0111`"
  `(.sub.mul.w.vf ,dest ,src1 ,src2 ,src3 :mask #b0111))

(defmacro .sub.mul.w.vf.xyw (dest src1 src2 src3)
  "Performs `.sub.mul.w.vf` on the provided arguments with a `:mask` of `#b1011`"
  `(.sub.mul.w.vf ,dest ,src1 ,src2 ,src3 :mask #b1011))

(defmacro .sub.mul.w.vf.xzw (dest src1 src2 src3)
  "Performs `.sub.mul.w.vf` on the provided arguments with a `:mask` of `#b1101`"
  `(.sub.mul.w.vf ,dest ,src1 ,src2 ,src3 :mask #b1101))

(defmacro .sub.mul.w.vf.yzw (dest src1 src2 src3)
  "Performs `.sub.mul.w.vf` on the provided arguments with a `:mask` of `#b1110`"
  `(.sub.mul.w.vf ,dest ,src1 ,src2 ,src3 :mask #b1110))

(defmacro .sub.mul.w.vf.xyzw (dest src1 src2 src3)
  "Performs `.sub.mul.w.vf` on the provided arguments with a `:mask` of `#b1111`"
  `(.sub.mul.w.vf ,dest ,src1 ,src2 ,src3 :mask #b1111))
