;;-*-Lisp-*-
(in-package goal)

;; name: atoll-part.gc
;; name in dgo: atoll-part
;; dgos: ATO

;; DECOMP BEGINS

(deftype atoll-part (part-spawner)
  ()
  :heap-base #x30
  :method-count-assert 16
  :size-assert         #xb0
  :flag-assert         #x10003000b0
  )


(defpartgroup group-atoll-seal-of-mar
  :id 302
  :bounds (static-bspherem 0 0 0 6)
  :parts ((sp-item 1313 :fade-after (meters 200) :flags (bit6)))
  )

(defpart 1313
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xca :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-y (meters -0.15))
    (sp-rnd-flt spt-scale-x (meters 2.5) (meters 0.1) 1.0)
    (sp-flt spt-rot-x 409.6)
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 255.0)
    (sp-flt spt-g 220.0)
    (sp-flt spt-b 180.0)
    (sp-flt spt-a 20.0)
    (sp-flt spt-omega 821248.0)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 819.2)
    )
  )

(defpartgroup group-atoll-streetlight
  :id 303
  :bounds (static-bspherem 0 0 0 6)
  :parts ((sp-item 1314 :fade-after (meters 100) :flags (bit6) :hour-mask #b111111111110000000)
    (sp-item 1315 :fade-after (meters 100) :flags (bit6) :hour-mask #b111111111110000000)
    )
  )

(defpart 1314
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xbb :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-y (meters -0.15))
    (sp-rnd-flt spt-scale-x (meters 2) (meters 0.1) 1.0)
    (sp-flt spt-rot-x 819.2)
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 255.0)
    (sp-flt spt-g 255.0)
    (sp-flt spt-b 255.0)
    (sp-flt spt-a 32.0)
    (sp-flt spt-omega 411648.0)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 1228.8)
    )
  )

(defpart 1315
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xbb :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-y (meters -0.15))
    (sp-rnd-flt spt-scale-x (meters 12) (meters 0.1) 1.0)
    (sp-flt spt-rot-x 819.2)
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 255.0)
    (sp-rnd-flt spt-g 255.0 255.0 1.0)
    (sp-flt spt-b 255.0)
    (sp-flt spt-a 8.0)
    (sp-flt spt-omega 412467.2)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 2048.0)
    )
  )

(defpartgroup group-atoll-pipe-drip
  :id 304
  :bounds (static-bspherem 0 0 0 6)
  :parts ((sp-item 1316 :fade-after (meters 50) :falloff-to (meters 50))
    (sp-item 1317 :fade-after (meters 50) :falloff-to (meters 50))
    )
  )

(defpart 1316
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x21 :page #xc))
    (sp-rnd-flt spt-num 0.0 0.6 1.0)
    (sp-rnd-flt spt-x (meters -0.025) (meters 0.05) 1.0)
    (sp-flt spt-y (meters 0.05))
    (sp-flt spt-z (meters -5))
    (sp-rnd-flt spt-scale-x (meters 0.1) (meters 0.1) 1.0)
    (sp-copy-from-other spt-scale-y -4)
    (sp-rnd-flt spt-r 32.0 32.0 1.0)
    (sp-rnd-flt spt-g 32.0 32.0 1.0)
    (sp-rnd-flt spt-b 64.0 32.0 1.0)
    (sp-flt spt-a 0.0)
    (sp-flt spt-vel-z (meters 0.006666667))
    (sp-rnd-flt spt-fade-a 0.10666667 0.035555556 1.0)
    (sp-int spt-timer 875)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3)
    (sp-int spt-next-time 450)
    (sp-launcher-by-id spt-next-launcher 1318)
    )
  )

(defpart 1318
  :init-specs ((sp-rnd-flt spt-fade-a 0.0 0.10666667 1.0)
    (sp-int spt-next-time 280)
    (sp-launcher-by-id spt-next-launcher 1319)
    )
  )

(defpart 1319
  :init-specs ((sp-rnd-flt spt-vel-x (meters -0.00083333335) (meters 0.0016666667) 1.0)
    (sp-flt spt-scalevel-x (meters -0.00033333333))
    (sp-flt spt-scalevel-y (meters 0.006666667))
    (sp-rnd-flt spt-accel-y -4.096 -0.68266666 1.0)
    (sp-int-plain-rnd spt-next-time 0 224 1)
    (sp-launcher-by-id spt-next-launcher 1320)
    )
  )

(defpart 1317
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x21 :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-y (meters -2.5))
    (sp-flt spt-z (meters 0.75))
    (sp-rnd-flt spt-scale-x (meters 0.1) (meters 0.05) 1.0)
    (sp-int spt-rot-x 4)
    (sp-copy-from-other spt-scale-y -4)
    (sp-rnd-flt spt-r 32.0 32.0 1.0)
    (sp-rnd-flt spt-g 32.0 32.0 1.0)
    (sp-rnd-flt spt-b 64.0 32.0 1.0)
    (sp-rnd-flt spt-a 32.0 32.0 1.0)
    (sp-flt spt-omega 8.192)
    (sp-rnd-flt spt-vel-y (meters 0.016666668) (meters 0.013333334) 1.0)
    (sp-rnd-flt spt-accel-y -4.096 -0.68266666 1.0)
    (sp-flt spt-friction 0.97)
    (sp-int spt-timer 150)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3)
    (sp-func spt-func 'sparticle-motion-blur)
    (sp-int-plain-rnd spt-next-time 0 224 1)
    (sp-launcher-by-id spt-next-launcher 1320)
    (sp-rnd-flt spt-conerot-x (degrees 0.0) (degrees 60.0) 1.0)
    (sp-rnd-flt spt-conerot-y (degrees 0.0) (degrees 360.0) 1.0)
    )
  )

(defpartgroup group-atoll-birds-01
  :id 305
  :bounds (static-bspherem 0 0 0 64)
  :parts ((sp-item 1323 :flags (bit7) :period 2400 :length 320 :binding 1321)
    (sp-item 1321 :flags (bit1 start-dead launch-asap) :binding 1322)
    (sp-item 1322 :flags (is-3d start-dead))
    (sp-item 1321 :flags (bit1 start-dead launch-asap) :binding 1322)
    (sp-item 1322 :flags (is-3d start-dead))
    (sp-item 1321 :flags (bit1 start-dead launch-asap) :binding 1322)
    (sp-item 1322 :flags (is-3d start-dead))
    (sp-item 1321 :flags (bit1 start-dead launch-asap) :binding 1322)
    (sp-item 1322 :flags (is-3d start-dead))
    (sp-item 1321 :flags (bit1 start-dead launch-asap) :binding 1322)
    (sp-item 1322 :flags (is-3d start-dead))
    (sp-item 1321 :flags (bit1 start-dead launch-asap) :binding 1322)
    (sp-item 1322 :flags (is-3d start-dead))
    (sp-item 1321 :flags (bit1 start-dead launch-asap) :binding 1322)
    (sp-item 1322 :flags (is-3d start-dead))
    (sp-item 1321 :flags (bit1 start-dead launch-asap) :binding 1322)
    (sp-item 1322 :flags (is-3d start-dead))
    (sp-item 1321 :flags (bit1 start-dead launch-asap) :binding 1322)
    (sp-item 1322 :flags (is-3d start-dead))
    (sp-item 1321 :flags (bit1 start-dead launch-asap) :binding 1322)
    (sp-item 1322 :flags (is-3d start-dead))
    (sp-item 1321 :flags (bit1 start-dead launch-asap) :binding 1322)
    (sp-item 1322 :flags (is-3d start-dead))
    (sp-item 1321 :flags (bit1 start-dead launch-asap) :binding 1322)
    (sp-item 1322 :flags (is-3d start-dead))
    (sp-item 1321 :flags (bit1 start-dead launch-asap) :binding 1322)
    (sp-item 1322 :flags (is-3d start-dead))
    (sp-item 1321 :flags (bit1 start-dead launch-asap) :binding 1322)
    (sp-item 1322 :flags (is-3d start-dead))
    (sp-item 1321 :flags (bit1 start-dead launch-asap) :binding 1322)
    (sp-item 1322 :flags (is-3d start-dead))
    (sp-item 1321 :flags (bit1 start-dead launch-asap) :binding 1322)
    (sp-item 1322 :flags (is-3d start-dead))
    (sp-item 1321 :flags (bit1 start-dead launch-asap) :binding 1322)
    (sp-item 1322 :flags (is-3d start-dead))
    (sp-item 1321 :flags (bit1 start-dead launch-asap) :binding 1322)
    (sp-item 1322 :flags (is-3d start-dead))
    (sp-item 1321 :flags (bit1 start-dead launch-asap) :binding 1322)
    (sp-item 1322 :flags (is-3d start-dead))
    (sp-item 1321 :flags (bit1 start-dead launch-asap) :binding 1322)
    (sp-item 1322 :flags (is-3d start-dead))
    (sp-item 1321 :flags (bit1 start-dead launch-asap) :binding 1322)
    (sp-item 1322 :flags (is-3d start-dead))
    (sp-item 1321 :flags (bit1 start-dead launch-asap) :binding 1322)
    (sp-item 1322 :flags (is-3d start-dead))
    (sp-item 1321 :flags (bit1 start-dead launch-asap) :binding 1322)
    (sp-item 1322 :flags (is-3d start-dead))
    (sp-item 1321 :flags (bit1 start-dead launch-asap) :binding 1322)
    (sp-item 1322 :flags (is-3d start-dead))
    (sp-item 1321 :flags (bit1 start-dead launch-asap) :binding 1322)
    (sp-item 1322 :flags (is-3d start-dead))
    (sp-item 1321 :flags (bit1 start-dead launch-asap) :binding 1322)
    (sp-item 1322 :flags (is-3d start-dead))
    (sp-item 1321 :flags (bit1 start-dead launch-asap) :binding 1322)
    (sp-item 1322 :flags (is-3d start-dead))
    (sp-item 1321 :flags (bit1 start-dead launch-asap) :binding 1322)
    (sp-item 1322 :flags (is-3d start-dead))
    (sp-item 1321 :flags (bit1 start-dead launch-asap) :binding 1322)
    (sp-item 1322 :flags (is-3d start-dead))
    (sp-item 1321 :flags (bit1 start-dead launch-asap) :binding 1322)
    (sp-item 1322 :flags (is-3d start-dead))
    (sp-item 1321 :flags (bit1 start-dead launch-asap) :binding 1322)
    (sp-item 1322 :flags (is-3d start-dead))
    (sp-item 1321 :flags (bit1 start-dead launch-asap) :binding 1322)
    )
  )

(defpart 1323
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xc9 :page #xc))
    (sp-flt spt-num 0.25)
    (sp-rnd-flt spt-x (meters -5) (meters 10) 1.0)
    (sp-rnd-flt spt-y (meters -4) (meters 8) 1.0)
    (sp-rnd-flt spt-z (meters -10) (meters 20) 1.0)
    (sp-flt spt-scale-x (meters 1))
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 128.0)
    (sp-flt spt-a 0.0)
    (sp-rnd-flt spt-vel-x (meters -0.06666667) (meters -0.013333334) 1.0)
    (sp-rnd-flt spt-vel-y (meters 0.006666667) (meters 0.006666667) 1.0)
    (sp-flt spt-vel-z (meters 0))
    (sp-int spt-timer 2400)
    (sp-cpuinfo-flags sp-cpuinfo-flag-3 set-conerot)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1321
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xc9 :page #xc))
    (sp-flt spt-num 1.0)
    (sp-rnd-flt spt-x (meters 0) (meters 16) 1.0)
    (sp-rnd-flt spt-y (meters 0) (meters 16) 1.0)
    (sp-flt spt-z (meters 2))
    (sp-flt spt-scale-x (meters 0))
    (sp-flt spt-rot-z (degrees 90.0))
    (sp-rnd-flt spt-r 64.0 128.0 1.0)
    (sp-copy-from-other spt-g -1)
    (sp-copy-from-other spt-b -1)
    (sp-flt spt-a 128.0)
    (sp-rnd-flt spt-omega 0.0 65536.0 1.0)
    (sp-rnd-int-flt spt-vel-x (meters -0.026666667) 1 218.45334)
    (sp-rnd-int-flt spt-vel-y (meters -0.026666667) 1 218.45334)
    (sp-flt spt-vel-z (meters 0))
    (sp-flt spt-scalevel-x (meters -0.08))
    (sp-flt spt-fade-a -0.053333335)
    (sp-int spt-timer 2400)
    (sp-cpuinfo-flags sp-cpuinfo-flag-3 ready-to-launch)
    (sp-int spt-next-time 99)
    (sp-launcher-by-id spt-next-launcher 1324)
    )
  )

(defpart 1324
  :init-specs ((sp-flt spt-scale-x (meters 8))
    (sp-flt spt-scalevel-x (meters 0.16))
    (sp-int spt-next-time 50)
    (sp-launcher-by-id spt-next-launcher 1325)
    )
  )

(defpart 1325
  :init-specs ((sp-flt spt-scale-x (meters 0))
    (sp-flt spt-vel-z (meters 0))
    (sp-flt spt-scalevel-x (meters -0.08))
    (sp-int spt-next-time 99)
    (sp-launcher-by-id spt-next-launcher 1324)
    )
  )

(defun birth-func-atoll-bird-wing ((arg0 sparticle-system)
                          (arg1 sparticle-cpuinfo)
                          (arg2 sprite-vec-data-3d)
                          (arg3 sparticle-launcher)
                          (arg4 sparticle-launch-state)
                          )
  "@TODO - particle docs"
  (local-vars (v1-15 float) (v1-16 float))
  (rlet ((vf0 :class vf)
         (vf1 :class vf)
         (vf2 :class vf)
         )
    (init-vf0-vector)
    (let ((s5-0 (-> arg4 sprite)))
      (let ((v1-0 (the-as sprite-vec-data-2d (-> s5-0 user-float)))
            (s4-0 (new 'stack-no-clear 'quaternion))
            )
        (let* ((a0-1 arg2)
               (f0-0 (-> a0-1 qx-qy-qz-sy x))
               (f1-0 (-> a0-1 qx-qy-qz-sy y))
               (f2-0 (-> a0-1 qx-qy-qz-sy z))
               )
          (set! (-> s4-0 x) f0-0)
          (set! (-> s4-0 y) f1-0)
          (set! (-> s4-0 z) f2-0)
          (set! (-> s4-0 w) (sqrtf (- (- (- 1.0 (* f2-0 f2-0)) (* f1-0 f1-0)) (* f0-0 f0-0))))
          )
        (let ((a1-1 (new-stack-vector0)))
          (set! (-> a1-1 y) (-> v1-0 flag-rot-sy y))
          (set! (-> a1-1 z) (if (logtest? *global-toggle* 1)
                                (the float (sar (shl (the int (- 16384.0 (-> s5-0 sprite x-y-z-sx w))) 48) 48))
                                (the float (sar (shl (the int (+ 16384.0 (-> s5-0 sprite x-y-z-sx w))) 48) 48))
                                )
                )
          (quaternion-zxy! s4-0 a1-1)
          )
        (let ((v1-14 arg2))
          (cond
            ((< (-> s4-0 w) 0.0)
             (.lvf vf1 (&-> v1-14 qx-qy-qz-sy quad))
             (.lvf vf2 (&-> s4-0 quad))
             (.sub.vf vf1 vf0 vf2 :mask #b111)
             (.svf (&-> v1-14 qx-qy-qz-sy quad) vf1)
             (.mov v1-15 vf1)
             )
            (else
              (.lvf vf1 (&-> v1-14 qx-qy-qz-sy quad))
              (.lvf vf2 (&-> s4-0 quad))
              (.add.vf vf1 vf0 vf2 :mask #b111)
              (.svf (&-> v1-14 qx-qy-qz-sy quad) vf1)
              (.mov v1-16 vf1)
              )
            )
          )
        )
      (set! (-> arg2 r-g-b-a x) (-> s5-0 sprite r-g-b-a x))
      (set! (-> arg2 r-g-b-a y) (-> s5-0 sprite r-g-b-a y))
      (set! (-> arg2 r-g-b-a z) (-> s5-0 sprite r-g-b-a z))
      (set! (-> arg2 r-g-b-a w) (-> s5-0 sprite r-g-b-a w))
      )
    (set! *global-toggle* (+ *global-toggle* 1))
    0
    (none)
    )
  )

(defpart 1322
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :page #xa3b))
    (sp-func spt-birth-func 'birth-func-atoll-bird-wing)
    (sp-flt spt-num 2.0)
    (sp-flt spt-scale-x (meters 3))
    (sp-flt spt-scale-y (meters 1.2))
    (sp-flt spt-r 128.0)
    (sp-copy-from-other spt-g -1)
    (sp-copy-from-other spt-b -1)
    (sp-flt spt-a 128.0)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-12)
    )
  )

(defpartgroup group-atoll-bigvent
  :id 306
  :flags (unk-4)
  :bounds (static-bspherem 0 0 0 2)
  :parts ((sp-item 1326 :fade-after (meters 32) :falloff-to (meters 32) :flags (bit7))
    (sp-item 1327 :fade-after (meters 100) :falloff-to (meters 140) :flags (bit7))
    )
  )

(defpart 1326
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x92 :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-x (meters -1))
    (sp-rnd-flt spt-y (meters 0.5) (meters 2) 1.0)
    (sp-rnd-flt spt-z (meters -1) (meters 2) 1.0)
    (sp-flt spt-scale-x (meters 0.05))
    (sp-int spt-rot-x 4)
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 128.0)
    (sp-copy-from-other spt-g -1)
    (sp-copy-from-other spt-b -1)
    (sp-rnd-flt spt-a 16.0 32.0 1.0)
    (sp-flt spt-omega 4.096)
    (sp-rnd-flt spt-vel-x (meters 0.06666667) (meters 0.06666667) 1.0)
    (sp-rnd-flt spt-vel-y (meters -0.05) (meters -0.016666668) 1.0)
    (sp-flt spt-fade-a -0.16)
    (sp-flt spt-accel-y 3.4133334)
    (sp-rnd-flt spt-friction 0.9 0.025 1.0)
    (sp-int spt-timer 150)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-12)
    (sp-func spt-func 'sparticle-motion-blur)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1327
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :page #xc))
    (sp-rnd-flt spt-num 1.0 1.0 1.0)
    (sp-flt spt-x (meters 0))
    (sp-rnd-flt spt-y (meters 0.75) (meters 1) 1.0)
    (sp-rnd-flt spt-z (meters -0.75) (meters 1.5) 1.0)
    (sp-rnd-flt spt-scale-x (meters 1) (meters 0.5) 1.0)
    (sp-rnd-flt spt-rot-z (degrees 0.0) (degrees 360.0) 1.0)
    (sp-copy-from-other spt-scale-y -4)
    (sp-rnd-flt spt-r 64.0 128.0 1.0)
    (sp-copy-from-other spt-g -1)
    (sp-copy-from-other spt-b -1)
    (sp-flt spt-a 0.0)
    (sp-rnd-flt spt-vel-x (meters 0.06666667) (meters 0.06666667) 1.0)
    (sp-rnd-flt spt-vel-y (meters -0.05) (meters -0.016666668) 1.0)
    (sp-rnd-flt spt-scalevel-x (meters 0.01) (meters 0.006666667) 1.0)
    (sp-rnd-flt spt-rotvel-z (degrees -1.2) (degrees 2.4) 1.0)
    (sp-copy-from-other spt-scalevel-y -4)
    (sp-flt spt-fade-a 0.96)
    (sp-rnd-flt spt-accel-y 3.4133334 3.4133334 1.0)
    (sp-rnd-flt spt-friction 0.9 0.025 1.0)
    (sp-int spt-timer 150)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-12)
    (sp-int-plain-rnd spt-next-time 25 24 1)
    (sp-launcher-by-id spt-next-launcher 1328)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1328
  :init-specs ((sp-flt spt-fade-a -0.48))
  )

(defpartgroup group-atoll-smallvent
  :id 307
  :flags (unk-4)
  :bounds (static-bspherem 0 0 0 2)
  :parts ((sp-item 1329 :fade-after (meters 100) :falloff-to (meters 140) :flags (bit7)))
  )

(defpart 1329
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :page #xc))
    (sp-rnd-flt spt-num 3.0 1.0 1.0)
    (sp-flt spt-x (meters 0.25))
    (sp-rnd-flt spt-y (meters 0) (meters 0.75) 1.0)
    (sp-rnd-flt spt-z (meters -1) (meters 2) 1.0)
    (sp-rnd-flt spt-scale-x (meters 1) (meters 0.5) 1.0)
    (sp-rnd-flt spt-rot-z (degrees 0.0) (degrees 360.0) 1.0)
    (sp-copy-from-other spt-scale-y -4)
    (sp-rnd-flt spt-r 64.0 128.0 1.0)
    (sp-copy-from-other spt-g -1)
    (sp-copy-from-other spt-b -1)
    (sp-flt spt-a 0.0)
    (sp-rnd-flt spt-vel-x (meters 0.016666668) (meters 0.01) 1.0)
    (sp-rnd-flt spt-vel-y (meters -0.016666668) (meters -0.01) 1.0)
    (sp-rnd-flt spt-scalevel-x (meters 0.0033333334) (meters 0.0033333334) 1.0)
    (sp-rnd-flt spt-rotvel-z (degrees -0.2) (degrees 0.4) 1.0)
    (sp-copy-from-other spt-scalevel-y -4)
    (sp-flt spt-fade-a 0.48)
    (sp-rnd-flt spt-accel-y 0.68266666 0.68266666 1.0)
    (sp-rnd-flt spt-friction 0.9 0.025 1.0)
    (sp-int spt-timer 150)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-12)
    (sp-int-plain-rnd spt-next-time 25 24 1)
    (sp-launcher-by-id spt-next-launcher 1330)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1330
  :init-specs ((sp-flt spt-fade-a -0.24))
  )

(defpartgroup group-atoll-spray
  :id 308
  :flags (unk-4)
  :bounds (static-bspherem 0 -8 0 16)
  :parts ((sp-item 1331 :fade-after (meters 120) :falloff-to (meters 120) :flags (bit7))
    (sp-item 1332 :fade-after (meters 120) :falloff-to (meters 120) :flags (bit7))
    )
  )

(defpart 1331
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x21 :page #xc))
    (sp-rnd-flt spt-num 1.0 2.0 1.0)
    (sp-flt spt-z (meters -0.5))
    (sp-rnd-flt spt-scale-x (meters 0.1) (meters 0.1) 1.0)
    (sp-int spt-rot-x 4)
    (sp-copy-from-other spt-scale-y -4)
    (sp-rnd-flt spt-r 32.0 32.0 1.0)
    (sp-rnd-flt spt-g 32.0 32.0 1.0)
    (sp-rnd-flt spt-b 64.0 32.0 1.0)
    (sp-flt spt-a 128.0)
    (sp-flt spt-omega 4.096)
    (sp-rnd-flt spt-vel-z (meters 0.1) (meters 0.013333334) 1.0)
    (sp-rnd-flt spt-fade-a -0.28444445 -0.28444445 1.0)
    (sp-rnd-flt spt-accel-y -13.653334 1.3653333 1.0)
    (sp-flt spt-friction 0.99)
    (sp-int spt-timer 450)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-12 use-global-acc)
    (sp-func spt-func 'sparticle-motion-blur)
    (sp-int-plain-rnd spt-next-time 0 224 1)
    (sp-launcher-by-id spt-next-launcher 1320)
    (sp-rnd-flt spt-launchrot-x (degrees -5.0) (degrees 10.0) 1.0)
    (sp-rnd-flt spt-launchrot-z (degrees -5.0) (degrees 10.0) 1.0)
    )
  )

(defpart 1320
  :init-specs ((sp-flt spt-r 255.0)
    (sp-flt spt-g 255.0)
    (sp-flt spt-b 255.0)
    (sp-int spt-next-time 5)
    (sp-launcher-by-id spt-next-launcher 1333)
    )
  )

(defpart 1333
  :init-specs ((sp-rnd-flt spt-r 32.0 32.0 1.0)
    (sp-rnd-flt spt-g 32.0 32.0 1.0)
    (sp-rnd-flt spt-b 64.0 32.0 1.0)
    (sp-int-plain-rnd spt-next-time 0 449 1)
    (sp-launcher-by-id spt-next-launcher 1320)
    )
  )

(defpart 1332
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x21 :page #xc))
    (sp-rnd-flt spt-num 0.0 0.5 1.0)
    (sp-flt spt-z (meters -0.5))
    (sp-rnd-flt spt-scale-x (meters 0.1) (meters 0.1) 1.0)
    (sp-int spt-rot-x 4)
    (sp-copy-from-other spt-scale-y -4)
    (sp-rnd-flt spt-r 32.0 32.0 1.0)
    (sp-rnd-flt spt-g 32.0 32.0 1.0)
    (sp-rnd-flt spt-b 64.0 32.0 1.0)
    (sp-flt spt-a 128.0)
    (sp-flt spt-omega 4.096)
    (sp-rnd-flt spt-vel-z (meters 0.1) (meters 0.013333334) 1.0)
    (sp-rnd-flt spt-fade-a -0.28444445 -0.28444445 1.0)
    (sp-rnd-flt spt-accel-y -13.653334 1.3653333 1.0)
    (sp-flt spt-friction 0.99)
    (sp-int spt-timer 450)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-12 use-global-acc)
    (sp-func spt-func 'sparticle-motion-blur)
    (sp-int-plain-rnd spt-next-time 0 224 1)
    (sp-launcher-by-id spt-next-launcher 1320)
    (sp-rnd-flt spt-launchrot-x (degrees -30.0) (degrees 60.0) 1.0)
    (sp-rnd-flt spt-launchrot-z (degrees -30.0) (degrees 60.0) 1.0)
    )
  )

(defpartgroup group-atoll-spray-check-water
  :id 309
  :flags (unk-4)
  :bounds (static-bspherem 0 -8 0 16)
  :parts ((sp-item 1334 :fade-after (meters 100) :falloff-to (meters 100) :flags (bit7))
    (sp-item 1335 :fade-after (meters 100) :falloff-to (meters 100) :flags (bit7))
    )
  )

(defun check-drop-level-atoll-drop ((arg0 sparticle-system) (arg1 sparticle-cpuinfo) (arg2 matrix))
  "Ensure water drop particle effects don't go below the ocean level, render the splash"
  (let ((f30-0 (get-height *ocean* (the-as vector (-> arg2 vector)) #t)))
    (when (and (!= f30-0 4095996000.0) (< (-> arg2 vector 0 y) f30-0))
      (let ((s3-0 (new 'stack-no-clear 'vector)))
        (sp-kill-particle arg0 arg1)
        (set-vector! s3-0 (-> arg2 vector 0 x) f30-0 (-> arg2 vector 0 z) 1.0)
        (let ((t9-2 sp-launch-particles-var)
              (a0-4 *sp-particle-system-2d*)
              (a1-3 (-> *part-id-table* 1336))
              (a2-2 *launch-matrix*)
              )
          (set! (-> a2-2 trans quad) (-> s3-0 quad))
          (t9-2 a0-4 a1-3 a2-2 (the-as sparticle-launch-state #f) (the-as sparticle-launch-control #f) 1.0)
          )
        (let ((t9-3 sp-launch-particles-var)
              (a0-5 *sp-particle-system-3d*)
              (a1-4 (-> *part-id-table* 1337))
              (a2-3 *launch-matrix*)
              )
          (set! (-> a2-3 trans quad) (-> s3-0 quad))
          (t9-3 a0-5 a1-4 a2-3 (the-as sparticle-launch-state #f) (the-as sparticle-launch-control #f) 1.0)
          )
        )
      )
    )
  (sparticle-motion-blur arg0 arg1 (the-as vector arg2))
  (none)
  )

(defpart 1334
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x21 :page #xc))
    (sp-rnd-flt spt-num 1.0 1.0 1.0)
    (sp-flt spt-z (meters -0.5))
    (sp-rnd-flt spt-scale-x (meters 0.1) (meters 0.1) 1.0)
    (sp-int spt-rot-x 4)
    (sp-copy-from-other spt-scale-y -4)
    (sp-rnd-flt spt-r 32.0 32.0 1.0)
    (sp-rnd-flt spt-g 32.0 32.0 1.0)
    (sp-rnd-flt spt-b 64.0 32.0 1.0)
    (sp-flt spt-a 128.0)
    (sp-flt spt-omega 4.096)
    (sp-rnd-flt spt-vel-z (meters 0.1) (meters 0.013333334) 1.0)
    (sp-rnd-flt spt-fade-a -0.28444445 -0.28444445 1.0)
    (sp-rnd-flt spt-accel-y -13.653334 1.3653333 1.0)
    (sp-flt spt-friction 0.99)
    (sp-int spt-timer 450)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-12 use-global-acc)
    (sp-func spt-func 'check-drop-level-atoll-drop)
    (sp-int-plain-rnd spt-next-time 0 224 1)
    (sp-launcher-by-id spt-next-launcher 1320)
    (sp-rnd-flt spt-launchrot-x (degrees -5.0) (degrees 10.0) 1.0)
    (sp-rnd-flt spt-launchrot-z (degrees -5.0) (degrees 10.0) 1.0)
    )
  )

(defpart 1335
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x21 :page #xc))
    (sp-rnd-flt spt-num 0.0 0.5 1.0)
    (sp-flt spt-z (meters -0.5))
    (sp-rnd-flt spt-scale-x (meters 0.1) (meters 0.1) 1.0)
    (sp-int spt-rot-x 4)
    (sp-copy-from-other spt-scale-y -4)
    (sp-rnd-flt spt-r 32.0 32.0 1.0)
    (sp-rnd-flt spt-g 32.0 32.0 1.0)
    (sp-rnd-flt spt-b 64.0 32.0 1.0)
    (sp-flt spt-a 128.0)
    (sp-flt spt-omega 4.096)
    (sp-rnd-flt spt-vel-z (meters 0.1) (meters 0.013333334) 1.0)
    (sp-rnd-flt spt-fade-a -0.28444445 -0.28444445 1.0)
    (sp-rnd-flt spt-accel-y -13.653334 1.3653333 1.0)
    (sp-flt spt-friction 0.99)
    (sp-int spt-timer 450)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-12 use-global-acc)
    (sp-func spt-func 'check-drop-level-atoll-drop)
    (sp-int-plain-rnd spt-next-time 0 224 1)
    (sp-launcher-by-id spt-next-launcher 1320)
    (sp-rnd-flt spt-launchrot-x (degrees -30.0) (degrees 60.0) 1.0)
    (sp-rnd-flt spt-launchrot-z (degrees -30.0) (degrees 60.0) 1.0)
    )
  )

(defpart 1336
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x21 :page #xc))
    (sp-rnd-flt spt-num 1.0 1.0 1.0)
    (sp-rnd-flt spt-scale-x (meters 0.1) (meters 0.05) 1.0)
    (sp-int spt-rot-x 4)
    (sp-copy-from-other spt-scale-y -4)
    (sp-rnd-flt spt-r 32.0 32.0 1.0)
    (sp-rnd-flt spt-g 32.0 32.0 1.0)
    (sp-rnd-flt spt-b 64.0 32.0 1.0)
    (sp-rnd-flt spt-a 64.0 32.0 1.0)
    (sp-flt spt-omega 10.24)
    (sp-rnd-flt spt-vel-y (meters 0.01) (meters 0.026666667) 1.0)
    (sp-flt spt-fade-a -0.21333334)
    (sp-rnd-flt spt-accel-y -4.096 -0.68266666 1.0)
    (sp-flt spt-friction 0.97)
    (sp-int spt-timer 150)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3)
    (sp-func spt-func 'sparticle-motion-blur)
    (sp-int-plain-rnd spt-next-time 0 224 1)
    (sp-launcher-by-id spt-next-launcher 1320)
    (sp-rnd-flt spt-conerot-x (degrees 0.0) (degrees 60.0) 1.0)
    (sp-rnd-flt spt-conerot-y (degrees 0.0) (degrees 360.0) 1.0)
    )
  )

(defpart 1337
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x2c :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-y (meters 0.02))
    (sp-flt spt-scale-x (meters 1))
    (sp-copy-from-other spt-scale-y -4)
    (sp-rnd-flt spt-r 32.0 32.0 1.0)
    (sp-rnd-flt spt-g 32.0 32.0 1.0)
    (sp-rnd-flt spt-b 64.0 32.0 1.0)
    (sp-rnd-flt spt-a 64.0 32.0 1.0)
    (sp-rnd-flt spt-scalevel-x (meters 0.02) (meters 0.01) 1.0)
    (sp-rnd-flt spt-scalevel-y (meters 0.02) (meters 0.01) 1.0)
    (sp-flt spt-fade-a -0.64)
    (sp-int spt-timer 100)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-12)
    (sp-int-plain-rnd spt-next-time 0 224 1)
    (sp-launcher-by-id spt-next-launcher 1320)
    (sp-rnd-flt spt-rotate-y (degrees 0.0) (degrees 360.0) 1.0)
    )
  )

(defpartgroup group-atoll-spray-small
  :id 310
  :flags (unk-4)
  :bounds (static-bspherem 0 -4 0 8)
  :parts ((sp-item 1338 :fade-after (meters 120) :falloff-to (meters 120) :flags (bit7)))
  )

(defpart 1338
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x21 :page #xc))
    (sp-rnd-flt spt-num 0.0 0.5 1.0)
    (sp-flt spt-z (meters -0.25))
    (sp-rnd-flt spt-scale-x (meters 0.1) (meters 0.1) 1.0)
    (sp-int spt-rot-x 4)
    (sp-copy-from-other spt-scale-y -4)
    (sp-rnd-flt spt-r 32.0 32.0 1.0)
    (sp-rnd-flt spt-g 32.0 32.0 1.0)
    (sp-rnd-flt spt-b 64.0 32.0 1.0)
    (sp-flt spt-a 128.0)
    (sp-flt spt-omega 4.096)
    (sp-rnd-flt spt-vel-z (meters 0.033333335) (meters 0.013333334) 1.0)
    (sp-rnd-flt spt-fade-a -0.28444445 -0.28444445 1.0)
    (sp-rnd-flt spt-accel-y -13.653334 1.3653333 1.0)
    (sp-flt spt-friction 0.99)
    (sp-int spt-timer 600)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-12 use-global-acc)
    (sp-func spt-func 'sparticle-motion-blur)
    (sp-int-plain-rnd spt-next-time 0 224 1)
    (sp-launcher-by-id spt-next-launcher 1320)
    (sp-rnd-flt spt-launchrot-x (degrees -2.0) (degrees 4.0) 1.0)
    (sp-rnd-flt spt-launchrot-z (degrees -2.0) (degrees 4.0) 1.0)
    )
  )

(defpartgroup group-atoll-spray-check-userdata-1-1
  :id 311
  :flags (unk-4)
  :bounds (static-bspherem 0 -12 0 20)
  :parts ((sp-item 1339 :fade-after (meters 100) :falloff-to (meters 100) :flags (bit7))
    (sp-item 1332 :fade-after (meters 100) :falloff-to (meters 100) :flags (bit7))
    )
  )

(defpartgroup group-atoll-spray-check-userdata-1-4
  :id 312
  :flags (unk-4)
  :bounds (static-bspherem 0 -12 0 20)
  :parts ((sp-item 1340 :fade-after (meters 100) :falloff-to (meters 100) :flags (bit7))
    (sp-item 1332 :fade-after (meters 100) :falloff-to (meters 100) :flags (bit7))
    )
  )

(defpartgroup group-atoll-spray-check-userdata-7
  :id 313
  :flags (unk-4)
  :bounds (static-bspherem 0 -12 0 20)
  :parts ((sp-item 1341 :fade-after (meters 100) :falloff-to (meters 100) :flags (bit7))
    (sp-item 1332 :fade-after (meters 100) :falloff-to (meters 100) :flags (bit7))
    )
  )

(defpartgroup group-atoll-spray-check-userdata-8
  :id 314
  :flags (unk-4)
  :bounds (static-bspherem 0 -12 0 20)
  :parts ((sp-item 1342 :fade-after (meters 100) :falloff-to (meters 100) :flags (bit7))
    (sp-item 1332 :fade-after (meters 100) :falloff-to (meters 100) :flags (bit7))
    )
  )

(defpartgroup group-atoll-spray-check-userdata-13
  :id 315
  :flags (unk-4)
  :bounds (static-bspherem 0 -12 0 30)
  :parts ((sp-item 1343 :fade-after (meters 100) :falloff-to (meters 100) :flags (bit7))
    (sp-item 1344 :fade-after (meters 100) :falloff-to (meters 100) :flags (bit7))
    )
  )

(defun check-drop-level-atoll-drop-userdata ((arg0 sparticle-system) (arg1 sparticle-cpuinfo) (arg2 matrix))
  "Ensure water drop particle effects don't go below the provided y-value, render the splash"
  (when (< (-> arg2 vector 0 y) (-> arg1 user-float))
    (let ((s3-0 (new 'stack-no-clear 'vector)))
      (sp-kill-particle arg0 arg1)
      (set-vector! s3-0 (-> arg2 vector 0 x) (-> arg1 user-float) (-> arg2 vector 0 z) 1.0)
      (let ((t9-1 sp-launch-particles-var)
            (a0-3 *sp-particle-system-2d*)
            (a1-2 (-> *part-id-table* 1336))
            (a2-1 *launch-matrix*)
            )
        (set! (-> a2-1 trans quad) (-> s3-0 quad))
        (t9-1 a0-3 a1-2 a2-1 (the-as sparticle-launch-state #f) (the-as sparticle-launch-control #f) 1.0)
        )
      )
    )
  (sparticle-motion-blur arg0 arg1 (the-as vector arg2))
  (none)
  )

(defpart 1339
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x21 :page #xc))
    (sp-rnd-flt spt-num 1.0 1.0 1.0)
    (sp-flt spt-z (meters -0.5))
    (sp-rnd-flt spt-scale-x (meters 0.1) (meters 0.1) 1.0)
    (sp-int spt-rot-x 4)
    (sp-copy-from-other spt-scale-y -4)
    (sp-rnd-flt spt-r 32.0 32.0 1.0)
    (sp-rnd-flt spt-g 32.0 32.0 1.0)
    (sp-rnd-flt spt-b 64.0 32.0 1.0)
    (sp-flt spt-a 128.0)
    (sp-flt spt-omega 4.096)
    (sp-rnd-flt spt-vel-z (meters 0.1) (meters 0.013333334) 1.0)
    (sp-rnd-flt spt-fade-a -0.28444445 -0.28444445 1.0)
    (sp-rnd-flt spt-accel-y -13.653334 1.3653333 1.0)
    (sp-flt spt-friction 0.99)
    (sp-int spt-timer 450)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-12 use-global-acc)
    (sp-flt spt-userdata 5324.8)
    (sp-func spt-func 'check-drop-level-atoll-drop-userdata)
    (sp-int-plain-rnd spt-next-time 0 224 1)
    (sp-launcher-by-id spt-next-launcher 1320)
    (sp-rnd-flt spt-launchrot-x (degrees -5.0) (degrees 10.0) 1.0)
    (sp-rnd-flt spt-launchrot-z (degrees -5.0) (degrees 10.0) 1.0)
    )
  )

(defpart 1340
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x21 :page #xc))
    (sp-rnd-flt spt-num 1.0 1.0 1.0)
    (sp-flt spt-z (meters -0.5))
    (sp-rnd-flt spt-scale-x (meters 0.1) (meters 0.1) 1.0)
    (sp-int spt-rot-x 4)
    (sp-copy-from-other spt-scale-y -4)
    (sp-rnd-flt spt-r 32.0 32.0 1.0)
    (sp-rnd-flt spt-g 32.0 32.0 1.0)
    (sp-rnd-flt spt-b 64.0 32.0 1.0)
    (sp-flt spt-a 128.0)
    (sp-flt spt-omega 4.096)
    (sp-rnd-flt spt-vel-z (meters 0.1) (meters 0.013333334) 1.0)
    (sp-rnd-flt spt-fade-a -0.28444445 -0.28444445 1.0)
    (sp-rnd-flt spt-accel-y -13.653334 1.3653333 1.0)
    (sp-flt spt-friction 0.99)
    (sp-int spt-timer 450)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-12 use-global-acc)
    (sp-flt spt-userdata 6553.6)
    (sp-func spt-func 'check-drop-level-atoll-drop-userdata)
    (sp-int-plain-rnd spt-next-time 0 224 1)
    (sp-launcher-by-id spt-next-launcher 1320)
    (sp-rnd-flt spt-launchrot-x (degrees -5.0) (degrees 10.0) 1.0)
    (sp-rnd-flt spt-launchrot-z (degrees -5.0) (degrees 10.0) 1.0)
    )
  )

(defpart 1341
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x21 :page #xc))
    (sp-rnd-flt spt-num 1.0 1.0 1.0)
    (sp-flt spt-z (meters -0.5))
    (sp-rnd-flt spt-scale-x (meters 0.1) (meters 0.1) 1.0)
    (sp-int spt-rot-x 4)
    (sp-copy-from-other spt-scale-y -4)
    (sp-rnd-flt spt-r 32.0 32.0 1.0)
    (sp-rnd-flt spt-g 32.0 32.0 1.0)
    (sp-rnd-flt spt-b 64.0 32.0 1.0)
    (sp-flt spt-a 128.0)
    (sp-flt spt-omega 4.096)
    (sp-rnd-flt spt-vel-z (meters 0.1) (meters 0.013333334) 1.0)
    (sp-rnd-flt spt-fade-a -0.28444445 -0.28444445 1.0)
    (sp-rnd-flt spt-accel-y -13.653334 1.3653333 1.0)
    (sp-flt spt-friction 0.99)
    (sp-int spt-timer 450)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-12 use-global-acc)
    (sp-flt spt-userdata 28672.0)
    (sp-func spt-func 'check-drop-level-atoll-drop-userdata)
    (sp-int-plain-rnd spt-next-time 0 224 1)
    (sp-launcher-by-id spt-next-launcher 1320)
    (sp-rnd-flt spt-launchrot-x (degrees -5.0) (degrees 10.0) 1.0)
    (sp-rnd-flt spt-launchrot-z (degrees -5.0) (degrees 10.0) 1.0)
    )
  )

(defpart 1342
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x21 :page #xc))
    (sp-rnd-flt spt-num 1.0 1.0 1.0)
    (sp-flt spt-z (meters -0.5))
    (sp-rnd-flt spt-scale-x (meters 0.1) (meters 0.1) 1.0)
    (sp-int spt-rot-x 4)
    (sp-copy-from-other spt-scale-y -4)
    (sp-rnd-flt spt-r 32.0 32.0 1.0)
    (sp-rnd-flt spt-g 32.0 32.0 1.0)
    (sp-rnd-flt spt-b 64.0 32.0 1.0)
    (sp-flt spt-a 128.0)
    (sp-flt spt-omega 4.096)
    (sp-rnd-flt spt-vel-z (meters 0.1) (meters 0.013333334) 1.0)
    (sp-rnd-flt spt-fade-a -0.28444445 -0.28444445 1.0)
    (sp-rnd-flt spt-accel-y -13.653334 1.3653333 1.0)
    (sp-flt spt-friction 0.99)
    (sp-int spt-timer 450)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-12 use-global-acc)
    (sp-rnd-flt spt-userdata 32768.0 20480.0 1.0)
    (sp-func spt-func 'check-drop-level-atoll-drop-userdata)
    (sp-int-plain-rnd spt-next-time 0 224 1)
    (sp-launcher-by-id spt-next-launcher 1320)
    (sp-rnd-flt spt-launchrot-x (degrees -5.0) (degrees 10.0) 1.0)
    (sp-rnd-flt spt-launchrot-z (degrees -5.0) (degrees 10.0) 1.0)
    )
  )

(defpart 1343
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x21 :page #xc))
    (sp-rnd-flt spt-num 1.0 1.0 1.0)
    (sp-flt spt-z (meters -0.5))
    (sp-rnd-flt spt-scale-x (meters 0.1) (meters 0.1) 1.0)
    (sp-int spt-rot-x 4)
    (sp-copy-from-other spt-scale-y -4)
    (sp-rnd-flt spt-r 32.0 32.0 1.0)
    (sp-rnd-flt spt-g 32.0 32.0 1.0)
    (sp-rnd-flt spt-b 64.0 32.0 1.0)
    (sp-flt spt-a 128.0)
    (sp-flt spt-omega 4.096)
    (sp-rnd-flt spt-vel-z (meters 0.1) (meters 0.013333334) 1.0)
    (sp-rnd-flt spt-fade-a -0.14222223 -0.14222223 1.0)
    (sp-rnd-flt spt-accel-y -13.653334 1.3653333 1.0)
    (sp-flt spt-friction 0.99)
    (sp-int spt-timer 450)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-12 use-global-acc)
    (sp-flt spt-userdata 53248.0)
    (sp-func spt-func 'check-drop-level-atoll-drop-userdata)
    (sp-int-plain-rnd spt-next-time 0 224 1)
    (sp-launcher-by-id spt-next-launcher 1320)
    (sp-rnd-flt spt-launchrot-x (degrees -5.0) (degrees 10.0) 1.0)
    (sp-rnd-flt spt-launchrot-z (degrees -5.0) (degrees 10.0) 1.0)
    )
  )

(defpart 1344
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x21 :page #xc))
    (sp-rnd-flt spt-num 0.0 0.5 1.0)
    (sp-flt spt-z (meters -0.5))
    (sp-rnd-flt spt-scale-x (meters 0.1) (meters 0.1) 1.0)
    (sp-int spt-rot-x 4)
    (sp-copy-from-other spt-scale-y -4)
    (sp-rnd-flt spt-r 32.0 32.0 1.0)
    (sp-rnd-flt spt-g 32.0 32.0 1.0)
    (sp-rnd-flt spt-b 64.0 32.0 1.0)
    (sp-flt spt-a 128.0)
    (sp-flt spt-omega 4.096)
    (sp-rnd-flt spt-vel-z (meters 0.1) (meters 0.013333334) 1.0)
    (sp-rnd-flt spt-fade-a -0.14222223 -0.14222223 1.0)
    (sp-rnd-flt spt-accel-y -13.653334 1.3653333 1.0)
    (sp-flt spt-friction 0.99)
    (sp-int spt-timer 450)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-12 use-global-acc)
    (sp-flt spt-userdata 53248.0)
    (sp-func spt-func 'check-drop-level-atoll-drop-userdata)
    (sp-int-plain-rnd spt-next-time 0 224 1)
    (sp-launcher-by-id spt-next-launcher 1320)
    (sp-rnd-flt spt-launchrot-x (degrees -30.0) (degrees 60.0) 1.0)
    (sp-rnd-flt spt-launchrot-z (degrees -30.0) (degrees 60.0) 1.0)
    )
  )

(defpartgroup group-atoll-cable-lights
  :id 316
  :bounds (static-bspherem 0 0 0 16)
  :parts ((sp-item 1345 :fade-after (meters 6000) :flags (bit6) :hour-mask #b111111111110000000))
  )

(defpart 1345
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xbb :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-y (meters 2))
    (sp-flt spt-scale-x (meters 24))
    (sp-flt spt-rot-x 40960.0)
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 255.0)
    (sp-rnd-flt spt-g 196.0 64.0 1.0)
    (sp-flt spt-b 64.0)
    (sp-rnd-flt spt-a 20.0 4.0 1.0)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 2048.0)
    )
  )

(defpartgroup group-atoll-stadium-lights
  :id 317
  :bounds (static-bspherem 0 0 0 64)
  :parts ((sp-item 1346 :flags (bit6) :hour-mask #b111111111110000000)
    (sp-item 1347 :flags (bit6) :hour-mask #b111111111110000000)
    )
  )

(defpart 1346
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xbb :page #xc))
    (sp-flt spt-num 1.0)
    (sp-rnd-flt spt-scale-x (meters 48.5) (meters 0.1) 1.0)
    (sp-flt spt-rot-x 8192.0)
    (sp-flt spt-rot-z (degrees -17.0))
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 255.0)
    (sp-flt spt-g 255.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 32.0 4.0 1.0)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 0.0)
    )
  )

(defpart 1347
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xbb :page #xc))
    (sp-flt spt-num 1.0)
    (sp-rnd-flt spt-scale-x (meters 96) (meters 0.1) 1.0)
    (sp-flt spt-rot-x 14336.0)
    (sp-flt spt-rot-z (degrees -17.0))
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 255.0)
    (sp-rnd-flt spt-g 255.0 255.0 1.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 8.0 2.0 1.0)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 0.0)
    )
  )
