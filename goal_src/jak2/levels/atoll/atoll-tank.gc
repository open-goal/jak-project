;;-*-Lisp-*-
(in-package goal)

;; name: atoll-tank.gc
;; name in dgo: atoll-tank
;; dgos: ATE

;; DECOMP BEGINS

(defpartgroup group-atoll-tank-a-trail
  :id 318
  :duration (seconds 0.017)
  :bounds (static-bspherem 0 0 0 15)
  :parts ((sp-item 1348) (sp-item 1349))
  )

(defpart 1348
  :init-specs ((:texture (new 'static 'texture-id :page #xc))
    (:num 2.0 4.0)
    (:scale-x (meters 2) (meters 1))
    (:rot-z (degrees 0) 1 (degrees 180))
    (:scale-y :copy scale-x)
    (:r 128.0 64.0)
    (:g 96.0 32.0)
    (:b 64.0 32.0)
    (:a 8.0 24.0)
    (:vel-y (meters 0.013333334) (meters 0.053333335))
    (:scalevel-x (meters 0.013333334) (meters 0.016666668))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.032 -0.032)
    (:friction 0.95)
    (:timer (seconds 6.667))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-12))
    (:conerot-x (degrees 0) (degrees 360))
    (:conerot-y (degrees 0) (degrees 360))
    (:conerot-radius (meters 0) (meters 0.6))
    )
  )

(defpart 1349
  :init-specs ((:texture (new 'static 'texture-id :page #xc))
    (:num 2.0 4.0)
    (:scale-x (meters 2) (meters 1))
    (:rot-z (degrees 0) 1 (degrees 180))
    (:scale-y :copy scale-x)
    (:r 64.0 128.0)
    (:g :copy r)
    (:b :copy g)
    (:a 8.0 24.0)
    (:vel-y (meters 0.013333334) (meters 0.053333335))
    (:scalevel-x (meters 0.013333334) (meters 0.016666668))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.032 -0.032)
    (:friction 0.95)
    (:timer (seconds 6.667))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-12))
    (:conerot-x (degrees 0) (degrees 360))
    (:conerot-y (degrees 0) (degrees 360))
    (:conerot-radius (meters 0) (meters 0.6))
    )
  )

(defpartgroup group-atoll-tank-a-ground
  :id 319
  :duration (seconds 0.017)
  :bounds (static-bspherem 0 0 0 15)
  :parts ((sp-item 1350) (sp-item 1351))
  )

(defpart 1350
  :init-specs ((:texture (new 'static 'texture-id :page #xc))
    (:num 2.0 4.0)
    (:scale-x (meters 2) (meters 1))
    (:rot-z (degrees 0) 1 (degrees 180))
    (:scale-y :copy scale-x)
    (:r 128.0 64.0)
    (:g 96.0 32.0)
    (:b 64.0 32.0)
    (:a 8.0 24.0)
    (:vel-y (meters 0.013333334) (meters 0.053333335))
    (:scalevel-x (meters 0.013333334) (meters 0.016666668))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.032 -0.032)
    (:friction 0.95)
    (:timer (seconds 6.667))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-12))
    (:conerot-x (degrees 80) (degrees 10))
    (:conerot-y (degrees 0) (degrees 360))
    (:conerot-radius (meters 0) (meters 0.6))
    )
  )

(defpart 1351
  :init-specs ((:texture (new 'static 'texture-id :page #xc))
    (:num 2.0 4.0)
    (:scale-x (meters 2) (meters 1))
    (:rot-z (degrees 0) 1 (degrees 180))
    (:scale-y :copy scale-x)
    (:r 64.0 128.0)
    (:g :copy r)
    (:b :copy g)
    (:a 8.0 24.0)
    (:vel-y (meters 0.013333334) (meters 0.053333335))
    (:scalevel-x (meters 0.013333334) (meters 0.016666668))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.032 -0.032)
    (:friction 0.95)
    (:timer (seconds 6.667))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-12))
    (:conerot-x (degrees 80) (degrees 10))
    (:conerot-y (degrees 0) (degrees 360))
    (:conerot-radius (meters 0) (meters 0.6))
    )
  )

(defpartgroup group-atoll-tank-a-slide
  :id 320
  :duration (seconds 0.017)
  :bounds (static-bspherem 0 0 0 15)
  :parts ((sp-item 1352) (sp-item 1353))
  )

(defpart 1352
  :init-specs ((:texture (new 'static 'texture-id :page #xc))
    (:num 1.0 2.0)
    (:scale-x (meters 0.5) (meters 0.5))
    (:rot-z (degrees 0) 1 (degrees 180))
    (:scale-y :copy scale-x)
    (:r 128.0 64.0)
    (:g 96.0 32.0)
    (:b 64.0 32.0)
    (:a 8.0 24.0)
    (:vel-y (meters 0) (meters 0.026666667))
    (:scalevel-x (meters 0.01) (meters 0.006666667))
    (:scalevel-y (meters 0.0033333334) (meters 0.0033333334))
    (:fade-a -0.032 -0.032)
    (:friction 0.95)
    (:timer (seconds 3.335))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-12))
    (:conerot-x (degrees 90))
    (:conerot-y (degrees 0) (degrees 360))
    (:conerot-radius (meters 0) (meters 0.6))
    )
  )

(defpart 1353
  :init-specs ((:texture (new 'static 'texture-id :page #xc))
    (:num 1.0 2.0)
    (:scale-x (meters 0.5) (meters 0.5))
    (:rot-z (degrees 0) 1 (degrees 180))
    (:scale-y :copy scale-x)
    (:r 64.0 64.0)
    (:g :copy r)
    (:b :copy g)
    (:a 8.0 24.0)
    (:vel-y (meters 0) (meters 0.026666667))
    (:scalevel-x (meters 0.01) (meters 0.006666667))
    (:scalevel-y (meters 0.0033333334) (meters 0.0033333334))
    (:fade-a -0.032 -0.032)
    (:friction 0.95)
    (:timer (seconds 3.335))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-12))
    (:conerot-x (degrees 90))
    (:conerot-y (degrees 0) (degrees 360))
    (:conerot-radius (meters 0) (meters 0.6))
    )
  )

(defpartgroup group-atoll-tank-intact
  :id 321
  :bounds (static-bspherem 0 8 12 24)
  :parts ((sp-item 1354 :fade-after (meters 100) :falloff-to (meters 120) :period (seconds 4.2) :length (seconds 0.25))
    (sp-item 1354 :fade-after (meters 100) :falloff-to (meters 120) :period (seconds 2.567) :length (seconds 0.32))
    (sp-item 1354 :fade-after (meters 140) :falloff-to (meters 160) :period (seconds 3.12) :length (seconds 0.2))
    (sp-item 1355 :fade-after (meters 100) :falloff-to (meters 100))
    (sp-item 1356 :fade-after (meters 100) :falloff-to (meters 120) :period (seconds 4.6) :length (seconds 0.25))
    (sp-item 1356 :fade-after (meters 100) :falloff-to (meters 120) :period (seconds 2.23) :length (seconds 0.32))
    (sp-item 1356 :fade-after (meters 140) :falloff-to (meters 160) :period (seconds 3.455) :length (seconds 0.2))
    (sp-item 1357 :fade-after (meters 100) :falloff-to (meters 100))
    (sp-item 1358 :fade-after (meters 100) :falloff-to (meters 120) :period (seconds 4.45) :length (seconds 0.25))
    (sp-item 1358 :fade-after (meters 100) :falloff-to (meters 120) :period (seconds 2.65) :length (seconds 0.32))
    (sp-item 1358 :fade-after (meters 140) :falloff-to (meters 160) :period (seconds 3.997) :length (seconds 0.2))
    (sp-item 1359 :fade-after (meters 100) :falloff-to (meters 100))
    (sp-item 1360 :fade-after (meters 100) :falloff-to (meters 120) :period (seconds 4.86) :length (seconds 0.25))
    (sp-item 1360 :fade-after (meters 100) :falloff-to (meters 120) :period (seconds 5.125) :length (seconds 0.32))
    (sp-item 1360 :fade-after (meters 140) :falloff-to (meters 160) :period (seconds 3.075) :length (seconds 0.2))
    (sp-item 1361 :fade-after (meters 100) :falloff-to (meters 100))
    (sp-item 1362 :fade-after (meters 100) :falloff-to (meters 120) :period (seconds 4.86) :length (seconds 0.25))
    (sp-item 1362 :fade-after (meters 100) :falloff-to (meters 120) :period (seconds 5.125) :length (seconds 0.32))
    (sp-item 1362 :fade-after (meters 140) :falloff-to (meters 160) :period (seconds 3.075) :length (seconds 0.2))
    (sp-item 1363 :fade-after (meters 100) :falloff-to (meters 100))
    (sp-item 1364 :fade-after (meters 80) :falloff-to (meters 100))
    (sp-item 1365 :fade-after (meters 80) :falloff-to (meters 100))
    (sp-item 1366 :fade-after (meters 80) :falloff-to (meters 100))
    (sp-item 1367 :fade-after (meters 80) :falloff-to (meters 100))
    (sp-item 1368 :fade-after (meters 80) :falloff-to (meters 100))
    (sp-item 1369 :fade-after (meters 80) :falloff-to (meters 100))
    (sp-item 1370 :fade-after (meters 80) :falloff-to (meters 100))
    (sp-item 1371 :fade-after (meters 80) :falloff-to (meters 100))
    (sp-item 1372 :fade-after (meters 100) :falloff-to (meters 100))
    (sp-item 1373 :fade-after (meters 100) :falloff-to (meters 100))
    (sp-item 1374 :fade-after (meters 100) :falloff-to (meters 100))
    (sp-item 1375 :fade-after (meters 100) :falloff-to (meters 100))
    )
  )

(defpart 1374
  :init-specs ((:texture (new 'static 'texture-id :index #x21 :page #xc))
    (:num 1.0 3.0)
    (:x (meters -1))
    (:y (meters 9.8))
    (:z (meters -7))
    (:scale-x (meters 0.1) (meters 0.1))
    (:rot-x 4)
    (:scale-y :copy scale-x)
    (:r 32.0 32.0)
    (:g 32.0 32.0)
    (:b 64.0 32.0)
    (:a 128.0)
    (:omega (degrees 0.03375))
    (:vel-y (meters 0.13333334) (meters 0.013333334))
    (:fade-a -0.21333334 -0.21333334)
    (:accel-y (meters -0.0033333334) (meters 0.00033333333))
    (:friction 0.99)
    (:timer (seconds 2))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-12))
    (:func 'sparticle-motion-blur)
    (:next-time (seconds 0) (seconds 0.747))
    (:next-launcher 1320)
    (:launchrot-x (degrees -5) (degrees 10))
    (:launchrot-z (degrees -5) (degrees 10))
    (:conerot-x (degrees -20))
    (:conerot-y (degrees 60))
    )
  )

(defpart 1375
  :init-specs ((:texture (new 'static 'texture-id :index #x21 :page #xc))
    (:num 0.0 1.0)
    (:x (meters -1))
    (:y (meters 9.8))
    (:z (meters -7))
    (:scale-x (meters 0.1) (meters 0.1))
    (:rot-x 4)
    (:scale-y :copy scale-x)
    (:r 32.0 32.0)
    (:g 32.0 32.0)
    (:b 64.0 32.0)
    (:a 128.0)
    (:omega (degrees 0.03375))
    (:vel-y (meters 0.1) (meters 0.013333334))
    (:fade-a -0.28444445 -0.28444445)
    (:accel-y (meters -0.0033333334) (meters 0.00033333333))
    (:friction 0.99)
    (:timer (seconds 1.5))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-12))
    (:func 'sparticle-motion-blur)
    (:next-time (seconds 0) (seconds 0.747))
    (:next-launcher 1320)
    (:launchrot-x (degrees -30) (degrees 60))
    (:launchrot-z (degrees -30) (degrees 60))
    (:conerot-x (degrees -20))
    (:conerot-y (degrees 60))
    )
  )

(defpart 1372
  :init-specs ((:texture (new 'static 'texture-id :index #x21 :page #xc))
    (:num 1.0 3.0)
    (:x (meters 2))
    (:y (meters 9.4))
    (:z (meters 9.2))
    (:scale-x (meters 0.1) (meters 0.1))
    (:rot-x 4)
    (:scale-y :copy scale-x)
    (:r 32.0 32.0)
    (:g 32.0 32.0)
    (:b 64.0 32.0)
    (:a 128.0)
    (:omega (degrees 0.03375))
    (:vel-y (meters 0.1) (meters 0.013333334))
    (:fade-a -0.21333334 -0.21333334)
    (:accel-y (meters -0.0033333334) (meters 0.00033333333))
    (:friction 0.99)
    (:timer (seconds 2))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-12))
    (:func 'sparticle-motion-blur)
    (:next-time (seconds 0) (seconds 0.747))
    (:next-launcher 1320)
    (:launchrot-x (degrees -5) (degrees 10))
    (:launchrot-z (degrees -5) (degrees 10))
    (:conerot-x (degrees 50.000004))
    (:conerot-y (degrees 20))
    )
  )

(defpart 1373
  :init-specs ((:texture (new 'static 'texture-id :index #x21 :page #xc))
    (:num 0.0 1.0)
    (:x (meters 2))
    (:y (meters 9.4))
    (:z (meters 9.2))
    (:scale-x (meters 0.1) (meters 0.1))
    (:rot-x 4)
    (:scale-y :copy scale-x)
    (:r 32.0 32.0)
    (:g 32.0 32.0)
    (:b 64.0 32.0)
    (:a 128.0)
    (:omega (degrees 0.03375))
    (:vel-y (meters 0.1) (meters 0.013333334))
    (:fade-a -0.28444445 -0.28444445)
    (:accel-y (meters -0.0033333334) (meters 0.00033333333))
    (:friction 0.99)
    (:timer (seconds 1.5))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-12))
    (:func 'sparticle-motion-blur)
    (:next-time (seconds 0) (seconds 0.747))
    (:next-launcher 1320)
    (:launchrot-x (degrees -30) (degrees 60))
    (:launchrot-z (degrees -30) (degrees 60))
    (:conerot-x (degrees 50.000004))
    (:conerot-y (degrees 20))
    )
  )

(defpart 1368
  :init-specs ((:texture (new 'static 'texture-id :index #x21 :page #xc))
    (:num 1.0)
    (:x (meters 3.5))
    (:y (meters 3))
    (:z (meters -3.1))
    (:scale-x (meters 0.1) (meters 0.1))
    (:rot-x 4)
    (:scale-y :copy scale-x)
    (:r 32.0 32.0)
    (:g 32.0 32.0)
    (:b 64.0 32.0)
    (:a 128.0)
    (:omega (degrees 0.0225))
    (:vel-y (meters 0.06666667) (meters 0.013333334))
    (:accel-y (meters -0.0011666666) (meters 0.00026666667))
    (:friction 0.98)
    (:timer (seconds 0.135))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-12))
    (:func 'sparticle-motion-blur)
    (:next-time (seconds 0) (seconds 0.747))
    (:next-launcher 1320)
    (:conerot-x (degrees 150))
    (:conerot-y (degrees 120))
    )
  )

(defpart 1369
  :init-specs ((:texture (new 'static 'texture-id :index #x21 :page #xc))
    (:num 0.0 1.0)
    (:x (meters 3.75))
    (:y (meters 2.75))
    (:z (meters -3.1))
    (:scale-x (meters 0.1) (meters 0.1))
    (:rot-x 4)
    (:scale-y :copy scale-x)
    (:r 32.0 32.0)
    (:g 32.0 32.0)
    (:b 64.0 32.0)
    (:a 64.0 32.0)
    (:omega (degrees 0.0225))
    (:vel-y (meters 0.06666667) (meters 0.013333334))
    (:fade-a -0.48 -0.48)
    (:accel-y (meters -0.0011666666) (meters 0.00026666667))
    (:friction 0.98)
    (:timer (seconds 0.25))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-12))
    (:func 'sparticle-motion-blur)
    (:next-time (seconds 0) (seconds 0.747))
    (:next-launcher 1320)
    (:launchrot-x (degrees -30) (degrees 60))
    (:launchrot-z (degrees -30) (degrees 60))
    (:conerot-x (degrees 150))
    (:conerot-y (degrees 120))
    )
  )

(defpart 1370
  :init-specs ((:texture (new 'static 'texture-id :index #x21 :page #xc))
    (:num 1.0)
    (:x (meters 4.8))
    (:y (meters 0))
    (:z (meters -3.8))
    (:scale-x (meters 0.075) (meters 0.05))
    (:rot-x 4)
    (:scale-y :copy scale-x)
    (:r 32.0 32.0)
    (:g 32.0 32.0)
    (:b 64.0 32.0)
    (:a 64.0 64.0)
    (:omega (degrees 0.0225))
    (:vel-y (meters 0.016666668) (meters 0.033333335))
    (:fade-a -0.21333334 -0.21333334)
    (:accel-y (meters -0.001) (meters -0.00016666666))
    (:friction 0.97)
    (:timer (seconds 0.5))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-12))
    (:func 'sparticle-motion-blur)
    (:next-time (seconds 0) (seconds 0.747))
    (:next-launcher 1320)
    (:conerot-x (degrees 0) (degrees 60))
    (:conerot-y (degrees 0) (degrees 360))
    )
  )

(defpart 1371
  :init-specs ((:texture (new 'static 'texture-id :index #x21 :page #xc))
    (:num 4.0)
    (:x (meters 4.8) (meters 0.1))
    (:y (meters 0))
    (:z (meters -3.8))
    (:scale-x (meters 0.1) (meters 0.05))
    (:rot-x 4)
    (:scale-y :copy scale-x)
    (:r 32.0 32.0)
    (:g 32.0 32.0)
    (:b 64.0 32.0)
    (:a 64.0 64.0)
    (:omega (degrees 0.0225))
    (:vel-y (meters 0.016666668) (meters 0.05))
    (:scalevel-x (meters -0.00016666666))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.21333334 -0.21333334)
    (:accel-y (meters -0.001) (meters -0.00016666666))
    (:friction 0.97)
    (:timer (seconds 0.5))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-12))
    (:func 'sparticle-motion-blur)
    (:next-time (seconds 0) (seconds 0.747))
    (:next-launcher 1320)
    (:conerot-x (degrees 20) (degrees 60))
    (:conerot-y (degrees 25.000002) (degrees 130))
    )
  )

(defpart 1364
  :init-specs ((:texture (new 'static 'texture-id :index #x21 :page #xc))
    (:num 1.0)
    (:x (meters 4.4))
    (:y (meters 5.5))
    (:z (meters 0.1))
    (:scale-x (meters 0.1) (meters 0.1))
    (:rot-x 4)
    (:scale-y :copy scale-x)
    (:r 32.0 32.0)
    (:g 32.0 32.0)
    (:b 64.0 32.0)
    (:a 128.0)
    (:omega (degrees 0.0225))
    (:vel-y (meters 0.06666667) (meters 0.013333334))
    (:accel-y (meters -0.0011666666) (meters 0.00026666667))
    (:friction 0.98)
    (:timer (seconds 0.367))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-12))
    (:func 'sparticle-motion-blur)
    (:next-time (seconds 0) (seconds 0.747))
    (:next-launcher 1320)
    (:conerot-x (degrees 130))
    (:conerot-y (degrees 90))
    )
  )

(defpart 1365
  :init-specs ((:texture (new 'static 'texture-id :index #x21 :page #xc))
    (:num 0.0 1.0)
    (:x (meters 4.9))
    (:y (meters 5))
    (:z (meters 0.1))
    (:scale-x (meters 0.1) (meters 0.1))
    (:rot-x 4)
    (:scale-y :copy scale-x)
    (:r 32.0 32.0)
    (:g 32.0 32.0)
    (:b 64.0 32.0)
    (:a 64.0 32.0)
    (:omega (degrees 0.0225))
    (:vel-y (meters 0.06666667) (meters 0.013333334))
    (:fade-a -0.48 -0.48)
    (:accel-y (meters -0.0011666666) (meters 0.00026666667))
    (:friction 0.98)
    (:timer (seconds 0.667))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-12))
    (:func 'sparticle-motion-blur)
    (:next-time (seconds 0) (seconds 0.747))
    (:next-launcher 1320)
    (:launchrot-x (degrees -30) (degrees 60))
    (:launchrot-z (degrees -30) (degrees 60))
    (:conerot-x (degrees 130))
    (:conerot-y (degrees 90))
    )
  )

(defpart 1366
  :init-specs ((:texture (new 'static 'texture-id :index #x21 :page #xc))
    (:num 1.0)
    (:x (meters 9.4))
    (:y (meters 0))
    (:z (meters 0.1))
    (:scale-x (meters 0.075) (meters 0.05))
    (:rot-x 4)
    (:scale-y :copy scale-x)
    (:r 32.0 32.0)
    (:g 32.0 32.0)
    (:b 64.0 32.0)
    (:a 64.0 64.0)
    (:omega (degrees 0.0225))
    (:vel-y (meters 0.016666668) (meters 0.033333335))
    (:fade-a -0.21333334 -0.21333334)
    (:accel-y (meters -0.001) (meters -0.00016666666))
    (:friction 0.97)
    (:timer (seconds 0.5))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-12))
    (:func 'sparticle-motion-blur)
    (:next-time (seconds 0) (seconds 0.747))
    (:next-launcher 1320)
    (:conerot-x (degrees 0) (degrees 60))
    (:conerot-y (degrees 0) (degrees 360))
    )
  )

(defpart 1367
  :init-specs ((:texture (new 'static 'texture-id :index #x21 :page #xc))
    (:num 4.0)
    (:x (meters 9.3) (meters 0.1))
    (:y (meters 0))
    (:z (meters 0.1))
    (:scale-x (meters 0.1) (meters 0.05))
    (:rot-x 4)
    (:scale-y :copy scale-x)
    (:r 32.0 32.0)
    (:g 32.0 32.0)
    (:b 64.0 32.0)
    (:a 64.0 64.0)
    (:omega (degrees 0.0225))
    (:vel-y (meters 0.016666668) (meters 0.05))
    (:scalevel-x (meters -0.00016666666))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.21333334 -0.21333334)
    (:accel-y (meters -0.001) (meters -0.00016666666))
    (:friction 0.97)
    (:timer (seconds 0.5))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-12))
    (:func 'sparticle-motion-blur)
    (:next-time (seconds 0) (seconds 0.747))
    (:next-launcher 1320)
    (:conerot-x (degrees 40) (degrees 40))
    (:conerot-y (degrees 45) (degrees 90))
    )
  )

(defpart 1363
  :init-specs ((:texture (new 'static 'texture-id :page #xc))
    (:num 0.0 2.0)
    (:x (meters 5.75))
    (:y (meters 5.5))
    (:z (meters 4.1))
    (:scale-x (meters 0.5) (meters 0.25))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 64.0)
    (:g 64.0)
    (:b 64.0)
    (:a 32.0 96.0)
    (:vel-y (meters 0.02) (meters 0.0033333334))
    (:scalevel-x (meters 0.013333334) (meters 0.006666667))
    (:rotvel-z (degrees -1.2) (degrees 2.4))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.85333335 -0.85333335)
    (:timer (seconds 0.5))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-12))
    (:conerot-x (degrees 20))
    (:conerot-y (degrees 90))
    )
  )

(defpart 1362
  :init-specs ((:texture (new 'static 'texture-id :page #xc))
    (:num 2.0 0.6)
    (:x (meters 5.75))
    (:y (meters 5.5))
    (:z (meters 4.1))
    (:scale-x (meters 0.5) (meters 0.25))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 64.0)
    (:g 64.0)
    (:b 64.0)
    (:a 16.0 32.0)
    (:vel-y (meters 0.053333335) (meters 0.013333334))
    (:scalevel-x (meters 0.013333334) (meters 0.006666667))
    (:rotvel-z (degrees -1.2) (degrees 2.4))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.16 -0.85333335)
    (:accel-y (meters 0.001) (meters 0.000033333334))
    (:friction 0.92)
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-12))
    (:conerot-x (degrees 20))
    (:conerot-y (degrees 90))
    )
  )

(defpart 1361
  :init-specs ((:texture (new 'static 'texture-id :page #xc))
    (:num 0.0 2.0)
    (:x (meters 6))
    (:y (meters 6.5))
    (:z (meters -6.1))
    (:scale-x (meters 0.5) (meters 0.25))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 64.0)
    (:g 64.0)
    (:b 64.0)
    (:a 32.0 96.0)
    (:vel-y (meters 0.02) (meters 0.0033333334))
    (:scalevel-x (meters 0.013333334) (meters 0.006666667))
    (:rotvel-z (degrees -1.2) (degrees 2.4))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.85333335 -0.85333335)
    (:timer (seconds 0.5))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-12))
    (:conerot-x (degrees 65))
    (:conerot-y (degrees 90))
    )
  )

(defpart 1360
  :init-specs ((:texture (new 'static 'texture-id :page #xc))
    (:num 2.0 0.6)
    (:x (meters 6))
    (:y (meters 6.5))
    (:z (meters -6.1))
    (:scale-x (meters 0.5) (meters 0.25))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 64.0)
    (:g 64.0)
    (:b 64.0)
    (:a 16.0 32.0)
    (:vel-y (meters 0.053333335) (meters 0.013333334))
    (:scalevel-x (meters 0.013333334) (meters 0.006666667))
    (:rotvel-z (degrees -1.2) (degrees 2.4))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.16 -0.85333335)
    (:accel-y (meters 0.001) (meters 0.000033333334))
    (:friction 0.92)
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-12))
    (:conerot-x (degrees 65))
    (:conerot-y (degrees 90))
    )
  )

(defpart 1359
  :init-specs ((:texture (new 'static 'texture-id :page #xc))
    (:num 0.0 2.0)
    (:x (meters 6))
    (:y (meters 6.25))
    (:z (meters -5))
    (:scale-x (meters 0.5) (meters 0.25))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 64.0)
    (:g 64.0)
    (:b 64.0)
    (:a 32.0 96.0)
    (:vel-y (meters 0.02) (meters 0.0033333334))
    (:scalevel-x (meters 0.013333334) (meters 0.006666667))
    (:rotvel-z (degrees -1.2) (degrees 2.4))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.85333335 -0.85333335)
    (:timer (seconds 0.5))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-12))
    (:conerot-x (degrees 135))
    (:conerot-y (degrees 90))
    )
  )

(defpart 1358
  :init-specs ((:texture (new 'static 'texture-id :page #xc))
    (:num 2.0 0.6)
    (:x (meters 6))
    (:y (meters 6.25))
    (:z (meters -5))
    (:scale-x (meters 0.5) (meters 0.25))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 64.0)
    (:g 64.0)
    (:b 64.0)
    (:a 16.0 32.0)
    (:vel-y (meters 0.053333335) (meters 0.013333334))
    (:scalevel-x (meters 0.013333334) (meters 0.006666667))
    (:rotvel-z (degrees -1.2) (degrees 2.4))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.16 -0.85333335)
    (:accel-y (meters 0.001) (meters 0.000033333334))
    (:friction 0.92)
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-12))
    (:conerot-x (degrees 135))
    (:conerot-y (degrees 90))
    )
  )

(defpart 1357
  :init-specs ((:texture (new 'static 'texture-id :page #xc))
    (:num 0.0 2.0)
    (:x (meters 3.75))
    (:y (meters 12.25))
    (:z (meters 5))
    (:scale-x (meters 0.5) (meters 0.25))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 64.0)
    (:g 64.0)
    (:b 64.0)
    (:a 32.0 96.0)
    (:vel-y (meters 0.02) (meters 0.0033333334))
    (:scalevel-x (meters 0.013333334) (meters 0.006666667))
    (:rotvel-z (degrees -1.2) (degrees 2.4))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.85333335 -0.85333335)
    (:timer (seconds 0.5))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-12))
    (:conerot-x (degrees -45))
    (:conerot-y (degrees 90))
    )
  )

(defpart 1356
  :init-specs ((:texture (new 'static 'texture-id :page #xc))
    (:num 2.0 0.6)
    (:x (meters 3.75))
    (:y (meters 12.25))
    (:z (meters 5))
    (:scale-x (meters 0.5) (meters 0.25))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 64.0)
    (:g 64.0)
    (:b 64.0)
    (:a 16.0 32.0)
    (:vel-y (meters 0.053333335) (meters 0.013333334))
    (:scalevel-x (meters 0.013333334) (meters 0.006666667))
    (:rotvel-z (degrees -1.2) (degrees 2.4))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.16 -0.85333335)
    (:accel-y (meters 0.001) (meters 0.000033333334))
    (:friction 0.92)
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-12))
    (:conerot-x (degrees -45))
    (:conerot-y (degrees 90))
    )
  )

(defpart 1355
  :init-specs ((:texture (new 'static 'texture-id :page #xc))
    (:num 0.0 2.0)
    (:x (meters 4))
    (:y (meters 11.1))
    (:z (meters 0))
    (:scale-x (meters 0.5) (meters 0.25))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 64.0)
    (:g 64.0)
    (:b 64.0)
    (:a 32.0 96.0)
    (:vel-y (meters 0.02) (meters 0.0033333334))
    (:scalevel-x (meters 0.013333334) (meters 0.006666667))
    (:rotvel-z (degrees -1.2) (degrees 2.4))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.85333335 -0.85333335)
    (:timer (seconds 0.5))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-12))
    (:conerot-x (degrees 30))
    (:conerot-y (degrees 90))
    )
  )

(defpart 1354
  :init-specs ((:texture (new 'static 'texture-id :page #xc))
    (:num 2.0 0.6)
    (:x (meters 4))
    (:y (meters 11.1))
    (:z (meters 0))
    (:scale-x (meters 0.5) (meters 0.25))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 64.0)
    (:g 64.0)
    (:b 64.0)
    (:a 16.0 32.0)
    (:vel-y (meters 0.053333335) (meters 0.013333334))
    (:scalevel-x (meters 0.013333334) (meters 0.006666667))
    (:rotvel-z (degrees -1.2) (degrees 2.4))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.16 -0.85333335)
    (:accel-y (meters 0.001) (meters 0.000033333334))
    (:friction 0.92)
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-12))
    (:conerot-x (degrees 30))
    (:conerot-y (degrees 90))
    )
  )

(defpartgroup group-atoll-tank-aftermath
  :id 322
  :bounds (static-bspherem 0 0 0 24)
  :parts ((sp-item 1376 :fade-after (meters 100) :falloff-to (meters 100))
    (sp-item 1377 :fade-after (meters 100) :falloff-to (meters 100))
    (sp-item 1378 :fade-after (meters 100) :falloff-to (meters 100))
    (sp-item 1379 :fade-after (meters 100) :falloff-to (meters 100))
    (sp-item 1380 :fade-after (meters 100) :falloff-to (meters 100))
    (sp-item 1381 :fade-after (meters 100) :falloff-to (meters 100))
    (sp-item 1382 :fade-after (meters 100) :falloff-to (meters 100))
    (sp-item 1383 :fade-after (meters 100) :falloff-to (meters 100))
    )
  )

(defpart 1382
  :init-specs ((:texture (new 'static 'texture-id :index #x21 :page #xc))
    (:num 1.0 3.0)
    (:x (meters -0.5))
    (:y (meters 0))
    (:z (meters -12))
    (:scale-x (meters 0.1) (meters 0.1))
    (:rot-x 4)
    (:scale-y :copy scale-x)
    (:r 32.0 32.0)
    (:g 32.0 32.0)
    (:b 64.0 32.0)
    (:a 128.0)
    (:omega (degrees 0.03375))
    (:vel-y (meters 0.13333334) (meters 0.013333334))
    (:fade-a -0.21333334 -0.21333334)
    (:accel-y (meters -0.0033333334) (meters 0.00033333333))
    (:friction 0.99)
    (:timer (seconds 2))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-12))
    (:func 'sparticle-motion-blur)
    (:launchrot-x (degrees -5) (degrees 10))
    (:launchrot-z (degrees -5) (degrees 10))
    (:conerot-x (degrees -20))
    (:conerot-y (degrees 60))
    )
  )

(defpart 1383
  :init-specs ((:texture (new 'static 'texture-id :index #x21 :page #xc))
    (:num 0.0 1.0)
    (:x (meters -0.5))
    (:y (meters 0))
    (:z (meters -12))
    (:scale-x (meters 0.1) (meters 0.1))
    (:rot-x 4)
    (:scale-y :copy scale-x)
    (:r 32.0 32.0)
    (:g 32.0 32.0)
    (:b 64.0 32.0)
    (:a 128.0)
    (:omega (degrees 0.03375))
    (:vel-y (meters 0.1) (meters 0.013333334))
    (:fade-a -0.28444445 -0.28444445)
    (:accel-y (meters -0.0033333334) (meters 0.00033333333))
    (:friction 0.99)
    (:timer (seconds 1.5))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-12))
    (:func 'sparticle-motion-blur)
    (:launchrot-x (degrees -30) (degrees 60))
    (:launchrot-z (degrees -30) (degrees 60))
    (:conerot-x (degrees -20))
    (:conerot-y (degrees 60))
    )
  )

(defpart 1381
  :init-specs ((:texture (new 'static 'texture-id :page #xc))
    (:num 0.4)
    (:x (meters 18) (meters -1))
    (:y (meters 0))
    (:z (meters -4) (meters -1))
    (:scale-x (meters 1) (meters 0.5))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 192.0)
    (:g 128.0)
    (:b 128.0)
    (:a 32.0 32.0)
    (:vel-y (meters 0.01) (meters 0.01))
    (:scalevel-x (meters 0.006666667))
    (:rotvel-z (degrees -0.2) (degrees 0.4))
    (:scalevel-y :copy scalevel-x)
    (:fade-r -0.64)
    (:fade-g -0.32)
    (:fade-b -0.32)
    (:fade-a -0.10666667 -0.10666667)
    (:accel-y (meters -0.000006666667))
    (:friction 0.99)
    (:timer (seconds 2))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-12 sp-cpuinfo-flag-14))
    (:next-time (seconds 0.5) (seconds 0.165))
    (:next-launcher 1384)
    )
  )

(defpart 1380
  :init-specs ((:texture (new 'static 'texture-id :page #xc))
    (:num 0.4)
    (:x (meters 16.5) (meters -1))
    (:y (meters 2.5))
    (:z (meters -9) (meters -1))
    (:scale-x (meters 1) (meters 0.5))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 192.0)
    (:g 128.0)
    (:b 128.0)
    (:a 32.0 32.0)
    (:vel-y (meters 0.006666667) (meters 0.006666667))
    (:scalevel-x (meters 0.006666667))
    (:rotvel-z (degrees -0.2) (degrees 0.4))
    (:scalevel-y :copy scalevel-x)
    (:fade-r -0.64)
    (:fade-g -0.32)
    (:fade-b -0.32)
    (:fade-a -0.16 -0.16)
    (:accel-y (meters -0.000006666667))
    (:friction 0.99)
    (:timer (seconds 1.335))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-12 sp-cpuinfo-flag-14))
    (:next-time (seconds 0.5) (seconds 0.165))
    (:next-launcher 1384)
    )
  )

(defpart 1379
  :init-specs ((:texture (new 'static 'texture-id :page #xc))
    (:num 0.4)
    (:x (meters 12) (meters -1))
    (:y (meters 2))
    (:z (meters -8) (meters -1))
    (:scale-x (meters 1) (meters 0.5))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 192.0)
    (:g 128.0)
    (:b 128.0)
    (:a 32.0 32.0)
    (:vel-y (meters 0.01) (meters 0.01))
    (:scalevel-x (meters 0.006666667))
    (:rotvel-z (degrees -0.2) (degrees 0.4))
    (:scalevel-y :copy scalevel-x)
    (:fade-r -0.64)
    (:fade-g -0.32)
    (:fade-b -0.32)
    (:fade-a -0.10666667 -0.10666667)
    (:accel-y (meters -0.000006666667))
    (:friction 0.99)
    (:timer (seconds 2))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-12 sp-cpuinfo-flag-14))
    (:next-time (seconds 0.5) (seconds 0.165))
    (:next-launcher 1384)
    )
  )

(defpart 1378
  :init-specs ((:texture (new 'static 'texture-id :page #xc))
    (:num 0.4)
    (:x (meters -1) (meters -1))
    (:y (meters 0))
    (:z (meters 4) (meters -1))
    (:scale-x (meters 1) (meters 0.5))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 192.0)
    (:g 128.0)
    (:b 128.0)
    (:a 32.0 32.0)
    (:vel-y (meters 0.006666667) (meters 0.006666667))
    (:scalevel-x (meters 0.006666667))
    (:rotvel-z (degrees -0.2) (degrees 0.4))
    (:scalevel-y :copy scalevel-x)
    (:fade-r -0.64)
    (:fade-g -0.32)
    (:fade-b -0.32)
    (:fade-a -0.16 -0.16)
    (:accel-y (meters -0.000006666667))
    (:friction 0.99)
    (:timer (seconds 1.335))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-12 sp-cpuinfo-flag-14))
    (:next-time (seconds 0.5) (seconds 0.165))
    (:next-launcher 1384)
    )
  )

(defpart 1377
  :init-specs ((:texture (new 'static 'texture-id :page #xc))
    (:num 0.4)
    (:x (meters 1) (meters -2))
    (:y (meters 2))
    (:z (meters -9) (meters -2))
    (:scale-x (meters 3) (meters 1.5))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 192.0)
    (:g 128.0)
    (:b 128.0)
    (:a 32.0 32.0)
    (:vel-y (meters 0.01) (meters 0.01))
    (:scalevel-x (meters 0.006666667))
    (:rotvel-z (degrees -0.2) (degrees 0.4))
    (:scalevel-y :copy scalevel-x)
    (:fade-r -0.64)
    (:fade-g -0.32)
    (:fade-b -0.32)
    (:fade-a -0.16 -0.16)
    (:accel-y (meters -0.000006666667))
    (:friction 0.99)
    (:timer (seconds 1.335))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-12 sp-cpuinfo-flag-14))
    (:next-time (seconds 0.5) (seconds 0.165))
    (:next-launcher 1384)
    )
  )

(defpart 1376
  :init-specs ((:texture (new 'static 'texture-id :page #xc))
    (:num 0.4)
    (:x (meters 0) (meters -1))
    (:y (meters 0))
    (:z (meters -1) (meters -1))
    (:scale-x (meters 1) (meters 0.5))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 192.0)
    (:g 128.0)
    (:b 128.0)
    (:a 32.0 32.0)
    (:vel-y (meters 0.01) (meters 0.01))
    (:scalevel-x (meters 0.006666667))
    (:rotvel-z (degrees -0.2) (degrees 0.4))
    (:scalevel-y :copy scalevel-x)
    (:fade-r -0.64)
    (:fade-g -0.32)
    (:fade-b -0.32)
    (:fade-a -0.10666667 -0.10666667)
    (:accel-y (meters -0.000006666667))
    (:friction 0.99)
    (:timer (seconds 2))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-12 sp-cpuinfo-flag-14))
    (:next-time (seconds 0.5) (seconds 0.165))
    (:next-launcher 1384)
    )
  )

(defpart 1384
  :init-specs ((:fade-r 0.0) (:fade-g 0.0) (:fade-b 0.0))
  )

(defpartgroup group-atoll-tank-explosion
  :id 323
  :duration (seconds 0.5)
  :flags (use-local-clock)
  :bounds (static-bspherem 0 0 0 32)
  :parts ((sp-item 1385 :fade-after (meters 200) :falloff-to (meters 200) :period (seconds 3) :length (seconds 0.085))
    (sp-item 1386 :period (seconds 3) :length (seconds 0.035) :offset 10)
    (sp-item 1387 :fade-after (meters 120) :falloff-to (meters 120) :period (seconds 3) :length (seconds 0.335) :offset 25)
    (sp-item 1388 :period (seconds 3) :length (seconds 0.535))
    (sp-item 1388 :period (seconds 3) :length (seconds 0.335))
    (sp-item 1388 :period (seconds 3) :length (seconds 0.167))
    (sp-item 1388 :period (seconds 3) :length (seconds 0.135))
    (sp-item 1388 :period (seconds 3) :length (seconds 0.1))
    (sp-item 1388 :period (seconds 3) :length (seconds 0.067))
    (sp-item 1389 :period (seconds 3) :length (seconds 0.167) :offset 15)
    (sp-item 1390 :period (seconds 3) :length (seconds 0.017))
    (sp-item 1391 :period (seconds 3) :length (seconds 0.167) :offset 15)
    )
  )

(defpart 1388
  :init-specs ((:texture (new 'static 'texture-id :index #x21 :page #xc))
    (:num 16.0)
    (:x (meters -2) (meters 4))
    (:y (meters -4.5) (meters 5))
    (:z (meters -2) (meters 4))
    (:scale-x (meters 2.5))
    (:rot-x 4)
    (:scale-y (meters 0.1) (meters 0.2))
    (:r 32.0 32.0)
    (:g 32.0 32.0)
    (:b 64.0 32.0)
    (:a 64.0 64.0)
    (:omega (degrees 0.03375))
    (:vel-y (meters 0.13333334) (meters 0.06666667))
    (:accel-y (meters -0.0033333334) (meters -0.00033333333))
    (:friction 0.99)
    (:timer (seconds 2))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-12))
    (:func 'sparticle-motion-blur)
    (:conerot-x (degrees 20) (degrees 70))
    (:conerot-y (degrees 45) (degrees 90))
    (:conerot-radius (meters 0) (meters 10))
    )
  )

(defpart 1391
  :init-specs ((:texture (new 'static 'texture-id :index #x34 :page #xc))
    (:num 5.0 5.0)
    (:y (meters -2.5))
    (:scale-x (meters 3) (meters 2))
    (:rot-x 4)
    (:rot-z (degrees 0) (degrees 360) :store)
    (:scale-y (meters 8) (meters 4))
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 0.0 32.0)
    (:vel-y (meters 0) (meters 0.1))
    (:scalevel-x (meters 0.033333335) (meters 0.13333334))
    (:scalevel-y :copy scalevel-x)
    (:fade-r 0.0)
    (:fade-g -0.36)
    (:fade-b -4.24)
    (:fade-a -0.22068965)
    (:friction 0.89 0.02)
    (:timer (seconds 3.335))
    (:flags (sp-cpuinfo-flag-2))
    (:func 'sparticle-motion-blur)
    (:next-time (seconds 0.1) (seconds 0.03))
    (:next-launcher 1392)
    (:conerot-x '*sp-temp*)
    (:conerot-radius (meters 0) (meters 2))
    )
  )

(defpart 1389
  :init-specs ((:texture (new 'static 'texture-id :index #x33 :page #xc))
    (:num 7.0 10.0)
    (:y (meters -2.5))
    (:scale-x (meters 3) (meters 2))
    (:rot-z (degrees 0))
    (:scale-y (meters 6.8) (meters 1.2))
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 0.0)
    (:vel-y (meters 0) (meters 0.13333334))
    (:scalevel-x (meters 0.06666667) (meters 0.13333334))
    (:rotvel-z (degrees -0.12) (degrees 0.24))
    (:scalevel-y :copy scalevel-x)
    (:fade-r 0.0)
    (:fade-g -0.36)
    (:fade-b -4.24)
    (:fade-a -0.22068965)
    (:friction 0.94)
    (:timer (seconds 3.335))
    (:flags (sp-cpuinfo-flag-2))
    (:next-time (seconds 0.1) (seconds 0.03))
    (:next-launcher 1392)
    (:conerot-x (degrees 0) (degrees 360))
    (:conerot-radius (meters 0) (meters 8))
    )
  )

(defpart 1392
  :init-specs ((:fade-r 0.0) (:fade-g 0.0) (:fade-b 0.0) (:next-time (seconds 0.017) (seconds 0.065)) (:next-launcher 1393))
  )

(defpart 1393
  :init-specs ((:scalevel-x (meters 0.016666668) (meters 0.016666668))
    (:scalevel-y :copy scalevel-x)
    (:fade-r -0.44)
    (:fade-g -2.36)
    (:fade-b -2.64)
    (:next-time (seconds 0.117) (seconds 0.047))
    (:next-launcher 1394)
    )
  )

(defpart 1394
  :init-specs ((:scalevel-x (meters 0.008333334) (meters 0.008333334))
    (:scalevel-y :copy scalevel-x)
    (:fade-r -1.2944444)
    (:fade-g -0.7111111)
    (:fade-b -0.094444446)
    (:fade-a -0.06545454 -0.06545454)
    (:next-time (seconds 0.5) (seconds 0.097))
    (:next-launcher 1395)
    )
  )

(defpart 1395
  :init-specs ((:fade-r 0.0) (:fade-g 0.0) (:fade-b 0.0))
  )

(defpart 1390
  :init-specs ((:texture (new 'static 'texture-id :index #xbb :page #xc))
    (:num 1.0)
    (:y (meters -2.5))
    (:scale-x (meters 32))
    (:rot-x (degrees 22.5))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 96.0)
    (:scalevel-x (meters 0.5))
    (:rotvel-z (degrees 0.3))
    (:scalevel-y :copy scalevel-x)
    (:fade-r 0.0)
    (:fade-g -1.28)
    (:fade-b -5.1)
    (:fade-a 0.0)
    (:timer (seconds 0.217))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:next-time (seconds 0.1))
    (:next-launcher 1396)
    )
  )

(defpart 1396
  :init-specs ((:scalevel-x (meters -0.2857143))
    (:scalevel-y :copy scalevel-x)
    (:fade-r 0.0)
    (:fade-g -2.56)
    (:fade-b 0.0)
    (:fade-a -1.92)
    )
  )

(defpart 1387
  :init-specs ((:texture (new 'static 'texture-id :index #x32 :page #xc))
    (:num 6.0 8.0)
    (:x (meters 0.25))
    (:y (meters -2.5))
    (:scale-x (meters 3) (meters 5))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 16.0 48.0)
    (:vel-y (meters 0.13333334) (meters 0.26666668))
    (:scalevel-x (meters 0.008333334) (meters 0.0033333334))
    (:rotvel-z (degrees -0.12) (degrees 0.24))
    (:scalevel-y :copy scalevel-x)
    (:fade-r 0.0)
    (:fade-g -0.18)
    (:fade-b -2.12)
    (:accel-y (meters -0.00033333333) (meters -0.001))
    (:friction 0.88 0.02)
    (:timer (seconds 10))
    (:flags (sp-cpuinfo-flag-2))
    (:next-time (seconds 0.117) (seconds 0.047))
    (:next-launcher 1397)
    (:conerot-x (degrees 0) (degrees 360))
    (:conerot-radius (meters 3) (meters 5))
    )
  )

(defpart 1397
  :init-specs ((:scalevel-x (meters 0.0016666667))
    (:scalevel-y :copy scalevel-x)
    (:fade-r 0.0)
    (:fade-g 0.02)
    (:fade-b 0.23555556)
    (:next-time (seconds 0.15) (seconds 0.047))
    (:next-launcher 1398)
    )
  )

(defpart 1398
  :init-specs ((:fade-r -0.5543478) (:fade-g -0.5543478) (:fade-a -0.13913043))
  )

(defpart 1385
  :init-specs ((:texture (new 'static 'texture-id :page #xc))
    (:num 4.0 8.0)
    (:x (meters 0) (meters 0.6))
    (:y (meters -2.5))
    (:scale-x (meters 8.5) (meters 8))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 70.0 20.0)
    (:g 70.0 20.0)
    (:b 70.0 20.0)
    (:a 0.0 40.0)
    (:vel-y (meters 0) (meters 0.2))
    (:scalevel-x (meters 0.033333335) (meters 0.086666666))
    (:rotvel-z (degrees -0.12) (degrees 0.24))
    (:scalevel-y :copy scalevel-x)
    (:fade-r 3.3)
    (:fade-g 3.12)
    (:fade-b 1.18)
    (:fade-a 1.76)
    (:friction 0.89)
    (:timer (seconds 2.367))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:next-time (seconds 0.117) (seconds 0.047))
    (:next-launcher 1399)
    (:conerot-x (degrees -1440) (degrees 2880))
    )
  )

(defpart 1399
  :init-specs ((:scalevel-x (meters 0.0033333334))
    (:scalevel-y :copy scalevel-x)
    (:fade-r -0.53333336)
    (:fade-g -1.9666667)
    (:fade-b -2.2)
    (:fade-a -0.41666666)
    (:next-time (seconds 0.15) (seconds 0.047))
    (:next-launcher 1400)
    )
  )

(defpart 1400
  :init-specs ((:scalevel-x (meters 0))
    (:scalevel-y :copy scalevel-x)
    (:fade-r -0.38833332)
    (:fade-g -0.21333334)
    (:fade-b -0.028333334)
    (:fade-a -0.38833332)
    )
  )

(defpart 1386
  :init-specs ((:texture (new 'static 'texture-id :index #x31 :page #xc))
    (:num 9.0)
    (:y (meters -2.5))
    (:scale-x (meters 2) (meters 6))
    (:rot-x 4)
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y (meters 0.5) (meters 0.5))
    (:r 128.0 128.0)
    (:g 96.0)
    (:b 64.0)
    (:a 64.0 64.0)
    (:scalevel-x (meters 0.1) (meters 0.2))
    (:fade-g 0.4)
    (:fade-b 0.8)
    (:fade-a -0.512)
    (:timer (seconds 0.835))
    (:flags (sp-cpuinfo-flag-2))
    (:next-time (seconds 0.6))
    (:next-launcher 1401)
    )
  )

(defpart 1401
  :init-specs ((:fade-r 0.0) (:fade-g 0.0) (:fade-b 0.0))
  )

(defpartgroup group-atoll-tank-splash
  :id 324
  :flags (screen-space)
  :bounds (static-bspherem 0 0 0 16)
  :parts ((sp-item 1406 :binding 1402)
    (sp-item 1402 :flags (start-dead launch-asap) :binding 1403)
    (sp-item 1402 :flags (start-dead launch-asap) :binding 1403)
    (sp-item 1402 :flags (start-dead launch-asap) :binding 1403)
    (sp-item 1402 :flags (start-dead launch-asap) :binding 1403)
    (sp-item 1402 :flags (start-dead launch-asap) :binding 1403)
    (sp-item 1402 :flags (start-dead launch-asap) :binding 1403)
    (sp-item 1402 :flags (start-dead launch-asap) :binding 1403)
    (sp-item 1402 :flags (start-dead launch-asap) :binding 1403)
    (sp-item 1402 :flags (start-dead launch-asap) :binding 1403)
    (sp-item 1402 :flags (start-dead launch-asap) :binding 1403)
    (sp-item 1402 :flags (start-dead launch-asap) :binding 1403)
    (sp-item 1402 :flags (start-dead launch-asap) :binding 1403)
    (sp-item 1402 :flags (start-dead launch-asap) :binding 1403)
    (sp-item 1402 :flags (start-dead launch-asap) :binding 1403)
    (sp-item 1402 :flags (start-dead launch-asap) :binding 1403)
    (sp-item 1402 :flags (start-dead launch-asap) :binding 1403)
    (sp-item 1403 :flags (start-dead launch-asap))
    (sp-item 1403 :flags (start-dead launch-asap))
    (sp-item 1403 :flags (start-dead launch-asap))
    (sp-item 1403 :flags (start-dead launch-asap))
    (sp-item 1403 :flags (start-dead launch-asap))
    (sp-item 1403 :flags (start-dead launch-asap))
    (sp-item 1403 :flags (start-dead launch-asap))
    (sp-item 1403 :flags (start-dead launch-asap))
    (sp-item 1403 :flags (start-dead launch-asap))
    (sp-item 1403 :flags (start-dead launch-asap))
    (sp-item 1403 :flags (start-dead launch-asap))
    (sp-item 1403 :flags (start-dead launch-asap))
    (sp-item 1403 :flags (start-dead launch-asap))
    (sp-item 1403 :flags (start-dead launch-asap))
    (sp-item 1403 :flags (start-dead launch-asap))
    (sp-item 1403 :flags (start-dead launch-asap))
    (sp-item 1407 :binding 1404)
    (sp-item 1404 :flags (start-dead launch-asap) :binding 1405)
    (sp-item 1404 :flags (start-dead launch-asap) :binding 1405)
    (sp-item 1404 :flags (start-dead launch-asap) :binding 1405)
    (sp-item 1404 :flags (start-dead launch-asap) :binding 1405)
    (sp-item 1404 :flags (start-dead launch-asap) :binding 1405)
    (sp-item 1404 :flags (start-dead launch-asap) :binding 1405)
    (sp-item 1404 :flags (start-dead launch-asap) :binding 1405)
    (sp-item 1404 :flags (start-dead launch-asap) :binding 1405)
    (sp-item 1404 :flags (start-dead launch-asap) :binding 1405)
    (sp-item 1404 :flags (start-dead launch-asap) :binding 1405)
    (sp-item 1404 :flags (start-dead launch-asap) :binding 1405)
    (sp-item 1404 :flags (start-dead launch-asap) :binding 1405)
    (sp-item 1404 :flags (start-dead launch-asap) :binding 1405)
    (sp-item 1404 :flags (start-dead launch-asap) :binding 1405)
    (sp-item 1404 :flags (start-dead launch-asap) :binding 1405)
    (sp-item 1404 :flags (start-dead launch-asap) :binding 1405)
    (sp-item 1405 :flags (start-dead launch-asap))
    (sp-item 1405 :flags (start-dead launch-asap))
    (sp-item 1405 :flags (start-dead launch-asap))
    (sp-item 1405 :flags (start-dead launch-asap))
    (sp-item 1405 :flags (start-dead launch-asap))
    (sp-item 1405 :flags (start-dead launch-asap))
    (sp-item 1405 :flags (start-dead launch-asap))
    (sp-item 1405 :flags (start-dead launch-asap))
    (sp-item 1405 :flags (start-dead launch-asap))
    (sp-item 1405 :flags (start-dead launch-asap))
    (sp-item 1405 :flags (start-dead launch-asap))
    (sp-item 1405 :flags (start-dead launch-asap))
    (sp-item 1405 :flags (start-dead launch-asap))
    (sp-item 1405 :flags (start-dead launch-asap))
    (sp-item 1405 :flags (start-dead launch-asap))
    (sp-item 1405 :flags (start-dead launch-asap))
    )
  )

(defpart 1407
  :init-specs ((:texture (new 'static 'texture-id :index #x29 :page #xc))
    (:num 1.0)
    (:x (meters -4.5) (meters 9))
    (:y (meters -3) (meters 6))
    (:scale-x (meters 2.5))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 128.0)
    (:b 128.0)
    (:a 24.0)
    (:scalevel-x (meters 0.16666667))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -1.6)
    (:timer (seconds 0.035))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-14))
    )
  )

(defpart 1404
  :init-specs ((:texture (new 'static 'texture-id :index #x21 :page #xc))
    (:num 1.0)
    (:scale-x (meters 1.5))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 128.0)
    (:b 255.0)
    (:a 20.0)
    (:scalevel-x (meters 0.033333335))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.8)
    (:accel-y (meters -0.00066666666))
    (:timer (seconds 0.9))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-14))
    (:next-time (seconds 0.05))
    (:next-launcher 1408)
    )
  )

(defpart 1408
  :init-specs ((:scalevel-x (meters 0.004166667)) (:scalevel-y :copy scalevel-x) (:fade-a -0.06666667))
  )

(defpart 1405
  :init-specs ((:num 1.0)
    (:rot-x 12)
    (:r 4096.0)
    (:g 3276.8)
    (:b 3276.8)
    (:fade-r 6.068148)
    (:fade-g 68.26667)
    (:fade-b 3.034074)
    (:accel-y (meters -0.00066666666))
    (:timer (seconds 0.9))
    (:flags (distort))
    (:next-time (seconds 0.1))
    (:next-launcher 1409)
    )
  )

(defpart 1409
  :init-specs ((:fade-g -5.1200004))
  )

(defpart 1406
  :init-specs ((:texture (new 'static 'texture-id :index #x29 :page #xc))
    (:num 1.0)
    (:x (meters -4.5) (meters 9))
    (:y (meters -3) (meters 6))
    (:scale-x (meters 4))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 128.0)
    (:b 128.0)
    (:a 24.0)
    (:scalevel-x (meters 0.26666668))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -1.6)
    (:timer (seconds 0.035))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-14))
    )
  )

(defpart 1402
  :init-specs ((:texture (new 'static 'texture-id :index #x21 :page #xc))
    (:num 1.0)
    (:scale-x (meters 2.6))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 128.0)
    (:b 255.0)
    (:a 20.0)
    (:scalevel-x (meters 0.06666667))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.8)
    (:accel-y (meters -0.00066666666))
    (:timer (seconds 0.9))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-14))
    (:next-time (seconds 0.05))
    (:next-launcher 1410)
    )
  )

(defpart 1410
  :init-specs ((:scalevel-x (meters 0.008333334)) (:scalevel-y :copy scalevel-x) (:fade-a -0.06666667))
  )

(defpart 1403
  :init-specs ((:num 1.0)
    (:rot-x 24)
    (:r 12288.0)
    (:g 6553.6)
    (:b 6553.6)
    (:fade-r 12.136296)
    (:fade-g 136.53334)
    (:fade-b 6.068148)
    (:accel-y (meters -0.00066666666))
    (:timer (seconds 0.9))
    (:flags (distort))
    (:next-time (seconds 0.1))
    (:next-launcher 1411)
    )
  )

(defpart 1411
  :init-specs ((:fade-g -10.240001))
  )

(defskelgroup skel-atoll-tank-a-debris atoll-tank atoll-tank-a-lod0-jg -1
              ((atoll-tank-a-lod0-mg (meters 999999)))
              :bounds (static-spherem 30 -15 13 57)
              )

(defskelgroup skel-atoll-tank-b-debris atoll-tank atoll-tank-b-lod0-jg -1
              ((atoll-tank-b-lod0-mg (meters 999999)))
              :bounds (static-spherem 0 -10 -5 32)
              )

(defskelgroup skel-atoll-tank-c-debris atoll-tank atoll-tank-c-lod0-jg -1
              ((atoll-tank-c-lod0-mg (meters 999999)))
              :bounds (static-spherem 30 -15 26 66)
              )

(deftype atoll-tank (process-focusable)
  ((is-master?     symbol                    :offset-assert 204)
   (aftermath-part sparticle-launch-control  :offset-assert 208)
   )
  :heap-base #x60
  :method-count-assert 29
  :size-assert         #xd4
  :flag-assert         #x1d006000d4
  (:methods
    (dormant () _type_ :state 27)
    (idle () _type_ :state 28)
    )
  )


(defmethod deactivate atoll-tank ((obj atoll-tank))
  (if (nonzero? (-> obj aftermath-part))
      (kill-and-free-particles (-> obj aftermath-part))
      )
  ((method-of-type process-focusable deactivate) obj)
  (none)
  )

;; WARN: Return type mismatch process-focusable vs atoll-tank.
(defmethod relocate atoll-tank ((obj atoll-tank) (arg0 int))
  (if (nonzero? (-> obj aftermath-part))
      (&+! (-> obj aftermath-part) arg0)
      )
  (the-as atoll-tank ((method-of-type process-focusable relocate) obj arg0))
  )

(defmethod run-logic? atoll-tank ((obj atoll-tank))
  #t
  )

(defmethod get-trans atoll-tank ((obj atoll-tank) (arg0 int))
  "@returns the `trans` [[vector]] from the process's `root` (typically either a [[trsqv]] or a [[collide-shape]])"
  (let ((v1-0 (-> obj root-override)))
    (case arg0
      ((3 2)
       (let ((v0-0 (new 'static 'vector :w 1.0)))
         (set! (-> v0-0 quad) (-> v1-0 trans quad))
         (set! (-> v0-0 y) (+ 12288.0 (-> v0-0 y)))
         v0-0
         )
       )
      (else
        (-> v1-0 trans)
        )
      )
    )
  )

;; WARN: Return type mismatch object vs none.
(defbehavior atoll-tank-init-by-other atoll-tank ((arg0 process-drawable) (arg1 int))
  (set! (-> self is-master?) #f)
  (set! (-> self root-override) (the-as collide-shape (new 'process 'trsqv)))
  (let ((s4-0 (-> self root-override)))
    (set! (-> s4-0 trans quad) (-> arg0 root trans quad))
    (quaternion-copy! (-> s4-0 quat) (-> arg0 root quat))
    (vector-identity! (-> s4-0 scale))
    )
  (logior! (-> self focus-status) (focus-status ignore))
  (cond
    ((= arg1 1)
     (initialize-skeleton
       self
       (the-as
         skeleton-group
         (art-group-get-by-name *level* "skel-atoll-tank-b-debris" (the-as (pointer uint32) #f))
         )
       (the-as pair 0)
       )
     (ja-channel-set! 1)
     (ja :group! atoll-tank-b-debris-ja :num! min)
     (setup-masks (-> self draw) 0 2)
     )
    (else
      (initialize-skeleton
        self
        (the-as
          skeleton-group
          (art-group-get-by-name *level* "skel-atoll-tank-c-debris" (the-as (pointer uint32) #f))
          )
        (the-as pair 0)
        )
      (ja-channel-set! 1)
      (ja :group! atoll-tank-c-debris-ja :num! min)
      (setup-masks (-> self draw) 0 2)
      )
    )
  (ja-post)
  (go-virtual idle)
  (none)
  )

(defstate dormant (atoll-tank)
  :virtual #t
  :code (the-as (function none :behavior atoll-tank) sleep-code)
  )

(defstate idle (atoll-tank)
  :virtual #t
  :trans (behavior ()
    (if (-> self is-master?)
        (spawn (-> self aftermath-part) (-> self root-override trans))
        )
    (none)
    )
  :code (behavior ()
    (when (-> self is-master?)
      (process-spawn atoll-tank self 1 :to self)
      (process-spawn atoll-tank self 2 :to self)
      )
    (sleep-code)
    (none)
    )
  )

;; WARN: Return type mismatch object vs none.
(defmethod init-from-entity! atoll-tank ((obj atoll-tank) (arg0 entity-actor))
  "Typically the method that does the initial setup on the process, potentially using the [[entity-actor]] provided as part of that.
This commonly includes things such as:
- stack size
- collision information
- loading the skeleton group / bones
- sounds"
  (set! (-> obj is-master?) #t)
  (let ((s4-0 (new 'process 'collide-shape obj (collide-list-enum usually-hit-by-player))))
    (let ((s3-0 (new 'process 'collide-shape-prim-group s4-0 (the-as uint 9) 0)))
      (set! (-> s4-0 total-prims) (the-as uint 10))
      (set! (-> s3-0 prim-core collide-as) (collide-spec obstacle))
      (set! (-> s3-0 prim-core action) (collide-action solid))
      (set! (-> s3-0 transform-index) 2)
      (set-vector! (-> s3-0 local-sphere) 163840.0 0.0 102400.0 278528.0)
      (set! (-> s4-0 root-prim) s3-0)
      )
    (let ((v1-9 (new 'process 'collide-shape-prim-mesh s4-0 (the-as uint 0) (the-as uint 0))))
      (set! (-> v1-9 prim-core collide-as) (collide-spec obstacle))
      (set! (-> v1-9 prim-core action) (collide-action solid))
      (set! (-> v1-9 transform-index) 2)
      (set-vector! (-> v1-9 local-sphere) 4096.0 0.0 -24576.0 59392.0)
      )
    (let ((v1-11 (new 'process 'collide-shape-prim-mesh s4-0 (the-as uint 1) (the-as uint 0))))
      (set! (-> v1-11 prim-core collide-as) (collide-spec obstacle))
      (set! (-> v1-11 prim-core action) (collide-action solid))
      (set! (-> v1-11 transform-index) 2)
      (set-vector! (-> v1-11 local-sphere) 55296.0 1228.8 -28672.0 34816.0)
      )
    (let ((v1-13 (new 'process 'collide-shape-prim-mesh s4-0 (the-as uint 2) (the-as uint 0))))
      (set! (-> v1-13 prim-core collide-as) (collide-spec obstacle))
      (set! (-> v1-13 prim-core action) (collide-action solid))
      (set! (-> v1-13 transform-index) 2)
      (set-vector! (-> v1-13 local-sphere) 131072.0 0.0 20480.0 57344.0)
      )
    (let ((v1-15 (new 'process 'collide-shape-prim-mesh s4-0 (the-as uint 3) (the-as uint 0))))
      (set! (-> v1-15 prim-core collide-as) (collide-spec obstacle))
      (set! (-> v1-15 prim-core action) (collide-action solid))
      (set! (-> v1-15 transform-index) 2)
      (set-vector! (-> v1-15 local-sphere) 221184.0 -45056.0 303104.0 40960.0)
      )
    (let ((v1-17 (new 'process 'collide-shape-prim-mesh s4-0 (the-as uint 4) (the-as uint 0))))
      (set! (-> v1-17 prim-core collide-as) (collide-spec obstacle))
      (set! (-> v1-17 prim-core action) (collide-action solid))
      (set! (-> v1-17 transform-index) 2)
      (set-vector! (-> v1-17 local-sphere) 204800.0 -57344.0 40960.0 12288.0)
      )
    (let ((v1-19 (new 'process 'collide-shape-prim-mesh s4-0 (the-as uint 5) (the-as uint 0))))
      (set! (-> v1-19 prim-core collide-as) (collide-spec obstacle))
      (set! (-> v1-19 prim-core action) (collide-action solid))
      (set! (-> v1-19 transform-index) 2)
      (set-vector! (-> v1-19 local-sphere) 280576.0 -57344.0 133120.0 24576.0)
      )
    (let ((v1-21 (new 'process 'collide-shape-prim-mesh s4-0 (the-as uint 6) (the-as uint 0))))
      (set! (-> v1-21 prim-core collide-as) (collide-spec obstacle))
      (set! (-> v1-21 prim-core action) (collide-action solid))
      (set! (-> v1-21 transform-index) 2)
      (set-vector! (-> v1-21 local-sphere) 194560.0 -57344.0 155648.0 32768.0)
      )
    (let ((v1-23 (new 'process 'collide-shape-prim-mesh s4-0 (the-as uint 7) (the-as uint 0))))
      (set! (-> v1-23 prim-core collide-as) (collide-spec obstacle))
      (set! (-> v1-23 prim-core action) (collide-action solid))
      (set! (-> v1-23 transform-index) 2)
      (set-vector! (-> v1-23 local-sphere) 73728.0 -57344.0 81920.0 32768.0)
      )
    (let ((v1-25 (new 'process 'collide-shape-prim-mesh s4-0 (the-as uint 8) (the-as uint 0))))
      (set! (-> v1-25 prim-core collide-as) (collide-spec obstacle))
      (set! (-> v1-25 prim-core action) (collide-action solid))
      (set! (-> v1-25 transform-index) 2)
      (set-vector! (-> v1-25 local-sphere) -28672.0 -57344.0 86016.0 34816.0)
      )
    (set! (-> s4-0 nav-radius) (* 0.75 (-> s4-0 root-prim local-sphere w)))
    (let ((v1-28 (-> s4-0 root-prim)))
      (set! (-> s4-0 backup-collide-as) (-> v1-28 prim-core collide-as))
      (set! (-> s4-0 backup-collide-with) (-> v1-28 prim-core collide-with))
      )
    (set! (-> obj root-override) s4-0)
    )
  (process-drawable-from-entity! obj arg0)
  (initialize-skeleton
    obj
    (the-as
      skeleton-group
      (art-group-get-by-name *level* "skel-atoll-tank-a-debris" (the-as (pointer uint32) #f))
      )
    (the-as pair 0)
    )
  (logior! (-> obj focus-status) (focus-status ignore))
  (ja-channel-set! 1)
  (let ((s5-2 (-> obj skel root-channel 0)))
    (joint-control-channel-group-eval!
      s5-2
      (the-as art-joint-anim (-> obj draw art-group data 2))
      num-func-identity
      )
    (set! (-> s5-2 frame-num) 0.0)
    )
  (transform-post)
  (setup-masks (-> obj draw) 0 2)
  (set! (-> obj part) (create-launch-control (-> *part-group-id-table* 321) obj))
  (set! (-> obj aftermath-part) (create-launch-control (-> *part-group-id-table* 322) obj))
  (cond
    ((task-node-closed? (game-task-node atoll-sig-tank))
     (go (method-of-object obj idle))
     )
    (else
      (logior! (-> obj draw status) (draw-control-status no-draw))
      (let ((v1-54 (-> obj root-override root-prim)))
        (set! (-> v1-54 prim-core collide-as) (collide-spec))
        (set! (-> v1-54 prim-core collide-with) (collide-spec))
        )
      (set! (-> obj root-override backup-collide-as) (collide-spec))
      (set! (-> obj root-override backup-collide-with) (collide-spec))
      0
      (go (method-of-object obj dormant))
      )
    )
  (none)
  )
