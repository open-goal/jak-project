;;-*-Lisp-*-
(in-package goal)

;; name: vinroom-part.gc
;; name in dgo: vinroom-part
;; dgos: VIN

;; DECOMP BEGINS

(deftype vinroom-part (part-spawner)
  ()
  :heap-base #x30
  :method-count-assert 16
  :size-assert         #xb0
  :flag-assert         #x10003000b0
  )


(defpartgroup group-vinroom-console-1
  :id 240
  :flags (unk-4)
  :bounds (static-bspherem 0 0 0 4)
  :parts ((sp-item 1129 :fade-after (meters 100) :flags (is-3d bit7) :period 80 :length 5)
    (sp-item 1130 :fade-after (meters 100) :flags (is-3d bit7) :period 320 :length 5 :offset 10)
    (sp-item 1131 :fade-after (meters 60) :flags (bit6 bit7))
    )
  )

(defpart 1131
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xca :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-x (meters 0))
    (sp-flt spt-y (meters 0))
    (sp-flt spt-z (meters 0.5))
    (sp-flt spt-scale-x (meters 5))
    (sp-flt spt-rot-x 2048.0)
    (sp-flt spt-scale-y (meters 7))
    (sp-flt spt-r 0.0)
    (sp-rnd-flt spt-g 192.0 64.0 1.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 12.0 1.0 1.0)
    (sp-flt spt-omega 248627.2)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 1024.0)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1129
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x1b :page #x3d3))
    (sp-flt spt-num 1.0)
    (sp-flt spt-scale-x (meters 1.875))
    (sp-flt spt-rot-x 16520.533)
    (sp-flt spt-scale-y (meters 0.9))
    (sp-flt spt-r 255.0)
    (sp-flt spt-g 255.0)
    (sp-flt spt-b 255.0)
    (sp-flt spt-a 24.0)
    (sp-int spt-timer 80)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat)
    (new 'static 'sp-field-init-spec
      :field (sp-field-id spt-userdata)
      :flags (sp-flag plain-v2)
      :object (new 'static 'boxed-array :type int32
        5
        0
        0
        #x3d302000
        #x3d302100
        #x3d302200
        #x3d302300
        #x3d302400
        #x3d302500
        #x3d302600
        #x3d302700
        #x3d302800
        #x3d302900
        #x3d302a00
        #x3d301b00
        #x3d301c00
        #x3d301d00
        #x3d301e00
        #x3d301f00
        )
      )
    (sp-func spt-func 'sparticle-texture-animate)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1130
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x7 :page #x3d3))
    (sp-flt spt-num 1.0)
    (sp-flt spt-scale-x (meters 1.9))
    (sp-flt spt-rot-x 16520.533)
    (sp-flt spt-scale-y (meters 0.85))
    (sp-flt spt-r 255.0)
    (sp-flt spt-g 255.0)
    (sp-flt spt-b 255.0)
    (sp-flt spt-a 64.0)
    (sp-flt spt-fade-a -0.7111111)
    (sp-int spt-timer 320)
    (sp-cpuinfo-flags sp-cpuinfo-flag-3 left-multiply-quat)
    (new 'static 'sp-field-init-spec
      :field (sp-field-id spt-userdata)
      :flags (sp-flag plain-v2)
      :object (new 'static 'boxed-array :type int32 80 0 0 #x3d300400 #x3d300500 #x3d300600 #x3d300700)
      )
    (sp-func spt-func 'sparticle-texture-animate)
    (sp-int spt-next-time 80)
    (sp-launcher-by-id spt-next-launcher 1132)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1132
  :init-specs ((sp-flt spt-a 64.0)
    (sp-flt spt-fade-a -0.7111111)
    (sp-int spt-next-time 80)
    (sp-launcher-by-id spt-next-launcher 1132)
    )
  )

(defpartgroup group-vinroom-console-2
  :id 241
  :flags (unk-4)
  :bounds (static-bspherem 0 0 0 4)
  :parts ((sp-item 1133 :fade-after (meters 100) :flags (is-3d bit7))
    (sp-item 1134 :fade-after (meters 100) :flags (is-3d bit7) :period 40 :length 5)
    (sp-item 1131 :fade-after (meters 60) :flags (bit6 bit7))
    )
  )

(defpart 1133
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x13 :page #xc))
    (sp-rnd-flt spt-num 0.0 0.2 1.0)
    (sp-flt spt-z (meters 0.015))
    (sp-flt spt-scale-x (meters 0))
    (sp-flt spt-rot-x 16384.0)
    (sp-flt spt-scale-y (meters 0))
    (sp-flt spt-r 255.0)
    (sp-flt spt-g 255.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 24.0 8.0 1.0)
    (sp-flt spt-scalevel-x (meters 0.018437501))
    (sp-flt spt-scalevel-y (meters 0.0103124995))
    (sp-int spt-timer 160)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat)
    (sp-int spt-next-time 100)
    (sp-launcher-by-id spt-next-launcher 1135)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1134
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x1b :page #x3d3))
    (sp-func spt-birth-func 'birth-func-texture-group)
    (sp-flt spt-num 1.0)
    (sp-flt spt-z (meters 0.015))
    (sp-rnd-flt spt-scale-x (meters 1.4) (meters 0.6) 1.0)
    (sp-flt spt-rot-x 16384.0)
    (sp-rnd-flt spt-scale-y (meters 0.65) (meters 0.2) 1.0)
    (sp-flt spt-r 255.0)
    (sp-flt spt-g 255.0)
    (sp-flt spt-b 255.0)
    (sp-flt spt-a 64.0)
    (sp-flt spt-fade-a -1.0666667)
    (sp-int-plain-rnd spt-timer 40 19 1)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat)
    (new 'static 'sp-field-init-spec
      :field (sp-field-id spt-userdata)
      :flags (sp-flag plain-v2)
      :object (new 'static 'boxed-array :type int32 80 0 0 #x3d300000 #x3d300100 #x3d300200 #x3d300300)
      )
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpartgroup group-vinroom-tv-matrix
  :id 242
  :flags (unk-4)
  :bounds (static-bspherem 0 0 0 16)
  :parts ((sp-item 1136 :fade-after (meters 100) :flags (is-3d bit7))
    (sp-item 1137 :fade-after (meters 100) :flags (is-3d bit7))
    (sp-item 1138 :fade-after (meters 100) :flags (is-3d bit7))
    (sp-item 1139 :fade-after (meters 100) :flags (is-3d bit7))
    (sp-item 1140 :fade-after (meters 100) :flags (is-3d bit7))
    (sp-item 1141 :fade-after (meters 60) :flags (bit6 bit7))
    )
  )

(defpart 1141
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xca :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-x (meters 0))
    (sp-flt spt-y (meters 0))
    (sp-flt spt-z (meters 0))
    (sp-flt spt-scale-x (meters 16))
    (sp-flt spt-rot-x 4096.0)
    (sp-flt spt-scale-y (meters 20))
    (sp-flt spt-r 0.0)
    (sp-rnd-flt spt-g 192.0 64.0 1.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 16.0 1.0 1.0)
    (sp-flt spt-omega 248627.2)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 4096.0)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1140
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x17 :page #x3d3))
    (sp-func spt-birth-func 'birth-func-texture-group)
    (sp-flt spt-num 0.1)
    (sp-flt spt-x (meters 3.5))
    (sp-rnd-flt spt-y (meters 0.8) (meters 0.5) 1.0)
    (sp-flt spt-z (meters 0))
    (sp-flt spt-scale-x (meters 0.5))
    (sp-flt spt-rot-x 16384.0)
    (sp-flt spt-rot-y (degrees 0.0))
    (sp-flt spt-rot-z (degrees 0.0))
    (sp-flt spt-scale-y (meters 0.5))
    (sp-rnd-flt spt-r 32.0 32.0 1.0)
    (sp-copy-from-other spt-g -1)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 64.0 16.0 1.0)
    (sp-flt spt-vel-x (meters -0.021666666))
    (sp-flt spt-fade-a 0.2)
    (sp-int spt-timer 250)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat)
    (new 'static 'sp-field-init-spec
      :field (sp-field-id spt-userdata)
      :flags (sp-flag plain-v2)
      :object (new 'static 'boxed-array :type int32
        40
        1
        0
        #x3d301700
        #x3d301900
        #x3d301a00
        #x3d301600
        #x3d301500
        #x3d301800
        #x3d301900
        #x3d301600
        #x3d301700
        #x3d301800
        #x3d301a00
        #x3d301500
        )
      )
    (sp-func spt-func 'sparticle-texture-animate)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1139
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x17 :page #x3d3))
    (sp-func spt-birth-func 'birth-func-texture-group)
    (sp-flt spt-num 0.1)
    (sp-flt spt-x (meters 3.5))
    (sp-rnd-flt spt-y (meters 0) (meters 0.5) 1.0)
    (sp-flt spt-z (meters 0))
    (sp-flt spt-scale-x (meters 0.5))
    (sp-flt spt-rot-x 16384.0)
    (sp-flt spt-rot-y (degrees 0.0))
    (sp-flt spt-rot-z (degrees 0.0))
    (sp-flt spt-scale-y (meters 0.5))
    (sp-rnd-flt spt-r 32.0 32.0 1.0)
    (sp-copy-from-other spt-g -1)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 64.0 16.0 1.0)
    (sp-flt spt-vel-x (meters -0.021666666))
    (sp-flt spt-fade-a 0.2)
    (sp-int spt-timer 275)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat)
    (new 'static 'sp-field-init-spec
      :field (sp-field-id spt-userdata)
      :flags (sp-flag plain-v2)
      :object (new 'static 'boxed-array :type int32
        40
        1
        0
        #x3d301600
        #x3d301500
        #x3d301800
        #x3d301700
        #x3d301900
        #x3d301a00
        #x3d301600
        #x3d301500
        #x3d301800
        #x3d301700
        #x3d301900
        #x3d301a00
        )
      )
    (sp-func spt-func 'sparticle-texture-animate)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1138
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x17 :page #x3d3))
    (sp-func spt-birth-func 'birth-func-texture-group)
    (sp-flt spt-num 0.3)
    (sp-flt spt-x (meters 3.5))
    (sp-rnd-flt spt-y (meters -1.7) (meters 1.9) 1.0)
    (sp-flt spt-z (meters 0))
    (sp-flt spt-scale-x (meters 0.5))
    (sp-flt spt-rot-x 16384.0)
    (sp-flt spt-rot-y (degrees 0.0))
    (sp-flt spt-rot-z (degrees 0.0))
    (sp-flt spt-scale-y (meters 0.5))
    (sp-rnd-flt spt-r 32.0 32.0 1.0)
    (sp-copy-from-other spt-g -1)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 64.0 16.0 1.0)
    (sp-flt spt-vel-x (meters -0.021666666))
    (sp-flt spt-fade-a 0.2)
    (sp-int spt-timer 320)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat)
    (new 'static 'sp-field-init-spec
      :field (sp-field-id spt-userdata)
      :flags (sp-flag plain-v2)
      :object (new 'static 'boxed-array :type int32
        40
        1
        0
        #x3d301800
        #x3d301700
        #x3d301900
        #x3d301a00
        #x3d301600
        #x3d301500
        #x3d301800
        #x3d301700
        #x3d301900
        #x3d301a00
        #x3d301600
        #x3d301500
        )
      )
    (sp-func spt-func 'sparticle-texture-animate)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1137
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xa :page #x3d3))
    (sp-func spt-birth-func 'birth-func-texture-group)
    (sp-rnd-flt spt-num 0.1 0.1 1.0)
    (sp-flt spt-x (meters 3.5))
    (sp-rnd-flt spt-y (meters -1.7) (meters 2.9) 1.0)
    (sp-flt spt-z (meters 0))
    (sp-flt spt-scale-x (meters 0.6))
    (sp-flt spt-rot-x 16384.0)
    (sp-flt spt-rot-y (degrees 0.0))
    (sp-flt spt-rot-z (degrees 0.0))
    (sp-flt spt-scale-y (meters 0.6))
    (sp-rnd-flt spt-r 64.0 64.0 1.0)
    (sp-copy-from-other spt-g -1)
    (sp-flt spt-b 255.0)
    (sp-flt spt-a 96.0)
    (sp-rnd-flt spt-vel-x (meters -0.006) (meters -0.00575) 1.0)
    (sp-flt spt-fade-a 0.2)
    (sp-int spt-timer 640)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat)
    (new 'static 'sp-field-init-spec
      :field (sp-field-id spt-userdata)
      :flags (sp-flag plain-v2)
      :object (new 'static 'boxed-array :type int32
        80
        1
        0
        #x3d301700
        #x3d301900
        #x3d301a00
        #x3d301600
        #x3d301500
        #x3d301800
        #x3d301900
        #x3d301600
        #x3d301700
        #x3d301800
        #x3d301a00
        #x3d301500
        )
      )
    (sp-func spt-func 'sparticle-texture-animate)
    (sp-int spt-next-time 160)
    (sp-launcher-by-id spt-next-launcher 1142)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1142
  :init-specs ((sp-flt spt-fade-a -0.2)
    (sp-int-plain-rnd spt-next-time 120 39 1)
    (sp-launcher-by-id spt-next-launcher 1143)
    )
  )

(defpart 1143
  :init-specs ((sp-flt spt-fade-a 0.2) (sp-int-plain-rnd spt-next-time 120 39 1) (sp-launcher-by-id spt-next-launcher 1144))
  )

(defpart 1144
  :init-specs ((sp-flt spt-fade-a -1.6))
  )

(defpart 1136
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x9 :page #x3d3))
    (sp-rnd-flt spt-num 0.0 0.3 1.0)
    (sp-flt spt-scale-x (meters 0))
    (sp-flt spt-rot-x 16384.0)
    (sp-flt spt-scale-y (meters 0))
    (sp-rnd-flt spt-r 0.0 255.0 1.0)
    (sp-copy-from-other spt-g -1)
    (sp-flt spt-b 0.0)
    (sp-rnd-flt spt-a 32.0 16.0 1.0)
    (sp-flt spt-scalevel-x (meters 0.05))
    (sp-flt spt-scalevel-y (meters 0.025))
    (sp-int spt-timer 160)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat)
    (sp-int spt-next-time 130)
    (sp-launcher-by-id spt-next-launcher 1135)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpartgroup group-vinroom-tv-code
  :id 243
  :flags (unk-4)
  :bounds (static-bspherem 0 0 0 16)
  :parts ((sp-item 1145 :fade-after (meters 100) :flags (is-3d bit7) :period 80 :length 5)
    (sp-item 1146 :fade-after (meters 100) :flags (is-3d bit7) :period 240 :length 5)
    (sp-item 1147 :fade-after (meters 100) :flags (is-3d bit7) :period 240 :length 5)
    (sp-item 1148 :fade-after (meters 100) :flags (is-3d bit7))
    (sp-item 1149 :fade-after (meters 100) :flags (is-3d bit7) :period 100 :length 5)
    (sp-item 1150 :fade-after (meters 60) :flags (bit6 bit7))
    )
  )

(defpart 1150
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xca :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-x (meters 0))
    (sp-flt spt-y (meters 0))
    (sp-flt spt-z (meters 0.2))
    (sp-flt spt-scale-x (meters 16))
    (sp-flt spt-rot-x 4096.0)
    (sp-flt spt-scale-y (meters 20))
    (sp-flt spt-r 0.0)
    (sp-rnd-flt spt-g 192.0 64.0 1.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 16.0 1.0 1.0)
    (sp-flt spt-omega 248627.2)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 2048.0)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1149
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xa :page #x3d3))
    (sp-func spt-birth-func 'birth-func-texture-group)
    (sp-flt spt-num 1.0)
    (sp-sound (static-sound-spec "text-line" :volume 50.0))
    (sp-flt spt-y (meters -1.9))
    (sp-flt spt-z (meters 0.01))
    (sp-flt spt-scale-x (meters 7))
    (sp-flt spt-rot-x 16384.0)
    (sp-flt spt-scale-y (meters 0.5))
    (sp-flt spt-r 128.0)
    (sp-flt spt-g 128.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 64.0 32.0 1.0)
    (sp-int spt-timer 880)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat)
    (new 'static 'sp-field-init-spec
      :field (sp-field-id spt-userdata)
      :flags (sp-flag plain-v2)
      :object (new 'static 'boxed-array :type int32
        5
        1
        0
        #x3d300a00
        #x3d300b00
        #x3d300c00
        #x3d300d00
        #x3d300e00
        #x3d300f00
        #x3d301000
        #x3d301100
        )
      )
    (sp-int spt-next-time 80)
    (sp-launcher-by-id spt-next-launcher 1151)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1151
  :init-specs ((sp-flt spt-vel-x (meters -0.0064))
    (sp-flt spt-vel-y (meters 0.0264))
    (sp-flt spt-vel-z (meters -0.0064))
    (sp-int spt-next-time 10)
    (sp-launcher-by-id spt-next-launcher 1152)
    )
  )

(defpart 1152
  :init-specs ((sp-flt spt-vel-x (meters 0))
    (sp-flt spt-vel-y (meters 0))
    (sp-flt spt-vel-z (meters 0))
    (sp-int spt-next-time 80)
    (sp-launcher-by-id spt-next-launcher 1151)
    )
  )

(defpart 1148
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x9 :page #x3d3))
    (sp-rnd-flt spt-num 0.0 0.3 1.0)
    (sp-flt spt-z (meters 0.01))
    (sp-flt spt-scale-x (meters 0))
    (sp-flt spt-rot-x 16384.0)
    (sp-flt spt-scale-y (meters 0))
    (sp-rnd-flt spt-r 0.0 255.0 1.0)
    (sp-copy-from-other spt-g -1)
    (sp-flt spt-b 0.0)
    (sp-rnd-flt spt-a 32.0 16.0 1.0)
    (sp-flt spt-scalevel-x (meters 0.05625))
    (sp-flt spt-scalevel-y (meters 0.0275))
    (sp-int spt-timer 160)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat)
    (sp-int spt-next-time 130)
    (sp-launcher-by-id spt-next-launcher 1135)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1135
  :init-specs ((sp-flt spt-fade-a -2.1333334))
  )

(defpart 1146
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x8 :page #x3d3))
    (sp-flt spt-num 1.0)
    (sp-flt spt-y (meters -2))
    (sp-flt spt-z (meters 0.01))
    (sp-flt spt-scale-x (meters 8))
    (sp-flt spt-rot-x 16384.0)
    (sp-flt spt-scale-y (meters 0.05))
    (sp-flt spt-r 128.0)
    (sp-flt spt-g 128.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 48.0 32.0 1.0)
    (sp-flt spt-vel-y (meters 0.016666668))
    (sp-int spt-timer 240)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1147
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x8 :page #x3d3))
    (sp-flt spt-num 1.0)
    (sp-flt spt-y (meters 2))
    (sp-flt spt-z (meters 0.01))
    (sp-flt spt-scale-x (meters 8))
    (sp-flt spt-rot-x 16384.0)
    (sp-flt spt-scale-y (meters 0.05))
    (sp-flt spt-r 128.0)
    (sp-flt spt-g 128.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 48.0 32.0 1.0)
    (sp-flt spt-vel-y (meters -0.016666668))
    (sp-int spt-timer 240)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1145
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x1b :page #x3d3))
    (sp-flt spt-num 1.0)
    (sp-flt spt-z (meters 0.01))
    (sp-flt spt-scale-x (meters 8))
    (sp-flt spt-rot-x 16384.0)
    (sp-flt spt-scale-y (meters 4.2))
    (sp-flt spt-r 255.0)
    (sp-flt spt-g 255.0)
    (sp-flt spt-b 255.0)
    (sp-flt spt-a 16.0)
    (sp-int spt-timer 80)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat)
    (new 'static 'sp-field-init-spec
      :field (sp-field-id spt-userdata)
      :flags (sp-flag plain-v2)
      :object (new 'static 'boxed-array :type int32
        5
        0
        0
        #x3d301b00
        #x3d301c00
        #x3d301d00
        #x3d301e00
        #x3d301f00
        #x3d302000
        #x3d302100
        #x3d302200
        #x3d302300
        #x3d302400
        #x3d302500
        #x3d302600
        #x3d302700
        #x3d302800
        #x3d302900
        #x3d302a00
        )
      )
    (sp-func spt-func 'sparticle-texture-animate)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpartgroup group-vinroom-tv-2dcode
  :id 244
  :flags (unk-4)
  :bounds (static-bspherem 0 0 0 16)
  :parts ((sp-item 1153 :fade-after (meters 100) :flags (is-3d bit7) :period 80 :length 5)
    (sp-item 1154 :fade-after (meters 100) :flags (is-3d bit7))
    (sp-item 1155 :fade-after (meters 100) :flags (is-3d bit7))
    (sp-item 1156 :fade-after (meters 100) :flags (is-3d bit7) :period 240 :length 5)
    (sp-item 1157 :fade-after (meters 100) :flags (is-3d bit7) :period 240 :length 5 :offset 120)
    (sp-item 1156 :fade-after (meters 100) :flags (is-3d bit7) :period 240 :length 5 :offset 85)
    (sp-item 1157 :fade-after (meters 100) :flags (is-3d bit7) :period 240 :length 5 :offset 205)
    (sp-item 1158 :fade-after (meters 100) :flags (is-3d bit7))
    (sp-item 1159 :fade-after (meters 100) :flags (is-3d bit7))
    (sp-item 1160 :fade-after (meters 60) :flags (bit6 bit7))
    (sp-item 1161 :fade-after (meters 60) :flags (bit6 bit7))
    (sp-item 1162 :fade-after (meters 60) :flags (bit6 bit7))
    )
  )

(defpart 1160
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xca :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-x (meters 0))
    (sp-flt spt-y (meters 3))
    (sp-flt spt-z (meters 0))
    (sp-flt spt-scale-x (meters 12))
    (sp-flt spt-rot-x 4096.0)
    (sp-flt spt-scale-y (meters 12))
    (sp-flt spt-r 0.0)
    (sp-rnd-flt spt-g 192.0 64.0 1.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 12.0 1.0 1.0)
    (sp-flt spt-omega 248627.2)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 4096.0)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1161
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xca :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-x (meters 0))
    (sp-flt spt-y (meters 0))
    (sp-flt spt-z (meters 0))
    (sp-flt spt-scale-x (meters 12))
    (sp-flt spt-rot-x 4096.0)
    (sp-flt spt-scale-y (meters 12))
    (sp-flt spt-r 0.0)
    (sp-rnd-flt spt-g 192.0 64.0 1.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 12.0 1.0 1.0)
    (sp-flt spt-omega 248627.2)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 4096.0)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1162
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xca :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-x (meters 0))
    (sp-flt spt-y (meters -3.5))
    (sp-flt spt-z (meters 0))
    (sp-flt spt-scale-x (meters 16))
    (sp-flt spt-rot-x 4096.0)
    (sp-flt spt-scale-y (meters 16))
    (sp-flt spt-r 0.0)
    (sp-rnd-flt spt-g 192.0 64.0 1.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 12.0 1.0 1.0)
    (sp-flt spt-omega 248627.2)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 4096.0)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1159
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xa :page #x3d3))
    (sp-func spt-birth-func 'birth-func-texture-group)
    (sp-rnd-flt spt-num 0.0 0.1 1.0)
    (sp-flt spt-x (meters 0.6))
    (sp-flt spt-scale-x (meters 2.8))
    (sp-flt spt-rot-x 16201.955)
    (sp-flt spt-scale-y (meters 0.4))
    (sp-flt spt-r 255.0)
    (sp-flt spt-g 255.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 32.0 32.0 1.0)
    (sp-flt spt-vel-y (meters -0.009166667))
    (sp-flt spt-vel-z (meters 0.00020833334))
    (sp-flt spt-fade-r -0.51)
    (sp-flt spt-fade-g -0.51)
    (sp-flt spt-fade-b -0.51)
    (sp-flt spt-fade-a -0.128)
    (sp-int spt-timer 500)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat)
    (new 'static 'sp-field-init-spec
      :field (sp-field-id spt-userdata)
      :flags (sp-flag plain-v2)
      :object (new 'static 'boxed-array :type int32
        80
        1
        0
        #x3d300a00
        #x3d300b00
        #x3d300c00
        #x3d300d00
        #x3d300e00
        #x3d300f00
        #x3d301100
        )
      )
    (sp-int spt-next-time 5)
    (sp-launcher-by-id spt-next-launcher 1163)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1158
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xa :page #x3d3))
    (sp-func spt-birth-func 'birth-func-texture-group)
    (sp-rnd-flt spt-num 0.0 0.1 1.0)
    (sp-flt spt-x (meters 0.6))
    (sp-flt spt-scale-x (meters 2.8))
    (sp-flt spt-rot-x 16201.955)
    (sp-flt spt-scale-y (meters 0.4))
    (sp-flt spt-r 255.0)
    (sp-flt spt-g 255.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 32.0 32.0 1.0)
    (sp-flt spt-vel-y (meters 0.009166667))
    (sp-flt spt-fade-r -0.51)
    (sp-flt spt-fade-g -0.51)
    (sp-flt spt-fade-b -0.51)
    (sp-flt spt-fade-a -0.128)
    (sp-int spt-timer 500)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat)
    (new 'static 'sp-field-init-spec
      :field (sp-field-id spt-userdata)
      :flags (sp-flag plain-v2)
      :object (new 'static 'boxed-array :type int32
        80
        1
        0
        #x3d300a00
        #x3d300b00
        #x3d300c00
        #x3d300d00
        #x3d300e00
        #x3d300f00
        #x3d301100
        )
      )
    (sp-int spt-next-time 5)
    (sp-launcher-by-id spt-next-launcher 1163)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1156
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x8 :page #x3d3))
    (sp-flt spt-num 1.0)
    (sp-flt spt-x (meters 0.6))
    (sp-flt spt-y (meters -4.4))
    (sp-flt spt-scale-x (meters 3))
    (sp-flt spt-rot-x 16201.955)
    (sp-flt spt-scale-y (meters 0.05))
    (sp-flt spt-r 128.0)
    (sp-flt spt-g 128.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 48.0 32.0 1.0)
    (sp-flt spt-vel-y (meters 0.018333334))
    (sp-int spt-timer 480)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1157
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x8 :page #x3d3))
    (sp-flt spt-num 1.0)
    (sp-flt spt-x (meters 0.6))
    (sp-flt spt-y (meters 4.4))
    (sp-flt spt-scale-x (meters 3))
    (sp-flt spt-rot-x 16384.0)
    (sp-flt spt-scale-y (meters 0.05))
    (sp-flt spt-r 128.0)
    (sp-flt spt-g 128.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 48.0 32.0 1.0)
    (sp-flt spt-vel-y (meters -0.018333334))
    (sp-flt spt-vel-z (meters 0.00020833334))
    (sp-int spt-timer 480)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1153
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x1b :page #x3d3))
    (sp-flt spt-num 1.0)
    (sp-flt spt-x (meters 0.6))
    (sp-flt spt-scale-x (meters 3))
    (sp-flt spt-rot-x 16201.955)
    (sp-flt spt-scale-y (meters 9))
    (sp-flt spt-r 255.0)
    (sp-flt spt-g 255.0)
    (sp-flt spt-b 255.0)
    (sp-flt spt-a 16.0)
    (sp-int spt-timer 80)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat)
    (new 'static 'sp-field-init-spec
      :field (sp-field-id spt-userdata)
      :flags (sp-flag plain-v2)
      :object (new 'static 'boxed-array :type int32
        5
        0
        0
        #x3d301b00
        #x3d301c00
        #x3d301d00
        #x3d301e00
        #x3d301f00
        #x3d302000
        #x3d302100
        #x3d302200
        #x3d302300
        #x3d302400
        #x3d302500
        #x3d302600
        #x3d302700
        #x3d302800
        #x3d302900
        #x3d302a00
        )
      )
    (sp-func spt-func 'sparticle-texture-animate)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1154
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x9 :page #x3d3))
    (sp-rnd-flt spt-num 0.0 0.3 1.0)
    (sp-flt spt-x (meters 0.6))
    (sp-flt spt-scale-x (meters 0))
    (sp-flt spt-rot-x 16201.955)
    (sp-flt spt-scale-y (meters 0))
    (sp-flt spt-r 255.0)
    (sp-flt spt-g 255.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 16.0 16.0 1.0)
    (sp-flt spt-scalevel-x (meters 0.021875))
    (sp-flt spt-scalevel-y (meters 0.058125))
    (sp-int spt-timer 160)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat)
    (sp-int spt-next-time 100)
    (sp-launcher-by-id spt-next-launcher 1164)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1155
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x13 :page #xc))
    (sp-rnd-flt spt-num 0.0 0.3 1.0)
    (sp-sound (static-sound-spec "screen-ring" :num 0.5 :volume 70.0))
    (sp-flt spt-x (meters 0.6))
    (sp-flt spt-scale-x (meters 0))
    (sp-flt spt-rot-x 16201.955)
    (sp-flt spt-scale-y (meters 0))
    (sp-flt spt-r 255.0)
    (sp-flt spt-g 255.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 16.0 16.0 1.0)
    (sp-flt spt-scalevel-x (meters 0.021875))
    (sp-flt spt-scalevel-y (meters 0.0125))
    (sp-int spt-timer 160)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat)
    (sp-int spt-next-time 100)
    (sp-launcher-by-id spt-next-launcher 1164)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpartgroup group-vinroom-tv-dots
  :id 245
  :flags (unk-4)
  :bounds (static-bspherem 0 0 0 16)
  :parts ((sp-item 1165 :fade-after (meters 100) :flags (is-3d bit7))
    (sp-item 1166 :fade-after (meters 100) :flags (bit7))
    (sp-item 1167 :fade-after (meters 100) :flags (bit7))
    (sp-item 1168 :fade-after (meters 100) :flags (bit7))
    (sp-item 1169 :fade-after (meters 60) :flags (bit6 bit7))
    )
  )

(defpart 1169
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xca :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-x (meters 0))
    (sp-flt spt-y (meters 0))
    (sp-flt spt-z (meters 0))
    (sp-flt spt-scale-x (meters 16))
    (sp-flt spt-rot-x 2048.0)
    (sp-flt spt-scale-y (meters 12))
    (sp-flt spt-r 0.0)
    (sp-rnd-flt spt-g 192.0 64.0 1.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 16.0 1.0 1.0)
    (sp-flt spt-omega 248627.2)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 2048.0)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1168
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x26 :page #xc))
    (sp-rnd-flt spt-num 0.0 5.0 1.0)
    (sp-rnd-int-flt spt-x (meters 0) 4 901.12)
    (sp-flt spt-y (meters 1.975))
    (sp-flt spt-scale-x (meters 0.15))
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 255.0)
    (sp-flt spt-g 255.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-int spt-a 1115684864 3 64.0)
    (sp-flt spt-vel-y (meters -0.031666666))
    (sp-int spt-timer 140)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1167
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x26 :page #xc))
    (sp-rnd-flt spt-num 0.0 4.0 1.0)
    (sp-rnd-int-flt spt-x (meters -0.66) 2 901.12)
    (sp-flt spt-y (meters 1.975))
    (sp-flt spt-scale-x (meters 0.15))
    (sp-copy-from-other spt-scale-y -4)
    (sp-rnd-flt spt-r 0.0 255.0 1.0)
    (sp-copy-from-other spt-g -1)
    (sp-flt spt-b 255.0)
    (sp-rnd-int spt-a 1115684864 3 64.0)
    (sp-flt spt-vel-y (meters -0.031666666))
    (sp-int spt-timer 120)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1166
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x26 :page #xc))
    (sp-rnd-flt spt-num 0.0 1.0 1.0)
    (sp-flt spt-x (meters -0.88))
    (sp-flt spt-y (meters 1.975))
    (sp-flt spt-scale-x (meters 0.15))
    (sp-copy-from-other spt-scale-y -4)
    (sp-rnd-flt spt-r 0.0 255.0 1.0)
    (sp-copy-from-other spt-g -1)
    (sp-flt spt-b 255.0)
    (sp-rnd-int spt-a 1115684864 3 64.0)
    (sp-flt spt-vel-y (meters -0.031666666))
    (sp-int spt-timer 110)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1165
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x9 :page #x3d3))
    (sp-rnd-flt spt-num 0.0 0.2 1.0)
    (sp-flt spt-scale-x (meters 0))
    (sp-flt spt-rot-x 16384.0)
    (sp-flt spt-scale-y (meters 0))
    (sp-rnd-flt spt-r 0.0 255.0 1.0)
    (sp-copy-from-other spt-g -1)
    (sp-flt spt-b 0.0)
    (sp-rnd-flt spt-a 32.0 32.0 1.0)
    (sp-flt spt-scalevel-x (meters 0.01375))
    (sp-flt spt-scalevel-y (meters 0.030000001))
    (sp-int spt-timer 160)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat)
    (sp-int spt-next-time 130)
    (sp-launcher-by-id spt-next-launcher 1135)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpartgroup group-vinroom-tv-bargraph
  :id 246
  :flags (unk-4)
  :bounds (static-bspherem 0 0 0 16)
  :parts ((sp-item 1170 :fade-after (meters 100) :flags (is-3d bit7) :period 80 :length 5)
    (sp-item 1171 :fade-after (meters 100) :flags (is-3d bit7) :period 300 :length 5)
    (sp-item 1172 :fade-after (meters 60) :flags (bit6 bit7))
    (sp-item 1173 :fade-after (meters 60) :flags (bit6 bit7))
    (sp-item 1174 :fade-after (meters 60) :flags (bit6 bit7))
    )
  )

(defpart 1172
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xca :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-x (meters 0))
    (sp-flt spt-y (meters -2))
    (sp-flt spt-z (meters 0.2))
    (sp-flt spt-scale-x (meters 8))
    (sp-flt spt-rot-x 2048.0)
    (sp-flt spt-scale-y (meters 8))
    (sp-flt spt-r 0.0)
    (sp-rnd-flt spt-g 192.0 64.0 1.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 12.0 1.0 1.0)
    (sp-flt spt-omega 248627.2)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 1024.0)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1173
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xca :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-x (meters 0))
    (sp-flt spt-y (meters 0))
    (sp-flt spt-z (meters 0.2))
    (sp-flt spt-scale-x (meters 8))
    (sp-flt spt-rot-x 2048.0)
    (sp-flt spt-scale-y (meters 8))
    (sp-flt spt-r 0.0)
    (sp-rnd-flt spt-g 192.0 64.0 1.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 12.0 1.0 1.0)
    (sp-flt spt-omega 248627.2)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 1024.0)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1174
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xca :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-x (meters 0))
    (sp-flt spt-y (meters 2))
    (sp-flt spt-z (meters 0.2))
    (sp-flt spt-scale-x (meters 8))
    (sp-flt spt-rot-x 2048.0)
    (sp-flt spt-scale-y (meters 8))
    (sp-flt spt-r 0.0)
    (sp-rnd-flt spt-g 192.0 64.0 1.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 12.0 1.0 1.0)
    (sp-flt spt-omega 248627.2)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 1024.0)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1171
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x9b :page #xb))
    (sp-flt spt-num 1.0)
    (sp-flt spt-y (meters -3.8))
    (sp-flt spt-z (meters 0.04))
    (sp-flt spt-scale-x (meters 1.4))
    (sp-flt spt-rot-x 16201.955)
    (sp-flt spt-rot-y (degrees -1.0))
    (sp-flt spt-scale-y (meters 4.2))
    (sp-flt spt-r 92.0)
    (sp-flt spt-g 192.0)
    (sp-flt spt-b 192.0)
    (sp-flt spt-a 127.0)
    (sp-flt spt-vel-y (meters 0.06688666))
    (sp-flt spt-accel-y -12.311211)
    (sp-int spt-timer 210)
    (sp-cpuinfo-flags sp-cpuinfo-flag-3 sp-cpuinfo-flag-14)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1170
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x1b :page #x3d3))
    (sp-flt spt-num 1.0)
    (sp-flt spt-z (meters 0.04))
    (sp-flt spt-scale-x (meters 1.7))
    (sp-flt spt-rot-x 16201.955)
    (sp-flt spt-scale-y (meters 4.7))
    (sp-flt spt-r 255.0)
    (sp-flt spt-g 255.0)
    (sp-flt spt-b 255.0)
    (sp-flt spt-a 16.0)
    (sp-int spt-timer 80)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat)
    (new 'static 'sp-field-init-spec
      :field (sp-field-id spt-userdata)
      :flags (sp-flag plain-v2)
      :object (new 'static 'boxed-array :type int32
        5
        0
        0
        #x3d301b00
        #x3d301c00
        #x3d301d00
        #x3d301e00
        #x3d301f00
        #x3d302000
        #x3d302100
        #x3d302200
        #x3d302300
        #x3d302400
        #x3d302500
        #x3d302600
        #x3d302700
        #x3d302800
        #x3d302900
        #x3d302a00
        )
      )
    (sp-func spt-func 'sparticle-texture-animate)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpartgroup group-vinroom-tv-numbers
  :id 247
  :flags (unk-4)
  :bounds (static-bspherem 0 0 0 16)
  :parts ((sp-item 1175 :fade-after (meters 100) :flags (is-3d bit7) :period 80 :length 5)
    (sp-item 1176 :fade-after (meters 100) :flags (is-3d bit7) :period 240 :length 5)
    (sp-item 1177 :fade-after (meters 60) :flags (bit6 bit7))
    )
  )

(defpart 1177
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xca :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-x (meters 0))
    (sp-flt spt-y (meters 0))
    (sp-flt spt-z (meters 0))
    (sp-flt spt-scale-x (meters 10))
    (sp-flt spt-rot-x 2048.0)
    (sp-flt spt-scale-y (meters 10))
    (sp-flt spt-r 0.0)
    (sp-rnd-flt spt-g 192.0 64.0 1.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 16.0 1.0 1.0)
    (sp-flt spt-omega 248627.2)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 2048.0)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1176
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x17 :page #x3d3))
    (sp-flt spt-num 1.0)
    (sp-flt spt-scale-x (meters 1))
    (sp-flt spt-rot-x 16384.0)
    (sp-flt spt-scale-y (meters 0.625))
    (sp-flt spt-r 255.0)
    (sp-flt spt-g 255.0)
    (sp-flt spt-b 255.0)
    (sp-flt spt-a 96.0)
    (sp-flt spt-scalevel-x (meters 0.004166667))
    (sp-flt spt-scalevel-y (meters 0.004166667))
    (sp-int spt-timer 240)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat)
    (new 'static 'sp-field-init-spec
      :field (sp-field-id spt-userdata)
      :flags (sp-flag plain-v2)
      :object (new 'static 'boxed-array :type int32
        40
        0
        0
        #x3d301700
        #x3d301900
        #x3d301a00
        #x3d301600
        #x3d301500
        #x3d301800
        )
      )
    (sp-func spt-func 'sparticle-texture-animate)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1175
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x1b :page #x3d3))
    (sp-flt spt-num 1.0)
    (sp-flt spt-scale-x (meters 2))
    (sp-flt spt-rot-x 16384.0)
    (sp-flt spt-scale-y (meters 1.25))
    (sp-flt spt-r 255.0)
    (sp-flt spt-g 255.0)
    (sp-flt spt-b 255.0)
    (sp-flt spt-a 16.0)
    (sp-int spt-timer 80)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat)
    (new 'static 'sp-field-init-spec
      :field (sp-field-id spt-userdata)
      :flags (sp-flag plain-v2)
      :object (new 'static 'boxed-array :type int32
        5
        0
        0
        #x3d301b00
        #x3d301c00
        #x3d301d00
        #x3d301e00
        #x3d301f00
        #x3d302000
        #x3d302100
        #x3d302200
        #x3d302300
        #x3d302400
        #x3d302500
        #x3d302600
        #x3d302700
        #x3d302800
        #x3d302900
        #x3d302a00
        )
      )
    (sp-func spt-func 'sparticle-texture-animate)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpartgroup group-vinroom-tv-radar
  :id 248
  :flags (unk-4)
  :bounds (static-bspherem 0 0 0 16)
  :parts ((sp-item 1178 :fade-after (meters 100) :flags (is-3d bit7) :period 80 :length 5)
    (sp-item 1179 :fade-after (meters 100) :flags (is-3d bit7))
    (sp-item 1180 :fade-after (meters 100) :flags (is-3d bit7))
    (sp-item 1181 :fade-after (meters 100) :flags (is-3d bit7) :period 600 :length 5)
    (sp-item 1182 :fade-after (meters 100) :flags (is-3d bit7) :period 80 :length 5)
    (sp-item 1183 :fade-after (meters 60) :flags (bit6 bit7))
    )
  )

(defpart 1183
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xca :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-x (meters 0))
    (sp-flt spt-y (meters 0))
    (sp-flt spt-z (meters 0))
    (sp-flt spt-scale-x (meters 16))
    (sp-flt spt-rot-x 4096.0)
    (sp-flt spt-scale-y (meters 20))
    (sp-flt spt-r 0.0)
    (sp-rnd-flt spt-g 192.0 64.0 1.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 16.0 1.0 1.0)
    (sp-flt spt-omega 248627.2)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 2048.0)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1178
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x1b :page #x3d3))
    (sp-flt spt-num 1.0)
    (sp-flt spt-scale-x (meters 6))
    (sp-flt spt-rot-x 16384.0)
    (sp-flt spt-rot-y (degrees -5.0))
    (sp-flt spt-scale-y (meters 4.4))
    (sp-flt spt-r 255.0)
    (sp-flt spt-g 255.0)
    (sp-flt spt-b 255.0)
    (sp-flt spt-a 16.0)
    (sp-int spt-timer 80)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat)
    (new 'static 'sp-field-init-spec
      :field (sp-field-id spt-userdata)
      :flags (sp-flag plain-v2)
      :object (new 'static 'boxed-array :type int32
        5
        0
        0
        #x3d301b00
        #x3d301c00
        #x3d301d00
        #x3d301e00
        #x3d301f00
        #x3d302000
        #x3d302100
        #x3d302200
        #x3d302300
        #x3d302400
        #x3d302500
        #x3d302600
        #x3d302700
        #x3d302800
        #x3d302900
        #x3d302a00
        )
      )
    (sp-func spt-func 'sparticle-texture-animate)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1180
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x9 :page #x3d3))
    (sp-rnd-flt spt-num 0.0 0.2 1.0)
    (sp-flt spt-scale-x (meters 0))
    (sp-flt spt-rot-x 16384.0)
    (sp-flt spt-rot-y (degrees -5.0))
    (sp-flt spt-scale-y (meters 0))
    (sp-flt spt-r 255.0)
    (sp-flt spt-g 255.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 16.0 16.0 1.0)
    (sp-flt spt-scalevel-x (meters 0.01875))
    (sp-flt spt-scalevel-y (meters 0.03375))
    (sp-int spt-timer 160)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat)
    (sp-int spt-next-time 100)
    (sp-launcher-by-id spt-next-launcher 1164)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1179
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x9 :page #x3d3))
    (sp-rnd-flt spt-num 0.0 0.2 1.0)
    (sp-flt spt-scale-x (meters 0))
    (sp-flt spt-rot-x 16384.0)
    (sp-flt spt-rot-y (degrees -5.0))
    (sp-flt spt-scale-y (meters 0))
    (sp-flt spt-r 255.0)
    (sp-flt spt-g 255.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 16.0 16.0 1.0)
    (sp-flt spt-scalevel-x (meters 0.04375))
    (sp-flt spt-scalevel-y (meters 0.01375))
    (sp-int spt-timer 160)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat)
    (sp-int spt-next-time 100)
    (sp-launcher-by-id spt-next-launcher 1164)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1164
  :init-specs ((sp-flt spt-fade-a -0.53333336))
  )

(defpart 1181
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x13 :page #x3d3))
    (sp-flt spt-num 1.0)
    (sp-sound (static-sound-spec "radar-sweep" :volume 50.0))
    (sp-flt spt-scale-x (meters 5))
    (sp-flt spt-rot-x 16384.0)
    (sp-flt spt-rot-y (degrees -5.0))
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 255.0)
    (sp-flt spt-g 255.0)
    (sp-flt spt-b 255.0)
    (sp-flt spt-a 80.0)
    (sp-flt spt-rotvel-y (degrees -0.6))
    (sp-int spt-timer 600)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1182
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x14 :page #x3d3))
    (sp-flt spt-num 1.0)
    (sp-rnd-flt spt-scale-x (meters 3) (meters 1.5) 1.0)
    (sp-flt spt-rot-x 16384.0)
    (sp-flt spt-rot-y (degrees -5.0))
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 255.0)
    (sp-flt spt-g 255.0)
    (sp-flt spt-b 255.0)
    (sp-flt spt-a 64.0)
    (sp-rnd-flt spt-rotvel-y (degrees 0.33333334) (degrees 0.26666668) 1.0)
    (sp-int-plain-rnd spt-timer 40 159 1)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpartgroup group-vinroom-tv-threebar-1
  :id 249
  :flags (unk-4)
  :bounds (static-bspherem 0 0 0 16)
  :parts ((sp-item 1184 :fade-after (meters 100) :flags (is-3d bit7))
    (sp-item 1185 :fade-after (meters 60) :flags (bit6 bit7))
    )
  )

(defpart 1185
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xca :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-x (meters 0))
    (sp-flt spt-y (meters 0))
    (sp-flt spt-z (meters 0))
    (sp-flt spt-scale-x (meters 16))
    (sp-flt spt-rot-x 2048.0)
    (sp-flt spt-scale-y (meters 8))
    (sp-flt spt-r 0.0)
    (sp-rnd-flt spt-g 192.0 64.0 1.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 16.0 1.0 1.0)
    (sp-flt spt-omega 248627.2)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 2048.0)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpartgroup group-vinroom-tv-threebar-2
  :id 250
  :flags (unk-4)
  :bounds (static-bspherem 0 0 0 16)
  :parts ((sp-item 1186 :fade-after (meters 100) :flags (is-3d bit7) :period 80 :length 5)
    (sp-item 1187 :fade-after (meters 100) :flags (is-3d bit7))
    (sp-item 1188 :fade-after (meters 100) :flags (is-3d bit7))
    (sp-item 1189 :fade-after (meters 60) :flags (bit6 bit7))
    )
  )

(defpart 1189
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xca :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-x (meters 0))
    (sp-flt spt-y (meters 0))
    (sp-flt spt-z (meters 0))
    (sp-flt spt-scale-x (meters 16))
    (sp-flt spt-rot-x 2048.0)
    (sp-flt spt-scale-y (meters 8))
    (sp-flt spt-r 0.0)
    (sp-rnd-flt spt-g 192.0 64.0 1.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 16.0 1.0 1.0)
    (sp-flt spt-omega 248627.2)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 2048.0)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpartgroup group-vinroom-tv-threebar-3
  :id 251
  :flags (unk-4)
  :bounds (static-bspherem 0 0 0 16)
  :parts ((sp-item 1190 :fade-after (meters 100) :flags (is-3d bit7) :period 1200 :length 5 :offset 650)
    (sp-item 1191 :fade-after (meters 60) :flags (bit6 bit7))
    )
  )

(defpart 1191
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xca :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-x (meters 0))
    (sp-flt spt-y (meters 0))
    (sp-flt spt-z (meters 0))
    (sp-flt spt-scale-x (meters 8))
    (sp-flt spt-rot-x 2048.0)
    (sp-flt spt-scale-y (meters 8))
    (sp-flt spt-r 0.0)
    (sp-rnd-flt spt-g 192.0 64.0 1.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 16.0 1.0 1.0)
    (sp-flt spt-omega 248627.2)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 2048.0)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1190
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x12 :page #x3d3))
    (sp-flt spt-num 1.0)
    (sp-flt spt-scale-x (meters 1.4))
    (sp-flt spt-rot-x 16384.0)
    (sp-flt spt-scale-y (meters 2.8))
    (sp-flt spt-r 255.0)
    (sp-flt spt-g 255.0)
    (sp-flt spt-b 255.0)
    (sp-flt spt-a 0.0)
    (sp-flt spt-fade-a 0.4)
    (sp-int spt-timer 160)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat)
    (sp-int spt-next-time 80)
    (sp-launcher-by-id spt-next-launcher 1192)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1192
  :init-specs ((sp-flt spt-fade-a -0.4))
  )

(defpart 1184
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xa :page #x3d3))
    (sp-func spt-birth-func 'birth-func-texture-group)
    (sp-flt spt-num 0.5)
    (sp-flt spt-y (meters 2.2))
    (sp-flt spt-scale-x (meters 2))
    (sp-flt spt-rot-x 16384.0)
    (sp-flt spt-scale-y (meters 0.2))
    (sp-flt spt-r 128.0)
    (sp-flt spt-g 128.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 64.0 32.0 1.0)
    (sp-flt spt-vel-y (meters -0.019166667))
    (sp-flt spt-vel-z (meters 0.00041666668))
    (sp-int spt-timer 235)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat)
    (new 'static 'sp-field-init-spec
      :field (sp-field-id spt-userdata)
      :flags (sp-flag plain-v2)
      :object (new 'static 'boxed-array :type int32
        5
        1
        0
        #x3d300a00
        #x3d300b00
        #x3d300c00
        #x3d300d00
        #x3d300e00
        #x3d300f00
        #x3d301000
        #x3d301100
        )
      )
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1188
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xa :page #x3d3))
    (sp-func spt-birth-func 'birth-func-texture-group)
    (sp-flt spt-num 0.25)
    (sp-flt spt-y (meters 2.2))
    (sp-flt spt-scale-x (meters 2))
    (sp-flt spt-rot-x 16384.0)
    (sp-flt spt-scale-y (meters 0.2))
    (sp-flt spt-r 128.0)
    (sp-flt spt-g 128.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 64.0 32.0 1.0)
    (sp-flt spt-vel-y (meters -0.0095833335))
    (sp-flt spt-vel-z (meters 0.00020833334))
    (sp-int spt-timer 480)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat)
    (new 'static 'sp-field-init-spec
      :field (sp-field-id spt-userdata)
      :flags (sp-flag plain-v2)
      :object (new 'static 'boxed-array :type int32
        5
        1
        0
        #x3d300a00
        #x3d300b00
        #x3d300c00
        #x3d300d00
        #x3d300e00
        #x3d300f00
        #x3d301000
        #x3d301100
        )
      )
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1186
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x1b :page #x3d3))
    (sp-flt spt-num 1.0)
    (sp-flt spt-scale-x (meters 5.4))
    (sp-flt spt-rot-x 16019.911)
    (sp-flt spt-rot-y (degrees 1.0))
    (sp-flt spt-scale-y (meters 4.4))
    (sp-flt spt-r 255.0)
    (sp-flt spt-g 255.0)
    (sp-flt spt-b 255.0)
    (sp-flt spt-a 16.0)
    (sp-int spt-timer 80)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat)
    (new 'static 'sp-field-init-spec
      :field (sp-field-id spt-userdata)
      :flags (sp-flag plain-v2)
      :object (new 'static 'boxed-array :type int32
        5
        0
        0
        #x3d301b00
        #x3d301c00
        #x3d301d00
        #x3d301e00
        #x3d301f00
        #x3d302000
        #x3d302100
        #x3d302200
        #x3d302300
        #x3d302400
        #x3d302500
        #x3d302600
        #x3d302700
        #x3d302800
        #x3d302900
        #x3d302a00
        )
      )
    (sp-func spt-func 'sparticle-texture-animate)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1187
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x9 :page #x3d3))
    (sp-rnd-flt spt-num 0.0 0.3 1.0)
    (sp-flt spt-scale-x (meters 0))
    (sp-flt spt-rot-x 16019.911)
    (sp-flt spt-rot-y (degrees 1.0))
    (sp-flt spt-scale-y (meters 0))
    (sp-flt spt-r 255.0)
    (sp-flt spt-g 255.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 16.0 16.0 1.0)
    (sp-flt spt-scalevel-x (meters 0.036250003))
    (sp-flt spt-scalevel-y (meters 0.030000001))
    (sp-int spt-timer 160)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat)
    (sp-int spt-next-time 100)
    (sp-launcher-by-id spt-next-launcher 1164)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpartgroup group-vinroom-tv-splitdots
  :id 252
  :flags (unk-4)
  :bounds (static-bspherem 0 0 0 16)
  :parts ((sp-item 1193 :fade-after (meters 100) :flags (is-3d bit7) :period 80 :length 5)
    (sp-item 1194 :fade-after (meters 100) :flags (is-3d bit7))
    (sp-item 1195 :fade-after (meters 100) :flags (is-3d bit7))
    (sp-item 1196 :fade-after (meters 100) :flags (bit7))
    (sp-item 1197 :fade-after (meters 60) :flags (bit6 bit7))
    )
  )

(defpart 1197
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xca :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-x (meters 0))
    (sp-flt spt-y (meters 0))
    (sp-flt spt-z (meters 0))
    (sp-flt spt-scale-x (meters 20))
    (sp-flt spt-rot-x 4096.0)
    (sp-flt spt-scale-y (meters 16))
    (sp-flt spt-r 0.0)
    (sp-rnd-flt spt-g 192.0 64.0 1.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 16.0 1.0 1.0)
    (sp-flt spt-omega 248627.2)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 2048.0)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1196
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x13 :page #xc))
    (sp-rnd-flt spt-num 0.0 10.0 1.0)
    (sp-rnd-int-flt spt-y (meters -3.7) 28 1024.0)
    (sp-flt spt-scale-x (meters 0.2))
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 255.0)
    (sp-flt spt-g 255.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 64.0 64.0 1.0)
    (sp-rnd-int-flt spt-vel-x (meters -0.013333334) 1 109.22667)
    (sp-flt spt-fade-a -1.6)
    (sp-int spt-timer 80)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1195
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x13 :page #xc))
    (sp-rnd-flt spt-num 0.0 0.3 1.0)
    (sp-flt spt-y (meters -0.2))
    (sp-flt spt-scale-x (meters 0))
    (sp-flt spt-rot-x 16384.0)
    (sp-flt spt-scale-y (meters 0))
    (sp-flt spt-r 255.0)
    (sp-flt spt-g 255.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 16.0 16.0 1.0)
    (sp-flt spt-scalevel-x (meters 0.025))
    (sp-flt spt-scalevel-y (meters 0.025))
    (sp-int spt-timer 160)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat)
    (sp-int spt-next-time 100)
    (sp-launcher-by-id spt-next-launcher 1164)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1194
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x9 :page #x3d3))
    (sp-rnd-flt spt-num 0.0 0.3 1.0)
    (sp-flt spt-y (meters -0.2))
    (sp-flt spt-scale-x (meters 0))
    (sp-flt spt-rot-x 16384.0)
    (sp-flt spt-scale-y (meters 0))
    (sp-flt spt-r 255.0)
    (sp-flt spt-g 255.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 16.0 32.0 1.0)
    (sp-flt spt-scalevel-x (meters 0.021875))
    (sp-flt spt-scalevel-y (meters 0.058125))
    (sp-int spt-timer 160)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat)
    (sp-int spt-next-time 100)
    (sp-launcher-by-id spt-next-launcher 1135)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1193
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x1b :page #x3d3))
    (sp-flt spt-num 1.0)
    (sp-flt spt-y (meters -0.2))
    (sp-flt spt-scale-x (meters 3))
    (sp-flt spt-rot-x 16201.955)
    (sp-flt spt-scale-y (meters 7.4))
    (sp-flt spt-r 255.0)
    (sp-flt spt-g 255.0)
    (sp-flt spt-b 255.0)
    (sp-flt spt-a 16.0)
    (sp-int spt-timer 80)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat)
    (new 'static 'sp-field-init-spec
      :field (sp-field-id spt-userdata)
      :flags (sp-flag plain-v2)
      :object (new 'static 'boxed-array :type int32
        5
        0
        0
        #x3d301b00
        #x3d301c00
        #x3d301d00
        #x3d301e00
        #x3d301f00
        #x3d302000
        #x3d302100
        #x3d302200
        #x3d302300
        #x3d302400
        #x3d302500
        #x3d302600
        #x3d302700
        #x3d302800
        #x3d302900
        #x3d302a00
        )
      )
    (sp-func spt-func 'sparticle-texture-animate)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpartgroup group-vinroom-tv-smallradar
  :id 253
  :flags (unk-4)
  :bounds (static-bspherem 0 0 0 16)
  :parts ((sp-item 1198 :fade-after (meters 100) :flags (is-3d bit7))
    (sp-item 1199 :fade-after (meters 100) :flags (is-3d bit7) :period 600 :length 5)
    (sp-item 1200 :fade-after (meters 60) :flags (bit6 bit7))
    )
  )

(defpart 1200
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xca :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-x (meters 0))
    (sp-flt spt-y (meters 0))
    (sp-flt spt-z (meters 0))
    (sp-flt spt-scale-x (meters 12))
    (sp-flt spt-rot-x 2048.0)
    (sp-flt spt-scale-y (meters 8))
    (sp-flt spt-r 0.0)
    (sp-rnd-flt spt-g 192.0 64.0 1.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 16.0 1.0 1.0)
    (sp-flt spt-omega 248627.2)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 2048.0)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1199
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x13 :page #x3d3))
    (sp-flt spt-num 1.0)
    (sp-sound (static-sound-spec "radar-sweep" :volume 50.0))
    (sp-flt spt-scale-x (meters 3.5))
    (sp-flt spt-rot-x 16384.0)
    (sp-flt spt-rot-y (degrees -2.0))
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 255.0)
    (sp-flt spt-g 255.0)
    (sp-flt spt-b 255.0)
    (sp-flt spt-a 80.0)
    (sp-flt spt-rotvel-y (degrees -0.6))
    (sp-int spt-timer 600)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1198
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x9 :page #x3d3))
    (sp-rnd-flt spt-num 0.0 0.3 1.0)
    (sp-flt spt-scale-x (meters 0))
    (sp-flt spt-rot-x 16384.0)
    (sp-flt spt-rot-y (degrees -2.0))
    (sp-flt spt-scale-y (meters 0))
    (sp-flt spt-r 255.0)
    (sp-flt spt-g 255.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 16.0 32.0 1.0)
    (sp-flt spt-scalevel-x (meters 0.021875))
    (sp-flt spt-scalevel-y (meters 0.0375))
    (sp-int spt-timer 160)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat)
    (sp-int spt-next-time 100)
    (sp-launcher-by-id spt-next-launcher 1135)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpartgroup group-vinroom-tv-final
  :id 254
  :flags (unk-4)
  :bounds (static-bspherem 0 0 0 16)
  :parts ((sp-item 1201 :fade-after (meters 100) :flags (is-3d bit7))
    (sp-item 1202 :fade-after (meters 100) :flags (is-3d bit7))
    (sp-item 1203 :fade-after (meters 60) :flags (bit6 bit7))
    )
  )

(defpart 1203
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xca :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-x (meters 0))
    (sp-flt spt-y (meters 0))
    (sp-flt spt-z (meters 0))
    (sp-flt spt-scale-x (meters 14))
    (sp-flt spt-rot-x 2048.0)
    (sp-flt spt-scale-y (meters 10))
    (sp-flt spt-r 0.0)
    (sp-rnd-flt spt-g 192.0 64.0 1.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 16.0 1.0 1.0)
    (sp-flt spt-omega 248627.2)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 2048.0)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1202
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x26 :page #xc))
    (sp-rnd-flt spt-num 0.0 0.3 1.0)
    (sp-flt spt-y (meters -0.2))
    (sp-flt spt-scale-x (meters 0))
    (sp-flt spt-rot-x 16384.0)
    (sp-flt spt-scale-y (meters 0))
    (sp-flt spt-r 255.0)
    (sp-flt spt-g 255.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 16.0 32.0 1.0)
    (sp-flt spt-scalevel-x (meters 0.021875))
    (sp-flt spt-scalevel-y (meters 0.03125))
    (sp-int spt-timer 160)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat)
    (sp-int spt-next-time 100)
    (sp-launcher-by-id spt-next-launcher 1135)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1201
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x9 :page #x3d3))
    (sp-rnd-flt spt-num 0.0 0.3 1.0)
    (sp-flt spt-y (meters -0.2))
    (sp-flt spt-scale-x (meters 0))
    (sp-flt spt-rot-x 16384.0)
    (sp-flt spt-scale-y (meters 0))
    (sp-flt spt-r 255.0)
    (sp-flt spt-g 255.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 16.0 32.0 1.0)
    (sp-flt spt-scalevel-x (meters 0.021875))
    (sp-flt spt-scalevel-y (meters 0.04375))
    (sp-int spt-timer 160)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat)
    (sp-int spt-next-time 100)
    (sp-launcher-by-id spt-next-launcher 1135)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpartgroup group-vinroom-center-sphere
  :id 255
  :bounds (static-bspherem 0 3 0 64)
  :parts ((sp-item 1205)
    (sp-item 1206 :binding 1204)
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1204 :flags (bit1 start-dead launch-asap))
    (sp-item 1207 :flags (bit6))
    )
  )

(defpart 1205
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x9 :page #x3d3))
    (sp-flt spt-num 1.0)
    (sp-flt spt-y (meters 6))
    (sp-flt spt-scale-x (meters 3.15))
    (sp-copy-from-other spt-scale-y -4)
    (sp-rnd-flt spt-r 0.0 32.0 1.0)
    (sp-flt spt-g 255.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 100.0 28.0 1.0)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-4)
    (sp-flt spt-userdata 0.0)
    )
  )

(defpart 1207
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xca :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-y (meters 6))
    (sp-flt spt-scale-x (meters 8))
    (sp-flt spt-rot-x 8192.0)
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 0.0)
    (sp-flt spt-g 192.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 24.0 1.0 1.0)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-4 glow)
    (sp-flt spt-userdata 0.0)
    )
  )

(defpart 1206
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xc9 :page #xc))
    (sp-flt spt-num 0.5)
    (sp-rnd-flt spt-y (meters 4.5) (meters 3) 1.0)
    (sp-flt spt-scale-x (meters 0.1))
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 0.0)
    (sp-flt spt-g 0.0)
    (sp-flt spt-b 0.0)
    (sp-flt spt-a 128.0)
    (sp-int spt-timer 1200)
    (sp-cpuinfo-flags sp-cpuinfo-flag-3)
    )
  )

(defun birth-func-vinroom-sphere ((arg0 sparticle-system)
                         (arg1 sparticle-cpuinfo)
                         (arg2 sprite-vec-data-3d)
                         (arg3 sparticle-launcher)
                         (arg4 sparticle-launch-state)
                         )
  (let ((v1-1 (-> arg4 sprite key)))
    (when (nonzero? v1-1)
      (let ((f0-2 (+ (- 24576.0 (-> arg2 x-y-z-sx y)) (-> v1-1 origin trans y))))
        (set! (-> arg1 radius) (sqrtf (- (* (-> arg1 radius) (-> arg1 radius)) (* f0-2 f0-2))))
        )
      )
    )
  0
  (none)
  )

(defpart 1204
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x2b :page #x3d3))
    (sp-func spt-birth-func 'birth-func-vinroom-sphere)
    (sp-flt spt-num 1.0)
    (sp-rnd-flt spt-x (meters 0) (meters 160) 1.0)
    (sp-flt spt-y (meters 0))
    (sp-flt spt-z (meters 1.5))
    (sp-flt spt-scale-x (meters 0.15))
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 0.0)
    (sp-flt spt-g 192.0)
    (sp-flt spt-b 255.0)
    (sp-flt spt-a 0.0)
    (sp-rnd-flt spt-omega 0.0 655360.0 1.0)
    (sp-flt spt-vel-x (meters -0.026666667))
    (sp-flt spt-vel-y (meters 0))
    (sp-flt spt-vel-z (meters 0))
    (sp-flt spt-fade-a 6.375)
    (sp-int spt-timer 1200)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 ready-to-launch)
    (sp-int spt-next-time 80)
    (sp-launcher-by-id spt-next-launcher 1208)
    )
  )

(defpart 1208
  :init-specs ((sp-flt spt-a 255.0)
    (sp-flt spt-fade-a 0.0)
    (sp-int spt-next-time 1040)
    (sp-launcher-by-id spt-next-launcher 1209)
    )
  )

(defpart 1209
  :init-specs ((sp-flt spt-fade-a -3.1875) (sp-flt spt-accel-z 6.826667))
  )

(defpartgroup group-vinroom-console-little-red-light-1
  :id 256
  :bounds (static-bspherem 0 0 0 1)
  :parts ((sp-item 1210 :fade-after (meters 60) :flags (bit6) :period 400 :length 50))
  )

(defpartgroup group-vinroom-console-little-red-light-2
  :id 257
  :bounds (static-bspherem 0 0 0 1)
  :parts ((sp-item 1210 :fade-after (meters 60) :flags (bit6) :period 460 :length 50))
  )

(defpartgroup group-vinroom-console-little-red-light-3
  :id 258
  :bounds (static-bspherem 0 0 0 1)
  :parts ((sp-item 1210 :fade-after (meters 60) :flags (bit6) :period 510 :length 50))
  )

(defpartgroup group-vinroom-console-little-red-light-4
  :id 259
  :bounds (static-bspherem 0 0 0 1)
  :parts ((sp-item 1210 :fade-after (meters 60) :flags (bit6) :period 355 :length 50))
  )

(defpartgroup group-vinroom-console-little-red-light-5
  :id 260
  :bounds (static-bspherem 0 0 0 1)
  :parts ((sp-item 1210 :fade-after (meters 60) :flags (bit6) :period 280 :length 50))
  )

(defpartgroup group-vinroom-console-little-red-light-6
  :id 261
  :bounds (static-bspherem 0 0 0 1)
  :parts ((sp-item 1210 :fade-after (meters 60) :flags (bit6) :period 415 :length 50))
  )

(defpartgroup group-vinroom-console-little-red-light-7
  :id 262
  :bounds (static-bspherem 0 0 0 1)
  :parts ((sp-item 1210 :fade-after (meters 60) :flags (bit6) :period 470 :length 50))
  )

(defpartgroup group-vinroom-console-little-red-light-8
  :id 263
  :bounds (static-bspherem 0 0 0 1)
  :parts ((sp-item 1210 :fade-after (meters 60) :flags (bit6) :period 600 :length 50))
  )

(defpart 1210
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xbb :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-x (meters 0))
    (sp-flt spt-y (meters -0.025))
    (sp-flt spt-z (meters 0))
    (sp-rnd-flt spt-scale-x (meters 0.4) (meters 0.1) 1.0)
    (sp-flt spt-rot-x 204.8)
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 255.0)
    (sp-rnd-flt spt-g 0.0 64.0 1.0)
    (sp-flt spt-b 0.0)
    (sp-rnd-flt spt-a 32.0 4.0 1.0)
    (sp-flt spt-omega 247398.4)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 409.6)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpartgroup group-vinroom-console-blue-light-1
  :id 264
  :bounds (static-bspherem 0 0 0 1)
  :parts ((sp-item 1211 :fade-after (meters 60) :flags (bit6) :period 400 :length 50))
  )

(defpartgroup group-vinroom-console-blue-light-2
  :id 265
  :bounds (static-bspherem 0 0 0 1)
  :parts ((sp-item 1211 :fade-after (meters 60) :flags (bit6) :period 460 :length 50))
  )

(defpartgroup group-vinroom-console-blue-light-3
  :id 266
  :bounds (static-bspherem 0 0 0 1)
  :parts ((sp-item 1211 :fade-after (meters 60) :flags (bit6) :period 510 :length 50))
  )

(defpartgroup group-vinroom-console-blue-light-4
  :id 267
  :bounds (static-bspherem 0 0 0 1)
  :parts ((sp-item 1211 :fade-after (meters 60) :flags (bit6) :period 355 :length 50))
  )

(defpartgroup group-vinroom-console-blue-light-5
  :id 268
  :bounds (static-bspherem 0 0 0 1)
  :parts ((sp-item 1211 :fade-after (meters 60) :flags (bit6) :period 280 :length 50))
  )

(defpartgroup group-vinroom-console-blue-light-6
  :id 269
  :bounds (static-bspherem 0 0 0 1)
  :parts ((sp-item 1211 :fade-after (meters 60) :flags (bit6) :period 415 :length 50))
  )

(defpartgroup group-vinroom-console-blue-light-7
  :id 270
  :bounds (static-bspherem 0 0 0 1)
  :parts ((sp-item 1211 :fade-after (meters 60) :flags (bit6) :period 470 :length 50))
  )

(defpartgroup group-vinroom-console-blue-light-8
  :id 271
  :bounds (static-bspherem 0 0 0 1)
  :parts ((sp-item 1211 :fade-after (meters 60) :flags (bit6) :period 600 :length 50))
  )

(defpart 1211
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xbb :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-x (meters 0))
    (sp-flt spt-y (meters 0))
    (sp-flt spt-z (meters 0))
    (sp-rnd-flt spt-scale-x (meters 1) (meters 0.1) 1.0)
    (sp-flt spt-rot-x 204.8)
    (sp-flt spt-rot-z (degrees -17.0))
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 0.0)
    (sp-rnd-flt spt-g 128.0 64.0 1.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 32.0 4.0 1.0)
    (sp-flt spt-omega 247398.4)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 409.6)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpartgroup group-vinroom-console-orb
  :id 272
  :flags (unk-4 unk-6)
  :bounds (static-bspherem 0 0 0 1.5)
  :rotate ((degrees 0) (degrees 4) (degrees 0))
  :parts ((sp-item 1212 :fade-after (meters 80) :flags (bit6 bit7)))
  )

(defpart 1212
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xca :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-x (meters 0.05))
    (sp-flt spt-scale-x (meters 1.5))
    (sp-flt spt-rot-x 204.8)
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 0.0)
    (sp-rnd-flt spt-g 192.0 32.0 1.0)
    (sp-flt spt-b 128.0)
    (sp-rnd-flt spt-a 20.0 1.0 1.0)
    (sp-flt spt-omega 330547.2)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 2048.0)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpartgroup group-vinroom-console-top-panel
  :id 273
  :flags (unk-4 unk-6)
  :bounds (static-bspherem 0 0 0 1.5)
  :rotate ((degrees 0) (degrees 4) (degrees 0))
  :parts ((sp-item 1213 :fade-after (meters 60) :flags (bit6 bit7) :period 150 :length 100)
    (sp-item 1214 :fade-after (meters 60) :flags (bit6 bit7) :period 600 :length 200)
    (sp-item 1215 :fade-after (meters 60) :flags (bit6 bit7) :period 600 :length 200 :offset 300)
    (sp-item 1216 :fade-after (meters 60) :flags (bit6 bit7) :period 150 :length 100 :offset 300)
    (sp-item 1217 :fade-after (meters 60) :flags (bit6 bit7) :period 165 :length 100 :offset 300)
    (sp-item 1218 :fade-after (meters 60) :flags (bit6 bit7) :period 210 :length 100 :offset 300)
    )
  )

(defpart 1216
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xbb :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-x (meters -0.28))
    (sp-flt spt-y (meters 0))
    (sp-flt spt-z (meters 0.15))
    (sp-rnd-flt spt-scale-x (meters 1) (meters 0.1) 1.0)
    (sp-flt spt-rot-x 204.8)
    (sp-rnd-flt spt-scale-y (meters 0.6) (meters 0.1) 1.0)
    (sp-flt spt-r 255.0)
    (sp-rnd-flt spt-g 0.0 64.0 1.0)
    (sp-flt spt-b 0.0)
    (sp-rnd-flt spt-a 32.0 4.0 1.0)
    (sp-flt spt-omega 247398.4)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 409.6)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1217
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xbb :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-x (meters -0.28))
    (sp-flt spt-y (meters 0))
    (sp-flt spt-z (meters 0.4))
    (sp-rnd-flt spt-scale-x (meters 1) (meters 0.1) 1.0)
    (sp-flt spt-rot-x 204.8)
    (sp-rnd-flt spt-scale-y (meters 0.6) (meters 0.1) 1.0)
    (sp-flt spt-r 255.0)
    (sp-rnd-flt spt-g 0.0 64.0 1.0)
    (sp-flt spt-b 0.0)
    (sp-rnd-flt spt-a 32.0 4.0 1.0)
    (sp-flt spt-omega 247398.4)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 409.6)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1218
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xbb :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-x (meters -0.28))
    (sp-flt spt-y (meters 0))
    (sp-flt spt-z (meters 0.65))
    (sp-rnd-flt spt-scale-x (meters 1) (meters 0.1) 1.0)
    (sp-flt spt-rot-x 204.8)
    (sp-rnd-flt spt-scale-y (meters 0.6) (meters 0.1) 1.0)
    (sp-flt spt-r 255.0)
    (sp-rnd-flt spt-g 0.0 64.0 1.0)
    (sp-flt spt-b 0.0)
    (sp-rnd-flt spt-a 32.0 4.0 1.0)
    (sp-flt spt-omega 247398.4)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 409.6)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1213
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xca :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-x (meters -0.28))
    (sp-flt spt-y (meters 0))
    (sp-flt spt-z (meters -0.18))
    (sp-flt spt-scale-x (meters 0.9))
    (sp-flt spt-rot-x 204.8)
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 0.0)
    (sp-rnd-flt spt-g 192.0 32.0 1.0)
    (sp-flt spt-b 128.0)
    (sp-rnd-flt spt-a 32.0 1.0 1.0)
    (sp-flt spt-omega 247808.0)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 2048.0)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1214
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xca :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-x (meters -0.28))
    (sp-flt spt-y (meters -0.13))
    (sp-flt spt-z (meters -0.53))
    (sp-flt spt-scale-x (meters 0.5))
    (sp-flt spt-rot-x 204.8)
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 0.0)
    (sp-rnd-flt spt-g 192.0 32.0 1.0)
    (sp-flt spt-b 128.0)
    (sp-rnd-flt spt-a 32.0 1.0 1.0)
    (sp-flt spt-omega 247808.0)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 2048.0)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1215
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xca :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-x (meters -0.28))
    (sp-flt spt-y (meters 0.1))
    (sp-flt spt-z (meters -0.53))
    (sp-flt spt-scale-x (meters 0.5))
    (sp-flt spt-rot-x 204.8)
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 0.0)
    (sp-rnd-flt spt-g 192.0 32.0 1.0)
    (sp-flt spt-b 128.0)
    (sp-rnd-flt spt-a 32.0 1.0 1.0)
    (sp-flt spt-omega 247808.0)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 2048.0)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpartgroup group-vinroom-red-wall-lights
  :id 274
  :flags (unk-4)
  :bounds (static-bspherem 0 0 0 4)
  :parts ((sp-item 1219 :fade-after (meters 80) :flags (bit6 bit7))
    (sp-item 1220 :fade-after (meters 80) :flags (bit6 bit7))
    (sp-item 1221 :fade-after (meters 80) :flags (bit6 bit7))
    (sp-item 1222 :fade-after (meters 100) :flags (bit6 bit7))
    )
  )

(defpart 1219
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xbb :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-z (meters 0.2))
    (sp-rnd-flt spt-scale-x (meters 4.2) (meters 0.1) 1.0)
    (sp-flt spt-rot-x 2048.0)
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 255.0)
    (sp-rnd-flt spt-g 0.0 64.0 1.0)
    (sp-flt spt-b 0.0)
    (sp-rnd-flt spt-a 20.0 4.0 1.0)
    (sp-flt spt-omega 330547.2)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 13107.2)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1220
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xbb :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-y (meters 1.5))
    (sp-flt spt-z (meters 0.2))
    (sp-rnd-flt spt-scale-x (meters 4.2) (meters 0.1) 1.0)
    (sp-flt spt-rot-x 2048.0)
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 255.0)
    (sp-rnd-flt spt-g 0.0 64.0 1.0)
    (sp-flt spt-b 0.0)
    (sp-rnd-flt spt-a 20.0 4.0 1.0)
    (sp-flt spt-omega 330547.2)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 13107.2)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1221
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xbb :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-y (meters -1.5))
    (sp-flt spt-z (meters 0.2))
    (sp-rnd-flt spt-scale-x (meters 4.2) (meters 0.1) 1.0)
    (sp-flt spt-rot-x 2048.0)
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 255.0)
    (sp-rnd-flt spt-g 0.0 64.0 1.0)
    (sp-flt spt-b 0.0)
    (sp-rnd-flt spt-a 20.0 4.0 1.0)
    (sp-flt spt-omega 330547.2)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 13107.2)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1222
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xbb :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-z (meters 0.05))
    (sp-rnd-flt spt-scale-x (meters 12) (meters 0.1) 1.0)
    (sp-flt spt-rot-x 2048.0)
    (sp-rnd-flt spt-scale-y (meters 8) (meters 0.1) 1.0)
    (sp-flt spt-r 255.0)
    (sp-rnd-flt spt-g 0.0 64.0 1.0)
    (sp-flt spt-b 0.0)
    (sp-rnd-flt spt-a 20.0 4.0 1.0)
    (sp-flt spt-omega 412467.2)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 13107.2)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpartgroup group-vinroom-red-wall-lights-small
  :id 275
  :flags (unk-4)
  :bounds (static-bspherem 0 0 0 4)
  :parts ((sp-item 1223 :fade-after (meters 80) :flags (bit6 bit7))
    (sp-item 1224 :fade-after (meters 80) :flags (bit6 bit7))
    (sp-item 1225 :fade-after (meters 80) :flags (bit6 bit7))
    (sp-item 1226 :fade-after (meters 100) :flags (bit6 bit7))
    )
  )

(defpart 1223
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xbb :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-z (meters 0.075))
    (sp-rnd-flt spt-scale-x (meters 0.5) (meters 0.1) 1.0)
    (sp-flt spt-rot-x 204.8)
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 255.0)
    (sp-rnd-flt spt-g 0.0 64.0 1.0)
    (sp-flt spt-b 0.0)
    (sp-rnd-flt spt-a 12.0 4.0 1.0)
    (sp-flt spt-omega 330547.2)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 819.2)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1224
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xbb :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-y (meters 0.2))
    (sp-flt spt-z (meters 0.075))
    (sp-rnd-flt spt-scale-x (meters 0.5) (meters 0.1) 1.0)
    (sp-flt spt-rot-x 204.8)
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 255.0)
    (sp-rnd-flt spt-g 0.0 64.0 1.0)
    (sp-flt spt-b 0.0)
    (sp-rnd-flt spt-a 12.0 4.0 1.0)
    (sp-flt spt-omega 330547.2)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 819.2)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1225
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xbb :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-y (meters -0.2))
    (sp-flt spt-z (meters 0.075))
    (sp-rnd-flt spt-scale-x (meters 0.5) (meters 0.1) 1.0)
    (sp-flt spt-rot-x 204.8)
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 255.0)
    (sp-rnd-flt spt-g 0.0 64.0 1.0)
    (sp-flt spt-b 0.0)
    (sp-rnd-flt spt-a 12.0 4.0 1.0)
    (sp-flt spt-omega 330547.2)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 819.2)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpart 1226
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xbb :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-z (meters 0.075))
    (sp-rnd-flt spt-scale-x (meters 3) (meters 0.1) 1.0)
    (sp-flt spt-rot-x 204.8)
    (sp-rnd-flt spt-scale-y (meters 2) (meters 0.1) 1.0)
    (sp-flt spt-r 255.0)
    (sp-rnd-flt spt-g 0.0 64.0 1.0)
    (sp-flt spt-b 0.0)
    (sp-rnd-flt spt-a 16.0 4.0 1.0)
    (sp-flt spt-omega 412467.2)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 819.2)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )
