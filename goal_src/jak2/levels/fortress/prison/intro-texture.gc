;;-*-Lisp-*-
(in-package goal)

;; name: intro-texture.gc
;; name in dgo: intro-texture
;; dgos: PRI

;; DECOMP BEGINS

(define *jakb-prison-texture-anim-array*
  (new 'static 'texture-anim-array :type texture-anim
    (new 'static 'texture-anim
      :num-layers #x3
      :func #f
      :init-func #f
      :tex #f
      :tex-name "jak-orig-arm-formorph"
      :color (new 'static 'rgba :a #x80)
      :frame-mod 2.0
      :test (new 'static 'gs-test :ate #x1 :afail #x1 :zte #x1 :ztst (gs-ztest always))
      :alpha (new 'static 'gs-alpha :b #x1 :d #x1)
      )
    (new 'static 'texture-anim
      :num-layers #x3
      :func #f
      :init-func #f
      :tex #f
      :tex-name "jak-orig-eyebrow-formorph"
      :color (new 'static 'rgba :a #x80)
      :frame-mod 2.0
      :test (new 'static 'gs-test :ate #x1 :afail #x1 :zte #x1 :ztst (gs-ztest always))
      :alpha (new 'static 'gs-alpha :b #x1 :d #x1)
      )
    (new 'static 'texture-anim
      :num-layers #x3
      :func #f
      :init-func #f
      :tex #f
      :tex-name "jak-orig-eyelid-formorph"
      :color (new 'static 'rgba :a #x80)
      :frame-mod 2.0
      :test (new 'static 'gs-test :ate #x1 :afail #x1 :zte #x1 :ztst (gs-ztest always))
      :alpha (new 'static 'gs-alpha :b #x1 :d #x1)
      )
    (new 'static 'texture-anim
      :num-layers #x3
      :func #f
      :init-func #f
      :tex #f
      :tex-name "jak-orig-finger-formorph"
      :color (new 'static 'rgba :a #x80)
      :frame-mod 2.0
      :test (new 'static 'gs-test :ate #x1 :afail #x1 :zte #x1 :ztst (gs-ztest always))
      :alpha (new 'static 'gs-alpha :b #x1 :d #x1)
      )
    (new 'static 'texture-anim
      :num-layers #x3
      :func #f
      :init-func #f
      :tex #f
      :tex-name "jakb-facelft"
      :color (new 'static 'rgba :a #x80)
      :frame-mod 2.0
      :test (new 'static 'gs-test :ate #x1 :afail #x1 :zte #x1 :ztst (gs-ztest always))
      :alpha (new 'static 'gs-alpha :b #x1 :d #x1)
      )
    (new 'static 'texture-anim
      :num-layers #x3
      :func #f
      :init-func #f
      :tex #f
      :tex-name "jakb-facert"
      :color (new 'static 'rgba :a #x80)
      :frame-mod 2.0
      :test (new 'static 'gs-test :ate #x1 :afail #x1 :zte #x1 :ztst (gs-ztest always))
      :alpha (new 'static 'gs-alpha :b #x1 :d #x1)
      )
    (new 'static 'texture-anim
      :num-layers #x3
      :func #f
      :init-func #f
      :tex #f
      :tex-name "jakb-hairtrans"
      :color (new 'static 'rgba :a #x80)
      :frame-mod 2.0
      :test (new 'static 'gs-test :ate #x1 :afail #x1 :zte #x1 :ztst (gs-ztest always))
      :alpha (new 'static 'gs-alpha :b #x1 :d #x1)
      )
    )
  )

;; WARN: Return type mismatch symbol vs none.
(defun set-jakb-prison-texture-morph! ((arg0 float))
  (let ((v1-0 *jakb-prison-texture-anim-array*))
    (dotimes (a1-0 (-> v1-0 length))
      (set! (-> v1-0 array-data a1-0 frame-time) arg0)
      )
    )
  (none)
  )
