;;-*-Lisp-*-
(in-package goal)

;; name: throne-part.gc
;; name in dgo: throne-part
;; dgos: THR

;; DECOMP BEGINS

(deftype throne-part (part-spawner)
  ()
  :heap-base #x30
  :method-count-assert 16
  :size-assert         #xb0
  :flag-assert         #x10003000b0
  )


(defpartgroup group-throne-lights
  :id 1133
  :flags (unk-4)
  :bounds (static-bspherem 0 0 0 4)
  :parts ((sp-item 4905 :fade-after (meters 150) :flags (bit6 bit7)))
  )

(defpart 4905
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xbb :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-z (meters 0.15))
    (sp-rnd-flt spt-scale-x (meters 12) (meters 0.1) 1.0)
    (sp-flt spt-rot-x 204.8)
    (sp-copy-from-other spt-scale-y -4)
    (sp-rnd-flt spt-r 128.0 32.0 1.0)
    (sp-copy-from-other spt-g -1)
    (sp-rnd-flt spt-b 192.0 32.0 1.0)
    (sp-flt spt-a 10.0)
    (sp-flt spt-omega 617676.8)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 1228.8)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

(defpartgroup group-throne-side-window-small
  :id 1134
  :flags (unk-4)
  :bounds (static-bspherem 0 0 0 128)
  :parts ((sp-item 4906 :fade-after (meters 150) :falloff-to (meters 150) :flags (bit7))
    (sp-item 4907 :fade-after (meters 80) :falloff-to (meters 80) :flags (bit7))
    )
  )

(defpart 4907
  :init-specs ((sp-flt spt-num 0.4)
    (sp-rnd-flt spt-x (meters -4) (meters 8) 1.0)
    (sp-rnd-flt spt-y (meters -14) (meters 20) 1.0)
    (sp-int spt-rot-x 6)
    (sp-flt spt-r 3276.8)
    (sp-flt spt-g 2457.6)
    (sp-flt spt-b 2457.6)
    (sp-flt spt-vel-y (meters -0.02))
    (sp-flt spt-fade-b 1.6384)
    (sp-flt spt-friction 0.99)
    (sp-int spt-timer 600)
    (sp-cpuinfo-flags distort)
    (sp-int spt-next-time 50)
    (sp-launcher-by-id spt-next-launcher 4908)
    (sp-rnd-int-flt spt-rotate-y (degrees 0.0) 1 180.0)
    )
  )

(defpart 4908
  :init-specs ((sp-flt spt-fade-b -0.14894545))
  )

(defpart 4906
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xc9 :page #xc))
    (sp-rnd-flt spt-num 0.1 0.5 1.0)
    (sp-rnd-flt spt-x (meters -5) (meters 10) 1.0)
    (sp-rnd-flt spt-y (meters -17) (meters 30) 1.0)
    (sp-flt spt-scale-x (meters 1.1))
    (sp-copy-from-other spt-scale-y -4)
    (sp-rnd-flt spt-r 128.0 32.0 1.0)
    (sp-copy-from-other spt-g -1)
    (sp-rnd-flt spt-b 192.0 32.0 1.0)
    (sp-rnd-flt spt-a 32.0 64.0 1.0)
    (sp-flt spt-vel-y (meters -0.01))
    (sp-flt spt-scalevel-x (meters -0.06666667))
    (sp-flt spt-scalevel-y (meters -0.053333335))
    (sp-flt spt-friction 0.96)
    (sp-int spt-timer 600)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3)
    (new 'static 'sp-field-init-spec
      :field (sp-field-id spt-userdata)
      :flags (sp-flag plain-v2)
      :object (new 'static 'boxed-array :type int32 15 0 0 #xc0c900 #xc02100)
      )
    (sp-func spt-func 'sparticle-texture-animate)
    (sp-int spt-next-time 15)
    (sp-launcher-by-id spt-next-launcher 4909)
    (sp-rnd-int-flt spt-rotate-y (degrees 0.0) 1 180.0)
    )
  )

(defpart 4909
  :init-specs ((sp-flt spt-scale-x (meters 0.1))
    (sp-flt spt-scale-y (meters 0.3))
    (sp-flt spt-vel-y (meters -0.006666667))
    (sp-flt spt-scalevel-x (meters 0))
    (sp-flt spt-scalevel-y (meters -0.00033333333))
    (sp-flt spt-friction 0.96)
    (sp-int spt-timer 600)
    (sp-int-plain-rnd spt-next-time 450 299 1)
    (sp-launcher-by-id spt-next-launcher 4910)
    )
  )

(defpart 4910
  :init-specs ((sp-flt spt-scale-x (meters 0.1))
    (sp-flt spt-scale-y (meters 0.3))
    (sp-flt spt-vel-y (meters -0.006666667))
    (sp-flt spt-scalevel-y (meters -0.00033333333))
    (sp-flt spt-friction 0.96)
    (sp-int spt-timer 600)
    (sp-int-plain-rnd spt-next-time 450 299 1)
    (sp-launcher-by-id spt-next-launcher 4911)
    )
  )

(defpart 4911
  :init-specs ((sp-flt spt-scale-x (meters 0.1))
    (sp-flt spt-scale-y (meters 0.3))
    (sp-flt spt-vel-y (meters -0.016666668))
    (sp-flt spt-scalevel-y (meters -0.00033333333))
    (sp-flt spt-friction 0.96)
    (sp-int spt-timer 600)
    (sp-int-plain-rnd spt-next-time 450 299 1)
    (sp-launcher-by-id spt-next-launcher 4912)
    )
  )

(defpart 4912
  :init-specs ((sp-flt spt-scale-x (meters 0.1))
    (sp-flt spt-scale-y (meters 0.3))
    (sp-flt spt-vel-y (meters -0.04))
    (sp-flt spt-scalevel-y (meters -0.00033333333))
    (sp-flt spt-fade-a -0.21333334)
    (sp-flt spt-friction 0.96)
    (sp-int spt-timer 600)
    )
  )

(defpartgroup group-throne-center-window
  :id 1135
  :flags (unk-4)
  :bounds (static-bspherem 0 0 0 128)
  :parts ((sp-item 4913 :fade-after (meters 150) :falloff-to (meters 150) :flags (bit7))
    (sp-item 4914 :fade-after (meters 80) :falloff-to (meters 80) :flags (bit7))
    )
  )

(defpart 4914
  :init-specs ((sp-flt spt-num 1.5)
    (sp-rnd-flt spt-x (meters -10) (meters 20) 1.0)
    (sp-rnd-flt spt-y (meters -14) (meters 20) 1.0)
    (sp-int spt-rot-x 6)
    (sp-flt spt-r 3276.8)
    (sp-flt spt-g 2457.6)
    (sp-flt spt-b 2457.6)
    (sp-flt spt-vel-y (meters -0.02))
    (sp-flt spt-fade-b 1.6384)
    (sp-flt spt-friction 0.99)
    (sp-int spt-timer 600)
    (sp-cpuinfo-flags distort)
    (sp-int spt-next-time 50)
    (sp-launcher-by-id spt-next-launcher 4908)
    (sp-rnd-int-flt spt-rotate-y (degrees 0.0) 1 180.0)
    )
  )

(defpart 4913
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xc9 :page #xc))
    (sp-rnd-flt spt-num 0.1 1.5 1.0)
    (sp-rnd-flt spt-x (meters -12) (meters 24) 1.0)
    (sp-rnd-flt spt-y (meters -17) (meters 30) 1.0)
    (sp-flt spt-scale-x (meters 1.1))
    (sp-copy-from-other spt-scale-y -4)
    (sp-rnd-flt spt-r 128.0 32.0 1.0)
    (sp-copy-from-other spt-g -1)
    (sp-rnd-flt spt-b 192.0 32.0 1.0)
    (sp-rnd-flt spt-a 32.0 64.0 1.0)
    (sp-flt spt-vel-y (meters -0.01))
    (sp-flt spt-scalevel-x (meters -0.06666667))
    (sp-flt spt-scalevel-y (meters -0.053333335))
    (sp-flt spt-friction 0.96)
    (sp-int spt-timer 600)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3)
    (new 'static 'sp-field-init-spec
      :field (sp-field-id spt-userdata)
      :flags (sp-flag plain-v2)
      :object (new 'static 'boxed-array :type int32 15 0 0 #xc0c900 #xc02100)
      )
    (sp-func spt-func 'sparticle-texture-animate)
    (sp-int spt-next-time 15)
    (sp-launcher-by-id spt-next-launcher 4909)
    (sp-rnd-int-flt spt-rotate-y (degrees 0.0) 1 180.0)
    )
  )

(defpartgroup group-throne-top-flat-window
  :id 1136
  :flags (unk-4)
  :bounds (static-bspherem 0 0 0 128)
  :parts ((sp-item 4915 :fade-after (meters 150) :falloff-to (meters 150) :flags (bit7))
    (sp-item 4916 :fade-after (meters 80) :falloff-to (meters 80) :flags (bit7))
    )
  )

(defpart 4916
  :init-specs ((sp-flt spt-num 0.05)
    (sp-rnd-flt spt-x (meters -4) (meters 8) 1.0)
    (sp-rnd-flt spt-y (meters -4) (meters 8) 1.0)
    (sp-flt spt-z (meters 0))
    (sp-int spt-rot-x 6)
    (sp-flt spt-r 2048.0)
    (sp-flt spt-g 1433.6)
    (sp-flt spt-b 1433.6)
    (sp-flt spt-fade-b 0.8192)
    (sp-flt spt-friction 0.99)
    (sp-int spt-timer 600)
    (sp-cpuinfo-flags distort)
    (sp-int spt-next-time 50)
    (sp-launcher-by-id spt-next-launcher 4908)
    (sp-rnd-int-flt spt-rotate-y (degrees 0.0) 1 180.0)
    )
  )

(defpart 4915
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x21 :page #xc))
    (sp-rnd-flt spt-num 0.05 0.1 1.0)
    (sp-rnd-flt spt-x (meters -5) (meters 10) 1.0)
    (sp-rnd-flt spt-y (meters -5) (meters 10) 1.0)
    (sp-flt spt-z (meters 0))
    (sp-flt spt-scale-x (meters 1.2))
    (sp-copy-from-other spt-scale-y -4)
    (sp-rnd-flt spt-r 128.0 32.0 1.0)
    (sp-copy-from-other spt-g -1)
    (sp-rnd-flt spt-b 192.0 32.0 1.0)
    (sp-rnd-flt spt-a 32.0 64.0 1.0)
    (sp-flt spt-scalevel-x (meters -0.06666667))
    (sp-copy-from-other spt-scalevel-y -4)
    (sp-flt spt-friction 0.96)
    (sp-int spt-timer 600)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3)
    (new 'static 'sp-field-init-spec
      :field (sp-field-id spt-userdata)
      :flags (sp-flag plain-v2)
      :object (new 'static 'boxed-array :type int32 15 0 0 #xc0c900 #xc02100)
      )
    (sp-func spt-func 'sparticle-texture-animate)
    (sp-int spt-next-time 15)
    (sp-launcher-by-id spt-next-launcher 4917)
    (sp-rnd-int-flt spt-rotate-y (degrees 0.0) 1 180.0)
    )
  )

(defpart 4917
  :init-specs ((sp-rnd-flt spt-scale-x (meters 0.15) (meters 0.1) 1.0)
    (sp-flt spt-scale-y (meters 0.15))
    (sp-flt spt-scalevel-x (meters 0))
    (sp-flt spt-scalevel-y (meters 0))
    (sp-flt spt-fade-a -0.10666667)
    (sp-int spt-timer 1200)
    )
  )

(defpartgroup group-throne-mid-flat-window
  :id 1137
  :flags (unk-4)
  :bounds (static-bspherem 0 0 0 128)
  :parts ((sp-item 4918 :fade-after (meters 150) :falloff-to (meters 150) :flags (bit7))
    (sp-item 4919 :fade-after (meters 80) :falloff-to (meters 80) :flags (bit7))
    )
  )

(defpart 4919
  :init-specs ((sp-flt spt-num 0.1)
    (sp-rnd-flt spt-x (meters -3) (meters 6) 1.0)
    (sp-rnd-flt spt-y (meters -4) (meters 8) 1.0)
    (sp-flt spt-z (meters 0))
    (sp-int spt-rot-x 6)
    (sp-flt spt-r 2048.0)
    (sp-flt spt-g 1433.6)
    (sp-flt spt-b 1433.6)
    (sp-flt spt-fade-b 0.8192)
    (sp-flt spt-friction 0.99)
    (sp-int spt-timer 600)
    (sp-cpuinfo-flags distort)
    (sp-int spt-next-time 50)
    (sp-launcher-by-id spt-next-launcher 4908)
    (sp-rnd-int-flt spt-rotate-y (degrees 0.0) 1 180.0)
    )
  )

(defpart 4918
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x21 :page #xc))
    (sp-rnd-flt spt-num 0.1 0.2 1.0)
    (sp-rnd-flt spt-x (meters -4) (meters 8) 1.0)
    (sp-rnd-flt spt-y (meters -5) (meters 10) 1.0)
    (sp-flt spt-z (meters 0))
    (sp-flt spt-scale-x (meters 1.2))
    (sp-copy-from-other spt-scale-y -4)
    (sp-rnd-flt spt-r 128.0 32.0 1.0)
    (sp-copy-from-other spt-g -1)
    (sp-rnd-flt spt-b 192.0 32.0 1.0)
    (sp-rnd-flt spt-a 32.0 64.0 1.0)
    (sp-flt spt-scalevel-x (meters -0.06666667))
    (sp-copy-from-other spt-scalevel-y -4)
    (sp-flt spt-friction 0.96)
    (sp-int spt-timer 1200)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3)
    (new 'static 'sp-field-init-spec
      :field (sp-field-id spt-userdata)
      :flags (sp-flag plain-v2)
      :object (new 'static 'boxed-array :type int32 15 0 0 #xc0c900 #xc02100)
      )
    (sp-func spt-func 'sparticle-texture-animate)
    (sp-int spt-next-time 15)
    (sp-launcher-by-id spt-next-launcher 4920)
    (sp-rnd-int-flt spt-rotate-y (degrees 0.0) 1 180.0)
    )
  )

(defpart 4920
  :init-specs ((sp-rnd-flt spt-scale-x (meters 0.15) (meters 0.1) 1.0)
    (sp-flt spt-scale-y (meters 0.15))
    (sp-flt spt-scalevel-x (meters 0))
    (sp-flt spt-scalevel-y (meters 0))
    (sp-flt spt-fade-a -0.10666667)
    (sp-int spt-timer 1200)
    )
  )

(defpartgroup group-throne-diag-window
  :id 1138
  :flags (unk-4)
  :bounds (static-bspherem 0 0 0 128)
  :parts ((sp-item 4921 :fade-after (meters 150) :falloff-to (meters 150) :flags (bit7))
    (sp-item 4922 :fade-after (meters 80) :falloff-to (meters 80) :flags (bit7))
    )
  )

(defpart 4922
  :init-specs ((sp-flt spt-num 0.25)
    (sp-rnd-flt spt-x (meters -2.5) (meters 5) 1.0)
    (sp-rnd-flt spt-y (meters -4) (meters 8) 1.0)
    (sp-int spt-rot-x 6)
    (sp-flt spt-r 2048.0)
    (sp-flt spt-g 1433.6)
    (sp-flt spt-b 1433.6)
    (sp-flt spt-vel-x (meters 0.01))
    (sp-flt spt-fade-b 0.8192)
    (sp-flt spt-friction 0.99)
    (sp-int spt-timer 600)
    (sp-cpuinfo-flags distort)
    (sp-int spt-next-time 50)
    (sp-launcher-by-id spt-next-launcher 4923)
    (sp-rnd-int-flt spt-rotate-y (degrees 0.0) 1 180.0)
    )
  )

(defpart 4923
  :init-specs ((sp-flt spt-fade-b -0.074472725))
  )

(defpart 4921
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x21 :page #xc))
    (sp-rnd-flt spt-num 0.1 0.4 1.0)
    (sp-rnd-flt spt-x (meters -3) (meters 5.5) 1.0)
    (sp-rnd-flt spt-y (meters -5) (meters 10) 1.0)
    (sp-rnd-flt spt-scale-x (meters 0.1) (meters 0.1) 1.0)
    (sp-copy-from-other spt-scale-y -4)
    (sp-rnd-flt spt-r 128.0 32.0 1.0)
    (sp-copy-from-other spt-g -1)
    (sp-rnd-flt spt-b 192.0 32.0 1.0)
    (sp-rnd-flt spt-a 32.0 64.0 1.0)
    (sp-flt spt-vel-x (meters 0.006666667))
    (sp-rnd-flt spt-friction 0.95 0.03 1.0)
    (sp-int spt-timer 1200)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3)
    (new 'static 'sp-field-init-spec
      :field (sp-field-id spt-userdata)
      :flags (sp-flag plain-v2)
      :object (new 'static 'boxed-array :type int32 15 0 0 #xc0c900 #xc02100)
      )
    (sp-func spt-func 'sparticle-texture-animate)
    (sp-int spt-next-time 15)
    (sp-launcher-by-id spt-next-launcher 4924)
    (sp-rnd-int-flt spt-rotate-y (degrees 0.0) 1 180.0)
    )
  )

(defpart 4924
  :init-specs ((sp-int spt-timer 1200) (sp-int spt-next-time 600) (sp-launcher-by-id spt-next-launcher 4925))
  )

(defpart 4925
  :init-specs ((sp-rnd-flt spt-fade-a -0.21333334 -0.21333334 1.0))
  )

(defun throne-deactivate ()
  "Sets  [[*math-camera*.f]] to `10,000` meters"
  (set! (-> *math-camera* f) (meters 10000))
  0
  (none)
  )

(defun throne-activate ()
  "Sets  [[*math-camera*.f]] to `20,000` meters"
  (set! (-> *math-camera* f) (meters 20000))
  0
  (none)
  )
