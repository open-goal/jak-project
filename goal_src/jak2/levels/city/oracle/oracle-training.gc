;;-*-Lisp-*-
(in-package goal)

;; name: oracle-training.gc
;; name in dgo: oracle-training
;; dgos: ORACLE

;; DECOMP BEGINS

(set-subtask-hook!
  *game-info*
  (game-task-node city-oracle-level0-training)
  TASK_MANAGER_INIT_HOOK
  (lambda :behavior task-manager
    ()
    (set! (-> self data-float 0) (the-as float (send-event *target* 'test-pickup 7)))
    (send-event *target* 'change-mode 'darkjak #f 65)
    (set! (-> self sound-id 0)
          (add-process *gui-control* self (gui-channel message) (gui-action play) (-> self name) 81920.0 0)
          )
    (send-event *target* 'get-notify self)
    (none)
    )
  )

(set-subtask-hook!
  *game-info*
  (game-task-node city-oracle-level0-training)
  TASK_MANAGER_CLEANUP_HOOK
  (lambda :behavior task-manager
    ()
    (send-event *target* 'get-pickup 7 (-> self data-float 0))
    (send-event *target* 'change-mode 'darkjak #f 128)
    (send-event *target* 'get-notify #f)
    (set-action!
      *gui-control*
      (gui-action stop)
      (-> self sound-id 0)
      (gui-channel none)
      (gui-action none)
      (the-as string #f)
      (the-as (function gui-connection symbol) #f)
      (the-as process #f)
      )
    (close! (-> self node-info) 'event)
    (none)
    )
  )

(set-subtask-hook!
  *game-info*
  (game-task-node city-oracle-level0-training)
  TASK_MANAGER_EVENT_HOOK
  (lambda :behavior task-manager
    ((arg0 process) (arg1 int) (arg2 symbol) (arg3 event-message-block))
    (case arg2
      (('notify)
       (case (-> arg3 param 0)
         (('attack)
          (if (= (-> arg3 param 1) 16)
              (go-virtual complete)
              )
          )
         )
       )
      )
    )
  )

(set-subtask-hook!
  *game-info*
  (game-task-node city-oracle-level0-training)
  TASK_MANAGER_UPDATE_HOOK
  (lambda :behavior task-manager
    ()
    (if (and *target* (not (logtest? (focus-status dark) (-> *target* focus-status))))
        (send-event *target* 'change-mode 'darkjak #f 65)
        )
    (when (= (get-status *gui-control* (-> self sound-id 0)) (gui-status active))
      (let ((gp-1
              (new 'stack 'font-context *font-default-matrix* 32 280 0.0 (font-color default) (font-flags shadow kerning))
              )
            )
        (set! (-> gp-1 flags) (font-flags shadow kerning large))
        (let ((v1-14 gp-1))
          (set! (-> v1-14 width) (the float 440))
          )
        (let ((v1-15 gp-1))
          (set! (-> v1-15 height) (the float 80))
          )
        (let ((v1-16 gp-1))
          (set! (-> v1-16 scale) 0.7)
          )
        (let ((s5-0 print-game-text))
          (format (clear *temp-string*) (lookup-text! *common-text* (text-id oracle-tutorial-dark-bomb) #f))
          (s5-0 *temp-string* gp-1 #f 44 (bucket-id progress))
          )
        )
      )
    (none)
    )
  )

(set-subtask-hook!
  *game-info*
  (game-task-node city-oracle-level1-training)
  TASK_MANAGER_INIT_HOOK
  (lambda :behavior task-manager
    ()
    (set! (-> self data-float 0) (the-as float (send-event *target* 'test-pickup 7)))
    (send-event *target* 'change-mode 'darkjak #f 65)
    (set! (-> self sound-id 0)
          (add-process *gui-control* self (gui-channel message) (gui-action play) (-> self name) 81920.0 0)
          )
    (send-event *target* 'get-notify self)
    (none)
    )
  )

(set-subtask-hook!
  *game-info*
  (game-task-node city-oracle-level1-training)
  TASK_MANAGER_CLEANUP_HOOK
  (lambda :behavior task-manager
    ()
    (send-event *target* 'get-pickup 7 (-> self data-float 0))
    (send-event *target* 'change-mode 'darkjak #f 128)
    (send-event *target* 'get-notify #f)
    (set-action!
      *gui-control*
      (gui-action stop)
      (-> self sound-id 0)
      (gui-channel none)
      (gui-action none)
      (the-as string #f)
      (the-as (function gui-connection symbol) #f)
      (the-as process #f)
      )
    (close! (-> self node-info) 'event)
    (none)
    )
  )

(set-subtask-hook!
  *game-info*
  (game-task-node city-oracle-level1-training)
  TASK_MANAGER_EVENT_HOOK
  (lambda :behavior task-manager
    ((arg0 process) (arg1 int) (arg2 symbol) (arg3 event-message-block))
    (case arg2
      (('notify)
       (case (-> arg3 param 0)
         (('attack)
          (if (= (-> arg3 param 1) 17)
              (go-virtual complete)
              )
          )
         )
       )
      )
    )
  )

(set-subtask-hook!
  *game-info*
  (game-task-node city-oracle-level1-training)
  TASK_MANAGER_UPDATE_HOOK
  (lambda :behavior task-manager
    ()
    (if (and *target* (not (logtest? (focus-status dark) (-> *target* focus-status))))
        (send-event *target* 'change-mode 'darkjak #f 65)
        )
    (when (= (get-status *gui-control* (-> self sound-id 0)) (gui-status active))
      (let ((gp-1
              (new 'stack 'font-context *font-default-matrix* 32 280 0.0 (font-color default) (font-flags shadow kerning))
              )
            )
        (set! (-> gp-1 flags) (font-flags shadow kerning large))
        (let ((v1-14 gp-1))
          (set! (-> v1-14 width) (the float 440))
          )
        (let ((v1-15 gp-1))
          (set! (-> v1-15 height) (the float 80))
          )
        (let ((v1-16 gp-1))
          (set! (-> v1-16 scale) 0.7)
          )
        (let ((s5-0 print-game-text))
          (format (clear *temp-string*) (lookup-text! *common-text* (text-id oracle-tutorial-dark-blast) #f))
          (s5-0 *temp-string* gp-1 #f 44 (bucket-id progress))
          )
        )
      )
    (none)
    )
  )

(set-subtask-hook!
  *game-info*
  (game-task-node city-oracle-level2-training)
  TASK_MANAGER_INIT_HOOK
  (lambda :behavior task-manager
    ()
    (set! (-> self data-float 0) (the-as float (send-event *target* 'test-pickup 7)))
    (send-event *target* 'change-mode 'darkjak #f 65)
    (set! (-> self sound-id 0)
          (add-process *gui-control* self (gui-channel message) (gui-action play) (-> self name) 81920.0 0)
          )
    (send-event *target* 'get-notify self)
    (set! (-> self start-time) (current-time))
    (none)
    )
  )

(set-subtask-hook!
  *game-info*
  (game-task-node city-oracle-level2-training)
  TASK_MANAGER_CLEANUP_HOOK
  (lambda :behavior task-manager
    ()
    (send-event *target* 'get-pickup 7 (-> self data-float 0))
    (send-event *target* 'change-mode 'darkjak #f 128)
    (send-event *target* 'get-notify #f)
    (set-action!
      *gui-control*
      (gui-action stop)
      (-> self sound-id 0)
      (gui-channel none)
      (gui-action none)
      (the-as string #f)
      (the-as (function gui-connection symbol) #f)
      (the-as process #f)
      )
    (close! (-> self node-info) 'event)
    (none)
    )
  )

(set-subtask-hook!
  *game-info*
  (game-task-node city-oracle-level2-training)
  TASK_MANAGER_UPDATE_HOOK
  (lambda :behavior task-manager
    ()
    (if (and *target* (not (logtest? (focus-status dark) (-> *target* focus-status))))
        (send-event *target* 'change-mode 'darkjak #f 65)
        )
    (when (= (get-status *gui-control* (-> self sound-id 0)) (gui-status active))
      (let ((gp-1
              (new 'stack 'font-context *font-default-matrix* 32 280 0.0 (font-color default) (font-flags shadow kerning))
              )
            )
        (set! (-> gp-1 flags) (font-flags shadow kerning large))
        (let ((v1-14 gp-1))
          (set! (-> v1-14 width) (the float 440))
          )
        (let ((v1-15 gp-1))
          (set! (-> v1-15 height) (the float 80))
          )
        (let ((v1-16 gp-1))
          (set! (-> v1-16 scale) 0.7)
          )
        (let ((s5-0 print-game-text))
          (format (clear *temp-string*) (lookup-text! *common-text* (text-id oracle-tutorial-dark-invincible) #f))
          (s5-0 *temp-string* gp-1 #f 44 (bucket-id progress))
          )
        )
      )
    (none)
    )
  )

(set-subtask-hook!
  *game-info*
  (game-task-node city-oracle-level3-training)
  TASK_MANAGER_INIT_HOOK
  (lambda :behavior task-manager
    ()
    (set! (-> self data-float 0) (the-as float (send-event *target* 'test-pickup 7)))
    (send-event *target* 'change-mode 'darkjak #f 65)
    (set! (-> self sound-id 0)
          (add-process *gui-control* self (gui-channel message) (gui-action play) (-> self name) 81920.0 0)
          )
    (send-event *target* 'get-notify self)
    (none)
    )
  )

(set-subtask-hook!
  *game-info*
  (game-task-node city-oracle-level3-training)
  TASK_MANAGER_CLEANUP_HOOK
  (lambda :behavior task-manager
    ()
    (send-event *target* 'get-pickup 7 (-> self data-float 0))
    (send-event *target* 'change-mode 'darkjak #f 128)
    (send-event *target* 'get-notify #f)
    (set-action!
      *gui-control*
      (gui-action stop)
      (-> self sound-id 0)
      (gui-channel none)
      (gui-action none)
      (the-as string #f)
      (the-as (function gui-connection symbol) #f)
      (the-as process #f)
      )
    (close! (-> self node-info) 'event)
    (none)
    )
  )

(set-subtask-hook!
  *game-info*
  (game-task-node city-oracle-level3-training)
  TASK_MANAGER_EVENT_HOOK
  (lambda :behavior task-manager
    ((arg0 process) (arg1 int) (arg2 symbol) (arg3 event-message-block))
    (the-as object (case arg2
                     (('notify)
                      (case (-> arg3 param 0)
                        (('attack)
                         (if (= (-> arg3 param 1) 18)
                             #f
                             )
                         )
                        )
                      )
                     )
            )
    )
  )

(set-subtask-hook!
  *game-info*
  (game-task-node city-oracle-level3-training)
  TASK_MANAGER_UPDATE_HOOK
  (lambda :behavior task-manager
    ()
    (if (and *target* (not (logtest? (focus-status dark) (-> *target* focus-status))))
        (send-event *target* 'change-mode 'darkjak #f 65)
        )
    (when (= (get-status *gui-control* (-> self sound-id 0)) (gui-status active))
      (let ((gp-1
              (new 'stack 'font-context *font-default-matrix* 32 280 0.0 (font-color default) (font-flags shadow kerning))
              )
            )
        (set! (-> gp-1 flags) (font-flags shadow kerning large))
        (let ((v1-14 gp-1))
          (set! (-> v1-14 width) (the float 440))
          )
        (let ((v1-15 gp-1))
          (set! (-> v1-15 height) (the float 80))
          )
        (let ((v1-16 gp-1))
          (set! (-> v1-16 scale) 0.7)
          )
        (let ((s5-0 print-game-text))
          (format (clear *temp-string*) (lookup-text! *common-text* (text-id oracle-tutorial-dark-giant) #f))
          (s5-0 *temp-string* gp-1 #f 44 (bucket-id progress))
          )
        )
      )
    (none)
    )
  )
