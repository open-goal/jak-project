;;-*-Lisp-*-
(in-package goal)

;; name: ctywide-scenes.gc
;; name in dgo: ctywide-scenes
;; dgos: CWI

;; DECOMP BEGINS

(defpartgroup group-daxter-spit
  :id 187
  :duration (seconds 0.035)
  :linger-duration (seconds 1.5)
  :bounds (static-bspherem 0 0 0 2)
  :parts ((sp-item 881 :flags (bit7)) (sp-item 882 :flags (bit7)))
  )

(defpart 881
  :init-specs ((:texture (new 'static 'texture-id :page #xc))
    (:num 8.0 2.0)
    (:x (meters -0.05))
    (:scale-x (meters 0.01) (meters 0.03))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g :copy r)
    (:b :copy g)
    (:a 16.0 16.0)
    (:vel-x (meters -0.0033333334) (meters 0.006666667))
    (:vel-y (meters -0.0033333334) (meters 0.006666667))
    (:vel-z (meters 0.013333334) (meters 0.013333334))
    (:scalevel-x (meters 0.013333334) (meters 0.013333334))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.85333335 -0.85333335)
    (:accel-y (meters -0.00033333333) (meters -0.00033333333))
    (:friction 0.93 0.03)
    (:timer (seconds 0.5))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-12 use-global-acc))
    (:rotate-y (degrees 0))
    )
  )

(defpart 882
  :init-specs ((:texture (new 'static 'texture-id :index #x21 :page #xc))
    (:num 32.0 4.0)
    (:x (meters -0.05))
    (:scale-x (meters 0.01) (meters 0.005))
    (:rot-x 4)
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 128.0)
    (:b 128.0)
    (:a 16.0 32.0)
    (:omega (degrees 0.001125))
    (:vel-x (meters -0.0033333334) (meters 0.006666667))
    (:vel-y (meters -0.0033333334) (meters 0.006666667))
    (:vel-z (meters 0.013333334) (meters 0.013333334))
    (:fade-a -0.85333335)
    (:accel-y (meters -0.00033333333) (meters -0.00033333333))
    (:timer (seconds 0.25))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-12 use-global-acc))
    (:func 'sparticle-motion-blur)
    (:rotate-y (degrees 0))
    )
  )

(defpartgroup group-beer-drip
  :id 188
  :duration (seconds 0.035)
  :linger-duration (seconds 1.5)
  :bounds (static-bspherem 0 0 0 16)
  :parts ((sp-item 883) (sp-item 884) (sp-item 885))
  )

(defpart 883
  :init-specs ((:texture (new 'static 'texture-id :page #xc))
    (:num 2.0)
    (:y (meters -0.45))
    (:scale-x (meters 0.1) (meters 0.1))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g :copy r)
    (:b 128.0)
    (:a 16.0 32.0)
    (:vel-y (meters 0) (meters 0.013333334))
    (:scalevel-x (meters 0.00012499999) (meters 0.00012499999))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.6)
    (:accel-y (meters 0.0016666667))
    (:friction 0.6)
    (:timer (seconds 0.267))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-3 sp-cpuinfo-flag-12))
    (:conerot-x (degrees 0) (degrees 3600))
    (:conerot-y (degrees 0) (degrees 3600))
    (:rotate-y (degrees 0))
    (:conerot-radius (meters 0))
    )
  )

(defpart 884
  :init-specs ((:texture (new 'static 'texture-id :index #x77 :page #x45e))
    (:num 0.5)
    (:x (meters 0) (meters 0.015))
    (:y (meters 0.015) (meters -0.015))
    (:scale-x (meters 0.025) (meters 0.01))
    (:rot-x 4)
    (:scale-y :copy scale-x)
    (:r 128.0 128.0)
    (:g 128.0)
    (:b 128.0)
    (:a 16.0 16.0)
    (:omega (degrees 0.0225))
    (:vel-y (meters -0.0033333334) (meters -0.00066666666))
    (:timer (seconds 2.167))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-12 use-global-acc))
    (:func 'sparticle-motion-blur)
    (:next-time (seconds 0.385) (seconds -0.005))
    (:next-launcher 886)
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 885
  :init-specs ((:texture (new 'static 'texture-id :index #x77 :page #x45e))
    (:num 1.5)
    (:x (meters 0) (meters 0.015))
    (:y (meters 0.015) (meters -0.015))
    (:scale-x (meters 0.025) (meters 0.01))
    (:rot-x 4)
    (:scale-y :copy scale-x)
    (:r 128.0 128.0)
    (:g 128.0)
    (:b 128.0)
    (:a 32.0 64.0)
    (:omega (degrees 0.0225))
    (:vel-y (meters -0.0033333334) (meters -0.00066666666))
    (:timer (seconds 2.167))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-12 use-global-acc))
    (:func 'sparticle-motion-blur)
    (:next-time (seconds 0.4) (seconds -0.005))
    (:next-launcher 886)
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 886
  :init-specs ((:scale-x (meters 0.025) (meters 0.01))
    (:scale-y :copy scale-x)
    (:omega (degrees 0.01125))
    (:vel-x (meters -0.005) (meters 0.01))
    (:vel-y (meters 0.00066666666) (meters 0.006))
    (:vel-z (meters -0.005) (meters 0.01))
    (:fade-a -0.85333335)
    (:accel-y (meters -0.00033333333) (meters -0.00033333333))
    (:friction 0.95)
    )
  )

(defpartgroup group-ctywide-jak-bike-thruster
  :id 189
  :duration (seconds 3)
  :flags (use-local-clock unk-4)
  :bounds (static-bspherem 0 0 0 32)
  :parts ((sp-item 887 :flags (is-3d bit7))
    (sp-item 888 :flags (is-3d bit7))
    (sp-item 889 :flags (is-3d bit7))
    (sp-item 890 :flags (is-3d bit7))
    (sp-item 891 :flags (bit7))
    (sp-item 892 :flags (bit7))
    )
  )

(defpart 887
  :init-specs ((:texture (new 'static 'texture-id :index #x90 :page #xc))
    (:num 1.0)
    (:x (meters -0.15))
    (:y (meters 0.35))
    (:z (meters -2.9))
    (:scale-x (meters 0.3))
    (:rot-x 4)
    (:scale-y (meters 1))
    (:r 128.0 128.0)
    (:g 32.0 96.0)
    (:b :copy g)
    (:a 128.0 64.0)
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:rotate-y (degrees 0))
    )
  )

(defpart 888
  :init-specs ((:texture (new 'static 'texture-id :index #x90 :page #xc))
    (:num 1.0)
    (:x (meters -0.15))
    (:y (meters 0.35))
    (:z (meters -2.9))
    (:scale-x (meters 0.3))
    (:rot-x 4)
    (:rot-z (degrees 90))
    (:scale-y (meters 1))
    (:r 128.0 128.0)
    (:g 32.0 96.0)
    (:b :copy g)
    (:a 128.0 64.0)
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:rotate-y (degrees 0))
    )
  )

(defpart 891
  :init-specs ((:texture (new 'static 'texture-id :index #xca :page #xc))
    (:num 1.0)
    (:x (meters -0.15))
    (:y (meters 0.35))
    (:z (meters -3))
    (:scale-x (meters 0.625))
    (:rot-x (degrees 0.5625))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 0.0 64.0)
    (:b 0.0)
    (:a 16.0 4.0)
    (:rotvel-z (degrees 0.3))
    (:timer (seconds 0.017))
    (:flags (glow))
    (:userdata 2048.0)
    (:rotate-y (degrees 0))
    )
  )

(defpart 889
  :init-specs ((:texture (new 'static 'texture-id :index #x90 :page #xc))
    (:num 1.0)
    (:x (meters 0.15))
    (:y (meters 0.35))
    (:z (meters -2.9))
    (:scale-x (meters 0.3))
    (:rot-x 4)
    (:scale-y (meters 1))
    (:r 128.0 128.0)
    (:g 32.0 96.0)
    (:b :copy g)
    (:a 128.0 64.0)
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:rotate-y (degrees 0))
    )
  )

(defpart 890
  :init-specs ((:texture (new 'static 'texture-id :index #x90 :page #xc))
    (:num 1.0)
    (:x (meters 0.15))
    (:y (meters 0.35))
    (:z (meters -2.9))
    (:scale-x (meters 0.3))
    (:rot-x 4)
    (:rot-z (degrees 90))
    (:scale-y (meters 1))
    (:r 128.0 128.0)
    (:g 32.0 96.0)
    (:b :copy g)
    (:a 128.0 64.0)
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:rotate-y (degrees 0))
    )
  )

(defpart 892
  :init-specs ((:texture (new 'static 'texture-id :index #xca :page #xc))
    (:num 1.0)
    (:x (meters 0.15))
    (:y (meters 0.35))
    (:z (meters -3))
    (:scale-x (meters 0.625))
    (:rot-x (degrees 0.5625))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 0.0 64.0)
    (:b 0.0)
    (:a 16.0 4.0)
    (:rotvel-z (degrees 0.3))
    (:timer (seconds 0.017))
    (:flags (glow))
    (:userdata 2048.0)
    (:rotate-y (degrees 0))
    )
  )

(defpartgroup group-ctywide-errol-bike-thruster
  :id 190
  :duration (seconds 3)
  :flags (use-local-clock unk-4)
  :bounds (static-bspherem 0 0 0 32)
  :parts ((sp-item 893 :flags (is-3d bit7))
    (sp-item 894 :flags (is-3d bit7))
    (sp-item 895 :flags (is-3d bit7))
    (sp-item 896 :flags (is-3d bit7))
    (sp-item 897 :flags (bit7))
    (sp-item 898 :flags (bit7))
    )
  )

(defpart 893
  :init-specs ((:texture (new 'static 'texture-id :index #x90 :page #xc))
    (:num 1.0)
    (:x (meters -0.15))
    (:y (meters 0.35))
    (:z (meters -2.25))
    (:scale-x (meters 0.3))
    (:rot-x 4)
    (:scale-y (meters 1))
    (:r 128.0 128.0)
    (:g 32.0 96.0)
    (:b :copy g)
    (:a 128.0 64.0)
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:rotate-y (degrees 0))
    )
  )

(defpart 894
  :init-specs ((:texture (new 'static 'texture-id :index #x90 :page #xc))
    (:num 1.0)
    (:x (meters -0.15))
    (:y (meters 0.35))
    (:z (meters -2.25))
    (:scale-x (meters 0.3))
    (:rot-x 4)
    (:rot-z (degrees 90))
    (:scale-y (meters 1))
    (:r 128.0 128.0)
    (:g 32.0 96.0)
    (:b :copy g)
    (:a 128.0 64.0)
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:rotate-y (degrees 0))
    )
  )

(defpart 897
  :init-specs ((:texture (new 'static 'texture-id :index #xca :page #xc))
    (:num 1.0)
    (:x (meters -0.15))
    (:y (meters 0.35))
    (:z (meters -2.35))
    (:scale-x (meters 0.625))
    (:rot-x (degrees 0.5625))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 0.0 64.0)
    (:b 0.0)
    (:a 16.0 4.0)
    (:rotvel-z (degrees 0.3))
    (:timer (seconds 0.017))
    (:flags (glow))
    (:userdata 2048.0)
    (:rotate-y (degrees 0))
    )
  )

(defpart 895
  :init-specs ((:texture (new 'static 'texture-id :index #x90 :page #xc))
    (:num 1.0)
    (:x (meters 0.15))
    (:y (meters 0.35))
    (:z (meters -2.25))
    (:scale-x (meters 0.3))
    (:rot-x 4)
    (:scale-y (meters 1))
    (:r 128.0 128.0)
    (:g 32.0 96.0)
    (:b :copy g)
    (:a 128.0 64.0)
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:rotate-y (degrees 0))
    )
  )

(defpart 896
  :init-specs ((:texture (new 'static 'texture-id :index #x90 :page #xc))
    (:num 1.0)
    (:x (meters 0.15))
    (:y (meters 0.35))
    (:z (meters -2.25))
    (:scale-x (meters 0.3))
    (:rot-x 4)
    (:rot-z (degrees 90))
    (:scale-y (meters 1))
    (:r 128.0 128.0)
    (:g 32.0 96.0)
    (:b :copy g)
    (:a 128.0 64.0)
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:rotate-y (degrees 0))
    )
  )

(defpart 898
  :init-specs ((:texture (new 'static 'texture-id :index #xca :page #xc))
    (:num 1.0)
    (:x (meters 0.15))
    (:y (meters 0.35))
    (:z (meters -2.35))
    (:scale-x (meters 0.625))
    (:rot-x (degrees 0.5625))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 0.0 64.0)
    (:b 0.0)
    (:a 16.0 4.0)
    (:rotvel-z (degrees 0.3))
    (:timer (seconds 0.017))
    (:flags (glow))
    (:userdata 2048.0)
    (:rotate-y (degrees 0))
    )
  )

(defpartgroup group-slums-talkbox-speak
  :id 191
  :flags (unk-4 unk-6)
  :bounds (static-bspherem 0 0 0 2)
  :rotate ((degrees 90) (degrees 0) (degrees 0))
  :parts ((sp-item 899 :flags (is-3d bit6 bit7) :period (seconds 0.435) :length (seconds 0.1))
    (sp-item 899 :flags (is-3d bit6 bit7) :period (seconds 0.5) :length (seconds 0.117) :offset 5)
    (sp-item 899 :flags (is-3d bit6 bit7) :period (seconds 1.1) :length (seconds 0.085) :offset 35)
    (sp-item 899 :flags (is-3d bit6 bit7) :period (seconds 0.835) :length (seconds 0.2) :offset 15)
    (sp-item 899 :flags (is-3d bit6 bit7) :period (seconds 1.55) :length (seconds 0.25) :offset 60)
    )
  )

(defpart 899
  :init-specs ((:texture (new 'static 'texture-id :index #xcb :page #xc))
    (:num 0.0 0.3)
    (:y (meters 0.15))
    (:z (meters 0.4))
    (:scale-x (meters 0.1))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 16.0)
    (:vel-y (meters 0.0016666667) (meters 0.006666667))
    (:scalevel-x (meters 0.01) (meters 0.0033333334))
    (:scalevel-y :copy scalevel-x)
    (:timer (seconds 0.335))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 left-multiply-quat))
    (:userdata 2048.0)
    (:next-time (seconds 0.167))
    (:next-launcher 900)
    (:rotate-y (degrees 0))
    )
  )

(defpart 900
  :init-specs ((:fade-a -0.32))
  )

(defskelgroup skel-seal-of-mar-top seal-of-mar-top seal-of-mar-top-lod0-jg -1
              ((seal-of-mar-top-lod0-mg (meters 999999)))
              :bounds (static-spherem 0 0 0 1)
              :origin-joint-index 3
              )

(scene-method-16
  (new 'static 'scene
    :name "city-help-kid-intro"
    :extra #f
    :info #f
    :mask-to-clear (process-mask movie projectile)
    :entity "hal-help-kid-1"
    :art-group "scenecamera"
    :anim "city-help-kid-intro"
    :parts 34
    :command-list '((0
        (send-event "kor-3" 'hide #t)
        (send-event "kid-2" 'hide #t)
        (fma-sphere
          (nav kill-once)
          sphere
          (new 'static 'vector :x 2612019.2 :y 33177.6 :z -346521.6 :w 11059.2)
          duration
          (frame-range (new 'static 'bfloat :data 1.0) (new 'static 'bfloat :data 95.0))
          )
        (fma-sphere
          (nav kill-once)
          sphere
          (new 'static 'vector :x 2611609.5 :y 33177.6 :z -369049.6 :w 11059.2)
          duration
          (frame-range (new 'static 'bfloat :data 1.0) (new 'static 'bfloat :data 139.0))
          )
        (fma-sphere (nav kill-once) sphere (new 'static 'vector :x 2613657.5 :y 33177.6 :z -392396.8 :w 12288.0))
        (fma-sphere (nav kill-once) sphere (new 'static 'vector :x 2620211.2 :y 33177.6 :z -407552.0 :w 13107.2))
        (fma-sphere (nav kill-once) sphere (new 'static 'vector :x 2624716.8 :y 33177.6 :z -421478.4 :w 6144.0))
        (fma-sphere (nav kill-once) sphere (new 'static 'vector :x 2627993.5 :y 33177.6 :z -428032.0 :w 4915.2))
        (fma-sphere (nav kill-once) sphere (new 'static 'vector :x 2630860.8 :y 33177.6 :z -401408.0 :w 9830.4))
        (fadein (frame-time-30 10))
        )
      (1250 (fma-sphere
              (danger)
              entity
              "crimson-guard-highres"
              joint
              "main"
              danger
              (new 'static 'traffic-danger-info
                :sphere (new 'static 'sphere :r 122880.0)
                :notify-radius 245760.0
                :danger-level 1.0
                :flags (traffic-danger-flags tdf0)
                :danger-type (traffic-danger-type tdt4)
                )
              )
            )
      (2015 (fadeout (frame-time-30 5)))
      (10000 (task-close! "city-help-kid-introduction") (send-event "kor-3" 'hide #f) (send-event "kid-2" 'hide #f))
      )
    :cut-list '(57 134 201 401 513 721 830 895 1041 1141 1239 1350 1531 1601 1651 1702 1801 1911 2010)
    :wait-ground-time (seconds 1)
    :draw-target #f
    :abort #t
    :actor (new 'static 'boxed-array :type scene-actor
      (new 'static 'scene-actor
        :name "scenecamera"
        :level #f
        :art-group "skel-scenecamera"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :camera 4
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "sidekick-highres"
        :level 'ctykora
        :art-group "skel-sidekick-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "jak-highres"
        :level 'ctykora
        :art-group "skel-jak-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "kor-highres"
        :level 'ctykora
        :art-group "skel-kor-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "kid-highres"
        :level 'ctykora
        :art-group "skel-kid-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "crimson-guard-highres"
        :level 'ctykora
        :art-group "skel-crimson-guard-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "crimson-guard-lowres"
        :level 'ctykora
        :art-group "skel-crimson-guard-lowres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        :no-draw-seg #x4
        )
      (new 'static 'scene-actor
        :name "crimson-guard-lowres"
        :level 'ctykora
        :art-group "skel-crimson-guard-lowres"
        :prefix "b-"
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        :no-draw-seg #x4
        )
      )
    :load-point-obj "ctyslumb-fort"
    :end-point-obj (new 'static 'continue-point
      :name "ctyslumb-start"
      :level #f
      :flags (continue-flags change-continue)
      :trans (new 'static 'vector :x 2620227.2 :y 31333.99 :z -400654.34 :w 1.0)
      :quat (new 'static 'vector :y 0.9997 :w -0.0234)
      :camera-trans (new 'static 'vector :x 2606159.8 :y 52533.656 :z -360011.78 :w 1.0)
      :camera-rot (new 'static 'inline-array vector3s 3
        (new 'static 'vector3s :data (new 'static 'array float 3 -0.9454 0.0 -0.3258))
        (new 'static 'vector3s :data (new 'static 'array float 3 0.0583 0.9838 -0.1693))
        (new 'static 'vector3s :data (new 'static 'array float 3 0.3205 -0.179 -0.9301))
        )
      :on-goto #f
      :vis-nick 'ctyslumb
      :want (new 'static 'inline-array level-buffer-state 6
        (new 'static 'level-buffer-state :name 'ctyslumb :display? 'display :force-vis? #f :force-inside? #f)
        (new 'static 'level-buffer-state :name 'ctykora :display? 'display :force-vis? #f :force-inside? #f)
        (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
        (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
        (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
        (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
        )
      :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
      )
    :borrow '()
    :sfx-volume -1.0
    :ambient-volume -1.0
    :music-volume -1.0
    :blackout-end #t
    :peaceful #f
    :music-delay 1500.0
    :save #t
    )
  )

(scene-method-16
  (new 'static 'scene
    :name "city-help-kid-resolution"
    :extra #f
    :info #f
    :mask-to-clear (process-mask movie projectile)
    :entity "hal-help-kid-1"
    :art-group "scenecamera"
    :anim "city-help-kid-resolution"
    :parts 12
    :command-list '((1
        (send-event "kor-3" 'hide #t)
        (send-event "kid-2" 'hide #t)
        (fma-sphere (nav kill-once) sphere (new 'static 'vector :x 2610380.8 :y 33177.6 :z -382976.0 :w 11059.2))
        (fma-sphere (nav kill-once) sphere (new 'static 'vector :x 2613248.0 :y 33177.6 :z -367001.6 :w 13107.2))
        (fma-sphere
          (nav kill-once)
          sphere
          (new 'static 'vector :x 2622259.2 :y 33177.6 :z -384204.8 :w 8192.0)
          duration
          (frame-range (new 'static 'bfloat :data 1.0) (new 'static 'bfloat :data 498.0))
          )
        (fma-sphere
          (nav kill-once)
          sphere
          (new 'static 'vector :x 2613657.5 :y 33177.6 :z -353075.2 :w 7372.8)
          duration
          (frame-range (new 'static 'bfloat :data 1.0) (new 'static 'bfloat :data 705.0))
          )
        (fma-sphere (nav kill-once) sphere (new 'static 'vector :x 2599321.5 :y 33996.8 :z -361676.8 :w 7372.8))
        (send-event *traffic-manager* 'set-guard-target-level (unbox 0))
        (send-event *traffic-manager* 'set-max-alert-level (unbox 0))
        (send-event *traffic-manager* 'set-alert-level (unbox 0))
        (send-event *traffic-manager* 'set-alert-duration (unbox 10800000))
        (send-event *traffic-manager* 'deactivate-by-type (unbox 6))
        (send-event *traffic-manager* 'deactivate-by-type (unbox 18))
        (send-event *traffic-manager* 'deactivate-by-type (unbox 19))
        (fma-sphere
          (danger)
          duration
          (frame-range (new 'static 'bfloat :data 1.0) (new 'static 'bfloat :data 279.0))
          danger
          (new 'static 'traffic-danger-info
            :sphere (new 'static 'sphere :x 2605056.0 :y 40960.0 :z -372736.0 :r 122880.0)
            :notify-radius 245760.0
            :danger-level 1.0
            :flags (traffic-danger-flags tdf0)
            :danger-type (traffic-danger-type tdt4)
            )
          )
        )
      (10000 (task-close! "city-help-kid-resolution") (send-event *traffic-manager* 'restore-default-settings))
      )
    :cut-list '(68 250 298 392 498 562 705 838 905 1056)
    :wait-ground-time (seconds 1)
    :draw-target #f
    :abort #t
    :actor (new 'static 'boxed-array :type scene-actor
      (new 'static 'scene-actor
        :name "scenecamera"
        :level #f
        :art-group "skel-scenecamera"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :camera 4
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "sidekick-highres"
        :level 'ctykora
        :art-group "skel-sidekick-highres"
        :prefix ""
        :draw-frames '((min 250) (298 max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "jak-highres"
        :level 'ctykora
        :art-group "skel-jak-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "kor-highres"
        :level 'ctykora
        :art-group "skel-kor-highres"
        :prefix ""
        :draw-frames '((min 838) (905 max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "kid-highres"
        :level 'ctykora
        :art-group "skel-kid-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "atoll-hellcat"
        :level 'ctykora
        :art-group "skel-atoll-hellcat"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "crimson-guard-highres"
        :level 'ctykora
        :art-group "skel-crimson-guard-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        :no-draw-seg #x2
        )
      )
    :load-point-obj "ctyslumb-fort"
    :end-point-obj (new 'static 'continue-point
      :name "ctyslumb-start"
      :level #f
      :flags (continue-flags change-continue)
      :trans (new 'static 'vector :x 2588147.8 :y 32754.482 :z -150693.89 :w 1.0)
      :quat (new 'static 'vector :x -0.0012 :y -0.9819 :z -0.0008 :w 0.1889)
      :camera-trans (new 'static 'vector :x 2593185.8 :y 51852.492 :z -107130.88 :w 1.0)
      :camera-rot (new 'static 'inline-array vector3s 3
        (new 'static 'vector3s :data (new 'static 'array float 3 -0.9935 0.0 0.113))
        (new 'static 'vector3s :data (new 'static 'array float 3 -0.0149 0.9912 -0.1313))
        (new 'static 'vector3s :data (new 'static 'array float 3 -0.112 -0.1321 -0.9848))
        )
      :on-goto #f
      :vis-nick 'default-level
      :want (new 'static 'inline-array level-buffer-state 6
        (new 'static 'level-buffer-state :name 'ctyslumb :display? 'display :force-vis? #f :force-inside? #f)
        (new 'static 'level-buffer-state :name 'ctykora :display? 'display :force-vis? #f :force-inside? #f)
        (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
        (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
        (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
        (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
        )
      :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
      )
    :borrow '()
    :sfx-volume -1.0
    :ambient-volume -1.0
    :music-volume -1.0
    :blackout-end #t
    :peaceful #t
    :music-delay 1500.0
    :save #t
    )
  )

(scene-method-16 (new 'static 'scene
                   :name "city-protect-blimp-res"
                   :extra #f
                   :info #f
                   :mask-to-clear (process-mask movie enemy platform projectile)
                   :entity "port-turret-2"
                   :art-group "scenecamera"
                   :anim "city-protect-blimp-res"
                   :parts 5
                   :command-list '((0 (kill "port-turret-2")) (10000 (task-close! "city-protect-blimp-resolution")))
                   :cut-list '(165 210 407)
                   :wait-ground-time (seconds 1)
                   :draw-target #f
                   :abort #t
                   :actor (new 'static 'boxed-array :type scene-actor
                     (new 'static 'scene-actor
                       :name "scenecamera"
                       :level #f
                       :art-group "skel-scenecamera"
                       :prefix ""
                       :draw-frames '((min max))
                       :scissor-frames '()
                       :camera 4
                       :shadow-flags -1
                       :shadow-volume-joint #f
                       )
                     (new 'static 'scene-actor
                       :name "torn-highres"
                       :level 'portblmp
                       :art-group "skel-torn-highres"
                       :prefix ""
                       :draw-frames '((min max))
                       :scissor-frames '()
                       :flags #x1
                       :shadow-flags -1
                       :shadow-volume-joint #f
                       )
                     (new 'static 'scene-actor
                       :name "turret"
                       :level 'portblmp
                       :art-group "skel-turret"
                       :prefix ""
                       :draw-frames '((min max))
                       :scissor-frames '()
                       :flags #x1
                       :shadow-flags -1
                       :shadow-volume-joint #f
                       )
                     )
                   :load-point-obj "ctyport-turret"
                   :end-point-obj #f
                   :borrow '()
                   :sfx-volume -1.0
                   :ambient-volume -1.0
                   :music-volume -1.0
                   :blackout-end #t
                   :peaceful #t
                   :music-delay 1500.0
                   :save #t
                   )
                 )

(scene-method-16
  (new 'static 'scene
    :name "city-get-hoverboard"
    :extra #f
    :info #f
    :mask-to-clear (process-mask movie enemy platform projectile)
    :entity "scene-stage-55"
    :art-group "scenecamera"
    :anim "city-get-hoverboard"
    :parts 4
    :command-list '((0 (fadein (frame-time (new 'static 'bfloat :data 10.0)))) (10000 (task-close! "forest-scouts-get-board")))
    :cut-list '(49)
    :wait-ground-time (seconds 1)
    :draw-target #f
    :abort #t
    :actor (new 'static 'boxed-array :type scene-actor
      (new 'static 'scene-actor
        :name "scenecamera"
        :level #f
        :art-group "skel-scenecamera"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :camera 4
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "sidekick-highres"
        :level 'ljakdax
        :art-group "skel-sidekick-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "jak-highres"
        :level 'ljakdax
        :art-group "skel-jak-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "board"
        :level #f
        :art-group "skel-board"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      )
    :load-point-obj "ctyfarma-airlock-movie"
    :end-point-obj "ctyfarma-airlock"
    :borrow '()
    :sfx-volume -1.0
    :ambient-volume -1.0
    :music-volume -1.0
    :blackout-end #t
    :peaceful #t
    :music-delay 1500.0
    :save #t
    )
  )

(scene-method-16 (new 'static 'scene
                   :name "city-meet-brutter-res"
                   :extra #f
                   :info #f
                   :mask-to-clear (process-mask movie enemy platform projectile)
                   :entity "scene-stage-53"
                   :art-group "scenecamera"
                   :anim "city-meet-brutter-res"
                   :parts 6
                   :command-list '((0 (fadein (seconds (new 'static 'bfloat :data 0.0666))))
                     (303 (part-tracker
                            "group-daxter-spit"
                            entity
                            "sidekick-highres"
                            joint
                            "tongueMaster"
                            track
                            #t
                            duration
                            (frame-range (new 'static 'bfloat :data 303.0) (new 'static 'bfloat :data 306.0))
                            )
                          )
                     (320 (part-tracker
                            "group-daxter-spit"
                            entity
                            "sidekick-highres"
                            joint
                            "tongueMaster"
                            track
                            #t
                            duration
                            (frame-range (new 'static 'bfloat :data 320.0) (new 'static 'bfloat :data 323.0))
                            )
                          )
                     (330 (part-tracker
                            "group-daxter-spit"
                            entity
                            "sidekick-highres"
                            joint
                            "tongueMaster"
                            track
                            #t
                            duration
                            (frame-range (new 'static 'bfloat :data 330.0) (new 'static 'bfloat :data 332.0))
                            )
                          )
                     (348 (part-tracker
                            "group-daxter-spit"
                            entity
                            "sidekick-highres"
                            joint
                            "tongueMaster"
                            track
                            #t
                            duration
                            (frame-range (new 'static 'bfloat :data 348.0) (new 'static 'bfloat :data 350.0))
                            )
                          )
                     (357 (part-tracker
                            "group-daxter-spit"
                            entity
                            "sidekick-highres"
                            joint
                            "tongueMaster"
                            track
                            #t
                            duration
                            (frame-range (new 'static 'bfloat :data 357.0) (new 'static 'bfloat :data 357.5))
                            )
                          )
                     (648 (fadeout (seconds (new 'static 'bfloat :data 0.0666))))
                     (10000 (task-close! "city-meet-brutter-resolution"))
                     )
                   :cut-list '(35 216 300 463)
                   :wait-ground-time (seconds 1)
                   :draw-target #f
                   :abort #t
                   :actor (new 'static 'boxed-array :type scene-actor
                     (new 'static 'scene-actor
                       :name "scenecamera"
                       :level #f
                       :art-group "skel-scenecamera"
                       :prefix ""
                       :draw-frames '((min max))
                       :scissor-frames '()
                       :camera 4
                       :shadow-flags -1
                       :shadow-volume-joint #f
                       )
                     (new 'static 'scene-actor
                       :name "sidekick-highres"
                       :level 'kiosk
                       :art-group "skel-sidekick-highres"
                       :prefix ""
                       :draw-frames '((min max))
                       :scissor-frames '()
                       :flags #x1
                       :shadow-flags -1
                       :shadow-volume-joint #f
                       )
                     (new 'static 'scene-actor
                       :name "jak-highres"
                       :level 'kiosk
                       :art-group "skel-jak-highres"
                       :prefix ""
                       :draw-frames '((min max))
                       :scissor-frames '()
                       :flags #x1
                       :shadow-flags -1
                       :shadow-volume-joint #f
                       )
                     (new 'static 'scene-actor
                       :name "brutter-highres"
                       :level 'kiosk
                       :art-group "skel-brutter-highres"
                       :prefix ""
                       :draw-frames '((min max))
                       :scissor-frames '()
                       :flags #x1
                       :shadow-flags -1
                       :shadow-volume-joint #f
                       )
                     )
                   :load-point-obj "kiosk-start"
                   :end-point-obj "kiosk-start"
                   :borrow '()
                   :sfx-volume -1.0
                   :ambient-volume -1.0
                   :music-volume -1.0
                   :blackout-end #t
                   :peaceful #t
                   :music-delay 1500.0
                   :save #t
                   )
                 )

(scene-method-16 (new 'static 'scene
                   :name "city-save-lurkers-intro"
                   :extra #f
                   :info #f
                   :mask-to-clear (process-mask movie enemy platform projectile)
                   :entity "scene-stage-53"
                   :art-group "scenecamera"
                   :anim "city-save-lurkers-intro"
                   :parts 12
                   :command-list '((0 (fadein (seconds (new 'static 'bfloat :data 0.0666))))
                     (98 (part-tracker
                           "group-beer-drip"
                           entity
                           "particleman"
                           joint
                           "particleA"
                           track
                           #t
                           duration
                           (frame-range (new 'static 'bfloat :data 98.0) (new 'static 'bfloat :data 157.0))
                           )
                         )
                     (1435 (fadeout (frame-time-30 5)))
                     (10000 (task-close! "city-save-lurkers-introduction"))
                     )
                   :cut-list '(60 104 158 270 352 555 606 831 844 996 1131 1271 1300 1409)
                   :wait-ground-time (seconds 1)
                   :draw-target #f
                   :abort #t
                   :actor (new 'static 'boxed-array :type scene-actor
                     (new 'static 'scene-actor
                       :name "scenecamera"
                       :level #f
                       :art-group "skel-scenecamera"
                       :prefix ""
                       :draw-frames '((min max))
                       :scissor-frames '()
                       :camera 4
                       :shadow-flags -1
                       :shadow-volume-joint #f
                       )
                     (new 'static 'scene-actor
                       :name "particleman"
                       :level 'kiosk
                       :art-group "skel-particleman"
                       :prefix ""
                       :draw-frames '((min max))
                       :scissor-frames '()
                       :shadow-flags -1
                       :shadow-volume-joint #f
                       )
                     (new 'static 'scene-actor
                       :name "sidekick-highres"
                       :level 'kiosk
                       :art-group "skel-sidekick-highres"
                       :prefix ""
                       :draw-frames '((min max))
                       :scissor-frames '()
                       :flags #x1
                       :shadow-flags -1
                       :shadow-volume-joint #f
                       )
                     (new 'static 'scene-actor
                       :name "jak-highres"
                       :level 'kiosk
                       :art-group "skel-jak-highres"
                       :prefix ""
                       :draw-frames '((min max))
                       :scissor-frames '()
                       :flags #x1
                       :shadow-flags -1
                       :shadow-volume-joint #f
                       )
                     (new 'static 'scene-actor
                       :name "brutter-highres"
                       :level 'kiosk
                       :art-group "skel-brutter-highres"
                       :prefix ""
                       :draw-frames '((min max))
                       :scissor-frames '()
                       :flags #x1
                       :shadow-flags -1
                       :shadow-volume-joint #f
                       )
                     )
                   :load-point-obj "kiosk-start"
                   :end-point-obj "kiosk-start"
                   :borrow '()
                   :sfx-volume -1.0
                   :ambient-volume -1.0
                   :music-volume -1.0
                   :blackout-end #t
                   :peaceful #t
                   :music-delay 1500.0
                   :save #t
                   )
                 )

(scene-method-16
  (new 'static 'scene
    :name "city-errol-challenge-res"
    :extra #f
    :info #f
    :mask-to-clear (process-mask movie enemy platform projectile)
    :entity "scene-stage-70"
    :art-group "scenecamera"
    :anim "city-errol-challenge-res"
    :parts 4
    :command-list '((0 (fadein (frame-time (new 'static 'bfloat :data 2.0))) (part-tracker
                                                                 "group-ctywide-jak-bike-thruster"
                                                                 entity
                                                                 "bikea"
                                                                 joint
                                                                 "main_"
                                                                 track
                                                                 #t
                                                                 duration
                                                                 (frame-range 0 40)
                                                                 )
         )
      (315 (part-tracker
             "group-ctywide-errol-bike-thruster"
             entity
             "bikeb"
             joint
             "main_"
             track
             #t
             duration
             (frame-range 315 338)
             )
           )
      (387 (part-tracker
             "group-ctywide-errol-bike-thruster"
             entity
             "bikeb"
             joint
             "main_"
             track
             #t
             duration
             (frame-range 387 449)
             )
           )
      (445 (fadeout (frame-time-30 5)))
      (10000 (task-close! "city-errol-challenge-resolution"))
      )
    :cut-list '(38 135 195 338 387)
    :wait-ground-time (seconds 1)
    :draw-target #f
    :abort #t
    :actor (new 'static 'boxed-array :type scene-actor
      (new 'static 'scene-actor
        :name "scenecamera"
        :level #f
        :art-group "skel-scenecamera"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :camera 4
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "sidekick-highres"
        :level 'stadium
        :art-group "skel-sidekick-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "jak-highres"
        :level 'stadium
        :art-group "skel-jak-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "errol-highres"
        :level 'lerrol
        :art-group "skel-errol-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "bikea"
        :level 'lwidea
        :art-group "skel-bikea"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        :no-draw-seg #xe
        )
      (new 'static 'scene-actor
        :name "bikeb"
        :level 'lwidea
        :art-group "skel-bikeb"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        :no-draw-seg #x1e
        )
      )
    :load-point-obj "stadium-start"
    :end-point-obj (new 'static 'continue-point
      :name "stadium-start"
      :level #f
      :trans (new 'static 'vector :x 1132806.1 :y -16393.83 :z -1956527.8 :w 1.0)
      :quat (new 'static 'vector :y -0.1582 :z -0.0002 :w 0.9873)
      :camera-trans (new 'static 'vector :x 1171506.8 :y 4476.109 :z -1939225.8 :w 1.0)
      :camera-rot (new 'static 'inline-array vector3s 3
        (new 'static 'vector3s :data (new 'static 'array float 3 -0.2976 0.0 0.9546))
        (new 'static 'vector3s :data (new 'static 'array float 3 -0.1726 0.9835 -0.0538))
        (new 'static 'vector3s :data (new 'static 'array float 3 -0.9389 -0.1808 -0.2927))
        )
      :on-goto #f
      :vis-nick 'stadium
      :want (new 'static 'inline-array level-buffer-state 6
        (new 'static 'level-buffer-state :name 'stadium :display? 'display :force-vis? #f :force-inside? #f)
        (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
        (new 'static 'level-buffer-state :name 'ctygenb :display? #f :force-vis? #f :force-inside? #f)
        (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
        (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
        (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
        )
      :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'stadium1)
      )
    :borrow '((stadium 0 lerrol special) (ctywide 1 lwidea special))
    :sfx-volume -1.0
    :ambient-volume -1.0
    :music-volume -1.0
    :blackout-end #t
    :peaceful #t
    :music-delay 1500.0
    :save #t
    )
  )

(scene-method-16
  (new 'static 'scene
    :name "city-protect-slums-intro"
    :extra #f
    :info #f
    :mask-to-clear (process-mask movie enemy platform projectile)
    :entity "scene-stage-86"
    :art-group "scenecamera"
    :anim "city-protect-slums-intro"
    :parts 4
    :command-list '((0
        (fma-sphere (nav kill-once) sphere (new 'static 'vector :x 3132661.8 :y 33669.12 :z -2965708.8 :w 2048000.0))
        (fadein (frame-time-30 (new 'static 'bfloat :data 5.0)))
        (part-tracker
          "group-slums-seal-of-mar-glow"
          entity
          "seal-of-mar-top"
          joint
          "top"
          track
          #t
          duration
          (frame-range 0 375)
          )
        )
      (75 (part-tracker
            "group-slums-talkbox-speak"
            entity
            "talk-box"
            joint
            "main"
            track
            #t
            duration
            (frame-range 75 360)
            )
          )
      (372 (fadeout (frame-time-30 (new 'static 'bfloat :data 3.0))))
      (10000 (task-close! "city-protect-water-slums-get-seal") (task-close! "city-protect-water-slums-fight"))
      )
    :cut-list '()
    :wait-ground-time (seconds 1)
    :draw-target #f
    :abort #t
    :actor (new 'static 'boxed-array :type scene-actor
      (new 'static 'scene-actor
        :name "scenecamera"
        :level #f
        :art-group "skel-scenecamera"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :camera 4
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "sidekick-highres"
        :level 'ljakdax
        :art-group "skel-sidekick-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "jak-highres"
        :level 'ljakdax
        :art-group "skel-jak-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "seal-of-mar-top"
        :level 'lprotect
        :art-group "skel-seal-of-mar-top"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "talk-box"
        :level #f
        :art-group "skel-talk-box"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      )
    :load-point-obj "ctyslumc-seal-movie"
    :end-point-obj "ctyslumc-slums"
    :borrow '((ctywide 0 lprotect special))
    :sfx-volume -1.0
    :ambient-volume -1.0
    :music-volume -1.0
    :blackout-end #t
    :peaceful #t
    :music-delay 1500.0
    :save #t
    )
  )

(scene-method-16
  (new 'static 'scene
    :name "city-escort-kid-intro"
    :extra #f
    :info #f
    :mask-to-clear (process-mask movie enemy platform projectile)
    :entity "scene-stage-13"
    :art-group "scenecamera"
    :anim "city-escort-kid-intro"
    :parts 10
    :command-list '((0
        (apply ,(lambda ()
                  (let ((gp-0 (level-get *level* 'hideout)))
                    (when gp-0
                      (clear-mood-context (-> gp-0 mood-context))
                      (if #f
                          ((the-as (function mood-context symbol) #f) (-> gp-0 mood-context))
                          )
                      (set! (-> gp-0 mood-func) update-mood-copy-ctywide)
                      (set! (-> gp-0 info sky) #t)
                      )
                    )
                  (let ((gp-1 (level-get *level* 'lyskdcd)))
                    (the-as object (when gp-1
                                     (clear-mood-context (-> gp-1 mood-context))
                                     (if #f
                                         ((the-as (function mood-context symbol) #f) (-> gp-1 mood-context))
                                         )
                                     (set! (-> gp-1 mood-func) update-mood-copy-ctywide)
                                     (let ((v0-4 #t))
                                       (set! (-> gp-1 info sky) v0-4)
                                       v0-4
                                       )
                                     )
                            )
                    )
                  )
               )
        (send-event
          *traffic-manager*
          'kill-traffic-sphere
          (new 'static 'vector :x 4707533.0 :y 32768.0 :z 226918.4 :w 172032.0)
          )
        (kill "parking-spot-8" store #f)
        )
      (844 (part-tracker
             "group-hideout-bling-bling"
             entity
             "particleman"
             joint
             "particleA"
             track
             #t
             duration
             (frame-range (new 'static 'bfloat :data 844.0) (new 'static 'bfloat :data 857.0))
             )
           )
      (10000
        (apply ,(lambda ()
                  (let ((gp-0 (level-get *level* 'hideout)))
                    (when gp-0
                      (clear-mood-context (-> gp-0 mood-context))
                      (if #f
                          ((the-as (function mood-context symbol) #f) (-> gp-0 mood-context))
                          )
                      (set! (-> gp-0 mood-func) (the-as (function mood-context float int none) update-mood-hideout))
                      (set! (-> gp-0 info sky) #f)
                      )
                    )
                  (let ((gp-1 (level-get *level* 'lyskdcd)))
                    (the-as
                      object
                      (when gp-1
                        (clear-mood-context (-> gp-1 mood-context))
                        (if #f
                            ((the-as (function mood-context symbol) #f) (-> gp-1 mood-context))
                            )
                        (set! (-> gp-1 mood-func) (the-as (function mood-context float int none) update-mood-hideout))
                        (set! (-> gp-1 info sky) #f)
                        #f
                        )
                      )
                    )
                  )
               )
        (task-close! "city-escort-kid-introduction")
        )
      )
    :cut-list '(61 171 269 361 461 563 892 1012 1093 1170 740 860 941 1010)
    :wait-ground-time (seconds 1)
    :draw-target #f
    :abort #t
    :actor (new 'static 'boxed-array :type scene-actor
      (new 'static 'scene-actor
        :name "scenecamera"
        :level #f
        :art-group "skel-scenecamera"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :camera 4
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "sidekick-highres"
        :level 'lyskdcd
        :art-group "skel-sidekick-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :light-index #xa
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "jak-highres"
        :level 'lyskdcd
        :art-group "skel-jak-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :light-index #xa
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "crocadog-highres"
        :level 'lyskdcd
        :art-group "skel-crocadog-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :light-index #xa
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "kid-highres"
        :level 'lyskdcd
        :art-group "skel-kid-highres"
        :prefix ""
        :draw-frames '((min 1012))
        :scissor-frames '()
        :light-index #xa
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "youngsamos-highres"
        :level 'lyskdcd
        :art-group "skel-youngsamos-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :light-index #xa
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "particleman"
        :level 'lyskdcd
        :art-group "skel-particleman"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :light-index #xa
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      )
    :load-point-obj "escort-kid-intro"
    :end-point-obj "escort-kid-intro"
    :borrow '((ctywide 0 lkiddoge special))
    :sfx-volume -1.0
    :ambient-volume -1.0
    :music-volume -1.0
    :blackout-end #t
    :peaceful #t
    :music-delay 1500.0
    :save #t
    )
  )

(defpartgroup group-hideout-bling-bling
  :id 192
  :duration (seconds 0.017)
  :linger-duration (seconds 1.5)
  :bounds (static-bspherem 0 0 0 2)
  :parts ((sp-item 901 :flags (bit6)) (sp-item 902 :flags (bit6)))
  )

(defpart 901
  :init-specs ((:texture (new 'static 'texture-id :index #xbb :page #xc))
    (:num 1.0)
    (:scale-x (meters 0.2))
    (:rot-x (degrees 1.125))
    (:rot-z (degrees -17))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 160.0)
    (:b 64.0)
    (:a 6.0 1.0)
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 2048.0)
    )
  )

(defpart 902
  :init-specs ((:texture (new 'static 'texture-id :index #xbb :page #xc))
    (:num 1.0)
    (:scale-x (meters 0.075))
    (:rot-x (degrees 1.125))
    (:rot-z (degrees -17))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 196.0)
    (:b 196.0)
    (:a 16.0 4.0)
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 2048.0)
    )
  )

(scene-method-16
  (new 'static 'scene
    :name "ruins-tower-intro"
    :extra #f
    :info #f
    :mask-to-clear (process-mask movie enemy platform projectile)
    :entity "scene-stage-13"
    :art-group "scenecamera"
    :anim "ruins-tower-intro"
    :parts 11
    :command-list '((0
        (apply ,(lambda ()
                  (let ((gp-0 (level-get *level* 'hideout)))
                    (when gp-0
                      (clear-mood-context (-> gp-0 mood-context))
                      (if #f
                          ((the-as (function mood-context symbol) #f) (-> gp-0 mood-context))
                          )
                      (set! (-> gp-0 mood-func) update-mood-copy-ctywide)
                      (set! (-> gp-0 info sky) #t)
                      )
                    )
                  (let ((gp-1 (level-get *level* 'ltrntess)))
                    (the-as object (when gp-1
                                     (clear-mood-context (-> gp-1 mood-context))
                                     (if #f
                                         ((the-as (function mood-context symbol) #f) (-> gp-1 mood-context))
                                         )
                                     (set! (-> gp-1 mood-func) update-mood-copy-ctywide)
                                     (let ((v0-4 #t))
                                       (set! (-> gp-1 info sky) v0-4)
                                       v0-4
                                       )
                                     )
                            )
                    )
                  )
               )
        (send-event
          *traffic-manager*
          'kill-traffic-sphere
          (new 'static 'vector :x 4707533.0 :y 32768.0 :z 226918.4 :w 172032.0)
          )
        )
      (917 (part-tracker
             "group-hideout-knife-glint"
             entity
             "particleman"
             joint
             "particleA"
             track
             #t
             duration
             (frame-range (new 'static 'bfloat :data 917.0) (new 'static 'bfloat :data 972.0))
             )
           )
      (1140 (part-tracker
              "group-hideout-knife-glint"
              entity
              "particleman"
              joint
              "particleA"
              track
              #t
              duration
              (frame-range (new 'static 'bfloat :data 1140.0) (new 'static 'bfloat :data 1240.0))
              )
            )
      (10000
        (apply ,(lambda ()
                  (let ((gp-0 (level-get *level* 'hideout)))
                    (when gp-0
                      (clear-mood-context (-> gp-0 mood-context))
                      (if #f
                          ((the-as (function mood-context symbol) #f) (-> gp-0 mood-context))
                          )
                      (set! (-> gp-0 mood-func) (the-as (function mood-context float int none) update-mood-hideout))
                      (set! (-> gp-0 info sky) #f)
                      )
                    )
                  (let ((gp-1 (level-get *level* 'ltrntess)))
                    (the-as
                      object
                      (when gp-1
                        (clear-mood-context (-> gp-1 mood-context))
                        (if #f
                            ((the-as (function mood-context symbol) #f) (-> gp-1 mood-context))
                            )
                        (set! (-> gp-1 mood-func) (the-as (function mood-context float int none) update-mood-hideout))
                        (set! (-> gp-1 info sky) #f)
                        #f
                        )
                      )
                    )
                  )
               )
        (setting-pers music-volume mode 'abs value (new 'static 'bfloat) time (seconds 2))
        (task-close! "ruins-tower-introduction")
        )
      )
    :cut-list '(150 312 541 591 636 796 852 976 1007 1131)
    :wait-ground-time (seconds 1)
    :draw-target #f
    :abort #t
    :actor (new 'static 'boxed-array :type scene-actor
      (new 'static 'scene-actor
        :name "scenecamera"
        :level #f
        :art-group "skel-scenecamera"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :camera 4
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "particleman"
        :level 'ltrntess
        :art-group "skel-particleman"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "sidekick-highres"
        :level 'ltrntess
        :art-group "skel-sidekick-highres"
        :prefix ""
        :draw-frames '((214 636) (796 max))
        :scissor-frames '()
        :light-index #xa
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "jak-highres"
        :level 'ltrntess
        :art-group "skel-jak-highres"
        :prefix ""
        :draw-frames '((min 636) (796 max))
        :scissor-frames '()
        :light-index #xa
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "torn-highres"
        :level 'ltrntess
        :art-group "skel-torn-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :light-index #xa
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "tess-highres"
        :level 'ltrntess
        :art-group "skel-tess-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :light-index #xa
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      )
    :load-point-obj "ctysluma-tower-intro"
    :end-point-obj "ctysluma-tower-intro-exit"
    :borrow '()
    :sfx-volume -1.0
    :ambient-volume -1.0
    :music-volume -1.0
    :blackout-end #t
    :peaceful #t
    :music-delay 1500.0
    :save #t
    )
  )

(defpartgroup group-hideout-knife-glint
  :id 193
  :duration (seconds 0.017)
  :linger-duration (seconds 1.5)
  :bounds (static-bspherem 0 0 0 2)
  :parts ((sp-item 903 :flags (bit6)) (sp-item 904 :flags (bit6)))
  )

(defpart 903
  :init-specs ((:texture (new 'static 'texture-id :index #xbb :page #xc))
    (:num 1.0)
    (:scale-x (meters 0.3))
    (:rot-x (degrees 1.125))
    (:rot-z (degrees -17))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 6.0 1.0)
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 2048.0)
    )
  )

(defpart 904
  :init-specs ((:texture (new 'static 'texture-id :index #xbb :page #xc))
    (:num 1.0)
    (:scale-x (meters 0.1))
    (:rot-x (degrees 1.125))
    (:rot-z (degrees -17))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 16.0 4.0)
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 2048.0)
    )
  )
