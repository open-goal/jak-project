;;-*-Lisp-*-
(in-package goal)

;; name: trail-h.gc
;; name in dgo: trail-h
;; dgos: ENGINE, GAME

;; DECOMP BEGINS

(deftype trail-node (structure)
  ((next-id         int16   :offset-assert   0)
   (prev-id         int16   :offset-assert   2)
   (parent-id       int16   :offset-assert   4)
   (x               int16   :offset-assert   6)
   (z               int16   :offset-assert   8)
   (first-conn      uint16  :offset-assert  10)
   (cost-from-start uint16  :offset-assert  12)
   (cost-to-goal    uint16  :offset-assert  14)
   (flags           uint8   :offset-assert  16)
   (conn-count      uint8   :offset-assert  17)
   )
  :method-count-assert 12
  :size-assert         #x12
  :flag-assert         #xc00000012
  (:methods
    (trail-node-method-9 () none 9)
    (trail-node-method-10 () none 10)
    (trail-node-method-11 () none 11)
    )
  )


(deftype trail-visgroup (structure)
  ((first-node uint16  :offset-assert   0)
   (node-count uint8   :offset-assert   2)
   (pad        uint8   :offset-assert   3)
   )
  :method-count-assert 9
  :size-assert         #x4
  :flag-assert         #x900000004
  )


(deftype trail-conn (structure)
  ((head-id     uint16  :offset-assert   0)
   (tail-id     uint16  :offset-assert   2)
   (flags       uint8   :offset-assert   4)
   (visgroup-id uint8   :offset-assert   5)
   (cost        uint16  :offset-assert   6)
   )
  :method-count-assert 10
  :size-assert         #x8
  :flag-assert         #xa00000008
  (:methods
    (trail-conn-method-9 () none 9)
    )
  )

(deftype trail-conn-hash-cell (structure)
  ((first-conn uint16  :offset-assert   0)
   (conn-count uint8   :offset-assert   2)
   (pad        uint8   :offset-assert   3)
   )
  :method-count-assert 9
  :size-assert         #x4
  :flag-assert         #x900000004
  )

(deftype trail-conn-search (structure)
  ((best-conn-id         int32                    :offset-assert   0)
   (best-dist            float                    :offset-assert   4)
   (src-pos              vector                   :offset-assert   8)
   (conn-pos             vector                   :offset-assert  12)
   (debug-cells-searched int32                    :offset-assert  16)
   (debug-conns-searched int32                    :offset-assert  20)
   (bounds               bounding-box4w :inline   :offset-assert  32)
   (cell-quads           qword          2 :inline :offset-assert  64)
   (conn-quads           qword          7 :inline :offset-assert  96)
   (cell-bits            vector16ub     2 :inline :offset         64)
   )
  :method-count-assert 9
  :size-assert         #xd0
  :flag-assert         #x9000000d0
  )

(deftype trail-conn-hash (basic)
  ((cell-width meters         :offset-assert   4)
   (origin     vector :inline :offset-assert  16)
   (cell       uint32         :offset-assert  32)
   (conn-ids   uint32         :offset-assert  36)
   )
  :method-count-assert 9
  :size-assert         #x28
  :flag-assert         #x900000028
  )

(deftype trail-cached-search-info (structure)
  ((goal-conn-id  int16          :offset-assert   0)
   (orig-goal-pos vector :inline :offset-assert  16)
   (conn-goal-pos vector :inline :offset-assert  32)
   )
  :method-count-assert 9
  :size-assert         #x30
  :flag-assert         #x900000030
  )

(deftype trail-graph (basic)
  ((mode           uint8            :offset-assert   4)
   (search-id      uint32           :offset-assert   8)
   (open-head-id   int16            :offset-assert  12)
   (goal-conn-id   int16            :offset-assert  14)
   (goal-node-id   int16            :offset-assert  16)
   (node-count     uint16           :offset-assert  18)
   (conn-count     uint16           :offset-assert  20)
   (conn-mask      uint8            :offset-assert  22)
   (node           uint32           :offset-assert  24)
   (conn           uint32           :offset-assert  28)
   (conn-ids       uint32           :offset-assert  32)
   (visgroup       uint32           :offset-assert  36)
   (visnode-ids    uint32           :offset-assert  40)
   (conn-hash      basic            :offset-assert  44)
   (orig-start-pos vector :inline   :offset-assert  48)
   (orig-goal-pos  vector :inline   :offset-assert  64)
   (conn-start-pos vector :inline   :offset-assert  80)
   (conn-goal-pos  vector :inline   :offset-assert  96)
   (open-quads     qword  6 :inline :offset-assert 112)
   (closed-quads   qword  6 :inline :offset-assert 208)
   )
  :method-count-assert 29
  :size-assert         #x130
  :flag-assert         #x1d00000130
  (:methods
    (trail-graph-method-9 () none 9)
    (trail-graph-method-10 () none 10)
    (trail-graph-method-11 () none 11)
    (trail-graph-method-12 () none 12)
    (trail-graph-method-13 () none 13)
    (trail-graph-method-14 () none 14)
    (trail-graph-method-15 () none 15)
    (trail-graph-method-16 () none 16)
    (trail-graph-method-17 () none 17)
    (trail-graph-method-18 () none 18)
    (trail-graph-method-19 () none 19)
    (trail-graph-method-20 () none 20)
    (trail-graph-method-21 () none 21)
    (trail-graph-method-22 () none 22)
    (trail-graph-method-23 () none 23)
    (trail-graph-method-24 () none 24)
    (trail-graph-method-25 () none 25)
    (trail-graph-method-26 () none 26)
    (trail-graph-method-27 () none 27)
    (trail-graph-method-28 () none 28)
    )
  )

(define *trail-graph* (the-as trail-graph #f))




