;;-*-Lisp-*-
(in-package goal)

;; name: neon-baron-part.gc
;; name in dgo: neon-baron-part
;; dgos: CTA

;; DECOMP BEGINS

(define *baron-neon-skull*
  (new 'static 'boxed-array :type object
    (the binteger 54)
    (new 'static 'boxed-array :type object (the binteger 1) (new 'static 'array uint64 1 #x3ffffffe0f8000))
    (new 'static 'boxed-array :type object
      (the binteger 1)
      (new 'static 'vector4w :x #x40418ff :y #x100)
      (new 'static 'vector4w :x #x487f :y #x20001)
      (new 'static 'vector4w :x #x80097f)
      (new 'static 'vector4w :x #x1000887f :y #x8200)
      (new 'static 'vector4w :x #x4010087f :y #x80000)
      (new 'static 'vector4w :x #x4000a7f :y #x804)
      (new 'static 'vector4w :x #x2087f)
      (new 'static 'vector4w :x #x2000087f :y #x20440)
      (new 'static 'vector4w :x #x1000a7f :y #x1000)
      (new 'static 'vector4w :x #x287f :y #x100010)
      (new 'static 'vector4w :x #x1208087f :y #x4200)
      (new 'static 'vector4w :x #xc7f :y #x10000)
      (new 'static 'vector4w :x #x840487f :y 2)
      (new 'static 'vector4w :x #x97f :y #x420)
      (new 'static 'vector4w :x #x1087f :y #x40000)
      (new 'static 'vector4w :x #x1000c7f :y #x202080)
      (new 'static 'vector4w :x -2146957057 :y 8)
      (new 'static 'vector4w :x #x400087f :y #x8100)
      (new 'static 'vector4w :x #x10a7f :y #x100020)
      (new 'static 'vector4w :x #x2020087f)
      )
    (new 'static 'boxed-array :type object (the binteger 1) (new 'static 'vector4w :x -1073739649 :y #x3fffff))
    (new 'static 'boxed-array :type object (the binteger 1) (new 'static 'vector4w :x #x3fffffff))
    (new 'static 'boxed-array :type object
      (the binteger 1)
      (new 'static 'vector4w :x #x20007fff :y #x200000)
      (new 'static 'vector4w :x #x30007fff :y #x300000)
      (new 'static 'vector4w :x #x18007fff :y #x180000)
      (new 'static 'vector4w :x #xc007fff :y #xc0000)
      (new 'static 'vector4w :x #x6007fff :y #x60000)
      (new 'static 'vector4w :x #x2007fff :y #x30000)
      (new 'static 'vector4w :y #x18000)
      (new 'static 'vector4w :y #xc000)
      (new 'static 'vector4w :x #x1000000 :y #x6000)
      (new 'static 'vector4w :x #x1007fff :y #x3000)
      (new 'static 'vector4w :x #x7fff :y #x1800)
      (new 'static 'vector4w :x #x7fff :y #xc00)
      (new 'static 'vector4w :x #x807fff :y #x600)
      (new 'static 'vector4w :x #xc07fff :y #x300)
      (new 'static 'vector4w :x #x607fff :y #x180)
      (new 'static 'vector4w :x #x300000 :y #xc0)
      (new 'static 'vector4w :x #x100000 :y 96)
      (new 'static 'vector4w :y 48)
      (new 'static 'vector4w :x #x7fff :y 24)
      (new 'static 'vector4w :x #x87fff :y 12)
      (new 'static 'vector4w :x #xc7fff :y 6)
      (new 'static 'vector4w :x #x67fff :y 3)
      (new 'static 'vector4w :x -2147254273 :y 1)
      (new 'static 'vector4w :x -1073610753)
      (new 'static 'vector4w :x #x40008000)
      (new 'static 'vector4w)
      (new 'static 'vector4w)
      )
    (new 'static 'boxed-array :type object
      (the binteger 1)
      (new 'static 'vector4w :x #x7fffffff :y #x10410)
      (new 'static 'vector4w :x #x7fffffff :y #x10410)
      (new 'static 'vector4w :x -1073741825 :y #x20820)
      (new 'static 'vector4w :x -1073741825 :y #x20820)
      (new 'static 'vector4w :x #x3fffffff :y #x41041)
      (new 'static 'vector4w :x #x3fffffff :y #x41041)
      (new 'static 'vector4w :x #x3fffffff :y #x82082)
      (new 'static 'vector4w :x #x3fffffff :y #x82082)
      (new 'static 'vector4w :x #x3fffffff :y #x104104)
      (new 'static 'vector4w :x #x3fffffff :y #x104104)
      (new 'static 'vector4w :x #x3fffffff :y #x208208)
      (new 'static 'vector4w :x #x3fffffff :y #x208208)
      )
    (new 'static 'boxed-array :type object (the binteger 1) (new 'static 'vector4w :x #x7fff))
    (new 'static 'boxed-array :type object (the binteger 1) (new 'static 'vector4w :x #x7800))
    (new 'static 'boxed-array :type object (the binteger 1) (new 'static 'vector4w :x -1 :y #x3fffff))
    (new 'static 'boxed-array :type object (the binteger 1) (new 'static 'vector4w))
    (new 'static 'boxed-array :type object
      (the binteger 1)
      (new 'static 'vector4w)
      (new 'static 'vector4w)
      (new 'static 'vector4w)
      (new 'static 'vector4w)
      (new 'static 'vector4w)
      (new 'static 'vector4w)
      (new 'static 'vector4w)
      (new 'static 'vector4w)
      (new 'static 'vector4w)
      (new 'static 'vector4w)
      (new 'static 'vector4w)
      (new 'static 'vector4w)
      (new 'static 'vector4w)
      (new 'static 'vector4w)
      (new 'static 'vector4w)
      (new 'static 'vector4w)
      (new 'static 'vector4w)
      (new 'static 'vector4w)
      (new 'static 'vector4w)
      (new 'static 'vector4w)
      (new 'static 'vector4w :x 4)
      (new 'static 'vector4w :x 6)
      (new 'static 'vector4w :x 70)
      (new 'static 'vector4w :x 71)
      (new 'static 'vector4w :x #x847)
      (new 'static 'vector4w :x #x847)
      (new 'static 'vector4w :x #x84f)
      (new 'static 'vector4w :x #x84f)
      (new 'static 'vector4w :x #x85f)
      (new 'static 'vector4w :x #x85f)
      (new 'static 'vector4w :x #x87f)
      (new 'static 'vector4w :x #x87f)
      (new 'static 'vector4w :x #x87f)
      (new 'static 'vector4w :x #x87f)
      (new 'static 'vector4w :x #x87f)
      (new 'static 'vector4w :x #x87f)
      (new 'static 'vector4w :x #x87f)
      (new 'static 'vector4w :x #x87f)
      (new 'static 'vector4w :x #x87f)
      (new 'static 'vector4w :x #x87f)
      (new 'static 'vector4w :x #x87f)
      (new 'static 'vector4w :x #x87f)
      (new 'static 'vector4w :x #x87f)
      (new 'static 'vector4w :x #x87f)
      (new 'static 'vector4w :x #x87f)
      (new 'static 'vector4w :x #x87f)
      (new 'static 'vector4w :x #x87f)
      (new 'static 'vector4w :x #x87f)
      (new 'static 'vector4w :x #x87f)
      (new 'static 'vector4w :x #x87f)
      (new 'static 'vector4w :x #x87f)
      (new 'static 'vector4w :x #x87f)
      (new 'static 'vector4w :x #x87f)
      (new 'static 'vector4w :x #x87f)
      (new 'static 'vector4w :x #x87f)
      (new 'static 'vector4w :x #x87f)
      (new 'static 'vector4w :x #x87f)
      (new 'static 'vector4w :x #x87f)
      (new 'static 'vector4w :x #x87f)
      (new 'static 'vector4w :x #x4000087f)
      (new 'static 'vector4w :x -536868737)
      (new 'static 'vector4w :x -268433281 :y 1)
      (new 'static 'vector4w :x -134215553 :y 3)
      (new 'static 'vector4w :x -67106689 :y 7)
      (new 'static 'vector4w :x -33552257 :y 15)
      (new 'static 'vector4w :x -16775041 :y 31)
      (new 'static 'vector4w :x -16775041 :y 63)
      (new 'static 'vector4w :x -16775041 :y #x7f)
      (new 'static 'vector4w :x -16775041 :y #xff)
      (new 'static 'vector4w :x -16775041 :y #x1ff)
      (new 'static 'vector4w :x -8370049 :y #x3ff)
      (new 'static 'vector4w :x -4167553 :y #x7ff)
      (new 'static 'vector4w :x -2066305 :y #xfff)
      (new 'static 'vector4w :x -1017729 :y #x1fff)
      (new 'static 'vector4w :x -1017729 :y #x3fff)
      (new 'static 'vector4w :x -1016705 :y #x7fff)
      (new 'static 'vector4w :x -1016193 :y #xffff)
      (new 'static 'vector4w :x -1015937 :y #x1ffff)
      (new 'static 'vector4w :x -491521 :y #x3ffff)
      (new 'static 'vector4w :x -229377 :y #x7ffff)
      (new 'static 'vector4w :x -98305 :y #xfffff)
      (new 'static 'vector4w :x -32769 :y #x1fffff)
      (new 'static 'vector4w :x -1 :y #x3fffff)
      (new 'static 'vector4w :x -1 :y #x3fffff)
      (new 'static 'vector4w :x -1 :y #x3fffff)
      (new 'static 'vector4w :x -1 :y #x3fffff)
      (new 'static 'vector4w :x -1 :y #x3fffff)
      (new 'static 'vector4w :x -1 :y #x3fffff)
      (new 'static 'vector4w :x -1 :y #x3fffff)
      (new 'static 'vector4w :x -1 :y #x3fffff)
      (new 'static 'vector4w :x -1 :y #x3fffff)
      (new 'static 'vector4w :x -1 :y #x3fffff)
      (new 'static 'vector4w :x -1 :y #x3fffff)
      (new 'static 'vector4w :x -1 :y #x3fffff)
      (new 'static 'vector4w :x -1 :y #x3fffff)
      (new 'static 'vector4w :x -1 :y #x3fffff)
      (new 'static 'vector4w :x -1 :y #x3fffff)
      (new 'static 'vector4w :x -1 :y #x3fffff)
      (new 'static 'vector4w :x -1 :y #x3fffff)
      (new 'static 'vector4w :x -1 :y #x3fffff)
      (new 'static 'vector4w :x -1 :y #x3fffff)
      (new 'static 'vector4w :x -1 :y #x3fffff)
      (new 'static 'vector4w :x -1 :y #x3fffff)
      (new 'static 'vector4w :x -1 :y #x3fffff)
      (new 'static 'vector4w :x -1 :y #x3fffff)
      (new 'static 'vector4w :x -1 :y #x3fffff)
      (new 'static 'vector4w :x -1 :y #x3fffff)
      (new 'static 'vector4w :x -1 :y #x3fffff)
      (new 'static 'vector4w :x -1 :y #x3fffff)
      (new 'static 'vector4w :x -1 :y #x3fffff)
      (new 'static 'vector4w :x -1 :y #x3fffff)
      (new 'static 'vector4w :x -1 :y #x3fffff)
      (new 'static 'vector4w :x -1 :y #x3fffff)
      (new 'static 'vector4w :x -1 :y #x3fffff)
      (new 'static 'vector4w :x -1 :y #x3fffff)
      (new 'static 'vector4w :x -1 :y #x3fffff)
      (new 'static 'vector4w :x -1 :y #x3fffff)
      (new 'static 'vector4w :x -1 :y #x3fffff)
      (new 'static 'vector4w :x -1 :y #x3fffff)
      (new 'static 'vector4w :x -1 :y #x3fffff)
      )
    )
  )

(defpart 3743
  :init-specs ((:texture (new 'static 'texture-id :index #x47 :page #x3fd))
    (:num 1.0)
    (:x (meters -4))
    (:y (meters 0))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 16))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       0
                       (the binteger 133826784)
                       (the binteger 133826816)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3744
  :init-specs ((:texture (new 'static 'texture-id :index #x47 :page #x3fd))
    (:num 1.0)
    (:x (meters 4))
    (:y (meters 0))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 16))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       0
                       (the binteger 133826784)
                       (the binteger 133826816)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3745
  :init-specs ((:texture (new 'static 'texture-id :index #x45 :page #x3fd))
    (:num 1.0)
    (:x (meters -2.9))
    (:y (meters 1.7))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 16))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 1)
                       (the binteger 133826720)
                       (the binteger 133826752)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3746
  :init-specs ((:texture (new 'static 'texture-id :index #x45 :page #x3fd))
    (:num 1.0)
    (:x (meters 2.9))
    (:y (meters 1.7))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 16))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 1)
                       (the binteger 133826720)
                       (the binteger 133826752)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3747
  :init-specs ((:texture (new 'static 'texture-id :index #x3b :page #x3fd))
    (:num 1.0)
    (:x (meters -3.4))
    (:y (meters -2.3))
    (:z (meters 0))
    (:scale-x (meters 4.44))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 8.88))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 11)
                       (the binteger 133826400)
                       (the binteger 133826432)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3748
  :init-specs ((:texture (new 'static 'texture-id :index #x37 :page #x3fd))
    (:num 1.0)
    (:x (meters -3.6))
    (:y (meters -1.5))
    (:z (meters 0))
    (:scale-x (meters 4))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 12)
                       (the binteger 133826272)
                       (the binteger 133826304)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3749
  :init-specs ((:texture (new 'static 'texture-id :index #x39 :page #x3fd))
    (:num 1.0)
    (:x (meters -3.6))
    (:y (meters -2.625))
    (:z (meters 0))
    (:scale-x (meters 4))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 13)
                       (the binteger 133826336)
                       (the binteger 133826368)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3750
  :init-specs ((:texture (new 'static 'texture-id :index #x3d :page #x3fd))
    (:num 1.0)
    (:x (meters -3.6))
    (:y (meters -3.825))
    (:z (meters 0))
    (:scale-x (meters 4))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 14)
                       (the binteger 133826464)
                       (the binteger 133826496)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3751
  :init-specs ((:texture (new 'static 'texture-id :index #x3b :page #x3fd))
    (:num 1.0)
    (:x (meters 3.4))
    (:y (meters -2.3))
    (:z (meters 0))
    (:scale-x (meters 4.44))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 8.88))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 11)
                       (the binteger 133826400)
                       (the binteger 133826432)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3752
  :init-specs ((:texture (new 'static 'texture-id :index #x37 :page #x3fd))
    (:num 1.0)
    (:x (meters 3.6))
    (:y (meters -1.5))
    (:z (meters 0))
    (:scale-x (meters 4))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 12)
                       (the binteger 133826272)
                       (the binteger 133826304)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3753
  :init-specs ((:texture (new 'static 'texture-id :index #x39 :page #x3fd))
    (:num 1.0)
    (:x (meters 3.6))
    (:y (meters -2.625))
    (:z (meters 0))
    (:scale-x (meters 4))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 13)
                       (the binteger 133826336)
                       (the binteger 133826368)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3754
  :init-specs ((:texture (new 'static 'texture-id :index #x3d :page #x3fd))
    (:num 1.0)
    (:x (meters 3.6))
    (:y (meters -3.825))
    (:z (meters 0))
    (:scale-x (meters 4))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 14)
                       (the binteger 133826464)
                       (the binteger 133826496)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3755
  :init-specs ((:texture (new 'static 'texture-id :index #x49 :page #x3fd))
    (:num 1.0)
    (:x (meters 0))
    (:y (meters 9))
    (:z (meters 0))
    (:scale-x (meters 4.44))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 4.44))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 2)
                       (the binteger 133826848)
                       (the binteger 133826880)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3756
  :init-specs ((:texture (new 'static 'texture-id :index #x35 :page #x3fd))
    (:num 1.0)
    (:x (meters 0))
    (:y (meters 3.5))
    (:z (meters 0))
    (:scale-x (meters 5))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 10))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 6)
                       (the binteger 133826208)
                       (the binteger 133826240)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3757
  :init-specs ((:texture (new 'static 'texture-id :index #x2d :page #x3fd))
    (:num 1.0)
    (:x (meters 0))
    (:y (meters 5.25))
    (:z (meters 0))
    (:scale-x (meters 4))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 7)
                       (the binteger 133825952)
                       (the binteger 133825984)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3758
  :init-specs ((:texture (new 'static 'texture-id :index #x2f :page #x3fd))
    (:num 1.0)
    (:x (meters 0))
    (:y (meters 3.825))
    (:z (meters 0))
    (:scale-x (meters 4))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 8)
                       (the binteger 133826080)
                       (the binteger 133826112)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3759
  :init-specs ((:texture (new 'static 'texture-id :index #x31 :page #x3fd))
    (:num 1.0)
    (:x (meters 0))
    (:y (meters 2.625))
    (:z (meters 0))
    (:scale-x (meters 4))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 9)
                       (the binteger 133826080)
                       (the binteger 133826112)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3760
  :init-specs ((:texture (new 'static 'texture-id :index #x33 :page #x3fd))
    (:num 1.0)
    (:x (meters 0))
    (:y (meters 1.325))
    (:z (meters 0))
    (:scale-x (meters 4))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 10)
                       (the binteger 133826144)
                       (the binteger 133826176)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3761
  :init-specs ((:texture (new 'static 'texture-id :index #x43 :page #x3fd))
    (:num 1.0)
    (:x (meters 0))
    (:y (meters -7.8))
    (:z (meters 0))
    (:scale-x (meters 4))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 3)
                       (the binteger 133826656)
                       (the binteger 133826688)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3762
  :init-specs ((:texture (new 'static 'texture-id :index #x41 :page #x3fd))
    (:num 1.0)
    (:x (meters -3.2))
    (:y (meters -10.1))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 4))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 4)
                       (the binteger 133826592)
                       (the binteger 133826624)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3763
  :init-specs ((:texture (new 'static 'texture-id :index #x41 :page #x3fd))
    (:num 1.0)
    (:x (meters 3.2))
    (:y (meters -10.1))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 4))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 4)
                       (the binteger 133826592)
                       (the binteger 133826624)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3764
  :init-specs ((:texture (new 'static 'texture-id :index #x3f :page #x3fd))
    (:num 1.0)
    (:x (meters 0))
    (:y (meters -14))
    (:z (meters 0))
    (:scale-x (meters 5.3))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 5.3))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 5)
                       (the binteger 133826528)
                       (the binteger 133826560)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3765
  :init-specs ((:texture (new 'static 'texture-id :index #x25 :page #x3fd))
    (:num 1.0)
    (:x (meters -7.825))
    (:y (meters 0.75))
    (:z (meters 0))
    (:scale-x (meters 2))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 20)
                       (the binteger 133825696)
                       (the binteger 133825728)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3766
  :init-specs ((:texture (new 'static 'texture-id :index #x27 :page #x3fd))
    (:num 1.0)
    (:x (meters -7.825))
    (:y (meters -0.325))
    (:z (meters 0))
    (:scale-x (meters 2))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 21)
                       (the binteger 133825760)
                       (the binteger 133825792)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3767
  :init-specs ((:texture (new 'static 'texture-id :index #x29 :page #x3fd))
    (:num 1.0)
    (:x (meters -7.825))
    (:y (meters -1.625))
    (:z (meters 0))
    (:scale-x (meters 2))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 22)
                       (the binteger 133825824)
                       (the binteger 133825856)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3768
  :init-specs ((:texture (new 'static 'texture-id :index #x2b :page #x3fd))
    (:num 1.0)
    (:x (meters -7.825))
    (:y (meters -2.875))
    (:z (meters 0))
    (:scale-x (meters 2))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 23)
                       (the binteger 133825888)
                       (the binteger 133825920)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3769
  :init-specs ((:texture (new 'static 'texture-id :index #x25 :page #x3fd))
    (:num 1.0)
    (:x (meters 7.825))
    (:y (meters 0.75))
    (:z (meters 0))
    (:scale-x (meters 2))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 20)
                       (the binteger 133825696)
                       (the binteger 133825728)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3770
  :init-specs ((:texture (new 'static 'texture-id :index #x27 :page #x3fd))
    (:num 1.0)
    (:x (meters 7.825))
    (:y (meters -0.325))
    (:z (meters 0))
    (:scale-x (meters 2))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 21)
                       (the binteger 133825760)
                       (the binteger 133825792)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3771
  :init-specs ((:texture (new 'static 'texture-id :index #x29 :page #x3fd))
    (:num 1.0)
    (:x (meters 7.825))
    (:y (meters -1.625))
    (:z (meters 0))
    (:scale-x (meters 2))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 22)
                       (the binteger 133825760)
                       (the binteger 133825856)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3772
  :init-specs ((:texture (new 'static 'texture-id :index #x2b :page #x3fd))
    (:num 1.0)
    (:x (meters 7.825))
    (:y (meters -2.875))
    (:z (meters 0))
    (:scale-x (meters 2))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 23)
                       (the binteger 133825888)
                       (the binteger 133825920)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3773
  :init-specs ((:texture (new 'static 'texture-id :index #x55 :page #x3fd))
    (:num 1.0)
    (:x (meters 0))
    (:y (meters 10.6))
    (:z (meters 0))
    (:scale-x (meters 16))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 15)
                       (the binteger 133827232)
                       (the binteger 133827264)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3774
  :init-specs ((:texture (new 'static 'texture-id :index #x4b :page #x3fd))
    (:num 1.0)
    (:x (meters -4.3))
    (:y (meters 9.9))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 16)
                       (the binteger 133826912)
                       (the binteger 133826944)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3775
  :init-specs ((:texture (new 'static 'texture-id :index #x4d :page #x3fd))
    (:num 1.0)
    (:x (meters -4.3))
    (:y (meters 8.7))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 17)
                       (the binteger 133826976)
                       (the binteger 133827008)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3776
  :init-specs ((:texture (new 'static 'texture-id :index #x4f :page #x3fd))
    (:num 1.0)
    (:x (meters -4.3))
    (:y (meters 7.5))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 18)
                       (the binteger 133827040)
                       (the binteger 133827072)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3777
  :init-specs ((:texture (new 'static 'texture-id :index #x51 :page #x3fd))
    (:num 1.0)
    (:x (meters -4.3))
    (:y (meters 6.3))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 19)
                       (the binteger 133827104)
                       (the binteger 133827136)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3778
  :init-specs ((:texture (new 'static 'texture-id :index #x4f :page #x3fd))
    (:num 1.0)
    (:x (meters -4.3))
    (:y (meters -8.200001))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 24)
                       (the binteger 133827040)
                       (the binteger 133827072)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3779
  :init-specs ((:texture (new 'static 'texture-id :index #x53 :page #x3fd))
    (:num 1.0)
    (:x (meters -4.3))
    (:y (meters -12.3))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 25)
                       (the binteger 133827168)
                       (the binteger 133827200)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3780
  :init-specs ((:texture (new 'static 'texture-id :index #x53 :page #x3fd))
    (:num 1.0)
    (:x (meters -4.3))
    (:y (meters -13.5))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 26)
                       (the binteger 133827168)
                       (the binteger 133827200)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3781
  :init-specs ((:texture (new 'static 'texture-id :index #x53 :page #x3fd))
    (:num 1.0)
    (:x (meters -4.3))
    (:y (meters -14.700001))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 27)
                       (the binteger 133827168)
                       (the binteger 133827200)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3782
  :init-specs ((:texture (new 'static 'texture-id :index #x53 :page #x3fd))
    (:num 1.0)
    (:x (meters -4.3))
    (:y (meters -15.9))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 28)
                       (the binteger 133827168)
                       (the binteger 133827200)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3783
  :init-specs ((:texture (new 'static 'texture-id :index #x4b :page #x3fd))
    (:num 1.0)
    (:x (meters 4.3))
    (:y (meters 9.9))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 16)
                       (the binteger 133826912)
                       (the binteger 133826944)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3784
  :init-specs ((:texture (new 'static 'texture-id :index #x4d :page #x3fd))
    (:num 1.0)
    (:x (meters 4.3))
    (:y (meters 8.7))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 17)
                       (the binteger 133826976)
                       (the binteger 133827008)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3785
  :init-specs ((:texture (new 'static 'texture-id :index #x4f :page #x3fd))
    (:num 1.0)
    (:x (meters 4.3))
    (:y (meters 7.5))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 18)
                       (the binteger 133827040)
                       (the binteger 133827072)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3786
  :init-specs ((:texture (new 'static 'texture-id :index #x51 :page #x3fd))
    (:num 1.0)
    (:x (meters 4.3))
    (:y (meters 6.3))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 19)
                       (the binteger 133827104)
                       (the binteger 133827136)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3787
  :init-specs ((:texture (new 'static 'texture-id :index #x4f :page #x3fd))
    (:num 1.0)
    (:x (meters 4.3))
    (:y (meters -8.200001))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 24)
                       (the binteger 133827040)
                       (the binteger 133827072)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3788
  :init-specs ((:texture (new 'static 'texture-id :index #x53 :page #x3fd))
    (:num 1.0)
    (:x (meters 4.3))
    (:y (meters -12.3))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 25)
                       (the binteger 133827168)
                       (the binteger 133827200)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3789
  :init-specs ((:texture (new 'static 'texture-id :index #x53 :page #x3fd))
    (:num 1.0)
    (:x (meters 4.3))
    (:y (meters -13.5))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 26)
                       (the binteger 133827168)
                       (the binteger 133827200)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3790
  :init-specs ((:texture (new 'static 'texture-id :index #x53 :page #x3fd))
    (:num 1.0)
    (:x (meters 4.3))
    (:y (meters -14.700001))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 27)
                       (the binteger 133827168)
                       (the binteger 133827200)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3791
  :init-specs ((:texture (new 'static 'texture-id :index #x53 :page #x3fd))
    (:num 1.0)
    (:x (meters 4.3))
    (:y (meters -15.9))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 28)
                       (the binteger 133827168)
                       (the binteger 133827200)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3792
  :init-specs ((:texture (new 'static 'texture-id :index #x55 :page #x3fd))
    (:num 1.0)
    (:x (meters 0))
    (:y (meters -17))
    (:z (meters 0))
    (:scale-x (meters 16))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 29)
                       (the binteger 133827232)
                       (the binteger 133827264)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3793
  :init-specs ((:texture (new 'static 'texture-id :index #xf :page #x3fd))
    (:num 1.0)
    (:x (meters -10))
    (:y (meters 10.475))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 30)
                       (the binteger 133824992)
                       (the binteger 133825024)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3794
  :init-specs ((:texture (new 'static 'texture-id :index #xf :page #x3fd))
    (:num 1.0)
    (:x (meters -10))
    (:y (meters 9.275))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 31)
                       (the binteger 133824992)
                       (the binteger 133825024)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3795
  :init-specs ((:texture (new 'static 'texture-id :index #xf :page #x3fd))
    (:num 1.0)
    (:x (meters -10))
    (:y (meters 8.075))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 32)
                       (the binteger 133824992)
                       (the binteger 133825024)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3796
  :init-specs ((:texture (new 'static 'texture-id :index #xf :page #x3fd))
    (:num 1.0)
    (:x (meters -10))
    (:y (meters 6.875))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 33)
                       (the binteger 133824992)
                       (the binteger 133825024)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3797
  :init-specs ((:texture (new 'static 'texture-id :index #xf :page #x3fd))
    (:num 1.0)
    (:x (meters -10))
    (:y (meters 5.675))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 34)
                       (the binteger 133824992)
                       (the binteger 133825024)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3798
  :init-specs ((:texture (new 'static 'texture-id :index #x11 :page #x3fd))
    (:num 1.0)
    (:x (meters -10))
    (:y (meters 4.475))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 35)
                       (the binteger 133825056)
                       (the binteger 133825088)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3799
  :init-specs ((:texture (new 'static 'texture-id :index #x13 :page #x3fd))
    (:num 1.0)
    (:x (meters -10))
    (:y (meters 3.275))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 36)
                       (the binteger 133825120)
                       (the binteger 133825152)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3800
  :init-specs ((:texture (new 'static 'texture-id :index #x15 :page #x3fd))
    (:num 1.0)
    (:x (meters -10))
    (:y (meters 2.075))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 37)
                       (the binteger 133825184)
                       (the binteger 133825216)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3801
  :init-specs ((:texture (new 'static 'texture-id :index #x17 :page #x3fd))
    (:num 1.0)
    (:x (meters -10))
    (:y (meters 0.875))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 38)
                       (the binteger 133825248)
                       (the binteger 133825280)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3802
  :init-specs ((:texture (new 'static 'texture-id :index #x19 :page #x3fd))
    (:num 1.0)
    (:x (meters -10))
    (:y (meters -0.32500005))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 39)
                       (the binteger 133825312)
                       (the binteger 133825344)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3803
  :init-specs ((:texture (new 'static 'texture-id :index #x19 :page #x3fd))
    (:num 1.0)
    (:x (meters -10))
    (:y (meters -1.5250001))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 40)
                       (the binteger 133825312)
                       (the binteger 133825344)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3804
  :init-specs ((:texture (new 'static 'texture-id :index #x1b :page #x3fd))
    (:num 1.0)
    (:x (meters -10))
    (:y (meters -2.725))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 41)
                       (the binteger 133825376)
                       (the binteger 133825408)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3805
  :init-specs ((:texture (new 'static 'texture-id :index #x1d :page #x3fd))
    (:num 1.0)
    (:x (meters -10))
    (:y (meters -3.9250002))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 42)
                       (the binteger 133825440)
                       (the binteger 133825472)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3806
  :init-specs ((:texture (new 'static 'texture-id :index #x1f :page #x3fd))
    (:num 1.0)
    (:x (meters -10))
    (:y (meters -5.125))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 43)
                       (the binteger 133825504)
                       (the binteger 133825536)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3807
  :init-specs ((:texture (new 'static 'texture-id :index #x21 :page #x3fd))
    (:num 1.0)
    (:x (meters -10))
    (:y (meters -6.325))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 44)
                       (the binteger 133825568)
                       (the binteger 133825600)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3808
  :init-specs ((:texture (new 'static 'texture-id :index #xf :page #x3fd))
    (:num 1.0)
    (:x (meters -10))
    (:y (meters -7.5249996))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 45)
                       (the binteger 133824992)
                       (the binteger 133825024)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3809
  :init-specs ((:texture (new 'static 'texture-id :index #xf :page #x3fd))
    (:num 1.0)
    (:x (meters -10))
    (:y (meters -8.725))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 46)
                       (the binteger 133824992)
                       (the binteger 133825024)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3810
  :init-specs ((:texture (new 'static 'texture-id :index #xf :page #x3fd))
    (:num 1.0)
    (:x (meters -10))
    (:y (meters -9.925))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 47)
                       (the binteger 133824992)
                       (the binteger 133825024)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3811
  :init-specs ((:texture (new 'static 'texture-id :index #xf :page #x3fd))
    (:num 1.0)
    (:x (meters -10))
    (:y (meters -11.125))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 48)
                       (the binteger 133824992)
                       (the binteger 133825024)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3812
  :init-specs ((:texture (new 'static 'texture-id :index #xf :page #x3fd))
    (:num 1.0)
    (:x (meters -10))
    (:y (meters -12.325))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 49)
                       (the binteger 133824992)
                       (the binteger 133825024)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3813
  :init-specs ((:texture (new 'static 'texture-id :index #xf :page #x3fd))
    (:num 1.0)
    (:x (meters -10))
    (:y (meters -13.525))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 50)
                       (the binteger 133824992)
                       (the binteger 133825024)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3814
  :init-specs ((:texture (new 'static 'texture-id :index #xf :page #x3fd))
    (:num 1.0)
    (:x (meters -10))
    (:y (meters -14.725))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 51)
                       (the binteger 133824992)
                       (the binteger 133825024)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3815
  :init-specs ((:texture (new 'static 'texture-id :index #xf :page #x3fd))
    (:num 1.0)
    (:x (meters -10))
    (:y (meters -15.924999))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 52)
                       (the binteger 133824992)
                       (the binteger 133825024)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3816
  :init-specs ((:texture (new 'static 'texture-id :index #x23 :page #x3fd))
    (:num 1.0)
    (:x (meters -10))
    (:y (meters -17.125))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 0))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 53)
                       (the binteger 133825632)
                       (the binteger 133825664)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3817
  :init-specs ((:texture (new 'static 'texture-id :index #xf :page #x3fd))
    (:num 1.0)
    (:x (meters 10))
    (:y (meters 10.475))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 30)
                       (the binteger 133824992)
                       (the binteger 133825024)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3818
  :init-specs ((:texture (new 'static 'texture-id :index #xf :page #x3fd))
    (:num 1.0)
    (:x (meters 10))
    (:y (meters 9.275))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 31)
                       (the binteger 133824992)
                       (the binteger 133825024)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3819
  :init-specs ((:texture (new 'static 'texture-id :index #xf :page #x3fd))
    (:num 1.0)
    (:x (meters 10))
    (:y (meters 8.075))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 32)
                       (the binteger 133824992)
                       (the binteger 133825024)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3820
  :init-specs ((:texture (new 'static 'texture-id :index #xf :page #x3fd))
    (:num 1.0)
    (:x (meters 10))
    (:y (meters 6.875))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 33)
                       (the binteger 133824992)
                       (the binteger 133825024)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3821
  :init-specs ((:texture (new 'static 'texture-id :index #xf :page #x3fd))
    (:num 1.0)
    (:x (meters 10))
    (:y (meters 5.675))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 34)
                       (the binteger 133824992)
                       (the binteger 133825024)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3822
  :init-specs ((:texture (new 'static 'texture-id :index #x11 :page #x3fd))
    (:num 1.0)
    (:x (meters 10))
    (:y (meters 4.475))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 35)
                       (the binteger 133825056)
                       (the binteger 133825088)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3823
  :init-specs ((:texture (new 'static 'texture-id :index #x13 :page #x3fd))
    (:num 1.0)
    (:x (meters 10))
    (:y (meters 3.275))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 36)
                       (the binteger 133825120)
                       (the binteger 133825152)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3824
  :init-specs ((:texture (new 'static 'texture-id :index #x15 :page #x3fd))
    (:num 1.0)
    (:x (meters 10))
    (:y (meters 2.075))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 37)
                       (the binteger 133825184)
                       (the binteger 133825216)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3825
  :init-specs ((:texture (new 'static 'texture-id :index #x17 :page #x3fd))
    (:num 1.0)
    (:x (meters 10))
    (:y (meters 0.875))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 38)
                       (the binteger 133825248)
                       (the binteger 133825280)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3826
  :init-specs ((:texture (new 'static 'texture-id :index #x19 :page #x3fd))
    (:num 1.0)
    (:x (meters 10))
    (:y (meters -0.32500005))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 39)
                       (the binteger 133825312)
                       (the binteger 133825344)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3827
  :init-specs ((:texture (new 'static 'texture-id :index #x19 :page #x3fd))
    (:num 1.0)
    (:x (meters 10))
    (:y (meters -1.5250001))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 40)
                       (the binteger 133825312)
                       (the binteger 133825344)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3828
  :init-specs ((:texture (new 'static 'texture-id :index #x1b :page #x3fd))
    (:num 1.0)
    (:x (meters 10))
    (:y (meters -2.725))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 41)
                       (the binteger 133825376)
                       (the binteger 133825408)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3829
  :init-specs ((:texture (new 'static 'texture-id :index #x1d :page #x3fd))
    (:num 1.0)
    (:x (meters 10))
    (:y (meters -3.9250002))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 42)
                       (the binteger 133825440)
                       (the binteger 133825472)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3830
  :init-specs ((:texture (new 'static 'texture-id :index #x1f :page #x3fd))
    (:num 1.0)
    (:x (meters 10))
    (:y (meters -5.125))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 43)
                       (the binteger 133825504)
                       (the binteger 133825536)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3831
  :init-specs ((:texture (new 'static 'texture-id :index #x21 :page #x3fd))
    (:num 1.0)
    (:x (meters 10))
    (:y (meters -6.325))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 44)
                       (the binteger 133825568)
                       (the binteger 133825600)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3832
  :init-specs ((:texture (new 'static 'texture-id :index #xf :page #x3fd))
    (:num 1.0)
    (:x (meters 10))
    (:y (meters -7.5249996))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 45)
                       (the binteger 133824992)
                       (the binteger 133825024)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3833
  :init-specs ((:texture (new 'static 'texture-id :index #xf :page #x3fd))
    (:num 1.0)
    (:x (meters 10))
    (:y (meters -8.725))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 46)
                       (the binteger 133824992)
                       (the binteger 133825024)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3834
  :init-specs ((:texture (new 'static 'texture-id :index #xf :page #x3fd))
    (:num 1.0)
    (:x (meters 10))
    (:y (meters -9.925))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 47)
                       (the binteger 133824992)
                       (the binteger 133825024)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3835
  :init-specs ((:texture (new 'static 'texture-id :index #xf :page #x3fd))
    (:num 1.0)
    (:x (meters 10))
    (:y (meters -11.125))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 48)
                       (the binteger 133824992)
                       (the binteger 133825024)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3836
  :init-specs ((:texture (new 'static 'texture-id :index #xf :page #x3fd))
    (:num 1.0)
    (:x (meters 10))
    (:y (meters -12.325))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 49)
                       (the binteger 133824992)
                       (the binteger 133825024)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3837
  :init-specs ((:texture (new 'static 'texture-id :index #xf :page #x3fd))
    (:num 1.0)
    (:x (meters 10))
    (:y (meters -13.525))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 50)
                       (the binteger 133824992)
                       (the binteger 133825024)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3838
  :init-specs ((:texture (new 'static 'texture-id :index #xf :page #x3fd))
    (:num 1.0)
    (:x (meters 10))
    (:y (meters -14.725))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 51)
                       (the binteger 133824992)
                       (the binteger 133825024)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3839
  :init-specs ((:texture (new 'static 'texture-id :index #xf :page #x3fd))
    (:num 1.0)
    (:x (meters 10))
    (:y (meters -15.924999))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 52)
                       (the binteger 133824992)
                       (the binteger 133825024)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpart 3840
  :init-specs ((:texture (new 'static 'texture-id :index #x23 :page #x3fd))
    (:num 1.0)
    (:x (meters 10))
    (:y (meters -17.125))
    (:z (meters 0))
    (:scale-x (meters 8))
    (:rot-x (degrees 90))
    (:rot-y (degrees 180))
    (:rot-z (degrees 0))
    (:scale-y (meters 2))
    (:r 48.0)
    (:g :copy r)
    (:b :copy g)
    (:a 128.0)
    (:timer (seconds -0.005))
    (:flags (sp-cpuinfo-flag-2 left-multiply-quat))
    (:userdata :data (new 'static 'boxed-array :type object
                       '*baron-neon-skull*
                       (the binteger 53)
                       (the binteger 133825632)
                       (the binteger 133825664)
                       )
               )
    (:func 'sparticle-mode-animate)
    (:rotate-y (degrees 0))
    )
  )

(defpartgroup group-neon-baron
  :id 873
  :bounds (static-bspherem 0 -3 0 16)
  :parts ((sp-item 3743 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3744 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3745 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3746 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3747 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3748 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3749 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3750 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3751 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3752 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3753 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3754 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3755 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3756 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3757 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3758 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3759 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3760 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3761 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3762 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3763 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3764 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3765 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3766 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3767 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3768 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3769 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3770 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3771 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3772 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3793 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3794 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3795 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3796 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3797 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3798 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3799 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3800 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3801 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3802 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3803 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3804 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3805 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3806 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3807 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3808 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3809 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3810 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3811 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3812 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3813 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3814 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3815 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3816 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3773 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3774 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3775 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3776 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3777 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3783 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3784 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3785 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3786 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3778 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3779 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3780 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3781 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3782 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3787 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3788 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3789 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3790 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3791 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3792 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3817 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3818 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3819 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3820 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3821 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3822 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3823 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3824 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3825 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3826 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3827 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3828 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3829 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3830 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3831 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3832 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3833 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3834 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3835 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3836 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3837 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3838 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3839 :flags (is-3d launch-asap bit6 bit7))
    (sp-item 3840 :flags (is-3d launch-asap bit6 bit7))
    )
  )

(define *city-baron-group-ids* (new 'static 'boxed-array :type int32 #x369))

(deftype neon-baron (process)
  ((flags         int64                            :offset-assert 128)
   (master-enable int64                            :offset-assert 136)
   (mode          int64                            :offset-assert 144)
   (sign          (array object)                   :offset-assert 152)
   (parts         sparticle-launch-control 1       :offset-assert 156)
   (state-time    time-frame                       :offset-assert 160)
   (mat           matrix                   :inline :offset-assert 176)
   )
  :heap-base #x70
  :method-count-assert 17
  :size-assert         #xf0
  :flag-assert         #x11007000f0
  (:methods
    (idle () _type_ :state 14)
    (spawn-parts (_type_) none 15)
    (update-mode (_type_) none 16)
    )
  )


(defmethod deactivate neon-baron ((obj neon-baron))
  (dotimes (s5-0 1)
    (let ((a0-1 (-> obj parts s5-0)))
      (if (nonzero? a0-1)
          (kill-and-free-particles a0-1)
          )
      )
    )
  ((method-of-type process deactivate) obj)
  (none)
  )

;; WARN: Return type mismatch process vs neon-baron.
(defmethod relocate neon-baron ((obj neon-baron) (arg0 int))
  (dotimes (v1-0 1)
    (if (nonzero? (-> obj parts v1-0))
        (&+! (-> obj parts v1-0) arg0)
        )
    )
  (the-as neon-baron ((method-of-type process relocate) obj arg0))
  )

;; WARN: Return type mismatch symbol vs none.
(defmethod spawn-parts neon-baron ((obj neon-baron))
  (+! (-> obj parts 0 state-counter) 1)
  (when (!= (-> obj parts 0 state-mode 0) (-> obj flags))
    (set! (-> obj parts 0 state-mode 0) (the-as uint (-> obj flags)))
    (set! (-> obj parts 0 state-counter) (the-as uint 0))
    0
    )
  (let ((s5-0 (-> obj master-enable)))
    (dotimes (s4-0 1)
      (if (logtest? s5-0 1)
          (spawn-with-matrix (-> obj parts s4-0) (-> obj mat))
          )
      (set! s5-0 (/ s5-0 2))
      )
    )
  (none)
  )

(defmethod update-mode neon-baron ((obj neon-baron))
  (set! (-> obj mode) (rand-vu-int-count-excluding 12 (ash 1 (-> obj mode))))
  (none)
  )

(define *neon-baron-flashing-acc* (new 'static 'array uint32 40
                                    #x258
                                    #x168
                                    #x168
                                    #xd8
                                    #xd8
                                    #x81
                                    #x81
                                    #x4d
                                    #x4d
                                    #x2e
                                    #x2e
                                    #x2e
                                    #x1b
                                    #x1b
                                    #x10
                                    #x10
                                    #xa
                                    #xa
                                    #x6
                                    #x6
                                    #x6
                                    #x6
                                    #x6
                                    #x6
                                    #x6
                                    #x6
                                    #x6
                                    #x6
                                    #x6
                                    #x6
                                    #x6
                                    #x6
                                    #x6
                                    #x6
                                    #x6
                                    #x6
                                    #x6
                                    #x5a
                                    #x0
                                    #x0
                                    )
        )

(defstate idle (neon-baron)
  :virtual #t
  :trans (behavior ()
    (spawn-parts self)
    (none)
    )
  :code (behavior ()
    (until #f
      (update-mode self)
      (let ((v1-2 (-> self mode)))
        (cond
          ((= v1-2 2)
           600
           (dotimes (gp-0 19)
             (let ((s5-0 (-> *neon-baron-flashing-acc* (* gp-0 2))))
               (set! (-> self state-time) (current-time))
               (set! (-> self flags) 8)
               (until (>= (- (current-time) (-> self state-time)) (the-as time-frame s5-0))
                 (suspend)
                 )
               )
             (set! (-> self state-time) (current-time))
             (set! (-> self flags) 9)
             (let ((s5-1 (-> *neon-baron-flashing-acc* (+ (* gp-0 2) 1))))
               (until (>= (- (current-time) (-> self state-time)) (the-as time-frame s5-1))
                 (suspend)
                 )
               )
             )
           )
          ((zero? v1-2)
           (dotimes (gp-1 3)
             (set! (-> self state-time) (current-time))
             (set! (-> self flags) 8)
             (until (>= (- (current-time) (-> self state-time)) (seconds 1))
               (suspend)
               )
             (set! (-> self state-time) (current-time))
             (set! (-> self flags) 9)
             (until (>= (- (current-time) (-> self state-time)) (seconds 1))
               (suspend)
               )
             )
           )
          ((= v1-2 1)
           (dotimes (gp-2 3)
             (set! (-> self state-time) (current-time))
             (set! (-> self flags) 8)
             (until (>= (- (current-time) (-> self state-time)) (seconds 0.5))
               (suspend)
               )
             (set! (-> self state-time) (current-time))
             (set! (-> self flags) 9)
             (until (>= (- (current-time) (-> self state-time)) (seconds 0.5))
               (suspend)
               )
             )
           )
          ((= v1-2 10)
           600
           (dotimes (gp-3 19)
             (let ((s5-2 (-> *neon-baron-flashing-acc* (* gp-3 2))))
               (set! (-> self state-time) (current-time))
               (set! (-> self flags) 3)
               (until (>= (- (current-time) (-> self state-time)) (the-as time-frame s5-2))
                 (suspend)
                 )
               )
             (set! (-> self state-time) (current-time))
             (set! (-> self flags) 2)
             (let ((s5-3 (-> *neon-baron-flashing-acc* (+ (* gp-3 2) 1))))
               (until (>= (- (current-time) (-> self state-time)) (the-as time-frame s5-3))
                 (suspend)
                 )
               )
             )
           )
          ((= v1-2 8)
           (dotimes (gp-4 3)
             (set! (-> self state-time) (current-time))
             (set! (-> self flags) 3)
             (until (>= (- (current-time) (-> self state-time)) (seconds 1))
               (suspend)
               )
             (set! (-> self state-time) (current-time))
             (set! (-> self flags) 2)
             (until (>= (- (current-time) (-> self state-time)) (seconds 1))
               (suspend)
               )
             )
           )
          ((= v1-2 9)
           (dotimes (gp-5 3)
             (set! (-> self state-time) (current-time))
             (set! (-> self flags) 3)
             (until (>= (- (current-time) (-> self state-time)) (seconds 0.5))
               (suspend)
               )
             (set! (-> self state-time) (current-time))
             (set! (-> self flags) 2)
             (until (>= (- (current-time) (-> self state-time)) (seconds 0.5))
               (suspend)
               )
             )
           )
          ((= v1-2 3)
           (set! (-> self flags) 10)
           (let ((gp-6 (rand-vu-int-range 2 3)))
             (dotimes (s5-4 gp-6)
               (let ((s4-0 0))
                 (while (let ((a0-38 (the-as (array object) (-> self sign (+ (-> self flags) 1)))))
                          (< s4-0 (* (+ (-> a0-38 length) -1) (the-as int (/ (the-as int (-> a0-38 0)) 8))))
                          )
                   (suspend)
                   (+! s4-0 1)
                   )
                 )
               )
             )
           )
          ((= v1-2 4)
           (set! (-> self flags) 5)
           (let ((gp-7 (rand-vu-int-range 10 40)))
             (dotimes (s5-5 gp-7)
               (let ((s4-1 0))
                 (while (let ((a0-45 (the-as (array object) (-> self sign (+ (-> self flags) 1)))))
                          (< s4-1 (* (+ (-> a0-45 length) -1) (the-as int (/ (the-as int (-> a0-45 0)) 8))))
                          )
                   (suspend)
                   (+! s4-1 1)
                   )
                 )
               )
             )
           )
          ((= v1-2 5)
           (set! (-> self flags) 4)
           (let ((gp-8 (rand-vu-int-range 3 10)))
             (dotimes (s5-6 gp-8)
               (let ((s4-2 0))
                 (while (let ((a0-52 (the-as (array object) (-> self sign (+ (-> self flags) 1)))))
                          (< s4-2 (* (+ (-> a0-52 length) -1) (the-as int (/ (the-as int (-> a0-52 0)) 8))))
                          )
                   (suspend)
                   (+! s4-2 1)
                   )
                 )
               )
             )
           )
          ((= v1-2 6)
           (set! (-> self flags) 7)
           (let ((gp-9 (rand-vu-int-range 3 6)))
             (dotimes (s5-7 gp-9)
               (let ((s4-3 0))
                 (while (let ((a0-59 (the-as (array object) (-> self sign (+ (-> self flags) 1)))))
                          (< s4-3 (* (+ (-> a0-59 length) -1) (the-as int (/ (the-as int (-> a0-59 0)) 8))))
                          )
                   (suspend)
                   (+! s4-3 1)
                   )
                 )
               )
             )
           )
          ((= v1-2 11)
           (set! (-> self flags) 6)
           (let ((gp-10 (rand-vu-int-range 3 6)))
             (dotimes (s5-8 gp-10)
               (let ((s4-4 0))
                 (while (let ((a0-66 (the-as (array object) (-> self sign (+ (-> self flags) 1)))))
                          (< s4-4 (* (+ (-> a0-66 length) -1) (the-as int (/ (the-as int (-> a0-66 0)) 8))))
                          )
                   (suspend)
                   (+! s4-4 1)
                   )
                 )
               )
             )
           )
          ((= v1-2 7)
           (set! (-> self flags) 1)
           (let ((gp-11 (rand-vu-int-range 3 6)))
             (dotimes (s5-9 gp-11)
               (set! (-> self state-time) (current-time))
               (until (>= (- (current-time) (-> self state-time)) (seconds 1))
                 (suspend)
                 )
               )
             )
           )
          )
        )
      )
    #f
    (none)
    )
  )

;; WARN: Return type mismatch object vs none.
(defmethod init-from-entity! neon-baron ((obj neon-baron) (arg0 entity-actor))
  "Typically the method that does the initial setup on the process, potentially using the [[entity-actor]] provided as part of that.
This commonly includes things such as:
- stack size
- collision information
- loading the skeleton group / bones
- sounds"
  (matrix-rotate-y! (-> obj mat) (quaternion-y-angle (-> arg0 quat)))
  (set! (-> obj mat trans quad) (-> arg0 extra trans quad))
  (set! (-> obj master-enable) -1)
  (set! (-> obj flags) 9)
  (set! (-> obj mode) 0)
  (set! (-> obj sign) *baron-neon-skull*)
  (let ((s5-1 *city-baron-group-ids*))
    (dotimes (s4-1 1)
      (set! (-> obj parts s4-1) (create-launch-control (-> *part-group-id-table* (-> s5-1 s4-1)) obj))
      )
    )
  (update-mode obj)
  (go (method-of-object obj idle))
  (none)
  )

(defskelgroup skel-hide-door-a hide-door-a hide-door-a-lod0-jg hide-door-a-idle-ja
              ((hide-door-a-lod0-mg (meters 999999)))
              :bounds (static-spherem 0 6 0 12)
              )

(deftype hide-door-a (com-airlock)
  ()
  :heap-base #x100
  :method-count-assert 28
  :size-assert         #x174
  :flag-assert         #x1c01000174
  )


;; WARN: Return type mismatch object vs none.
(defmethod init-from-entity! hide-door-a ((obj hide-door-a) (arg0 entity-actor))
  "Typically the method that does the initial setup on the process, potentially using the [[entity-actor]] provided as part of that.
This commonly includes things such as:
- stack size
- collision information
- loading the skeleton group / bones
- sounds"
  (stack-size-set! (-> obj main-thread) 1024) ;; added
  (let ((s5-0 (new 'process 'collide-shape obj (collide-list-enum usually-hit-by-player))))
    (set! (-> s5-0 penetrated-by) (penetrate))
    (let ((s4-0 (new 'process 'collide-shape-prim-group s5-0 (the-as uint 1) 0)))
      (set! (-> s5-0 total-prims) (the-as uint 2))
      (set! (-> s4-0 prim-core collide-as) (collide-spec obstacle))
      (set! (-> s4-0 prim-core collide-with) (collide-spec jak bot player-list))
      (set! (-> s4-0 prim-core action) (collide-action solid))
      (set! (-> s4-0 transform-index) 3)
      (set-vector! (-> s4-0 local-sphere) 0.0 16384.0 24576.0 24576.0)
      (set! (-> s5-0 root-prim) s4-0)
      )
    (let ((v1-9 (new 'process 'collide-shape-prim-mesh s5-0 (the-as uint 0) (the-as uint 0))))
      (set! (-> v1-9 prim-core collide-as) (collide-spec obstacle))
      (set! (-> v1-9 prim-core collide-with) (collide-spec jak bot player-list))
      (set! (-> v1-9 prim-core action) (collide-action solid))
      (set! (-> v1-9 transform-index) 3)
      (set-vector! (-> v1-9 local-sphere) 0.0 16384.0 24576.0 24576.0)
      )
    (set! (-> s5-0 nav-radius) (* 0.75 (-> s5-0 root-prim local-sphere w)))
    (let ((v1-12 (-> s5-0 root-prim)))
      (set! (-> s5-0 backup-collide-as) (-> v1-12 prim-core collide-as))
      (set! (-> s5-0 backup-collide-with) (-> v1-12 prim-core collide-with))
      )
    (set! (-> obj root-override) s5-0)
    )
  (initialize-skeleton
    obj
    (the-as skeleton-group (art-group-get-by-name *level* "skel-hide-door-a" (the-as (pointer uint32) #f)))
    (the-as pair 0)
    )
  (init-airlock! obj)
  (set! (-> obj sound-open-loop) (static-sound-spec "hide-door-open"))
  (set! (-> obj sound-open-stop) (static-sound-spec "hide-door-hit"))
  (set! (-> obj sound-close-loop) (static-sound-spec "hide-door-close"))
  (set! (-> obj sound-close-stop) (static-sound-spec "hide-door-hit"))
  (set! (-> obj door-radius) 12288.0)
  (go (method-of-object obj close) #t)
  (none)
  )
