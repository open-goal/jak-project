;;-*-Lisp-*-
(in-package goal)

;; name: outro-scenes.gc
;; name in dgo: outro-scenes
;; dgos: OUTROCST

;; DECOMP BEGINS

;; definition for symbol death-precursor, type death-info
(define death-precursor
  (new 'static 'death-info :vertex-skip #x8 :timer #xe0 :overlap #xff :effect #x1539 :sound 'temp-enemy-die)
  )

(defun start-precursor-effect ((arg0 manipy))
  (let ((v1-0 (-> arg0 draw))
        (a1-0 death-precursor)
        )
    (set! (-> v1-0 death-vertex-skip) (-> a1-0 vertex-skip))
    (set! (-> v1-0 death-effect) (-> a1-0 effect))
    (set! (-> v1-0 death-timer) (+ (-> a1-0 timer) 1))
    (set! (-> v1-0 death-timer-org) (-> v1-0 death-timer))
    (set! (-> v1-0 death-draw-overlap) (-> a1-0 overlap))
    )
  (send-event
    arg0
    'trans-hook
    (lambda :behavior scene-player
      ()
      (set! (-> self draw death-timer) (the-as uint 200))
      (set! (-> self draw death-vertex-skip) (the-as uint (the int (rand-vu-float-range 8.0 24.0))))
      (none)
      )
    )
  0
  (none)
  )

;; failed to figure out what this is:
(defpart 5433
  :init-specs ((sp-flt spt-scale-x (meters 0.08))
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 128.0)
    (sp-flt spt-g 196.0)
    (sp-flt spt-b 255.0)
    (sp-flt spt-a 64.0)
    (sp-rnd-flt spt-accel-y 0.0 2.7306666 1.0)
    (sp-int-plain-rnd spt-timer 5 99 1)
    (sp-cpuinfo-flags sp-cpuinfo-flag-0 sp-cpuinfo-flag-2 sp-cpuinfo-flag-3)
    (sp-func spt-func 'sparticle-texture-glow-soft)
    (sp-int spt-next-time 10)
    (sp-launcher-by-id spt-next-launcher 5434)
    )
  )

;; failed to figure out what this is:
(defpart 5434
  :init-specs ((sp-flt spt-r 64.0)
    (sp-flt spt-g 128.0)
    (sp-flt spt-b 255.0)
    (sp-flt spt-a 64.0)
    (sp-flt spt-scalevel-x (meters -0.0008))
    (sp-rnd-flt spt-scalevel-y (meters 0) (meters 0.0026666666) 1.0)
    )
  )

;; failed to figure out what this is:
(defpartgroup group-outro-precursor-entity
  :id 1276
  :duration (seconds 0.017)
  :bounds (static-bspherem 0 0 0 15)
  :parts ((sp-item 5435 :flags (bit6)))
  )

;; failed to figure out what this is:
(defpart 5435
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xca :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-scale-x (meters 2))
    (sp-flt spt-rot-x 819.2)
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 0.0)
    (sp-flt spt-g 128.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 8.0 2.0 1.0)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-14 glow)
    (sp-flt spt-userdata 4096.0)
    )
  )

;; failed to figure out what this is:
(defskelgroup skel-crocadog crocadog 0 -1
              ((1 (meters 999999)))
              :bounds (static-spherem 0 0 0 3.2)
              :origin-joint-index 3
              )

;; failed to figure out what this is:
(defskelgroup skel-brutter-balloon-norift brutter-balloon-norift brutter-balloon-norift-lod0-jg -1
              ((brutter-balloon-norift-lod0-mg (meters 999999)))
              :bounds (static-spherem 0 10 0 23)
              :origin-joint-index 3
              )

;; failed to figure out what this is:
(defskelgroup skel-metalkor-chopped metalkor-chopped metalkor-chopped-lod0-jg metalkor-chopped-idle-ja
              ((metalkor-chopped-lod0-mg (meters 999999)))
              :bounds (static-spherem 0 2 2 8)
              :origin-joint-index 3
              )

;; failed to figure out what this is:
(defskelgroup skel-rift-break-ring rift-break-ring rift-break-ring-lod0-jg -1
              ((rift-break-ring-lod0-mg (meters 999999)))
              :bounds (static-spherem 0 0 0 100)
              :origin-joint-index 4
              )

;; failed to figure out what this is:
(defskelgroup skel-kid-medallion kid-medallion kid-medallion-lod0-jg kid-medallion-idle-ja
              ((kid-medallion-lod0-mg (meters 200)))
              :bounds (static-spherem 0 0 0 1)
              :origin-joint-index 3
              )

;; failed to figure out what this is:
(defskelgroup skel-precursor precursor precursor-lod0-jg -1
              ((precursor-lod0-mg (meters 999999)))
              :bounds (static-spherem 0 0 0 3.2)
              :origin-joint-index 3
              )

;; failed to figure out what this is:
(defpartgroup group-outro-rift-ring
  :id 1277
  :duration (seconds 0.017)
  :linger-duration (seconds 1.5)
  :flags (unk-6)
  :bounds (static-bspherem 0 0 0 128)
  :rotate ((degrees 4) (degrees 0) (degrees 0))
  :parts ((sp-item 5436 :flags (is-3d bit6 bit7))
    (sp-item 5437 :flags (bit7))
    (sp-item 5438 :flags (bit6))
    (sp-item 5439 :flags (bit6))
    (sp-item 5440 :flags (bit7))
    )
  )

;; failed to figure out what this is:
(defpart 5440
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xc9 :page #xc))
    (sp-rnd-flt spt-num 1.0 1.0 1.0)
    (sp-flt spt-x (meters 30))
    (sp-flt spt-y (meters 10))
    (sp-rnd-flt spt-scale-x (meters 0.25) (meters 0.25) 1.0)
    (sp-int spt-rot-x 4)
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 64.0)
    (sp-flt spt-g 0.0)
    (sp-flt spt-b 128.0)
    (sp-flt spt-a 64.0)
    (sp-rnd-flt spt-omega 4.096 4.096 1.0)
    (sp-flt spt-vel-x (meters -0.36666667))
    (sp-flt spt-vel-y (meters -0.123333335))
    (sp-flt spt-fade-r 0.32)
    (sp-flt spt-fade-g 0.64)
    (sp-flt spt-fade-b 0.0)
    (sp-flt spt-fade-a 0.32)
    (sp-flt spt-friction 0.95)
    (sp-int spt-timer 200)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3)
    (sp-func spt-func 'sparticle-motion-blur)
    (sp-rnd-flt spt-rotate-y (degrees 0.0) (degrees 3600.0) 1.0)
    )
  )

;; failed to figure out what this is:
(defpart 5438
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xca :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-scale-x (meters 5))
    (sp-flt spt-rot-x 8192.0)
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 255.0)
    (sp-flt spt-g 255.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 48.0 32.0 1.0)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 819.2)
    )
  )

;; failed to figure out what this is:
(defpart 5439
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xca :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-scale-x (meters 48))
    (sp-flt spt-rot-x 8192.0)
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 64.0)
    (sp-flt spt-g 0.0)
    (sp-flt spt-b 128.0)
    (sp-rnd-flt spt-a 48.0 4.0 1.0)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 65536.0)
    )
  )

;; failed to figure out what this is:
(defpart 5436
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :page #xc))
    (sp-rnd-flt spt-num 0.0 0.1 1.0)
    (sp-flt spt-z (meters 0.2))
    (sp-rnd-flt spt-scale-x (meters 2) (meters 24) 1.0)
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 196.0)
    (sp-flt spt-g 255.0)
    (sp-flt spt-b 196.0)
    (sp-flt spt-a 0.0)
    (sp-rnd-flt spt-fade-a 0.4 0.4 1.0)
    (sp-int spt-timer 320)
    (sp-cpuinfo-flags sp-cpuinfo-flag-0 sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-14 left-multiply-quat)
    (sp-int spt-next-time 80)
    (sp-launcher-by-id spt-next-launcher 5441)
    (sp-rnd-flt spt-rotate-y (degrees 0.0) (degrees 3600.0) 1.0)
    )
  )

;; failed to figure out what this is:
(defpart 5441
  :init-specs ((sp-flt spt-fade-a 0.0) (sp-int spt-next-time 160) (sp-launcher-by-id spt-next-launcher 5442))
  )

;; failed to figure out what this is:
(defpart 5442
  :init-specs ((sp-flt spt-fade-a -0.8))
  )

;; failed to figure out what this is:
(defpart 5437
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :page #xc))
    (sp-flt spt-num 16.0)
    (sp-flt spt-x (meters 12))
    (sp-rnd-flt spt-scale-x (meters 3) (meters 3) 1.0)
    (sp-copy-from-other spt-scale-y -4)
    (sp-rnd-flt spt-r 0.0 196.0 1.0)
    (sp-flt spt-g 0.0)
    (sp-rnd-flt spt-b 128.0 128.0 1.0)
    (sp-rnd-flt spt-a 16.0 16.0 1.0)
    (sp-rnd-flt spt-omega 8.192 8.192 1.0)
    (sp-flt spt-vel-x (meters -0.10666667))
    (sp-rnd-flt spt-fade-r -0.42666668 0.6533333 1.0)
    (sp-flt spt-fade-g 0.42666668)
    (sp-rnd-flt spt-fade-b 0.0 -0.21333334 1.0)
    (sp-flt spt-friction 0.96)
    (sp-int spt-timer 300)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3)
    (sp-func spt-func 'sparticle-motion-blur)
    (sp-rnd-flt spt-rotate-y (degrees 0.0) (degrees 3600.0) 1.0)
    )
  )

;; failed to figure out what this is:
(defpartgroup group-outro-magic-birth
  :id 1278
  :linger-duration (seconds 0.5)
  :bounds (static-bspherem 0 0 0 15)
  :parts ((sp-item 5443 :flags (launch-asap bit6)))
  )

;; failed to figure out what this is:
(defpart 5443
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xbb :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-scale-x (meters 0))
    (sp-flt spt-rot-x 2048.0)
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 196.0)
    (sp-flt spt-g 255.0)
    (sp-flt spt-b 196.0)
    (sp-flt spt-a 96.0)
    (sp-flt spt-omega 821248.0)
    (sp-flt spt-scalevel-x (meters 0.004))
    (sp-flt spt-rotvel-z (degrees -0.5625))
    (sp-copy-from-other spt-scalevel-y -4)
    (sp-int spt-timer 80)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 8192.0)
    (sp-func spt-func 'sparticle-track-root)
    (sp-int spt-next-time 25)
    (sp-launcher-by-id spt-next-launcher 5444)
    )
  )

;; failed to figure out what this is:
(defpart 5444
  :init-specs ((sp-flt spt-scalevel-x (meters -0.0009090909))
    (sp-copy-from-other spt-scalevel-y -4)
    (sp-flt spt-fade-a -1.7454545)
    )
  )

;; failed to figure out what this is:
(defpartgroup group-outro-magic-birth2
  :id 1279
  :linger-duration (seconds 0.5)
  :bounds (static-bspherem 0 0 0 15)
  :parts ((sp-item 5445 :flags (launch-asap bit6)))
  )

;; failed to figure out what this is:
(defpart 5445
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xbb :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-scale-x (meters 0))
    (sp-flt spt-rot-x 2048.0)
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 196.0)
    (sp-flt spt-g 255.0)
    (sp-flt spt-b 196.0)
    (sp-flt spt-a 96.0)
    (sp-flt spt-omega 821248.0)
    (sp-flt spt-scalevel-x (meters 0.005))
    (sp-flt spt-rotvel-z (degrees -0.75000006))
    (sp-copy-from-other spt-scalevel-y -4)
    (sp-int spt-timer 60)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 8192.0)
    (sp-func spt-func 'sparticle-track-root)
    (sp-int spt-next-time 20)
    (sp-launcher-by-id spt-next-launcher 5446)
    )
  )

;; failed to figure out what this is:
(defpart 5446
  :init-specs ((sp-flt spt-scalevel-x (meters -0.00125)) (sp-copy-from-other spt-scalevel-y -4) (sp-flt spt-fade-a -2.4))
  )

;; failed to figure out what this is:
(defpartgroup group-outro-onin-finger-blast
  :id 1280
  :duration (seconds 0.167)
  :flags (use-local-clock)
  :bounds (static-bspherem 0 0 0 8)
  :parts ((sp-item 5447) (sp-item 5448) (sp-item 5449 :flags (launch-asap bit6)))
  )

;; failed to figure out what this is:
(defpart 5449
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xbb :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-scale-x (meters 4))
    (sp-flt spt-rot-x 204.8)
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 255.0)
    (sp-flt spt-g 255.0)
    (sp-flt spt-b 255.0)
    (sp-flt spt-a 128.0)
    (sp-flt spt-fade-r -12.75)
    (sp-flt spt-fade-g -3.1875)
    (sp-flt spt-fade-a -1.25)
    (sp-int spt-timer 80)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow)
    (sp-flt spt-userdata 4096.0)
    )
  )

;; failed to figure out what this is:
(defpart 5447
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xbb :page #xc))
    (sp-flt spt-num 64.0)
    (sp-rnd-flt spt-scale-x (meters 0.03) (meters 0.01) 1.0)
    (sp-rnd-flt spt-rot-z (degrees 0.0) (degrees 360.0) 1.0)
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 128.0)
    (sp-flt spt-g 255.0)
    (sp-flt spt-b 255.0)
    (sp-flt spt-a 64.0)
    (sp-rnd-flt spt-vel-y (meters 0) (meters 0.06666667) 1.0)
    (sp-flt spt-scalevel-x (meters -0.0002))
    (sp-rnd-flt spt-rotvel-z (degrees -0.2) (degrees 0.4) 1.0)
    (sp-copy-from-other spt-scalevel-y -4)
    (sp-flt spt-fade-r -0.85333335)
    (sp-flt spt-fade-g -0.85333335)
    (sp-rnd-flt spt-accel-y 0.0 -0.34133333 1.0)
    (sp-rnd-flt spt-friction 0.9 0.01 1.0)
    (sp-int-plain-rnd spt-timer 300 599 1)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3)
    (sp-int-plain-rnd spt-next-time 0 149 1)
    (sp-launcher-by-id spt-next-launcher 5450)
    (sp-rnd-flt spt-conerot-x (degrees 82.0) (degrees 10.0) 1.0)
    (sp-rnd-flt spt-conerot-y (degrees -10.0) (degrees 10.0) 1.0)
    )
  )

;; failed to figure out what this is:
(defpart 5448
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x66 :page #x3e6))
    (sp-flt spt-num 16.0)
    (sp-rnd-flt spt-scale-x (meters 0.1) (meters 0.05) 1.0)
    (sp-rnd-flt spt-rot-z (degrees 0.0) (degrees 360.0) 1.0)
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 0.0)
    (sp-rnd-flt spt-g 64.0 64.0 1.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 8.0 4.0 1.0)
    (sp-rnd-flt spt-vel-y (meters 0) (meters 0.06666667) 1.0)
    (sp-flt spt-scalevel-x (meters 0.00016666666))
    (sp-rnd-flt spt-rotvel-z (degrees -0.2) (degrees 0.4) 1.0)
    (sp-copy-from-other spt-scalevel-y -4)
    (sp-rnd-flt spt-fade-a -0.008888889 -0.008888889 1.0)
    (sp-rnd-flt spt-accel-y 0.0 -0.06826667 1.0)
    (sp-rnd-flt spt-friction 0.9 0.01 1.0)
    (sp-int spt-timer 900)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3)
    (sp-rnd-flt spt-conerot-x (degrees 82.0) (degrees 10.0) 1.0)
    (sp-rnd-flt spt-conerot-y (degrees -10.0) (degrees 10.0) 1.0)
    )
  )

;; failed to figure out what this is:
(defpartgroup group-outro-onin-finger-effect
  :id 1281
  :duration (seconds 0.15)
  :bounds (static-bspherem 0 0 0 8)
  :parts ((sp-item 5451 :falloff-to (meters 20)) (sp-item 5452 :falloff-to (meters 20)))
  )

;; failed to figure out what this is:
(defpart 5451
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xbb :page #xc))
    (sp-rnd-flt spt-num 0.0 1.0 1.0)
    (sp-rnd-flt spt-scale-x (meters 0.03) (meters 0.02) 1.0)
    (sp-rnd-flt spt-rot-z (degrees 0.0) (degrees 360.0) 1.0)
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-g 255.0)
    (sp-flt spt-b 255.0)
    (sp-flt spt-a 64.0)
    (sp-flt spt-scalevel-x (meters -0.00013333333))
    (sp-rnd-flt spt-rotvel-z (degrees -0.2) (degrees 0.4) 1.0)
    (sp-copy-from-other spt-scalevel-y -4)
    (sp-flt spt-fade-r -0.85333335)
    (sp-flt spt-fade-g -0.85333335)
    (sp-rnd-flt spt-accel-y 0.0 -0.06826667 1.0)
    (sp-int-plain-rnd spt-timer 300 899 1)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3)
    (sp-int-plain-rnd spt-next-time 0 149 1)
    (sp-launcher-by-id spt-next-launcher 5450)
    )
  )

;; failed to figure out what this is:
(defpart 5450
  :init-specs ((sp-rnd-flt spt-scale-x (meters 0.01) (meters 0.02) 1.0)
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 255.0)
    (sp-flt spt-g 255.0)
    (sp-flt spt-b 255.0)
    (sp-flt spt-a 255.0)
    (sp-flt spt-scalevel-x (meters 0))
    (sp-copy-from-other spt-scalevel-y -4)
    (sp-flt spt-fade-r 0.0)
    (sp-flt spt-fade-g 0.0)
    (sp-int spt-next-time 5)
    (sp-launcher-by-id spt-next-launcher 5453)
    )
  )

;; failed to figure out what this is:
(defpart 5453
  :init-specs ((sp-flt spt-r 0.0)
    (sp-rnd-flt spt-g 64.0 64.0 1.0)
    (sp-flt spt-b 255.0)
    (sp-flt spt-a 64.0)
    (sp-int-plain-rnd spt-next-time 0 449 1)
    (sp-launcher-by-id spt-next-launcher 5450)
    )
  )

;; failed to figure out what this is:
(defpart 5452
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #x66 :page #x3e6))
    (sp-flt spt-num 1.0)
    (sp-rnd-flt spt-scale-x (meters 0.1) (meters 0.2) 1.0)
    (sp-rnd-flt spt-rot-z (degrees 0.0) (degrees 360.0) 1.0)
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 0.0)
    (sp-rnd-flt spt-g 64.0 64.0 1.0)
    (sp-flt spt-b 255.0)
    (sp-rnd-flt spt-a 8.0 8.0 1.0)
    (sp-flt spt-scalevel-x (meters 0.00033333333))
    (sp-rnd-flt spt-rotvel-z (degrees -0.2) (degrees 0.4) 1.0)
    (sp-copy-from-other spt-scalevel-y -4)
    (sp-rnd-flt spt-fade-a -0.026666667 -0.026666667 1.0)
    (sp-int-plain-rnd spt-timer 150 449 1)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-3)
    )
  )

;; failed to figure out what this is:
(defpartgroup group-outro-precursor-stone-glow
  :id 1282
  :bounds (static-bspherem 0 0 0 3)
  :parts ((sp-item 5454 :flags (bit6)))
  )

;; failed to figure out what this is:
(defpart 5454
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xca :page #xc))
    (sp-flt spt-num 1.0)
    (sp-flt spt-scale-x (meters 3.5))
    (sp-flt spt-rot-x 8192.0)
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 16.0)
    (sp-flt spt-g 192.0)
    (sp-flt spt-b 16.0)
    (sp-flt spt-a 24.0)
    (sp-int spt-timer 5)
    (sp-cpuinfo-flags glow)
    (sp-flt spt-userdata 4096.0)
    )
  )

;; failed to figure out what this is:
(defpartgroup group-outro-port-feathers-n-fur-impact
  :id 1283
  :bounds (static-bspherem 0 0 0 6)
  :parts ((sp-item 5455 :flags (bit7)) (sp-item 5456 :flags (bit7)))
  )

;; failed to figure out what this is:
(defpart 5455
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :page #xdd8))
    (sp-func spt-birth-func 'birth-func-pecker-feather-color)
    (sp-flt spt-num 3.0)
    (sp-rnd-flt spt-scale-x (meters 0.1) (meters 0.125) 1.0)
    (sp-rnd-flt spt-rot-z (degrees 0.0) (degrees 3600.0) 1.0)
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 0.0)
    (sp-flt spt-g 0.0)
    (sp-flt spt-b 0.0)
    (sp-flt spt-a 86.0)
    (sp-rnd-flt spt-vel-x (meters -0.033333335) (meters 0.06666667) 1.0)
    (sp-rnd-flt spt-vel-y (meters 0.05) (meters 0.006666667) 1.0)
    (sp-rnd-flt spt-vel-z (meters 0.05) (meters 0.01) 1.0)
    (sp-rnd-flt spt-rotvel-z (degrees -2.4) (degrees 4.8) 1.0)
    (sp-rnd-flt spt-accel-y -1.3653333 -1.3653333 1.0)
    (sp-rnd-flt spt-friction 0.82 0.07 1.0)
    (sp-int spt-timer 800)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-12)
    (sp-rnd-flt spt-conerot-x (degrees -25.000002) (degrees 50.000004) 1.0)
    (sp-rnd-flt spt-conerot-z (degrees -25.000002) (degrees 50.000004) 1.0)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

;; failed to figure out what this is:
(defpart 5456
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xc9 :page #xc))
    (sp-flt spt-num 25.0)
    (sp-rnd-flt spt-scale-x (meters 0.15) (meters 0.015) 1.0)
    (sp-rnd-flt spt-rot-z (degrees 0.0) (degrees 3600.0) 1.0)
    (sp-rnd-flt spt-scale-y (meters 0.0025) (meters 0.015) 1.0)
    (sp-flt spt-r 242.0)
    (sp-rnd-flt spt-g 64.0 32.0 1.0)
    (sp-flt spt-b 20.0)
    (sp-flt spt-a 255.0)
    (sp-rnd-flt spt-vel-x (meters -0.033333335) (meters 0.06666667) 1.0)
    (sp-rnd-flt spt-vel-y (meters 0.033333335) (meters 0.008333334) 1.0)
    (sp-rnd-flt spt-vel-z (meters 0.05) (meters 0.01) 1.0)
    (sp-rnd-flt spt-rotvel-z (degrees -2.4) (degrees 4.8) 1.0)
    (sp-rnd-flt spt-accel-y -1.3653333 -1.3653333 1.0)
    (sp-rnd-flt spt-friction 0.82 0.07 1.0)
    (sp-int spt-timer 800)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-12)
    (sp-rnd-flt spt-conerot-x (degrees -25.000002) (degrees 50.000004) 1.0)
    (sp-rnd-flt spt-conerot-z (degrees -25.000002) (degrees 50.000004) 1.0)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

;; failed to figure out what this is:
(defpartgroup group-outro-port-feathers-n-fur
  :id 1284
  :bounds (static-bspherem 0 0 0 3)
  :parts ((sp-item 5457) (sp-item 5458))
  )

;; failed to figure out what this is:
(defpart 5457
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :page #xdd8))
    (sp-func spt-birth-func 'birth-func-pecker-feather-color)
    (sp-flt spt-num 0.15)
    (sp-rnd-flt spt-scale-x (meters 0.1) (meters 0.125) 1.0)
    (sp-rnd-flt spt-rot-z (degrees 0.0) (degrees 3600.0) 1.0)
    (sp-copy-from-other spt-scale-y -4)
    (sp-flt spt-r 0.0)
    (sp-flt spt-g 0.0)
    (sp-flt spt-b 0.0)
    (sp-flt spt-a 86.0)
    (sp-rnd-flt spt-vel-x (meters -0.033333335) (meters 0.06666667) 1.0)
    (sp-rnd-flt spt-vel-y (meters 0.06666667) (meters 0.006666667) 1.0)
    (sp-rnd-flt spt-rotvel-z (degrees -2.4) (degrees 4.8) 1.0)
    (sp-rnd-flt spt-accel-y -1.3653333 -1.3653333 1.0)
    (sp-rnd-flt spt-friction 0.82 0.07 1.0)
    (sp-int spt-timer 600)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-12)
    (sp-rnd-flt spt-conerot-x (degrees -25.000002) (degrees 50.000004) 1.0)
    (sp-rnd-flt spt-conerot-z (degrees -25.000002) (degrees 50.000004) 1.0)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

;; failed to figure out what this is:
(defpart 5458
  :init-specs ((sp-tex spt-texture (new 'static 'texture-id :index #xc9 :page #xc))
    (sp-flt spt-num 2.5)
    (sp-rnd-flt spt-scale-x (meters 0.15) (meters 0.015) 1.0)
    (sp-rnd-flt spt-rot-z (degrees 0.0) (degrees 3600.0) 1.0)
    (sp-rnd-flt spt-scale-y (meters 0.0025) (meters 0.015) 1.0)
    (sp-flt spt-r 242.0)
    (sp-rnd-flt spt-g 64.0 32.0 1.0)
    (sp-flt spt-b 20.0)
    (sp-flt spt-a 255.0)
    (sp-rnd-flt spt-vel-x (meters -0.033333335) (meters 0.06666667) 1.0)
    (sp-rnd-flt spt-vel-y (meters 0.05) (meters 0.016666668) 1.0)
    (sp-rnd-flt spt-rotvel-z (degrees -2.4) (degrees 4.8) 1.0)
    (sp-rnd-flt spt-accel-y -1.3653333 -3.4133334 1.0)
    (sp-rnd-flt spt-friction 0.82 0.07 1.0)
    (sp-int spt-timer 600)
    (sp-cpuinfo-flags sp-cpuinfo-flag-2 sp-cpuinfo-flag-12)
    (sp-int spt-next-time 150)
    (sp-launcher-by-id spt-next-launcher 5459)
    (sp-rnd-flt spt-conerot-x (degrees -25.000002) (degrees 50.000004) 1.0)
    (sp-rnd-flt spt-conerot-z (degrees -25.000002) (degrees 50.000004) 1.0)
    (sp-flt spt-rotate-y (degrees 0.0))
    )
  )

;; failed to figure out what this is:
(defpart 5459
  :init-specs ((sp-flt spt-vel-y (meters 0)) (sp-flt spt-friction 1.0))
  )

;; definition for function birth-func-pecker-feather-color
;; WARN: Return type mismatch int vs none.
(defun birth-func-pecker-feather-color ((arg0 sparticle-system) (arg1 sparticle-cpuinfo) (arg2 sparticle-launchinfo))
  (let ((v1-0 (rand-vu-int-count 3)))
    (cond
      ((zero? v1-0)
       (set! (-> arg2 rotate-x) 179.0)
       (set! (-> arg2 rotate-y) 49.0)
       (set! (-> arg2 rotate-z) 41.0)
       )
      ((= v1-0 1)
       (set! (-> arg2 rotate-x) 252.0)
       (set! (-> arg2 rotate-y) 161.0)
       (set! (-> arg2 rotate-z) 12.0)
       )
      ((= v1-0 2)
       (set! (-> arg2 rotate-x) 29.0)
       (set! (-> arg2 rotate-y) 60.0)
       (set! (-> arg2 rotate-z) 108.0)
       )
      )
    )
  0
  (none)
  )

;; failed to figure out what this is:
(scene-method-16
  (new 'static 'scene
    :name "outro-nest"
    :extra #f
    :info #f
    :mask-to-clear #x1282000
    :entity "scene-stage-91"
    :art-group "scenecamera"
    :anim "outro-nest"
    :parts 50
    :command-list '((0
        (task-close! "nest-boss-resolution")
        (task-close! "city-win-introduction")
        (kill "rift-ring-ingame-1")
        (kill "crate-942")
        (kill "crate-943")
        (kill "crate-944")
        (kill "crate-945")
        (kill "crate-946")
        (kill "crate-947")
        (kill "crate-948")
        (kill "crate-949")
        (fadein (frame-time-30 (new 'static 'bfloat :data 10.0)))
        (apply
          ,(lambda ()
             (set! (-> palout memory-mode) (load-buffer-mode borrow))
             (set! (-> hiphog memory-mode) (load-buffer-mode small-center))
             (none)
             )
          )
        ;; (send-event "darkjak-highres" 'trans-hook ,(lambda () (set-darkjak-highres-nest-texture-morph! 0) (none)))
        (part-tracker
          "group-outro-rift-ring"
          entity
          "rift-break-ring"
          joint
          "gate"
          track
          #t
          duration
          (frame-range 0 2795)
          )
        (part-tracker
          "group-outro-precursor-stone-glow"
          entity
          "precursor-stone"
          joint
          "main"
          track
          #t
          duration
          (frame-range 0 275)
          )
        )
      (206
        (part-tracker
          "group-outro-magic-birth"
          entity
          "particleman"
          joint
          "particleB"
          track
          #t
          duration
          (frame-range 206 222)
          )
        (part-tracker
          "group-outro-magic-birth"
          entity
          "particleman"
          joint
          "particleC"
          track
          #t
          duration
          (frame-range 206 222)
          )
        )
      (207
        (joint-eval start-precursor-effect entity "precursor")
        (send-event
          "precursor"
          'eval
          ,(lambda :behavior scene-player
             ()
             (let* ((v1-3 (-> self draw lod-set lod (-> self draw cur-lod) geo num-joints))
                    (gp-0 3)
                    (s5-0 (+ v1-3 1))
                    )
               (while (>= s5-0 gp-0)
                 (if (not (or (and (>= gp-0 13) (>= 21 gp-0)) (and (>= gp-0 26) (>= 34 gp-0))))
                     (process-spawn
                       part-tracker
                       :init part-tracker-init
                       (-> *part-group-id-table* 1276)
                       5140
                       #f
                       #f
                       self
                       gp-0
                       :to *entity-pool*
                       )
                     )
                 (+! gp-0 1)
                 )
               )
             #f
             )
          )
        )
      (223
        (part-tracker
          "group-outro-magic-birth2"
          entity
          "particleman"
          joint
          "particleB"
          track
          #t
          duration
          (frame-range 223 235)
          )
        (part-tracker
          "group-outro-magic-birth2"
          entity
          "particleman"
          joint
          "particleC"
          track
          #t
          duration
          (frame-range 223 235)
          )
        )
      (236
        (part-tracker
          "group-outro-magic-birth2"
          entity
          "particleman"
          joint
          "particleB"
          track
          #t
          duration
          (frame-range 236 242)
          )
        (part-tracker
          "group-outro-magic-birth2"
          entity
          "particleman"
          joint
          "particleC"
          track
          #t
          duration
          (frame-range 236 242)
          )
        )
      (2795
        (apply
          ,(lambda :behavior scene-player
             ()
             (send-event (process-by-name "metalkor-1" *active-pool*) 'occlude-off)
             (none)
             )
          )
        )
      (2990 (fadeout (frame-time-30 10)))
      (10000
        (task-close! "nest-boss-introduction")
        (apply ,(lambda :behavior scene-player
                  ()
                  (when (-> self aborted?)
                    (set! (-> palout memory-mode) (load-buffer-mode small-edge))
                    (set! (-> hiphog memory-mode) (load-buffer-mode small-edge))
                    0
                    )
                  (none)
                  )
               )
        )
      )
    :cut-list '(0
       81
       167
       237
       332
       542
       721
       811
       891
       1011
       1131
       1293
       1416
       1467
       1568
       1701
       1896
       1957
       2071
       2177
       2261
       2358
       2481
       2601
       2846
       2921
       3000
       )
    :wait-ground-time (seconds 1)
    :draw-target #f
    :abort #t
    :actor (new 'static 'boxed-array :type scene-actor
      (new 'static 'scene-actor
        :name "scenecamera"
        :level #f
        :art-group "skel-scenecamera"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :camera 4
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "sidekick-highres"
        :level 'nestb
        :art-group "skel-sidekick-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "darkjak-highres"
        :level 'nestb
        :art-group "skel-darkjak-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "kid-highres"
        :level 'loutcstb
        :art-group "skel-kid-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "keira-highres"
        :level 'outrocst
        :art-group "skel-keira-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '((2261 2358))
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "samos-highres"
        :level 'outrocst
        :art-group "skel-samos-highres"
        :prefix ""
        :draw-frames '((min 1568) (1701 max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "youngsamos-highres"
        :level 'loutcstb
        :art-group "skel-youngsamos-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "brutter-highres"
        :level 'loutcstb
        :art-group "skel-brutter-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "brutter-balloon-norift"
        :level 'loutcstb
        :art-group "skel-brutter-balloon-norift"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '((721 811) (1131 1416) (1467 1800) (1957 2358) (2601 2846) (2921 3000))
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "rift-rider"
        :level 'loutcstb
        :art-group "skel-rift-rider"
        :prefix ""
        :draw-frames '((min 2627))
        :scissor-frames '((2071 2177))
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "precursor-stone"
        :level 'loutcstb
        :art-group "skel-precursor-stone"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "metalkor-chopped"
        :level 'loutcstb
        :art-group "skel-metalkor-chopped"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "particleman"
        :level 'loutcstb
        :art-group "skel-particleman"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "rift-break-ring"
        :level 'outrocst
        :art-group "skel-rift-break-ring"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "precursor"
        :level 'outrocst
        :art-group "skel-precursor"
        :prefix ""
        :draw-frames '((200 721))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      )
    :load-point-obj "nestb-outro"
    :end-point-obj "ctyport-hiphog"
    :borrow '((outrocst 0 loutcstb special))
    :sfx-volume -1.0
    :ambient-volume -1.0
    :music-volume -1.0
    :blackout-end #t
    :peaceful #t
    :music-delay 1500.0
    :save #t
    :scene-task #xf5
    )
  )

;; failed to figure out what this is:
(scene-method-16 (new 'static 'scene
                   :name "outro-palace"
                   :extra #f
                   :info #f
                   :mask-to-clear #x1282000
                   :entity "scene-stage-54"
                   :art-group "scenecamera"
                   :anim "outro-palace"
                   :parts 9
                   :command-list '((0
                       (fadein (frame-time-30 10))
                       (want-load 'outrocst 'throne 'hiphog)
                       (kill "throne-part-132")
                       (kill "throne-part-133")
                       (kill "throne-part-134")
                       (kill "throne-part-135")
                       (kill "throne-part-136")
                       (kill "throne-part-137")
                       (kill "throne-part-138")
                       (kill "throne-part-139")
                       (kill "throne-part-140")
                       (kill "throne-part-141")
                       (kill "throne-part-158")
                       (kill "throne-part-155")
                       (kill "throne-part-152")
                       (kill "throne-part-149")
                       (kill "throne-part-143")
                       (kill "throne-part-144")
                       (kill "throne-part-142")
                       (kill "throne-part-147")
                       (kill "throne-part-145")
                       (kill "throne-part-148")
                       (kill "throne-part-150")
                       (kill "throne-part-151")
                       (kill "throne-part-153")
                       (kill "throne-part-154")
                       (kill "throne-part-156")
                       (kill "throne-part-157")
                       (kill "throne-part-159")
                       (kill "throne-part-160")
                       )
                     (1000 (fadeout (frame-time-30 5)))
                     (10000 (apply ,(lambda :behavior scene-player
                                      ()
                                      (when (-> self aborted?)
                                        (set! (-> palout memory-mode) (load-buffer-mode small-edge))
                                        (set! (-> hiphog memory-mode) (load-buffer-mode small-edge))
                                        0
                                        )
                                      (none)
                                      )
                                   )
                            )
                     )
                   :cut-list '(96 241 838 951)
                   :wait-ground-time (seconds 1)
                   :draw-target #f
                   :abort #t
                   :actor (new 'static 'boxed-array :type scene-actor
                     (new 'static 'scene-actor
                       :name "scenecamera"
                       :level #f
                       :art-group "skel-scenecamera"
                       :prefix ""
                       :draw-frames '((min max))
                       :scissor-frames '()
                       :camera 4
                       :shadow-flags -1
                       :shadow-volume-joint #f
                       )
                     (new 'static 'scene-actor
                       :name "torn-highres"
                       :level 'lthrnout
                       :art-group "skel-torn-highres"
                       :prefix ""
                       :draw-frames '((min max))
                       :scissor-frames '()
                       :flags #x1
                       :shadow-flags -1
                       :shadow-volume-joint #f
                       )
                     (new 'static 'scene-actor
                       :name "ashelin-highres"
                       :level 'lthrnout
                       :art-group "skel-ashelin-highres"
                       :prefix ""
                       :draw-frames '((min max))
                       :scissor-frames '()
                       :flags #x1
                       :shadow-flags -1
                       :shadow-volume-joint #f
                       )
                     (new 'static 'scene-actor
                       :name "palmpilot"
                       :level 'lthrnout
                       :art-group "skel-palmpilot"
                       :prefix ""
                       :draw-frames '((min max))
                       :scissor-frames '()
                       :flags #x1
                       :shadow-flags -1
                       :shadow-volume-joint #f
                       )
                     )
                   :load-point-obj "throne-outro"
                   :end-point-obj "ctyport-hiphog"
                   :borrow '((outrocst 0 palout display) (throne 0 lthrnout display) (hiphog 0 lhipout special))
                   :sfx-volume -1.0
                   :ambient-volume -1.0
                   :music-volume -1.0
                   :blackout-end #t
                   :peaceful #t
                   :music-delay 1500.0
                   :save #t
                   )
                 )

;; failed to figure out what this is:
(scene-method-16
  (new 'static 'scene
    :name "outro-hiphog"
    :extra #f
    :info #f
    :mask-to-clear #x1282000
    :entity "scene-stage-24"
    :art-group "scenecamera"
    :anim "outro-hiphog"
    :parts 33
    :command-list '((0
        (fadein (frame-time-30 2))
        (apply
          ,(lambda ()
             (let ((gp-0 (level-get *level* 'outrocst)))
               (when gp-0
                 (clear-mood-context (-> gp-0 mood-context))
                 (if #f
                     ((the-as (function mood-context none) #f) (-> gp-0 mood-context))
                     )
                 (set! (-> gp-0 mood-func) (the-as (function mood-context float int none) update-mood-copy-hiphog))
                 (set! (-> gp-0 info sky) #f)
                 #f
                 )
               )
             )
          )
        (apply ,(lambda () (set! (-> palout memory-mode) (load-buffer-mode small-edge)) 0 (none)))
        (want-load 'outrocst 'hiphog 'ctyport)
        (kill "hip-door-b-1")
        (send-event "sidekick-highres" 'draw-mirror #f)
        (send-event "jak-highres" 'draw-mirror #f)
        (send-event "keira-highres" 'draw-mirror #f)
        (send-event "tess-highres" 'draw-mirror #f)
        (send-event "pecker-highres" 'draw-mirror #f)
        (send-event "onin-highres" 'draw-mirror #f)
        )
      (141 (send-event "onin-highres" 'draw-mirror #t) (send-event "pecker-highres" 'draw-mirror #t))
      (180 (want-display 'ctyport 'display) (kill "hip-door-a-6") (kill "hip-door-b-1"))
      (186 (send-event "onin-highres" 'draw-mirror #f) (send-event "pecker-highres" 'draw-mirror #f))
      (476 (send-event "onin-highres" 'draw-mirror #t) (send-event "pecker-highres" 'draw-mirror #t))
      (560 (send-event "onin-highres" 'draw-mirror #f) (send-event "pecker-highres" 'draw-mirror #f))
      (1156 (send-event "onin-highres" 'draw-mirror #t))
      (1160
        (part-tracker
          "group-outro-onin-finger-effect"
          entity
          "onin-highres"
          joint
          "RindexC"
          track
          #t
          duration
          (frame-range 1160 1250)
          )
        )
      (1226
        (part-tracker
          "group-outro-onin-finger-blast"
          entity
          "onin-highres"
          joint
          "RindexC"
          track
          #t
          duration
          (frame-range 1226 1236)
          )
        )
      (1246 (send-event "onin-highres" 'draw-mirror #f))
      (1436 (send-event "onin-highres" 'draw-mirror #t))
      (1491 (send-event "onin-highres" 'draw-mirror #f))
      (1955 (fadeout (frame-time-30 5)))
      (10000 (apply ,(lambda :behavior scene-player
                       ()
                       (when (-> self aborted?)
                         (set! (-> hiphog memory-mode) (load-buffer-mode small-edge))
                         0
                         )
                       (none)
                       )
                    )
             )
      )
    :cut-list '(91
       141
       186
       259
       401
       476
       596
       691
       781
       846
       971
       1081
       1156
       1246
       1291
       1342
       1436
       1491
       1536
       1581
       1631
       1666
       1701
       1776
       1841
       1891
       )
    :wait-ground-time (seconds 1)
    :draw-target #f
    :abort #t
    :actor (new 'static 'boxed-array :type scene-actor
      (new 'static 'scene-actor
        :name "scenecamera"
        :level #f
        :art-group "skel-scenecamera"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :camera 4
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "sidekick-highres"
        :level 'hiphog
        :art-group "skel-sidekick-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x3
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "jak-highres"
        :level 'hiphog
        :art-group "skel-jak-highres"
        :prefix ""
        :draw-frames '((min 1840) (1891 max))
        :scissor-frames '((741 846))
        :flags #x3
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "keira-highres"
        :level 'outrocst
        :art-group "skel-keira-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x3
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "samos-highres"
        :level 'outrocst
        :art-group "skel-samos-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "tess-highres"
        :level 'outrocst
        :art-group "skel-tess-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x3
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "pecker-highres"
        :level 'lhipout
        :art-group "skel-pecker-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x3
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "onin-highres"
        :level 'outrocst
        :art-group "skel-onin-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x3
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "sig-highres"
        :level 'lhipout
        :art-group "skel-sig-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "hip-mug"
        :level 'lhipout
        :art-group "skel-hip-mug"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "hip-mug"
        :level 'lhipout
        :art-group "skel-hip-mug"
        :prefix "b-"
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "hip-mug"
        :level 'lhipout
        :art-group "skel-hip-mug"
        :prefix "c-"
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "hip-bottle-c"
        :level 'lhipout
        :art-group "skel-hip-bottle-c"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "kid-medallion"
        :level 'lhipout
        :art-group "skel-kid-medallion"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "particleman"
        :level 'lhipout
        :art-group "skel-particleman"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "metalkor-chopped"
        :level 'lhipout
        :art-group "skel-metalkor-chopped"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      )
    :load-point-obj "hiphog-outro"
    :end-point-obj "ctyport-hiphog"
    :borrow '((outrocst 0 portwall special) (hiphog 0 lhipout special))
    :sfx-volume -1.0
    :ambient-volume -1.0
    :music-volume -1.0
    :blackout-end #t
    :peaceful #t
    :music-delay 1500.0
    :save #t
    )
  )

;; failed to figure out what this is:
(scene-method-16
  (new 'static 'scene
    :name "outro-port"
    :extra #f
    :info #f
    :mask-to-clear #x1282000
    :entity "scene-stage-93"
    :art-group "scenecamera"
    :anim "outro-port"
    :parts 28
    :command-list '((0
        (want-sound 'outro1 #f #f)
        (setting-unset sound-bank-load)
        (time-of-day 23)
        (fadein (frame-time-30 10))
        (apply ,(lambda ()
                  (let ((gp-0 (level-get *level* 'hiphog)))
                    (when gp-0
                      (clear-mood-context (-> gp-0 mood-context))
                      (if #f
                          ((the-as (function mood-context none) #f) (-> gp-0 mood-context))
                          )
                      (set! (-> gp-0 mood-func) update-mood-default)
                      (set! (-> gp-0 info sky) #f)
                      )
                    )
                  (let ((gp-1 (level-get *level* 'lhipout)))
                    (when gp-1
                      (clear-mood-context (-> gp-1 mood-context))
                      (if #f
                          ((the-as (function mood-context none) #f) (-> gp-1 mood-context))
                          )
                      (set! (-> gp-1 mood-func) update-mood-default)
                      (set! (-> gp-1 info sky) #f)
                      )
                    )
                  (let ((gp-2 (level-get *level* 'outrocst)))
                    (when gp-2
                      (clear-mood-context (-> gp-2 mood-context))
                      (if #f
                          ((the-as (function mood-context none) #f) (-> gp-2 mood-context))
                          )
                      (set! (-> gp-2 mood-func) update-mood-default)
                      (set! (-> gp-2 info sky) #f)
                      )
                    )
                  (let ((gp-3 (level-get *level* 'portwall)))
                    (when gp-3
                      (clear-mood-context (-> gp-3 mood-context))
                      (if #f
                          ((the-as (function mood-context none) #f) (-> gp-3 mood-context))
                          )
                      (set! (-> gp-3 mood-func) update-mood-default)
                      (set! (-> gp-3 info sky) #f)
                      #f
                      )
                    )
                  )
               )
        (want-display 'outrocst 'display)
        (apply
          ,(lambda ()
             (with-pp
               (let ((gp-0 (get-process *default-dead-pool* part-tracker #x4000)))
                 (when gp-0
                   (let ((t9-1 (method-of-type part-tracker activate)))
                     (t9-1 (the-as part-tracker gp-0) pp (symbol->string (-> part-tracker symbol)) (the-as pointer #x70004000))
                     )
                   (let ((t9-2 run-function-in-process)
                         (a0-2 gp-0)
                         (a1-2 part-tracker-init)
                         (a2-4 (-> *part-group-id-table* 1272))
                         (a3-1 #x2d96)
                         (t0-0 #f)
                         (t1-0 #f)
                         (t2-0 #f)
                         (t3-0 *launch-matrix*)
                         )
                     (set! (-> t3-0 trans quad) (-> (new 'static 'vector :x 180224.0 :y 81920.0 :z 5660672.0 :w 1.0) quad))
                     ((the-as (function object object object object object object object object none) t9-2)
                      a0-2
                      a1-2
                      a2-4
                      a3-1
                      t0-0
                      t1-0
                      t2-0
                      t3-0
                      )
                     )
                   (-> gp-0 ppointer)
                   )
                 )
               )
             )
          )
        )
      (200 (setting-reset sfx-volume mode 'rel value (new 'static 'bfloat :data 0.3)))
      (300 (setting-reset sfx-volume mode 'rel value (new 'static 'bfloat :data 0.2)))
      (514 (setting-reset sfx-volume mode 'rel value (new 'static 'bfloat :data 0.3)))
      (610 (setting-reset sfx-volume mode 'rel value (new 'static 'bfloat :data 0.2)))
      (2042
        (part-tracker
          "group-outro-port-feathers-n-fur-impact"
          entity
          "particleman"
          joint
          "particleB"
          track
          #t
          duration
          (frame-range 2042 2043)
          )
        )
      (2105
        (part-tracker
          "group-outro-port-feathers-n-fur"
          entity
          "particleman"
          joint
          "particleC"
          track
          #t
          duration
          (frame-range 2105 2300)
          )
        )
      (2334
        (setting-reset sfx-volume mode 'rel value (new 'static 'bfloat :data 0.4))
        (apply
          ,(lambda ()
             (with-pp
               (set-setting! 'process-mask 'set 0 (process-mask enemy platform projectile))
               (let ((gp-0 (get-process *default-dead-pool* part-tracker #x4000)))
                 (when gp-0
                   (let ((t9-2 (method-of-type part-tracker activate)))
                     (t9-2 (the-as part-tracker gp-0) pp (symbol->string (-> part-tracker symbol)) (the-as pointer #x70004000))
                     )
                   (let ((t9-3 run-function-in-process)
                         (a0-3 gp-0)
                         (a1-3 part-tracker-init)
                         (a2-5 (-> *part-group-id-table* 1272))
                         (a3-2 #x2dc6c0)
                         (t0-1 #f)
                         (t1-1 #f)
                         (t2-0 #f)
                         (t3-0 *launch-matrix*)
                         )
                     (set! (-> t3-0 trans quad) (-> (new 'static 'vector :x 860160.0 :y 122880.0 :z 6062080.0 :w 1.0) quad))
                     ((the-as (function object object object object object object object object none) t9-3)
                      a0-3
                      a1-3
                      a2-5
                      a3-2
                      t0-1
                      t1-1
                      t2-0
                      t3-0
                      )
                     )
                   (-> gp-0 ppointer)
                   )
                 )
               )
             )
          )
        )
      (2490
        (setting-reset sfx-volume mode 'rel value (new 'static 'bfloat :data 0.5))
        (apply ,(lambda () (with-pp
                             (start-credits pp)
                             (none)
                             )
                        )
               )
        )
      (10000 (apply ,(lambda () (set! (-> hiphog memory-mode) (load-buffer-mode small-edge)) 0 (none))))
      )
    :cut-list '(245
       299
       358
       401
       437
       493
       611
       784
       881
       969
       1003
       1047
       1159
       1212
       1238
       1290
       1394
       1529
       1629
       1725
       1817
       1871
       2032
       2105
       2256
       2334
       )
    :wait-ground-time (seconds 1)
    :draw-target #f
    :abort #t
    :actor (new 'static 'boxed-array :type scene-actor
      (new 'static 'scene-actor
        :name "scenecamera"
        :level #f
        :art-group "skel-scenecamera"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :camera 4
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "sidekick-highres"
        :level 'hiphog
        :art-group "skel-sidekick-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "jak-highres"
        :level 'hiphog
        :art-group "skel-jak-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "samos-highres"
        :level 'outrocst
        :art-group "skel-samos-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "sig-highres"
        :level 'lhipout
        :art-group "skel-sig-highres"
        :prefix ""
        :draw-frames '((min 881) (969 max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "pecker-highres"
        :level 'lhipout
        :art-group "skel-pecker-highres"
        :prefix ""
        :draw-frames '((min 611) (784 max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "crocadog-highres"
        :level 'lhipout
        :art-group "skel-crocadog-highres"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "sew-gold-key"
        :level 'lhipout
        :art-group "skel-sew-gold-key"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      (new 'static 'scene-actor
        :name "particleman"
        :level 'lhipout
        :art-group "skel-particleman"
        :prefix ""
        :draw-frames '((min max))
        :scissor-frames '()
        :flags #x1
        :shadow-flags -1
        :shadow-volume-joint #f
        )
      )
    :load-point-obj "ctyport-outro"
    :end-point-obj "ctyport-start"
    :borrow '((outrocst 0 portwall display) (hiphog 0 lhipout display))
    :sfx-volume 0.2
    :ambient-volume -1.0
    :music-volume -1.0
    :blackout-end #t
    :peaceful #t
    :music-delay 1500.0
    :save #t
    )
  )




