;;-*-Lisp-*-
(in-package goal)

;; name: level-info.gc
;; name in dgo: level-info
;; dgos: ENGINE, GAME

;; DECOMP BEGINS

(define *task-level* (new 'static 'boxed-array :type symbol
                       'default
                       'city
                       'stadium
                       'fortress
                       'ruins
                       'strip
                       'atoll
                       'sewer
                       'mountain
                       'forest
                       'drill
                       'palace
                       'tomb
                       'dig
                       'castle
                       'under
                       'consite
                       'nest
                       )
        )

(define default-level (new 'static 'level-load-info
                        :index 1
                        :name 'default-level
                        :visname 'default-level-vis
                        :nickname 'default-level
                        :dbname 'default-level
                        :taskname 'default
                        :packages '()
                        :memory-mode (load-buffer-mode large)
                        :music-bank #f
                        :ambient-sounds '()
                        :mood-func 'update-mood-default
                        :mood-init #f
                        :ocean #f
                        :sky #t
                        :use-camera-other #f
                        :continues '()
                        :tasks '()
                        :priority 100
                        :load-commands '()
                        :alt-load-commands '()
                        :bsp-mask #xffffffffffffffff
                        :buttom-height (meters -20)
                        :run-packages '()
                        :wait-for-load #t
                        :login-func #f
                        :activate-func #f
                        :deactivate-func #f
                        :kill-func #f
                        :borrow-level (new 'static 'array symbol 2 #f #f)
                        :borrow-display? (new 'static 'array symbol 2 #f #f)
                        :texture-anim-tfrag #f
                        :texture-anim-pris #f
                        :texture-anim-shrub #f
                        :texture-anim-alpha #f
                        :texture-anim-water #f
                        :texture-anim-twarp #f
                        :texture-anim-pris2 #f
                        :texture-anim-sprite #f
                        :texture-anim-map #f
                        :texture-anim-sky #f
                        :draw-priority 10.0
                        :fog-height 327680.0
                        :bigmap-id (bigmap-id bigmap-id-20)
                        :ocean-near-translucent? #t
                        :ocean-far? #f
                        :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                        :max-rain 1.0
                        :fog-mult 1.0
                        :ocean-alpha 1.0
                        :extra-sound-bank #f
                        )
        )

(set! (-> default-level dbname) #f)

(define intro (new 'static 'level-load-info
                :index 2
                :name 'intro
                :visname 'intro-vis
                :nickname 'int
                :dbname 'intro
                :taskname 'default
                :packages '(intro)
                :memory-mode (load-buffer-mode medium)
                :music-bank #f
                :ambient-sounds '()
                :mood-func 'update-mood-default
                :mood-init #f
                :ocean #f
                :sky #f
                :use-camera-other #f
                :continues '()
                :tasks '()
                :priority 100
                :load-commands '()
                :alt-load-commands '()
                :bsp-mask #xffffffffffffffff
                :buttom-height (meters -10000000)
                :run-packages '("common")
                :wait-for-load #f
                :login-func #f
                :activate-func #f
                :deactivate-func #f
                :kill-func #f
                :borrow-level (new 'static 'array symbol 2 #f #f)
                :borrow-display? (new 'static 'array symbol 2 #f #f)
                :texture-anim-tfrag #f
                :texture-anim-pris #f
                :texture-anim-shrub #f
                :texture-anim-alpha #f
                :texture-anim-water #f
                :texture-anim-twarp #f
                :texture-anim-pris2 #f
                :texture-anim-sprite #f
                :texture-anim-map #f
                :texture-anim-sky #f
                :draw-priority 10.0
                :fog-height 327680.0
                :bigmap-id (bigmap-id bigmap-id-20)
                :ocean-near-translucent? #t
                :ocean-far? #f
                :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                :max-rain 1.0
                :fog-mult 1.0
                :ocean-alpha 1.0
                :extra-sound-bank #f
                )
        )

(define demo
  (new 'static 'level-load-info
    :index 3
    :name 'demo
    :visname 'demo-vis
    :nickname 'demo
    :dbname 'demo
    :taskname 'default
    :packages '(demo)
    :memory-mode (load-buffer-mode small-center)
    :music-bank #f
    :ambient-sounds '()
    :mood-func 'update-mood-default
    :mood-init #f
    :ocean #f
    :sky #f
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "demo-start"
        :level 'demo
        :flags (continue-flags demo)
        :trans (new 'static 'vector :x 4014080.0 :y 348160.0 :z 1417216.0 :w 1.0)
        :quat (new 'static 'vector :w 1.0)
        :camera-trans (new 'static 'vector :x 76871.68 :y 55061.707 :z -938752.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.8743 0.0 0.4852))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.2117 0.8997 0.3816))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.4365 -0.4364 0.7866))
          )
        :on-goto #f
        :vis-nick 'demo
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'demo :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctysluma :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'demo1)
        )
      (new 'static 'continue-point
        :name "demo-restart"
        :level 'demo
        :flags (continue-flags demo)
        :trans (new 'static 'vector :x 4014080.0 :y 348160.0 :z 1417216.0 :w 1.0)
        :quat (new 'static 'vector :w 1.0)
        :camera-trans (new 'static 'vector :x 76871.68 :y 55061.707 :z -938752.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.8743 0.0 0.4852))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.2117 0.8997 0.3816))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.4365 -0.4364 0.7866))
          )
        :on-goto #f
        :vis-nick 'demo
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'demo :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'demo1)
        )
      (new 'static 'continue-point
        :name "demo-movie"
        :level 'demo
        :trans (new 'static 'vector :x 4014080.0 :y 348160.0 :z 1417216.0 :w 1.0)
        :quat (new 'static 'vector :w 1.0)
        :camera-trans (new 'static 'vector :x 4349280.0 :y 54451.406 :z 960109.4 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9995 0.0 -0.0307))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0037 0.9925 -0.1216))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0305 -0.1216 -0.9921))
          )
        :on-goto #f
        :vis-nick 'demo
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'demo :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctysluma :display? 'actor :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'demo1)
        )
      (new 'static 'continue-point
        :name "demo-movie-end"
        :level 'demo
        :flags (continue-flags demo-movie)
        :trans (new 'static 'vector :x 4014080.0 :y 348160.0 :z 1417216.0 :w 1.0)
        :quat (new 'static 'vector :w 1.0)
        :camera-trans (new 'static 'vector :x 76871.68 :y 55061.707 :z -938752.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.8743 0.0 0.4852))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.2117 0.8997 0.3816))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.4365 -0.4364 0.7866))
          )
        :on-goto #f
        :vis-nick 'demo
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'demo :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctysluma :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'demo1)
        )
      (new 'static 'continue-point
        :name "lkiddoge-skip0"
        :level 'demo
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 4468809.5 :y 32759.809 :z 775372.4 :w 1.0)
        :quat (new 'static 'vector :y -0.8818 :w -0.4715)
        :camera-trans (new 'static 'vector :x 4418151.0 :y 53856.258 :z 783193.3 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1471 0.0 -0.9891))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1193 0.9926 -0.0177))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9818 -0.1207 -0.146))
          )
        :on-goto #f
        :vis-nick 'ctysluma
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctysluma :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'hideout :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -10000000)
    :run-packages '("common")
    :wait-for-load #f
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-20)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :max-rain 1.0
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define title
  (new 'static 'level-load-info
    :index 4
    :name 'title
    :visname 'title-vis
    :nickname 'title
    :dbname 'title
    :taskname 'default
    :packages '(title)
    :music-bank #f
    :ambient-sounds '()
    :mood-func 'update-mood-default
    :mood-init #f
    :ocean #f
    :sky #f
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "title-start"
        :level 'title
        :flags (continue-flags title)
        :trans (new 'static 'vector :x 4014080.0 :y 348160.0 :z 1417216.0 :w 1.0)
        :quat (new 'static 'vector :w 1.0)
        :camera-trans (new 'static 'vector :x 76871.68 :y 55061.707 :z -938752.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.8743 0.0 0.4852))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.2117 0.8997 0.3816))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.4365 -0.4364 0.7866))
          )
        :on-goto #f
        :vis-nick 'title
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'title :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctysluma :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'demo1 #f #f)
        )
      (new 'static 'continue-point
        :name "title-restart"
        :level 'title
        :flags (continue-flags title)
        :trans (new 'static 'vector :x 4014080.0 :y 348160.0 :z 1417216.0 :w 1.0)
        :quat (new 'static 'vector :w 1.0)
        :camera-trans (new 'static 'vector :x 76871.68 :y 55061.707 :z -938752.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.8743 0.0 0.4852))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.2117 0.8997 0.3816))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.4365 -0.4364 0.7866))
          )
        :on-goto '(want-continue "title-start")
        :vis-nick 'title
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'title :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctysluma :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'demo1 #f #f)
        )
      (new 'static 'continue-point
        :name "title-movie"
        :level 'title
        :flags (continue-flags change-continue)
        :trans (new 'static 'vector :x 4014080.0 :y 348160.0 :z 1417216.0 :w 1.0)
        :quat (new 'static 'vector :w 1.0)
        :camera-trans (new 'static 'vector :x 4349280.0 :y 54451.406 :z 960109.4 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9995 0.0 -0.0307))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0037 0.9925 -0.1216))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0305 -0.1216 -0.9921))
          )
        :on-goto #f
        :vis-nick 'title
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'title :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctysluma :display? 'actor :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'demo1 #f #f)
        )
      (new 'static 'continue-point
        :name "title-movie-end"
        :level 'title
        :flags (continue-flags change-continue title-movie)
        :trans (new 'static 'vector :x 4014080.0 :y 348160.0 :z 1417216.0 :w 1.0)
        :quat (new 'static 'vector :w 1.0)
        :camera-trans (new 'static 'vector :x 76871.68 :y 55061.707 :z -938752.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.8743 0.0 0.4852))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.2117 0.8997 0.3816))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.4365 -0.4364 0.7866))
          )
        :on-goto #f
        :vis-nick 'title
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'title :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctysluma :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'demo1 #f #f)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -10000000)
    :run-packages '("common")
    :wait-for-load #f
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-20)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :max-rain 1.0
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define vinroom
  (new 'static 'level-load-info
    :index 5
    :task-level #x1
    :name 'vinroom
    :visname 'vinroom-vis
    :nickname 'vin
    :dbname 'vinroom
    :taskname 'city
    :packages '(vinroom)
    :music-bank #f
    :ambient-sounds '()
    :mood-func 'update-mood-vinroom
    :mood-init #f
    :ocean #f
    :sky #f
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "vinroom-start"
        :level 'vinroom
        :trans (new 'static 'vector :x 4544927.5 :y 104448.0 :z 4547219.5 :w 1.0)
        :quat (new 'static 'vector :y 0.5579 :w 0.8298)
        :camera-trans (new 'static 'vector :x 4518831.0 :y 122459.75 :z 4524515.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.655 0.0 -0.7555))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1562 0.9783 0.1355))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.7392 -0.2068 0.6408))
          )
        :on-goto #f
        :vis-nick 'vinroom
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'vinroom :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyinda :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'vinroom1 'ctywide1 'ctywide2)
        )
      (new 'static 'continue-point
        :name "vinroom-face-warp"
        :level 'vinroom
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 4589356.0 :y 104436.53 :z 4648794.0 :w 1.0)
        :quat (new 'static 'vector :y -0.0314 :w -0.9995)
        :camera-trans (new 'static 'vector :x 4588769.0 :y 125421.16 :z 4597935.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9999 0.0 -0.0116))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0014 0.9926 0.1206))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0115 -0.1206 0.9926))
          )
        :on-goto #f
        :vis-nick 'vinroom
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'vinroom :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyinda :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'vinroom1 'ctywide1 'ctywide2)
        )
      (new 'static 'continue-point
        :name "vinroom-face-door"
        :level 'vinroom
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 4539276.5 :y 104448.0 :z 4540455.0 :w 1.0)
        :quat (new 'static 'vector :y 0.9082 :w -0.4184)
        :camera-trans (new 'static 'vector :x 4575779.0 :y 125541.99 :z 4576384.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.7131 0.0 0.701))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0849 0.9926 -0.0863))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.6958 -0.1211 -0.7078))
          )
        :on-goto #f
        :vis-nick 'vinroom
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'vinroom :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyinda :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'vinroom1 'ctywide1 'ctywide2)
        )
      (new 'static 'continue-point
        :name "vinroom-movie"
        :level 'vinroom
        :flags (continue-flags change-continue)
        :trans (new 'static 'vector :x 4544927.5 :y 104448.0 :z 4547219.5 :w 1.0)
        :quat (new 'static 'vector :y 0.5579 :w 0.8298)
        :camera-trans (new 'static 'vector :x 4518831.0 :y 122459.75 :z 4524515.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.655 0.0 -0.7555))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1562 0.9783 0.1355))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.7392 -0.2068 0.6408))
          )
        :on-goto #f
        :vis-nick 'vinroom
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'vinroom :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyinda :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'vinroom1 'ctywide1 'ctywide2)
        )
      (new 'static 'continue-point
        :name "vinroom-warp"
        :level 'vinroom
        :flags (continue-flags warp-gate)
        :trans (new 'static 'vector :x 4587913.0 :y 104439.805 :z 4673306.0 :w 1.0)
        :quat (new 'static 'vector :y -0.9985 :w 0.0533)
        :camera-trans (new 'static 'vector :x 4586831.5 :y 123462.86 :z 4636004.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9998 0.0 -0.0193))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0037 0.9804 0.1966))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0189 -0.1967 0.9802))
          )
        :on-goto #f
        :vis-nick 'vinroom
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'vinroom :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyinda :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'vinroom1 'ctywide1 'ctywide2)
        )
      (new 'static 'continue-point
        :name "vinroom-demo"
        :level 'vinroom
        :flags (continue-flags change-continue)
        :trans (new 'static 'vector :x 4590761.0 :y 104436.53 :z 4592729.0 :w 1.0)
        :quat (new 'static 'vector :y -0.8565 :w 0.516)
        :camera-trans (new 'static 'vector :x 4562904.0 :y 121919.08 :z 4567433.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.6942 0.0 -0.7196))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1163 0.9868 0.1122))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.7102 -0.1616 0.6851))
          )
        :on-goto #f
        :vis-nick 'vinroom
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'vinroom :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'demo :display? 'special :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'demo1)
        )
      (new 'static 'continue-point
        :name "vinroom-demo-end"
        :level 'vinroom
        :flags (continue-flags change-continue demo-end)
        :trans (new 'static 'vector :x 4590761.0 :y 104436.53 :z 4592729.0 :w 1.0)
        :quat (new 'static 'vector :y -0.8565 :w 0.516)
        :camera-trans (new 'static 'vector :x 4562904.0 :y 121919.08 :z 4567433.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.6942 0.0 -0.7196))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1163 0.9868 0.1122))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.7102 -0.1616 0.6851))
          )
        :on-goto #f
        :vis-nick 'vinroom
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'vinroom :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'demo :display? 'special :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'strip1 'strip2 'strip3)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -15)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :base-task-mask (task-mask task0)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-20)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define drillmid
  (new 'static 'level-load-info
    :index 6
    :task-level #xa
    :name 'drillmid
    :visname 'drillmid-vis
    :nickname 'dmi
    :dbname 'drillmid
    :taskname 'drill
    :packages '(hoverp turretp drill)
    :memory-mode (load-buffer-mode small-center)
    :music-bank 'strip
    :ambient-sounds '()
    :mood-func 'update-mood-drill
    :mood-init 'init-mood-drill
    :ocean #f
    :sky #t
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "drill1-warp"
        :level 'drillmid
        :flags (continue-flags warp-gate)
        :trans (new 'static 'vector :x -350734.34 :y 32768.0 :z 885082.1 :w 1.0)
        :quat (new 'static 'vector :y -0.6878 :w 0.7258)
        :camera-trans (new 'static 'vector :x -391860.62 :y 53180.008 :z 885485.2 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0034 0.0 -0.9999))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1944 0.9809 -0.0006))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9809 -0.1944 -0.0033))
          )
        :on-goto #f
        :vis-nick 'drillmid
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'drillmid :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'drill :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'drillmtn :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'drill1 'drill2 'drill3)
        )
      (new 'static 'continue-point
        :name "drill-warp-gunship"
        :level 'drillmid
        :flags (continue-flags warp-gate)
        :trans (new 'static 'vector :x 108875.77 :y 65527.81 :z 27369.473 :w 1.0)
        :quat (new 'static 'vector :y -0.7367 :w -0.6761)
        :camera-trans (new 'static 'vector :x 149320.5 :y 85877.15 :z 20893.287 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1677 0.0 0.9858))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1916 0.9809 0.0326))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.967 -0.1944 0.1645))
          )
        :on-goto #f
        :vis-nick 'drillmid
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'drillmid :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'drill :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'drillmtn :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'drill4 'drill5 'drill6)
        )
      (new 'static 'continue-point
        :name "drillmid-checkpoint"
        :level 'drillmid
        :flags (continue-flags no-auto test)
        :trans (new 'static 'vector :x 858380.7 :y 49152.0 :z -652619.75 :w 1.0)
        :quat (new 'static 'vector :y 0.9999 :w -0.0117)
        :camera-trans (new 'static 'vector :x 859736.06 :y 70317.67 :z -609632.25 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9996 0.0 0.0278))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0049 0.984 -0.178))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0274 -0.1781 -0.9836))
          )
        :on-goto #f
        :vis-nick 'drillmid
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'drillmid :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'drill :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'drillmtn :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'drill4 'drill5 'drill6)
        )
      (new 'static 'continue-point
        :name "drillmid-checkpoint-b"
        :level 'drillmid
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x -700254.2 :y 49141.35 :z -849702.06 :w 1.0)
        :quat (new 'static 'vector :y 0.6248 :w -0.7807)
        :camera-trans (new 'static 'vector :x -663167.4 :y 70235.75 :z -871562.9 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.506 0.0 0.8625))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1509 0.9845 0.0885))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.8491 -0.175 0.4982))
          )
        :on-goto #f
        :vis-nick 'drillmid
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'drillmid :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'drill :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'drillmtn :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'drill4 'drill5 'drill6)
        )
      (new 'static 'continue-point
        :name "drillmid-checkpoint-c"
        :level 'drillmid
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x -711355.6 :y 98293.35 :z -723961.06 :w 1.0)
        :quat (new 'static 'vector :y 0.9459 :w 0.3242)
        :camera-trans (new 'static 'vector :x -736509.1 :y 119387.34 :z -688592.9 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.7988 0.0 -0.6014))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1034 0.985 -0.1374))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.5925 -0.172 -0.7869))
          )
        :on-goto #f
        :vis-nick 'drillmid
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'drillmid :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'drill :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'drillmtn :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'drill4 'drill5 'drill6)
        )
      (new 'static 'continue-point
        :name "drillmid-ship-warp"
        :level 'drillmid
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 675723.25 :y 98298.67 :z -740878.75 :w 1.0)
        :quat (new 'static 'vector :y -0.4186 :w -0.9081)
        :camera-trans (new 'static 'vector :x 646477.8 :y 119392.664 :z -772429.8 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.7325 0.0 -0.6807))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1193 0.9844 0.1284))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.6701 -0.1753 0.7211))
          )
        :on-goto #f
        :vis-nick 'drillmid
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'drillmid :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'drill :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'drillmtn :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'drill4 'drill5 'drill6)
        )
      (new 'static 'continue-point
        :name "drill3-warp"
        :level 'drillmid
        :flags (continue-flags warp-gate)
        :trans (new 'static 'vector :x -350734.34 :y 32768.0 :z 885082.1 :w 1.0)
        :quat (new 'static 'vector :y -0.6878 :w 0.7258)
        :camera-trans (new 'static 'vector :x -391860.62 :y 53180.008 :z 885485.2 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0034 0.0 -0.9999))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1944 0.9809 -0.0006))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9809 -0.1944 -0.0033))
          )
        :on-goto #f
        :vis-nick 'drillmid
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'drillmid :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'drill :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'drillmtn :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'drill7 'drill8 'mech)
        )
      (new 'static 'continue-point
        :name "drill-escape"
        :level 'drillmid
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 590609.2 :y -114696.6 :z -383934.47 :w 1.0)
        :quat (new 'static 'vector :y -0.1772 :w -0.9841)
        :camera-trans (new 'static 'vector :x 584495.94 :y -93804.95 :z -434038.78 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9926 0.0 -0.1206))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0145 0.9927 0.1196))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1197 -0.1205 0.9854))
          )
        :on-goto #f
        :vis-nick 'drillmid
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'drillmid :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'drillb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'drillmtn :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'drill7 'drill8 'mech)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -44)
    :run-packages '("common")
    :wait-for-load #t
    :login-func 'drill-login
    :activate-func 'drill-activate
    :deactivate-func 'drill-deactivate
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :base-task-mask (task-mask task0)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-5)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 1.0 1.0 0.0 1.0))
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define drill (new 'static 'level-load-info
                :index 7
                :task-level #xa
                :name 'drill
                :visname 'drill-vis
                :nickname 'dri
                :dbname 'drill
                :taskname 'drill
                :packages '()
                :music-bank 'strip
                :ambient-sounds '()
                :mood-func 'update-mood-drill
                :mood-init 'init-mood-drill
                :ocean #f
                :sky #t
                :use-camera-other #f
                :continues '()
                :tasks '()
                :priority 100
                :load-commands '()
                :alt-load-commands '()
                :bsp-mask #xffffffffffffffff
                :buttom-height (meters -44)
                :run-packages '(drill)
                :wait-for-load #t
                :login-func #f
                :activate-func #f
                :deactivate-func #f
                :kill-func #f
                :borrow-level (new 'static 'array symbol 2 #f #f)
                :borrow-display? (new 'static 'array symbol 2 #f #f)
                :base-task-mask (task-mask task0)
                :texture-anim-tfrag #f
                :texture-anim-pris #f
                :texture-anim-shrub #f
                :texture-anim-alpha #f
                :texture-anim-water #f
                :texture-anim-twarp #f
                :texture-anim-pris2 #f
                :texture-anim-sprite #f
                :texture-anim-map #f
                :texture-anim-sky #f
                :draw-priority 10.0
                :fog-height 327680.0
                :bigmap-id (bigmap-id bigmap-id-5)
                :ocean-near-translucent? #t
                :ocean-far? #f
                :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 1.0 1.0 0.0 1.0))
                :fog-mult 1.0
                :ocean-alpha 1.0
                :extra-sound-bank #f
                )
        )

(define drillb (new 'static 'level-load-info
                 :index 8
                 :task-level #xa
                 :name 'drillb
                 :visname 'drillb-vis
                 :nickname 'drb
                 :dbname 'drillb
                 :taskname 'drill
                 :packages '()
                 :music-bank 'strip
                 :ambient-sounds '()
                 :mood-func 'update-mood-drillb
                 :mood-init 'init-mood-drillb
                 :ocean #f
                 :sky #t
                 :use-camera-other #f
                 :continues '()
                 :tasks '()
                 :priority 100
                 :load-commands '()
                 :alt-load-commands '()
                 :bsp-mask #xffffffffffffffff
                 :buttom-height (meters -44)
                 :run-packages '(drill)
                 :wait-for-load #t
                 :login-func #f
                 :activate-func #f
                 :deactivate-func #f
                 :kill-func #f
                 :borrow-level (new 'static 'array symbol 2 #f #f)
                 :borrow-display? (new 'static 'array symbol 2 #f #f)
                 :base-task-mask (task-mask task0)
                 :texture-anim-tfrag #f
                 :texture-anim-pris #f
                 :texture-anim-shrub #f
                 :texture-anim-alpha #f
                 :texture-anim-water #f
                 :texture-anim-twarp #f
                 :texture-anim-pris2 #f
                 :texture-anim-sprite #f
                 :texture-anim-map #f
                 :texture-anim-sky #f
                 :draw-priority 10.0
                 :fog-height 327680.0
                 :bigmap-id (bigmap-id bigmap-id-5)
                 :ocean-near-translucent? #t
                 :ocean-far? #f
                 :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 1.0 1.0 0.0 1.0))
                 :fog-mult 1.0
                 :ocean-alpha 1.0
                 :extra-sound-bank #f
                 )
        )

(define drillmtn (new 'static 'level-load-info
                   :index 9
                   :task-level #xa
                   :name 'drillmtn
                   :visname 'drillmtn-vis
                   :nickname 'drillmtn
                   :dbname 'drillmtn
                   :taskname 'drill
                   :packages '(mechp)
                   :music-bank 'strip
                   :ambient-sounds '()
                   :mood-func 'update-mood-drillmnt
                   :mood-init #f
                   :ocean #f
                   :sky #t
                   :use-camera-other #t
                   :continues '()
                   :tasks '()
                   :priority 100
                   :load-commands '()
                   :alt-load-commands '()
                   :bsp-mask #xffffffffffffffff
                   :buttom-height (meters -44)
                   :run-packages '(drill)
                   :wait-for-load #t
                   :login-func #f
                   :activate-func #f
                   :deactivate-func #f
                   :kill-func #f
                   :borrow-level (new 'static 'array symbol 2 #f #f)
                   :borrow-display? (new 'static 'array symbol 2 #f #f)
                   :base-task-mask (task-mask task0 primary0)
                   :texture-anim-tfrag #f
                   :texture-anim-pris #f
                   :texture-anim-shrub #f
                   :texture-anim-alpha #f
                   :texture-anim-water #f
                   :texture-anim-twarp #f
                   :texture-anim-pris2 #f
                   :texture-anim-sprite #f
                   :texture-anim-map #f
                   :texture-anim-sky #f
                   :draw-priority 10.0
                   :fog-height 327680.0
                   :bigmap-id (bigmap-id bigmap-id-5)
                   :ocean-near-translucent? #t
                   :ocean-far? #f
                   :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 1.0 1.0 0.0 1.0))
                   :fog-mult 1.0
                   :ocean-alpha 1.0
                   :extra-sound-bank #f
                   )
        )

(define sewer
  (new 'static 'level-load-info
    :index 10
    :task-level #x7
    :name 'sewer
    :visname 'sewer-vis
    :nickname 'sew
    :dbname 'sewer
    :taskname 'sewer
    :packages '()
    :memory-mode (load-buffer-mode large)
    :music-bank 'sewer
    :ambient-sounds '()
    :mood-func 'update-mood-copy-sewerb
    :mood-init #f
    :ocean '*ocean-map-sewer*
    :sky #f
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "sewer-start"
        :level 'sewer
        :flags (continue-flags test)
        :trans (new 'static 'vector :x 4626914.0 :y -207171.17 :z 2095240.8 :w 1.0)
        :quat (new 'static 'vector :x -0.0011 :y -0.7059 :z 0.0011 :w -0.7082)
        :camera-trans (new 'static 'vector :x 4575577.5 :y -186075.14 :z 2093692.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0298 0.0 -0.9995))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1202 0.9927 0.0035))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9922 -0.1203 0.0296))
          )
        :on-goto #f
        :vis-nick 'sewer
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'sewerb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'sewer :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'sewer1 'sewer2 'ctywide1)
        )
      (new 'static 'continue-point
        :name "sewer-start-kiosk"
        :level 'sewer
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 4609054.5 :y -207171.17 :z 2096862.0 :w 1.0)
        :quat (new 'static 'vector :x -0.001 :y -0.7399 :z 0.0009 :w -0.6726)
        :camera-trans (new 'static 'vector :x 4566007.5 :y -186076.78 :z 2096889.9 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0007 0.0 -0.9999))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.175 0.9845 0.0001))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9845 -0.175 0.0007))
          )
        :on-goto #f
        :vis-nick 'sewer
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'sewerb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'sewer :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'sewer1 'sewer2 'ctywide1)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -150)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func 'sewer-startup
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :base-task-mask (task-mask task0)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id sewer-default)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :fog-mult 1.0
    :ocean-alpha 0.5
    :extra-sound-bank #f
    )
  )

(define sewerb (new 'static 'level-load-info
                 :index 11
                 :task-level #x7
                 :name 'sewerb
                 :visname 'sewerb-vis
                 :nickname 'seb
                 :dbname 'sewerb
                 :taskname 'sewer
                 :packages '(botp halp rufp sewer)
                 :music-bank #f
                 :ambient-sounds '()
                 :mood-func 'update-mood-sewer
                 :mood-init 'init-mood-sewer
                 :ocean '*ocean-map-sewer*
                 :sky #f
                 :use-camera-other #f
                 :continues '()
                 :tasks '()
                 :priority 100
                 :load-commands '()
                 :alt-load-commands '()
                 :bsp-mask #xffffffffffffffff
                 :buttom-height (meters -150)
                 :run-packages '("common")
                 :wait-for-load #t
                 :login-func #f
                 :activate-func #f
                 :deactivate-func #f
                 :kill-func #f
                 :borrow-level (new 'static 'array symbol 2 #f #f)
                 :borrow-display? (new 'static 'array symbol 2 #f #f)
                 :base-task-mask (task-mask task0)
                 :texture-anim-tfrag #f
                 :texture-anim-pris #f
                 :texture-anim-shrub #f
                 :texture-anim-alpha #f
                 :texture-anim-water #f
                 :texture-anim-twarp #f
                 :texture-anim-pris2 #f
                 :texture-anim-sprite #f
                 :texture-anim-map #f
                 :texture-anim-sky #f
                 :draw-priority 10.0
                 :fog-height 327680.0
                 :bigmap-id (bigmap-id sewer-default)
                 :ocean-near-translucent? #t
                 :ocean-far? #f
                 :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                 :fog-mult 1.0
                 :ocean-alpha 0.5
                 :extra-sound-bank #f
                 )
        )

(define sewesc
  (new 'static 'level-load-info
    :index 12
    :task-level #x7
    :name 'sewesc
    :visname 'sewesc-vis
    :nickname 'swe
    :dbname 'sewer
    :taskname 'sewer
    :packages '(botp halp rufp sewer)
    :memory-mode (load-buffer-mode large)
    :music-bank 'sewer
    :ambient-sounds '()
    :mood-func 'update-mood-copy-sewescb
    :mood-init #f
    :ocean '*ocean-map-sewer*
    :sky #f
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "sewesc-start"
        :level 'sewesc
        :flags (continue-flags test)
        :trans (new 'static 'vector :x 4510956.0 :y -199200.77 :z 2098181.0 :w 1.0)
        :quat (new 'static 'vector :y 0.6989 :w 0.7151)
        :camera-trans (new 'static 'vector :x 4481299.0 :y -183847.73 :z 2098697.8 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0182 0.0 -0.9998))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.2118 0.9772 -0.0038))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9771 -0.2118 -0.0178))
          )
        :on-goto #f
        :vis-nick 'sewesc
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'sewescb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'sewesc :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'sewer4 'sewer5 'ctywide1)
        )
      (new 'static 'continue-point
        :name "hal2-plant-first-bomb"
        :level 'sewesc
        :flags (continue-flags change-continue)
        :trans (new 'static 'vector :x 4714868.5 :y -273857.75 :z 1846698.8 :w 1.0)
        :quat (new 'static 'vector :y -0.9872 :w 0.1593)
        :camera-trans (new 'static 'vector :x 4715987.0 :y -253211.44 :z 1895919.6 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9996 0.0 0.027))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0033 0.9921 -0.1249))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0268 -0.125 -0.9917))
          )
        :on-goto '(begin
           (send-event "hosehead-10" 'die-fast)
           (send-event "hosehead-6" 'die-fast)
           (send-event "hosehead-9" 'die-fast)
           )
        :vis-nick 'sewesc
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'sewescb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'sewesc :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'sewer4 'sewer5 'sewer6)
        )
      (new 'static 'continue-point
        :name "hal2-go-elevator2"
        :level 'sewesc
        :flags (continue-flags change-continue)
        :trans (new 'static 'vector :x 4890738.5 :y -236485.84 :z 1366747.1 :w 1.0)
        :quat (new 'static 'vector :y -0.0163 :w 0.9998)
        :camera-trans (new 'static 'vector :x 4882573.5 :y -215391.03 :z 1316146.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9872 0.0 -0.1589))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0191 0.9927 0.1189))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1577 -0.1205 0.98))
          )
        :on-goto '(begin
           (send-event "battle-42" 'beaten)
           (send-event "hosehead-7" 'die-fast)
           (send-event "hosehead-14" 'die-fast)
           (send-event "battle-45" 'beaten)
           (send-event "hosehead-15" 'die-fast)
           (send-event "hosehead-16" 'die-fast)
           (send-event "battle-46" 'beaten)
           )
        :vis-nick 'sewesc
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'sewescb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'sewesc :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'sewer4 'sewer5 'sewer6)
        )
      (new 'static 'continue-point
        :name "hal2-wall2"
        :level 'sewesc
        :flags (continue-flags change-continue)
        :trans (new 'static 'vector :x 5797019.0 :y -373470.8 :z 2002612.2 :w 1.0)
        :quat (new 'static 'vector :y -0.5003 :w 0.8658)
        :camera-trans (new 'static 'vector :x 5833251.0 :y -356394.6 :z 2001096.2 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0433 0.0 0.999))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1673 0.9858 0.0072))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9849 -0.1675 0.0427))
          )
        :on-goto #f
        :vis-nick 'sewesc
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'sewescb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'sewesc :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'sewer4 'sewer5 'sewer6)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -150)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :base-task-mask (task-mask task0)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-16)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :fog-mult 1.0
    :ocean-alpha 0.5
    :extra-sound-bank #f
    )
  )

(define sewescb (new 'static 'level-load-info
                  :index 13
                  :task-level #x7
                  :name 'sewescb
                  :visname 'sewescb-vis
                  :nickname 'swb
                  :dbname 'sewescb
                  :taskname 'sewer
                  :packages '(botp halp sewer)
                  :music-bank #f
                  :ambient-sounds '()
                  :mood-func 'update-mood-sewer
                  :mood-init 'init-mood-sewer
                  :ocean '*ocean-map-sewer*
                  :sky #f
                  :use-camera-other #f
                  :continues '()
                  :tasks '()
                  :priority 100
                  :load-commands '()
                  :alt-load-commands '()
                  :bsp-mask #xffffffffffffffff
                  :buttom-height (meters -150)
                  :run-packages '("common")
                  :wait-for-load #t
                  :login-func #f
                  :activate-func #f
                  :deactivate-func #f
                  :kill-func #f
                  :borrow-level (new 'static 'array symbol 2 #f #f)
                  :borrow-display? (new 'static 'array symbol 2 #f #f)
                  :base-task-mask (task-mask task0)
                  :texture-anim-tfrag #f
                  :texture-anim-pris #f
                  :texture-anim-shrub #f
                  :texture-anim-alpha #f
                  :texture-anim-water #f
                  :texture-anim-twarp #f
                  :texture-anim-pris2 #f
                  :texture-anim-sprite #f
                  :texture-anim-map #f
                  :texture-anim-sky #f
                  :draw-priority 10.0
                  :fog-height 327680.0
                  :bigmap-id (bigmap-id bigmap-id-16)
                  :ocean-near-translucent? #t
                  :ocean-far? #f
                  :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                  :fog-mult 1.0
                  :ocean-alpha 0.5
                  :extra-sound-bank #f
                  )
        )

(define tomba
  (new 'static 'level-load-info
    :index 14
    :task-level #xc
    :name 'tomba
    :visname 'tomba-vis
    :nickname 'toa
    :dbname 'tomba
    :taskname 'tomb
    :packages '(tomb)
    :memory-mode (load-buffer-mode small-center)
    :music-bank 'tomb
    :ambient-sounds '()
    :sound-reverb 0.2
    :mood-func 'update-mood-tomba
    :mood-init #f
    :ocean #f
    :sky #f
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "tomb-start"
        :level 'tomba
        :flags (continue-flags test)
        :trans (new 'static 'vector :x 788477.56 :y -131086.34 :z 4270196.5 :w 1.0)
        :quat (new 'static 'vector :y 0.1202 :w -0.9927)
        :camera-trans (new 'static 'vector :x 787632.1 :y -109991.94 :z 4227172.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9998 0.0 -0.019))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0033 0.9845 0.1751))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0187 -0.1751 0.9843))
          )
        :on-goto '(cond
           ((task-closed? "tomb-boss-resolution")
            (want-load 'tomba 'tombd)
            )
           ((and (task-closed? "tomb-water-resolution") (task-closed? "tomb-poles-resolution"))
            (want-load 'tomba 'tombboss 'tombext)
            )
           )
        :vis-nick 'tomba
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'tomba :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'tombb :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'tombc :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'tomb1 'tomb2 'tomb3)
        )
      (new 'static 'continue-point
        :name "tomb-water-switch"
        :level 'tomba
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 546954.06 :y -221173.77 :z 4443352.5 :w 1.0)
        :quat (new 'static 'vector :y 0.4261 :w 0.9046)
        :camera-trans (new 'static 'vector :x 517370.25 :y -201672.7 :z 4408801.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.7655 0.0 -0.6434))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0811 0.992 0.0964))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.6382 -0.126 0.7594))
          )
        :on-goto #f
        :vis-nick 'tomba
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'tomba :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'tombb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'tombc :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'tomb1 'tomb2 'tomb3)
        )
      (new 'static 'continue-point
        :name "tomb-poles-switch"
        :level 'tomba
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 1024811.8 :y -221145.1 :z 4446944.5 :w 1.0)
        :quat (new 'static 'vector :y -0.3799 :w 0.9249)
        :camera-trans (new 'static 'vector :x 1055031.8 :y -200876.03 :z 4409347.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.7783 0.0 0.6278))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0749 0.9928 0.0929))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.6233 -0.1194 0.7727))
          )
        :on-goto #f
        :vis-nick 'tomba
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'tomba :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'tombb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'tombc :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'tomb1 'tomb2 'tomb3)
        )
      (new 'static 'continue-point
        :name "tomb-poles-start"
        :level 'tomba
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 1112014.0 :y -319493.3 :z 5235235.0 :w 1.0)
        :quat (new 'static 'vector :y 0.627 :w 0.7789)
        :camera-trans (new 'static 'vector :x 1069004.8 :y -298403.84 :z 5235391.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0024 0.0 -0.9999))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1759 0.9844 -0.0004))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9844 -0.1759 -0.0024))
          )
        :on-goto #f
        :vis-nick 'tomba
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'tomba :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'tombb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'tombc :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'tomb1 'tomb2 'tomb3)
        )
      (new 'static 'continue-point
        :name "tomb-water-start"
        :level 'tomba
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 301066.25 :y -249855.6 :z 5230534.5 :w 1.0)
        :quat (new 'static 'vector :y 0.7382 :w -0.6745)
        :camera-trans (new 'static 'vector :x 343957.5 :y -228723.92 :z 5233923.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0808 0.0 0.9967))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1759 0.9842 -0.0142))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.981 -0.1765 -0.0795))
          )
        :on-goto #f
        :vis-nick 'tomba
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'tomba :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'tombb :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'tombc :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'tomb1 'tomb2 'tomb3)
        )
      (new 'static 'continue-point
        :name "tomb-start-bottom"
        :level 'tomba
        :trans (new 'static 'vector :x 787469.1 :y -328398.44 :z 4641485.0 :w 1.0)
        :quat (new 'static 'vector :y 0.0711 :w -0.9974)
        :camera-trans (new 'static 'vector :x 786737.1 :y -308266.6 :z 4601024.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9998 0.0 -0.0167))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.003 0.983 0.1833))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0164 -0.1834 0.9828))
          )
        :on-goto #f
        :vis-nick 'tomba
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'tomba :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'tombb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'tombc :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'tomb1 'tomb2 'tomb3)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -150)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-18)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define tombb
  (new 'static 'level-load-info
    :index 15
    :task-level #xc
    :name 'tombb
    :visname 'tombb-vis
    :nickname 'tob
    :dbname 'tombb
    :taskname 'tomb
    :packages '()
    :music-bank 'tomb
    :ambient-sounds '()
    :mood-func 'update-mood-tombb
    :mood-init #f
    :ocean #f
    :sky #f
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "tomb-boulder-pre"
        :level 'tombb
        :flags (continue-flags no-auto test)
        :trans (new 'static 'vector :x 1422869.2 :y -471039.6 :z 4741993.5 :w 1.0)
        :quat (new 'static 'vector :y 0.9394 :w -0.3426)
        :camera-trans (new 'static 'vector :x 1438060.1 :y -455063.16 :z 4770099.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.8799 0.0 0.475))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0932 0.9805 -0.1727))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.4658 -0.1962 -0.8628))
          )
        :on-goto '(begin (send-event "tomb-boulder-4" 'reset))
        :vis-nick 'tombb
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'tomba :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'tombb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'tombe :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'tomb1 'tomb2 'tomb3)
        )
      (new 'static 'continue-point
        :name "tomb-boulder-end"
        :level 'tombb
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 1380638.8 :y -471055.56 :z 4636391.5 :w 1.0)
        :quat (new 'static 'vector :y -0.9989 :w -0.0447)
        :camera-trans (new 'static 'vector :x 1384123.6 :y -451303.44 :z 4682465.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9969 0.0 0.0776))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0096 0.9922 -0.1238))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.077 -0.1242 -0.9892))
          )
        :on-goto '(begin (send-event "tomb-boulder-door-1" 'reset) (send-event "tomb-boulder-4" 'reset))
        :vis-nick 'tombb
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'tomba :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'tombb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'tombc :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'tomb1 'tomb2 'tomb3)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -150)
    :run-packages '("common" "tomb")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-18)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define tombc
  (new 'static 'level-load-info
    :index 16
    :task-level #xc
    :name 'tombc
    :visname 'tombc-vis
    :nickname 'toc
    :dbname 'tombc
    :taskname 'tomb
    :packages '()
    :music-bank 'tomb
    :ambient-sounds '()
    :mood-func 'update-mood-tombc
    :mood-init 'init-mood-tombc
    :ocean #f
    :sky #f
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "tombc-midpoint"
        :level 'tombc
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x -40754.79 :y -225288.61 :z 5402507.0 :w 1.0)
        :quat (new 'static 'vector :y 0.9992 :w -0.0391)
        :camera-trans (new 'static 'vector :x -35458.664 :y -204193.8 :z 5445199.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9923 0.0 0.1231))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0215 0.9845 -0.1739))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1212 -0.1752 -0.977))
          )
        :on-goto #f
        :vis-nick 'tombc
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'tomba :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'tombb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'tombc :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'tomb1 'tomb2 'tomb3)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -150)
    :run-packages '("common" "tomb")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-18)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define tombd
  (new 'static 'level-load-info
    :index 17
    :task-level #xc
    :name 'tombd
    :visname 'tombd-vis
    :nickname 'tod
    :dbname 'tombd
    :taskname 'tomb
    :packages '(elevatorp)
    :music-bank 'tomb
    :ambient-sounds '()
    :mood-func 'update-mood-tombd
    :mood-init #f
    :ocean #f
    :sky #f
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "tombd-start"
        :level 'tombd
        :trans (new 'static 'vector :x 791477.06 :y -131071.59 :z 4095800.0 :w 1.0)
        :quat (new 'static 'vector :y 0.023 :w 0.9997)
        :camera-trans (new 'static 'vector :x 790579.2 :y -109949.75 :z 4052774.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9997 0.0 -0.0236))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0041 0.9843 0.176))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0232 -0.1761 0.984))
          )
        :on-goto #f
        :vis-nick 'tombd
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'tombd :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'tomba :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'tomb1 'tomb2 'tomb3)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -150)
    :run-packages '("common" "tomb")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-18)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define tombe
  (new 'static 'level-load-info
    :index 18
    :task-level #xc
    :name 'tombe
    :visname 'tombe-vis
    :nickname 'toe
    :dbname 'tombe
    :taskname 'tomb
    :packages '(tombe)
    :music-bank 'tomb
    :ambient-sounds '()
    :mood-func 'update-mood-tombe
    :mood-init #f
    :ocean #f
    :sky #f
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "tomb-boulder"
        :level 'tombe
        :flags (continue-flags no-auto indax)
        :trans (new 'static 'vector :x 1434184.9 :y -471039.6 :z 4588284.5 :w 1.0)
        :quat (new 'static 'vector :y -0.7083 :w -0.7058)
        :camera-trans (new 'static 'vector :x 1475034.8 :y -450687.78 :z 4586864.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0335 0.0 0.9994))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1939 0.9809 0.0065))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9804 -0.1941 0.0329))
          )
        :on-goto '(begin (task-close! "tomb-poles-poles") (send-event "tomb-boulder-4" 'reset))
        :vis-nick 'tombe
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'tomba :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'tombb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'tombe :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'tomb7 'tomb8 'tomb9)
        )
      (new 'static 'continue-point
        :name "tomb-boulder-explode"
        :level 'tombe
        :flags (continue-flags no-auto indax)
        :trans (new 'static 'vector :x 1884670.0 :y -511351.2 :z 4874090.5 :w 1.0)
        :quat (new 'static 'vector :y 0.1226 :w -0.9924)
        :camera-trans (new 'static 'vector :x 1884803.1 :y -503642.53 :z 4929176.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9995 0.0 0.0305))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0041 0.9907 -0.1355))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0302 -0.1356 -0.9902))
          )
        :on-goto '(begin (task-close! "tomb-poles-poles") (send-event "tomb-boulder-4" 'reset))
        :vis-nick 'tombe
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'tomba :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'tombb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'tombe :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'tomb7 'tomb8 'tomb9)
        )
      (new 'static 'continue-point
        :name "tomb-boulder-climb"
        :level 'tombe
        :flags (continue-flags no-auto indax)
        :trans (new 'static 'vector :x 1628354.5 :y -593924.5 :z 5830940.0 :w 1.0)
        :quat (new 'static 'vector :y 0.5849 :w -0.811)
        :camera-trans (new 'static 'vector :x 1614351.1 :y -519260.56 :z 5832011.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0 0.0 -1.0))
          (new 'static 'vector3s :data (new 'static 'array float 3 1.0 0.0 0.0))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0 -1.0 0.0))
          )
        :on-goto '(begin
           (task-close! "tomb-poles-poles")
           (alive "tomb-boulder-4" store #f)
           (send-event "tomb-boulder-4" 'reset)
           )
        :vis-nick 'tombe
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'tomba :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'tombb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'tombe :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'tomb7 'tomb8 'tomb9)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -150)
    :run-packages '("common" "tomb")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-18)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define tombext (new 'static 'level-load-info
                  :index 19
                  :task-level #xc
                  :name 'tombext
                  :visname 'tombext-vis
                  :nickname 'tombext
                  :dbname 'tombext
                  :taskname 'tomb
                  :packages '()
                  :music-bank 'tomb
                  :ambient-sounds '()
                  :mood-func 'update-mood-tombboss
                  :mood-init #f
                  :ocean #f
                  :sky #f
                  :use-camera-other #f
                  :continues '()
                  :tasks '()
                  :priority 100
                  :load-commands '()
                  :alt-load-commands '()
                  :bsp-mask #xffffffffffffffff
                  :buttom-height (meters -150)
                  :run-packages '("common" "tomb")
                  :wait-for-load #f
                  :login-func #f
                  :activate-func #f
                  :deactivate-func #f
                  :kill-func #f
                  :borrow-level (new 'static 'array symbol 2 #f #f)
                  :borrow-display? (new 'static 'array symbol 2 #f #f)
                  :texture-anim-tfrag #f
                  :texture-anim-pris #f
                  :texture-anim-shrub #f
                  :texture-anim-alpha #f
                  :texture-anim-water #f
                  :texture-anim-twarp #f
                  :texture-anim-pris2 #f
                  :texture-anim-sprite #f
                  :texture-anim-map #f
                  :texture-anim-sky #f
                  :draw-priority 10.0
                  :fog-height 327680.0
                  :bigmap-id (bigmap-id bigmap-id-18)
                  :ocean-near-translucent? #t
                  :ocean-far? #f
                  :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                  :fog-mult 1.0
                  :ocean-alpha 1.0
                  :extra-sound-bank #f
                  )
        )

(define tombboss
  (new 'static 'level-load-info
    :index 20
    :task-level #xc
    :name 'tombboss
    :visname 'tombboss-vis
    :nickname 'tbo
    :dbname 'tombboss
    :taskname 'tomb
    :packages '()
    :music-bank 'tomb
    :ambient-sounds '()
    :mood-func 'update-mood-tombboss
    :mood-init #f
    :ocean #f
    :sky #f
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "tombboss-start"
        :level 'tombboss
        :flags (continue-flags test)
        :trans (new 'static 'vector :x 788065.5 :y -294914.06 :z 5738845.5 :w 1.0)
        :quat (new 'static 'vector :y 0.1262 :w 0.9919)
        :camera-trans (new 'static 'vector :x 790481.3 :y -274841.2 :z 5698627.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9982 0.0 0.0596))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0109 0.9829 0.1832))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0586 -0.1836 0.9812))
          )
        :on-goto #f
        :vis-nick 'tombboss
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'tomba :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'tombboss :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'tombext :display? 'special :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'tomb4 'tomb5 'tomb6)
        )
      (new 'static 'continue-point
        :name "tombboss-play-start"
        :level 'tombboss
        :trans (new 'static 'vector :x 790505.06 :y -294911.6 :z 5844947.0 :w 1.0)
        :quat (new 'static 'vector :y 0.7064 :w 0.7077)
        :camera-trans (new 'static 'vector :x 791466.4 :y -279683.06 :z 5803118.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9955 0.0 -0.0944))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0071 0.9971 0.0754))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0941 -0.0758 0.9926))
          )
        :on-goto #f
        :vis-nick 'tombboss
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'tomba :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'tombboss :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'tombext :display? 'special :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'tomb4 'tomb5 'tomb6)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -150)
    :run-packages '("common" "tomb")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-18)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define under
  (new 'static 'level-load-info
    :index 21
    :task-level #xf
    :name 'under
    :visname 'under-vis
    :nickname 'und
    :dbname 'under
    :taskname 'under
    :packages '()
    :memory-mode (load-buffer-mode large)
    :music-bank 'sewer
    :ambient-sounds '()
    :mood-func 'update-mood-copy-underb
    :mood-init #f
    :ocean #f
    :sky #f
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "under-start"
        :level 'under
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x -107954.99 :y -266244.1 :z 7974990.0 :w 1.0)
        :quat (new 'static 'vector :y -0.8287 :w 0.5596)
        :camera-trans (new 'static 'vector :x -62684.773 :y -245149.28 :z 7998945.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.4672 0.0 0.8841))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1071 0.9926 -0.0566))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.8776 -0.1211 -0.4637))
          )
        :on-goto '(apply ,(lambda () (set! *bot-record-path* -1) (none)))
        :vis-nick 'under
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'underb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'under :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'under3 'under4 'under5)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -150)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :base-task-mask (task-mask task0)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-19)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define underb
  (new 'static 'level-load-info
    :index 22
    :task-level #xf
    :name 'underb
    :visname 'underb-vis
    :nickname 'unb
    :dbname 'underb
    :taskname 'under
    :packages '(hoverp botp halp rufp sigp mechp under)
    :music-bank 'sewer
    :ambient-sounds '()
    :mood-func 'update-mood-under
    :mood-init #f
    :ocean #f
    :sky #f
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "under-airlock"
        :level 'underb
        :flags (continue-flags test)
        :trans (new 'static 'vector :x 247507.36 :y -265523.62 :z 7132200.0 :w 1.0)
        :quat (new 'static 'vector :y -0.8764 :w -0.4814)
        :camera-trans (new 'static 'vector :x 205734.7 :y -246507.11 :z 7122904.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.2238 0.0 -0.9746))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1366 0.9901 0.0313))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9649 -0.1401 0.2216))
          )
        :on-goto #f
        :vis-nick 'underb
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'underb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'under :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'under1 'under2 'mechwat)
        )
      (new 'static 'continue-point
        :name "cent1-path0-record-path"
        :level 'underb
        :flags (continue-flags change-continue record-sig)
        :trans (new 'static 'vector :x -324353.22 :y -274439.78 :z 8362734.5 :w 1.0)
        :quat (new 'static 'vector :y 0.1254 :w -0.992)
        :camera-trans (new 'static 'vector :x -308162.56 :y -253848.78 :z 8316009.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9453 0.0 0.3261))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0392 0.9927 0.1137))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.3238 -0.1202 0.9384))
          )
        :on-goto '(apply ,(lambda () (reset! (-> *display* user0-clock)) (none)))
        :vis-nick 'under
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'underb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'under :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'under3 'under4 'under5)
        )
      (new 'static 'continue-point
        :name "cent2-path0-record-path"
        :level 'underb
        :flags (continue-flags change-continue record-sig)
        :trans (new 'static 'vector :x -855634.3 :y -290815.6 :z 7995028.5 :w 1.0)
        :quat (new 'static 'vector :y 0.6088 :w 0.7933)
        :camera-trans (new 'static 'vector :x -899652.0 :y -269720.78 :z 7968866.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.5098 0.0 -0.8602))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1043 0.9926 0.0618))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.8539 -0.1213 0.506))
          )
        :on-goto '(apply ,(lambda () (reset! (-> *display* user0-clock)) (none)))
        :vis-nick 'under
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'underb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'under :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'under3 'under4 'under5)
        )
      (new 'static 'continue-point
        :name "sig5-skip-to-cent2"
        :level 'underb
        :flags (continue-flags change-continue)
        :trans (new 'static 'vector :x -1036247.9 :y -290824.2 :z 8022382.0 :w 1.0)
        :quat (new 'static 'vector :y 0.9395 :w 0.3424)
        :camera-trans (new 'static 'vector :x -1064226.9 :y -261537.8 :z 8065295.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.8375 0.0 -0.5463))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1432 0.9649 -0.2196))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.5272 -0.2622 -0.8082))
          )
        :on-goto #f
        :vis-nick 'under
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'underb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'under :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'under3 'under4 'under5)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -150)
    :run-packages '("common")
    :wait-for-load #t
    :login-func 'underb-login
    :activate-func 'underb-activate
    :deactivate-func 'underb-deactivate
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :base-task-mask (task-mask task0)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-19)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define palcab
  (new 'static 'level-load-info
    :index 23
    :task-level #xb
    :name 'palcab
    :visname 'palcab-vis
    :nickname 'pac
    :dbname 'palcab
    :taskname 'palace
    :packages '(palcab)
    :memory-mode (load-buffer-mode small-center)
    :music-bank 'palcab
    :ambient-sounds '()
    :mood-func 'update-mood-palcab
    :mood-init 'init-mood-palcab
    :ocean '*ocean-map-city*
    :sky #t
    :use-camera-other #f
    :part-engine-max #x100
    :continues '((new 'static 'continue-point
        :name "palcab-start"
        :level 'palcab
        :flags (continue-flags test)
        :trans (new 'static 'vector :x 929748.56 :y 1803958.2 :z -568005.8 :w 1.0)
        :quat (new 'static 'vector :y -0.2346 :w -0.972)
        :camera-trans (new 'static 'vector :x 930469.5 :y 1825050.6 :z -611119.94 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9999 0.0 0.0055))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0009 0.9845 0.175))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0054 -0.175 0.9845))
          )
        :on-goto #f
        :vis-nick 'palcab
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'palcab :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'palroof :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'palshaft :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'palcab1 'palcab2)
        )
      (new 'static 'continue-point
        :name "palcab-mid"
        :level 'palcab
        :trans (new 'static 'vector :x 852117.94 :y 1597557.1 :z 857580.3 :w 1.0)
        :quat (new 'static 'vector :y -0.2086 :w 0.9779)
        :camera-trans (new 'static 'vector :x 854145.44 :y 1628896.9 :z 814619.9 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9987 0.0 0.05))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0178 0.9338 0.3571))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0467 -0.3576 0.9326))
          )
        :on-goto '(begin (kill "pal-gun-turret-1" store #f) (kill "crate-731" store #f) (kill "crate-730" store #f))
        :vis-nick 'palcab
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'palcab :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'palroof :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'throne :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'palcab1 'palcab2)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -100)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :base-task-mask (task-mask task0)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-20)
    :ocean-near-translucent? #t
    :ocean-far? #t
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :max-rain 1.0
    :fog-mult 2.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define palshaft
  (new 'static 'level-load-info
    :index 24
    :task-level #xb
    :name 'palshaft
    :visname 'palshaft-vis
    :nickname 'pas
    :dbname 'palshaft
    :taskname 'palace
    :packages '(palshaft elevatorp)
    :music-bank #f
    :ambient-sounds '()
    :mood-func 'update-mood-palshaft
    :mood-init #f
    :ocean #f
    :sky #t
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "palshaft-lobby"
        :level 'palshaft
        :flags (continue-flags change-continue)
        :trans (new 'static 'vector :x 598668.5 :y 69131.06 :z 2697706.0 :w 1.0)
        :quat (new 'static 'vector :y 0.9982 :w -0.0596)
        :camera-trans (new 'static 'vector :x 626226.0 :y 88880.74 :z 2734727.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.8034 0.0 0.5953))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0742 0.9922 -0.1001))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.5907 -0.1246 -0.7971))
          )
        :on-goto #f
        :vis-nick 'palshaft
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'palshaft :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'palent :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'throne :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'palcab1)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -15)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func 'palshaft-deactivate
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :base-task-mask (task-mask task0)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-20)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define palboss (new 'static 'level-load-info
                  :index 25
                  :task-level #xb
                  :name 'palboss
                  :visname 'palboss-vis
                  :nickname 'palboss
                  :dbname 'palboss
                  :taskname 'palace
                  :packages '(palboss)
                  :music-bank 'palcab
                  :ambient-sounds '()
                  :mood-func 'update-mood-default
                  :mood-init #f
                  :ocean '*ocean-map-city*
                  :sky #t
                  :use-camera-other #f
                  :continues '()
                  :tasks '()
                  :priority 100
                  :load-commands '()
                  :alt-load-commands '()
                  :bsp-mask #xffffffffffffffff
                  :buttom-height (meters -100)
                  :run-packages '("common")
                  :wait-for-load #t
                  :login-func #f
                  :activate-func #f
                  :deactivate-func #f
                  :kill-func #f
                  :borrow-level (new 'static 'array symbol 2 #f #f)
                  :borrow-display? (new 'static 'array symbol 2 #f #f)
                  :base-task-mask (task-mask task0)
                  :texture-anim-tfrag #f
                  :texture-anim-pris #f
                  :texture-anim-shrub #f
                  :texture-anim-alpha #f
                  :texture-anim-water #f
                  :texture-anim-twarp '*shield-texture-anim-array*
                  :texture-anim-pris2 #f
                  :texture-anim-sprite #f
                  :texture-anim-map #f
                  :texture-anim-sky #f
                  :draw-priority 10.0
                  :fog-height 327680.0
                  :bigmap-id (bigmap-id bigmap-id-11)
                  :ocean-near-translucent? #t
                  :ocean-far? #t
                  :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.75 1.0 0.75 1.0))
                  :max-rain 1.0
                  :fog-mult 2.0
                  :ocean-alpha 1.0
                  :extra-sound-bank #f
                  )
        )

(define palroof
  (new 'static 'level-load-info
    :index 26
    :task-level #xb
    :name 'palroof
    :visname 'palroof-vis
    :nickname 'par
    :dbname 'palroof
    :taskname 'palace
    :packages '(palroof)
    :music-bank 'palcab
    :ambient-sounds '()
    :mood-func 'update-mood-palroof
    :mood-init 'init-mood-palroof
    :ocean '*ocean-map-city*
    :sky #t
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "palroof-throne"
        :level 'palroof
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 589710.56 :y 1735487.9 :z 2039465.6 :w 1.0)
        :quat (new 'static 'vector :y -0.452 :w 0.8919)
        :camera-trans (new 'static 'vector :x 622908.2 :y 1756602.4 :z 2012121.9 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.635 0.0 0.7724))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1363 0.9843 0.112))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.7603 -0.1764 0.625))
          )
        :on-goto #f
        :vis-nick 'palroof
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'palroof :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'throne :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'palcab :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'palcab1 'palcab2)
        )
      (new 'static 'continue-point
        :name "palroof-boss"
        :level 'palroof
        :flags (continue-flags no-auto test)
        :trans (new 'static 'vector :x 870794.06 :y 1671154.9 :z 2027482.4 :w 1.0)
        :quat (new 'static 'vector :y 0.4793 :w 0.8776)
        :camera-trans (new 'static 'vector :x 831816.06 :y 1693132.0 :z 2045632.9 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.4095 0.0 -0.9122))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.179 0.9805 -0.0804))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.8945 -0.1963 -0.4016))
          )
        :on-goto #f
        :vis-nick 'palroof
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'palroof :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'palboss :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'palcab :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'palroof1 'palroof2 'palroof3)
        )
      (new 'static 'continue-point
        :name "palroof-boss-victory"
        :level 'palroof
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 1175203.4 :y 1671159.0 :z 2741709.5 :w 1.0)
        :quat (new 'static 'vector :y -0.7428 :w 0.6694)
        :camera-trans (new 'static 'vector :x 1222606.5 :y 1692250.5 :z 2761046.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.3758 0.0 0.9266))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1125 0.9925 -0.0456))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9198 -0.1214 -0.373))
          )
        :on-goto #f
        :vis-nick 'palroof
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'palroof :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'palboss :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'palcab :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'palroof1 'palroof2 'palroof3)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -100)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func 'palroof-activate
    :deactivate-func 'palroof-deactivate
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :base-task-mask (task-mask task0)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-11)
    :ocean-near-translucent? #t
    :ocean-far? #t
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.75 1.0 0.75 1.0))
    :max-rain 1.0
    :fog-mult 2.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define palout (new 'static 'level-load-info
                 :index 27
                 :task-level #xb
                 :name 'palout
                 :visname 'palout-vis
                 :nickname 'palout
                 :dbname 'palout
                 :taskname 'palace
                 :packages '(palout)
                 :music-bank #f
                 :ambient-sounds '()
                 :mood-func 'update-mood-palout
                 :mood-init 'init-mood-palout
                 :ocean '*ocean-map-palace*
                 :sky #t
                 :use-camera-other #t
                 :continues '()
                 :tasks '()
                 :priority 100
                 :load-commands '()
                 :alt-load-commands '()
                 :bsp-mask #xffffffffffffffff
                 :buttom-height (meters -15)
                 :run-packages '("common")
                 :wait-for-load #t
                 :login-func #f
                 :activate-func #f
                 :deactivate-func #f
                 :kill-func #f
                 :borrow-level (new 'static 'array symbol 2 #f #f)
                 :borrow-display? (new 'static 'array symbol 2 #f #f)
                 :base-task-mask (task-mask task0)
                 :texture-anim-tfrag #f
                 :texture-anim-pris #f
                 :texture-anim-shrub #f
                 :texture-anim-alpha #f
                 :texture-anim-water #f
                 :texture-anim-twarp #f
                 :texture-anim-pris2 #f
                 :texture-anim-sprite #f
                 :texture-anim-map #f
                 :texture-anim-sky #f
                 :draw-priority 10.0
                 :fog-height 327680.0
                 :bigmap-id (bigmap-id bigmap-id-11)
                 :ocean-near-translucent? #t
                 :ocean-far? #t
                 :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.5 1.0 0.5 0.5))
                 :max-rain 1.0
                 :fog-mult 2.0
                 :ocean-alpha 1.0
                 :extra-sound-bank #f
                 )
        )

(define throne
  (new 'static 'level-load-info
    :index 28
    :task-level #xb
    :name 'throne
    :visname 'throne-vis
    :nickname 'thr
    :dbname 'throne
    :taskname 'palace
    :packages '()
    :music-bank 'palcab
    :ambient-sounds '()
    :mood-func 'update-mood-palent
    :mood-init #f
    :ocean #f
    :sky #t
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "throne-ashelin"
        :level 'throne
        :flags (continue-flags no-auto test)
        :trans (new 'static 'vector :x 634090.3 :y 1414044.9 :z 2314699.2 :w 1.0)
        :quat (new 'static 'vector :y 0.9525 :w -0.3044)
        :camera-trans (new 'static 'vector :x 660229.75 :y 1435136.9 :z 2348906.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.7945 0.0 0.6071))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1061 0.9845 -0.1389))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.5978 -0.1748 -0.7823))
          )
        :on-goto #f
        :vis-nick 'throne
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'palent :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'throne :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'palout :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'palent1 'palent2 'palent3)
        )
      (new 'static 'continue-point
        :name "throne-outro"
        :level 'throne
        :flags (continue-flags scene-wait change-continue)
        :trans (new 'static 'vector :x 634090.3 :y 1414044.9 :z 2314699.2 :w 1.0)
        :quat (new 'static 'vector :y 0.9525 :w -0.3044)
        :camera-trans (new 'static 'vector :x 660229.75 :y 1435136.9 :z 2348906.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.7945 0.0 0.6071))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1061 0.9845 -0.1389))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.5978 -0.1748 -0.7823))
          )
        :on-goto #f
        :vis-nick 'throne
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'outrocst :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'throne :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'palent1 'palent2 'palent3)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -100)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func 'throne-activate
    :deactivate-func 'throne-deactivate
    :kill-func #f
    :borrow-size (new 'static 'array uint16 2 #x514 #x0)
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :base-task-mask (task-mask task0)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-12)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.5 1.0 0.5 0.5))
    :fog-mult 2.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define lbrnermk (new 'static 'level-load-info
                   :index 29
                   :task-level #xb
                   :name 'lbrnermk
                   :visname 'lbrnermk-vis
                   :nickname 'lbrnermk
                   :dbname 'lbrnermk
                   :taskname 'palace
                   :packages '(metalkorp)
                   :memory-mode (load-buffer-mode borrow)
                   :music-bank #f
                   :ambient-sounds '()
                   :mood-func 'update-mood-default
                   :mood-init #f
                   :ocean #f
                   :sky #f
                   :use-camera-other #f
                   :continues '()
                   :tasks '()
                   :priority 100
                   :load-commands '()
                   :alt-load-commands '()
                   :bsp-mask #xffffffffffffffff
                   :buttom-height (meters -20)
                   :run-packages '("common")
                   :wait-for-load #f
                   :login-func #f
                   :activate-func #f
                   :deactivate-func #f
                   :kill-func #f
                   :borrow-level (new 'static 'array symbol 2 #f #f)
                   :borrow-display? (new 'static 'array symbol 2 #f #f)
                   :base-task-mask (task-mask task0)
                   :texture-anim-tfrag #f
                   :texture-anim-pris #f
                   :texture-anim-shrub #f
                   :texture-anim-alpha #f
                   :texture-anim-water #f
                   :texture-anim-twarp '*metkor-texture-anim-array*
                   :texture-anim-pris2 #f
                   :texture-anim-sprite #f
                   :texture-anim-map #f
                   :texture-anim-sky #f
                   :draw-priority 10.0
                   :fog-height 327680.0
                   :bigmap-id (bigmap-id bigmap-id-20)
                   :ocean-near-translucent? #t
                   :ocean-far? #f
                   :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                   :fog-mult 1.0
                   :ocean-alpha 1.0
                   :extra-sound-bank #f
                   )
        )

(define lashthrn (new 'static 'level-load-info
                   :index 30
                   :task-level #xb
                   :name 'lashthrn
                   :visname 'lashthrn-vis
                   :nickname 'lashthrn
                   :dbname 'lashthrn
                   :taskname 'palace
                   :packages '()
                   :memory-mode (load-buffer-mode borrow)
                   :music-bank #f
                   :ambient-sounds '()
                   :mood-func 'update-mood-default
                   :mood-init #f
                   :ocean #f
                   :sky #f
                   :use-camera-other #f
                   :continues '()
                   :tasks '()
                   :priority 100
                   :load-commands '()
                   :alt-load-commands '()
                   :bsp-mask #xffffffffffffffff
                   :buttom-height (meters -20)
                   :run-packages '("common")
                   :wait-for-load #f
                   :login-func #f
                   :activate-func #f
                   :deactivate-func #f
                   :kill-func #f
                   :borrow-level (new 'static 'array symbol 2 #f #f)
                   :borrow-display? (new 'static 'array symbol 2 #f #f)
                   :base-task-mask (task-mask task0)
                   :texture-anim-tfrag #f
                   :texture-anim-pris #f
                   :texture-anim-shrub #f
                   :texture-anim-alpha #f
                   :texture-anim-water #f
                   :texture-anim-twarp #f
                   :texture-anim-pris2 #f
                   :texture-anim-sprite #f
                   :texture-anim-map #f
                   :texture-anim-sky #f
                   :draw-priority 10.0
                   :fog-height 327680.0
                   :bigmap-id (bigmap-id bigmap-id-20)
                   :ocean-near-translucent? #t
                   :ocean-far? #f
                   :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                   :fog-mult 1.0
                   :ocean-alpha 1.0
                   :extra-sound-bank #f
                   )
        )

(define lthrnout (new 'static 'level-load-info
                   :index 31
                   :task-level #xb
                   :name 'lthrnout
                   :visname 'lthrnout-vis
                   :nickname 'lthrnout
                   :dbname 'lthrnout
                   :taskname 'palace
                   :packages '()
                   :memory-mode (load-buffer-mode borrow)
                   :music-bank #f
                   :ambient-sounds '()
                   :mood-func 'update-mood-palent
                   :mood-init #f
                   :ocean #f
                   :sky #f
                   :use-camera-other #f
                   :continues '()
                   :tasks '()
                   :priority 100
                   :load-commands '()
                   :alt-load-commands '()
                   :bsp-mask #xffffffffffffffff
                   :buttom-height (meters -20)
                   :run-packages '("common")
                   :wait-for-load #f
                   :login-func #f
                   :activate-func #f
                   :deactivate-func #f
                   :kill-func #f
                   :borrow-level (new 'static 'array symbol 2 #f #f)
                   :borrow-display? (new 'static 'array symbol 2 #f #f)
                   :base-task-mask (task-mask task0)
                   :texture-anim-tfrag #f
                   :texture-anim-pris #f
                   :texture-anim-shrub #f
                   :texture-anim-alpha #f
                   :texture-anim-water #f
                   :texture-anim-twarp #f
                   :texture-anim-pris2 #f
                   :texture-anim-sprite #f
                   :texture-anim-map #f
                   :texture-anim-sky #f
                   :draw-priority 10.0
                   :fog-height 327680.0
                   :bigmap-id (bigmap-id bigmap-id-20)
                   :ocean-near-translucent? #t
                   :ocean-far? #f
                   :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.5 1.0 0.5 0.5))
                   :fog-mult 1.0
                   :ocean-alpha 1.0
                   :extra-sound-bank #f
                   )
        )

(define palent
  (new 'static 'level-load-info
    :index 32
    :task-level #xb
    :name 'palent
    :visname 'palent-vis
    :nickname 'pae
    :dbname 'palent
    :taskname 'palace
    :packages '()
    :memory-mode (load-buffer-mode small-center)
    :music-bank 'palcab
    :ambient-sounds '()
    :mood-func 'update-mood-palent
    :mood-init #f
    :ocean #f
    :sky #t
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "palent-throne"
        :level 'palent
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 689051.6 :y 1413868.8 :z 2516459.5 :w 1.0)
        :quat (new 'static 'vector :y 0.9997 :z -0.0013 :w -0.0211)
        :camera-trans (new 'static 'vector :x 664995.44 :y 1434960.8 :z 2552149.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.832 0.0 -0.5547))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0972 0.9844 -0.1459))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.5461 -0.1753 -0.8191))
          )
        :on-goto #f
        :vis-nick 'palent
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'palent :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'throne :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'palshaft :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'palent1 'palent2 'palent3)
        )
      (new 'static 'continue-point
        :name "palent-start"
        :level 'palent
        :trans (new 'static 'vector :x 790896.6 :y 1329465.4 :z 2156753.0 :w 1.0)
        :quat (new 'static 'vector :y -0.9978 :w -0.0661)
        :camera-trans (new 'static 'vector :x 780353.1 :y 1350556.0 :z 2198482.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9694 0.0 -0.2452))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0429 0.9845 -0.1696))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.2414 -0.175 -0.9544))
          )
        :on-goto #f
        :vis-nick 'palent
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'palent :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'throne :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'palout :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'palent1 'palent2 'palent3)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -100)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func 'palent-activate
    :deactivate-func 'palent-deactivate
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :base-task-mask (task-mask task0)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-12)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.5 1.0 0.5 0.5))
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define prison
  (new 'static 'level-load-info
    :index 33
    :task-level #x3
    :name 'prison
    :visname 'prison-vis
    :nickname 'pri
    :dbname 'prison
    :taskname 'fortress
    :packages '(prison)
    :memory-mode (load-buffer-mode large)
    :music-bank 'fortress
    :ambient-sounds '()
    :mood-func 'update-mood-prison
    :mood-init 'init-mood-prison
    :ocean #f
    :sky #f
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "prison-start"
        :level 'prison
        :trans (new 'static 'vector :x 1942413.2 :y 34479.31 :z 275525.62 :w 1.0)
        :quat (new 'static 'vector :y 0.4562 :w 0.8898)
        :camera-trans (new 'static 'vector :x 1921090.8 :y 53425.766 :z 237949.75 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.869 0.0 -0.4947))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0663 0.9909 0.1165))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.4903 -0.134 0.8611))
          )
        :on-goto #f
        :vis-nick 'prison
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'prison :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'forexita :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'forexit1 'forexit2)
        )
      (new 'static 'continue-point
        :name "game-start"
        :level 'prison
        :flags (continue-flags game-start)
        :trans (new 'static 'vector :x 1942413.2 :y 34479.31 :z 275525.62 :w 1.0)
        :quat (new 'static 'vector :y 0.4562 :w 0.8898)
        :camera-trans (new 'static 'vector :x 1921090.8 :y 53425.766 :z 237949.75 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.869 0.0 -0.4947))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0663 0.9909 0.1165))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.4903 -0.134 0.8611))
          )
        :on-goto #f
        :vis-nick 'prison
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'prison :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'forexita :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'forexit1 'forexit2)
        )
      (new 'static 'continue-point
        :name "prison-intro-start"
        :level 'prison
        :flags (continue-flags scene-wait change-continue)
        :trans (new 'static 'vector :x 1942413.2 :y 34479.31 :z 275525.62 :w 1.0)
        :quat (new 'static 'vector :y 0.4562 :w 0.8898)
        :camera-trans (new 'static 'vector :x 1921090.8 :y 53425.766 :z 237949.75 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.869 0.0 -0.4947))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0663 0.9909 0.1165))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.4903 -0.134 0.8611))
          )
        :on-goto #f
        :vis-nick 'prison
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'introcst :display? 'special :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'prison :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 #f #f #f)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -100)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-size (new 'static 'array uint16 2 #x8ca #x0)
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :base-task-mask (task-mask task0)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-7)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define ldjakbrn (new 'static 'level-load-info
                   :index 34
                   :name 'ldjakbrn
                   :visname 'ldjakbrn-vis
                   :nickname 'ldjakbrn
                   :dbname 'ldjakbrn
                   :taskname 'default
                   :packages '()
                   :memory-mode (load-buffer-mode borrow)
                   :music-bank #f
                   :ambient-sounds '()
                   :mood-func 'update-mood-copy-prison
                   :mood-init #f
                   :ocean #f
                   :sky #f
                   :use-camera-other #f
                   :continues '()
                   :tasks '()
                   :priority 100
                   :load-commands '()
                   :alt-load-commands '()
                   :bsp-mask #xffffffffffffffff
                   :buttom-height (meters -20)
                   :run-packages '("common")
                   :wait-for-load #f
                   :login-func #f
                   :activate-func #f
                   :deactivate-func #f
                   :kill-func #f
                   :borrow-level (new 'static 'array symbol 2 #f #f)
                   :borrow-display? (new 'static 'array symbol 2 #f #f)
                   :base-task-mask (task-mask task0)
                   :texture-anim-tfrag #f
                   :texture-anim-pris '*jakb-prison-texture-anim-array*
                   :texture-anim-shrub #f
                   :texture-anim-alpha #f
                   :texture-anim-water #f
                   :texture-anim-twarp #f
                   :texture-anim-pris2 #f
                   :texture-anim-sprite #f
                   :texture-anim-map #f
                   :texture-anim-sky #f
                   :draw-priority 10.0
                   :fog-height 327680.0
                   :bigmap-id (bigmap-id bigmap-id-20)
                   :ocean-near-translucent? #t
                   :ocean-far? #f
                   :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                   :fog-mult 1.0
                   :ocean-alpha 1.0
                   :extra-sound-bank #f
                   )
        )

(define lprsncst (new 'static 'level-load-info
                   :index 35
                   :name 'lprsncst
                   :visname 'lprsncst-vis
                   :nickname 'lprsncst
                   :dbname 'lprsncst
                   :taskname 'default
                   :packages '()
                   :memory-mode (load-buffer-mode borrow)
                   :music-bank #f
                   :ambient-sounds '()
                   :mood-func 'update-mood-copy-prison
                   :mood-init #f
                   :ocean #f
                   :sky #f
                   :use-camera-other #f
                   :continues '()
                   :tasks '()
                   :priority 100
                   :load-commands '()
                   :alt-load-commands '()
                   :bsp-mask #xffffffffffffffff
                   :buttom-height (meters -20)
                   :run-packages '("common")
                   :wait-for-load #f
                   :login-func #f
                   :activate-func #f
                   :deactivate-func #f
                   :kill-func #f
                   :borrow-level (new 'static 'array symbol 2 #f #f)
                   :borrow-display? (new 'static 'array symbol 2 #f #f)
                   :base-task-mask (task-mask task0)
                   :texture-anim-tfrag #f
                   :texture-anim-pris #f
                   :texture-anim-shrub #f
                   :texture-anim-alpha #f
                   :texture-anim-water #f
                   :texture-anim-twarp #f
                   :texture-anim-pris2 #f
                   :texture-anim-sprite #f
                   :texture-anim-map #f
                   :texture-anim-sky #f
                   :draw-priority 10.0
                   :fog-height 327680.0
                   :bigmap-id (bigmap-id bigmap-id-20)
                   :ocean-near-translucent? #t
                   :ocean-far? #f
                   :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                   :fog-mult 1.0
                   :ocean-alpha 1.0
                   :extra-sound-bank #f
                   )
        )

(define forexita
  (new 'static 'level-load-info
    :index 36
    :task-level #x3
    :name 'forexita
    :visname 'forexita-vis
    :nickname 'fea
    :dbname 'forexita
    :taskname 'fortress
    :packages '(guardp forexita)
    :music-bank 'fortress
    :ambient-sounds '()
    :mood-func 'update-mood-fortress
    :mood-init #f
    :ocean #f
    :sky #f
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "forexita-start"
        :level 'forexita
        :trans (new 'static 'vector :x 2350610.0 :y 106496.0 :z 771498.4 :w 1.0)
        :quat (new 'static 'vector :y -0.9953 :w -0.0961)
        :camera-trans (new 'static 'vector :x 2314255.2 :y 125394.945 :z 794408.94 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.5484 0.0 -0.8361))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1139 0.9906 -0.0747))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.8283 -0.1362 -0.5433))
          )
        :on-goto #f
        :vis-nick 'forexita
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'forexita :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'prison :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'forexit1 'forexit2 'ctywide1)
        )
      (new 'static 'continue-point
        :name "forexita-mid"
        :level 'forexita
        :flags (continue-flags no-auto test)
        :trans (new 'static 'vector :x 3037138.0 :y 295920.03 :z 686462.2 :w 1.0)
        :quat (new 'static 'vector :y -0.9805 :w -0.1963)
        :camera-trans (new 'static 'vector :x 3038071.2 :y 317014.03 :z 729465.6 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9998 0.0 0.0192))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0033 0.9843 -0.1759))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0189 -0.1759 -0.9842))
          )
        :on-goto #f
        :vis-nick 'forexita
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'forexita :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'forexitb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'forexit1 'forexit2)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -100)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :base-task-mask (task-mask task0)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-7)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define forexitb
  (new 'static 'level-load-info
    :index 37
    :task-level #x3
    :name 'forexitb
    :visname 'forexitb-vis
    :nickname 'feb
    :dbname 'forexitb
    :taskname 'fortress
    :packages '(tubep forexitb)
    :music-bank 'fortress
    :ambient-sounds '()
    :mood-func 'update-mood-fortress
    :mood-init #f
    :ocean #f
    :sky #f
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "forexitb-end"
        :level 'forexitb
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 2338518.2 :y 123119.62 :z 41246.31 :w 1.0)
        :quat (new 'static 'vector :y 0.9969 :w 0.078)
        :camera-trans (new 'static 'vector :x 2333426.0 :y 144214.02 :z 92192.36 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9954 0.0 -0.0954))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0116 0.9925 -0.1212))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0947 -0.1217 -0.988))
          )
        :on-goto #f
        :vis-nick 'forexitb
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'forexitb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyslumb :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'forexit1 'forexit2 'ctywide1)
        )
      (new 'static 'continue-point
        :name "forexita-tube"
        :level 'forexitb
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 2698146.5 :y 245757.95 :z 169426.94 :w 1.0)
        :quat (new 'static 'vector :y -0.0838 :w 0.9964)
        :camera-trans (new 'static 'vector :x 2697397.8 :y 267042.0 :z 118417.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9999 0.0 -0.0018))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0002 0.992 0.1254))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0018 -0.1254 0.992))
          )
        :on-goto #f
        :vis-nick 'forexitb
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'forexita :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'forexitb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'forexit1 'forexit2 'ctywide1)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -100)
    :run-packages '("common" "forexita")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :base-task-mask (task-mask task0)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-7)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define forresca
  (new 'static 'level-load-info
    :index 38
    :task-level #x3
    :name 'forresca
    :visname 'forresca-vis
    :nickname 'fra
    :dbname 'forresca
    :taskname 'fortress
    :packages '(hoverp guardp forresca)
    :music-bank 'fortress
    :ambient-sounds '()
    :mood-func 'update-mood-forresca
    :mood-init 'init-mood-forresca
    :ocean #f
    :sky #f
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "forresca-start"
        :level 'forresca
        :trans (new 'static 'vector :x 2999090.5 :y 33777.664 :z 924853.9 :w 1.0)
        :quat (new 'static 'vector :y -0.5685 :w 0.8226)
        :camera-trans (new 'static 'vector :x 3049807.8 :y 54745.496 :z 923088.06 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0353 0.0 0.9993))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1203 0.9927 0.0042))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.992 -0.1204 0.0351))
          )
        :on-goto #f
        :vis-nick 'forresca
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'forresca :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'forrescb :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'forresc1 'forresc2)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -100)
    :run-packages '("common")
    :wait-for-load #t
    :login-func 'fortress-login
    :activate-func 'fortress-activate
    :deactivate-func 'fortress-deactivate
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :base-task-mask (task-mask task0)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-7)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define forrescb
  (new 'static 'level-load-info
    :index 39
    :task-level #x3
    :name 'forrescb
    :visname 'forrescb-vis
    :nickname 'frb
    :dbname 'forrescb
    :taskname 'fortress
    :packages '(forrescb)
    :music-bank 'fortress
    :ambient-sounds '()
    :mood-func 'update-mood-forrescb
    :mood-init 'init-mood-forrescb
    :ocean #f
    :sky #f
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "forrescb-mid"
        :level 'forrescb
        :flags (continue-flags no-auto test)
        :trans (new 'static 'vector :x 1873107.4 :y 55606.066 :z 602671.94 :w 1.0)
        :quat (new 'static 'vector :y -0.6722 :w 0.7403)
        :camera-trans (new 'static 'vector :x 1917880.4 :y 74982.195 :z 601561.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0242 0.0 0.9997))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1286 0.9916 0.0031))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9913 -0.1286 0.024))
          )
        :on-goto #f
        :vis-nick 'forrescb
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'forresca :display? 'special :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'forrescb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'forresc1 'forresc2)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -100)
    :run-packages '("common" "forrescb" "hoverp")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :base-task-mask (task-mask task0)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-7)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define fordumpa
  (new 'static 'level-load-info
    :index 40
    :task-level #x3
    :name 'fordumpa
    :visname 'fordumpa-vis
    :nickname 'fda
    :dbname 'fordumpa
    :taskname 'fortress
    :packages '(fordumpa)
    :music-bank 'fortress
    :ambient-sounds '()
    :mood-func 'update-mood-fordumpa
    :mood-init 'init-mood-fordumpa
    :ocean #f
    :sky #f
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "fordumpa-start"
        :level 'fordumpa
        :trans (new 'static 'vector :x 3016168.2 :y 37068.39 :z 937013.7 :w 1.0)
        :quat (new 'static 'vector :y -0.4976 :w 0.8673)
        :camera-trans (new 'static 'vector :x 3033360.0 :y 56420.76 :z 903003.75 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.8897 0.0 0.4564))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0884 0.981 0.1723))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.4478 -0.1937 0.8728))
          )
        :on-goto #f
        :vis-nick 'fordumpa
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'fordumpa :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'fordumpb :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'fordump1 'fordump2 'fordump3)
        )
      (new 'static 'continue-point
        :name "fordumpa-midpoint"
        :level 'fordumpa
        :flags (continue-flags no-auto test)
        :trans (new 'static 'vector :x 1918058.5 :y 94208.0 :z 1170815.8 :w 1.0)
        :quat (new 'static 'vector :y -0.7063 :w 0.7078)
        :camera-trans (new 'static 'vector :x 1960915.4 :y 115301.99 :z 1166747.2 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0944 0.0 0.9955))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1741 0.9845 0.0165))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9801 -0.1749 0.0929))
          )
        :on-goto #f
        :vis-nick 'fordumpa
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'fordumpa :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'fordumpb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'fordump1 'fordump2 'fordump3)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -100)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :base-task-mask (task-mask task0)
    :texture-anim-tfrag #f
    :texture-anim-pris '*fortress-pris-texture-anim-array*
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp '*fortress-warp-texture-anim-array*
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-7)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define fordumpb
  (new 'static 'level-load-info
    :index 41
    :task-level #x3
    :name 'fordumpb
    :visname 'fordumpb-vis
    :nickname 'fdb
    :dbname 'fordumpb
    :taskname 'fortress
    :packages '(guardp fordumpb)
    :memory-mode (load-buffer-mode small-center)
    :music-bank 'fortress
    :ambient-sounds '()
    :mood-func 'update-mood-fortress
    :mood-init #f
    :ocean #f
    :sky #f
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "fordumpb-start"
        :level 'fordumpb
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 1730156.5 :y 94197.35 :z 1192282.9 :w 1.0)
        :quat (new 'static 'vector :y 0.297 :w -0.9548)
        :camera-trans (new 'static 'vector :x 1769338.5 :y 113987.99 :z 1167812.6 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.5295 0.0 0.8483))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1061 0.9921 0.0662))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.8416 -0.1251 0.5253))
          )
        :on-goto #f
        :vis-nick 'fordumpb
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'fordumpa :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'fordumpb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'fordump1 'fordump2 'fordump3)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -100)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :base-task-mask (task-mask task0)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-7)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define fordumpc
  (new 'static 'level-load-info
    :index 42
    :task-level #x3
    :name 'fordumpc
    :visname 'fordumpc-vis
    :nickname 'fordumpc
    :dbname 'fordumpc
    :taskname 'fortress
    :packages '(fordumpc)
    :music-bank 'fortress
    :ambient-sounds '()
    :mood-func 'update-mood-fordumpc
    :mood-init 'init-mood-fordumpc
    :ocean #f
    :sky #f
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "fordumpc-start"
        :level 'fordumpc
        :flags (continue-flags test)
        :trans (new 'static 'vector :x 2587180.8 :y 147453.95 :z 1446389.4 :w 1.0)
        :quat (new 'static 'vector :y -0.992 :w -0.1258)
        :camera-trans (new 'static 'vector :x 2593020.8 :y 168384.92 :z 1404207.9 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9922 0.0 0.1239))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0242 0.9806 0.1943))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1215 -0.1958 0.973))
          )
        :on-goto #f
        :vis-nick 'fordumpc
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'fordumpc :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'fordumpb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'fordumpd :display? 'special :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'fordump1 'fordump2)
        )
      (new 'static 'continue-point
        :name "fordumpc-movie-end"
        :level 'fordumpc
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 2572884.0 :y 147681.28 :z 1454391.8 :w 1.0)
        :quat (new 'static 'vector :y 0.5741 :w 0.8187)
        :camera-trans (new 'static 'vector :x 2561296.0 :y 168775.69 :z 1412936.1 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9529 0.0 -0.3032))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0533 0.9844 0.1676))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.2984 -0.1758 0.938))
          )
        :on-goto #f
        :vis-nick 'fordumpc
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'fordumpc :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctysluma :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'fordump1 'fordump2)
        )
      (new 'static 'continue-point
        :name "fordumpc-explode-movie"
        :level 'fordumpc
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 2572884.0 :y 147681.28 :z 1454391.8 :w 1.0)
        :quat (new 'static 'vector :y 0.5741 :w 0.8187)
        :camera-trans (new 'static 'vector :x 2561296.0 :y 168775.69 :z 1412936.1 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9529 0.0 -0.3032))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0533 0.9844 0.1676))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.2984 -0.1758 0.938))
          )
        :on-goto #f
        :vis-nick 'fordumpc
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'fordumpc :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctysluma :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'fordump1 'fordump2)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -100)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :base-task-mask (task-mask task0)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-7)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define fordumpd (new 'static 'level-load-info
                   :index 43
                   :task-level #x3
                   :name 'fordumpd
                   :visname 'fordumpd-vis
                   :nickname 'fordumpd
                   :dbname 'fordumpd
                   :taskname 'fortress
                   :packages '()
                   :music-bank 'fortress
                   :ambient-sounds '()
                   :mood-func 'update-mood-fortress
                   :mood-init #f
                   :ocean #f
                   :sky #f
                   :use-camera-other #f
                   :continues '()
                   :tasks '()
                   :priority 100
                   :load-commands '()
                   :alt-load-commands '()
                   :bsp-mask #xffffffffffffffff
                   :buttom-height (meters -100)
                   :run-packages '("common")
                   :wait-for-load #t
                   :login-func #f
                   :activate-func #f
                   :deactivate-func #f
                   :kill-func #f
                   :borrow-level (new 'static 'array symbol 2 #f #f)
                   :borrow-display? (new 'static 'array symbol 2 #f #f)
                   :base-task-mask (task-mask task0)
                   :texture-anim-tfrag #f
                   :texture-anim-pris #f
                   :texture-anim-shrub #f
                   :texture-anim-alpha #f
                   :texture-anim-water #f
                   :texture-anim-twarp #f
                   :texture-anim-pris2 #f
                   :texture-anim-sprite #f
                   :texture-anim-map #f
                   :texture-anim-sky #f
                   :draw-priority 10.0
                   :fog-height 327680.0
                   :bigmap-id (bigmap-id bigmap-id-7)
                   :ocean-near-translucent? #t
                   :ocean-far? #f
                   :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                   :fog-mult 1.0
                   :ocean-alpha 1.0
                   :extra-sound-bank #f
                   )
        )

(define strip
  (new 'static 'level-load-info
    :index 44
    :task-level #x5
    :name 'strip
    :visname 'strip-vis
    :nickname 'str
    :dbname 'strip
    :taskname 'strip
    :packages '(hoverp strip)
    :memory-mode (load-buffer-mode large)
    :music-bank 'strip
    :ambient-sounds '()
    :mood-func 'update-mood-strip
    :mood-init 'init-mood-strip
    :ocean '*ocean-map-strip*
    :sky #t
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "strip-start"
        :level 'strip
        :flags (continue-flags test)
        :trans (new 'static 'vector :x 10392208.0 :y 291383.72 :z -194403.94 :w 1.0)
        :quat (new 'static 'vector :y -0.7102 :w 0.7039)
        :camera-trans (new 'static 'vector :x 10421589.0 :y 307730.44 :z -178237.84 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.4791 0.0 0.8777))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1612 0.9829 -0.088))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.8628 -0.1837 -0.4709))
          )
        :on-goto #f
        :vis-nick 'strip
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'vinroom :display? 'special :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'strip :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'strip1 'strip2 'strip3)
        )
      (new 'static 'continue-point
        :name "strip-warp"
        :level 'strip
        :flags (continue-flags warp-gate)
        :trans (new 'static 'vector :x 10392208.0 :y 291383.72 :z -194403.94 :w 1.0)
        :quat (new 'static 'vector :y -0.7102 :w 0.7039)
        :camera-trans (new 'static 'vector :x 10421589.0 :y 307730.44 :z -178237.84 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.4791 0.0 0.8777))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1612 0.9829 -0.088))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.8628 -0.1837 -0.4709))
          )
        :on-goto #f
        :vis-nick 'strip
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'vinroom :display? 'special :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'strip :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'strip1 'strip2 'strip3)
        )
      (new 'static 'continue-point
        :name "strip-warp-2"
        :level 'strip
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 9677517.0 :y 368640.0 :z -174448.23 :w 1.0)
        :quat (new 'static 'vector :y 0.7146 :w -0.6994)
        :camera-trans (new 'static 'vector :x 9634240.0 :y 388288.9 :z -160018.44 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.3543 0.0 -0.9351))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1344 0.9896 -0.0509))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9253 -0.1437 -0.3506))
          )
        :on-goto #f
        :vis-nick 'strip
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'vinroom :display? 'special :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'strip :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'strip1 'strip2 'strip3)
        )
      (new 'static 'continue-point
        :name "strip-drop-midpoint"
        :level 'strip
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 11098202.0 :y 469663.34 :z 371692.34 :w 1.0)
        :quat (new 'static 'vector :y -0.878 :w 0.4786)
        :camera-trans (new 'static 'vector :x 11138690.0 :y 490766.34 :z 403012.8 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.6111 0.0 0.7915))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0967 0.9925 -0.0746))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.7855 -0.1222 -0.6065))
          )
        :on-goto #f
        :vis-nick 'strip
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'vinroom :display? 'special :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'strip :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'strip1 'strip2 'strip3)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -5)
    :run-packages '("common")
    :wait-for-load #t
    :login-func 'strip-login
    :activate-func 'strip-activate
    :deactivate-func 'strip-deactivate
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :base-task-mask (task-mask task0)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-17)
    :ocean-near-translucent? #t
    :ocean-far? #t
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :max-rain 1.0
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define ruins
  (new 'static 'level-load-info
    :index 45
    :task-level #x4
    :name 'ruins
    :visname 'ruins-vis
    :nickname 'rui
    :dbname 'ruins
    :taskname 'ruins
    :packages '(mechp ruins)
    :memory-mode (load-buffer-mode large)
    :music-bank 'ruins
    :ambient-sounds '()
    :mood-func 'update-mood-ruins
    :mood-init 'init-mood-ruins
    :ocean '*ocean-map-ruins*
    :sky #t
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "ruins-start"
        :level 'ruins
        :trans (new 'static 'vector :x 3439019.2 :y 22.1184 :z -1390645.6 :w 1.0)
        :quat (new 'static 'vector :y -0.6937 :w -0.7201)
        :camera-trans (new 'static 'vector :x 3390097.0 :y 20509.9 :z -1391488.6 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0182 0.0 -0.9998))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1205 0.9927 0.0021))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9925 -0.1205 0.0181))
          )
        :on-goto #f
        :vis-nick 'ruins
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ruins :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyslumb :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ruins1 'ruins2 'ctywide1)
        )
      (new 'static 'continue-point
        :name "ruins-tower"
        :level 'ruins
        :trans (new 'static 'vector :x 4147599.2 :y 98304.0 :z -1044046.6 :w 1.0)
        :quat (new 'static 'vector :y -0.6965 :w -0.7174)
        :camera-trans (new 'static 'vector :x 4096345.2 :y 119399.625 :z -1043145.1 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0169 0.0 -0.9998))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1209 0.9926 -0.002))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9925 -0.1209 -0.0168))
          )
        :on-goto #f
        :vis-nick 'ruins
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ruins :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'sagehut :display? 'special :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ruins1 'ruins2 'ruins3)
        )
      (new 'static 'continue-point
        :name "ruins-movie"
        :level 'ruins
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 3597612.2 :y 2788.9663 :z -898058.25 :w 1.0)
        :quat (new 'static 'vector :y 0.9108 :w -0.4127)
        :camera-trans (new 'static 'vector :x 3600432.0 :y 23778.51 :z -847371.9 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9974 0.0 0.0716))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0084 0.9929 -0.1179))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.071 -0.1182 -0.9904))
          )
        :on-goto #f
        :vis-nick 'ruins
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ruins :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'sagehut :display? 'special :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ruins1 'ruins2 'ruins3)
        )
      (new 'static 'continue-point
        :name "ruins-hut"
        :level 'ruins
        :flags (continue-flags test)
        :trans (new 'static 'vector :x 4338732.0 :y 99318.99 :z -1983915.2 :w 1.0)
        :quat (new 'static 'vector :y 0.964 :w 0.2657)
        :camera-trans (new 'static 'vector :x 4320175.0 :y 120442.47 :z -1945102.8 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9011 0.0 -0.4335))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0765 0.9843 -0.159))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.4267 -0.1764 -0.887))
          )
        :on-goto '(cond
           ((task-closed? "ruins-mech-introduction")
            (want-sound 'ruins1 'ruins3 'mech)
            )
           (else
             (want-sound 'ruins1 'ruins2 'ruins3)
             )
           )
        :vis-nick 'ruins
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ruins :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'sagehut :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ruins1 'ruins2 'ruins3)
        )
      (new 'static 'continue-point
        :name "ruins-tower-end"
        :level 'ruins
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 4631596.0 :y 188402.08 :z -991184.9 :w 1.0)
        :quat (new 'static 'vector :y -0.9987 :w -0.0508)
        :camera-trans (new 'static 'vector :x 4670624.0 :y 206847.19 :z -979009.56 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.3887 0.0 0.9213))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.3308 0.9333 -0.1395))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.8599 -0.359 -0.3628))
          )
        :on-goto #f
        :vis-nick 'ruins
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ruins :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'sagehut :display? 'special :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ruins1 'ruins2 'ruins3)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -15)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func 'ruins-activate
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :base-task-mask (task-mask task0)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-13)
    :ocean-near-translucent? #f
    :ocean-far? #t
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :max-rain 1.0
    :fog-mult 1.0
    :ocean-alpha 0.5
    :extra-sound-bank #f
    )
  )

(define sagehut (new 'static 'level-load-info
                  :index 46
                  :task-level #x4
                  :name 'sagehut
                  :visname 'sagehut-vis
                  :nickname 'sag
                  :dbname 'sagehut
                  :taskname 'ruins
                  :packages '()
                  :music-bank #f
                  :ambient-sounds '()
                  :mood-func 'update-mood-ruins
                  :mood-init 'init-mood-ruins
                  :ocean #f
                  :sky #t
                  :use-camera-other #f
                  :continues '()
                  :tasks '()
                  :priority 100
                  :load-commands '()
                  :alt-load-commands '()
                  :bsp-mask #xffffffffffffffff
                  :buttom-height (meters -15)
                  :run-packages '("common")
                  :wait-for-load #t
                  :login-func #f
                  :activate-func #f
                  :deactivate-func #f
                  :kill-func #f
                  :borrow-level (new 'static 'array symbol 2 #f #f)
                  :borrow-display? (new 'static 'array symbol 2 #f #f)
                  :base-task-mask (task-mask task0)
                  :texture-anim-tfrag #f
                  :texture-anim-pris #f
                  :texture-anim-shrub #f
                  :texture-anim-alpha #f
                  :texture-anim-water #f
                  :texture-anim-twarp #f
                  :texture-anim-pris2 #f
                  :texture-anim-sprite #f
                  :texture-anim-map #f
                  :texture-anim-sky #f
                  :draw-priority 10.0
                  :fog-height 327680.0
                  :bigmap-id (bigmap-id bigmap-id-13)
                  :ocean-near-translucent? #t
                  :ocean-far? #f
                  :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                  :max-rain 1.0
                  :fog-mult 1.0
                  :ocean-alpha 1.0
                  :extra-sound-bank #f
                  )
        )

(define atoll
  (new 'static 'level-load-info
    :index 47
    :task-level #x6
    :name 'atoll
    :visname 'atoll-vis
    :nickname 'ato
    :dbname 'atoll
    :taskname 'atoll
    :packages '(gun-buoyp atoll)
    :memory-mode (load-buffer-mode large)
    :music-bank 'atoll
    :ambient-sounds '()
    :mood-func 'update-mood-atoll
    :mood-init 'init-mood-atoll
    :ocean '*ocean-map-city*
    :sky #t
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "atoll-start"
        :level 'atoll
        :flags (continue-flags test)
        :trans (new 'static 'vector :x 2288109.5 :y 8801.075 :z -3452941.0 :w 1.0)
        :quat (new 'static 'vector :y -0.9998 :w -0.0175)
        :camera-trans (new 'static 'vector :x 2289175.2 :y 29895.475 :z -3401749.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9997 0.0 0.02))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0024 0.9925 -0.1216))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0198 -0.1216 -0.9923))
          )
        :on-goto #f
        :vis-nick 'atoll
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'atollext :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'atoll :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'atoll1 'atoll2 'ctywide1)
        )
      (new 'static 'continue-point
        :name "atoll-airlock"
        :level 'atoll
        :flags (continue-flags change-continue)
        :trans (new 'static 'vector :x 2284922.5 :y 10056.09 :z -3324549.0 :w 1.0)
        :quat (new 'static 'vector :y 0.9999 :w 0.0044)
        :camera-trans (new 'static 'vector :x 2280927.8 :y 29319.986 :z -3280357.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9959 0.0 -0.0902))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0117 0.9914 -0.1297))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0894 -0.1302 -0.9874))
          )
        :on-goto #f
        :vis-nick 'atoll
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'atollext :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'atoll :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'atoll1 'atoll2 'ctywide1)
        )
      (new 'static 'continue-point
        :name "atoll-movie"
        :level 'atoll
        :flags (continue-flags change-continue)
        :trans (new 'static 'vector :x 2288109.5 :y 8801.075 :z -3452941.0 :w 1.0)
        :quat (new 'static 'vector :y -0.9998 :w -0.0175)
        :camera-trans (new 'static 'vector :x 2289175.2 :y 29895.475 :z -3401749.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9997 0.0 0.02))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0024 0.9925 -0.1216))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0198 -0.1216 -0.9923))
          )
        :on-goto #f
        :vis-nick 'atoll
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'atollext :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'atoll :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'atoll1 'atoll2 'atoll3)
        )
      (new 'static 'continue-point
        :name "sig0-hiding-behind-blocks"
        :level 'atoll
        :flags (continue-flags change-continue)
        :trans (new 'static 'vector :x 2026609.9 :y 53760.0 :z -3877329.2 :w 1.0)
        :quat (new 'static 'vector :y 0.6803 :w -0.7328)
        :camera-trans (new 'static 'vector :x 2043578.0 :y 77001.93 :z -3838212.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.8804 0.0 0.4741))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1035 0.9758 -0.1923))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.4627 -0.2184 -0.8591))
          )
        :on-goto #f
        :vis-nick 'atoll
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'atollext :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'atoll :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'atoll1 'atoll2 'atoll3)
        )
      (new 'static 'continue-point
        :name "sig0-down-ramp"
        :level 'atoll
        :flags (continue-flags change-continue)
        :trans (new 'static 'vector :x 1762283.5 :y 53711.668 :z -4027283.8 :w 1.0)
        :quat (new 'static 'vector :x -0.0001 :y 0.9401 :w 0.3406)
        :camera-trans (new 'static 'vector :x 1721253.9 :y 95286.07 :z -3956288.2 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.8548 0.0 -0.5188))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1357 0.9651 -0.2236))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.5008 -0.2616 -0.825))
          )
        :on-goto #f
        :vis-nick 'atoll
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'atollext :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'atoll :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'atoll1 'atoll2 'atoll3)
        )
      (new 'static 'continue-point
        :name "sig0-charge-gun-for-sniper-c"
        :level 'atoll
        :flags (continue-flags change-continue)
        :trans (new 'static 'vector :x 1552601.1 :y 53711.668 :z -4779247.5 :w 1.0)
        :quat (new 'static 'vector :y 0.962 :w -0.2727)
        :camera-trans (new 'static 'vector :x 1513808.8 :y 73827.125 :z -4806706.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.5386 0.0 -0.8425))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1216 0.9895 0.0777))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.8337 -0.1443 0.5329))
          )
        :on-goto #f
        :vis-nick 'atoll
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'atollext :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'atoll :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'atoll1 'atoll2 'atoll3)
        )
      (new 'static 'continue-point
        :name "sig0-cross-water"
        :level 'atoll
        :flags (continue-flags change-continue)
        :trans (new 'static 'vector :x 1874199.0 :y 6223.872 :z -4438985.0 :w 1.0)
        :quat (new 'static 'vector :y 0.3639 :w 0.9314)
        :camera-trans (new 'static 'vector :x 1838270.9 :y 27303.936 :z -4475633.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.702 0.0 -0.7121))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0863 0.9926 0.0851))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.7068 -0.1212 0.6968))
          )
        :on-goto #f
        :vis-nick 'atoll
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'atollext :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'atoll :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'atoll1 'atoll2 'atoll3)
        )
      (new 'static 'continue-point
        :name "sig0-show-sniper-e"
        :level 'atoll
        :flags (continue-flags change-continue)
        :trans (new 'static 'vector :x 2293206.8 :y 4907.4175 :z -4265200.5 :w 1.0)
        :quat (new 'static 'vector :x -0.0013 :y -0.8686 :z 0.0003 :w -0.4954)
        :camera-trans (new 'static 'vector :x 2213943.0 :y 46524.414 :z -4285937.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.2418 0.0 -0.9703))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.2518 0.9657 0.0627))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.937 -0.2595 0.2335))
          )
        :on-goto #f
        :vis-nick 'atoll
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'atollext :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'atoll :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'atoll1 'atoll2 'atoll3)
        )
      (new 'static 'continue-point
        :name "atoll-battle"
        :level 'atoll
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 1786353.6 :y 173371.8 :z -4885427.5 :w 1.0)
        :quat (new 'static 'vector :y 0.7184 :w 0.6955)
        :camera-trans (new 'static 'vector :x 1744994.2 :y 194462.92 :z -4897220.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.276 0.0 -0.9611))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1691 0.9843 0.0485))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9461 -0.1759 0.2717))
          )
        :on-goto #f
        :vis-nick 'atoll
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'atollext :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'atoll :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'atoll1 'atoll2 'atoll4)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -15)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :base-task-mask (task-mask task0 primary0)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :ocean-near-translucent? #t
    :ocean-far? #t
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :max-rain 1.0
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define atollext (new 'static 'level-load-info
                   :index 48
                   :task-level #x6
                   :name 'atollext
                   :visname 'atollext-vis
                   :nickname 'ate
                   :dbname 'atollext
                   :taskname 'atoll
                   :packages '(botp sigp ashelinp spyderp atollext)
                   :music-bank #f
                   :ambient-sounds '()
                   :mood-func 'update-mood-atollext
                   :mood-init #f
                   :ocean #f
                   :sky #t
                   :use-camera-other #f
                   :continues '()
                   :tasks '()
                   :priority 100
                   :load-commands '()
                   :alt-load-commands '()
                   :bsp-mask #xffffffffffffffff
                   :buttom-height (meters -15)
                   :run-packages '("common")
                   :wait-for-load #t
                   :login-func #f
                   :activate-func #f
                   :deactivate-func #f
                   :kill-func #f
                   :borrow-level (new 'static 'array symbol 2 #f #f)
                   :borrow-display? (new 'static 'array symbol 2 #f #f)
                   :base-task-mask (task-mask task0)
                   :texture-anim-tfrag #f
                   :texture-anim-pris #f
                   :texture-anim-shrub #f
                   :texture-anim-alpha #f
                   :texture-anim-water #f
                   :texture-anim-twarp #f
                   :texture-anim-pris2 #f
                   :texture-anim-sprite #f
                   :texture-anim-map #f
                   :texture-anim-sky #f
                   :draw-priority 10.0
                   :fog-height 327680.0
                   :ocean-near-translucent? #t
                   :ocean-far? #f
                   :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                   :max-rain 1.0
                   :fog-mult 1.0
                   :ocean-alpha 1.0
                   :extra-sound-bank #f
                   )
        )

(define mountain
  (new 'static 'level-load-info
    :index 49
    :task-level #x8
    :name 'mountain
    :visname 'mountain-vis
    :nickname 'mtn
    :dbname 'mountain
    :taskname 'mountain
    :packages '(mountain)
    :memory-mode (load-buffer-mode medium)
    :music-bank 'mountain
    :ambient-sounds '()
    :mood-func 'update-mood-mountain
    :mood-init 'init-mood-mountain
    :ocean '*ocean-map-mountain*
    :sky #t
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "mountain-start"
        :level 'mountain
        :flags (continue-flags test)
        :trans (new 'static 'vector :x -2323968.5 :y 492110.66 :z 847190.44 :w 1.0)
        :quat (new 'static 'vector :y 0.7072 :w -0.7069)
        :camera-trans (new 'static 'vector :x -2366673.8 :y 513098.12 :z 852492.3 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1179 0.0 -0.993))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1507 0.9884 -0.0179))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9815 -0.1517 -0.1166))
          )
        :on-goto #f
        :vis-nick 'mountain
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'mountain :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'mtnext :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'mount1 'mount2 'mount3)
        )
      (new 'static 'continue-point
        :name "mountain-warp-top"
        :level 'mountain
        :flags (continue-flags change-continue no-blackout warp-gate)
        :trans (new 'static 'vector :x -2344385.0 :y 493619.2 :z 855861.7 :w 1.0)
        :quat (new 'static 'vector :y 0.7897 :w -0.6134)
        :camera-trans (new 'static 'vector :x -2395385.8 :y 514670.2 :z 853979.1 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0086 0.0 -0.9999))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1517 0.9884 0.0013))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9883 -0.1517 0.0085))
          )
        :on-goto '(want-continue "mountain-top")
        :vis-nick 'mountain
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'mountain :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'mtnext :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'mount1 'mount2 'mount3)
        )
      (new 'static 'continue-point
        :name "mountain-top"
        :level 'mountain
        :trans (new 'static 'vector :x -2334868.2 :y 492775.0 :z 856738.6 :w 1.0)
        :quat (new 'static 'vector :y -0.9432 :w 0.3321)
        :camera-trans (new 'static 'vector :x -2363013.5 :y 513332.03 :z 816399.1 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.8248 0.0 -0.5653))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0855 0.9884 0.1247))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.5588 -0.1512 0.8153))
          )
        :on-goto #f
        :vis-nick 'mountain
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'mountain :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'mtnext :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'mount1 'mount2 'mount3)
        )
      (new 'static 'continue-point
        :name "mountain-warp-bottom"
        :level 'mountain
        :flags (continue-flags warp-gate)
        :trans (new 'static 'vector :x -1928867.9 :y 119072.36 :z 762851.3 :w 1.0)
        :quat (new 'static 'vector :y 0.1361 :w -0.9906)
        :camera-trans (new 'static 'vector :x -1970202.2 :y 140129.89 :z 792840.2 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.5181 0.0 -0.8552))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1229 0.9896 -0.0744))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.8464 -0.1437 -0.5127))
          )
        :on-goto '(want-continue "mountain-warp-bottom")
        :vis-nick 'mountain
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'mountain :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'mount1 'mount2 'ctywide1)
        )
      (new 'static 'continue-point
        :name "mountain-movie"
        :level 'mountain
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x -1928867.9 :y 119072.36 :z 762851.3 :w 1.0)
        :quat (new 'static 'vector :y 0.1361 :w -0.9906)
        :camera-trans (new 'static 'vector :x -1970202.2 :y 140129.89 :z 792840.2 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.5181 0.0 -0.8552))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1229 0.9896 -0.0744))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.8464 -0.1437 -0.5127))
          )
        :on-goto #f
        :vis-nick 'mountain
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'mountain :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'mtnext :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'mount1 'mount2 'mount3)
        )
      (new 'static 'continue-point
        :name "mountain-aval"
        :level 'mountain
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x -3678913.0 :y 242899.36 :z 547868.7 :w 1.0)
        :quat (new 'static 'vector :x -0.0014 :y 0.2389 :z -0.0006 :w -0.971)
        :camera-trans (new 'static 'vector :x -3658512.0 :y 263992.94 :z 500907.62 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9168 0.0 0.3991))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0485 0.9925 0.1115))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.3961 -0.1217 0.91))
          )
        :on-goto '(begin
           (kill "metalmonk-72" store #f)
           (kill "metalmonk-73" store #f)
           (kill "metalmonk-74" store #f)
           (kill "metalmonk-75" store #f)
           (send-event "mtn-aval-rocks-4" 'draw #t)
           )
        :vis-nick 'mountain
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'mountain :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'mtnext :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'mount1 'mount2 'mount3)
        )
      (new 'static 'continue-point
        :name "mountain-dark-eco"
        :level 'mountain
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x -2598416.5 :y 385700.25 :z -131157.2 :w 1.0)
        :quat (new 'static 'vector :y 0.0011 :w -0.9999)
        :camera-trans (new 'static 'vector :x -2589366.2 :y 398878.72 :z -150739.77 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9091 0.0 0.4165))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.122 0.9561 0.2663))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.3982 -0.2929 0.8692))
          )
        :on-goto #f
        :vis-nick 'mountain
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'mountain :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'mtnext :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'mount1 'mount2 'mount3)
        )
      (new 'static 'continue-point
        :name "mountain-kiosk"
        :level 'mountain
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x -2389323.0 :y 495015.53 :z 963041.25 :w 1.0)
        :quat (new 'static 'vector :y -0.5072 :w 0.8617)
        :camera-trans (new 'static 'vector :x -2350041.5 :y 516124.7 :z 945515.75 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.4066 0.0 0.9135))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1607 0.9843 0.0715))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.8993 -0.1759 0.4003))
          )
        :on-goto #f
        :vis-nick 'mountain
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'mountain :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'mtnext :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'mount1 'mount2 'mount3)
        )
      (new 'static 'continue-point
        :name "mountain-grind-rail"
        :level 'mountain
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x -2488779.2 :y 278519.4 :z 485033.97 :w 1.0)
        :quat (new 'static 'vector :y 0.7587 :w 0.6513)
        :camera-trans (new 'static 'vector :x -2531265.8 :y 299651.06 :z 491683.84 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1542 0.0 -0.988))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1754 0.9841 -0.0273))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9723 -0.1776 -0.1517))
          )
        :on-goto #f
        :vis-nick 'mountain
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'mountain :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'mincan :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'mount1 'mount2 'mount3)
        )
      (new 'static 'continue-point
        :name "mountain-door"
        :level 'mountain
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x -2629474.0 :y 324481.44 :z 689014.4 :w 1.0)
        :quat (new 'static 'vector :y 0.9621 :w -0.2726)
        :camera-trans (new 'static 'vector :x -2631735.8 :y 344205.72 :z 735101.3 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9987 0.0 -0.0494))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0061 0.9922 -0.1239))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.049 -0.1241 -0.991))
          )
        :on-goto #f
        :vis-nick 'mountain
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'mountain :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'mtnext :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'mount1 'mount2 'mount3)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -100)
    :run-packages '("common")
    :wait-for-load #f
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :base-task-mask (task-mask task3)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water '*waterfall-texture-anim-array*
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-8)
    :ocean-near-translucent? #t
    :ocean-far? #t
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 0.5 0.0 1.0))
    :max-rain 1.0
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define mtnext (new 'static 'level-load-info
                 :index 50
                 :task-level #x8
                 :name 'mtnext
                 :visname 'mtnext-vis
                 :nickname 'mtx
                 :dbname 'mtnext
                 :taskname 'mountain
                 :packages '()
                 :memory-mode (load-buffer-mode medium)
                 :music-bank #f
                 :ambient-sounds '()
                 :mood-func 'update-mood-mountain
                 :mood-init 'init-mood-mountain
                 :ocean #f
                 :sky #t
                 :use-camera-other #f
                 :continues '()
                 :tasks '()
                 :priority 100
                 :load-commands '()
                 :alt-load-commands '()
                 :bsp-mask #xffffffffffffffff
                 :buttom-height (meters -100)
                 :run-packages '("common")
                 :wait-for-load #t
                 :login-func #f
                 :activate-func #f
                 :deactivate-func #f
                 :kill-func #f
                 :borrow-level (new 'static 'array symbol 2 #f #f)
                 :borrow-display? (new 'static 'array symbol 2 #f #f)
                 :base-task-mask (task-mask task3)
                 :texture-anim-tfrag #f
                 :texture-anim-pris #f
                 :texture-anim-shrub #f
                 :texture-anim-alpha #f
                 :texture-anim-water #f
                 :texture-anim-twarp #f
                 :texture-anim-pris2 #f
                 :texture-anim-sprite #f
                 :texture-anim-map #f
                 :texture-anim-sky #f
                 :draw-priority 10.0
                 :fog-height 327680.0
                 :bigmap-id (bigmap-id bigmap-id-8)
                 :ocean-near-translucent? #t
                 :ocean-far? #f
                 :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 0.5 0.0 1.0))
                 :max-rain 1.0
                 :fog-mult 1.0
                 :ocean-alpha 1.0
                 :extra-sound-bank #f
                 )
        )

(define forest
  (new 'static 'level-load-info
    :index 51
    :task-level #x9
    :name 'forest
    :visname 'forest-vis
    :nickname 'for
    :dbname 'forest
    :taskname 'forest
    :packages '(spyderp guardp hoverp forest)
    :memory-mode (load-buffer-mode medium)
    :music-bank 'forest
    :ambient-sounds '()
    :mood-func 'update-mood-forest
    :mood-init #f
    :ocean '*ocean-map-city*
    :sky #t
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "forest-start"
        :level 'forest
        :trans (new 'static 'vector :x -2384070.2 :y 133192.9 :z 2334096.2 :w 1.0)
        :quat (new 'static 'vector :y -0.1023 :w -0.9947)
        :camera-trans (new 'static 'vector :x -2391456.2 :y 153984.2 :z 2292528.2 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9845 0.0 -0.1749))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0313 0.9838 0.1762))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1721 -0.1789 0.9686))
          )
        :on-goto #f
        :vis-nick 'forest
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'forest :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'mountain :display? 'special :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'forest1 'forest2 'forest3)
        )
      (new 'static 'continue-point
        :name "forest-tree"
        :level 'forest
        :flags (continue-flags test)
        :trans (new 'static 'vector :x -2612326.8 :y 149986.92 :z 3560990.0 :w 1.0)
        :quat (new 'static 'vector :x 0.0001 :y 0.3242 :z -0.0013 :w 0.9459)
        :camera-trans (new 'static 'vector :x -2642006.0 :y 171092.78 :z 3519268.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.815 0.0 -0.5794))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0703 0.9925 0.099))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.5751 -0.1214 0.809))
          )
        :on-goto #f
        :vis-nick 'forest
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'forest :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'forestb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'forest1 'forest2 'forest3)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -100)
    :run-packages '("common")
    :wait-for-load #t
    :login-func 'forest-login
    :activate-func 'forest-activate
    :deactivate-func 'forest-deactivate
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :base-task-mask (task-mask task0)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha '*waterfall-b-texture-anim-array*
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-6)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :max-rain 1.0
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define forestb (new 'static 'level-load-info
                  :index 52
                  :task-level #x9
                  :name 'forestb
                  :visname 'forestb-vis
                  :nickname 'fob
                  :dbname 'forestb
                  :taskname 'forest
                  :packages '(forestb)
                  :memory-mode (load-buffer-mode medium)
                  :music-bank 'forest
                  :ambient-sounds '()
                  :mood-func 'update-mood-default
                  :mood-init #f
                  :ocean '*ocean-map-city*
                  :sky #t
                  :use-camera-other #f
                  :continues '()
                  :tasks '()
                  :priority 100
                  :load-commands '()
                  :alt-load-commands '()
                  :bsp-mask #xffffffffffffffff
                  :buttom-height (meters -100)
                  :run-packages '("common")
                  :wait-for-load #t
                  :login-func #f
                  :activate-func #f
                  :deactivate-func #f
                  :kill-func #f
                  :borrow-level (new 'static 'array symbol 2 #f #f)
                  :borrow-display? (new 'static 'array symbol 2 #f #f)
                  :base-task-mask (task-mask task0)
                  :texture-anim-tfrag #f
                  :texture-anim-pris #f
                  :texture-anim-shrub #f
                  :texture-anim-alpha '*waterfall-texture-anim-array*
                  :texture-anim-water #f
                  :texture-anim-twarp #f
                  :texture-anim-pris2 #f
                  :texture-anim-sprite #f
                  :texture-anim-map #f
                  :texture-anim-sky #f
                  :draw-priority 10.0
                  :fog-height 327680.0
                  :bigmap-id (bigmap-id bigmap-id-6)
                  :ocean-near-translucent? #t
                  :ocean-far? #f
                  :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                  :max-rain 1.0
                  :fog-mult 1.0
                  :ocean-alpha 1.0
                  :extra-sound-bank #f
                  )
        )

(define mincan
  (new 'static 'level-load-info
    :index 53
    :task-level #x8
    :name 'mincan
    :visname 'mincan-vis
    :nickname 'mcn
    :dbname 'mincan
    :taskname 'mountain
    :packages '(mincan)
    :music-bank #f
    :ambient-sounds '()
    :mood-func 'update-mood-mincan
    :mood-init #f
    :ocean #f
    :sky #t
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "mincan-start"
        :level 'mincan
        :flags (continue-flags test)
        :trans (new 'static 'vector :x -1980823.1 :y 116416.516 :z -62922.344 :w 1.0)
        :quat (new 'static 'vector :y -0.9607 :z -0.0014 :w -0.2775)
        :camera-trans (new 'static 'vector :x -2001351.5 :y 131235.44 :z -44465.766 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.6695 0.0 -0.7427))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1703 0.9733 -0.1535))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.7229 -0.2294 -0.6516))
          )
        :on-goto #f
        :vis-nick 'mountain
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'mountain :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'mincan :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'mount1 'mount2 'ctywide1)
        )
      (new 'static 'continue-point
        :name "mincan-city"
        :level 'mincan
        :flags (continue-flags change-continue)
        :trans (new 'static 'vector :x -2134463.8 :y 66739.41 :z -724928.1 :w 1.0)
        :quat (new 'static 'vector :y 0.5441 :w 0.839)
        :camera-trans (new 'static 'vector :x -2155888.2 :y 87833.4 :z -762217.25 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.8643 0.0 -0.5028))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0885 0.9843 0.1521))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.4949 -0.176 0.8508))
          )
        :on-goto #f
        :vis-nick 'mincan
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'mincan :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'mount1 'mount2 'ctywide1)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -100)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :base-task-mask (task-mask task0)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha '*waterfall-b-texture-anim-array*
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-8)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :max-rain 1.0
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define ctywide (new 'static 'level-load-info
                  :index 54
                  :task-level #x1
                  :name 'ctywide
                  :visname 'ctywide-vis
                  :nickname 'cwi
                  :dbname 'ctywide
                  :taskname 'city
                  :packages '(ctywide)
                  :memory-mode (load-buffer-mode small-center)
                  :music-bank 'city1
                  :ambient-sounds '()
                  :mood-func 'update-mood-ctywide
                  :mood-init #f
                  :ocean #f
                  :sky #f
                  :use-camera-other #f
                  :part-engine-max 64
                  :continues '()
                  :tasks '()
                  :priority 100
                  :load-commands '()
                  :alt-load-commands '()
                  :bsp-mask #xffffffffffffffff
                  :buttom-height (meters -15)
                  :run-packages '("common")
                  :wait-for-load #f
                  :login-func 'ctywide-login
                  :activate-func 'ctywide-activate
                  :deactivate-func 'ctywide-deactivate
                  :kill-func #f
                  :borrow-size (new 'static 'array uint16 2 #x17c #x82f)
                  :borrow-level (new 'static 'array symbol 2 #f #f)
                  :borrow-display? (new 'static 'array symbol 2 #f #f)
                  :texture-anim-tfrag #f
                  :texture-anim-pris #f
                  :texture-anim-shrub #f
                  :texture-anim-alpha #f
                  :texture-anim-water '*security-texture-anim-array*
                  :texture-anim-twarp #f
                  :texture-anim-pris2 #f
                  :texture-anim-sprite #f
                  :texture-anim-map #f
                  :texture-anim-sky #f
                  :draw-priority 9.0
                  :level-flags #x1
                  :fog-height 327680.0
                  :bigmap-id (bigmap-id bigmap-id-20)
                  :ocean-near-translucent? #t
                  :ocean-far? #f
                  :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                  :max-rain 1.0
                  :fog-mult 1.0
                  :ocean-alpha 1.0
                  :extra-sound-bank #f
                  )
        )

(define lwidea (new 'static 'level-load-info
                 :index 55
                 :task-level #x1
                 :name 'lwidea
                 :visname 'lwidea-vis
                 :nickname 'lwidea
                 :dbname 'lwidea
                 :taskname 'city
                 :packages '()
                 :memory-mode (load-buffer-mode borrow)
                 :music-bank #f
                 :ambient-sounds '()
                 :mood-func 'update-mood-ctywide
                 :mood-init #f
                 :ocean #f
                 :sky #f
                 :use-camera-other #f
                 :continues '()
                 :tasks '()
                 :priority 100
                 :load-commands '()
                 :alt-load-commands '()
                 :bsp-mask #xffffffffffffffff
                 :buttom-height (meters -20)
                 :run-packages '("common")
                 :wait-for-load #f
                 :login-func #f
                 :activate-func 'lwide-activate
                 :deactivate-func 'lwide-deactivate
                 :kill-func #f
                 :borrow-level (new 'static 'array symbol 2 #f #f)
                 :borrow-display? (new 'static 'array symbol 2 #f #f)
                 :texture-anim-tfrag #f
                 :texture-anim-pris #f
                 :texture-anim-shrub #f
                 :texture-anim-alpha #f
                 :texture-anim-water #f
                 :texture-anim-twarp #f
                 :texture-anim-pris2 #f
                 :texture-anim-sprite #f
                 :texture-anim-map #f
                 :texture-anim-sky #f
                 :draw-priority 10.0
                 :level-flags #x1
                 :fog-height 327680.0
                 :bigmap-id (bigmap-id bigmap-id-20)
                 :ocean-near-translucent? #t
                 :ocean-far? #f
                 :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                 :max-rain 1.0
                 :fog-mult 1.0
                 :ocean-alpha 1.0
                 :extra-sound-bank #f
                 )
        )

(define lwideb (new 'static 'level-load-info
                 :index 56
                 :task-level #x1
                 :name 'lwideb
                 :visname 'lwideb-vis
                 :nickname 'lwideb
                 :dbname 'lwideb
                 :taskname 'city
                 :packages '()
                 :memory-mode (load-buffer-mode borrow)
                 :music-bank #f
                 :ambient-sounds '()
                 :mood-func 'update-mood-ctywide
                 :mood-init #f
                 :ocean #f
                 :sky #f
                 :use-camera-other #f
                 :continues '()
                 :tasks '()
                 :priority 100
                 :load-commands '()
                 :alt-load-commands '()
                 :bsp-mask #xffffffffffffffff
                 :buttom-height (meters -20)
                 :run-packages '("common")
                 :wait-for-load #f
                 :login-func #f
                 :activate-func 'lwide-activate
                 :deactivate-func 'lwide-deactivate
                 :kill-func #f
                 :borrow-level (new 'static 'array symbol 2 #f #f)
                 :borrow-display? (new 'static 'array symbol 2 #f #f)
                 :texture-anim-tfrag #f
                 :texture-anim-pris #f
                 :texture-anim-shrub #f
                 :texture-anim-alpha #f
                 :texture-anim-water #f
                 :texture-anim-twarp #f
                 :texture-anim-pris2 #f
                 :texture-anim-sprite #f
                 :texture-anim-map #f
                 :texture-anim-sky #f
                 :draw-priority 10.0
                 :level-flags #x1
                 :fog-height 327680.0
                 :bigmap-id (bigmap-id bigmap-id-20)
                 :ocean-near-translucent? #t
                 :ocean-far? #f
                 :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                 :max-rain 1.0
                 :fog-mult 1.0
                 :ocean-alpha 1.0
                 :extra-sound-bank '((ctywide1 ctywide5) (ctywide3 ctywide4))
                 )
        )

(define lwidec (new 'static 'level-load-info
                 :index 57
                 :task-level #x1
                 :name 'lwidec
                 :visname 'lwidec-vis
                 :nickname 'lwidec
                 :dbname 'lwidec
                 :taskname 'city
                 :packages '()
                 :memory-mode (load-buffer-mode borrow)
                 :music-bank #f
                 :ambient-sounds '()
                 :mood-func 'update-mood-ctywide
                 :mood-init #f
                 :ocean #f
                 :sky #f
                 :use-camera-other #f
                 :continues '()
                 :tasks '()
                 :priority 100
                 :load-commands '()
                 :alt-load-commands '()
                 :bsp-mask #xffffffffffffffff
                 :buttom-height (meters -20)
                 :run-packages '("common")
                 :wait-for-load #f
                 :login-func #f
                 :activate-func 'lwide-activate
                 :deactivate-func 'lwide-deactivate
                 :kill-func #f
                 :borrow-level (new 'static 'array symbol 2 #f #f)
                 :borrow-display? (new 'static 'array symbol 2 #f #f)
                 :texture-anim-tfrag #f
                 :texture-anim-pris #f
                 :texture-anim-shrub #f
                 :texture-anim-alpha #f
                 :texture-anim-water #f
                 :texture-anim-twarp #f
                 :texture-anim-pris2 #f
                 :texture-anim-sprite #f
                 :texture-anim-map #f
                 :texture-anim-sky #f
                 :draw-priority 10.0
                 :level-flags #x1
                 :fog-height 327680.0
                 :bigmap-id (bigmap-id bigmap-id-20)
                 :ocean-near-translucent? #t
                 :ocean-far? #f
                 :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                 :max-rain 1.0
                 :fog-mult 1.0
                 :ocean-alpha 1.0
                 :extra-sound-bank #f
                 )
        )

(define ctykora (new 'static 'level-load-info
                  :index 58
                  :task-level #x1
                  :name 'ctykora
                  :visname 'ctykora-vis
                  :nickname 'ctykora
                  :dbname 'ctykora
                  :taskname 'city
                  :packages '(botp halp ctykora)
                  :music-bank 'city1
                  :ambient-sounds '()
                  :mood-func 'update-mood-copy-ctywide
                  :mood-init #f
                  :ocean #f
                  :sky #f
                  :use-camera-other #f
                  :continues '()
                  :tasks '()
                  :priority 100
                  :load-commands '()
                  :alt-load-commands '()
                  :bsp-mask #xffffffffffffffff
                  :buttom-height (meters -15)
                  :run-packages '("common")
                  :wait-for-load #f
                  :login-func #f
                  :activate-func #f
                  :deactivate-func #f
                  :kill-func #f
                  :borrow-level (new 'static 'array symbol 2 #f #f)
                  :borrow-display? (new 'static 'array symbol 2 #f #f)
                  :texture-anim-tfrag #f
                  :texture-anim-pris #f
                  :texture-anim-shrub #f
                  :texture-anim-alpha #f
                  :texture-anim-water #f
                  :texture-anim-twarp #f
                  :texture-anim-pris2 #f
                  :texture-anim-sprite #f
                  :texture-anim-map #f
                  :texture-anim-sky #f
                  :draw-priority 10.0
                  :level-flags #x1
                  :fog-height 327680.0
                  :bigmap-id (bigmap-id bigmap-id-20)
                  :ocean-near-translucent? #t
                  :ocean-far? #f
                  :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                  :max-rain 1.0
                  :fog-mult 1.0
                  :ocean-alpha 1.0
                  :extra-sound-bank #f
                  )
        )

(define ctyasha (new 'static 'level-load-info
                  :index 59
                  :task-level #x1
                  :name 'ctyasha
                  :visname 'ctyasha-vis
                  :nickname 'ctyasha
                  :dbname 'ctyasha
                  :taskname 'city
                  :packages '(botp ashelinp ctyasha)
                  :music-bank 'city1
                  :ambient-sounds '()
                  :mood-func 'update-mood-copy-ctywide
                  :mood-init #f
                  :ocean #f
                  :sky #f
                  :use-camera-other #f
                  :continues '()
                  :tasks '()
                  :priority 100
                  :load-commands '()
                  :alt-load-commands '()
                  :bsp-mask #xffffffffffffffff
                  :buttom-height (meters -15)
                  :run-packages '("common")
                  :wait-for-load #t
                  :login-func #f
                  :activate-func #f
                  :deactivate-func #f
                  :kill-func #f
                  :borrow-level (new 'static 'array symbol 2 #f #f)
                  :borrow-display? (new 'static 'array symbol 2 #f #f)
                  :texture-anim-tfrag #f
                  :texture-anim-pris #f
                  :texture-anim-shrub #f
                  :texture-anim-alpha #f
                  :texture-anim-water #f
                  :texture-anim-twarp #f
                  :texture-anim-pris2 #f
                  :texture-anim-sprite #f
                  :texture-anim-map #f
                  :texture-anim-sky #f
                  :draw-priority 10.0
                  :level-flags #x1
                  :fog-height 327680.0
                  :bigmap-id (bigmap-id bigmap-id-20)
                  :ocean-near-translucent? #t
                  :ocean-far? #f
                  :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                  :max-rain 1.0
                  :fog-mult 1.0
                  :ocean-alpha 1.0
                  :extra-sound-bank #f
                  )
        )

(define ctygena
  (new 'static 'level-load-info
    :index 60
    :task-level #x1
    :name 'ctygena
    :visname 'ctygena-vis
    :nickname 'cga
    :dbname 'ctygena
    :taskname 'city
    :packages '(ctygena)
    :music-bank 'city1
    :ambient-sounds '()
    :mood-func 'update-mood-copy-ctywide
    :mood-init #f
    :ocean '*ocean-map-city*
    :sky #t
    :use-camera-other #f
    :part-engine-max 16
    :city-map-bits #x40
    :continues '((new 'static 'continue-point
        :name "ctygena-start"
        :level 'ctygena
        :trans (new 'static 'vector :x -960852.8 :y 39766.836 :z -805551.7 :w 1.0)
        :quat (new 'static 'vector :x 0.0011 :y -0.7123 :z 0.0005 :w -0.7018)
        :camera-trans (new 'static 'vector :x -1010105.1 :y 60324.25 :z -807308.06 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0363 0.0 -0.9993))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1199 0.9927 0.0043))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9921 -0.1199 0.0361))
          )
        :on-goto #f
        :vis-nick 'ctygena
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctygena :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "ctygena-burning-bush-2"
        :level 'ctygena
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x -1549425.0 :y 32753.254 :z -805722.1 :w 1.0)
        :quat (new 'static 'vector :y -0.6395 :w 0.7687)
        :camera-trans (new 'static 'vector :x -1498315.1 :y 53847.656 :z -808805.2 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0599 0.0 0.9982))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1207 0.9926 0.0072))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9908 -0.1209 0.0595))
          )
        :on-goto #f
        :vis-nick 'ctygena
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctyfarma :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctygena :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "ctygena-burning-bush"
        :level 'ctygena
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x -256512.4 :y 32768.0 :z -116162.15 :w 1.0)
        :quat (new 'static 'vector :y 0.0466 :w -0.9989)
        :camera-trans (new 'static 'vector :x -255002.22 :y 53861.992 :z -167339.62 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9995 0.0 0.0305))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0037 0.9925 0.1216))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0302 -0.1216 0.9921))
          )
        :on-goto #f
        :vis-nick 'ctygena
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctygenb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctygena :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -15)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :level-flags #x1
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-20)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :max-rain 1.0
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define ctygenb
  (new 'static 'level-load-info
    :index 61
    :task-level #x1
    :name 'ctygenb
    :visname 'ctygenb-vis
    :nickname 'cgb
    :dbname 'ctygenb
    :taskname 'city
    :packages '(ctygenb)
    :music-bank 'city1
    :ambient-sounds '()
    :mood-func 'update-mood-ctyind
    :mood-init #f
    :ocean '*ocean-map-city*
    :sky #t
    :use-camera-other #f
    :city-map-bits #x80
    :continues '((new 'static 'continue-point
        :name "ctygenb-start"
        :level 'ctygenb
        :flags (continue-flags test)
        :trans (new 'static 'vector :x 686539.56 :y 40271.87 :z -1015174.75 :w 1.0)
        :quat (new 'static 'vector :x 0.0009 :y 0.6545 :z 0.0007 :w -0.756)
        :camera-trans (new 'static 'vector :x 647089.75 :y 59344.49 :z -1026199.94 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.3195 0.0 -0.9475))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.151 0.9872 0.0509))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9354 -0.1594 0.3154))
          )
        :on-goto #f
        :vis-nick 'ctygenb
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctygenb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctygena :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "ctygenb-burning-bush"
        :level 'ctygenb
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 685747.8 :y 32765.543 :z -1213995.9 :w 1.0)
        :quat (new 'static 'vector :y 0.9949 :w 0.1007)
        :camera-trans (new 'static 'vector :x 686984.8 :y 53859.53 :z -1162769.6 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9997 0.0 0.0243))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0029 0.9926 -0.1207))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0242 -0.1207 -0.9923))
          )
        :on-goto #f
        :vis-nick 'ctygenb
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctygenb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctygena :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "ctygenb-burning-bush-2"
        :level 'ctygenb
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 1092419.1 :y 32768.0 :z -269985.38 :w 1.0)
        :quat (new 'static 'vector :y 0.749 :w 0.6624)
        :camera-trans (new 'static 'vector :x 1041223.7 :y 53868.543 :z -270698.9 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0146 0.0 -0.9998))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1217 0.9925 0.0017))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9924 -0.1217 0.0145))
          )
        :on-goto #f
        :vis-nick 'ctygenb
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctygenb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyslumb :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -15)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :level-flags #x1
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-20)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :max-rain 1.0
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define ctygenc
  (new 'static 'level-load-info
    :index 62
    :task-level #x1
    :name 'ctygenc
    :visname 'ctygenc-vis
    :nickname 'cgc
    :dbname 'ctygenc
    :taskname 'city
    :packages '()
    :music-bank 'city1
    :ambient-sounds '()
    :mood-func 'update-mood-copy-ctywide
    :mood-init #f
    :ocean '*ocean-map-city*
    :sky #t
    :use-camera-other #f
    :city-map-bits #x1800
    :continues '((new 'static 'continue-point
        :name "ctygenc-start"
        :level 'ctygenc
        :flags (continue-flags test)
        :trans (new 'static 'vector :x 781528.25 :y 39733.656 :z 1322450.5 :w 1.0)
        :quat (new 'static 'vector :y -0.9673 :w 0.2534)
        :camera-trans (new 'static 'vector :x 778921.56 :y 60838.707 :z 1373583.8 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9988 0.0 -0.0471))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0057 0.9925 -0.1213))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0468 -0.1214 -0.9914))
          )
        :on-goto #f
        :vis-nick 'ctygenc
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctygenc :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctypal :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "ctygenc-burning-bush"
        :level 'ctygenc
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 883602.25 :y 32770.047 :z 35872.36 :w 1.0)
        :quat (new 'static 'vector :y -0.9999 :w 0.0085)
        :camera-trans (new 'static 'vector :x 883981.5 :y 53224.242 :z 84615.17 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9999 0.0 0.0087))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.001 0.9926 -0.1211))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0086 -0.1211 -0.9925))
          )
        :on-goto #f
        :vis-nick 'ctygenc
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctygenc :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctypal :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "ctygenc-burning-bush-2"
        :level 'ctygenc
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 141574.14 :y 32772.098 :z 1081112.6 :w 1.0)
        :quat (new 'static 'vector :y -0.7665 :w -0.6422)
        :camera-trans (new 'static 'vector :x 90349.98 :y 53866.496 :z 1080261.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0167 0.0 -0.9998))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1206 0.9926 0.002))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9925 -0.1206 0.0166))
          )
        :on-goto #f
        :vis-nick 'ctygenc
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctygenc :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctypal :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -15)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :level-flags #x1
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-20)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :max-rain 1.0
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define ctysluma
  (new 'static 'level-load-info
    :index 63
    :task-level #x1
    :name 'ctysluma
    :visname 'ctysluma-vis
    :nickname 'cta
    :dbname 'ctysluma
    :taskname 'city
    :packages '(ctysluma)
    :music-bank 'city1
    :ambient-sounds '()
    :mood-func 'update-mood-ctysluma
    :mood-init 'init-mood-ctysluma
    :ocean #f
    :sky #t
    :use-camera-other #f
    :city-map-bits #x4200
    :continues '((new 'static 'continue-point
        :name "ctysluma-start"
        :level 'ctysluma
        :trans (new 'static 'vector :x 4350905.0 :y 33359.87 :z 908947.44 :w 1.0)
        :quat (new 'static 'vector :x -0.0001 :y 0.9951 :w -0.0979)
        :camera-trans (new 'static 'vector :x 4349280.0 :y 54451.406 :z 960109.4 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9995 0.0 -0.0307))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0037 0.9925 -0.1216))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0305 -0.1216 -0.9921))
          )
        :on-goto #f
        :vis-nick 'ctysluma
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctysluma :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyindb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "ctysluma-alley"
        :level 'ctysluma
        :flags (continue-flags scene-wait no-auto test)
        :trans (new 'static 'vector :x 4660709.0 :y 33364.38 :z 61360.54 :w 1.0)
        :quat (new 'static 'vector :y -0.2484 :w -0.9686)
        :camera-trans (new 'static 'vector :x 4635918.5 :y 54458.367 :z 26214.4 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.8175 0.0 -0.5758))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1013 0.9843 0.1439))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.5668 -0.176 0.8048))
          )
        :on-goto #f
        :vis-nick 'ctysluma
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctysluma :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'hideout :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "ctysluma-tower-intro"
        :level 'ctysluma
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 4660709.0 :y 33364.38 :z 61360.54 :w 1.0)
        :quat (new 'static 'vector :y -0.2484 :w -0.9686)
        :camera-trans (new 'static 'vector :x 4635918.5 :y 54458.367 :z 26214.4 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.8175 0.0 -0.5758))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1013 0.9843 0.1439))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.5668 -0.176 0.8048))
          )
        :on-goto #f
        :vis-nick 'ctysluma
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctysluma :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ltrntess :display? 'special :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "ctysluma-tower-intro-exit"
        :level 'ctysluma
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 4713875.5 :y 33354.957 :z 247486.47 :w 1.0)
        :quat (new 'static 'vector :y -0.9986 :w 0.0522)
        :camera-trans (new 'static 'vector :x 4724241.5 :y 54449.355 :z 297623.97 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9794 0.0 0.2016))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0245 0.9925 -0.1192))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.2001 -0.1217 -0.9721))
          )
        :on-goto #f
        :vis-nick 'ctysluma
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctysluma :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ltrntess :display? 'special :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "ctysluma-alley-no-hideout"
        :level 'ctysluma
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 4660709.0 :y 33364.38 :z 61360.54 :w 1.0)
        :quat (new 'static 'vector :y -0.2484 :w -0.9686)
        :camera-trans (new 'static 'vector :x 4635918.5 :y 54458.367 :z 26214.4 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.8175 0.0 -0.5758))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1013 0.9843 0.1439))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.5668 -0.176 0.8048))
          )
        :on-goto #f
        :vis-nick 'ctysluma
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctysluma :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'hideout :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "ctysluma-fort-entrance"
        :level 'ctysluma
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 3200250.2 :y 26049.332 :z 926289.94 :w 1.0)
        :quat (new 'static 'vector :y -0.6 :w 0.7999)
        :camera-trans (new 'static 'vector :x 3251440.8 :y 47171.176 :z 926989.1 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0123 0.0 0.9999))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1219 0.9925 -0.0015))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9924 -0.122 -0.0122))
          )
        :on-goto #f
        :vis-nick 'ctysluma
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctysluma :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'forresca :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "ctysluma-fort-end"
        :level 'ctysluma
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 3241306.0 :y 33350.86 :z 1429365.1 :w 1.0)
        :quat (new 'static 'vector :y -0.7632 :w -0.646)
        :camera-trans (new 'static 'vector :x 3282688.5 :y 53891.48 :z 1433176.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1259 0.0 0.992))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1911 0.9812 -0.0242))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9734 -0.1926 -0.1236))
          )
        :on-goto #f
        :vis-nick 'ctysluma
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctysluma :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "escort-kid-intro"
        :level 'ctysluma
        :flags (continue-flags scene-wait no-auto)
        :trans (new 'static 'vector :x 4720627.5 :y 33350.453 :z 238358.53 :w 1.0)
        :quat (new 'static 'vector :y -0.9882 :w 0.153)
        :camera-trans (new 'static 'vector :x 4725391.0 :y 54444.85 :z 289359.06 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9956 0.0 0.0927))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0112 0.9926 -0.1202))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.092 -0.1207 -0.9883))
          )
        :on-goto '(begin (kill "parking-spot-8" store #f) (want-continue "ctysluma-escort-retry"))
        :vis-nick 'ctysluma
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctysluma :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'lyskdcd :display? 'special :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "ctysluma-escort-retry"
        :level 'ctysluma
        :flags (continue-flags scene-wait no-auto)
        :trans (new 'static 'vector :x 4701751.5 :y 33350.453 :z 196943.88 :w 1.0)
        :quat (new 'static 'vector :y -0.2309 :w -0.9729)
        :camera-trans (new 'static 'vector :x 4686596.0 :y 54444.85 :z 156687.56 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9351 0.0 -0.3541))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0623 0.9843 0.1645))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.3486 -0.1759 0.9205))
          )
        :on-goto #f
        :vis-nick 'ctysluma
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctysluma :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'lyskdcd :display? 'special :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "ctysluma-burning-bush"
        :level 'ctysluma
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 3420067.8 :y 33357.414 :z 984182.4 :w 1.0)
        :quat (new 'static 'vector :x 0.0002 :y -0.5079 :w 0.8614)
        :camera-trans (new 'static 'vector :x 3465968.8 :y 53951.69 :z 1002505.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.3607 0.0 0.9326))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1111 0.9928 -0.0429))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9259 -0.1191 -0.3582))
          )
        :on-goto #f
        :vis-nick 'ctysluma
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctysluma :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'fordumpa :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -15)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :level-flags #x1
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-20)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :max-rain 1.0
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define ctyslumb
  (new 'static 'level-load-info
    :index 64
    :task-level #x1
    :name 'ctyslumb
    :visname 'ctyslumb-vis
    :nickname 'ctb
    :dbname 'ctyslumb
    :taskname 'city
    :packages '(ctyslumb)
    :music-bank 'city1
    :ambient-sounds '()
    :mood-func 'update-mood-ctyslumb
    :mood-init 'init-mood-ctyslumb
    :ocean #f
    :sky #t
    :use-camera-other #f
    :city-map-bits #x300
    :continues '((new 'static 'continue-point
        :name "ctyslumb-start"
        :level 'ctyslumb
        :trans (new 'static 'vector :x 2408425.5 :y 32736.05 :z -1015882.94 :w 1.0)
        :quat (new 'static 'vector :x -0.0018 :y 0.7448 :z -0.0022 :w -0.6672)
        :camera-trans (new 'static 'vector :x 2393250.2 :y 51793.1 :z -991323.75 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9004 0.0 -0.435))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1357 0.95 -0.281))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.4133 -0.312 -0.8554))
          )
        :on-goto #f
        :vis-nick 'ctyslumb
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctyslumb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "ctyslumb-fort"
        :level 'ctyslumb
        :trans (new 'static 'vector :x 2497021.2 :y 32760.627 :z -107427.43 :w 1.0)
        :quat (new 'static 'vector :y 0.9297 :w 0.3682)
        :camera-trans (new 'static 'vector :x 2476040.5 :y 54580.43 :z -61865.984 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9015 0.0 -0.4327))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0601 0.9902 -0.1253))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.4285 -0.139 -0.8927))
          )
        :on-goto #f
        :vis-nick 'ctyslumb
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctyslumb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctykora :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "ctyslumb-burning-bush"
        :level 'ctyslumb
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 2895687.8 :y 33280.41 :z -332780.75 :w 1.0)
        :quat (new 'static 'vector :x 0.0002 :y 0.5948 :z -0.0003 :w 0.8038)
        :camera-trans (new 'static 'vector :x 2892613.8 :y 54387.508 :z -383899.25 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9924 0.0 -0.123))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0142 0.9932 0.1152))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1221 -0.1161 0.9856))
          )
        :on-goto #f
        :vis-nick 'ctyslumb
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctysluma :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyslumb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "ctyslumb-burning-bush-2"
        :level 'ctyslumb
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 1747023.5 :y 32766.771 :z -249536.52 :w 1.0)
        :quat (new 'static 'vector :y 0.9992 :w -0.0382)
        :camera-trans (new 'static 'vector :x 1763576.2 :y 53857.895 :z -200809.67 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9468 0.0 0.3217))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0385 0.9927 -0.1134))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.3194 -0.1198 -0.94))
          )
        :on-goto #f
        :vis-nick 'ctyslumb
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctygenb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyslumb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -15)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :level-flags #x1
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-20)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :max-rain 1.0
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define ctyslumc
  (new 'static 'level-load-info
    :index 65
    :task-level #x1
    :name 'ctyslumc
    :visname 'ctyslumc-vis
    :nickname 'ctc
    :dbname 'ctyslumc
    :taskname 'city
    :packages '(ctyslumc)
    :music-bank 'city1
    :ambient-sounds '()
    :mood-func 'update-mood-ctyslumc
    :mood-init 'init-mood-ctyslumc
    :ocean '*ocean-map-city*
    :sky #t
    :use-camera-other #f
    :city-map-bits #x8
    :continues '((new 'static 'continue-point
        :name "ctyslumc-start"
        :level 'ctyslumc
        :flags (continue-flags test)
        :trans (new 'static 'vector :x 2453099.8 :y 32505.855 :z -2268892.8 :w 1.0)
        :quat (new 'static 'vector :y -0.6958 :w 0.7182)
        :camera-trans (new 'static 'vector :x 2468703.8 :y 53571.586 :z -2220125.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9194 0.0 0.3931))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.046 0.9931 -0.1076))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.3904 -0.117 -0.9131))
          )
        :on-goto #f
        :vis-nick 'ctyslumc
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctyslumc :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyslumb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "ctyslumc-slums"
        :level 'ctyslumc
        :trans (new 'static 'vector :x 3095949.8 :y 38379.52 :z -2931103.2 :w 1.0)
        :quat (new 'static 'vector :y -0.1147 :w 0.9933)
        :camera-trans (new 'static 'vector :x 3105172.8 :y 58562.152 :z -2978129.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9814 0.0 0.1914))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0228 0.9928 0.117))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1901 -0.1192 0.9744))
          )
        :on-goto #f
        :vis-nick 'ctyslumc
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctyslumc :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'atollext :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "ctyslumc-seal-movie"
        :level 'ctyslumc
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 3095949.8 :y 38379.52 :z -2931103.2 :w 1.0)
        :quat (new 'static 'vector :y -0.1147 :w 0.9933)
        :camera-trans (new 'static 'vector :x 3105172.8 :y 58562.152 :z -2978129.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9814 0.0 0.1914))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0228 0.9928 0.117))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1901 -0.1192 0.9744))
          )
        :on-goto #f
        :vis-nick 'ctyslumc
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctyslumc :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ljakdax :display? 'special :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "ctyslumc-burning-bush"
        :level 'ctyslumc
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 2201559.0 :y 32754.074 :z -2377998.0 :w 1.0)
        :quat (new 'static 'vector :y 0.8793 :w -0.4762)
        :camera-trans (new 'static 'vector :x 2230809.8 :y 53886.156 :z -2335975.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.8202 0.0 0.572))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0702 0.9924 -0.1006))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.5677 -0.1227 -0.814))
          )
        :on-goto #f
        :vis-nick 'ctyslumc
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctyslumc :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyslumb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -15)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :level-flags #x1
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-20)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :max-rain 1.0
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define ctyport
  (new 'static 'level-load-info
    :index 66
    :task-level #x1
    :name 'ctyport
    :visname 'ctyport-vis
    :nickname 'cpo
    :dbname 'ctyport
    :taskname 'city
    :packages '(ctyport)
    :music-bank 'city1
    :ambient-sounds '()
    :mood-func 'update-mood-ctyport
    :mood-init 'init-mood-ctyport
    :ocean '*ocean-map-city*
    :sky #t
    :use-camera-other #f
    :part-engine-max #x100
    :city-map-bits #x3bc000000
    :continues '((new 'static 'continue-point
        :name "ctyport-start"
        :level 'ctyport
        :trans (new 'static 'vector :x 790611.94 :y 70801.82 :z 7184308.0 :w 1.0)
        :quat (new 'static 'vector :y -0.9991 :w -0.0414)
        :camera-trans (new 'static 'vector :x 790445.7 :y 91896.22 :z 7235498.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9999 0.0 -0.0056))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0006 0.9925 -0.1216))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0055 -0.1216 -0.9925))
          )
        :on-goto #f
        :vis-nick 'ctyport
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyport :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctypal :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "ctyport-hiphog"
        :level 'ctyport
        :flags (continue-flags test)
        :trans (new 'static 'vector :x -237165.36 :y 31635.455 :z 5517031.5 :w 1.0)
        :quat (new 'static 'vector :y -0.9709 :w 0.239)
        :camera-trans (new 'static 'vector :x -213388.9 :y 52731.086 :z 5552992.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.834 0.0 0.5516))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0959 0.9847 -0.145))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.5432 -0.1739 -0.8213))
          )
        :on-goto #f
        :vis-nick 'ctyport
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyport :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'hiphog :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "ctyport-hiphog-no-hiphog"
        :level 'ctyport
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x -263350.7 :y 31665.357 :z 5478634.5 :w 1.0)
        :quat (new 'static 'vector :y -0.7746 :w 0.6324)
        :camera-trans (new 'static 'vector :x -239528.75 :y 52765.082 :z 5523948.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.873 0.0 0.4876))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0571 0.9931 -0.1022))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.4842 -0.1171 -0.867))
          )
        :on-goto #f
        :vis-nick 'ctyport
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyport :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'hiphog :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "ctyport-gungame"
        :level 'ctyport
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 1740270.8 :y 31670.271 :z 5416671.0 :w 1.0)
        :quat (new 'static 'vector :y 0.9703 :w 0.2417)
        :camera-trans (new 'static 'vector :x 1719776.0 :y 52764.26 :z 5463587.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9162 0.0 -0.4006))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0485 0.9926 -0.1111))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.3976 -0.1212 -0.9094))
          )
        :on-goto #f
        :vis-nick 'ctyport
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyport :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'gungame :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'gungame1)
        )
      (new 'static 'continue-point
        :name "ctyport-warp"
        :level 'ctyport
        :trans (new 'static 'vector :x 1526301.1 :y 31448.27 :z 7370150.5 :w 1.0)
        :quat (new 'static 'vector :x -0.0014 :y -0.9505 :z -0.0005 :w 0.3106)
        :camera-trans (new 'static 'vector :x 1511200.0 :y 50669.16 :z 7328715.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9515 0.0 -0.3075))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0451 0.9891 0.1396))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.3042 -0.1467 0.9412))
          )
        :on-goto #f
        :vis-nick 'ctyport
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyport :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctypal :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "ctyport-air-train"
        :level 'ctyport
        :flags (continue-flags scene-wait change-continue)
        :trans (new 'static 'vector :x 1526301.1 :y 31448.27 :z 7370150.5 :w 1.0)
        :quat (new 'static 'vector :x -0.0014 :y -0.9505 :z -0.0005 :w 0.3106)
        :camera-trans (new 'static 'vector :x 1511200.0 :y 50669.16 :z 7328715.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9515 0.0 -0.3075))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0451 0.9891 0.1396))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.3042 -0.1467 0.9412))
          )
        :on-goto #f
        :vis-nick 'ctyport
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyport :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ljakdax :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "ctyport-air-train-ashelin"
        :level 'ctyport
        :flags (continue-flags scene-wait change-continue)
        :trans (new 'static 'vector :x 1526301.1 :y 31448.27 :z 7370150.5 :w 1.0)
        :quat (new 'static 'vector :x -0.0014 :y -0.9505 :z -0.0005 :w 0.3106)
        :camera-trans (new 'static 'vector :x 1511200.0 :y 50669.16 :z 7328715.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9515 0.0 -0.3075))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0451 0.9891 0.1396))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.3042 -0.1467 0.9412))
          )
        :on-goto #f
        :vis-nick 'ctyport
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyport :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ljkdxash :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "ctyport-under"
        :level 'ctyport
        :trans (new 'static 'vector :x 44259.33 :y 31529.78 :z 7135264.0 :w 1.0)
        :quat (new 'static 'vector :x -0.0003 :y 0.8529 :z -0.0015 :w 0.5219)
        :camera-trans (new 'static 'vector :x 2474.3936 :y 52346.47 :z 7130423.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.105 0.0 -0.9944))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1792 0.9836 0.0189))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9781 -0.1802 0.1033))
          )
        :on-goto #f
        :vis-nick 'ctyport
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctyport :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'underb :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "ctyport-errol-record-path"
        :level 'ctyport
        :flags (continue-flags change-continue record-path)
        :trans (new 'static 'vector :x -204202.39 :y 42518.117 :z 5517981.5 :w 1.0)
        :quat (new 'static 'vector :x 0.0218 :y -0.4594 :z -0.0486 :w 0.8866)
        :camera-trans (new 'static 'vector :x -185733.12 :y 53058.766 :z 5505444.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.5624 0.0 0.8268))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.2574 0.9503 0.1751))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.7857 -0.3113 0.5344))
          )
        :on-goto #f
        :vis-nick 'ctyport
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyport :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'hiphog :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'hiphog1)
        )
      (new 'static 'continue-point
        :name "ctyport-race-fail"
        :level 'ctyport
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 2450949.8 :y 45615.105 :z 6574133.5 :w 1.0)
        :quat (new 'static 'vector :x -0.0072 :y -0.3548 :z 0.0109 :w 0.9348)
        :camera-trans (new 'static 'vector :x 2464248.2 :y 55870.258 :z 6559149.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.7479 0.0 0.6637))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.2306 0.9377 0.2598))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.6224 -0.3474 0.7013))
          )
        :on-goto #f
        :vis-nick 'ctyport
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyport :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "ctyport-race-retry"
        :level 'ctyport
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 2519127.8 :y 31612.518 :z 6545450.0 :w 1.0)
        :quat (new 'static 'vector :x 0.0003 :y -0.1359 :z 0.0013 :w -0.9907)
        :camera-trans (new 'static 'vector :x 2552038.5 :y 50085.887 :z 6520416.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.6623 0.0 0.7492))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1081 0.9895 0.0956))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.7413 -0.1443 0.6553))
          )
        :on-goto #f
        :vis-nick 'ctyport
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyport :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "ctyport-errol-race-retry"
        :level 'ctyport
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x -237435.3 :y 31652.25 :z 5468062.0 :w 1.0)
        :quat (new 'static 'vector :y -0.4713 :w -0.8819)
        :camera-trans (new 'static 'vector :x -285678.78 :y 51959.4 :z 5466700.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0311 0.0 -0.9995))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.119 0.9928 0.0037))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9924 -0.119 0.0309))
          )
        :on-goto #f
        :vis-nick 'ctyport
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyport :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'hiphog :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "ctyport-race-record-path"
        :level 'ctyport
        :flags (continue-flags change-continue record-path)
        :trans (new 'static 'vector :x 2491680.0 :y 44982.273 :z 6575569.5 :w 1.0)
        :quat (new 'static 'vector :x 0.0289 :y 0.5081 :z 0.0742 :w -0.8575)
        :camera-trans (new 'static 'vector :x 2511393.2 :y 56725.094 :z 6565603.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.452 0.0 0.892))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.2805 0.9492 0.1421))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.8467 -0.3145 0.429))
          )
        :on-goto #f
        :vis-nick 'ctyport
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyport :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "ctyport-outro"
        :level 'ctyport
        :flags (continue-flags scene-wait change-continue)
        :trans (new 'static 'vector :x -325973.6 :y 36371.25 :z 5391642.0 :w 1.0)
        :quat (new 'static 'vector :y 0.9867 :w -0.162)
        :camera-trans (new 'static 'vector :x -301305.84 :y 51219.66 :z 5399168.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.3137 0.0 0.9495))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.2469 0.9655 -0.0816))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9168 -0.2601 -0.3029))
          )
        :on-goto #f
        :vis-nick 'ctyport
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'outrocst :display? 'special :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'hiphog :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyport :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'outro1 'hiphog1)
        )
      (new 'static 'continue-point
        :name "ctyport-outro-fireworks"
        :level 'ctyport
        :flags (continue-flags scene-wait change-continue)
        :trans (new 'static 'vector :x 306485.66 :y 31610.47 :z 5660605.0 :w 1.0)
        :quat (new 'static 'vector :y -0.0814 :w 0.9966)
        :camera-trans (new 'static 'vector :x 304445.03 :y 55391.848 :z 5609440.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9992 0.0 -0.0395))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0063 0.9868 0.1616))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0389 -0.1618 0.986))
          )
        :on-goto #f
        :vis-nick 'ctyport
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'outrocst :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyport :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'outro1 'hiphog1)
        )
      (new 'static 'continue-point
        :name "ctyport-burning-bush-3"
        :level 'ctyport
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 2568996.8 :y 31641.6 :z 6469675.5 :w 1.0)
        :quat (new 'static 'vector :y 0.8877 :w 0.4602)
        :camera-trans (new 'static 'vector :x 2526983.0 :y 52228.098 :z 6496139.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.5353 0.0 -0.8446))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1028 0.9925 -0.0651))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.8383 -0.1217 -0.5313))
          )
        :on-goto #f
        :vis-nick 'ctyport
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyinda :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyport :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "ctyport-burning-bush"
        :level 'ctyport
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x -409080.22 :y 31759.154 :z 5577668.5 :w 1.0)
        :quat (new 'static 'vector :y 0.9767 :w -0.2145)
        :camera-trans (new 'static 'vector :x -378350.38 :y 52853.145 :z 5607808.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.6993 0.0 0.7148))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1256 0.9844 -0.1228))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.7036 -0.1757 -0.6884))
          )
        :on-goto #f
        :vis-nick 'ctyport
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'hiphog :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyport :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -15)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :level-flags #x1
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-20)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :max-rain 1.0
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define ljkdxash (new 'static 'level-load-info
                   :index 67
                   :name 'ljkdxash
                   :visname 'ljkdxash-vis
                   :nickname 'ljkdxash
                   :dbname 'ljkdxash
                   :taskname 'default
                   :packages '()
                   :music-bank #f
                   :ambient-sounds '()
                   :mood-func 'update-mood-ctyport
                   :mood-init 'init-mood-ctyport-no-part
                   :ocean #f
                   :sky #f
                   :use-camera-other #f
                   :continues '()
                   :tasks '()
                   :priority 100
                   :load-commands '()
                   :alt-load-commands '()
                   :bsp-mask #xffffffffffffffff
                   :buttom-height (meters -20)
                   :run-packages '("common")
                   :wait-for-load #t
                   :login-func #f
                   :activate-func #f
                   :deactivate-func #f
                   :kill-func #f
                   :borrow-level (new 'static 'array symbol 2 #f #f)
                   :borrow-display? (new 'static 'array symbol 2 #f #f)
                   :base-task-mask (task-mask task0)
                   :texture-anim-tfrag #f
                   :texture-anim-pris #f
                   :texture-anim-shrub #f
                   :texture-anim-alpha #f
                   :texture-anim-water #f
                   :texture-anim-twarp #f
                   :texture-anim-pris2 #f
                   :texture-anim-sprite #f
                   :texture-anim-map #f
                   :texture-anim-sky #f
                   :draw-priority 10.0
                   :fog-height 327680.0
                   :bigmap-id (bigmap-id bigmap-id-20)
                   :ocean-near-translucent? #t
                   :ocean-far? #f
                   :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                   :max-rain 1.0
                   :fog-mult 1.0
                   :ocean-alpha 1.0
                   :extra-sound-bank #f
                   )
        )

(define ctyfarma
  (new 'static 'level-load-info
    :index 68
    :task-level #x1
    :name 'ctyfarma
    :visname 'ctyfarma-vis
    :nickname 'cfa
    :dbname 'ctyfarma
    :taskname 'city
    :packages '(ctyfarm)
    :music-bank 'city1
    :ambient-sounds '()
    :mood-func 'update-mood-ctyport
    :mood-init 'init-mood-ctyport-no-part
    :ocean #f
    :sky #t
    :use-camera-other #f
    :part-engine-max #x100
    :city-map-bits #x800
    :continues '((new 'static 'continue-point
        :name "ctyfarma-start"
        :level 'ctyfarma
        :flags (continue-flags test)
        :trans (new 'static 'vector :x -1346162.8 :y 35138.355 :z 858246.4 :w 1.0)
        :quat (new 'static 'vector :y -0.4712 :w 0.882)
        :camera-trans (new 'static 'vector :x -1294963.1 :y 56245.043 :z 858741.56 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0054 0.0 0.9999))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1208 0.9926 -0.0006))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9926 -0.1208 -0.0054))
          )
        :on-goto #f
        :vis-nick 'ctyfarma
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctyfarma :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctygena :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctyfarm1)
        )
      (new 'static 'continue-point
        :name "ctyfarma-airlock-movie"
        :level 'ctyfarma
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x -1773681.9 :y 124271.82 :z 852637.3 :w 1.0)
        :quat (new 'static 'vector :y -0.6773 :w 0.7356)
        :camera-trans (new 'static 'vector :x -1739667.0 :y 142474.44 :z 861517.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.2439 0.0 0.9697))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.198 0.9789 -0.0498))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9493 -0.2042 -0.2388))
          )
        :on-goto #f
        :vis-nick 'ctyfarma
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctyfarma :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'special :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ljakdax :display? 'special :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctyfarm1)
        )
      (new 'static 'continue-point
        :name "ctyfarma-airlock"
        :level 'ctyfarma
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x -1788942.4 :y 124271.82 :z 853132.5 :w 1.0)
        :quat (new 'static 'vector :x -0.0012 :y -0.7734 :z -0.001 :w 0.6339)
        :camera-trans (new 'static 'vector :x -1739187.0 :y 145007.4 :z 849631.6 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0699 0.0 0.9975))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1197 0.9927 0.0083))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9903 -0.12 0.0694))
          )
        :on-goto #f
        :vis-nick 'ctyfarma
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctyfarma :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'mountain :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctyfarm1)
        )
      (new 'static 'continue-point
        :name "ctyfarma-burning-bush"
        :level 'ctyfarma
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x -236415.39 :y 32763.904 :z 389540.25 :w 1.0)
        :quat (new 'static 'vector :y 0.9803 :w 0.1972)
        :camera-trans (new 'static 'vector :x -258035.72 :y 53921.383 :z 436186.72 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9061 0.0 -0.423))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0514 0.9925 -0.1102))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.4198 -0.1216 -0.8993))
          )
        :on-goto #f
        :vis-nick 'ctyfarma
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctyfarma :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctygena :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -15)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func 'farm-activate
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :level-flags #x1
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-20)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :max-rain 1.0
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define ctyfarmb
  (new 'static 'level-load-info
    :index 69
    :task-level #x1
    :name 'ctyfarmb
    :visname 'ctyfarmb-vis
    :nickname 'cfb
    :dbname 'ctyfarmb
    :taskname 'city
    :packages '(ctyfarm)
    :music-bank 'city1
    :ambient-sounds '()
    :mood-func 'update-mood-copy-ctywide
    :mood-init #f
    :ocean #f
    :sky #t
    :use-camera-other #f
    :part-engine-max #x100
    :city-map-bits #x200000
    :continues '((new 'static 'continue-point
        :name "ctyfarmb-start"
        :level 'ctyfarmb
        :flags (continue-flags test)
        :trans (new 'static 'vector :x -1473722.4 :y 32758.988 :z 4695127.0 :w 1.0)
        :quat (new 'static 'vector :y -0.9428 :w 0.3332)
        :camera-trans (new 'static 'vector :x -1457872.5 :y 54232.27 :z 4735104.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.929 0.0 0.3699))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0687 0.9825 -0.1725))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.3635 -0.1857 -0.9128))
          )
        :on-goto #f
        :vis-nick 'ctyfarmb
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctyfarmb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyport :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctyfarm1)
        )
      (new 'static 'continue-point
        :name "ctyfarmb-burning-bush"
        :level 'ctyfarmb
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x -1292948.6 :y 32763.904 :z 4407961.5 :w 1.0)
        :quat (new 'static 'vector :y -0.7097 :w -0.7044)
        :camera-trans (new 'static 'vector :x -1337764.2 :y 52156.824 :z 4405888.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0466 0.0 -0.9989))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1284 0.9916 0.006))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9906 -0.1286 0.0463))
          )
        :on-goto #f
        :vis-nick 'ctyfarmb
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyfarmb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctymarka :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctyfarm1)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -15)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func 'farm-activate
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :level-flags #x1
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-20)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :max-rain 1.0
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define ctyinda
  (new 'static 'level-load-info
    :index 70
    :task-level #x1
    :name 'ctyinda
    :visname 'ctyinda-vis
    :nickname 'cia
    :dbname 'ctyinda
    :taskname 'city
    :packages '(ctyinda)
    :music-bank 'city1
    :ambient-sounds '()
    :mood-func 'update-mood-ctyind
    :mood-init #f
    :ocean #f
    :sky #t
    :use-camera-other #f
    :city-map-bits #x21000000
    :continues '((new 'static 'continue-point
        :name "ctyinda-start"
        :level 'ctyinda
        :flags (continue-flags test)
        :trans (new 'static 'vector :x 3945097.8 :y 110584.625 :z 3721824.8 :w 1.0)
        :quat (new 'static 'vector :y 0.0533 :w 0.9985)
        :camera-trans (new 'static 'vector :x 3971861.0 :y 129763.734 :z 3686880.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.8024 0.0 0.5967))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0789 0.9912 0.1061))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.5914 -0.1322 0.7954))
          )
        :on-goto #f
        :vis-nick 'ctyinda
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctyinda :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyindb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "ctyinda-vinroom"
        :level 'ctyinda
        :trans (new 'static 'vector :x 4475576.5 :y 101718.42 :z 4479149.5 :w 1.0)
        :quat (new 'static 'vector :y 0.8623 :w -0.5063)
        :camera-trans (new 'static 'vector :x 4442404.5 :y 121393.15 :z 4447620.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.7124 0.0 -0.7017))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1039 0.9889 0.1055))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.6939 -0.1481 0.7046))
          )
        :on-goto #f
        :vis-nick 'ctyinda
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctyinda :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'vinroom :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "lkiddoge-skip1"
        :level 'ctyinda
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 4069240.5 :y 32741.785 :z 4647774.5 :w 1.0)
        :quat (new 'static 'vector :x 0.0001 :y -0.6735 :w -0.7391)
        :camera-trans (new 'static 'vector :x 4019418.0 :y 53836.188 :z 4635805.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.2316 0.0 -0.9727))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1175 0.9926 0.028))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9656 -0.1208 0.2299))
          )
        :on-goto #f
        :vis-nick 'ctyinda
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctyinda :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'vinroom :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "ctyinda-consite"
        :level 'ctyinda
        :trans (new 'static 'vector :x 3183906.5 :y 32741.785 :z 3551941.5 :w 1.0)
        :quat (new 'static 'vector :y -0.6714 :z -0.0001 :w 0.741)
        :camera-trans (new 'static 'vector :x 3226667.0 :y 53836.188 :z 3546805.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1191 0.0 0.9928))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1734 0.9846 0.0208))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9776 -0.1746 0.1173))
          )
        :on-goto #f
        :vis-nick 'ctyinda
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctyinda :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'consiteb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "ctyinda-burning-bush"
        :level 'ctyinda
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 3184090.0 :y 34360.934 :z 3365469.8 :w 1.0)
        :quat (new 'static 'vector :y -0.9999 :w -0.0007)
        :camera-trans (new 'static 'vector :x 3190731.2 :y 55454.926 :z 3416230.2 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9917 0.0 0.1283))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0156 0.9925 -0.1207))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1274 -0.1217 -0.9843))
          )
        :on-goto #f
        :vis-nick 'ctyinda
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctyinda :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'consiteb :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -15)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :level-flags #x1
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-20)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :max-rain 1.0
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define consite
  (new 'static 'level-load-info
    :index 71
    :task-level #x10
    :name 'consite
    :visname 'consite-vis
    :nickname 'coa
    :dbname 'consite
    :taskname 'consite
    :packages '(consite)
    :memory-mode (load-buffer-mode large)
    :music-bank #f
    :ambient-sounds '()
    :mood-func 'update-mood-consite
    :mood-init #f
    :ocean #f
    :sky #t
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "consite-start"
        :level 'consite
        :flags (continue-flags test)
        :trans (new 'static 'vector :x 2858555.0 :y 19556.352 :z 3729141.8 :w 1.0)
        :quat (new 'static 'vector :y -0.9948 :w 0.1013)
        :camera-trans (new 'static 'vector :x 2838449.2 :y 40298.086 :z 3684069.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9058 0.0 -0.4235))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.061 0.9895 0.1306))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.419 -0.1442 0.8964))
          )
        :on-goto #f
        :vis-nick 'consite
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'consite :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'consiteb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'consite1 'consite2)
        )
      (new 'static 'continue-point
        :name "consite-runway"
        :level 'consite
        :trans (new 'static 'vector :x 2856634.2 :y -21184.102 :z 3609188.2 :w 1.0)
        :quat (new 'static 'vector :y 0.1138 :w 0.9934)
        :camera-trans (new 'static 'vector :x 2852975.8 :y -113.0496 :z 3558113.2 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9974 0.0 -0.0715))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0086 0.9927 0.1199))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.071 -0.1202 0.9901))
          )
        :on-goto #f
        :vis-nick 'consiteb
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'consite :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'consiteb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'consite1 'consite2)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -100)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :base-task-mask (task-mask task0)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub '*kor-transform-texture-anim-array*
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-20)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :max-rain 1.0
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define consiteb
  (new 'static 'level-load-info
    :index 72
    :task-level #x10
    :name 'consiteb
    :visname 'consiteb-vis
    :nickname 'cob
    :dbname 'consiteb
    :taskname 'consite
    :packages '(consiteb)
    :music-bank #f
    :ambient-sounds '()
    :mood-func 'update-mood-consiteb
    :mood-init 'init-mood-consiteb
    :ocean #f
    :sky #t
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "consite-airlock"
        :level 'consiteb
        :trans (new 'static 'vector :x 3066312.0 :y 32770.047 :z 3563767.5 :w 1.0)
        :quat (new 'static 'vector :y 0.3085 :w -0.9511)
        :camera-trans (new 'static 'vector :x 3076502.8 :y 46825.883 :z 3541120.2 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9122 0.0 0.4095))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1046 0.9668 0.233))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.3959 -0.2554 0.882))
          )
        :on-goto #f
        :vis-nick 'consiteb
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'consiteb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyinda :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'consite1 'consite2)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -100)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :base-task-mask (task-mask task0)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-20)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define ctyindb
  (new 'static 'level-load-info
    :index 73
    :task-level #x1
    :name 'ctyindb
    :visname 'ctyindb-vis
    :nickname 'cib
    :dbname 'ctyindb
    :taskname 'city
    :packages '(ctyindb)
    :music-bank 'city1
    :ambient-sounds '()
    :mood-func 'update-mood-ctyind
    :mood-init #f
    :ocean #f
    :sky #t
    :use-camera-other #f
    :city-map-bits #x80000
    :continues '((new 'static 'continue-point
        :name "ctyindb-start"
        :level 'ctyindb
        :trans (new 'static 'vector :x 3978918.2 :y 32761.447 :z 2236849.8 :w 1.0)
        :quat (new 'static 'vector :y 0.9493 :w 0.3141)
        :camera-trans (new 'static 'vector :x 3946840.5 :y 52216.22 :z 2267846.2 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.6944 0.0 -0.7195))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0953 0.9911 -0.092))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.7132 -0.1325 -0.6883))
          )
        :on-goto #f
        :vis-nick 'ctyindb
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctyindb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctymarkb :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "ctyindb-intro-start"
        :level 'ctyindb
        :flags (continue-flags scene-wait change-continue)
        :trans (new 'static 'vector :x 3978918.2 :y 32761.447 :z 2236849.8 :w 1.0)
        :quat (new 'static 'vector :y 0.9493 :w 0.3141)
        :camera-trans (new 'static 'vector :x 3946840.5 :y 52216.22 :z 2267846.2 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.6944 0.0 -0.7195))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0953 0.9911 -0.092))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.7132 -0.1325 -0.6883))
          )
        :on-goto #f
        :vis-nick 'ctyindb
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctyindb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'special :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'introcst :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 #f #f #f)
        )
      (new 'static 'continue-point
        :name "ctyindb-burning-bush"
        :level 'ctyindb
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 3214073.5 :y 32741.785 :z 2913456.2 :w 1.0)
        :quat (new 'static 'vector :y -0.535 :w 0.8448)
        :camera-trans (new 'static 'vector :x 3260565.0 :y 52803.176 :z 2904624.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1846 0.0 0.9828))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.118 0.9927 0.0221))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9756 -0.1201 0.1833))
          )
        :on-goto #f
        :vis-nick 'ctyindb
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctyindb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyinda :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -15)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :level-flags #x1
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-20)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :max-rain 1.0
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define ctymarka
  (new 'static 'level-load-info
    :index 74
    :task-level #x1
    :name 'ctymarka
    :visname 'ctymarka-vis
    :nickname 'cma
    :dbname 'ctymarka
    :taskname 'city
    :packages '(ctymark)
    :music-bank 'city1
    :ambient-sounds '()
    :mood-func 'update-mood-ctymarka
    :mood-init #f
    :ocean #f
    :sky #t
    :use-camera-other #f
    :part-engine-max #x100
    :city-map-bits #x210000
    :continues '((new 'static 'continue-point
        :name "ctymarka-brutter"
        :level 'ctymarka
        :flags (continue-flags test)
        :trans (new 'static 'vector :x -439072.34 :y 32768.0 :z 1956770.6 :w 1.0)
        :quat (new 'static 'vector :y -0.1582 :w 0.9874)
        :camera-trans (new 'static 'vector :x -396247.84 :y 53861.992 :z 1952489.9 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1584 0.0 0.9873))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1741 0.9843 0.0279))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9718 -0.1763 0.1559))
          )
        :on-goto #f
        :vis-nick 'ctymarka
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctymarka :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'kiosk :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "ctymarka-burning-bush"
        :level 'ctymarka
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x -730452.8 :y 32765.543 :z 3454441.5 :w 1.0)
        :quat (new 'static 'vector :x -0.001 :y -0.0118 :z -0.0009 :w 0.9999)
        :camera-trans (new 'static 'vector :x -727241.94 :y 53859.94 :z 3403332.8 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.998 0.0 0.0631))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0076 0.9926 0.1208))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0626 -0.121 0.9906))
          )
        :on-goto #f
        :vis-nick 'ctymarka
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctymarka :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyfarmb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -15)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func 'market-activate
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :level-flags #x1
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-20)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :max-rain 1.0
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define ctymarkb
  (new 'static 'level-load-info
    :index 75
    :task-level #x1
    :name 'ctymarkb
    :visname 'ctymarkb-vis
    :nickname 'cmb
    :dbname 'ctymarkb
    :taskname 'city
    :packages '(ctymark)
    :music-bank 'city1
    :ambient-sounds '()
    :mood-func 'update-mood-ctymarkb
    :mood-init #f
    :ocean #f
    :sky #t
    :use-camera-other #f
    :part-engine-max #x100
    :city-map-bits #x40000
    :continues '((new 'static 'continue-point
        :name "ctymarkb-tanker"
        :level 'ctymarkb
        :flags (continue-flags test)
        :trans (new 'static 'vector :x 2147489.0 :y 34444.902 :z 1948003.1 :w 1.0)
        :quat (new 'static 'vector :y 0.2325 :w -0.9725)
        :camera-trans (new 'static 'vector :x 2176129.5 :y 55539.3 :z 1905562.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.8282 0.0 0.5603))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.068 0.9925 0.1006))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.5561 -0.1215 0.8221))
          )
        :on-goto #f
        :vis-nick 'ctymarkb
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctymarkb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyasha :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ashtan1 'ashtan2)
        )
      (new 'static 'continue-point
        :name "ctymarkb-movie-end"
        :level 'ctymarkb
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 1931610.1 :y 34406.4 :z 1769602.6 :w 1.0)
        :quat (new 'static 'vector :y -0.3655 :w 0.9307)
        :camera-trans (new 'static 'vector :x 1956000.1 :y 53861.992 :z 1734111.2 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.8208 0.0 0.5711))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1001 0.9844 0.1439))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.5622 -0.1754 0.8081))
          )
        :on-goto #f
        :vis-nick 'ctymarkb
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctymarkb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyasha :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ashtan1 'ashtan2)
        )
      (new 'static 'continue-point
        :name "ctymarkb-burning-bush"
        :level 'ctymarkb
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 2977968.2 :y 34444.902 :z 2160323.0 :w 1.0)
        :quat (new 'static 'vector :y -0.1398 :w -0.9901)
        :camera-trans (new 'static 'vector :x 2964785.5 :y 54040.574 :z 2116632.2 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9589 0.0 -0.2835))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0361 0.9918 0.122))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.2812 -0.1273 0.9511))
          )
        :on-goto #f
        :vis-nick 'ctymarkb
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctymarkb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyindb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "ctymarkb-burning-bush-2"
        :level 'ctymarkb
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 2575240.5 :y 34444.902 :z 3103047.2 :w 1.0)
        :quat (new 'static 'vector :y 0.0787 :w 0.9968)
        :camera-trans (new 'static 'vector :x 2563072.0 :y 54984.293 :z 3055447.2 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9676 0.0 -0.2522))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0305 0.9926 0.1173))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.2503 -0.1212 0.9605))
          )
        :on-goto #f
        :vis-nick 'ctymarkb
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctymarkb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctypal :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -15)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func 'market-activate
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :level-flags #x1
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-20)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :max-rain 1.0
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define ctypal
  (new 'static 'level-load-info
    :index 76
    :task-level #x1
    :name 'ctypal
    :visname 'ctypal-vis
    :nickname 'cpa
    :dbname 'ctypal
    :taskname 'city
    :packages '(ctypal)
    :music-bank 'city1
    :ambient-sounds '()
    :mood-func 'update-mood-copy-ctywide
    :mood-init #f
    :ocean '*ocean-map-city*
    :sky #t
    :use-camera-other #f
    :city-map-bits #x420000
    :continues '((new 'static 'continue-point
        :name "ctypal-shaft"
        :level 'ctypal
        :trans (new 'static 'vector :x 783051.2 :y 32758.58 :z 3168950.8 :w 1.0)
        :quat (new 'static 'vector :y 0.9998 :w 0.0183)
        :camera-trans (new 'static 'vector :x 779300.06 :y 53952.51 :z 3220006.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9973 0.0 -0.0732))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.009 0.9922 -0.1236))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0726 -0.124 -0.9896))
          )
        :on-goto '(when (task-closed? "palace-sneak-in-door")
           (task-close! "palace-sneak-in-resolution")
           )
        :vis-nick 'ctypal
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctypal :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'palshaft :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "ctypal-tomb"
        :level 'ctypal
        :trans (new 'static 'vector :x 785581.7 :y 32768.0 :z 3718206.8 :w 1.0)
        :quat (new 'static 'vector :y -0.2525 :w 0.9675)
        :camera-trans (new 'static 'vector :x 788226.06 :y 53861.992 :z 3667072.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9985 0.0 0.054))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0065 0.9926 0.1209))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0536 -0.1211 0.9911))
          )
        :on-goto #f
        :vis-nick 'ctypal
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctypal :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyport :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "ctypal-burning-bush"
        :level 'ctypal
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 377386.6 :y 65546.65 :z 1834825.8 :w 1.0)
        :quat (new 'static 'vector :y -0.0469 :w 0.9988)
        :camera-trans (new 'static 'vector :x 372478.38 :y 86293.71 :z 1785120.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9952 0.0 -0.0968))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0116 0.9927 0.1197))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0961 -0.1203 0.988))
          )
        :on-goto #f
        :vis-nick 'ctypal
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctygenc :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctypal :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "ctypal-burning-bush-2"
        :level 'ctypal
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 1236813.0 :y 32766.361 :z 3622210.2 :w 1.0)
        :quat (new 'static 'vector :y 0.7451 :w 0.6668)
        :camera-trans (new 'static 'vector :x 1185874.8 :y 53860.76 :z 3627872.8 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1102 0.0 -0.9939))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1199 0.9926 -0.0133))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9866 -0.1206 -0.1094))
          )
        :on-goto #f
        :vis-nick 'ctypal
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyport :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctypal :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -15)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :level-flags #x1
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-20)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :max-rain 1.0
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define stadium
  (new 'static 'level-load-info
    :index 77
    :task-level #x2
    :name 'stadium
    :visname 'stadium-vis
    :nickname 'sta
    :dbname 'stadium
    :taskname 'stadium
    :packages '(stadium)
    :music-bank 'city1
    :ambient-sounds '()
    :mood-func 'update-mood-stadium
    :mood-init #f
    :ocean #f
    :sky #t
    :use-camera-other #f
    :city-map-bits #x4
    :continues '((new 'static 'continue-point
        :name "stadium-start"
        :level 'stadium
        :trans (new 'static 'vector :x 1221186.4 :y -16384.0 :z -1861414.1 :w 1.0)
        :quat (new 'static 'vector :y -0.806 :w 0.5918)
        :camera-trans (new 'static 'vector :x 1270103.6 :y 4613.7344 :z -1847696.6 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.27 0.0 0.9628))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1178 0.9924 -0.033))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9556 -0.1224 -0.2679))
          )
        :on-goto #f
        :vis-nick 'stadium
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'stadium :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctygenb :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "stadium-burning-bush"
        :level 'stadium
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 1391598.4 :y 32767.59 :z -3062397.8 :w 1.0)
        :quat (new 'static 'vector :x -0.0002 :y 0.6685 :z -0.0001 :w -0.7436)
        :camera-trans (new 'static 'vector :x 1390407.6 :y 52200.242 :z -3017585.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9956 0.0 0.093))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0123 0.9911 -0.1324))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0922 -0.133 -0.9868))
          )
        :on-goto #f
        :vis-nick 'stadium
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'stadium :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "stadium-class1-res-end-movie"
        :level 'stadium
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 572500.4 :y 49152.0 :z -2737227.0 :w 1.0)
        :quat (new 'static 'vector :y 0.4807 :z -0.0014 :w 0.8768)
        :camera-trans (new 'static 'vector :x 603791.75 :y 69309.234 :z -2701270.8 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.7787 0.0 0.6273))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0932 0.9888 -0.1157))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.6204 -0.1486 -0.77))
          )
        :on-goto #f
        :vis-nick 'stadium
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'stadium :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'stadiumd :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "stadium-blimp-intro"
        :level 'stadium
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 1139318.8 :y -16393.83 :z -2717514.5 :w 1.0)
        :quat (new 'static 'vector :y 0.9647 :w -0.263)
        :camera-trans (new 'static 'vector :x 1140867.5 :y 4700.16 :z -2666331.2 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9995 0.0 0.0315))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0038 0.9926 -0.1207))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0313 -0.1208 -0.9921))
          )
        :on-goto #f
        :vis-nick 'stadium
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'stadium :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'stadblmp :display? 'actor :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "stadium-blimp"
        :level 'stadium
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 1172569.2 :y -16393.83 :z -2875689.0 :w 1.0)
        :quat (new 'static 'vector :y 0.1113 :w -0.9937)
        :camera-trans (new 'static 'vector :x 1203939.4 :y 4689.92 :z -2916101.8 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.7905 0.0 0.6124))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.074 0.9926 0.0955))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.6079 -0.1208 0.7847))
          )
        :on-goto #f
        :vis-nick 'stadium
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'stadium :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'stadblmp :display? 'actor :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -100)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-size (new 'static 'array uint16 2 #x352 #x0)
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-20)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 0.5 0.25 0.75))
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define stadiumb
  (new 'static 'level-load-info
    :index 78
    :task-level #x2
    :name 'stadiumb
    :visname 'stadiumb-vis
    :nickname 'stb
    :dbname 'stadiumb
    :taskname 'stadium
    :packages '(racep stadium-racep)
    :music-bank 'city1
    :ambient-sounds '()
    :mood-func 'update-mood-stadiumb
    :mood-init #f
    :ocean #f
    :sky #t
    :use-camera-other #f
    :part-engine-max #x100
    :continues '((new 'static 'continue-point
        :name "stadiumb-start"
        :level 'stadiumb
        :flags (continue-flags test)
        :trans (new 'static 'vector :x 139325.44 :y 34127.87 :z -2636048.5 :w 1.0)
        :quat (new 'static 'vector :y -0.2687 :w -0.9632)
        :camera-trans (new 'static 'vector :x 105139.81 :y 54302.72 :z -2669469.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.7004 0.0 -0.7137))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0855 0.9927 0.0839))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.7085 -0.1199 0.6953))
          )
        :on-goto #f
        :vis-nick 'stadiumb
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'stadium :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'stadiumb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'stadium1)
        )
      (new 'static 'continue-point
        :name "stadiumb-race-fail"
        :level 'stadiumb
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 296361.56 :y 47104.0 :z -2499580.2 :w 1.0)
        :quat (new 'static 'vector :y 0.4434 :w -0.8962)
        :camera-trans (new 'static 'vector :x 336107.94 :y 68197.99 :z -2531864.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.6311 0.0 0.7756))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.095 0.9924 0.0773))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.7697 -0.1225 0.6264))
          )
        :on-goto #f
        :vis-nick 'stadiumb
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'stadium :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'stadiumb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'stadium1)
        )
      (new 'static 'continue-point
        :name "stadiumb-race-retry"
        :level 'stadiumb
        :flags (continue-flags change-continue pilot)
        :trans (new 'static 'vector :x 232675.73 :y -10616.832 :z -2443733.5 :w 1.0)
        :quat (new 'static 'vector :y 0.3456 :w 0.9383)
        :camera-trans (new 'static 'vector :x 217686.02 :y 1695.744 :z -2461328.2 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.761 0.0 -0.6486))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1541 0.9713 0.1808))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.6301 -0.2376 0.7392))
          )
        :on-goto #f
        :vis-nick 'stadiumb
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'stadium :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'stadiumb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'stadium1)
        )
      (new 'static 'continue-point
        :name "stadiumb-race-r-retry"
        :level 'stadiumb
        :flags (continue-flags change-continue pilot)
        :trans (new 'static 'vector :x 284379.97 :y -14743.143 :z -2426257.5 :w 1.0)
        :quat (new 'static 'vector :y 0.9385 :w -0.345)
        :camera-trans (new 'static 'vector :x 303667.2 :y -2424.0127 :z -2403514.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.7628 0.0 0.6466))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0851 0.9912 -0.1005))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.6409 -0.1317 -0.7561))
          )
        :on-goto #f
        :vis-nick 'stadiumb
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'stadium :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'stadiumb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'stadium1)
        )
      (new 'static 'continue-point
        :name "stadiumb-record-path"
        :level 'stadiumb
        :flags (continue-flags change-continue record-path)
        :trans (new 'static 'vector :x -192482.52 :y -124127.234 :z -1315588.5 :w 1.0)
        :quat (new 'static 'vector :x 0.0395 :y -0.9955 :z -0.0827 :w 0.0227)
        :camera-trans (new 'static 'vector :x -191463.02 :y -115947.11 :z -1293051.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9989 0.0 0.0456))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0139 0.9523 -0.3047))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0434 -0.3051 -0.9513))
          )
        :on-goto #f
        :vis-nick 'stadiumb
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'stadium :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'stadiumb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'stadium1)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -100)
    :run-packages '("common" "ctywide" "stadium-racep")
    :wait-for-load #t
    :login-func #f
    :activate-func 'race-level-activate
    :deactivate-func 'race-level-deactivate
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha '*stadiumb-energy-wall-anim-array*
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-20)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 0.5 0.25 0.75))
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define stadiumc
  (new 'static 'level-load-info
    :index 79
    :task-level #x2
    :name 'stadiumc
    :visname 'stadiumc-vis
    :nickname 'stc
    :dbname 'stadiumc
    :taskname 'stadium
    :packages '(racep stadium-racep)
    :music-bank 'city1
    :ambient-sounds '()
    :mood-func 'update-mood-stadiumb
    :mood-init #f
    :ocean #f
    :sky #t
    :use-camera-other #f
    :part-engine-max #x100
    :continues '((new 'static 'continue-point
        :name "stadiumc-start"
        :level 'stadiumc
        :flags (continue-flags test)
        :trans (new 'static 'vector :x 139325.44 :y 34127.87 :z -2636048.5 :w 1.0)
        :quat (new 'static 'vector :y -0.2687 :w -0.9632)
        :camera-trans (new 'static 'vector :x 105139.81 :y 54302.72 :z -2669469.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.7004 0.0 -0.7137))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0855 0.9927 0.0839))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.7085 -0.1199 0.6953))
          )
        :on-goto #f
        :vis-nick 'stadiumc
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'stadium :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'stadiumc :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'stadium1)
        )
      (new 'static 'continue-point
        :name "stadiumc-race-retry-pidax"
        :level 'stadiumc
        :flags (continue-flags no-auto pilot-dax)
        :trans (new 'static 'vector :x -337180.7 :y -24649.318 :z -2695884.5 :w 1.0)
        :quat (new 'static 'vector :y 0.7066 :w 0.7075)
        :camera-trans (new 'static 'vector :x -386829.94 :y -12293.734 :z -2695941.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0012 0.0 -0.9999))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0283 0.9995 0.0))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9995 -0.0283 0.0012))
          )
        :on-goto #f
        :vis-nick 'stadiumc
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'stadium :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'stadiumc :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'stadium1)
        )
      (new 'static 'continue-point
        :name "stadiumc-race-retry"
        :level 'stadiumc
        :flags (continue-flags no-auto pilot)
        :trans (new 'static 'vector :x -337180.7 :y -24649.318 :z -2695884.5 :w 1.0)
        :quat (new 'static 'vector :y 0.7066 :w 0.7075)
        :camera-trans (new 'static 'vector :x -386829.94 :y -12293.734 :z -2695941.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0012 0.0 -0.9999))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0283 0.9995 0.0))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9995 -0.0283 0.0012))
          )
        :on-goto #f
        :vis-nick 'stadiumc
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'stadium :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'stadiumc :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'stadium1)
        )
      (new 'static 'continue-point
        :name "stadiumc-race-r-retry"
        :level 'stadiumc
        :flags (continue-flags no-auto pilot)
        :trans (new 'static 'vector :x -261450.55 :y -28719.924 :z -2723475.5 :w 1.0)
        :quat (new 'static 'vector :y -0.6995 :w 0.7146)
        :camera-trans (new 'static 'vector :x -210261.61 :y -16378.266 :z -2724553.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.02 0.0 0.9997))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0247 0.9996 0.0004))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9994 -0.0247 0.02))
          )
        :on-goto #f
        :vis-nick 'stadiumc
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'stadium :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'stadiumc :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'stadium1)
        )
      (new 'static 'continue-point
        :name "stadiumc-race-fail"
        :level 'stadiumc
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x -350173.2 :y 47088.027 :z -2750787.2 :w 1.0)
        :quat (new 'static 'vector :y 0.227 :w -0.9738)
        :camera-trans (new 'static 'vector :x -350950.6 :y 68182.42 :z -2801975.2 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9999 0.0 -0.0137))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0016 0.9926 0.1208))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0136 -0.1208 0.9925))
          )
        :on-goto #f
        :vis-nick 'stadiumc
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'stadium :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'stadiumc :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'stadium1)
        )
      (new 'static 'continue-point
        :name "stadiumc-record-path"
        :level 'stadiumc
        :flags (continue-flags change-continue record-path)
        :trans (new 'static 'vector :x 70463.484 :y -171052.64 :z -2836438.8 :w 1.0)
        :quat (new 'static 'vector :x 0.0448 :y 0.2377 :z -0.0047 :w -0.9702)
        :camera-trans (new 'static 'vector :x 80398.336 :y -160836.4 :z -2856782.2 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.8986 0.0 0.4386))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1336 0.9524 0.2737))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.4177 -0.3046 0.8559))
          )
        :on-goto #f
        :vis-nick 'stadium
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'stadium :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'stadiumc :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'stadium1)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -100)
    :run-packages '("common" "ctywide" "stadium-racep")
    :wait-for-load #t
    :login-func #f
    :activate-func 'race-level-activate
    :deactivate-func 'race-level-deactivate
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-20)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 0.5 0.25 0.75))
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define stadiumd
  (new 'static 'level-load-info
    :index 80
    :task-level #x2
    :name 'stadiumd
    :visname 'stadiumd-vis
    :nickname 'std
    :dbname 'stadiumd
    :taskname 'stadium
    :packages '(racep stadium-racep)
    :music-bank 'city1
    :ambient-sounds '()
    :mood-func 'update-mood-stadiumb
    :mood-init #f
    :ocean #f
    :sky #t
    :use-camera-other #f
    :part-engine-max #x100
    :continues '((new 'static 'continue-point
        :name "stadiumd-start"
        :level 'stadiumd
        :flags (continue-flags test)
        :trans (new 'static 'vector :x 139325.44 :y 34127.87 :z -2636048.5 :w 1.0)
        :quat (new 'static 'vector :y -0.2687 :w -0.9632)
        :camera-trans (new 'static 'vector :x 105139.81 :y 54302.72 :z -2669469.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.7004 0.0 -0.7137))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0855 0.9927 0.0839))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.7085 -0.1199 0.6953))
          )
        :on-goto #f
        :vis-nick 'stadiumd
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'stadium :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'stadiumd :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'stadium1)
        )
      (new 'static 'continue-point
        :name "stadiumd-race-fail"
        :level 'stadiumd
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 79271.12 :y 47103.59 :z -2669285.5 :w 1.0)
        :quat (new 'static 'vector :y -0.1495 :w 0.9887)
        :camera-trans (new 'static 'vector :x 103847.94 :y 67127.3 :z -2709570.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.8523 0.0 0.5229))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.064 0.9924 0.1043))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.5189 -0.1224 0.8459))
          )
        :on-goto #f
        :vis-nick 'stadiumd
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'stadium :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'stadiumd :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'stadium1)
        )
      (new 'static 'continue-point
        :name "stadiumd-race-retry"
        :level 'stadiumd
        :flags (continue-flags no-auto pilot)
        :trans (new 'static 'vector :x 18072.781 :y -19255.297 :z -2648879.0 :w 1.0)
        :quat (new 'static 'vector :y 0.5232 :w 0.8521)
        :camera-trans (new 'static 'vector :x -27583.283 :y -6946.4062 :z -2672047.8 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.4523 0.0 -0.8918))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0222 0.9996 0.0112))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.8915 -0.0249 0.4521))
          )
        :on-goto #f
        :vis-nick 'stadiumd
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'stadium :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'stadiumd :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'stadium1)
        )
      (new 'static 'continue-point
        :name "stadiumd-race-r-retry"
        :level 'stadiumd
        :flags (continue-flags no-auto pilot)
        :trans (new 'static 'vector :x 96944.54 :y -23309.518 :z -2578265.0 :w 1.0)
        :quat (new 'static 'vector :y -0.8521 :w 0.5232)
        :camera-trans (new 'static 'vector :x 125187.27 :y -11000.627 :z -2563945.8 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.4517 0.0 0.8921))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0971 0.994 -0.0492))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.8868 -0.1089 -0.449))
          )
        :on-goto #f
        :vis-nick 'stadiumd
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'stadium :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'stadiumd :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'stadium1)
        )
      (new 'static 'continue-point
        :name "stadiumd-record-path"
        :level 'stadiumd
        :flags (continue-flags change-continue record-path)
        :trans (new 'static 'vector :x -1065634.2 :y -90913.18 :z -1832483.2 :w 1.0)
        :quat (new 'static 'vector :x 0.0316 :y -0.899 :z 0.0115 :w -0.4364)
        :camera-trans (new 'static 'vector :x -1082339.8 :y -78608.38 :z -1817219.9 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.675 0.0 -0.7377))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.226 0.9518 -0.2068))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.7022 -0.3064 -0.6426))
          )
        :on-goto #f
        :vis-nick 'stadiumd
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'stadium :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'stadiumd :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'stadium1)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -100)
    :run-packages '("common" "ctywide" "stadium-racep")
    :wait-for-load #t
    :login-func #f
    :activate-func 'race-level-activate
    :deactivate-func 'race-level-deactivate
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-20)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 0.5 0.25 0.75))
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define skatea
  (new 'static 'level-load-info
    :index 81
    :task-level #x2
    :name 'skatea
    :visname 'skatea-vis
    :nickname 'ska
    :dbname 'skatea
    :taskname 'stadium
    :packages '(skatea)
    :music-bank 'city1
    :ambient-sounds '()
    :mood-func 'update-mood-skatea
    :mood-init #f
    :ocean #f
    :sky #t
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "skatea-start"
        :level 'skatea
        :flags (continue-flags test)
        :trans (new 'static 'vector :x 446888.75 :y -38911.59 :z -2322099.8 :w 1.0)
        :quat (new 'static 'vector :w 1.0)
        :camera-trans (new 'static 'vector :x 457174.22 :y -18563.072 :z -2274887.8 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9705 0.0 0.2409))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0364 0.9885 -0.1466))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.2381 -0.1511 -0.9593))
          )
        :on-goto #f
        :vis-nick 'skatea
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'skatea :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'stadium :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'stadium1 'skate1)
        )
      (new 'static 'continue-point
        :name "skatea-training"
        :level 'skatea
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 497077.44 :y -38912.41 :z -2587993.0 :w 1.0)
        :quat (new 'static 'vector :y -0.0379 :w -0.9992)
        :camera-trans (new 'static 'vector :x 494938.12 :y -18720.36 :z -2635767.8 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9989 0.0 -0.0455))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0054 0.9928 0.1195))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0452 -0.1196 0.9917))
          )
        :on-goto #f
        :vis-nick 'skatea
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'skatea :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'stadium :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'stadium1 'skate1)
        )
      (new 'static 'continue-point
        :name "skatea-training-judge"
        :level 'skatea
        :trans (new 'static 'vector :x 233773.47 :y -55359.08 :z -2150226.0 :w 1.0)
        :quat (new 'static 'vector :y -0.6942 :w 0.7197)
        :camera-trans (new 'static 'vector :x 285005.0 :y -34259.76 :z -2150090.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0026 0.0 0.9999))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1208 0.9926 -0.0003))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9926 -0.1208 -0.0026))
          )
        :on-goto #f
        :vis-nick 'skatea
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'skatea :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'stadium :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'stadium1 'skate1)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -100)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-20)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 0.5 0.25 0.75))
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define garage
  (new 'static 'level-load-info
    :index 82
    :task-level #x2
    :name 'garage
    :visname 'garage-vis
    :nickname 'garage
    :dbname 'garage
    :taskname 'stadium
    :packages '(stadium)
    :music-bank #f
    :ambient-sounds '()
    :mood-func 'update-mood-garage
    :mood-init #f
    :ocean #f
    :sky #f
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "garage-start-skate"
        :level 'garage
        :flags (continue-flags no-auto test)
        :trans (new 'static 'vector :x 362617.25 :y 49152.0 :z -1795099.5 :w 1.0)
        :quat (new 'static 'vector :y -0.4053 :w 0.9141)
        :camera-trans (new 'static 'vector :x 402171.1 :y 70245.99 :z -1812076.1 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.3942 0.0 0.919))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1608 0.9845 0.069))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9048 -0.175 0.3881))
          )
        :on-goto #f
        :vis-nick 'garage
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'stadium :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'garage :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "garage-start-class3"
        :level 'garage
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 433220.4 :y 49152.0 :z -1832372.2 :w 1.0)
        :quat (new 'static 'vector :y -0.9926 :w 0.1212)
        :camera-trans (new 'static 'vector :x 449114.53 :y 69541.07 :z -1870120.1 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.8912 0.0 0.4534))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.084 0.9826 0.1652))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.4455 -0.1854 0.8758))
          )
        :on-goto #f
        :vis-nick 'garage
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'stadium :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'garage :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      (new 'static 'continue-point
        :name "garage-class3-movie"
        :level 'garage
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 433220.4 :y 49152.0 :z -1832372.2 :w 1.0)
        :quat (new 'static 'vector :y -0.9926 :w 0.1212)
        :camera-trans (new 'static 'vector :x 449114.53 :y 69541.07 :z -1870120.1 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.8912 0.0 0.4534))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.084 0.9826 0.1652))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.4455 -0.1854 0.8758))
          )
        :on-goto #f
        :vis-nick 'garage
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'stadium :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'garage :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -20)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-size (new 'static 'array uint16 2 #x960 #x0)
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-20)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 0.5 0.25 0.75))
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define stadblmp (new 'static 'level-load-info
                   :index 83
                   :task-level #x2
                   :name 'stadblmp
                   :visname 'stadblmp-vis
                   :nickname 'stadblmp
                   :dbname 'stadblmp
                   :taskname 'stadium
                   :packages '()
                   :music-bank #f
                   :ambient-sounds '()
                   :mood-func 'update-mood-copy-stadium
                   :mood-init #f
                   :ocean #f
                   :sky #t
                   :use-camera-other #f
                   :continues '()
                   :tasks '()
                   :priority 100
                   :load-commands '()
                   :alt-load-commands '()
                   :bsp-mask #xffffffffffffffff
                   :buttom-height (meters -20)
                   :run-packages '("common")
                   :wait-for-load #f
                   :login-func #f
                   :activate-func #f
                   :deactivate-func #f
                   :kill-func #f
                   :borrow-level (new 'static 'array symbol 2 #f #f)
                   :borrow-display? (new 'static 'array symbol 2 #f #f)
                   :base-task-mask (task-mask task0)
                   :texture-anim-tfrag #f
                   :texture-anim-pris #f
                   :texture-anim-shrub #f
                   :texture-anim-alpha #f
                   :texture-anim-water #f
                   :texture-anim-twarp #f
                   :texture-anim-pris2 #f
                   :texture-anim-sprite #f
                   :texture-anim-map #f
                   :texture-anim-sky #f
                   :draw-priority 10.0
                   :fog-height 327680.0
                   :bigmap-id (bigmap-id bigmap-id-20)
                   :ocean-near-translucent? #t
                   :ocean-far? #f
                   :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 0.5 0.25 0.75))
                   :fog-mult 1.0
                   :ocean-alpha 1.0
                   :extra-sound-bank #f
                   )
        )

(define lwidesta (new 'static 'level-load-info
                   :index 84
                   :task-level #x2
                   :name 'lwidesta
                   :visname 'lwidesta-vis
                   :nickname 'lwidesta
                   :dbname 'lwidesta
                   :taskname 'stadium
                   :packages '()
                   :memory-mode (load-buffer-mode borrow)
                   :music-bank #f
                   :ambient-sounds '()
                   :mood-func 'update-mood-stadiumb
                   :mood-init #f
                   :ocean #f
                   :sky #f
                   :use-camera-other #f
                   :continues '()
                   :tasks '()
                   :priority 100
                   :load-commands '()
                   :alt-load-commands '()
                   :bsp-mask #xffffffffffffffff
                   :buttom-height (meters -20)
                   :run-packages '("common")
                   :wait-for-load #f
                   :login-func #f
                   :activate-func #f
                   :deactivate-func #f
                   :kill-func #f
                   :borrow-level (new 'static 'array symbol 2 #f #f)
                   :borrow-display? (new 'static 'array symbol 2 #f #f)
                   :base-task-mask (task-mask task0)
                   :texture-anim-tfrag #f
                   :texture-anim-pris #f
                   :texture-anim-shrub #f
                   :texture-anim-alpha #f
                   :texture-anim-water #f
                   :texture-anim-twarp #f
                   :texture-anim-pris2 #f
                   :texture-anim-sprite #f
                   :texture-anim-map #f
                   :texture-anim-sky #f
                   :draw-priority 10.0
                   :fog-height 327680.0
                   :bigmap-id (bigmap-id bigmap-id-20)
                   :ocean-near-translucent? #t
                   :ocean-far? #f
                   :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                   :max-rain 1.0
                   :fog-mult 1.0
                   :ocean-alpha 1.0
                   :extra-sound-bank #f
                   )
        )

(define lerrol (new 'static 'level-load-info
                 :index 85
                 :task-level #x2
                 :name 'lerrol
                 :visname 'lerrol-vis
                 :nickname 'lerrol
                 :dbname 'lerrol
                 :taskname 'stadium
                 :packages '()
                 :memory-mode (load-buffer-mode borrow)
                 :music-bank #f
                 :ambient-sounds '()
                 :mood-func 'update-mood-default
                 :mood-init #f
                 :ocean #f
                 :sky #f
                 :use-camera-other #f
                 :continues '()
                 :tasks '()
                 :priority 100
                 :load-commands '()
                 :alt-load-commands '()
                 :bsp-mask #xffffffffffffffff
                 :buttom-height (meters -20)
                 :run-packages '("common")
                 :wait-for-load #f
                 :login-func #f
                 :activate-func #f
                 :deactivate-func #f
                 :kill-func #f
                 :borrow-level (new 'static 'array symbol 2 #f #f)
                 :borrow-display? (new 'static 'array symbol 2 #f #f)
                 :base-task-mask (task-mask task0)
                 :texture-anim-tfrag #f
                 :texture-anim-pris #f
                 :texture-anim-shrub #f
                 :texture-anim-alpha #f
                 :texture-anim-water #f
                 :texture-anim-twarp #f
                 :texture-anim-pris2 #f
                 :texture-anim-sprite #f
                 :texture-anim-map #f
                 :texture-anim-sky #f
                 :draw-priority 10.0
                 :fog-height 327680.0
                 :bigmap-id (bigmap-id bigmap-id-20)
                 :ocean-near-translucent? #t
                 :ocean-far? #f
                 :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                 :max-rain 1.0
                 :fog-mult 1.0
                 :ocean-alpha 1.0
                 :extra-sound-bank #f
                 )
        )

(define lkeirift (new 'static 'level-load-info
                   :index 86
                   :task-level #x2
                   :name 'lkeirift
                   :visname 'lkeirift-vis
                   :nickname 'lkeirift
                   :dbname 'lkeirift
                   :taskname 'stadium
                   :packages '()
                   :memory-mode (load-buffer-mode borrow)
                   :music-bank #f
                   :ambient-sounds '()
                   :mood-func 'update-mood-copy-stadium
                   :mood-init #f
                   :ocean #f
                   :sky #f
                   :use-camera-other #f
                   :continues '()
                   :tasks '()
                   :priority 100
                   :load-commands '()
                   :alt-load-commands '()
                   :bsp-mask #xffffffffffffffff
                   :buttom-height (meters -20)
                   :run-packages '("common")
                   :wait-for-load #f
                   :login-func #f
                   :activate-func #f
                   :deactivate-func #f
                   :kill-func #f
                   :borrow-level (new 'static 'array symbol 2 #f #f)
                   :borrow-display? (new 'static 'array symbol 2 #f #f)
                   :base-task-mask (task-mask task0)
                   :texture-anim-tfrag #f
                   :texture-anim-pris #f
                   :texture-anim-shrub #f
                   :texture-anim-alpha #f
                   :texture-anim-water #f
                   :texture-anim-twarp #f
                   :texture-anim-pris2 #f
                   :texture-anim-sprite #f
                   :texture-anim-map #f
                   :texture-anim-sky #f
                   :draw-priority 10.0
                   :fog-height 327680.0
                   :bigmap-id (bigmap-id bigmap-id-20)
                   :ocean-near-translucent? #t
                   :ocean-far? #f
                   :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                   :max-rain 1.0
                   :fog-mult 1.0
                   :ocean-alpha 1.0
                   :extra-sound-bank #f
                   )
        )

(define lracelit (new 'static 'level-load-info
                   :index 87
                   :task-level #x2
                   :name 'lracelit
                   :visname 'lracelit-vis
                   :nickname 'lracelit
                   :dbname 'lracelit
                   :taskname 'stadium
                   :packages '()
                   :memory-mode (load-buffer-mode borrow)
                   :music-bank #f
                   :ambient-sounds '()
                   :mood-func 'update-mood-copy-stadium
                   :mood-init #f
                   :ocean #f
                   :sky #f
                   :use-camera-other #f
                   :continues '()
                   :tasks '()
                   :priority 100
                   :load-commands '()
                   :alt-load-commands '()
                   :bsp-mask #xffffffffffffffff
                   :buttom-height (meters -20)
                   :run-packages '("common")
                   :wait-for-load #f
                   :login-func #f
                   :activate-func #f
                   :deactivate-func #f
                   :kill-func #f
                   :borrow-level (new 'static 'array symbol 2 #f #f)
                   :borrow-display? (new 'static 'array symbol 2 #f #f)
                   :base-task-mask (task-mask task0)
                   :texture-anim-tfrag #f
                   :texture-anim-pris #f
                   :texture-anim-shrub #f
                   :texture-anim-alpha #f
                   :texture-anim-water #f
                   :texture-anim-twarp #f
                   :texture-anim-pris2 #f
                   :texture-anim-sprite #f
                   :texture-anim-map #f
                   :texture-anim-sky #f
                   :draw-priority 10.0
                   :fog-height 327680.0
                   :bigmap-id (bigmap-id bigmap-id-20)
                   :ocean-near-translucent? #t
                   :ocean-far? #f
                   :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                   :max-rain 1.0
                   :fog-mult 1.0
                   :ocean-alpha 1.0
                   :extra-sound-bank #f
                   )
        )

(define lracebb (new 'static 'level-load-info
                  :index 88
                  :task-level #x2
                  :name 'lracebb
                  :visname 'lracebb-vis
                  :nickname 'lracebb
                  :dbname 'lracebb
                  :taskname 'stadium
                  :packages '()
                  :memory-mode (load-buffer-mode borrow)
                  :music-bank #f
                  :ambient-sounds '()
                  :mood-func 'update-mood-default
                  :mood-init #f
                  :ocean #f
                  :sky #f
                  :use-camera-other #f
                  :continues '()
                  :tasks '()
                  :priority 100
                  :load-commands '()
                  :alt-load-commands '()
                  :bsp-mask #xffffffffffffffff
                  :buttom-height (meters -20)
                  :run-packages '("common")
                  :wait-for-load #f
                  :login-func #f
                  :activate-func #f
                  :deactivate-func #f
                  :kill-func #f
                  :borrow-level (new 'static 'array symbol 2 #f #f)
                  :borrow-display? (new 'static 'array symbol 2 #f #f)
                  :base-task-mask (task-mask task0)
                  :texture-anim-tfrag #f
                  :texture-anim-pris #f
                  :texture-anim-shrub #f
                  :texture-anim-alpha #f
                  :texture-anim-water #f
                  :texture-anim-twarp #f
                  :texture-anim-pris2 #f
                  :texture-anim-sprite #f
                  :texture-anim-map #f
                  :texture-anim-sky #f
                  :draw-priority 10.0
                  :fog-height 327680.0
                  :bigmap-id (bigmap-id bigmap-id-20)
                  :ocean-near-translucent? #t
                  :ocean-far? #f
                  :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                  :max-rain 1.0
                  :fog-mult 1.0
                  :ocean-alpha 1.0
                  :extra-sound-bank #f
                  )
        )

(define lracebf (new 'static 'level-load-info
                  :index 89
                  :task-level #x2
                  :name 'lracebf
                  :visname 'lracebf-vis
                  :nickname 'lracebf
                  :dbname 'lracebf
                  :taskname 'stadium
                  :packages '()
                  :memory-mode (load-buffer-mode borrow)
                  :music-bank #f
                  :ambient-sounds '()
                  :mood-func 'update-mood-default
                  :mood-init #f
                  :ocean #f
                  :sky #f
                  :use-camera-other #f
                  :continues '()
                  :tasks '()
                  :priority 100
                  :load-commands '()
                  :alt-load-commands '()
                  :bsp-mask #xffffffffffffffff
                  :buttom-height (meters -20)
                  :run-packages '("common")
                  :wait-for-load #f
                  :login-func #f
                  :activate-func #f
                  :deactivate-func #f
                  :kill-func #f
                  :borrow-level (new 'static 'array symbol 2 #f #f)
                  :borrow-display? (new 'static 'array symbol 2 #f #f)
                  :base-task-mask (task-mask task0)
                  :texture-anim-tfrag #f
                  :texture-anim-pris #f
                  :texture-anim-shrub #f
                  :texture-anim-alpha #f
                  :texture-anim-water #f
                  :texture-anim-twarp #f
                  :texture-anim-pris2 #f
                  :texture-anim-sprite #f
                  :texture-anim-map #f
                  :texture-anim-sky #f
                  :draw-priority 10.0
                  :fog-height 327680.0
                  :bigmap-id (bigmap-id bigmap-id-20)
                  :ocean-near-translucent? #t
                  :ocean-far? #f
                  :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                  :max-rain 1.0
                  :fog-mult 1.0
                  :ocean-alpha 1.0
                  :extra-sound-bank #f
                  )
        )

(define lracecb (new 'static 'level-load-info
                  :index 90
                  :task-level #x2
                  :name 'lracecb
                  :visname 'lracecb-vis
                  :nickname 'lracecb
                  :dbname 'lracecb
                  :taskname 'stadium
                  :packages '()
                  :memory-mode (load-buffer-mode borrow)
                  :music-bank #f
                  :ambient-sounds '()
                  :mood-func 'update-mood-default
                  :mood-init #f
                  :ocean #f
                  :sky #f
                  :use-camera-other #f
                  :continues '()
                  :tasks '()
                  :priority 100
                  :load-commands '()
                  :alt-load-commands '()
                  :bsp-mask #xffffffffffffffff
                  :buttom-height (meters -20)
                  :run-packages '("common")
                  :wait-for-load #f
                  :login-func #f
                  :activate-func #f
                  :deactivate-func #f
                  :kill-func #f
                  :borrow-level (new 'static 'array symbol 2 #f #f)
                  :borrow-display? (new 'static 'array symbol 2 #f #f)
                  :base-task-mask (task-mask task0)
                  :texture-anim-tfrag #f
                  :texture-anim-pris #f
                  :texture-anim-shrub #f
                  :texture-anim-alpha #f
                  :texture-anim-water #f
                  :texture-anim-twarp #f
                  :texture-anim-pris2 #f
                  :texture-anim-sprite #f
                  :texture-anim-map #f
                  :texture-anim-sky #f
                  :draw-priority 10.0
                  :fog-height 327680.0
                  :bigmap-id (bigmap-id bigmap-id-20)
                  :ocean-near-translucent? #t
                  :ocean-far? #f
                  :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                  :max-rain 1.0
                  :fog-mult 1.0
                  :ocean-alpha 1.0
                  :extra-sound-bank #f
                  )
        )

(define lracecf (new 'static 'level-load-info
                  :index 91
                  :task-level #x2
                  :name 'lracecf
                  :visname 'lracecf-vis
                  :nickname 'lracecf
                  :dbname 'lracecf
                  :taskname 'stadium
                  :packages '()
                  :memory-mode (load-buffer-mode borrow)
                  :music-bank #f
                  :ambient-sounds '()
                  :mood-func 'update-mood-default
                  :mood-init #f
                  :ocean #f
                  :sky #f
                  :use-camera-other #f
                  :continues '()
                  :tasks '()
                  :priority 100
                  :load-commands '()
                  :alt-load-commands '()
                  :bsp-mask #xffffffffffffffff
                  :buttom-height (meters -20)
                  :run-packages '("common")
                  :wait-for-load #f
                  :login-func #f
                  :activate-func #f
                  :deactivate-func #f
                  :kill-func #f
                  :borrow-level (new 'static 'array symbol 2 #f #f)
                  :borrow-display? (new 'static 'array symbol 2 #f #f)
                  :base-task-mask (task-mask task0)
                  :texture-anim-tfrag #f
                  :texture-anim-pris #f
                  :texture-anim-shrub #f
                  :texture-anim-alpha #f
                  :texture-anim-water #f
                  :texture-anim-twarp #f
                  :texture-anim-pris2 #f
                  :texture-anim-sprite #f
                  :texture-anim-map #f
                  :texture-anim-sky #f
                  :draw-priority 10.0
                  :fog-height 327680.0
                  :bigmap-id (bigmap-id bigmap-id-20)
                  :ocean-near-translucent? #t
                  :ocean-far? #f
                  :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                  :max-rain 1.0
                  :fog-mult 1.0
                  :ocean-alpha 1.0
                  :extra-sound-bank #f
                  )
        )

(define lracedb (new 'static 'level-load-info
                  :index 92
                  :task-level #x2
                  :name 'lracedb
                  :visname 'lracedb-vis
                  :nickname 'lracedb
                  :dbname 'lracedb
                  :taskname 'stadium
                  :packages '()
                  :memory-mode (load-buffer-mode borrow)
                  :music-bank #f
                  :ambient-sounds '()
                  :mood-func 'update-mood-default
                  :mood-init #f
                  :ocean #f
                  :sky #f
                  :use-camera-other #f
                  :continues '()
                  :tasks '()
                  :priority 100
                  :load-commands '()
                  :alt-load-commands '()
                  :bsp-mask #xffffffffffffffff
                  :buttom-height (meters -20)
                  :run-packages '("common")
                  :wait-for-load #f
                  :login-func #f
                  :activate-func #f
                  :deactivate-func #f
                  :kill-func #f
                  :borrow-level (new 'static 'array symbol 2 #f #f)
                  :borrow-display? (new 'static 'array symbol 2 #f #f)
                  :base-task-mask (task-mask task0)
                  :texture-anim-tfrag #f
                  :texture-anim-pris #f
                  :texture-anim-shrub #f
                  :texture-anim-alpha #f
                  :texture-anim-water #f
                  :texture-anim-twarp #f
                  :texture-anim-pris2 #f
                  :texture-anim-sprite #f
                  :texture-anim-map #f
                  :texture-anim-sky #f
                  :draw-priority 10.0
                  :fog-height 327680.0
                  :bigmap-id (bigmap-id bigmap-id-20)
                  :ocean-near-translucent? #t
                  :ocean-far? #f
                  :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                  :max-rain 1.0
                  :fog-mult 1.0
                  :ocean-alpha 1.0
                  :extra-sound-bank #f
                  )
        )

(define lracedf (new 'static 'level-load-info
                  :index 93
                  :task-level #x2
                  :name 'lracedf
                  :visname 'lracedf-vis
                  :nickname 'lracedf
                  :dbname 'lracedf
                  :taskname 'stadium
                  :packages '()
                  :memory-mode (load-buffer-mode borrow)
                  :music-bank #f
                  :ambient-sounds '()
                  :mood-func 'update-mood-default
                  :mood-init #f
                  :ocean #f
                  :sky #f
                  :use-camera-other #f
                  :continues '()
                  :tasks '()
                  :priority 100
                  :load-commands '()
                  :alt-load-commands '()
                  :bsp-mask #xffffffffffffffff
                  :buttom-height (meters -20)
                  :run-packages '("common")
                  :wait-for-load #f
                  :login-func #f
                  :activate-func #f
                  :deactivate-func #f
                  :kill-func #f
                  :borrow-level (new 'static 'array symbol 2 #f #f)
                  :borrow-display? (new 'static 'array symbol 2 #f #f)
                  :base-task-mask (task-mask task0)
                  :texture-anim-tfrag #f
                  :texture-anim-pris #f
                  :texture-anim-shrub #f
                  :texture-anim-alpha #f
                  :texture-anim-water #f
                  :texture-anim-twarp #f
                  :texture-anim-pris2 #f
                  :texture-anim-sprite #f
                  :texture-anim-map #f
                  :texture-anim-sky #f
                  :draw-priority 10.0
                  :fog-height 327680.0
                  :bigmap-id (bigmap-id bigmap-id-20)
                  :ocean-near-translucent? #t
                  :ocean-far? #f
                  :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                  :max-rain 1.0
                  :fog-mult 1.0
                  :ocean-alpha 1.0
                  :extra-sound-bank #f
                  )
        )

(define lgarcsta (new 'static 'level-load-info
                   :index 94
                   :task-level #x1
                   :name 'lgarcsta
                   :visname 'lgarcsta-vis
                   :nickname 'lgarcsta
                   :dbname 'lgarcsta
                   :taskname 'city
                   :packages '()
                   :memory-mode (load-buffer-mode borrow)
                   :music-bank #f
                   :ambient-sounds '()
                   :mood-func 'update-mood-copy-garage
                   :mood-init #f
                   :ocean #f
                   :sky #f
                   :use-camera-other #f
                   :continues '()
                   :tasks '()
                   :priority 100
                   :load-commands '()
                   :alt-load-commands '()
                   :bsp-mask #xffffffffffffffff
                   :buttom-height (meters -20)
                   :run-packages '("common")
                   :wait-for-load #f
                   :login-func #f
                   :activate-func #f
                   :deactivate-func #f
                   :kill-func #f
                   :borrow-level (new 'static 'array symbol 2 #f #f)
                   :borrow-display? (new 'static 'array symbol 2 #f #f)
                   :texture-anim-tfrag #f
                   :texture-anim-pris #f
                   :texture-anim-shrub #f
                   :texture-anim-alpha #f
                   :texture-anim-water #f
                   :texture-anim-twarp #f
                   :texture-anim-pris2 #f
                   :texture-anim-sprite #f
                   :texture-anim-map #f
                   :texture-anim-sky #f
                   :draw-priority 10.0
                   :fog-height 327680.0
                   :bigmap-id (bigmap-id bigmap-id-20)
                   :ocean-near-translucent? #t
                   :ocean-far? #f
                   :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                   :max-rain 1.0
                   :fog-mult 1.0
                   :ocean-alpha 1.0
                   :extra-sound-bank #f
                   )
        )

(define lsamergd (new 'static 'level-load-info
                   :index 95
                   :task-level #x1
                   :name 'lsamergd
                   :visname 'lsamergd-vis
                   :nickname 'lsamergd
                   :dbname 'lsamergd
                   :taskname 'city
                   :packages '()
                   :memory-mode (load-buffer-mode borrow)
                   :music-bank #f
                   :ambient-sounds '()
                   :mood-func 'update-mood-copy-stadium
                   :mood-init #f
                   :ocean #f
                   :sky #f
                   :use-camera-other #f
                   :continues '()
                   :tasks '()
                   :priority 100
                   :load-commands '()
                   :alt-load-commands '()
                   :bsp-mask #xffffffffffffffff
                   :buttom-height (meters -20)
                   :run-packages '("common")
                   :wait-for-load #f
                   :login-func #f
                   :activate-func #f
                   :deactivate-func #f
                   :kill-func #f
                   :borrow-level (new 'static 'array symbol 2 #f #f)
                   :borrow-display? (new 'static 'array symbol 2 #f #f)
                   :texture-anim-tfrag #f
                   :texture-anim-pris #f
                   :texture-anim-shrub #f
                   :texture-anim-alpha #f
                   :texture-anim-water #f
                   :texture-anim-twarp #f
                   :texture-anim-pris2 #f
                   :texture-anim-sprite #f
                   :texture-anim-map #f
                   :texture-anim-sky #f
                   :draw-priority 10.0
                   :fog-height 327680.0
                   :bigmap-id (bigmap-id bigmap-id-20)
                   :ocean-near-translucent? #t
                   :ocean-far? #f
                   :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                   :max-rain 1.0
                   :fog-mult 1.0
                   :ocean-alpha 1.0
                   :extra-sound-bank #f
                   )
        )

(define lerbrngd (new 'static 'level-load-info
                   :index 96
                   :task-level #x1
                   :name 'lerbrngd
                   :visname 'lerbrngd-vis
                   :nickname 'lerbrngd
                   :dbname 'lerbrngd
                   :taskname 'city
                   :packages '()
                   :memory-mode (load-buffer-mode borrow)
                   :music-bank #f
                   :ambient-sounds '()
                   :mood-func 'update-mood-copy-stadium
                   :mood-init #f
                   :ocean #f
                   :sky #f
                   :use-camera-other #f
                   :continues '()
                   :tasks '()
                   :priority 100
                   :load-commands '()
                   :alt-load-commands '()
                   :bsp-mask #xffffffffffffffff
                   :buttom-height (meters -20)
                   :run-packages '("common")
                   :wait-for-load #f
                   :login-func #f
                   :activate-func #f
                   :deactivate-func #f
                   :kill-func #f
                   :borrow-level (new 'static 'array symbol 2 #f #f)
                   :borrow-display? (new 'static 'array symbol 2 #f #f)
                   :texture-anim-tfrag #f
                   :texture-anim-pris #f
                   :texture-anim-shrub #f
                   :texture-anim-alpha #f
                   :texture-anim-water #f
                   :texture-anim-twarp #f
                   :texture-anim-pris2 #f
                   :texture-anim-sprite #f
                   :texture-anim-map #f
                   :texture-anim-sky #f
                   :draw-priority 10.0
                   :fog-height 327680.0
                   :bigmap-id (bigmap-id bigmap-id-20)
                   :ocean-near-translucent? #t
                   :ocean-far? #f
                   :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                   :max-rain 1.0
                   :fog-mult 1.0
                   :ocean-alpha 1.0
                   :extra-sound-bank #f
                   )
        )

(define lsmysbrt (new 'static 'level-load-info
                   :index 97
                   :task-level #x1
                   :name 'lsmysbrt
                   :visname 'lsmysbrt-vis
                   :nickname 'lsmysbrt
                   :dbname 'lsmysbrt
                   :taskname 'city
                   :packages '()
                   :memory-mode (load-buffer-mode borrow)
                   :music-bank #f
                   :ambient-sounds '()
                   :mood-func 'update-mood-copy-stadium
                   :mood-init #f
                   :ocean #f
                   :sky #f
                   :use-camera-other #f
                   :continues '()
                   :tasks '()
                   :priority 100
                   :load-commands '()
                   :alt-load-commands '()
                   :bsp-mask #xffffffffffffffff
                   :buttom-height (meters -20)
                   :run-packages '("common")
                   :wait-for-load #f
                   :login-func #f
                   :activate-func #f
                   :deactivate-func #f
                   :kill-func #f
                   :borrow-level (new 'static 'array symbol 2 #f #f)
                   :borrow-display? (new 'static 'array symbol 2 #f #f)
                   :texture-anim-tfrag #f
                   :texture-anim-pris #f
                   :texture-anim-shrub #f
                   :texture-anim-alpha #f
                   :texture-anim-water #f
                   :texture-anim-twarp #f
                   :texture-anim-pris2 #f
                   :texture-anim-sprite #f
                   :texture-anim-map #f
                   :texture-anim-sky #f
                   :draw-priority 10.0
                   :fog-height 327680.0
                   :bigmap-id (bigmap-id bigmap-id-20)
                   :ocean-near-translucent? #t
                   :ocean-far? #f
                   :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                   :max-rain 1.0
                   :fog-mult 1.0
                   :ocean-alpha 1.0
                   :extra-sound-bank #f
                   )
        )

(define lashgrd (new 'static 'level-load-info
                  :index 98
                  :task-level #x1
                  :name 'lashgrd
                  :visname 'lashgrd-vis
                  :nickname 'lashgrd
                  :dbname 'lashgrd
                  :taskname 'city
                  :packages '()
                  :memory-mode (load-buffer-mode borrow)
                  :music-bank #f
                  :ambient-sounds '()
                  :mood-func 'update-mood-copy-garage
                  :mood-init #f
                  :ocean #f
                  :sky #f
                  :use-camera-other #f
                  :continues '()
                  :tasks '()
                  :priority 100
                  :load-commands '()
                  :alt-load-commands '()
                  :bsp-mask #xffffffffffffffff
                  :buttom-height (meters -20)
                  :run-packages '("common")
                  :wait-for-load #f
                  :login-func #f
                  :activate-func #f
                  :deactivate-func #f
                  :kill-func #f
                  :borrow-level (new 'static 'array symbol 2 #f #f)
                  :borrow-display? (new 'static 'array symbol 2 #f #f)
                  :texture-anim-tfrag #f
                  :texture-anim-pris #f
                  :texture-anim-shrub #f
                  :texture-anim-alpha #f
                  :texture-anim-water #f
                  :texture-anim-twarp #f
                  :texture-anim-pris2 #f
                  :texture-anim-sprite #f
                  :texture-anim-map #f
                  :texture-anim-sky #f
                  :draw-priority 10.0
                  :fog-height 327680.0
                  :bigmap-id (bigmap-id bigmap-id-20)
                  :ocean-near-translucent? #t
                  :ocean-far? #f
                  :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                  :max-rain 1.0
                  :fog-mult 1.0
                  :ocean-alpha 1.0
                  :extra-sound-bank #f
                  )
        )

(define onintent
  (new 'static 'level-load-info
    :index 99
    :task-level #x1
    :name 'onintent
    :visname 'onintent-vis
    :nickname 'onintent
    :dbname 'onintent
    :taskname 'city
    :packages '(onintent)
    :music-bank 'city1
    :ambient-sounds '()
    :mood-func 'update-mood-onintent
    :mood-init #f
    :ocean #f
    :sky #f
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "onintent-start"
        :level 'onintent
        :flags (continue-flags scene-wait test)
        :trans (new 'static 'vector :x 2918937.5 :y 34444.902 :z 3093502.2 :w 1.0)
        :quat (new 'static 'vector :y -0.9989 :w 0.0465)
        :camera-trans (new 'static 'vector :x 2921813.5 :y 55538.484 :z 3144613.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9984 0.0 0.0554))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0067 0.9925 -0.1217))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.055 -0.1219 -0.991))
          )
        :on-goto #f
        :vis-nick 'ctymarkb
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'onintent :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctymarkb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -15)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-size (new 'static 'array uint16 2 #x4ba #x0)
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-20)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define ltentout (new 'static 'level-load-info
                   :index 100
                   :task-level #x1
                   :name 'ltentout
                   :visname 'ltentout-vis
                   :nickname 'ltentout
                   :dbname 'ltentout
                   :taskname 'city
                   :packages '()
                   :memory-mode (load-buffer-mode borrow)
                   :music-bank 'city1
                   :ambient-sounds '()
                   :mood-func 'update-mood-ltentout
                   :mood-init #f
                   :ocean #f
                   :sky #f
                   :use-camera-other #f
                   :continues '()
                   :tasks '()
                   :priority 100
                   :load-commands '()
                   :alt-load-commands '()
                   :bsp-mask #xffffffffffffffff
                   :buttom-height (meters -20)
                   :run-packages '("common")
                   :wait-for-load #f
                   :login-func #f
                   :activate-func #f
                   :deactivate-func #f
                   :kill-func #f
                   :borrow-level (new 'static 'array symbol 2 #f #f)
                   :borrow-display? (new 'static 'array symbol 2 #f #f)
                   :base-task-mask (task-mask task0)
                   :texture-anim-tfrag #f
                   :texture-anim-pris #f
                   :texture-anim-shrub #f
                   :texture-anim-alpha #f
                   :texture-anim-water #f
                   :texture-anim-twarp #f
                   :texture-anim-pris2 #f
                   :texture-anim-sprite #f
                   :texture-anim-map #f
                   :texture-anim-sky #f
                   :draw-priority 10.0
                   :fog-height 327680.0
                   :bigmap-id (bigmap-id bigmap-id-20)
                   :ocean-near-translucent? #t
                   :ocean-far? #f
                   :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                   :max-rain 1.0
                   :fog-mult 1.0
                   :ocean-alpha 1.0
                   :extra-sound-bank #f
                   )
        )

(define ltentob (new 'static 'level-load-info
                  :index #x65
                  :task-level #x1
                  :name 'ltentob
                  :visname 'ltentob-vis
                  :nickname 'ltentob
                  :dbname 'ltentob
                  :taskname 'city
                  :packages '()
                  :memory-mode (load-buffer-mode borrow)
                  :music-bank 'city1
                  :ambient-sounds '()
                  :mood-func 'update-mood-ltentout
                  :mood-init #f
                  :ocean #f
                  :sky #f
                  :use-camera-other #f
                  :continues '()
                  :tasks '()
                  :priority 100
                  :load-commands '()
                  :alt-load-commands '()
                  :bsp-mask #xffffffffffffffff
                  :buttom-height (meters -20)
                  :run-packages '("common")
                  :wait-for-load #f
                  :login-func #f
                  :activate-func #f
                  :deactivate-func #f
                  :kill-func #f
                  :borrow-level (new 'static 'array symbol 2 #f #f)
                  :borrow-display? (new 'static 'array symbol 2 #f #f)
                  :base-task-mask (task-mask task0)
                  :texture-anim-tfrag #f
                  :texture-anim-pris #f
                  :texture-anim-shrub #f
                  :texture-anim-alpha #f
                  :texture-anim-water #f
                  :texture-anim-twarp #f
                  :texture-anim-pris2 #f
                  :texture-anim-sprite #f
                  :texture-anim-map #f
                  :texture-anim-sky #f
                  :draw-priority 10.0
                  :fog-height 327680.0
                  :bigmap-id (bigmap-id bigmap-id-20)
                  :ocean-near-translucent? #t
                  :ocean-far? #f
                  :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                  :max-rain 1.0
                  :fog-mult 1.0
                  :ocean-alpha 1.0
                  :extra-sound-bank #f
                  )
        )

(define kiosk
  (new 'static 'level-load-info
    :index #x66
    :task-level #x1
    :name 'kiosk
    :visname 'kiosk-vis
    :nickname 'kiosk
    :dbname 'kiosk
    :taskname 'city
    :packages '(kiosk)
    :music-bank 'city1
    :ambient-sounds '()
    :mood-func 'update-mood-ctymarka
    :mood-init #f
    :ocean #f
    :sky #t
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "kiosk-start"
        :level 'kiosk
        :trans (new 'static 'vector :x -439072.34 :y 32768.0 :z 1956770.6 :w 1.0)
        :quat (new 'static 'vector :y -0.1582 :w 0.9874)
        :camera-trans (new 'static 'vector :x -396247.84 :y 53861.992 :z 1952489.9 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1584 0.0 0.9873))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1741 0.9843 0.0279))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9718 -0.1763 0.1559))
          )
        :on-goto #f
        :vis-nick 'kiosk
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'kiosk :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctymarka :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'ctywide3)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -15)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-20)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :max-rain 1.0
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define oracle
  (new 'static 'level-load-info
    :index #x67
    :task-level #x1
    :name 'oracle
    :visname 'oracle-vis
    :nickname 'oracle
    :dbname 'oracle
    :taskname 'city
    :packages '(oracle)
    :music-bank 'city1
    :ambient-sounds '()
    :mood-func 'update-mood-oracle
    :mood-init 'init-mood-oracle
    :ocean #f
    :sky #f
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "oracle-start"
        :level 'oracle
        :flags (continue-flags test)
        :trans (new 'static 'vector :x 2893301.2 :y 24565.35 :z -1878591.9 :w 1.0)
        :quat (new 'static 'vector :y -0.1552 :w -0.9878)
        :camera-trans (new 'static 'vector :x 2885879.0 :y 45466.83 :z -1928682.8 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9891 0.0 -0.1466))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0175 0.9927 0.1185))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1455 -0.1198 0.982))
          )
        :on-goto #f
        :vis-nick 'oracle
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'oracle :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyslumc :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'oracle1)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -15)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :texture-anim-tfrag #f
    :texture-anim-pris '*darkjak-hires-texture-anim-array*
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-20)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define hideout
  (new 'static 'level-load-info
    :index #x68
    :task-level #x1
    :name 'hideout
    :visname 'hideout-vis
    :nickname 'hideout
    :dbname 'hideout
    :taskname 'city
    :packages '(hideout)
    :music-bank 'city1
    :ambient-sounds '()
    :mood-func 'update-mood-hideout
    :mood-init #f
    :ocean #f
    :sky #f
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "hideout-start"
        :level 'hideout
        :trans (new 'static 'vector :x 4880597.0 :y 15103.181 :z 244580.77 :w 1.0)
        :quat (new 'static 'vector :y 0.7269 :w 0.6866)
        :camera-trans (new 'static 'vector :x 4842975.5 :y 32609.484 :z 244427.98 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0036 0.0 -0.9999))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.161 0.9869 0.0005))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9869 -0.161 0.0036))
          )
        :on-goto #f
        :vis-nick 'hideout
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'hideout :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctysluma :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'hideout1)
        )
      (new 'static 'continue-point
        :name "hideout-movie"
        :level 'hideout
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 4880597.0 :y 15103.181 :z 244580.77 :w 1.0)
        :quat (new 'static 'vector :y 0.7269 :w 0.6866)
        :camera-trans (new 'static 'vector :x 4842975.5 :y 32609.484 :z 244427.98 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0036 0.0 -0.9999))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.161 0.9869 0.0005))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9869 -0.161 0.0036))
          )
        :on-goto #f
        :vis-nick 'hideout
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'hideout :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'special :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctysluma :display? 'special :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'hideout1)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -15)
    :run-packages '("common")
    :wait-for-load #f
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-size (new 'static 'array uint16 2 #x60e #x0)
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-20)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.5 0.5))
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define ltrntess (new 'static 'level-load-info
                   :index #x69
                   :task-level #x1
                   :name 'ltrntess
                   :visname 'ltrntess-vis
                   :nickname 'ltrntess
                   :dbname 'ltrntess
                   :taskname 'city
                   :packages '()
                   :music-bank #f
                   :ambient-sounds '()
                   :mood-func 'update-mood-copy-hideout
                   :mood-init #f
                   :ocean #f
                   :sky #f
                   :use-camera-other #f
                   :continues '()
                   :tasks '()
                   :priority 100
                   :load-commands '()
                   :alt-load-commands '()
                   :bsp-mask #xffffffffffffffff
                   :buttom-height (meters -20)
                   :run-packages '("common")
                   :wait-for-load #f
                   :login-func #f
                   :activate-func #f
                   :deactivate-func #f
                   :kill-func #f
                   :borrow-level (new 'static 'array symbol 2 #f #f)
                   :borrow-display? (new 'static 'array symbol 2 #f #f)
                   :texture-anim-tfrag #f
                   :texture-anim-pris #f
                   :texture-anim-shrub #f
                   :texture-anim-alpha #f
                   :texture-anim-water #f
                   :texture-anim-twarp #f
                   :texture-anim-pris2 #f
                   :texture-anim-sprite #f
                   :texture-anim-map #f
                   :texture-anim-sky #f
                   :draw-priority 10.0
                   :fog-height 327680.0
                   :bigmap-id (bigmap-id bigmap-id-20)
                   :ocean-near-translucent? #t
                   :ocean-far? #f
                   :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                   :max-rain 1.0
                   :fog-mult 1.0
                   :ocean-alpha 1.0
                   :extra-sound-bank #f
                   )
        )

(define ltrnkrkd (new 'static 'level-load-info
                   :index #x6a
                   :task-level #x1
                   :name 'ltrnkrkd
                   :visname 'ltrnkrkd-vis
                   :nickname 'ltrnkrkd
                   :dbname 'ltrnkrkd
                   :taskname 'city
                   :packages '()
                   :memory-mode (load-buffer-mode borrow)
                   :music-bank #f
                   :ambient-sounds '()
                   :mood-func 'update-mood-copy-hideout
                   :mood-init #f
                   :ocean #f
                   :sky #f
                   :use-camera-other #f
                   :continues '()
                   :tasks '()
                   :priority 100
                   :load-commands '()
                   :alt-load-commands '()
                   :bsp-mask #xffffffffffffffff
                   :buttom-height (meters -20)
                   :run-packages '("common")
                   :wait-for-load #f
                   :login-func #f
                   :activate-func #f
                   :deactivate-func #f
                   :kill-func #f
                   :borrow-level (new 'static 'array symbol 2 #f #f)
                   :borrow-display? (new 'static 'array symbol 2 #f #f)
                   :texture-anim-tfrag #f
                   :texture-anim-pris #f
                   :texture-anim-shrub #f
                   :texture-anim-alpha #f
                   :texture-anim-water #f
                   :texture-anim-twarp #f
                   :texture-anim-pris2 #f
                   :texture-anim-sprite #f
                   :texture-anim-map #f
                   :texture-anim-sky #f
                   :draw-priority 10.0
                   :fog-height 327680.0
                   :bigmap-id (bigmap-id bigmap-id-20)
                   :ocean-near-translucent? #t
                   :ocean-far? #f
                   :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                   :max-rain 1.0
                   :fog-mult 1.0
                   :ocean-alpha 1.0
                   :extra-sound-bank #f
                   )
        )

(define ltrnysam (new 'static 'level-load-info
                   :index #x6b
                   :task-level #x1
                   :name 'ltrnysam
                   :visname 'ltrnysam-vis
                   :nickname 'ltrnysam
                   :dbname 'ltrnysam
                   :taskname 'city
                   :packages '()
                   :memory-mode (load-buffer-mode borrow)
                   :music-bank #f
                   :ambient-sounds '()
                   :mood-func 'update-mood-copy-hideout
                   :mood-init #f
                   :ocean #f
                   :sky #f
                   :use-camera-other #f
                   :continues '()
                   :tasks '()
                   :priority 100
                   :load-commands '()
                   :alt-load-commands '()
                   :bsp-mask #xffffffffffffffff
                   :buttom-height (meters -20)
                   :run-packages '("common")
                   :wait-for-load #f
                   :login-func #f
                   :activate-func #f
                   :deactivate-func #f
                   :kill-func #f
                   :borrow-level (new 'static 'array symbol 2 #f #f)
                   :borrow-display? (new 'static 'array symbol 2 #f #f)
                   :texture-anim-tfrag #f
                   :texture-anim-pris #f
                   :texture-anim-shrub #f
                   :texture-anim-alpha #f
                   :texture-anim-water #f
                   :texture-anim-twarp #f
                   :texture-anim-pris2 #f
                   :texture-anim-sprite #f
                   :texture-anim-map #f
                   :texture-anim-sky #f
                   :draw-priority 10.0
                   :fog-height 327680.0
                   :bigmap-id (bigmap-id bigmap-id-20)
                   :ocean-near-translucent? #t
                   :ocean-far? #f
                   :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                   :max-rain 1.0
                   :fog-mult 1.0
                   :ocean-alpha 1.0
                   :extra-sound-bank #f
                   )
        )

(define lysamsam (new 'static 'level-load-info
                   :index #x6c
                   :task-level #x1
                   :name 'lysamsam
                   :visname 'lysamsam-vis
                   :nickname 'lysamsam
                   :dbname 'lysamsam
                   :taskname 'city
                   :packages '()
                   :memory-mode (load-buffer-mode borrow)
                   :music-bank #f
                   :ambient-sounds '()
                   :mood-func 'update-mood-copy-hideout
                   :mood-init #f
                   :ocean #f
                   :sky #f
                   :use-camera-other #f
                   :continues '()
                   :tasks '()
                   :priority 100
                   :load-commands '()
                   :alt-load-commands '()
                   :bsp-mask #xffffffffffffffff
                   :buttom-height (meters -20)
                   :run-packages '("common")
                   :wait-for-load #f
                   :login-func #f
                   :activate-func #f
                   :deactivate-func #f
                   :kill-func #f
                   :borrow-level (new 'static 'array symbol 2 #f #f)
                   :borrow-display? (new 'static 'array symbol 2 #f #f)
                   :texture-anim-tfrag #f
                   :texture-anim-pris #f
                   :texture-anim-shrub #f
                   :texture-anim-alpha #f
                   :texture-anim-water #f
                   :texture-anim-twarp #f
                   :texture-anim-pris2 #f
                   :texture-anim-sprite #f
                   :texture-anim-map #f
                   :texture-anim-sky #f
                   :draw-priority 10.0
                   :fog-height 327680.0
                   :bigmap-id (bigmap-id bigmap-id-20)
                   :ocean-near-translucent? #t
                   :ocean-far? #f
                   :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                   :max-rain 1.0
                   :fog-mult 1.0
                   :ocean-alpha 1.0
                   :extra-sound-bank #f
                   )
        )

(define lyskdcd (new 'static 'level-load-info
                  :index #x6d
                  :task-level #x1
                  :name 'lyskdcd
                  :visname 'lyskdcd-vis
                  :nickname 'lyskdcd
                  :dbname 'lyskdcd
                  :taskname 'city
                  :packages '()
                  :music-bank #f
                  :ambient-sounds '()
                  :mood-func 'update-mood-copy-hideout
                  :mood-init #f
                  :ocean #f
                  :sky #f
                  :use-camera-other #f
                  :continues '()
                  :tasks '()
                  :priority 100
                  :load-commands '()
                  :alt-load-commands '()
                  :bsp-mask #xffffffffffffffff
                  :buttom-height (meters -20)
                  :run-packages '("common")
                  :wait-for-load #f
                  :login-func #f
                  :activate-func #f
                  :deactivate-func #f
                  :kill-func #f
                  :borrow-level (new 'static 'array symbol 2 #f #f)
                  :borrow-display? (new 'static 'array symbol 2 #f #f)
                  :texture-anim-tfrag #f
                  :texture-anim-pris #f
                  :texture-anim-shrub #f
                  :texture-anim-alpha #f
                  :texture-anim-water #f
                  :texture-anim-twarp #f
                  :texture-anim-pris2 #f
                  :texture-anim-sprite #f
                  :texture-anim-map #f
                  :texture-anim-sky #f
                  :draw-priority 10.0
                  :fog-height 327680.0
                  :bigmap-id (bigmap-id bigmap-id-20)
                  :ocean-near-translucent? #t
                  :ocean-far? #f
                  :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                  :max-rain 1.0
                  :fog-mult 1.0
                  :ocean-alpha 1.0
                  :extra-sound-bank #f
                  )
        )

(define lkiddoge (new 'static 'level-load-info
                   :index #x6e
                   :task-level #x1
                   :name 'lkiddoge
                   :visname 'lkiddoge-vis
                   :nickname 'lkiddoge
                   :dbname 'lkiddoge
                   :taskname 'city
                   :packages '(botp halp esckidp)
                   :memory-mode (load-buffer-mode borrow)
                   :music-bank #f
                   :ambient-sounds '()
                   :mood-func 'update-mood-copy-ctywide
                   :mood-init #f
                   :ocean #f
                   :sky #f
                   :use-camera-other #f
                   :continues '()
                   :tasks '()
                   :priority 100
                   :load-commands '()
                   :alt-load-commands '()
                   :bsp-mask #xffffffffffffffff
                   :buttom-height (meters -20)
                   :run-packages '("common")
                   :wait-for-load #f
                   :login-func #f
                   :activate-func #f
                   :deactivate-func #f
                   :kill-func #f
                   :borrow-level (new 'static 'array symbol 2 #f #f)
                   :borrow-display? (new 'static 'array symbol 2 #f #f)
                   :texture-anim-tfrag #f
                   :texture-anim-pris #f
                   :texture-anim-shrub #f
                   :texture-anim-alpha #f
                   :texture-anim-water #f
                   :texture-anim-twarp #f
                   :texture-anim-pris2 #f
                   :texture-anim-sprite #f
                   :texture-anim-map #f
                   :texture-anim-sky #f
                   :draw-priority 10.0
                   :fog-height 327680.0
                   :bigmap-id (bigmap-id bigmap-id-20)
                   :ocean-near-translucent? #t
                   :ocean-far? #f
                   :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                   :max-rain 1.0
                   :fog-mult 1.0
                   :ocean-alpha 1.0
                   :extra-sound-bank '((ctywide3 esckid1))
                   )
        )

(define lhelldog (new 'static 'level-load-info
                   :index #x6f
                   :task-level #x1
                   :name 'lhelldog
                   :visname 'lhelldog-vis
                   :nickname 'lhelldog
                   :dbname 'lhelldog
                   :taskname 'city
                   :packages '(helldogp)
                   :memory-mode (load-buffer-mode borrow)
                   :music-bank #f
                   :ambient-sounds '()
                   :mood-func 'update-mood-copy-ctywide
                   :mood-init #f
                   :ocean #f
                   :sky #f
                   :use-camera-other #f
                   :continues '()
                   :tasks '()
                   :priority 100
                   :load-commands '()
                   :alt-load-commands '()
                   :bsp-mask #xffffffffffffffff
                   :buttom-height (meters -20)
                   :run-packages '("common")
                   :wait-for-load #f
                   :login-func #f
                   :activate-func #f
                   :deactivate-func #f
                   :kill-func #f
                   :borrow-level (new 'static 'array symbol 2 #f #f)
                   :borrow-display? (new 'static 'array symbol 2 #f #f)
                   :texture-anim-tfrag #f
                   :texture-anim-pris #f
                   :texture-anim-shrub #f
                   :texture-anim-alpha #f
                   :texture-anim-water #f
                   :texture-anim-twarp #f
                   :texture-anim-pris2 #f
                   :texture-anim-sprite #f
                   :texture-anim-map #f
                   :texture-anim-sky #f
                   :draw-priority 10.0
                   :fog-height 327680.0
                   :bigmap-id (bigmap-id bigmap-id-20)
                   :ocean-near-translucent? #t
                   :ocean-far? #f
                   :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                   :max-rain 1.0
                   :fog-mult 1.0
                   :ocean-alpha 1.0
                   :extra-sound-bank '((ctywide3 helldog1))
                   )
        )

(define lpackage (new 'static 'level-load-info
                   :index #x70
                   :task-level #x1
                   :name 'lpackage
                   :visname 'lpackage-vis
                   :nickname 'lpackage
                   :dbname 'lpackage
                   :taskname 'city
                   :packages '(deliveryp)
                   :memory-mode (load-buffer-mode borrow)
                   :music-bank #f
                   :ambient-sounds '()
                   :mood-func 'update-mood-copy-ctywide
                   :mood-init #f
                   :ocean #f
                   :sky #f
                   :use-camera-other #f
                   :continues '()
                   :tasks '()
                   :priority 100
                   :load-commands '()
                   :alt-load-commands '()
                   :bsp-mask #xffffffffffffffff
                   :buttom-height (meters -20)
                   :run-packages '("common")
                   :wait-for-load #f
                   :login-func #f
                   :activate-func #f
                   :deactivate-func #f
                   :kill-func #f
                   :borrow-level (new 'static 'array symbol 2 #f #f)
                   :borrow-display? (new 'static 'array symbol 2 #f #f)
                   :texture-anim-tfrag #f
                   :texture-anim-pris #f
                   :texture-anim-shrub #f
                   :texture-anim-alpha #f
                   :texture-anim-water #f
                   :texture-anim-twarp #f
                   :texture-anim-pris2 #f
                   :texture-anim-sprite #f
                   :texture-anim-map #f
                   :texture-anim-sky #f
                   :draw-priority 10.0
                   :fog-height 327680.0
                   :bigmap-id (bigmap-id bigmap-id-20)
                   :ocean-near-translucent? #t
                   :ocean-far? #f
                   :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                   :max-rain 1.0
                   :fog-mult 1.0
                   :ocean-alpha 1.0
                   :extra-sound-bank #f
                   )
        )

(define lsack (new 'static 'level-load-info
                :index #x71
                :task-level #x1
                :name 'lsack
                :visname 'lsack-vis
                :nickname 'lsack
                :dbname 'lsack
                :taskname 'city
                :packages '(collectionp)
                :memory-mode (load-buffer-mode borrow)
                :music-bank #f
                :ambient-sounds '()
                :mood-func 'update-mood-copy-ctywide
                :mood-init #f
                :ocean #f
                :sky #f
                :use-camera-other #f
                :continues '()
                :tasks '()
                :priority 100
                :load-commands '()
                :alt-load-commands '()
                :bsp-mask #xffffffffffffffff
                :buttom-height (meters -20)
                :run-packages '("common")
                :wait-for-load #f
                :login-func #f
                :activate-func #f
                :deactivate-func #f
                :kill-func #f
                :borrow-level (new 'static 'array symbol 2 #f #f)
                :borrow-display? (new 'static 'array symbol 2 #f #f)
                :texture-anim-tfrag #f
                :texture-anim-pris #f
                :texture-anim-shrub #f
                :texture-anim-alpha #f
                :texture-anim-water #f
                :texture-anim-twarp #f
                :texture-anim-pris2 #f
                :texture-anim-sprite #f
                :texture-anim-map #f
                :texture-anim-sky #f
                :draw-priority 10.0
                :fog-height 327680.0
                :bigmap-id (bigmap-id bigmap-id-20)
                :ocean-near-translucent? #t
                :ocean-far? #f
                :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                :max-rain 1.0
                :fog-mult 1.0
                :ocean-alpha 1.0
                :extra-sound-bank '((ctywide3 sack1))
                )
        )

(define lportrun (new 'static 'level-load-info
                   :index #x72
                   :task-level #x1
                   :name 'lportrun
                   :visname 'lportrun-vis
                   :nickname 'lportrun
                   :dbname 'lportrun
                   :taskname 'city
                   :packages '(portrunp)
                   :memory-mode (load-buffer-mode borrow)
                   :music-bank #f
                   :ambient-sounds '()
                   :mood-func 'update-mood-copy-ctywide
                   :mood-init #f
                   :ocean #f
                   :sky #f
                   :use-camera-other #f
                   :continues '()
                   :tasks '()
                   :priority 100
                   :load-commands '()
                   :alt-load-commands '()
                   :bsp-mask #xffffffffffffffff
                   :buttom-height (meters -20)
                   :run-packages '("common")
                   :wait-for-load #f
                   :login-func #f
                   :activate-func #f
                   :deactivate-func #f
                   :kill-func #f
                   :borrow-level (new 'static 'array symbol 2 #f #f)
                   :borrow-display? (new 'static 'array symbol 2 #f #f)
                   :texture-anim-tfrag #f
                   :texture-anim-pris #f
                   :texture-anim-shrub #f
                   :texture-anim-alpha #f
                   :texture-anim-water #f
                   :texture-anim-twarp #f
                   :texture-anim-pris2 #f
                   :texture-anim-sprite #f
                   :texture-anim-map #f
                   :texture-anim-sky #f
                   :draw-priority 10.0
                   :fog-height 327680.0
                   :bigmap-id (bigmap-id bigmap-id-20)
                   :ocean-near-translucent? #t
                   :ocean-far? #f
                   :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                   :max-rain 1.0
                   :fog-mult 1.0
                   :ocean-alpha 1.0
                   :extra-sound-bank '((ctywide3 portrun1))
                   )
        )

(define lshuttle (new 'static 'level-load-info
                   :index #x73
                   :task-level #x1
                   :name 'lshuttle
                   :visname 'lshuttle-vis
                   :nickname 'lshuttle
                   :dbname 'lshuttle
                   :taskname 'city
                   :packages '(shuttlep)
                   :memory-mode (load-buffer-mode borrow)
                   :music-bank #f
                   :ambient-sounds '()
                   :mood-func 'update-mood-copy-ctywide
                   :mood-init #f
                   :ocean #f
                   :sky #f
                   :use-camera-other #f
                   :continues '()
                   :tasks '()
                   :priority 100
                   :load-commands '()
                   :alt-load-commands '()
                   :bsp-mask #xffffffffffffffff
                   :buttom-height (meters -20)
                   :run-packages '("common")
                   :wait-for-load #f
                   :login-func #f
                   :activate-func #f
                   :deactivate-func #f
                   :kill-func #f
                   :borrow-level (new 'static 'array symbol 2 #f #f)
                   :borrow-display? (new 'static 'array symbol 2 #f #f)
                   :texture-anim-tfrag #f
                   :texture-anim-pris #f
                   :texture-anim-shrub #f
                   :texture-anim-alpha #f
                   :texture-anim-water #f
                   :texture-anim-twarp #f
                   :texture-anim-pris2 #f
                   :texture-anim-sprite #f
                   :texture-anim-map #f
                   :texture-anim-sky #f
                   :draw-priority 10.0
                   :fog-height 327680.0
                   :bigmap-id (bigmap-id bigmap-id-20)
                   :ocean-near-translucent? #t
                   :ocean-far? #f
                   :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                   :max-rain 1.0
                   :fog-mult 1.0
                   :ocean-alpha 1.0
                   :extra-sound-bank #f
                   )
        )

(define lmeetbrt (new 'static 'level-load-info
                   :index #x74
                   :task-level #x1
                   :name 'lmeetbrt
                   :visname 'lmeetbrt-vis
                   :nickname 'lmeetbrt
                   :dbname 'lmeetbrt
                   :taskname 'city
                   :packages '(meetbrtp)
                   :memory-mode (load-buffer-mode borrow)
                   :music-bank #f
                   :ambient-sounds '()
                   :mood-func 'update-mood-copy-ctywide
                   :mood-init #f
                   :ocean #f
                   :sky #f
                   :use-camera-other #f
                   :continues '()
                   :tasks '()
                   :priority 100
                   :load-commands '()
                   :alt-load-commands '()
                   :bsp-mask #xffffffffffffffff
                   :buttom-height (meters -20)
                   :run-packages '("common")
                   :wait-for-load #f
                   :login-func #f
                   :activate-func #f
                   :deactivate-func #f
                   :kill-func #f
                   :borrow-level (new 'static 'array symbol 2 #f #f)
                   :borrow-display? (new 'static 'array symbol 2 #f #f)
                   :texture-anim-tfrag #f
                   :texture-anim-pris #f
                   :texture-anim-shrub #f
                   :texture-anim-alpha #f
                   :texture-anim-water #f
                   :texture-anim-twarp #f
                   :texture-anim-pris2 #f
                   :texture-anim-sprite #f
                   :texture-anim-map #f
                   :texture-anim-sky #f
                   :draw-priority 10.0
                   :fog-height 327680.0
                   :bigmap-id (bigmap-id bigmap-id-20)
                   :ocean-near-translucent? #t
                   :ocean-far? #f
                   :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                   :max-rain 1.0
                   :fog-mult 1.0
                   :ocean-alpha 1.0
                   :extra-sound-bank '((ctywide3 meetbrt1))
                   )
        )

(define lpower (new 'static 'level-load-info
                 :index #x75
                 :task-level #x1
                 :name 'lpower
                 :visname 'lpower-vis
                 :nickname 'lpower
                 :dbname 'lpower
                 :taskname 'city
                 :packages '(ctypowerp)
                 :memory-mode (load-buffer-mode borrow)
                 :music-bank #f
                 :ambient-sounds '()
                 :mood-func 'update-mood-copy-ctywide
                 :mood-init #f
                 :ocean #f
                 :sky #f
                 :use-camera-other #f
                 :continues '()
                 :tasks '()
                 :priority 100
                 :load-commands '()
                 :alt-load-commands '()
                 :bsp-mask #xffffffffffffffff
                 :buttom-height (meters -20)
                 :run-packages '("common")
                 :wait-for-load #f
                 :login-func #f
                 :activate-func #f
                 :deactivate-func #f
                 :kill-func #f
                 :borrow-level (new 'static 'array symbol 2 #f #f)
                 :borrow-display? (new 'static 'array symbol 2 #f #f)
                 :texture-anim-tfrag #f
                 :texture-anim-pris #f
                 :texture-anim-shrub #f
                 :texture-anim-alpha #f
                 :texture-anim-water #f
                 :texture-anim-twarp #f
                 :texture-anim-pris2 #f
                 :texture-anim-sprite #f
                 :texture-anim-map #f
                 :texture-anim-sky #f
                 :draw-priority 10.0
                 :fog-height 327680.0
                 :bigmap-id (bigmap-id bigmap-id-20)
                 :ocean-near-translucent? #t
                 :ocean-far? #f
                 :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                 :max-rain 1.0
                 :fog-mult 1.0
                 :ocean-alpha 1.0
                 :extra-sound-bank #f
                 )
        )

(define lerlchal (new 'static 'level-load-info
                   :index #x76
                   :task-level #x1
                   :name 'lerlchal
                   :visname 'lerlchal-vis
                   :nickname 'lerlchal
                   :dbname 'lerlchal
                   :taskname 'city
                   :packages '(racep errol-chalp)
                   :memory-mode (load-buffer-mode borrow)
                   :music-bank #f
                   :ambient-sounds '()
                   :mood-func 'update-mood-copy-ctywide
                   :mood-init #f
                   :ocean #f
                   :sky #f
                   :use-camera-other #f
                   :continues '()
                   :tasks '()
                   :priority 100
                   :load-commands '()
                   :alt-load-commands '()
                   :bsp-mask #xffffffffffffffff
                   :buttom-height (meters -20)
                   :run-packages '("common")
                   :wait-for-load #f
                   :login-func #f
                   :activate-func 'city-race-borrow-level-activate
                   :deactivate-func #f
                   :kill-func #f
                   :borrow-level (new 'static 'array symbol 2 #f #f)
                   :borrow-display? (new 'static 'array symbol 2 #f #f)
                   :texture-anim-tfrag #f
                   :texture-anim-pris #f
                   :texture-anim-shrub #f
                   :texture-anim-alpha #f
                   :texture-anim-water #f
                   :texture-anim-twarp #f
                   :texture-anim-pris2 #f
                   :texture-anim-sprite #f
                   :texture-anim-map #f
                   :texture-anim-sky #f
                   :draw-priority 10.0
                   :fog-height 327680.0
                   :bigmap-id (bigmap-id bigmap-id-20)
                   :ocean-near-translucent? #t
                   :ocean-far? #f
                   :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                   :max-rain 1.0
                   :fog-mult 1.0
                   :ocean-alpha 1.0
                   :extra-sound-bank '((ctywide3 erlchal1))
                   )
        )

(define lprtrace (new 'static 'level-load-info
                   :index #x77
                   :task-level #x1
                   :name 'lprtrace
                   :visname 'lprtrace-vis
                   :nickname 'lprtrace
                   :dbname 'lprtrace
                   :taskname 'city
                   :packages '(racep errol-chalp)
                   :memory-mode (load-buffer-mode borrow)
                   :music-bank #f
                   :ambient-sounds '()
                   :mood-func 'update-mood-copy-ctywide
                   :mood-init #f
                   :ocean #f
                   :sky #f
                   :use-camera-other #f
                   :continues '()
                   :tasks '()
                   :priority 100
                   :load-commands '()
                   :alt-load-commands '()
                   :bsp-mask #xffffffffffffffff
                   :buttom-height (meters -20)
                   :run-packages '("common")
                   :wait-for-load #f
                   :login-func #f
                   :activate-func 'city-race-borrow-level-activate
                   :deactivate-func #f
                   :kill-func #f
                   :borrow-level (new 'static 'array symbol 2 #f #f)
                   :borrow-display? (new 'static 'array symbol 2 #f #f)
                   :texture-anim-tfrag #f
                   :texture-anim-pris #f
                   :texture-anim-shrub #f
                   :texture-anim-alpha #f
                   :texture-anim-water #f
                   :texture-anim-twarp #f
                   :texture-anim-pris2 #f
                   :texture-anim-sprite #f
                   :texture-anim-map #f
                   :texture-anim-sky #f
                   :draw-priority 10.0
                   :fog-height 327680.0
                   :bigmap-id (bigmap-id bigmap-id-20)
                   :ocean-near-translucent? #t
                   :ocean-far? #f
                   :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                   :max-rain 1.0
                   :fog-mult 1.0
                   :ocean-alpha 1.0
                   :extra-sound-bank #f
                   )
        )

(define lbombbot (new 'static 'level-load-info
                   :index #x78
                   :task-level #x1
                   :name 'lbombbot
                   :visname 'lbombbot-vis
                   :nickname 'lbombbot
                   :dbname 'lbombbot
                   :taskname 'city
                   :packages '(bombbotp)
                   :memory-mode (load-buffer-mode borrow)
                   :music-bank #f
                   :ambient-sounds '()
                   :mood-func 'update-mood-copy-ctywide
                   :mood-init #f
                   :ocean #f
                   :sky #f
                   :use-camera-other #f
                   :continues '()
                   :tasks '()
                   :priority 100
                   :load-commands '()
                   :alt-load-commands '()
                   :bsp-mask #xffffffffffffffff
                   :buttom-height (meters -20)
                   :run-packages '("common")
                   :wait-for-load #f
                   :login-func #f
                   :activate-func #f
                   :deactivate-func #f
                   :kill-func #f
                   :borrow-level (new 'static 'array symbol 2 #f #f)
                   :borrow-display? (new 'static 'array symbol 2 #f #f)
                   :texture-anim-tfrag #f
                   :texture-anim-pris #f
                   :texture-anim-shrub #f
                   :texture-anim-alpha #f
                   :texture-anim-water #f
                   :texture-anim-twarp #f
                   :texture-anim-pris2 #f
                   :texture-anim-sprite #f
                   :texture-anim-map #f
                   :texture-anim-sky #f
                   :draw-priority 10.0
                   :fog-height 327680.0
                   :bigmap-id (bigmap-id bigmap-id-20)
                   :ocean-near-translucent? #t
                   :ocean-far? #f
                   :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                   :max-rain 1.0
                   :fog-mult 1.0
                   :ocean-alpha 1.0
                   :extra-sound-bank '((ctywide3 bombbot1))
                   )
        )

(define lbbush (new 'static 'level-load-info
                 :index #x79
                 :task-level #x1
                 :name 'lbbush
                 :visname 'lbbush-vis
                 :nickname 'lbbush
                 :dbname 'lbbush
                 :taskname 'city
                 :packages '(bbushp)
                 :memory-mode (load-buffer-mode borrow)
                 :music-bank #f
                 :ambient-sounds '()
                 :mood-func 'update-mood-copy-ctywide
                 :mood-init #f
                 :ocean #f
                 :sky #f
                 :use-camera-other #f
                 :continues '()
                 :tasks '()
                 :priority 100
                 :load-commands '()
                 :alt-load-commands '()
                 :bsp-mask #xffffffffffffffff
                 :buttom-height (meters -20)
                 :run-packages '("common")
                 :wait-for-load #f
                 :login-func #f
                 :activate-func #f
                 :deactivate-func #f
                 :kill-func #f
                 :borrow-level (new 'static 'array symbol 2 #f #f)
                 :borrow-display? (new 'static 'array symbol 2 #f #f)
                 :texture-anim-tfrag #f
                 :texture-anim-pris #f
                 :texture-anim-shrub #f
                 :texture-anim-alpha #f
                 :texture-anim-water #f
                 :texture-anim-twarp #f
                 :texture-anim-pris2 #f
                 :texture-anim-sprite #f
                 :texture-anim-map #f
                 :texture-anim-sky #f
                 :draw-priority 10.0
                 :fog-height 327680.0
                 :bigmap-id (bigmap-id bigmap-id-20)
                 :ocean-near-translucent? #t
                 :ocean-far? #f
                 :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                 :max-rain 1.0
                 :fog-mult 1.0
                 :ocean-alpha 1.0
                 :extra-sound-bank '((ctywide3 bbush1))
                 )
        )

(define lprotect (new 'static 'level-load-info
                   :index #x7a
                   :task-level #x1
                   :name 'lprotect
                   :visname 'lprotect-vis
                   :nickname 'lprotect
                   :dbname 'lprotect
                   :taskname 'city
                   :packages '(gun-buoyp protectp)
                   :memory-mode (load-buffer-mode borrow)
                   :music-bank #f
                   :ambient-sounds '()
                   :mood-func 'update-mood-copy-ctywide
                   :mood-init #f
                   :ocean #f
                   :sky #f
                   :use-camera-other #f
                   :continues '()
                   :tasks '()
                   :priority 100
                   :load-commands '()
                   :alt-load-commands '()
                   :bsp-mask #xffffffffffffffff
                   :buttom-height (meters -20)
                   :run-packages '("common")
                   :wait-for-load #f
                   :login-func #f
                   :activate-func #f
                   :deactivate-func #f
                   :kill-func #f
                   :borrow-level (new 'static 'array symbol 2 #f #f)
                   :borrow-display? (new 'static 'array symbol 2 #f #f)
                   :texture-anim-tfrag #f
                   :texture-anim-pris #f
                   :texture-anim-shrub #f
                   :texture-anim-alpha #f
                   :texture-anim-water #f
                   :texture-anim-twarp #f
                   :texture-anim-pris2 #f
                   :texture-anim-sprite #f
                   :texture-anim-map #f
                   :texture-anim-sky #f
                   :draw-priority 10.0
                   :fog-height 327680.0
                   :bigmap-id (bigmap-id bigmap-id-20)
                   :ocean-near-translucent? #t
                   :ocean-far? #f
                   :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                   :max-rain 1.0
                   :fog-mult 1.0
                   :ocean-alpha 1.0
                   :extra-sound-bank '((ctywide3 protect1))
                   )
        )

(define hiphog
  (new 'static 'level-load-info
    :index #x7b
    :task-level #x1
    :name 'hiphog
    :visname 'hiphog-vis
    :nickname 'hiphog
    :dbname 'hiphog
    :taskname 'city
    :packages '(hiphog)
    :music-bank 'city1
    :ambient-sounds '()
    :mood-func 'update-mood-hiphog
    :mood-init 'init-mood-hiphog
    :ocean #f
    :sky #f
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "hiphog-start"
        :level 'hiphog
        :trans (new 'static 'vector :x -325973.6 :y 36371.25 :z 5391642.0 :w 1.0)
        :quat (new 'static 'vector :y 0.9867 :w -0.162)
        :camera-trans (new 'static 'vector :x -301305.84 :y 51219.66 :z 5399168.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.3137 0.0 0.9495))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.2469 0.9655 -0.0816))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9168 -0.2601 -0.3029))
          )
        :on-goto #f
        :vis-nick 'hiphog
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'hiphog :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'special :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyport :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'hiphog1)
        )
      (new 'static 'continue-point
        :name "hiphog-movie"
        :level 'hiphog
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x -325973.6 :y 36371.25 :z 5391642.0 :w 1.0)
        :quat (new 'static 'vector :y 0.9867 :w -0.162)
        :camera-trans (new 'static 'vector :x -301305.84 :y 51219.66 :z 5399168.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.3137 0.0 0.9495))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.2469 0.9655 -0.0816))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9168 -0.2601 -0.3029))
          )
        :on-goto #f
        :vis-nick 'hiphog
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'hiphog :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyport :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'hiphog1)
        )
      (new 'static 'continue-point
        :name "hiphog-movie-all"
        :level 'hiphog
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x -325973.6 :y 36371.25 :z 5391642.0 :w 1.0)
        :quat (new 'static 'vector :y 0.9867 :w -0.162)
        :camera-trans (new 'static 'vector :x -301305.84 :y 51219.66 :z 5399168.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.3137 0.0 0.9495))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.2469 0.9655 -0.0816))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9168 -0.2601 -0.3029))
          )
        :on-goto #f
        :vis-nick 'hiphog
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'hiphog :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyport :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'hiphog1)
        )
      (new 'static 'continue-point
        :name "hiphog-demo"
        :level 'hiphog
        :flags (continue-flags change-continue)
        :trans (new 'static 'vector :x -325973.6 :y 36371.25 :z 5391642.0 :w 1.0)
        :quat (new 'static 'vector :y 0.9867 :w -0.162)
        :camera-trans (new 'static 'vector :x -301305.84 :y 51219.66 :z 5399168.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.3137 0.0 0.9495))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.2469 0.9655 -0.0816))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9168 -0.2601 -0.3029))
          )
        :on-goto #f
        :vis-nick 'hiphog
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'hiphog :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'demo :display? 'special :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'demo1)
        )
      (new 'static 'continue-point
        :name "hiphog-demo-end"
        :level 'hiphog
        :flags (continue-flags change-continue demo-end)
        :trans (new 'static 'vector :x 2284730.0 :y 8799.847 :z -3431194.2 :w 1.0)
        :quat (new 'static 'vector :y 0.9929 :w -0.1181)
        :camera-trans (new 'static 'vector :x 2282735.5 :y 26317.62 :z -3393441.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9986 0.0 -0.0516))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0082 0.9871 -0.1595))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0509 -0.1597 -0.9858))
          )
        :on-goto #f
        :vis-nick 'demo
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'demo :display? 'special :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'atollext :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'atoll1 'atoll2 'ctywide1)
        )
      (new 'static 'continue-point
        :name "hiphog-outro"
        :level 'hiphog
        :flags (continue-flags scene-wait change-continue)
        :trans (new 'static 'vector :x -325973.6 :y 36371.25 :z 5391642.0 :w 1.0)
        :quat (new 'static 'vector :y 0.9867 :w -0.162)
        :camera-trans (new 'static 'vector :x -301305.84 :y 51219.66 :z 5399168.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.3137 0.0 0.9495))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.2469 0.9655 -0.0816))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9168 -0.2601 -0.3029))
          )
        :on-goto #f
        :vis-nick 'hiphog
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'outrocst :display? 'special :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'hiphog :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'hiphog1)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -15)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func 'hiphog-activate
    :deactivate-func #f
    :kill-func #f
    :borrow-size (new 'static 'array uint16 2 #x82a #x0)
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :base-task-mask (task-mask task0)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-20)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define ltess (new 'static 'level-load-info
                :index #x7c
                :task-level #x1
                :name 'ltess
                :visname 'ltess-vis
                :nickname 'ltess
                :dbname 'ltess
                :taskname 'city
                :packages '()
                :memory-mode (load-buffer-mode borrow)
                :music-bank #f
                :ambient-sounds '()
                :mood-func 'update-mood-copy-hiphog
                :mood-init #f
                :ocean #f
                :sky #f
                :use-camera-other #f
                :continues '()
                :tasks '()
                :priority 100
                :load-commands '()
                :alt-load-commands '()
                :bsp-mask #xffffffffffffffff
                :buttom-height (meters -20)
                :run-packages '("common")
                :wait-for-load #f
                :login-func #f
                :activate-func #f
                :deactivate-func #f
                :kill-func #f
                :borrow-level (new 'static 'array symbol 2 #f #f)
                :borrow-display? (new 'static 'array symbol 2 #f #f)
                :texture-anim-tfrag #f
                :texture-anim-pris #f
                :texture-anim-shrub #f
                :texture-anim-alpha #f
                :texture-anim-water #f
                :texture-anim-twarp #f
                :texture-anim-pris2 #f
                :texture-anim-sprite #f
                :texture-anim-map #f
                :texture-anim-sky #f
                :draw-priority 10.0
                :fog-height 327680.0
                :bigmap-id (bigmap-id bigmap-id-20)
                :ocean-near-translucent? #t
                :ocean-far? #f
                :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                :max-rain 1.0
                :fog-mult 1.0
                :ocean-alpha 1.0
                :extra-sound-bank #f
                )
        )

(define lhipout (new 'static 'level-load-info
                  :index #x7d
                  :task-level #x1
                  :name 'lhipout
                  :visname 'lhipout-vis
                  :nickname 'lhipout
                  :dbname 'lhipout
                  :taskname 'city
                  :packages '(whackp)
                  :memory-mode (load-buffer-mode borrow)
                  :music-bank #f
                  :ambient-sounds '()
                  :mood-func 'update-mood-copy-hiphog
                  :mood-init #f
                  :ocean #f
                  :sky #f
                  :use-camera-other #f
                  :continues '()
                  :tasks '()
                  :priority 100
                  :load-commands '()
                  :alt-load-commands '()
                  :bsp-mask #xffffffffffffffff
                  :buttom-height (meters -20)
                  :run-packages '("common")
                  :wait-for-load #f
                  :login-func #f
                  :activate-func #f
                  :deactivate-func #f
                  :kill-func #f
                  :borrow-level (new 'static 'array symbol 2 #f #f)
                  :borrow-display? (new 'static 'array symbol 2 #f #f)
                  :texture-anim-tfrag #f
                  :texture-anim-pris #f
                  :texture-anim-shrub #f
                  :texture-anim-alpha #f
                  :texture-anim-water #f
                  :texture-anim-twarp #f
                  :texture-anim-pris2 #f
                  :texture-anim-sprite #f
                  :texture-anim-map #f
                  :texture-anim-sky #f
                  :draw-priority 10.0
                  :fog-height 327680.0
                  :bigmap-id (bigmap-id bigmap-id-20)
                  :ocean-near-translucent? #t
                  :ocean-far? #f
                  :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                  :max-rain 1.0
                  :fog-mult 1.0
                  :ocean-alpha 1.0
                  :extra-sound-bank #f
                  )
        )

(define lwhack (new 'static 'level-load-info
                 :index #x7e
                 :task-level #x1
                 :name 'lwhack
                 :visname 'lwhack-vis
                 :nickname 'lwhack
                 :dbname 'lwhack
                 :taskname 'city
                 :packages '(whackp)
                 :memory-mode (load-buffer-mode borrow)
                 :music-bank #f
                 :ambient-sounds '()
                 :mood-func 'update-mood-copy-hiphog
                 :mood-init #f
                 :ocean #f
                 :sky #f
                 :use-camera-other #f
                 :continues '()
                 :tasks '()
                 :priority 100
                 :load-commands '()
                 :alt-load-commands '()
                 :bsp-mask #xffffffffffffffff
                 :buttom-height (meters -20)
                 :run-packages '("common")
                 :wait-for-load #f
                 :login-func #f
                 :activate-func #f
                 :deactivate-func #f
                 :kill-func #f
                 :borrow-level (new 'static 'array symbol 2 #f #f)
                 :borrow-display? (new 'static 'array symbol 2 #f #f)
                 :texture-anim-tfrag #f
                 :texture-anim-pris #f
                 :texture-anim-shrub #f
                 :texture-anim-alpha #f
                 :texture-anim-water #f
                 :texture-anim-twarp #f
                 :texture-anim-pris2 #f
                 :texture-anim-sprite #f
                 :texture-anim-map #f
                 :texture-anim-sky #f
                 :draw-priority 10.0
                 :fog-height 327680.0
                 :bigmap-id (bigmap-id bigmap-id-20)
                 :ocean-near-translucent? #t
                 :ocean-far? #f
                 :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                 :max-rain 1.0
                 :fog-mult 1.0
                 :ocean-alpha 1.0
                 :extra-sound-bank #f
                 )
        )

(define lguard (new 'static 'level-load-info
                 :index #x7f
                 :task-level #x1
                 :name 'lguard
                 :visname 'lguard-vis
                 :nickname 'lguard
                 :dbname 'lguard
                 :taskname 'city
                 :packages '()
                 :memory-mode (load-buffer-mode borrow)
                 :music-bank #f
                 :ambient-sounds '()
                 :mood-func 'update-mood-copy-hiphog
                 :mood-init #f
                 :ocean #f
                 :sky #f
                 :use-camera-other #f
                 :continues '()
                 :tasks '()
                 :priority 100
                 :load-commands '()
                 :alt-load-commands '()
                 :bsp-mask #xffffffffffffffff
                 :buttom-height (meters -20)
                 :run-packages '("common")
                 :wait-for-load #f
                 :login-func #f
                 :activate-func #f
                 :deactivate-func #f
                 :kill-func #f
                 :borrow-level (new 'static 'array symbol 2 #f #f)
                 :borrow-display? (new 'static 'array symbol 2 #f #f)
                 :texture-anim-tfrag #f
                 :texture-anim-pris #f
                 :texture-anim-shrub #f
                 :texture-anim-alpha #f
                 :texture-anim-water #f
                 :texture-anim-twarp #f
                 :texture-anim-pris2 #f
                 :texture-anim-sprite #f
                 :texture-anim-map #f
                 :texture-anim-sky #f
                 :draw-priority 10.0
                 :fog-height 327680.0
                 :bigmap-id (bigmap-id bigmap-id-20)
                 :ocean-near-translucent? #t
                 :ocean-far? #f
                 :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                 :max-rain 1.0
                 :fog-mult 1.0
                 :ocean-alpha 1.0
                 :extra-sound-bank #f
                 )
        )

(define lcguard (new 'static 'level-load-info
                  :index #x80
                  :task-level #x1
                  :name 'lcguard
                  :visname 'lcguard-vis
                  :nickname 'lcguard
                  :dbname 'lcguard
                  :taskname 'city
                  :packages '()
                  :memory-mode (load-buffer-mode borrow)
                  :music-bank #f
                  :ambient-sounds '()
                  :mood-func 'update-mood-copy-ctywide
                  :mood-init #f
                  :ocean #f
                  :sky #f
                  :use-camera-other #f
                  :continues '()
                  :tasks '()
                  :priority 100
                  :load-commands '()
                  :alt-load-commands '()
                  :bsp-mask #xffffffffffffffff
                  :buttom-height (meters -20)
                  :run-packages '("common")
                  :wait-for-load #f
                  :login-func #f
                  :activate-func #f
                  :deactivate-func #f
                  :kill-func #f
                  :borrow-level (new 'static 'array symbol 2 #f #f)
                  :borrow-display? (new 'static 'array symbol 2 #f #f)
                  :texture-anim-tfrag #f
                  :texture-anim-pris #f
                  :texture-anim-shrub #f
                  :texture-anim-alpha #f
                  :texture-anim-water #f
                  :texture-anim-twarp #f
                  :texture-anim-pris2 #f
                  :texture-anim-sprite #f
                  :texture-anim-map #f
                  :texture-anim-sky #f
                  :draw-priority 10.0
                  :fog-height 327680.0
                  :bigmap-id (bigmap-id bigmap-id-20)
                  :ocean-near-translucent? #t
                  :ocean-far? #f
                  :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                  :max-rain 1.0
                  :fog-mult 1.0
                  :ocean-alpha 1.0
                  :extra-sound-bank #f
                  )
        )

(define lerltess (new 'static 'level-load-info
                   :index #x81
                   :task-level #x1
                   :name 'lerltess
                   :visname 'lerltess-vis
                   :nickname 'lerltess
                   :dbname 'lerltess
                   :taskname 'city
                   :packages '()
                   :memory-mode (load-buffer-mode borrow)
                   :music-bank #f
                   :ambient-sounds '()
                   :mood-func 'update-mood-copy-hiphog
                   :mood-init #f
                   :ocean #f
                   :sky #f
                   :use-camera-other #f
                   :continues '()
                   :tasks '()
                   :priority 100
                   :load-commands '()
                   :alt-load-commands '()
                   :bsp-mask #xffffffffffffffff
                   :buttom-height (meters -20)
                   :run-packages '("common")
                   :wait-for-load #f
                   :login-func #f
                   :activate-func #f
                   :deactivate-func #f
                   :kill-func #f
                   :borrow-level (new 'static 'array symbol 2 #f #f)
                   :borrow-display? (new 'static 'array symbol 2 #f #f)
                   :texture-anim-tfrag #f
                   :texture-anim-pris #f
                   :texture-anim-shrub #f
                   :texture-anim-alpha #f
                   :texture-anim-water #f
                   :texture-anim-twarp #f
                   :texture-anim-pris2 #f
                   :texture-anim-sprite #f
                   :texture-anim-map #f
                   :texture-anim-sky #f
                   :draw-priority 10.0
                   :fog-height 327680.0
                   :bigmap-id (bigmap-id bigmap-id-20)
                   :ocean-near-translucent? #t
                   :ocean-far? #f
                   :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                   :max-rain 1.0
                   :fog-mult 1.0
                   :ocean-alpha 1.0
                   :extra-sound-bank #f
                   )
        )

(define gungame
  (new 'static 'level-load-info
    :index #x82
    :task-level #x1
    :name 'gungame
    :visname 'gungame-vis
    :nickname 'gga
    :dbname 'gungame
    :taskname 'city
    :packages '(gungame)
    :music-bank 'gungame
    :ambient-sounds '()
    :mood-func 'update-mood-gungame
    :mood-init #f
    :ocean #f
    :sky #f
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "gungame-start"
        :level 'gungame
        :flags (continue-flags test)
        :trans (new 'static 'vector :x 1797717.2 :y 34816.0 :z 5337087.0 :w 1.0)
        :quat (new 'static 'vector :y -0.9956 :w 0.0932)
        :camera-trans (new 'static 'vector :x 1807258.4 :y 55836.67 :z 5378828.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9756 0.0 0.2193))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0387 0.9843 -0.1721))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.2158 -0.1764 -0.9603))
          )
        :on-goto #f
        :vis-nick 'gungame
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'gungame :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyport :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'gungame1)
        )
      (new 'static 'continue-point
        :name "gungame-movie"
        :level 'gungame
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 1797717.2 :y 34816.0 :z 5337087.0 :w 1.0)
        :quat (new 'static 'vector :y -0.9956 :w 0.0932)
        :camera-trans (new 'static 'vector :x 1807258.4 :y 55836.67 :z 5378828.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9756 0.0 0.2193))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0387 0.9843 -0.1721))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.2158 -0.1764 -0.9603))
          )
        :on-goto #f
        :vis-nick 'gungame
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'gungame :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'special :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyport :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'ctywide1 'ctywide2 'gungame1)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -15)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-20)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define dig1
  (new 'static 'level-load-info
    :index #x83
    :task-level #xd
    :name 'dig1
    :visname 'dig1-vis
    :nickname 'dg1
    :dbname 'dig1
    :taskname 'dig
    :packages '(guardp dig)
    :memory-mode (load-buffer-mode large)
    :music-bank 'dig
    :ambient-sounds '()
    :sound-reverb 0.2
    :mood-func 'update-mood-dig1
    :mood-init 'init-mood-dig1
    :ocean #f
    :sky #f
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "dig1-start"
        :level 'dig1
        :flags (continue-flags test)
        :trans (new 'static 'vector :x 1759030.1 :y -244842.1 :z -7407948.5 :w 1.0)
        :quat (new 'static 'vector :y 0.8886 :w -0.4586)
        :camera-trans (new 'static 'vector :x 1799911.9 :y -223814.86 :z -7395168.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.2993 0.0 0.9541))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.169 0.9841 -0.053))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.939 -0.1771 -0.2946))
          )
        :on-goto '(begin (kill "crimson-guard-level-198" store #f) (kill "crimson-guard-level-199" store #f))
        :vis-nick 'dig1
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'dig1 :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'caspad :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'dig1 'dig2 'dig3)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -200)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :base-task-mask (task-mask task0)
    :texture-anim-tfrag '*lava-texture-anim-array*
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-3)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define dig3a
  (new 'static 'level-load-info
    :index #x84
    :task-level #xd
    :name 'dig3a
    :visname 'dig3a-vis
    :nickname 'd3a
    :dbname 'dig3a
    :taskname 'dig
    :packages '(hoverp dig)
    :memory-mode (load-buffer-mode large)
    :music-bank 'dig
    :ambient-sounds '()
    :sound-reverb 0.2
    :mood-func 'update-mood-dig1
    :mood-init 'init-mood-dig1
    :ocean #f
    :sky #f
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "dig3-start"
        :level 'dig3a
        :trans (new 'static 'vector :x 1759030.1 :y -244842.1 :z -7407948.5 :w 1.0)
        :quat (new 'static 'vector :y 0.8886 :w -0.4586)
        :camera-trans (new 'static 'vector :x 1799911.9 :y -223814.86 :z -7395168.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.2993 0.0 0.9541))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.169 0.9841 -0.053))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.939 -0.1771 -0.2946))
          )
        :on-goto '(begin
           (kill "flitter-255" store #f)
           (kill "flitter-256" store #f)
           (kill "flitter-257" store #f)
           (kill "flitter-258" store #f)
           (kill "flitter-259" store #f)
           )
        :vis-nick 'dig3a
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'dig3a :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'caspad :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'dig6 'dig7 'dig8)
        )
      (new 'static 'continue-point
        :name "dig-totem"
        :level 'dig3a
        :flags (continue-flags no-auto test)
        :trans (new 'static 'vector :x 772547.8 :y -57348.098 :z -7644002.5 :w 1.0)
        :quat (new 'static 'vector :y -0.4492 :w 0.8934)
        :camera-trans (new 'static 'vector :x 788845.4 :y -36243.867 :z -7683787.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.924 0.0 0.3823))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0676 0.9842 0.1635))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.3763 -0.1769 0.9094))
          )
        :on-goto #f
        :vis-nick 'dig3a
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'dig3a :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'dig3b :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'dig6 'dig7 'dig8)
        )
      (new 'static 'continue-point
        :name "dig3b-start"
        :level 'dig3a
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 1150306.2 :y -217773.67 :z -8811749.0 :w 1.0)
        :quat (new 'static 'vector :y 0.7541 :w -0.6566)
        :camera-trans (new 'static 'vector :x 1192340.6 :y -196685.0 :z -8802656.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.2109 0.0 0.9775))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1712 0.9845 -0.0369))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9623 -0.1751 -0.2076))
          )
        :on-goto #f
        :vis-nick 'dig3b
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'dig3a :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'dig3b :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'dig6 'dig7 'dig8)
        )
      (new 'static 'continue-point
        :name "dig3b-back-room"
        :level 'dig3a
        :trans (new 'static 'vector :x 1406619.2 :y -303026.2 :z -8176758.5 :w 1.0)
        :quat (new 'static 'vector :y 0.9223 :w -0.3864)
        :camera-trans (new 'static 'vector :x 1434400.8 :y -281924.0 :z -8143880.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.7632 0.0 0.6461))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1136 0.9844 -0.1341))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.636 -0.1758 -0.7513))
          )
        :on-goto '(begin (kill "flitter-244" store #f) (kill "flitter-245" store #f))
        :vis-nick 'dig3b
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'dig3a :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'dig3b :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'dig6 'dig7 'dig8)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -200)
    :run-packages '("common")
    :wait-for-load #t
    :login-func 'dig3-login
    :activate-func 'dig3-activate
    :deactivate-func 'dig3-deactivate
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :base-task-mask (task-mask task0)
    :texture-anim-tfrag '*lava-texture-anim-array*
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-4)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define dig3b (new 'static 'level-load-info
                :index #x85
                :task-level #xd
                :name 'dig3b
                :visname 'dig3b-vis
                :nickname 'd3b
                :dbname 'dig3b
                :taskname 'dig
                :packages '()
                :music-bank 'dig
                :ambient-sounds '()
                :mood-func 'update-mood-dig1
                :mood-init 'init-mood-dig1
                :ocean #f
                :sky #f
                :use-camera-other #f
                :continues '()
                :tasks '()
                :priority 100
                :load-commands '()
                :alt-load-commands '()
                :bsp-mask #xffffffffffffffff
                :buttom-height (meters -200)
                :run-packages '("common")
                :wait-for-load #t
                :login-func #f
                :activate-func #f
                :deactivate-func #f
                :kill-func #f
                :borrow-level (new 'static 'array symbol 2 #f #f)
                :borrow-display? (new 'static 'array symbol 2 #f #f)
                :base-task-mask (task-mask task0)
                :texture-anim-tfrag '*lava-b-texture-anim-array*
                :texture-anim-pris #f
                :texture-anim-shrub #f
                :texture-anim-alpha #f
                :texture-anim-water #f
                :texture-anim-twarp #f
                :texture-anim-pris2 #f
                :texture-anim-sprite #f
                :texture-anim-map #f
                :texture-anim-sky #f
                :draw-priority 10.0
                :fog-height 327680.0
                :bigmap-id (bigmap-id bigmap-id-4)
                :ocean-near-translucent? #t
                :ocean-far? #f
                :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                :fog-mult 1.0
                :ocean-alpha 1.0
                :extra-sound-bank #f
                )
        )

(define caspad
  (new 'static 'level-load-info
    :index #x86
    :task-level #xe
    :name 'caspad
    :visname 'caspad-vis
    :nickname 'cap
    :dbname 'caspad
    :taskname 'castle
    :packages '(caspad)
    :music-bank #f
    :ambient-sounds '()
    :mood-func 'update-mood-caspad
    :mood-init #f
    :ocean #f
    :sky #t
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "caspad-start"
        :level 'caspad
        :trans (new 'static 'vector :x 1173561.4 :y 81917.13 :z -6861326.0 :w 1.0)
        :quat (new 'static 'vector :y 0.9645 :w -0.2637)
        :camera-trans (new 'static 'vector :x 1216548.0 :y 103011.53 :z -6859337.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0855 0.0 0.9963))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1752 0.9844 -0.015))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9807 -0.1759 -0.0842))
          )
        :on-goto #f
        :vis-nick 'caspad
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'caspad :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'castle1 'castle2 'castle3)
        )
      (new 'static 'continue-point
        :name "caspad-warp"
        :level 'caspad
        :flags (continue-flags scene-wait no-auto)
        :trans (new 'static 'vector :x 1152265.0 :y 114685.13 :z -6746448.5 :w 1.0)
        :quat (new 'static 'vector :y 0.9282 :w 0.3719)
        :camera-trans (new 'static 'vector :x 1121375.9 :y 135779.12 :z -6705579.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.7972 0.0 -0.6036))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0733 0.9925 -0.0968))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.5992 -0.1214 -0.7913))
          )
        :on-goto '(send-event "cpad-elevator-1" 'jump-to 'top)
        :vis-nick 'caspad
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'caspad :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyport :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'castle1 'castle2 'castle3)
        )
      (new 'static 'continue-point
        :name "caspad-face-castle"
        :level 'caspad
        :flags (continue-flags scene-wait no-auto)
        :trans (new 'static 'vector :x 1103312.9 :y 114685.13 :z -6718415.5 :w 1.0)
        :quat (new 'static 'vector :y 0.7686 :w -0.6396)
        :camera-trans (new 'static 'vector :x 1153423.8 :y 135779.12 :z -6707907.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.2059 0.0 0.9785))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1191 0.9925 -0.025))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9712 -0.1217 -0.2044))
          )
        :on-goto '(send-event "cpad-elevator-1" 'jump-to 'top)
        :vis-nick 'caspad
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'caspad :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctyport :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'castle1 'castle2 'castle3)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -100)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :base-task-mask (task-mask task0)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-1)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :max-rain 1.0
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define castle
  (new 'static 'level-load-info
    :index #x87
    :task-level #xe
    :name 'castle
    :visname 'castle-vis
    :nickname 'cas
    :dbname 'castle
    :taskname 'castle
    :packages '(guardp castle)
    :memory-mode (load-buffer-mode large)
    :music-bank 'palcab
    :ambient-sounds '()
    :mood-func 'update-mood-castle
    :mood-init 'init-mood-castle
    :ocean #f
    :sky #f
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "castle-start"
        :level 'castle
        :flags (continue-flags test)
        :trans (new 'static 'vector :x 21039.924 :y 229371.9 :z -6893704.5 :w 1.0)
        :quat (new 'static 'vector :y 0.8039 :w -0.5946)
        :camera-trans (new 'static 'vector :x 72232.96 :y 250453.2 :z -6894464.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0151 0.0 0.9998))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1207 0.9926 0.0018))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9925 -0.1207 0.015))
          )
        :on-goto #f
        :vis-nick 'castle
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'castle :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'castle1 'castle2 'castle3)
        )
      (new 'static 'continue-point
        :name "castle-midpoint"
        :level 'castle
        :trans (new 'static 'vector :x -536164.75 :y 196603.5 :z -6979012.0 :w 1.0)
        :quat (new 'static 'vector :y -0.7785 :w 0.6275)
        :camera-trans (new 'static 'vector :x -530788.4 :y 217697.89 :z -7021644.0 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9722 0.0 0.2338))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0418 0.9838 0.1739))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.23 -0.1789 0.9565))
          )
        :on-goto #f
        :vis-nick 'castle
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'castle :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'castle1 'castle2 'castle3)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -100)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :base-task-mask (task-mask task0)
    :texture-anim-tfrag '*cas-conveyor-texture-anim-array*
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha '*toxic-slime-texture-anim-array*
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-2)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define casboss
  (new 'static 'level-load-info
    :index #x88
    :task-level #xe
    :name 'casboss
    :visname 'casboss-vis
    :nickname 'cab
    :dbname 'casboss
    :taskname 'castle
    :packages '(casboss)
    :music-bank 'palcab
    :ambient-sounds '()
    :mood-func 'update-mood-casboss
    :mood-init #f
    :ocean '*ocean-map-city*
    :sky #t
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "casboss-start"
        :level 'casboss
        :flags (continue-flags test)
        :trans (new 'static 'vector :x -1351936.0 :y 1454352.4 :z -6874412.0 :w 1.0)
        :quat (new 'static 'vector :y -0.7631 :w -0.6462)
        :camera-trans (new 'static 'vector :x -1403063.9 :y 1475443.1 :z -6877073.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0508 0.0 -0.9987))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1215 0.9925 0.0061))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9912 -0.1217 0.0504))
          )
        :on-goto #f
        :vis-nick 'casboss
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'casboss :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'cascity :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'casext :display? 'special :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'casboss1 'casboss2 'casboss3)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters 250)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func 'casboss-activate
    :deactivate-func 'casboss-deactivate
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :base-task-mask (task-mask task0)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water '*krew-holo-texture-anim-array*
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-20)
    :ocean-near-translucent? #t
    :ocean-far? #t
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :max-rain 1.0
    :fog-mult 5.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define casext (new 'static 'level-load-info
                 :index #x89
                 :task-level #xe
                 :name 'casext
                 :visname 'casext-vis
                 :nickname 'casext
                 :dbname 'casext
                 :taskname 'castle
                 :packages '()
                 :music-bank #f
                 :ambient-sounds '()
                 :mood-func 'update-mood-casboss
                 :mood-init #f
                 :ocean #f
                 :sky #t
                 :use-camera-other #f
                 :continues '()
                 :tasks '()
                 :priority 100
                 :load-commands '()
                 :alt-load-commands '()
                 :bsp-mask #xffffffffffffffff
                 :buttom-height (meters -20)
                 :run-packages '("common")
                 :wait-for-load #t
                 :login-func #f
                 :activate-func #f
                 :deactivate-func #f
                 :kill-func #f
                 :borrow-level (new 'static 'array symbol 2 #f #f)
                 :borrow-display? (new 'static 'array symbol 2 #f #f)
                 :base-task-mask (task-mask task0)
                 :texture-anim-tfrag #f
                 :texture-anim-pris #f
                 :texture-anim-shrub #f
                 :texture-anim-alpha #f
                 :texture-anim-water #f
                 :texture-anim-twarp #f
                 :texture-anim-pris2 #f
                 :texture-anim-sprite #f
                 :texture-anim-map #f
                 :texture-anim-sky #f
                 :draw-priority 10.0
                 :fog-height 327680.0
                 :bigmap-id (bigmap-id bigmap-id-2)
                 :ocean-near-translucent? #t
                 :ocean-far? #f
                 :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                 :max-rain 1.0
                 :fog-mult 1.0
                 :ocean-alpha 1.0
                 :extra-sound-bank #f
                 )
        )

(define cascity (new 'static 'level-load-info
                  :index #x8a
                  :task-level #xe
                  :name 'cascity
                  :visname 'cascity-vis
                  :nickname 'cascity
                  :dbname 'cascity
                  :taskname 'castle
                  :packages '()
                  :memory-mode (load-buffer-mode small-center)
                  :music-bank #f
                  :ambient-sounds '()
                  :mood-func 'update-mood-ctywide
                  :mood-init #f
                  :ocean #f
                  :sky #t
                  :use-camera-other #f
                  :continues '()
                  :tasks '()
                  :priority 100
                  :load-commands '()
                  :alt-load-commands '()
                  :bsp-mask #xffffffffffffffff
                  :buttom-height (meters -20)
                  :run-packages '("common")
                  :wait-for-load #t
                  :login-func #f
                  :activate-func #f
                  :deactivate-func #f
                  :kill-func #f
                  :borrow-level (new 'static 'array symbol 2 #f #f)
                  :borrow-display? (new 'static 'array symbol 2 #f #f)
                  :base-task-mask (task-mask task0)
                  :texture-anim-tfrag #f
                  :texture-anim-pris #f
                  :texture-anim-shrub #f
                  :texture-anim-alpha #f
                  :texture-anim-water #f
                  :texture-anim-twarp #f
                  :texture-anim-pris2 #f
                  :texture-anim-sprite #f
                  :texture-anim-map #f
                  :texture-anim-sky #f
                  :draw-priority 10.0
                  :fog-height 327680.0
                  :bigmap-id (bigmap-id bigmap-id-2)
                  :ocean-near-translucent? #t
                  :ocean-far? #f
                  :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                  :max-rain 1.0
                  :fog-mult 1.0
                  :ocean-alpha 1.0
                  :extra-sound-bank #f
                  )
        )

(define village1
  (new 'static 'level-load-info
    :index #x8b
    :name 'village1
    :visname 'village1-vis
    :nickname 'vi1
    :dbname 'village1
    :taskname 'default
    :packages '()
    :memory-mode (load-buffer-mode large)
    :music-bank #f
    :ambient-sounds '()
    :mood-func 'update-mood-village1
    :mood-init 'init-mood-village1
    :ocean '*ocean-map-village1*
    :sky #t
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "village1-start"
        :level 'village1
        :flags (continue-flags scene-wait test)
        :trans (new 'static 'vector :x -687440.7 :y 154998.38 :z 752476.2 :w 1.0)
        :quat (new 'static 'vector :y 0.8595 :w 0.511)
        :camera-trans (new 'static 'vector :x -724766.3 :y 176109.56 :z 773868.75 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.4882 0.0 -0.8726))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1537 0.9843 -0.086))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.859 -0.1762 -0.4806))
          )
        :on-goto #f
        :vis-nick 'village1
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'introcst :display? 'special :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'village1 :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 #f #f #f)
        )
      (new 'static 'continue-point
        :name "intro-start"
        :level 'village1
        :flags (continue-flags scene-wait intro)
        :trans (new 'static 'vector :x -687440.7 :y 154998.38 :z 752476.2 :w 1.0)
        :quat (new 'static 'vector :y 0.8595 :w 0.511)
        :camera-trans (new 'static 'vector :x -724766.3 :y 176109.56 :z 773868.75 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.4882 0.0 -0.8726))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1537 0.9843 -0.086))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.859 -0.1762 -0.4806))
          )
        :on-goto #f
        :vis-nick 'village1
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'introcst :display? 'special :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'village1 :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 #f #f #f)
        )
      (new 'static 'continue-point
        :name "intro-start-hero"
        :level 'village1
        :flags (continue-flags scene-wait hero-mode)
        :trans (new 'static 'vector :x -687440.7 :y 154998.38 :z 752476.2 :w 1.0)
        :quat (new 'static 'vector :y 0.8595 :w 0.511)
        :camera-trans (new 'static 'vector :x -724766.3 :y 176109.56 :z 773868.75 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.4882 0.0 -0.8726))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1537 0.9843 -0.086))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.859 -0.1762 -0.4806))
          )
        :on-goto #f
        :vis-nick 'village1
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'introcst :display? 'special :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'village1 :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 #f #f #f)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -20)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :base-task-mask (task-mask task0)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-20)
    :ocean-near-translucent? #t
    :ocean-far? #t
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :max-rain 1.0
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define introcst (new 'static 'level-load-info
                   :index #x8c
                   :name 'introcst
                   :visname 'introcst-vis
                   :nickname 'introcst
                   :dbname 'introcst
                   :taskname 'default
                   :packages '()
                   :music-bank #f
                   :ambient-sounds '()
                   :mood-func 'update-mood-copy-village1
                   :mood-init #f
                   :ocean #f
                   :sky #f
                   :use-camera-other #f
                   :continues '()
                   :tasks '()
                   :priority 100
                   :load-commands '()
                   :alt-load-commands '()
                   :bsp-mask #xffffffffffffffff
                   :buttom-height (meters -20)
                   :run-packages '("common")
                   :wait-for-load #f
                   :login-func #f
                   :activate-func #f
                   :deactivate-func #f
                   :kill-func #f
                   :borrow-size (new 'static 'array uint16 2 #xd48 #x0)
                   :borrow-level (new 'static 'array symbol 2 #f #f)
                   :borrow-display? (new 'static 'array symbol 2 #f #f)
                   :base-task-mask (task-mask task0)
                   :texture-anim-tfrag #f
                   :texture-anim-pris #f
                   :texture-anim-shrub #f
                   :texture-anim-alpha #f
                   :texture-anim-water #f
                   :texture-anim-twarp #f
                   :texture-anim-pris2 #f
                   :texture-anim-sprite #f
                   :texture-anim-map #f
                   :texture-anim-sky #f
                   :draw-priority 10.0
                   :fog-height 327680.0
                   :bigmap-id (bigmap-id bigmap-id-20)
                   :ocean-near-translucent? #t
                   :ocean-far? #f
                   :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                   :max-rain 1.0
                   :fog-mult 1.0
                   :ocean-alpha 1.0
                   :extra-sound-bank #f
                   )
        )

(define lcitylow (new 'static 'level-load-info
                   :index #x8d
                   :task-level #x1
                   :name 'lcitylow
                   :visname 'lcitylow-vis
                   :nickname 'lcitylow
                   :dbname 'lcitylow
                   :taskname 'city
                   :packages '()
                   :memory-mode (load-buffer-mode borrow)
                   :music-bank #f
                   :ambient-sounds '()
                   :mood-func 'update-mood-default
                   :mood-init #f
                   :ocean #f
                   :sky #t
                   :use-camera-other #f
                   :continues '()
                   :tasks '()
                   :priority 100
                   :load-commands '()
                   :alt-load-commands '()
                   :bsp-mask #xffffffffffffffff
                   :buttom-height (meters -20)
                   :run-packages '("common")
                   :wait-for-load #f
                   :login-func #f
                   :activate-func #f
                   :deactivate-func #f
                   :kill-func #f
                   :borrow-level (new 'static 'array symbol 2 #f #f)
                   :borrow-display? (new 'static 'array symbol 2 #f #f)
                   :base-task-mask (task-mask task0)
                   :texture-anim-tfrag #f
                   :texture-anim-pris #f
                   :texture-anim-shrub #f
                   :texture-anim-alpha #f
                   :texture-anim-water #f
                   :texture-anim-twarp #f
                   :texture-anim-pris2 #f
                   :texture-anim-sprite #f
                   :texture-anim-map #f
                   :texture-anim-sky #f
                   :draw-priority 10.0
                   :fog-height 327680.0
                   :bigmap-id (bigmap-id bigmap-id-20)
                   :ocean-near-translucent? #t
                   :ocean-far? #f
                   :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                   :max-rain 1.0
                   :fog-mult 1.0
                   :ocean-alpha 1.0
                   :extra-sound-bank #f
                   )
        )

(define lintcstb (new 'static 'level-load-info
                   :index #x8e
                   :name 'lintcstb
                   :visname 'lintcstb-vis
                   :nickname 'lintcstb
                   :dbname 'lintcstb
                   :taskname 'default
                   :packages '()
                   :memory-mode (load-buffer-mode borrow)
                   :music-bank #f
                   :ambient-sounds '()
                   :mood-func 'update-mood-copy-village1
                   :mood-init #f
                   :ocean #f
                   :sky #t
                   :use-camera-other #f
                   :continues '()
                   :tasks '()
                   :priority 100
                   :load-commands '()
                   :alt-load-commands '()
                   :bsp-mask #xffffffffffffffff
                   :buttom-height (meters -20)
                   :run-packages '("common")
                   :wait-for-load #f
                   :login-func #f
                   :activate-func #f
                   :deactivate-func #f
                   :kill-func #f
                   :borrow-level (new 'static 'array symbol 2 #f #f)
                   :borrow-display? (new 'static 'array symbol 2 #f #f)
                   :base-task-mask (task-mask task0)
                   :texture-anim-tfrag #f
                   :texture-anim-pris #f
                   :texture-anim-shrub #f
                   :texture-anim-alpha #f
                   :texture-anim-water #f
                   :texture-anim-twarp #f
                   :texture-anim-pris2 #f
                   :texture-anim-sprite #f
                   :texture-anim-map #f
                   :texture-anim-sky #f
                   :draw-priority 10.0
                   :fog-height 327680.0
                   :bigmap-id (bigmap-id bigmap-id-20)
                   :ocean-near-translucent? #t
                   :ocean-far? #f
                   :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                   :max-rain 1.0
                   :fog-mult 1.0
                   :ocean-alpha 1.0
                   :extra-sound-bank #f
                   )
        )

(define ljakdax (new 'static 'level-load-info
                  :index #x8f
                  :name 'ljakdax
                  :visname 'ljakdax-vis
                  :nickname 'ljakdax
                  :dbname 'ljakdax
                  :taskname 'default
                  :packages '()
                  :music-bank #f
                  :ambient-sounds '()
                  :mood-func 'update-mood-ctyport
                  :mood-init 'init-mood-ctyport-no-part
                  :ocean #f
                  :sky #f
                  :use-camera-other #f
                  :continues '()
                  :tasks '()
                  :priority 100
                  :load-commands '()
                  :alt-load-commands '()
                  :bsp-mask #xffffffffffffffff
                  :buttom-height (meters -20)
                  :run-packages '("common")
                  :wait-for-load #f
                  :login-func #f
                  :activate-func #f
                  :deactivate-func #f
                  :kill-func #f
                  :borrow-level (new 'static 'array symbol 2 #f #f)
                  :borrow-display? (new 'static 'array symbol 2 #f #f)
                  :base-task-mask (task-mask task0)
                  :texture-anim-tfrag #f
                  :texture-anim-pris #f
                  :texture-anim-shrub #f
                  :texture-anim-alpha #f
                  :texture-anim-water #f
                  :texture-anim-twarp #f
                  :texture-anim-pris2 #f
                  :texture-anim-sprite #f
                  :texture-anim-map #f
                  :texture-anim-sky #f
                  :draw-priority 10.0
                  :fog-height 327680.0
                  :bigmap-id (bigmap-id bigmap-id-20)
                  :ocean-near-translucent? #t
                  :ocean-far? #f
                  :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                  :max-rain 1.0
                  :fog-mult 1.0
                  :ocean-alpha 1.0
                  :extra-sound-bank #f
                  )
        )

(define nest
  (new 'static 'level-load-info
    :index #x90
    :task-level #x11
    :name 'nest
    :visname 'nest-vis
    :nickname 'nes
    :dbname 'nest
    :taskname 'nest
    :packages '(gun-buoyp nest)
    :memory-mode (load-buffer-mode medium)
    :music-bank 'strip
    :ambient-sounds '()
    :mood-func 'update-mood-nest
    :mood-init 'init-mood-nest
    :ocean '*ocean-map-nest*
    :sky #t
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "nest-start"
        :level 'nest
        :flags (continue-flags test)
        :trans (new 'static 'vector :x 15416.524 :y -4361.8306 :z -400347.97 :w 1.0)
        :quat (new 'static 'vector :y -0.9467 :w 0.322)
        :camera-trans (new 'static 'vector :x 31184.486 :y 16731.75 :z -351637.9 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9514 0.0 0.3079))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0374 0.9925 -0.1158))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.3056 -0.1217 -0.9443))
          )
        :on-goto #f
        :vis-nick 'nest
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'nest :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'nestb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'nest1 'nest2 'nest3)
        )
      (new 'static 'continue-point
        :name "nest-warp"
        :level 'nest
        :flags (continue-flags scene-wait change-continue)
        :trans (new 'static 'vector :x 52140.44 :y -4358.9634 :z -309093.16 :w 1.0)
        :quat (new 'static 'vector :y -0.0195 :w -0.9998)
        :camera-trans (new 'static 'vector :x 62153.523 :y 16219.75 :z -357362.06 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9789 0.0 0.2039))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0244 0.9927 0.1175))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.2024 -0.12 0.9719))
          )
        :on-goto #f
        :vis-nick 'nest
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'nest :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'nestb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'nest1 'nest2 'nest3)
        )
      (new 'static 'continue-point
        :name "nest-gun"
        :level 'nest
        :trans (new 'static 'vector :x -467713.22 :y 122876.73 :z -631910.4 :w 1.0)
        :quat (new 'static 'vector :y 0.0352 :w -0.9993)
        :camera-trans (new 'static 'vector :x -461033.88 :y 143970.3 :z -674393.7 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.988 0.0 0.1543))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0271 0.9843 0.1739))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1519 -0.1761 0.9725))
          )
        :on-goto #f
        :vis-nick 'nest
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'nest :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'nestb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'nest1 'nest2 'nest3)
        )
      (new 'static 'continue-point
        :name "nest-barrier"
        :level 'nest
        :flags (continue-flags change-continue)
        :trans (new 'static 'vector :x -467713.22 :y 122876.73 :z -631910.4 :w 1.0)
        :quat (new 'static 'vector :y 0.0352 :w -0.9993)
        :camera-trans (new 'static 'vector :x -461033.88 :y 143970.3 :z -674393.7 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.988 0.0 0.1543))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0271 0.9843 0.1739))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.1519 -0.1761 0.9725))
          )
        :on-goto #f
        :vis-nick 'nest
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'nest :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'nestb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'nest1 'nest2 'nest3)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -20)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func 'nest-activate
    :deactivate-func 'nest-deactivate
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :base-task-mask (task-mask task0 primary0)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-9)
    :ocean-near-translucent? #t
    :ocean-far? #t
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :max-rain 1.0
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define nestb
  (new 'static 'level-load-info
    :index #x91
    :task-level #x11
    :name 'nestb
    :visname 'nestb-vis
    :nickname 'neb
    :dbname 'nestb
    :taskname 'nest
    :packages '(hoverp nestb)
    :memory-mode (load-buffer-mode medium)
    :music-bank 'strip
    :ambient-sounds '()
    :mood-func 'update-mood-nestb
    :mood-init #f
    :ocean #f
    :sky #f
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "nestb-start"
        :level 'nestb
        :trans (new 'static 'vector :x 328095.34 :y 141232.12 :z -1315237.9 :w 1.0)
        :quat (new 'static 'vector :x -0.0005 :y 0.8541 :z 0.0013 :w 0.52)
        :camera-trans (new 'static 'vector :x 307591.16 :y 157170.89 :z -1291318.9 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.7269 0.0 -0.6866))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.053 0.997 -0.0561))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.6846 -0.0772 -0.7248))
          )
        :on-goto #f
        :vis-nick 'nestb
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'nest :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'nestb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'nest4 'nest5 'nest6)
        )
      (new 'static 'continue-point
        :name "nestb-boss"
        :level 'nestb
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 634325.0 :y 134077.23 :z -1619793.1 :w 1.0)
        :quat (new 'static 'vector :y -0.9292 :w -0.3694)
        :camera-trans (new 'static 'vector :x 606261.7 :y 153914.58 :z -1591727.8 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.7046 0.0 -0.7095))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1314 0.9826 -0.1305))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.6972 -0.1852 -0.6924))
          )
        :on-goto #f
        :vis-nick 'nestb
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'nest :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'nestb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'nest4 'nest5 'nest6)
        )
      (new 'static 'continue-point
        :name "nestb-boss-pit"
        :level 'nestb
        :flags (continue-flags no-auto)
        :trans (new 'static 'vector :x 690462.3 :y 84592.64 :z -1698655.0 :w 1.0)
        :quat (new 'static 'vector :y 0.8663 :w 0.4993)
        :camera-trans (new 'static 'vector :x 642789.8 :y 105517.47 :z -1715050.5 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0005 0.0 -0.9999))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.008 0.9999 0.0))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9999 -0.008 -0.0005))
          )
        :on-goto #f
        :vis-nick 'nestb
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'nestb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'outrocst :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'nest4 'nest5 'nest6)
        )
      (new 'static 'continue-point
        :name "nestb-outro"
        :level 'nestb
        :flags (continue-flags change-continue)
        :trans (new 'static 'vector :x 634325.0 :y 134077.23 :z -1619793.1 :w 1.0)
        :quat (new 'static 'vector :y -0.9292 :w -0.3694)
        :camera-trans (new 'static 'vector :x 606261.7 :y 153914.58 :z -1591727.8 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.7046 0.0 -0.7095))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1314 0.9826 -0.1305))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.6972 -0.1852 -0.6924))
          )
        :on-goto #f
        :vis-nick 'nestb
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'outrocst :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'nestb :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 'nest4 'nest5 'nest6)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -20)
    :run-packages '("common")
    :wait-for-load #t
    :login-func 'nestb-login
    :activate-func 'nestb-activate
    :deactivate-func 'nestb-deactivate
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :base-task-mask (task-mask task0)
    :texture-anim-tfrag #f
    :texture-anim-pris '*darkjak-hires-nest-texture-anim-array*
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-9)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define outrocst (new 'static 'level-load-info
                   :index #x92
                   :name 'outrocst
                   :visname 'outrocst-vis
                   :nickname 'outrocst
                   :dbname 'outrocst
                   :taskname 'default
                   :packages '(outro)
                   :music-bank #f
                   :ambient-sounds '()
                   :mood-func 'update-mood-default
                   :mood-init #f
                   :ocean #f
                   :sky #f
                   :use-camera-other #f
                   :continues '()
                   :tasks '()
                   :priority 100
                   :load-commands '()
                   :alt-load-commands '()
                   :bsp-mask #xffffffffffffffff
                   :buttom-height (meters -20)
                   :run-packages '("common")
                   :wait-for-load #f
                   :login-func #f
                   :activate-func #f
                   :deactivate-func #f
                   :kill-func #f
                   :borrow-size (new 'static 'array uint16 2 #xa8c #x0)
                   :borrow-level (new 'static 'array symbol 2 #f #f)
                   :borrow-display? (new 'static 'array symbol 2 #f #f)
                   :base-task-mask (task-mask task0)
                   :texture-anim-tfrag #f
                   :texture-anim-pris #f
                   :texture-anim-shrub #f
                   :texture-anim-alpha #f
                   :texture-anim-water #f
                   :texture-anim-twarp #f
                   :texture-anim-pris2 #f
                   :texture-anim-sprite #f
                   :texture-anim-map #f
                   :texture-anim-sky #f
                   :draw-priority 10.0
                   :fog-height 327680.0
                   :bigmap-id (bigmap-id bigmap-id-20)
                   :ocean-near-translucent? #t
                   :ocean-far? #f
                   :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                   :max-rain 1.0
                   :fog-mult 1.0
                   :ocean-alpha 1.0
                   :extra-sound-bank #f
                   )
        )

(define portwall (new 'static 'level-load-info
                   :index #x93
                   :task-level #x1
                   :name 'portwall
                   :visname 'portwall-vis
                   :nickname 'portwall
                   :dbname 'portwall
                   :taskname 'city
                   :packages '()
                   :memory-mode (load-buffer-mode borrow)
                   :music-bank #f
                   :ambient-sounds '()
                   :mood-func 'update-mood-default
                   :mood-init #f
                   :ocean #f
                   :sky #t
                   :use-camera-other #f
                   :continues '()
                   :tasks '()
                   :priority 100
                   :load-commands '()
                   :alt-load-commands '()
                   :bsp-mask #xffffffffffffffff
                   :buttom-height (meters -20)
                   :run-packages '("common")
                   :wait-for-load #f
                   :login-func #f
                   :activate-func #f
                   :deactivate-func #f
                   :kill-func #f
                   :borrow-level (new 'static 'array symbol 2 #f #f)
                   :borrow-display? (new 'static 'array symbol 2 #f #f)
                   :base-task-mask (task-mask task0)
                   :texture-anim-tfrag #f
                   :texture-anim-pris #f
                   :texture-anim-shrub #f
                   :texture-anim-alpha #f
                   :texture-anim-water #f
                   :texture-anim-twarp #f
                   :texture-anim-pris2 #f
                   :texture-anim-sprite #f
                   :texture-anim-map #f
                   :texture-anim-sky #f
                   :draw-priority 10.0
                   :fog-height 327680.0
                   :bigmap-id (bigmap-id bigmap-id-20)
                   :ocean-near-translucent? #t
                   :ocean-far? #f
                   :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                   :max-rain 1.0
                   :fog-mult 1.0
                   :ocean-alpha 1.0
                   :extra-sound-bank #f
                   )
        )

(define loutcstb (new 'static 'level-load-info
                   :index #x94
                   :name 'loutcstb
                   :visname 'loutcstb-vis
                   :nickname 'loutcstb
                   :dbname 'loutcstb
                   :taskname 'default
                   :packages '()
                   :memory-mode (load-buffer-mode borrow)
                   :music-bank #f
                   :ambient-sounds '()
                   :mood-func 'update-mood-nestb
                   :mood-init #f
                   :ocean #f
                   :sky #t
                   :use-camera-other #f
                   :continues '()
                   :tasks '()
                   :priority 100
                   :load-commands '()
                   :alt-load-commands '()
                   :bsp-mask #xffffffffffffffff
                   :buttom-height (meters -20)
                   :run-packages '("common")
                   :wait-for-load #f
                   :login-func #f
                   :activate-func #f
                   :deactivate-func #f
                   :kill-func #f
                   :borrow-level (new 'static 'array symbol 2 #f #f)
                   :borrow-display? (new 'static 'array symbol 2 #f #f)
                   :base-task-mask (task-mask task0)
                   :texture-anim-tfrag #f
                   :texture-anim-pris #f
                   :texture-anim-shrub #f
                   :texture-anim-alpha #f
                   :texture-anim-water #f
                   :texture-anim-twarp #f
                   :texture-anim-pris2 #f
                   :texture-anim-sprite #f
                   :texture-anim-map #f
                   :texture-anim-sky #f
                   :draw-priority 10.0
                   :fog-height 327680.0
                   :bigmap-id (bigmap-id bigmap-id-20)
                   :ocean-near-translucent? #t
                   :ocean-far? #f
                   :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                   :max-rain 1.0
                   :fog-mult 1.0
                   :ocean-alpha 1.0
                   :extra-sound-bank #f
                   )
        )

(define island1
  (new 'static 'level-load-info
    :index #x95
    :name 'island1
    :visname 'island1-vis
    :nickname 'island1
    :dbname 'island1
    :taskname 'default
    :packages '()
    :music-bank #f
    :ambient-sounds '()
    :mood-func 'update-mood-default
    :mood-init #f
    :ocean #f
    :sky #t
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "island1-start"
        :level 'island1
        :trans (new 'static 'vector :x -63374.133 :y 23056.385 :z 99968.62 :w 1.0)
        :quat (new 'static 'vector :y -0.0282 :w 0.9995)
        :camera-trans (new 'static 'vector :x -75443.81 :y 44169.625 :z 50212.453 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9721 0.0 -0.2344))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0285 0.9925 0.1184))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.2326 -0.1218 0.9648))
          )
        :on-goto #f
        :vis-nick 'island1
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'island1 :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name 'ctywide :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 #f #f #f)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -150)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-20)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :max-rain 1.0
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

;; WARN: Return type mismatch target vs none.
(defun-debug city-start ()
  (let ((v1-1 (level-get-target-inside *level*)))
    (when v1-1
      (let ((v1-3 (-> v1-1 info continues)))
        (when (not (null? v1-3))
          (let ((a1-0 (-> v1-3 car)))
            (set! (-> *level* play?) #t)
            (start 'play (the-as continue-point a1-0))
            )
          )
        )
      )
    )
  (none)
  )

(define skatepark
  (new 'static 'level-load-info
    :index #x96
    :name 'skatepark
    :visname 'skatepark-vis
    :nickname 'skatepark
    :dbname 'skatepark
    :taskname 'default
    :packages '()
    :memory-mode (load-buffer-mode medium)
    :music-bank #f
    :ambient-sounds '()
    :mood-func 'update-mood-default
    :mood-init #f
    :ocean #f
    :sky #t
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "skatepark-debug"
        :level 'skatepark
        :trans (new 'static 'vector :x 229338.31 :y 40960.0 :z 732819.9 :w 1.0)
        :quat (new 'static 'vector :x 0.0013 :y -0.9682 :z 0.0008 :w -0.2499)
        :camera-trans (new 'static 'vector :x 193991.89 :y 60429.516 :z 760925.8 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.6255 0.0 -0.7801))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0995 0.9918 -0.0798))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.7737 -0.1276 -0.6204))
          )
        :on-goto #f
        :vis-nick #f
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'skatepark :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 #f #f #f)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -10000000)
    :run-packages '()
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :base-task-mask (task-mask task0)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-20)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :max-rain 1.0
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define halfpipe
  (new 'static 'level-load-info
    :index #x97
    :name 'halfpipe
    :visname 'halfpipe-vis
    :nickname 'halfpipe
    :dbname 'halfpipe
    :taskname 'default
    :packages '()
    :memory-mode (load-buffer-mode medium)
    :music-bank #f
    :ambient-sounds '()
    :mood-func 'update-mood-default
    :mood-init #f
    :ocean #f
    :sky #t
    :use-camera-other #f
    :part-engine-max 16
    :continues '((new 'static 'continue-point
        :name "halfpipe"
        :level 'halfpipe
        :trans (new 'static 'vector :x -1048.9856 :y -172047.97 :z -212555.78 :w 1.0)
        :quat (new 'static 'vector :y 0.061 :w 0.9981)
        :camera-trans (new 'static 'vector :x -9941.401 :y -150049.17 :z -159587.94 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.979 0.0 -0.2037))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.0545 0.9634 -0.2622))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1963 -0.2678 -0.9432))
          )
        :on-goto #f
        :vis-nick #f
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'halfpipe :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 #f #f #f)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -10000000)
    :run-packages '()
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :base-task-mask (task-mask task0)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-20)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :max-rain 1.0
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define vistest (new 'static 'level-load-info
                  :index #x98
                  :name 'vistest
                  :visname 'vistest-vis
                  :nickname 'vis
                  :dbname 'vistest
                  :taskname 'default
                  :packages '()
                  :memory-mode (load-buffer-mode medium)
                  :music-bank #f
                  :ambient-sounds '()
                  :mood-func 'update-mood-default
                  :mood-init #f
                  :ocean #f
                  :sky #t
                  :use-camera-other #f
                  :continues '()
                  :tasks '()
                  :priority 100
                  :load-commands '()
                  :alt-load-commands '()
                  :bsp-mask #xffffffffffffffff
                  :buttom-height (meters -10000000)
                  :run-packages '("common")
                  :wait-for-load #t
                  :login-func #f
                  :activate-func #f
                  :deactivate-func #f
                  :kill-func #f
                  :borrow-level (new 'static 'array symbol 2 #f #f)
                  :borrow-display? (new 'static 'array symbol 2 #f #f)
                  :base-task-mask (task-mask task0)
                  :texture-anim-tfrag #f
                  :texture-anim-pris #f
                  :texture-anim-shrub #f
                  :texture-anim-alpha #f
                  :texture-anim-water #f
                  :texture-anim-twarp #f
                  :texture-anim-pris2 #f
                  :texture-anim-sprite #f
                  :texture-anim-map #f
                  :texture-anim-sky #f
                  :draw-priority 10.0
                  :fog-height 327680.0
                  :bigmap-id (bigmap-id bigmap-id-20)
                  :ocean-near-translucent? #t
                  :ocean-far? #f
                  :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                  :max-rain 1.0
                  :fog-mult 1.0
                  :ocean-alpha 1.0
                  :extra-sound-bank #f
                  )
        )

(define woodstest (new 'static 'level-load-info
                    :index #x99
                    :name 'woodstest
                    :visname 'woodstest-vis
                    :nickname 'woodstest
                    :dbname 'woodstest
                    :taskname 'default
                    :packages '()
                    :memory-mode (load-buffer-mode medium)
                    :music-bank #f
                    :ambient-sounds '()
                    :mood-func 'update-mood-default
                    :mood-init #f
                    :ocean #f
                    :sky #t
                    :use-camera-other #f
                    :continues '()
                    :tasks '()
                    :priority 100
                    :load-commands '()
                    :alt-load-commands '()
                    :bsp-mask #xffffffffffffffff
                    :buttom-height (meters -10000000)
                    :run-packages '("common")
                    :wait-for-load #t
                    :login-func #f
                    :activate-func #f
                    :deactivate-func #f
                    :kill-func #f
                    :borrow-level (new 'static 'array symbol 2 #f #f)
                    :borrow-display? (new 'static 'array symbol 2 #f #f)
                    :base-task-mask (task-mask task0)
                    :texture-anim-tfrag #f
                    :texture-anim-pris #f
                    :texture-anim-shrub #f
                    :texture-anim-alpha '*waterfall-texture-anim-array*
                    :texture-anim-water #f
                    :texture-anim-twarp #f
                    :texture-anim-pris2 #f
                    :texture-anim-sprite #f
                    :texture-anim-map #f
                    :texture-anim-sky #f
                    :draw-priority 10.0
                    :fog-height 327680.0
                    :bigmap-id (bigmap-id bigmap-id-20)
                    :ocean-near-translucent? #t
                    :ocean-far? #f
                    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                    :max-rain 1.0
                    :fog-mult 1.0
                    :ocean-alpha 1.0
                    :extra-sound-bank #f
                    )
        )

(define tobytest (new 'static 'level-load-info
                   :index #x9a
                   :name 'tobytest
                   :visname 'tobytest-vis
                   :nickname 'tobytest
                   :dbname 'tobytest
                   :taskname 'default
                   :packages '()
                   :memory-mode (load-buffer-mode medium)
                   :music-bank #f
                   :ambient-sounds '()
                   :mood-func 'update-mood-default-interior
                   :mood-init #f
                   :ocean #f
                   :sky #f
                   :use-camera-other #f
                   :continues '()
                   :tasks '()
                   :priority 100
                   :load-commands '()
                   :alt-load-commands '()
                   :bsp-mask #xffffffffffffffff
                   :buttom-height (meters -10000000)
                   :run-packages '("common")
                   :wait-for-load #t
                   :login-func #f
                   :activate-func #f
                   :deactivate-func #f
                   :kill-func #f
                   :borrow-level (new 'static 'array symbol 2 #f #f)
                   :borrow-display? (new 'static 'array symbol 2 #f #f)
                   :base-task-mask (task-mask task0)
                   :texture-anim-tfrag #f
                   :texture-anim-pris #f
                   :texture-anim-shrub #f
                   :texture-anim-alpha #f
                   :texture-anim-water #f
                   :texture-anim-twarp #f
                   :texture-anim-pris2 #f
                   :texture-anim-sprite #f
                   :texture-anim-map #f
                   :texture-anim-sky #f
                   :draw-priority 10.0
                   :fog-height 327680.0
                   :bigmap-id (bigmap-id bigmap-id-20)
                   :ocean-near-translucent? #t
                   :ocean-far? #f
                   :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                   :max-rain 1.0
                   :fog-mult 1.0
                   :ocean-alpha 1.0
                   :extra-sound-bank #f
                   )
        )

(define chartest
  (new 'static 'level-load-info
    :index #x9b
    :name 'chartest
    :visname 'chartest-vis
    :nickname 'chartest
    :dbname 'chartest
    :taskname 'default
    :packages '()
    :memory-mode (load-buffer-mode medium)
    :music-bank #f
    :ambient-sounds '()
    :mood-func 'update-mood-default
    :mood-init #f
    :ocean #f
    :sky #f
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "chartest-1"
        :level 'chartest
        :trans (new 'static 'vector :x 32127.385 :z 4703.846 :w 1.0)
        :quat (new 'static 'vector :y 0.6223 :w 0.7827)
        :camera-trans (new 'static 'vector :x -15613.133 :y 21093.99 :z 23271.424 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.3584 0.0 -0.9335))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.1116 0.9928 -0.0428))
          (new 'static 'vector3s :data (new 'static 'array float 3 0.9268 -0.1196 -0.3559))
          )
        :on-goto #f
        :vis-nick 'chartest
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'chartest :display? 'display :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 #f #f #f)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -10000000)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :base-task-mask (task-mask task0)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-20)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :max-rain 1.0
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define dptest
  (new 'static 'level-load-info
    :index #x9c
    :name 'dptest
    :visname 'dptest-vis
    :nickname 'dpt
    :dbname 'dptest
    :taskname 'default
    :packages '()
    :music-bank #f
    :ambient-sounds '()
    :mood-func 'update-mood-default
    :mood-init #f
    :ocean #f
    :sky #t
    :use-camera-other #f
    :continues '((new 'static 'continue-point
        :name "dptest-start"
        :level 'dptest
        :trans (new 'static 'vector :x 370575.78 :y 4786.995 :z 775480.94 :w 1.0)
        :quat (new 'static 'vector :y 0.9867 :w -0.162)
        :camera-trans (new 'static 'vector :x 375318.53 :y 25830.605 :z 826459.75 :w 1.0)
        :camera-rot (new 'static 'inline-array vector3s 3
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.9956 0.0 0.0933))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0112 0.9927 -0.1195))
          (new 'static 'vector3s :data (new 'static 'array float 3 -0.0926 -0.12 -0.9884))
          )
        :on-goto #f
        :vis-nick 'dptest ;; changed
        :want (new 'static 'inline-array level-buffer-state 6
          (new 'static 'level-buffer-state :name 'dptest :display? 'display :force-vis? #f :force-inside? #f) ;; changed
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
          )
        :want-sound (new 'static 'array symbol 3 #f #f #f)
        )
      )
    :tasks '()
    :priority 100
    :load-commands '()
    :alt-load-commands '()
    :bsp-mask #xffffffffffffffff
    :buttom-height (meters -10000000)
    :run-packages '("common")
    :wait-for-load #t
    :login-func #f
    :activate-func #f
    :deactivate-func #f
    :kill-func #f
    :borrow-level (new 'static 'array symbol 2 #f #f)
    :borrow-display? (new 'static 'array symbol 2 #f #f)
    :base-task-mask (task-mask task0)
    :texture-anim-tfrag #f
    :texture-anim-pris #f
    :texture-anim-shrub #f
    :texture-anim-alpha #f
    :texture-anim-water #f
    :texture-anim-twarp #f
    :texture-anim-pris2 #f
    :texture-anim-sprite #f
    :texture-anim-map #f
    :texture-anim-sky #f
    :draw-priority 10.0
    :fog-height 327680.0
    :bigmap-id (bigmap-id bigmap-id-20)
    :ocean-near-translucent? #t
    :ocean-far? #f
    :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
    :max-rain 1.0
    :fog-mult 1.0
    :ocean-alpha 1.0
    :extra-sound-bank #f
    )
  )

(define ctyfence (new 'static 'level-load-info
                   :index #x9d
                   :task-level #x1
                   :name 'ctyfence
                   :visname 'ctyfence-vis
                   :nickname 'ctyfence
                   :dbname 'ctyfence
                   :taskname 'city
                   :packages '()
                   :memory-mode (load-buffer-mode medium)
                   :music-bank 'city1
                   :ambient-sounds '()
                   :mood-func 'update-mood-copy-ctywide
                   :mood-init #f
                   :ocean #f
                   :sky #t
                   :use-camera-other #f
                   ;; added
                   :continues '((new 'static 'continue-point
                       :name "ctyfence-start"
                       :level 'ctyfence
                       :trans (new 'static 'vector :x (meters 170.7) :y (meters 9.1063) :z (meters 1133.2773) :w 1.0)
                       :quat (new 'static 'vector :y -0.3182 :w -0.9480)
                       :camera-trans (new 'static 'vector :x (meters 169.222) :y (meters 14.23) :z (meters 1121) :w 1.0)
                       :camera-rot (new 'static 'inline-array vector3s 3
                         (new 'static 'vector3s :data (new 'static 'array float 3 0.0601 0.0604 -0.0036))
                         (new 'static 'vector3s :data (new 'static 'array float 3 0.0601 0.0604 -0.0036))
                         (new 'static 'vector3s :data (new 'static 'array float 3 0.0601 0.0604 -0.0036))
                         )
                       :on-goto #f
                       :vis-nick 'ctyfence
                       :want (new 'static 'inline-array level-buffer-state 6
                         (new 'static 'level-buffer-state :name 'ctyfence :display? 'display :force-vis? #f :force-inside? #f)
                         (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                         (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                         (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                         (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                         (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                         )
                       :want-sound (new 'static 'array symbol 3 #f #f #f)
                       )
                     )
                   :tasks '()
                   :priority 100
                   :load-commands '()
                   :alt-load-commands '()
                   :bsp-mask #xffffffffffffffff
                   :buttom-height (meters -15)
                   :run-packages '("common")
                   :wait-for-load #t
                   :login-func #f
                   :activate-func #f
                   :deactivate-func #f
                   :kill-func #f
                   :borrow-level (new 'static 'array symbol 2 #f #f)
                   :borrow-display? (new 'static 'array symbol 2 #f #f)
                   :texture-anim-tfrag #f
                   :texture-anim-pris #f
                   :texture-anim-shrub #f
                   :texture-anim-alpha #f
                   :texture-anim-water #f
                   :texture-anim-twarp #f
                   :texture-anim-pris2 #f
                   :texture-anim-sprite #f
                   :texture-anim-map #f
                   :texture-anim-sky #f
                   :draw-priority 10.0
                   :level-flags #x1
                   :fog-height 327680.0
                   :bigmap-id (bigmap-id bigmap-id-20)
                   :ocean-near-translucent? #t
                   :ocean-far? #f
                   :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                   :max-rain 1.0
                   :fog-mult 1.0
                   :ocean-alpha 1.0
                   :extra-sound-bank #f
                   )
        )

(when (or (= *kernel-boot-message* 'demo) (= *kernel-boot-message* 'demo-shared))
  (set! (-> ctywide memory-mode) (load-buffer-mode small-edge))
  0
  )

;; added in PC port: test levels from the ps3 version
(#when USE_PS3_LEVELS
  (define 4aaron (new 'static 'level-load-info
                          :index 1
                          :name '4aaron
                          :visname '4aaron-vis
                          :nickname '4aaron
                          :dbname '4aaron
                          :taskname 'default
                          :packages '()
                          :memory-mode (load-buffer-mode large)
                          :music-bank #f
                          :ambient-sounds '()
                          :mood-func 'update-mood-default
                          :mood-init #f
                          :ocean #f
                          :sky #t
                          :use-camera-other #f
                          :continues '((new 'static 'continue-point
                                  :name "4aaron-start"
                                  :level '4aaron
                                  :flags (continue-flags game-start)
                                  :trans (new 'static 'vector :x (meters 6) :y (meters 0) :z (meters 5.8) :w 1.0)
                                  :quat (new 'static 'vector :y -0.7267 :w 0.6868)
                                  :camera-trans (new 'static 'vector :x (meters 14.04) :y (meters 4.5716) :z (meters 12.4) :w 1.0)
                                  :camera-rot (new 'static 'inline-array vector3s 3
                                    (new 'static 'vector3s :data (new 'static 'array float 3 -0.0297 0.9011 -0.0626))
                                    (new 'static 'vector3s :data (new 'static 'array float 3 -0.0297 0.9011 -0.0626))
                                    (new 'static 'vector3s :data (new 'static 'array float 3 -0.0297 0.9011 -0.0626))
                                    )
                                  :on-goto #f
                                  :vis-nick '4aaron
                                  :want (new 'static 'inline-array level-buffer-state 6
                                    (new 'static 'level-buffer-state :name '4aaron :display? 'display :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    )
                                  :want-sound (new 'static 'array symbol 3 #f #f #f)
                                  )
                                )
                          :tasks '()
                          :priority 100
                          :load-commands '()
                          :alt-load-commands '()
                          :bsp-mask #xffffffffffffffff
                          :buttom-height (meters -20)
                          :run-packages '()
                          :wait-for-load #t
                          :login-func #f
                          :activate-func #f
                          :deactivate-func #f
                          :kill-func #f
                          :borrow-level (new 'static 'array symbol 2 #f #f)
                          :borrow-display? (new 'static 'array symbol 2 #f #f)
                          :texture-anim-tfrag #f
                          :texture-anim-pris #f
                          :texture-anim-shrub #f
                          :texture-anim-alpha #f
                          :texture-anim-water #f
                          :texture-anim-twarp #f
                          :texture-anim-pris2 #f
                          :texture-anim-sprite #f
                          :texture-anim-map #f
                          :texture-anim-sky #f
                          :draw-priority 10.0
                          :fog-height 327680.0
                          :bigmap-id (bigmap-id bigmap-id-20)
                          :ocean-near-translucent? #t
                          :ocean-far? #f
                          :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                          :max-rain 1.0
                          :fog-mult 1.0
                          :ocean-alpha 1.0
                          :extra-sound-bank #f
                          )
          )
  (define 4pal01 (new 'static 'level-load-info
                          :index 1
                          :name '4pal01
                          :visname '4pal01-vis
                          :nickname '4pal01
                          :dbname '4pal01
                          :taskname 'default
                          :packages '()
                          :memory-mode (load-buffer-mode large)
                          :music-bank #f
                          :ambient-sounds '()
                          :mood-func 'update-mood-default
                          :mood-init #f
                          :ocean #f
                          :sky #t
                          :use-camera-other #f
                          :continues '((new 'static 'continue-point
                                  :name "4pal01-start"
                                  :level '4pal01
                                  :flags (continue-flags game-start)
                                  :trans (new 'static 'vector :x (meters -5.632) :y (meters 0) :z (meters -5.682) :w 1.0)
                                  :quat (new 'static 'vector :y 0.9642 :w 0.2650)
                                  :camera-trans (new 'static 'vector :x (meters -15.704) :y (meters 5) :z (meters -12.1401) :w 1.0)
                                  :camera-rot (new 'static 'inline-array vector3s 3
                                    (new 'static 'vector3s :data (new 'static 'array float 3 0.869 0.0 -0.4947))
                                    (new 'static 'vector3s :data (new 'static 'array float 3 0.0663 0.9909 0.1165))
                                    (new 'static 'vector3s :data (new 'static 'array float 3 0.4903 -0.134 0.8611))
                                    )
                                  :on-goto #f
                                  :vis-nick '4pal01
                                  :want (new 'static 'inline-array level-buffer-state 6
                                    (new 'static 'level-buffer-state :name '4pal01 :display? 'display :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    )
                                  :want-sound (new 'static 'array symbol 3 #f #f #f)
                                  )
                                )
                          :tasks '()
                          :priority 100
                          :load-commands '()
                          :alt-load-commands '()
                          :bsp-mask #xffffffffffffffff
                          :buttom-height (meters -20)
                          :run-packages '()
                          :wait-for-load #t
                          :login-func #f
                          :activate-func #f
                          :deactivate-func #f
                          :kill-func #f
                          :borrow-level (new 'static 'array symbol 2 #f #f)
                          :borrow-display? (new 'static 'array symbol 2 #f #f)
                          :texture-anim-tfrag #f
                          :texture-anim-pris #f
                          :texture-anim-shrub #f
                          :texture-anim-alpha #f
                          :texture-anim-water #f
                          :texture-anim-twarp #f
                          :texture-anim-pris2 #f
                          :texture-anim-sprite #f
                          :texture-anim-map #f
                          :texture-anim-sky #f
                          :draw-priority 10.0
                          :fog-height 327680.0
                          :bigmap-id (bigmap-id bigmap-id-20)
                          :ocean-near-translucent? #t
                          :ocean-far? #f
                          :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                          :max-rain 1.0
                          :fog-mult 1.0
                          :ocean-alpha 1.0
                          :extra-sound-bank #f
                          )
          )
  (define andrew01 (new 'static 'level-load-info
                          :index 1
                          :name 'andrew01
                          :visname 'andrew01-vis
                          :nickname 'andrew01
                          :dbname 'andrew01
                          :taskname 'default
                          :packages '()
                          :memory-mode (load-buffer-mode large)
                          :music-bank #f
                          :ambient-sounds '()
                          :mood-func 'update-mood-default
                          :mood-init #f
                          :ocean #f
                          :sky #t
                          :use-camera-other #f
                          :continues '((new 'static 'continue-point
                                  :name "andrew01-start"
                                  :level 'andrew01
                                  :flags (continue-flags game-start)
                                  :trans (new 'static 'vector :x 1942413.2 :y 34479.31 :z 275525.62 :w 1.0)
                                  :quat (new 'static 'vector :y 0.4562 :w 0.8898)
                                  :camera-trans (new 'static 'vector :x 1921090.8 :y 53425.766 :z 237949.75 :w 1.0)
                                  :camera-rot (new 'static 'inline-array vector3s 3
                                    (new 'static 'vector3s :data (new 'static 'array float 3 0.869 0.0 -0.4947))
                                    (new 'static 'vector3s :data (new 'static 'array float 3 0.0663 0.9909 0.1165))
                                    (new 'static 'vector3s :data (new 'static 'array float 3 0.4903 -0.134 0.8611))
                                    )
                                  :on-goto #f
                                  :vis-nick 'andrew01
                                  :want (new 'static 'inline-array level-buffer-state 6
                                    (new 'static 'level-buffer-state :name 'andrew01 :display? 'display :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    )
                                  :want-sound (new 'static 'array symbol 3 #f #f #f)
                                  )
                                )
                          :tasks '()
                          :priority 100
                          :load-commands '()
                          :alt-load-commands '()
                          :bsp-mask #xffffffffffffffff
                          :buttom-height (meters -20)
                          :run-packages '()
                          :wait-for-load #t
                          :login-func #f
                          :activate-func #f
                          :deactivate-func #f
                          :kill-func #f
                          :borrow-level (new 'static 'array symbol 2 #f #f)
                          :borrow-display? (new 'static 'array symbol 2 #f #f)
                          :texture-anim-tfrag #f
                          :texture-anim-pris #f
                          :texture-anim-shrub #f
                          :texture-anim-alpha #f
                          :texture-anim-water #f
                          :texture-anim-twarp #f
                          :texture-anim-pris2 #f
                          :texture-anim-sprite #f
                          :texture-anim-map #f
                          :texture-anim-sky #f
                          :draw-priority 10.0
                          :fog-height 327680.0
                          :bigmap-id (bigmap-id bigmap-id-20)
                          :ocean-near-translucent? #t
                          :ocean-far? #f
                          :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                          :max-rain 1.0
                          :fog-mult 1.0
                          :ocean-alpha 1.0
                          :extra-sound-bank #f
                          )
          )
  (define bsbs (new 'static 'level-load-info
                          :index 1
                          :name 'bsbs
                          :visname 'bsbs-vis
                          :nickname 'bsbs
                          :dbname 'bsbs
                          :taskname 'default
                          :packages '()
                          :memory-mode (load-buffer-mode large)
                          :music-bank #f
                          :ambient-sounds '()
                          :mood-func 'update-mood-default
                          :mood-init #f
                          :ocean #f
                          :sky #t
                          :use-camera-other #f
                          :continues '((new 'static 'continue-point
                                  :name "bsbs-start"
                                  :level 'bsbs
                                  :flags (continue-flags game-start)
                                  :trans (new 'static 'vector :x (meters 118.7956) :y (meters 0) :z (meters 91) :w 1.0)
                                  :quat (new 'static 'vector :y -0.4269 :w 0.9042)
                                  :camera-trans (new 'static 'vector :x (meters 131) :y (meters 5.146) :z (meters 93.7) :w 1.0)
                                  :camera-rot (new 'static 'inline-array vector3s 3
                                    (new 'static 'vector3s :data (new 'static 'array float 3 0.0370 -0.769 0.6365))
                                    (new 'static 'vector3s :data (new 'static 'array float 3 0.0370 -0.769 0.6365))
                                    (new 'static 'vector3s :data (new 'static 'array float 3 0.0370 -0.769 0.6365))
                                    )
                                  :on-goto #f
                                  :vis-nick 'bsbs
                                  :want (new 'static 'inline-array level-buffer-state 6
                                    (new 'static 'level-buffer-state :name 'bsbs :display? 'display :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    )
                                  :want-sound (new 'static 'array symbol 3 #f #f #f)
                                  )
                                )
                          :tasks '()
                          :priority 100
                          :load-commands '()
                          :alt-load-commands '()
                          :bsp-mask #xffffffffffffffff
                          :buttom-height (meters -20)
                          :run-packages '()
                          :wait-for-load #t
                          :login-func #f
                          :activate-func #f
                          :deactivate-func #f
                          :kill-func #f
                          :borrow-level (new 'static 'array symbol 2 #f #f)
                          :borrow-display? (new 'static 'array symbol 2 #f #f)
                          :texture-anim-tfrag #f
                          :texture-anim-pris #f
                          :texture-anim-shrub #f
                          :texture-anim-alpha #f
                          :texture-anim-water #f
                          :texture-anim-twarp #f
                          :texture-anim-pris2 #f
                          :texture-anim-sprite #f
                          :texture-anim-map #f
                          :texture-anim-sky #f
                          :draw-priority 10.0
                          :fog-height 327680.0
                          :bigmap-id (bigmap-id bigmap-id-20)
                          :ocean-near-translucent? #t
                          :ocean-far? #f
                          :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                          :max-rain 1.0
                          :fog-mult 1.0
                          :ocean-alpha 1.0
                          :extra-sound-bank #f
                          )
          )
  (define eitest (new 'static 'level-load-info
                          :index 1
                          :name 'eitest
                          :visname 'eitest-vis
                          :nickname 'eitest
                          :dbname 'eitest
                          :taskname 'default
                          :packages '()
                          :memory-mode (load-buffer-mode large)
                          :music-bank #f
                          :ambient-sounds '()
                          :mood-func 'update-mood-default
                          :mood-init #f
                          :ocean #f
                          :sky #t
                          :use-camera-other #f
                          :continues '((new 'static 'continue-point
                                  :name "eitest-start"
                                  :level 'eitest
                                  :flags (continue-flags game-start)
                                  :trans (new 'static 'vector :x (meters 8.5438) :y (meters -10) :z (meters 18.304) :w 1.0)
                                  :quat (new 'static 'vector :y -0.8945 :w 0.4468)
                                  :camera-trans (new 'static 'vector :x (meters 12.6751) :y (meters -4.9116) :z (meters 29.8563) :w 1.0)
                                  :camera-rot (new 'static 'inline-array vector3s 3
                                    (new 'static 'vector3s :data (new 'static 'array float 3 -0.0104 0.9830 -0.0591))
                                    (new 'static 'vector3s :data (new 'static 'array float 3 -0.0104 0.9830 -0.0591))
                                    (new 'static 'vector3s :data (new 'static 'array float 3 -0.0104 0.9830 -0.0591))
                                    )
                                  :on-goto #f
                                  :vis-nick 'eitest
                                  :want (new 'static 'inline-array level-buffer-state 6
                                    (new 'static 'level-buffer-state :name 'eitest :display? 'display :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    )
                                  :want-sound (new 'static 'array symbol 3 #f #f #f)
                                  )
                                )
                          :tasks '()
                          :priority 100
                          :load-commands '()
                          :alt-load-commands '()
                          :bsp-mask #xffffffffffffffff
                          :buttom-height (meters -20)
                          :run-packages '()
                          :wait-for-load #t
                          :login-func #f
                          :activate-func #f
                          :deactivate-func #f
                          :kill-func #f
                          :borrow-level (new 'static 'array symbol 2 #f #f)
                          :borrow-display? (new 'static 'array symbol 2 #f #f)
                          :texture-anim-tfrag #f
                          :texture-anim-pris #f
                          :texture-anim-shrub #f
                          :texture-anim-alpha #f
                          :texture-anim-water #f
                          :texture-anim-twarp #f
                          :texture-anim-pris2 #f
                          :texture-anim-sprite #f
                          :texture-anim-map #f
                          :texture-anim-sky #f
                          :draw-priority 10.0
                          :fog-height 327680.0
                          :bigmap-id (bigmap-id bigmap-id-20)
                          :ocean-near-translucent? #t
                          :ocean-far? #f
                          :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                          :max-rain 1.0
                          :fog-mult 1.0
                          :ocean-alpha 1.0
                          :extra-sound-bank #f
                          )
          )
  (define miketest (new 'static 'level-load-info
                          :index 1
                          :name 'miketest
                          :visname 'miketest-vis
                          :nickname 'miketest
                          :dbname 'miketest
                          :taskname 'default
                          :packages '()
                          :memory-mode (load-buffer-mode large)
                          :music-bank #f
                          :ambient-sounds '()
                          :mood-func 'update-mood-default
                          :mood-init #f
                          :ocean #f
                          :sky #t
                          :use-camera-other #f
                          :continues '((new 'static 'continue-point
                                  :name "miketest-start"
                                  :level 'miketest
                                  :flags (continue-flags game-start)
                                  :trans (new 'static 'vector :x (meters 0.547) :y (meters 0.6084) :z (meters -1.3416) :w 1.0)
                                  :quat (new 'static 'vector :y 0.9923 :w -0.1234)
                                  :camera-trans (new 'static 'vector :x (meters 11.8525) :y (meters 5.7214) :z (meters -6.3575) :w 1.0)
                                  :camera-rot (new 'static 'inline-array vector3s 3
                                    (new 'static 'vector3s :data (new 'static 'array float 3 0.0500 -0.5936 -6.3575))
                                    (new 'static 'vector3s :data (new 'static 'array float 3 0.0500 -0.5936 -6.3575))
                                    (new 'static 'vector3s :data (new 'static 'array float 3 0.0500 -0.5936 -6.3575))
                                    )
                                  :on-goto #f
                                  :vis-nick 'miketest
                                  :want (new 'static 'inline-array level-buffer-state 6
                                    (new 'static 'level-buffer-state :name 'miketest :display? 'display :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    )
                                  :want-sound (new 'static 'array symbol 3 #f #f #f)
                                  )
                                )
                          :tasks '()
                          :priority 100
                          :load-commands '()
                          :alt-load-commands '()
                          :bsp-mask #xffffffffffffffff
                          :buttom-height (meters -20)
                          :run-packages '()
                          :wait-for-load #t
                          :login-func #f
                          :activate-func #f
                          :deactivate-func #f
                          :kill-func #f
                          :borrow-level (new 'static 'array symbol 2 #f #f)
                          :borrow-display? (new 'static 'array symbol 2 #f #f)
                          :texture-anim-tfrag #f
                          :texture-anim-pris #f
                          :texture-anim-shrub #f
                          :texture-anim-alpha #f
                          :texture-anim-water #f
                          :texture-anim-twarp #f
                          :texture-anim-pris2 #f
                          :texture-anim-sprite #f
                          :texture-anim-map #f
                          :texture-anim-sky #f
                          :draw-priority 10.0
                          :fog-height 327680.0
                          :bigmap-id (bigmap-id bigmap-id-20)
                          :ocean-near-translucent? #t
                          :ocean-far? #f
                          :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                          :max-rain 1.0
                          :fog-mult 1.0
                          :ocean-alpha 1.0
                          :extra-sound-bank #f
                          )
          )
  (define tatetest (new 'static 'level-load-info
                          :index 1
                          :name 'tatetest
                          :visname 'tatetest-vis
                          :nickname 'tatetest
                          :dbname 'tatetest
                          :taskname 'default
                          :packages '()
                          :memory-mode (load-buffer-mode large)
                          :music-bank #f
                          :ambient-sounds '()
                          :mood-func 'update-mood-default
                          :mood-init #f
                          :ocean #f
                          :sky #t
                          :use-camera-other #f
                          :continues '((new 'static 'continue-point
                                  :name "tatetest-start"
                                  :level 'tatetest
                                  :flags (continue-flags game-start)
                                  :trans (new 'static 'vector :x (meters 39.2181) :y (meters 59.47) :z (meters 15.41) :w 1.0)
                                  :quat (new 'static 'vector :y -0.6084 :w 0.735)
                                  :camera-trans (new 'static 'vector :x (meters 50.601) :y (meters 64.6123) :z (meters 20.558) :w 1.0)
                                  :camera-rot (new 'static 'inline-array vector3s 3
                                    (new 'static 'vector3s :data (new 'static 'array float 3 0.0322 -0.8364 0.0495))
                                    (new 'static 'vector3s :data (new 'static 'array float 3 0.0322 -0.8364 0.0495))
                                    (new 'static 'vector3s :data (new 'static 'array float 3 0.0322 -0.8364 0.0495))
                                    )
                                  :on-goto #f
                                  :vis-nick 'tatetest
                                  :want (new 'static 'inline-array level-buffer-state 6
                                    (new 'static 'level-buffer-state :name 'tatetest :display? 'display :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    )
                                  :want-sound (new 'static 'array symbol 3 #f #f #f)
                                  )
                                )
                          :tasks '()
                          :priority 100
                          :load-commands '()
                          :alt-load-commands '()
                          :bsp-mask #xffffffffffffffff
                          :buttom-height (meters -20)
                          :run-packages '()
                          :wait-for-load #t
                          :login-func #f
                          :activate-func #f
                          :deactivate-func #f
                          :kill-func #f
                          :borrow-level (new 'static 'array symbol 2 #f #f)
                          :borrow-display? (new 'static 'array symbol 2 #f #f)
                          :texture-anim-tfrag #f
                          :texture-anim-pris #f
                          :texture-anim-shrub #f
                          :texture-anim-alpha #f
                          :texture-anim-water #f
                          :texture-anim-twarp #f
                          :texture-anim-pris2 #f
                          :texture-anim-sprite #f
                          :texture-anim-map #f
                          :texture-anim-sky #f
                          :draw-priority 10.0
                          :fog-height 327680.0
                          :bigmap-id (bigmap-id bigmap-id-20)
                          :ocean-near-translucent? #t
                          :ocean-far? #f
                          :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                          :max-rain 1.0
                          :fog-mult 1.0
                          :ocean-alpha 1.0
                          :extra-sound-bank #f
                          )
          )
  (define teststdc (new 'static 'level-load-info
                          :index 1
                          :name 'teststdc
                          :visname 'teststdc-vis
                          :nickname 'teststdc
                          :dbname 'teststdc
                          :taskname 'default
                          :packages '()
                          :memory-mode (load-buffer-mode large)
                          :music-bank #f
                          :ambient-sounds '()
                          :mood-func 'update-mood-default
                          :mood-init #f
                          :ocean #f
                          :sky #t
                          :use-camera-other #f
                          :continues '((new 'static 'continue-point
                                  :name "teststdc-start"
                                  :level 'teststdc
                                  :flags (continue-flags game-start)
                                  :trans (new 'static 'vector :x (meters -87.3788) :y (meters 11.4971) :z (meters -696.8) :w 1.0)
                                  :quat (new 'static 'vector :y 0.4821 :w 0.8760)
                                  :camera-trans (new 'static 'vector :x (meters -95.4312) :y (meters 16.6371) :z (meters -706.36) :w 1.0)
                                  :camera-rot (new 'static 'inline-array vector3s 3
                                    (new 'static 'vector3s :data (new 'static 'array float 3 0.0569 0.3426 -0.0208))
                                    (new 'static 'vector3s :data (new 'static 'array float 3 0.0569 0.3426 -0.0208))
                                    (new 'static 'vector3s :data (new 'static 'array float 3 0.0569 0.3426 -0.0208))
                                    )
                                  :on-goto #f
                                  :vis-nick 'teststdc
                                  :want (new 'static 'inline-array level-buffer-state 6
                                    (new 'static 'level-buffer-state :name 'teststdc :display? 'display :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    )
                                  :want-sound (new 'static 'array symbol 3 #f #f #f)
                                  )
                                )
                          :tasks '()
                          :priority 100
                          :load-commands '()
                          :alt-load-commands '()
                          :bsp-mask #xffffffffffffffff
                          :buttom-height (meters -20)
                          :run-packages '()
                          :wait-for-load #t
                          :login-func #f
                          :activate-func #f
                          :deactivate-func #f
                          :kill-func #f
                          :borrow-level (new 'static 'array symbol 2 #f #f)
                          :borrow-display? (new 'static 'array symbol 2 #f #f)
                          :texture-anim-tfrag #f
                          :texture-anim-pris #f
                          :texture-anim-shrub #f
                          :texture-anim-alpha #f
                          :texture-anim-water #f
                          :texture-anim-twarp #f
                          :texture-anim-pris2 #f
                          :texture-anim-sprite #f
                          :texture-anim-map #f
                          :texture-anim-sky #f
                          :draw-priority 10.0
                          :fog-height 327680.0
                          :bigmap-id (bigmap-id bigmap-id-20)
                          :ocean-near-translucent? #t
                          :ocean-far? #f
                          :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                          :max-rain 1.0
                          :fog-mult 1.0
                          :ocean-alpha 1.0
                          :extra-sound-bank #f
                          )
          )
  (define teststdd (new 'static 'level-load-info
                          :index 1
                          :name 'teststdd
                          :visname 'teststdd-vis
                          :nickname 'teststdd
                          :dbname 'teststdd
                          :taskname 'default
                          :packages '()
                          :memory-mode (load-buffer-mode large)
                          :music-bank #f
                          :ambient-sounds '()
                          :mood-func 'update-mood-default
                          :mood-init #f
                          :ocean #f
                          :sky #t
                          :use-camera-other #f
                          :continues '((new 'static 'continue-point
                                  :name "teststdd-start"
                                  :level 'teststdd
                                  :flags (continue-flags game-start)
                                  :trans (new 'static 'vector :x (meters 35.106) :y (meters 11.5) :z (meters -687.111) :w 1.0)
                                  :quat (new 'static 'vector :y -0.4833 :w -0.8754)
                                  :camera-trans (new 'static 'vector :x (meters 28.0362) :y (meters 16.65) :z (meters -697.26) :w 1.0)
                                  :camera-rot (new 'static 'inline-array vector3s 3
                                    (new 'static 'vector3s :data (new 'static 'array float 3 0.055 0.3174 -0.0184))
                                    (new 'static 'vector3s :data (new 'static 'array float 3 0.055 0.3174 -0.0184))
                                    (new 'static 'vector3s :data (new 'static 'array float 3 0.055 0.3174 -0.0184))
                                    )
                                  :on-goto #f
                                  :vis-nick 'teststdd
                                  :want (new 'static 'inline-array level-buffer-state 6
                                    (new 'static 'level-buffer-state :name 'teststdd :display? 'display :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    )
                                  :want-sound (new 'static 'array symbol 3 #f #f #f)
                                  )
                                )
                          :tasks '()
                          :priority 100
                          :load-commands '()
                          :alt-load-commands '()
                          :bsp-mask #xffffffffffffffff
                          :buttom-height (meters -20)
                          :run-packages '()
                          :wait-for-load #t
                          :login-func #f
                          :activate-func #f
                          :deactivate-func #f
                          :kill-func #f
                          :borrow-level (new 'static 'array symbol 2 #f #f)
                          :borrow-display? (new 'static 'array symbol 2 #f #f)
                          :texture-anim-tfrag #f
                          :texture-anim-pris #f
                          :texture-anim-shrub #f
                          :texture-anim-alpha #f
                          :texture-anim-water #f
                          :texture-anim-twarp #f
                          :texture-anim-pris2 #f
                          :texture-anim-sprite #f
                          :texture-anim-map #f
                          :texture-anim-sky #f
                          :draw-priority 10.0
                          :fog-height 327680.0
                          :bigmap-id (bigmap-id bigmap-id-20)
                          :ocean-near-translucent? #t
                          :ocean-far? #f
                          :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                          :max-rain 1.0
                          :fog-mult 1.0
                          :ocean-alpha 1.0
                          :extra-sound-bank #f
                          )
          )
  (define wasall (new 'static 'level-load-info
                          :index 1
                          :name 'wasall
                          :visname 'wasall-vis
                          :nickname 'wasall
                          :dbname 'wasall
                          :taskname 'default
                          :packages '()
                          :memory-mode (load-buffer-mode large)
                          :music-bank #f
                          :ambient-sounds '()
                          :mood-func 'update-mood-default
                          :mood-init #f
                          :ocean #f
                          :sky #t
                          :use-camera-other #f
                          :continues '((new 'static 'continue-point
                                  :name "wasall-start"
                                  :level 'wasall
                                  :flags (continue-flags game-start)
                                  :trans (new 'static 'vector :x (meters -38.3113) :y (meters 16) :z (meters 124.927) :w 1.0)
                                  :quat (new 'static 'vector :y -0.4833 :w -0.8754)
                                  :camera-trans (new 'static 'vector :x (meters -48.3764) :y (meters 20.5) :z (meters 124.3) :w 1.0)
                                  :camera-rot (new 'static 'inline-array vector3s 3
                                    (new 'static 'vector3s :data (new 'static 'array float 3 0.0524 0.6814 -0.05))
                                    (new 'static 'vector3s :data (new 'static 'array float 3 0.0524 0.6814 -0.05))
                                    (new 'static 'vector3s :data (new 'static 'array float 3 0.0524 0.6814 -0.05))
                                    )
                                  :on-goto #f
                                  :vis-nick 'wasall
                                  :want (new 'static 'inline-array level-buffer-state 6
                                    (new 'static 'level-buffer-state :name 'wasall :display? 'display :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    )
                                  :want-sound (new 'static 'array symbol 3 #f #f #f)
                                  )
                                )
                          :tasks '()
                          :priority 100
                          :load-commands '()
                          :alt-load-commands '()
                          :bsp-mask #xffffffffffffffff
                          :buttom-height (meters -20)
                          :run-packages '()
                          :wait-for-load #t
                          :login-func #f
                          :activate-func #f
                          :deactivate-func #f
                          :kill-func #f
                          :borrow-level (new 'static 'array symbol 2 #f #f)
                          :borrow-display? (new 'static 'array symbol 2 #f #f)
                          :texture-anim-tfrag #f
                          :texture-anim-pris #f
                          :texture-anim-shrub #f
                          :texture-anim-alpha #f
                          :texture-anim-water #f
                          :texture-anim-twarp #f
                          :texture-anim-pris2 #f
                          :texture-anim-sprite #f
                          :texture-anim-map #f
                          :texture-anim-sky #f
                          :draw-priority 10.0
                          :fog-height 327680.0
                          :bigmap-id (bigmap-id bigmap-id-20)
                          :ocean-near-translucent? #t
                          :ocean-far? #f
                          :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                          :max-rain 1.0
                          :fog-mult 1.0
                          :ocean-alpha 1.0
                          :extra-sound-bank #f
                          )
          )
  (define stadocc (new 'static 'level-load-info
                          :index 1
                          :name 'stadocc
                          :visname 'stadocc-vis
                          :nickname 'stadocc
                          :dbname 'stadocc
                          :taskname 'default
                          :packages '()
                          :memory-mode (load-buffer-mode large)
                          :music-bank #f
                          :ambient-sounds '()
                          :mood-func 'update-mood-default
                          :mood-init #f
                          :ocean #f
                          :sky #t
                          :use-camera-other #f
                          :continues '((new 'static 'continue-point
                                  :name "stadocc-start"
                                  :level 'stadocc
                                  :flags (continue-flags game-start)
                                  :trans (new 'static 'vector :x (meters -38.3113) :y (meters 16) :z (meters 124.927) :w 1.0)
                                  :quat (new 'static 'vector :y -0.4833 :w -0.8754)
                                  :camera-trans (new 'static 'vector :x (meters -48.3764) :y (meters 20.5) :z (meters 124.3) :w 1.0)
                                  :camera-rot (new 'static 'inline-array vector3s 3
                                    (new 'static 'vector3s :data (new 'static 'array float 3 0.0524 0.6814 -0.05))
                                    (new 'static 'vector3s :data (new 'static 'array float 3 0.0524 0.6814 -0.05))
                                    (new 'static 'vector3s :data (new 'static 'array float 3 0.0524 0.6814 -0.05))
                                    )
                                  :on-goto #f
                                  :vis-nick 'stadocc
                                  :want (new 'static 'inline-array level-buffer-state 6
                                    (new 'static 'level-buffer-state :name 'stadocc :display? 'display :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    (new 'static 'level-buffer-state :name #f :display? #f :force-vis? #f :force-inside? #f)
                                    )
                                  :want-sound (new 'static 'array symbol 3 #f #f #f)
                                  )
                                )
                          :tasks '()
                          :priority 100
                          :load-commands '()
                          :alt-load-commands '()
                          :bsp-mask #xffffffffffffffff
                          :buttom-height (meters -20)
                          :run-packages '()
                          :wait-for-load #t
                          :login-func #f
                          :activate-func #f
                          :deactivate-func #f
                          :kill-func #f
                          :borrow-level (new 'static 'array symbol 2 #f #f)
                          :borrow-display? (new 'static 'array symbol 2 #f #f)
                          :texture-anim-tfrag #f
                          :texture-anim-pris #f
                          :texture-anim-shrub #f
                          :texture-anim-alpha #f
                          :texture-anim-water #f
                          :texture-anim-twarp #f
                          :texture-anim-pris2 #f
                          :texture-anim-sprite #f
                          :texture-anim-map #f
                          :texture-anim-sky #f
                          :draw-priority 10.0
                          :fog-height 327680.0
                          :bigmap-id (bigmap-id bigmap-id-20)
                          :ocean-near-translucent? #t
                          :ocean-far? #f
                          :mood-range (new 'static 'mood-range :data (new 'static 'array float 4 0.0 1.0 0.0 1.0))
                          :max-rain 1.0
                          :fog-mult 1.0
                          :ocean-alpha 1.0
                          :extra-sound-bank #f
                          )
          )
  )


(#when DEMO_HACK
  (set! (-> ctywide memory-mode) (load-buffer-mode small-center))
  (set! (-> demo memory-mode) (load-buffer-mode small-edge))
  )

(#when PC_PORT
  (set! (-> sewesc activate-func) 'sewesc-activate)
  (set! (-> sewesc deactivate-func) 'sewesc-deactivate)
  )

(define *level-load-list* '(default-level
                             intro
                             demo
                             title
                             vinroom
                             drillmid
                             drill
                             drillb
                             drillmtn
                             sewer
                             sewerb
                             sewesc
                             sewescb
                             tomba
                             tombb
                             tombc
                             tombd
                             tombe
                             tombext
                             tombboss
                             under
                             underb
                             palcab
                             palshaft
                             palboss
                             palroof
                             palout
                             throne
                             lbrnermk
                             lashthrn
                             lthrnout
                             palent
                             prison
                             ldjakbrn
                             lprsncst
                             forexita
                             forexitb
                             forresca
                             forrescb
                             fordumpa
                             fordumpb
                             fordumpc
                             fordumpd
                             strip
                             ruins
                             sagehut
                             atoll
                             atollext
                             mountain
                             mtnext
                             forest
                             forestb
                             mincan
                             ctywide
                             lwidea
                             lwideb
                             lwidec
                             ctykora
                             ctyasha
                             ctygena
                             ctygenb
                             ctygenc
                             ctysluma
                             ctyslumb
                             ctyslumc
                             ctyport
                             ljkdxash
                             ctyfarma
                             ctyfarmb
                             ctyinda
                             consite
                             consiteb
                             ctyindb
                             ctymarka
                             ctymarkb
                             ctypal
                             stadium
                             stadiumb
                             stadiumc
                             stadiumd
                             skatea
                             garage
                             stadblmp
                             lwidesta
                             lerrol
                             lkeirift
                             lracelit
                             lracebb
                             lracebf
                             lracecb
                             lracecf
                             lracedb
                             lracedf
                             lgarcsta
                             lsamergd
                             lerbrngd
                             lsmysbrt
                             lashgrd
                             onintent
                             ltentout
                             ltentob
                             kiosk
                             oracle
                             hideout
                             ltrntess
                             ltrnkrkd
                             ltrnysam
                             lysamsam
                             lyskdcd
                             lkiddoge
                             lhelldog
                             lpackage
                             lsack
                             lportrun
                             lshuttle
                             lmeetbrt
                             lpower
                             lerlchal
                             lprtrace
                             lbombbot
                             lbbush
                             lprotect
                             hiphog
                             ltess
                             lhipout
                             lwhack
                             lguard
                             lcguard
                             lerltess
                             gungame
                             dig1
                             dig3a
                             dig3b
                             caspad
                             castle
                             casboss
                             casext
                             cascity
                             village1
                             introcst
                             lcitylow
                             lintcstb
                             ljakdax
                             nest
                             nestb
                             outrocst
                             portwall
                             loutcstb
                             island1
                             skatepark
                             halfpipe
                             vistest
                             woodstest
                             tobytest
                             chartest
                             dptest
                             ctyfence
                             )
        )

(#when USE_PS3_LEVELS
  (cons! *level-load-list* '4aaron)
  (cons! *level-load-list* '4pal01)
  (cons! *level-load-list* 'bsbs)
  (cons! *level-load-list* 'eitest)
  (cons! *level-load-list* 'miketest)
  (cons! *level-load-list* 'tatetest)
  (cons! *level-load-list* 'teststdc)
  (cons! *level-load-list* 'teststdd)
  (cons! *level-load-list* 'wasall)
  (cons! *level-load-list* 'stadocc)
  )