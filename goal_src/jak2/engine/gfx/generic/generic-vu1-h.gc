;;-*-Lisp-*-
(in-package goal)

;; name: generic-vu1-h.gc
;; name in dgo: generic-vu1-h
;; dgos: ENGINE, GAME

;; DECOMP BEGINS

(deftype pris-mtx (structure)
  ((data   float   32      :offset-assert   0)
   (vector vector  8       :offset          0)
   (t-mtx  matrix  :inline :offset          0)
   (n-mtx  matrix3 :inline :offset         64)
   (scale  vector  :inline :offset        112)
   )
  :method-count-assert 9
  :size-assert         #x80
  :flag-assert         #x900000080
  )


(deftype generic-pris-mtx-save (structure)
  ((loc-mtx pris-mtx :inline :offset-assert   0)
   (par-mtx pris-mtx :inline :offset-assert 128)
   (dif-mtx pris-mtx :inline :offset-assert 256)
   )
  :method-count-assert 9
  :size-assert         #x180
  :flag-assert         #x900000180
  )


(deftype generic-constants (structure)
  ((fog         vector     :inline :offset-assert   0)
   (adgif       gs-gif-tag :inline :offset-assert  16)
   (hvdf-offset vector     :inline :offset-assert  32)
   (hmge-scale  vector     :inline :offset-assert  48)
   (invh-scale  vector     :inline :offset-assert  64)
   (guard       vector     :inline :offset-assert  80)
   (flush       qword      :inline :offset-assert  96)
   (stores      qword      :inline :offset-assert 112)
   )
  :method-count-assert 9
  :size-assert         #x80
  :flag-assert         #x900000080
  )


(deftype generic-shrub-constants (structure)
  ((shrub-giftag generic-gif-tag :inline :offset-assert   0)
   (shrub-adnop  qword           :inline :offset-assert  16)
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )


(deftype gcf-shader (structure)
  ((adgif  uint128      5       :offset-assert   0)
   (shader adgif-shader :inline :offset          0)
   (pos    uint32               :offset         12)
   (num    uint32               :offset         28)
   )
  :method-count-assert 9
  :size-assert         #x50
  :flag-assert         #x900000050
  )


(deftype gcf-control (structure)
  ((matrix                   matrix          :inline          :offset-assert   0)
   (giftag                   generic-gif-tag :inline          :offset-assert  64)
   (adnops                   uint32          2                :offset-assert  80)
   (num-strips               uint32                           :offset         76)
   (unknown-gcf-jki1n2ik1jn2 uint32                           :offset         80)
   (unknown-gcf-dk12n1d      uint32                           :offset         84)
   (unknown-gcf-kj2n423      uint32                           :offset         88)
   (num-dps                  uint32                           :offset         92)
   (unknown-gcf-kjn345       uint32                           :offset         96)
   (unknown-gcf-asdas        uint32                           :offset        100)
   (unknown-gcf-asdkh        uint32                           :offset        104)
   (kick-offset              uint32                           :offset        108)
   (shader                   gcf-shader      :inline :dynamic :offset-assert 112)
   )
  :method-count-assert 9
  :size-assert         #x70
  :flag-assert         #x900000070
  )


(deftype gcf-vertex (structure)
  ((tex vector4w       :inline :offset-assert   0)
   (clr gs-packed-rgba :inline :offset-assert  16)
   (pos gs-packed-xyzw :inline :offset-assert  32)
   )
  :method-count-assert 9
  :size-assert         #x30
  :flag-assert         #x900000030
  )
