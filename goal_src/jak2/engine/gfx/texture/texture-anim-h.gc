;;-*-Lisp-*-
(in-package goal)

;; name: texture-anim-h.gc
;; name in dgo: texture-anim-h
;; dgos: ENGINE, GAME

(define-extern update-texture-anim (function bucket-id texture-anim-array none))

;; NOTE - for intro-scenes
(define-extern set-jakb-prison-texture-morph! (function float none))

;; DECOMP BEGINS

(deftype texture-anim-layer (structure)
  ((interpolated-color     vector :inline) ;; added
   (interpolated-scale-offset vector :inline)
   (interpolated-st-scale-offset vector :inline)
   (interpolated-qs vector :inline)
   (interpolated-rot vector :inline)
   (extra           vector  :inline :offset 240)
   (func            (function dma-buffer uint int int texture-anim-layer float int) :offset 256)
   (func-id         symbol          :offset 256)
   (init-func       (function texture-anim-layer int) :offset 260)
   (init-func-id    symbol          :offset 260)
   (tex             texture         :offset 264)
   (start-time      float           :offset 268)
   (end-time        float           :offset 272)
   (tex-name        string          :offset 276)
   (test            gs-test         :offset 280)
   (alpha           gs-alpha        :offset 288)
   (clamp           gs-clamp        :offset 296)

   (start-vectors   vector 5 :inline :offset 80) ;; added

   (start-color     vector  :inline :offset 80)
   (start-scale     vector2 :inline :offset 96)
   (start-offset    vector2 :inline :offset 104)
   (start-st-scale  vector2 :inline :offset 112)
   (start-st-offset vector2 :inline :offset 120)
   (start-qs        vector  :inline :offset 128)
   (start-rot       degrees         :offset 144)
   (start-st-rot    degrees         :offset 148)

   (end-vectors     vector 5 :inline :offset 160) ;; added

   (end-color       vector  :inline :offset 160)
   (end-scale       vector2 :inline :offset 176)
   (end-offset      vector2 :inline :offset 184)
   (end-scale-offset vector :inline :offset 176)
   (end-st-scale    vector2 :inline :offset 192)
   (end-st-offset   vector2 :inline :offset 200)
   (end-qs          vector  :inline :offset 208)
   (end-rot         degrees         :offset 224)
   (end-st-rot      degrees         :offset 228)
   )
  :method-count-assert 11
  :size-assert         #x130
  :flag-assert         #xb00000130
  (:methods
    (initialize-texture! (_type_) _type_ 9)
    (clear-texture! (_type_) _type_ 10)
    )
  )


(deftype texture-anim (structure)
  ((num-layers   uint32                               :offset-assert   0)
   (func         (function dma-buffer texture-anim int)          :offset-assert   4)
   (func-id      symbol                               :offset          4)
   (init-func    (function texture-anim int)          :offset-assert   8)
   (init-func-id symbol                               :offset          8)
   (tex          texture                              :offset-assert  12)
   (tex-name     string                               :offset-assert  16)
   (extra        vector                      :inline  :offset-assert  32)
   (color        rgba                                 :offset-assert  48)
   (frame-time   float                                :offset-assert  52)
   (frame-delta  float                                :offset-assert  56)
   (frame-mod    float                                :offset-assert  60)
   (test         gs-test                              :offset-assert  64)
   (alpha        gs-alpha                             :offset-assert  72)
   (clamp        gs-clamp                             :offset-assert  80)
   (data         texture-anim-layer          :dynamic :offset-assert  88)
   )
  :method-count-assert 11
  :size-assert         #x58
  :flag-assert         #xb00000058
  (:methods
    (init-textures! (_type_) _type_ 9)
    (clear-textures! (_type_) _type_ 10)
    )
  )


(deftype texture-anim-array (array)
  ((array-data texture-anim :dynamic :offset-assert  16)
   )
  :method-count-assert 11
  :size-assert         #x10
  :flag-assert         #xb00000010
  (:methods
    (init! (_type_) _type_ 9)
    (clear! (_type_) _type_ 10)
    )
  )


(deftype texture-anim-work (structure)
  ((erase-tmpl   dma-gif-packet :inline   :offset-assert   0)
   (draw-tmpl    dma-gif-packet :inline   :offset-assert  32)
   (draw2-tmpl   dma-gif-packet :inline   :offset-assert  64)
   (fill-tmpl    dma-gif-packet :inline   :offset-assert  96)
   (adgif-tmpl   dma-gif-packet :inline   :offset-assert 128)
   (corner0      vector         :inline   :offset-assert 160)
   (corner1      vector         :inline   :offset-assert 176)
   (corner2      vector         :inline   :offset-assert 192)
   (corner3      vector         :inline   :offset-assert 208)
   (const        vector         :inline   :offset-assert 224)
   (random       vector4w       8 :inline :offset-assert 240)
   (random-index uint8                    :offset-assert 368)
   )
  :method-count-assert 9
  :size-assert         #x171
  :flag-assert         #x900000171
  )


(deftype clut16x16 (structure)
  ((clut rgba 256 :offset-assert   0)
   )
  :method-count-assert 9
  :size-assert         #x400
  :flag-assert         #x900000400
  )


(deftype noise8x8 (structure)
  ((image uint8 64 :offset-assert   0)
   )
  :method-count-assert 9
  :size-assert         #x40
  :flag-assert         #x900000040
  )


(deftype noise16x16 (structure)
  ((image uint8 256 :offset-assert   0)
   )
  :method-count-assert 9
  :size-assert         #x100
  :flag-assert         #x900000100
  )


(deftype noise32x32 (structure)
  ((image uint8 1024 :offset-assert   0)
   )
  :method-count-assert 9
  :size-assert         #x400
  :flag-assert         #x900000400
  )


(deftype noise64x64 (structure)
  ((image uint8 4096 :offset-assert   0)
   )
  :method-count-assert 9
  :size-assert         #x1000
  :flag-assert         #x900001000
  )


(deftype noise128x128 (structure)
  ((image uint8 16384 :offset-assert   0)
   )
  :method-count-assert 9
  :size-assert         #x4000
  :flag-assert         #x900004000
  )


(deftype fog8x256 (structure)
  ((image uint8 256 :offset-assert   0)
   )
  :method-count-assert 9
  :size-assert         #x100
  :flag-assert         #x900000100
  )


(deftype fog-texture-work (structure)
  ((corner      vector 4 :inline :offset-assert   0)
   (const       vector :inline   :offset-assert  64)
   (min-corner  vector :inline   :offset-assert  80)
   (max-corner  vector :inline   :offset-assert  96)
   (fog-near    float            :offset-assert 112)
   (fog-far     float            :offset-assert 116)
   (fog-delta   float            :offset-assert 120)
   (alpha-near  float            :offset-assert 124)
   (alpha-far   float            :offset-assert 128)
   (alpha-delta float            :offset-assert 132)
   (color       uint32           :offset-assert 136)
   )
  :method-count-assert 9
  :size-assert         #x8c
  :flag-assert         #x90000008c
  )


(define *clut-translate* (new 'static 'array uint8 256
                           #x0
                           #x1
                           #x2
                           #x3
                           #x4
                           #x5
                           #x6
                           #x7
                           #x10
                           #x11
                           #x12
                           #x13
                           #x14
                           #x15
                           #x16
                           #x17
                           #x8
                           #x9
                           #xa
                           #xb
                           #xc
                           #xd
                           #xe
                           #xf
                           #x18
                           #x19
                           #x1a
                           #x1b
                           #x1c
                           #x1d
                           #x1e
                           #x1f
                           #x20
                           #x21
                           #x22
                           #x23
                           #x24
                           #x25
                           #x26
                           #x27
                           #x30
                           #x31
                           #x32
                           #x33
                           #x34
                           #x35
                           #x36
                           #x37
                           #x28
                           #x29
                           #x2a
                           #x2b
                           #x2c
                           #x2d
                           #x2e
                           #x2f
                           #x38
                           #x39
                           #x3a
                           #x3b
                           #x3c
                           #x3d
                           #x3e
                           #x3f
                           #x40
                           #x41
                           #x42
                           #x43
                           #x44
                           #x45
                           #x46
                           #x47
                           #x50
                           #x51
                           #x52
                           #x53
                           #x54
                           #x55
                           #x56
                           #x57
                           #x48
                           #x49
                           #x4a
                           #x4b
                           #x4c
                           #x4d
                           #x4e
                           #x4f
                           #x58
                           #x59
                           #x5a
                           #x5b
                           #x5c
                           #x5d
                           #x5e
                           #x5f
                           #x60
                           #x61
                           #x62
                           #x63
                           #x64
                           #x65
                           #x66
                           #x67
                           #x70
                           #x71
                           #x72
                           #x73
                           #x74
                           #x75
                           #x76
                           #x77
                           #x68
                           #x69
                           #x6a
                           #x6b
                           #x6c
                           #x6d
                           #x6e
                           #x6f
                           #x78
                           #x79
                           #x7a
                           #x7b
                           #x7c
                           #x7d
                           #x7e
                           #x7f
                           #x80
                           #x81
                           #x82
                           #x83
                           #x84
                           #x85
                           #x86
                           #x87
                           #x90
                           #x91
                           #x92
                           #x93
                           #x94
                           #x95
                           #x96
                           #x97
                           #x88
                           #x89
                           #x8a
                           #x8b
                           #x8c
                           #x8d
                           #x8e
                           #x8f
                           #x98
                           #x99
                           #x9a
                           #x9b
                           #x9c
                           #x9d
                           #x9e
                           #x9f
                           #xa0
                           #xa1
                           #xa2
                           #xa3
                           #xa4
                           #xa5
                           #xa6
                           #xa7
                           #xb0
                           #xb1
                           #xb2
                           #xb3
                           #xb4
                           #xb5
                           #xb6
                           #xb7
                           #xa8
                           #xa9
                           #xaa
                           #xab
                           #xac
                           #xad
                           #xae
                           #xaf
                           #xb8
                           #xb9
                           #xba
                           #xbb
                           #xbc
                           #xbd
                           #xbe
                           #xbf
                           #xc0
                           #xc1
                           #xc2
                           #xc3
                           #xc4
                           #xc5
                           #xc6
                           #xc7
                           #xd0
                           #xd1
                           #xd2
                           #xd3
                           #xd4
                           #xd5
                           #xd6
                           #xd7
                           #xc8
                           #xc9
                           #xca
                           #xcb
                           #xcc
                           #xcd
                           #xce
                           #xcf
                           #xd8
                           #xd9
                           #xda
                           #xdb
                           #xdc
                           #xdd
                           #xde
                           #xdf
                           #xe0
                           #xe1
                           #xe2
                           #xe3
                           #xe4
                           #xe5
                           #xe6
                           #xe7
                           #xf0
                           #xf1
                           #xf2
                           #xf3
                           #xf4
                           #xf5
                           #xf6
                           #xf7
                           #xe8
                           #xe9
                           #xea
                           #xeb
                           #xec
                           #xed
                           #xee
                           #xef
                           #xf8
                           #xf9
                           #xfa
                           #xfb
                           #xfc
                           #xfd
                           #xfe
                           #xff
                           )
        )
