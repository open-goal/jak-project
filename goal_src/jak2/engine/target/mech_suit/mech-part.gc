;;-*-Lisp-*-
(in-package goal)

;; name: mech-part.gc
;; name in dgo: mech-part
;; dgos: DRILLMTN, UNB, RUI

;; DECOMP BEGINS

(defpart 939
  :init-specs ((:texture (new 'static 'texture-id :index #x90 :page #xc))
    (:birth-func 'birth-func-set-quat)
    (:num 1.0)
    (:y (meters 0))
    (:scale-x (meters 1))
    (:scale-y (meters 3))
    (:r 128.0 128.0)
    (:g 64.0 64.0)
    (:b :copy g)
    (:a 128.0 64.0)
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    )
  )

(defpart 940
  :init-specs ((:texture (new 'static 'texture-id :index #xbb :page #xc))
    (:num 1.0)
    (:y (meters -0.3))
    (:scale-x (meters 1.5) (meters 0.1))
    (:rot-x (degrees 2.25))
    (:scale-y :copy scale-x)
    (:r 255.0)
    (:g 64.0 64.0)
    (:b 0.0)
    (:a 16.0 8.0)
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 409.6)
    )
  )

(defpart 941
  :init-specs ((:texture (new 'static 'texture-id :page #xc))
    (:num 1.0 4.0)
    (:y (meters 0) (meters -0.25))
    (:scale-x (meters 0.2) (meters 0.2))
    (:rot-z (degrees 0) 1 (degrees 180))
    (:scale-y (meters 1) (meters 0.6))
    (:r 192.0)
    (:g 64.0)
    (:b 0.0)
    (:a 0.0 16.0)
    (:vel-y (meters -0.06666667) (meters -0.016666668))
    (:scalevel-x (meters 0.033333335))
    (:scalevel-y (meters 0.006666667))
    (:fade-r -2.0)
    (:fade-g 2.0)
    (:fade-b 5.0)
    (:fade-a 0.32)
    (:accel-x (meters 0) (meters 0.0016666667))
    (:accel-y (meters 0.00016666666) (meters 0.0005))
    (:friction 0.94)
    (:timer (seconds 1))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-12 sp-cpuinfo-flag-14))
    (:next-time (seconds 0.085))
    (:next-launcher 942)
    (:rotate-y (degrees 0) (degrees 360))
    )
  )

(defpart 942
  :init-specs ((:r 64.0 64.0)
    (:g 64.0 64.0)
    (:b 64.0 64.0)
    (:fade-r 0.0)
    (:fade-g 0.0)
    (:fade-b 0.0)
    (:fade-a -0.128 -0.256)
    )
  )

(defpart 943
  :init-specs ((:texture (new 'static 'texture-id :index #xc9 :page #xc))
    (:num 0.1 0.1)
    (:y (meters 0.25) (meters -0.5))
    (:scale-x (meters 0.05))
    (:scale-y (meters 0.5))
    (:r 192.0 64.0)
    (:g 0.0 128.0)
    (:b 0.0)
    (:a 128.0)
    (:vel-y (meters -0.033333335) (meters -0.026666667))
    (:scalevel-x (meters 0.001))
    (:scalevel-y (meters -0.017))
    (:fade-g 0.0)
    (:accel-x (meters 0) (meters 0.0016666667))
    (:accel-y (meters 0.00016666666) (meters 0.0005))
    (:friction 0.96)
    (:timer (seconds 0.167) (seconds 0.247))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 sp-cpuinfo-flag-12 sp-cpuinfo-flag-14))
    (:next-time (seconds 0.1))
    (:next-launcher 944)
    (:rotate-y (degrees 0) (degrees 360))
    )
  )

(defpart 944
  :init-specs ((:scalevel-x (meters 0)) (:scalevel-y (meters 0)))
  )

(defpart 945
  :init-specs ((:num 0.6)
    (:rot-x 8)
    (:r 1638.4)
    (:g 1331.2)
    (:b 1433.6)
    (:vel-y (meters -0.06666667) (meters -0.016666668))
    (:fade-r 32.768)
    (:fade-g 26.623999)
    (:fade-b 28.671999)
    (:accel-x (meters 0) (meters 0.0016666667))
    (:friction 0.94)
    (:timer (seconds 0.335))
    (:flags (distort))
    (:next-time (seconds 0.167))
    (:next-launcher 946)
    (:rotate-y (degrees 0) (degrees 360))
    )
  )

(defpart 946
  :init-specs ((:fade-r 0.0) (:fade-g 0.0) (:fade-b -4.096))
  )

(defun mech-spawn-thruster ((arg0 mech-info) (arg1 vector) (arg2 vector) (arg3 float) (arg4 float))
  "Draws the mech's thrusters"
  (rlet ((acc :class vf)
         (vf0 :class vf)
         (vf4 :class vf)
         (vf5 :class vf)
         (vf6 :class vf)
         (vf7 :class vf)
         )
    (init-vf0-vector)
    (set! (-> arg0 part-thruster) (-> *part-id-table* 939))
    (set! (-> arg0 part-thruster-scale-x) (-> *part-id-table* 939 init-specs 4))
    (set! (-> arg0 part-thruster-scale-y) (-> *part-id-table* 939 init-specs 5))
    (let ((s1-0 (new 'stack-no-clear 'quaternion))
          (s0-0 (new 'stack-no-clear 'vector))
          )
      (forward-up->quaternion s1-0 arg2 (new 'static 'vector :y 1.0 :w 1.0))
      (quaternion-rotate-local-x! s1-0 s1-0 32768.0)
      (let ((a0-3 s0-0))
        (let ((v1-10 arg1))
          (let ((a1-4 (* 0.5 arg4)))
            (.mov vf7 a1-4)
            )
          (.lvf vf5 (&-> arg2 quad))
          (.lvf vf4 (&-> v1-10 quad))
          )
        (.add.x.vf vf6 vf0 vf0 :mask #b1000)
        (.mul.x.vf acc vf5 vf7 :mask #b111)
        (.add.mul.w.vf vf6 vf4 vf0 acc :mask #b111)
        (.svf (&-> a0-3 quad) vf6)
        )
      (set! (-> arg0 part-thruster-scale-x initial-valuef) arg3)
      (set! (-> arg0 part-thruster-scale-y initial-valuef) arg4)
      (dotimes (s4-1 2)
        (quaternion-rotate-local-z! s1-0 s1-0 16384.0)
        (quaternion-copy! (-> arg0 part-quat) s1-0)
        (let ((t9-4 sp-launch-particles-var)
              (a0-6 (-> arg0 particle-system-3d))
              (a1-7 (-> arg0 part-thruster))
              (a2-4 *launch-matrix*)
              )
          (set! (-> a2-4 trans quad) (-> s0-0 quad))
          (t9-4
            (the-as sparticle-system a0-6)
            (the-as sparticle-launcher a1-7)
            a2-4
            (the-as sparticle-launch-state #f)
            (the-as sparticle-launch-control #f)
            1.0
            )
          )
        )
      )
    (let ((t9-5 sp-launch-particles-var)
          (a0-7 *sp-particle-system-2d*)
          (a1-8 (-> *part-id-table* 945))
          (a2-5 *launch-matrix*)
          )
      (set! (-> a2-5 trans quad) (-> arg1 quad))
      (t9-5 a0-7 a1-8 a2-5 (the-as sparticle-launch-state #f) (the-as sparticle-launch-control #f) 1.0)
      )
    (let ((t9-6 sp-launch-particles-var)
          (a0-8 *sp-particle-system-2d*)
          (a1-9 (-> *part-id-table* 940))
          (a2-6 *launch-matrix*)
          )
      (set! (-> a2-6 trans quad) (-> arg1 quad))
      (t9-6 a0-8 a1-9 a2-6 (the-as sparticle-launch-state #f) (the-as sparticle-launch-control #f) 1.0)
      )
    (cond
      ((!= (-> *setting-control* user-current under-water-pitch-mod) 0.0)
       (let ((t9-7 sp-launch-particles-var)
             (a0-9 *sp-particle-system-2d*)
             (a1-10 (-> *part-id-table* 945))
             (a2-7 *launch-matrix*)
             )
         (set! (-> a2-7 trans quad) (-> arg1 quad))
         (t9-7 a0-9 a1-10 a2-7 (the-as sparticle-launch-state #f) (the-as sparticle-launch-control #f) 1.0)
         )
       )
      (else
        (let ((t9-8 sp-launch-particles-var)
              (a0-10 *sp-particle-system-2d*)
              (a1-11 (-> *part-id-table* 941))
              (a2-8 *launch-matrix*)
              )
          (set! (-> a2-8 trans quad) (-> arg1 quad))
          (t9-8 a0-10 a1-11 a2-8 (the-as sparticle-launch-state #f) (the-as sparticle-launch-control #f) 1.0)
          )
        (let ((t9-9 sp-launch-particles-var)
              (a0-11 *sp-particle-system-2d*)
              (a1-12 (-> *part-id-table* 943))
              (a2-9 *launch-matrix*)
              )
          (set! (-> a2-9 trans quad) (-> arg1 quad))
          (t9-9 a0-11 a1-12 a2-9 (the-as sparticle-launch-state #f) (the-as sparticle-launch-control #f) 1.0)
          )
        )
      )
    0
    (none)
    )
  )

(defpart 947
  :init-specs ((:texture (new 'static 'texture-id :page #xc))
    (:num 3.0)
    (:x (meters -16) (meters 32))
    (:y (meters 0) (meters 12))
    (:z (meters -16) (meters 32))
    (:scale-x (meters 0.1) (meters 0.3))
    (:rot-x 4)
    (:rot-z (degrees 0) (degrees 3600))
    (:scale-y (meters 0.1) (meters 0.1))
    (:r 0.0 64.0)
    (:g 64.0 128.0)
    (:b 64.0 196.0)
    (:a 0.0)
    (:vel-y (meters -0.0033333334) (meters 0.006666667))
    (:rotvel-z (degrees -0.4) (degrees 0.8))
    (:fade-a 0.21333334 0.21333334)
    (:timer (seconds 2.5))
    (:flags (sp-cpuinfo-flag-2))
    (:userdata 0.0)
    (:func 'check-water-level-above-and-die)
    (:next-time (seconds 0.5))
    (:next-launcher 948)
    (:conerot-x (degrees 0) (degrees 3600))
    (:conerot-y (degrees 0) (degrees 3600))
    (:rotate-y (degrees 0) (degrees 3600))
    (:conerot-radius (meters -3) (meters 8))
    )
  )

(defpart 948
  :init-specs ((:fade-a 0.0) (:next-time (seconds 1)) (:next-launcher 949))
  )

(defpart 949
  :init-specs ((:fade-a -0.21333334 -0.21333334))
  )

(defpart 950
  :init-specs ((:texture (new 'static 'texture-id :index #x21 :page #xc))
    (:num 0.2)
    (:x (meters -24) (meters 48))
    (:y (meters -4) (meters 4))
    (:z (meters -24) (meters 48))
    (:scale-x (meters 0.15) (meters 0.15))
    (:scale-y (meters 0.1) (meters 0.1))
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 0.0)
    (:vel-y (meters 0.008333334) (meters 0.005))
    (:fade-a 0.16)
    (:timer (seconds 16))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:userdata 0.0)
    (:func 'check-water-level-above-and-die)
    (:next-time (seconds 0.33) (seconds 0.657))
    (:next-launcher 951)
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 951
  :init-specs ((:fade-a 0.0) (:next-time (seconds 1) (seconds 5.997)) (:next-launcher 952))
  )

(defpart 952
  :init-specs ((:scalevel-x (meters -0.00033333333) (meters -0.00066666666))
    (:scalevel-y :copy scalevel-x)
    (:fade-a -0.16)
    (:accel-y (meters -0.0001) (meters -0.0001))
    )
  )

(defpart 953
  :init-specs ((:texture (new 'static 'texture-id :index #x21 :page #xc))
    (:num 1.0)
    (:scale-x (meters 0.15) (meters 0.15))
    (:scale-y (meters 0.1) (meters 0.1))
    (:r 255.0)
    (:g 255.0)
    (:b 255.0)
    (:a 0.0)
    (:vel-y (meters 0.008333334) (meters 0.005))
    (:fade-a 0.16)
    (:accel-y (meters 0.0002))
    (:friction 0.97 0.01)
    (:timer (seconds 4))
    (:flags (sp-cpuinfo-flag-0 sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:userdata 0.0)
    (:func 'check-water-level-above-and-die)
    (:next-time (seconds 0.33) (seconds 0.657))
    (:next-launcher 954)
    (:conerot-x (degrees 0) (degrees 3600))
    (:conerot-y (degrees 0) (degrees 3600))
    (:conerot-radius (meters 0) (meters 0.5))
    )
  )

(defpart 954
  :init-specs ((:fade-a 0.0) (:next-time (seconds 1) (seconds 0.997)) (:next-launcher 952))
  )

(defpartgroup group-mech-explode-death
  :id 202
  :duration (seconds 0.25)
  :linger-duration (seconds 2)
  :bounds (static-bspherem 0 0 0 2)
  :parts ((sp-item 159) (sp-item 160))
  )

(defpart 955
  :init-specs ((:num 4.0)
    (:x (meters -1) (meters 3))
    (:y (meters 0) (meters 4))
    (:rot-x 6)
    (:r 4096.0)
    (:g 2662.4)
    (:b 2867.2)
    (:vel-y (meters 0.0033333334) (meters 0.01))
    (:accel-y (meters 0.0016666667) (meters 0.00033333333))
    (:friction 0.9)
    (:timer (seconds 0.4))
    (:flags (distort))
    (:next-time (seconds 0.135) (seconds 0.13))
    (:next-launcher 956)
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 956
  :init-specs ((:fade-b -5.12))
  )

(defpart 957
  :init-specs ((:texture (new 'static 'texture-id :page #xc))
    (:birth-func 'birth-func-texture-group)
    (:num 16.0 4.0)
    (:x (meters -1) (meters 3))
    (:y (meters 0) (meters 4))
    (:scale-x (meters 0.5) (meters 0.25))
    (:scale-y (meters 1) (meters 0.25))
    (:r 255.0)
    (:g 0.0 128.0)
    (:b 0.0)
    (:a 32.0 32.0)
    (:vel-y (meters 0.0033333334) (meters 0.01))
    (:scalevel-x (meters 0.013333334) (meters 0.006666667))
    (:scalevel-y :copy scalevel-x)
    (:accel-y (meters 0.0016666667) (meters 0.00033333333))
    (:friction 0.9)
    (:timer (seconds 0.367))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:userdata :data (new 'static 'boxed-array :type int32 40 1 0 #xc00000 #xc0ca00 #xc0ca00))
    (:next-time (seconds 0.167))
    (:next-launcher 958)
    (:rotate-y (degrees 0) (degrees 3600))
    )
  )

(defpart 958
  :init-specs ((:fade-a -0.53333336 -0.53333336))
  )

(defpart 959
  :init-specs ((:texture (new 'static 'texture-id :index #xbb :page #xc))
    (:num 1.0)
    (:scale-x (meters 0.2) (meters 4))
    (:rot-x (degrees 11.25))
    (:rot-z (degrees 0) (degrees 8))
    (:scale-y :copy scale-x)
    (:r 0.0)
    (:g 64.0 64.0)
    (:b 255.0)
    (:a 32.0 64.0)
    (:timer (seconds 0.017))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3 glow))
    (:userdata 4096.0)
    (:conerot-x (degrees 0) (degrees 3600))
    (:conerot-y (degrees 0) (degrees 3600))
    (:conerot-radius (meters -0.1) (meters 0.5))
    )
  )

(defpart 960
  :init-specs ((:texture (new 'static 'texture-id :index #x92 :page #xc))
    (:num 2.0 4.0)
    (:scale-x (meters 2.5))
    (:rot-x 4)
    (:scale-y (meters 0.04) (meters 0.03))
    (:r 0.0)
    (:g 64.0 64.0)
    (:b 255.0)
    (:a 128.0)
    (:omega (degrees 0.01125) (degrees 0.01125))
    (:vel-y (meters 0.1) (meters 0.2))
    (:fade-g -2.55 -2.55)
    (:fade-b -2.0)
    (:fade-a -0.64 -0.64)
    (:accel-y (meters -0.0033333334) (meters -0.0033333334))
    (:friction 0.8 0.02)
    (:timer (seconds 0.335))
    (:flags (sp-cpuinfo-flag-2 sp-cpuinfo-flag-3))
    (:func 'sparticle-motion-blur)
    (:conerot-x (degrees 0) (degrees 3600))
    (:conerot-y (degrees 0) (degrees 3600))
    )
  )
