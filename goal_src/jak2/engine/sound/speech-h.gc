;;-*-Lisp-*-
(in-package goal)

;; name: speech-h.gc
;; name in dgo: speech-h
;; dgos: ENGINE, GAME


(defenum speech-type-flag
  :type uint8
  :bitfield #t
  (random-order 0)
  )

(defenum speech-channel-flag
  :type uint8
  :bitfield #t
  (disable 0)
  )

;; NOTE - for settings
(declare-type speech-control structure)
(define-extern *speech-control* speech-control)

;; DECOMP BEGINS

(deftype speech-type-info (structure)
  ((channel         uint8             :offset-assert   0)
   (flags           speech-type-flag  :offset-assert   1)
   (priority        int8              :offset-assert   2)
   (request-timeout uint16            :offset-assert   4)
   (min-delay       uint16            :offset-assert   6)
   (max-delay       uint16            :offset-assert   8)
   (delay           uint16            :offset-assert  10)
   (play-index      int16             :offset-assert  12)
   (list            basic             :offset-assert  16)
   )
  :method-count-assert 9
  :size-assert         #x14
  :flag-assert         #x900000014
  )

(deftype speech-request (structure)
  ((handle      uint64      :offset-assert   0)
   (time        time-frame  :offset-assert   8)
   (priority    float       :offset-assert  16)
   (speech-type int8        :offset-assert  20)
   )
  :pack-me
  :method-count-assert 9
  :size-assert         #x15
  :flag-assert         #x900000015
  )

(deftype speech-channel (structure)
  ((flags        speech-channel-flag         :offset-assert   0)
   (gui-channel  gui-channel                 :offset-assert   1)
   (delay        uint16                      :offset-assert   2)
   (id           uint32                      :offset-assert   4)
   (update-time  time-frame                  :offset-assert   8)
   (start-time   time-frame                  :offset-assert  16)
   (end-time     time-frame                  :offset-assert  24)
   (request      speech-request      :inline :offset-assert  32)
   (last-request speech-request      :inline :offset-assert  56)
   (target-pos   vector              :inline :offset-assert  80)
   (speech-table uint32                      :offset-assert  96)
   )
  :method-count-assert 14
  :size-assert         #x64
  :flag-assert         #xe00000064
  (:methods
    (speech-channel-method-9 () none 9)
    (speech-channel-method-10 () none 10)
    (speech-channel-method-11 () none 11)
    (speech-channel-method-12 () none 12)
    (speech-channel-method-13 () none 13)
    )
  )

(deftype speech-control (structure)
  ((channel-array speech-channel 2 :inline :offset-assert   0)
   (speech-table  uint32         57        :offset-assert 224)
   )
  :method-count-assert 17
  :size-assert         #x1c4
  :flag-assert         #x11000001c4
  (:methods
    (speech-control-method-9 () none 9)
    (speech-control-method-10 () none 10)
    (speech-control-method-11 () none 11)
    (speech-control-method-12 () none 12)
    (speech-control-method-13 () none 13)
    (speech-control-method-14 () none 14)
    (speech-control-method-15 () none 15)
    (speech-control-method-16 () none 16)
    )
  )
