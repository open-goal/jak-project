;;-*-Lisp-*-
(in-package goal)

;; name: game-task.gc
;; name in dgo: game-task
;; dgos: ENGINE, GAME

;; DECOMP BEGINS

(kmemopen global "game-info")

(let ((gp-0 *game-info*))
  (set! (-> gp-0 play-list)
        (new 'static 'boxed-array :type game-task-info
          (new 'static 'game-task-info :name "none" :pre-play-continue #f :play-continue #f :kiosk-play-continue #f)
          (new 'static 'game-task-info :name "complete" :pre-play-continue #f :play-continue #f :kiosk-play-continue #f)
          (new 'static 'game-task-info :name "dummy0" :pre-play-continue #f :play-continue #f :kiosk-play-continue #f)
          (new 'static 'game-task-info
            :name "eco-blue-button"
            :pre-play-continue #f
            :play-continue #f
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "eco-yellow-button"
            :pre-play-continue #f
            :play-continue #f
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "eco-red-button"
            :pre-play-continue #f
            :play-continue #f
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "fortress-escape"
            :text-name (text-id progress-missions-fortress-escape)
            :pre-play-node (game-task-node fortress-escape-start)
            :kiosk-play-node (game-task-node fortress-escape-introduction)
            :pre-play-continue #f
            :play-node (game-task-node fortress-escape-resolution)
            :play-continue "prison-start"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-help-kid"
            :text-name (text-id progress-missions-city-save-kid)
            :pre-play-node (game-task-node city-help-kid-introduction)
            :kiosk-play-node (game-task-node city-help-kid-battle)
            :pre-play-continue #f
            :play-node (game-task-node city-help-kid-introduction)
            :play-continue "ctyslumb-fort"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-vehicle-training"
            :pre-play-node (game-task-node city-vehicle-training-map)
            :kiosk-play-node (game-task-node city-vehicle-training-hover-zone-1)
            :pre-play-continue #f
            :play-node (game-task-node city-vehicle-training-hover-zone-1)
            :play-continue #f
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "ruins-tower"
            :text-name (text-id progress-missions-ruins-tower)
            :pre-play-node (game-task-node ruins-tower-introduction)
            :kiosk-play-node (game-task-node ruins-tower-resolution)
            :pre-play-continue "ctysluma-tower-intro"
            :play-node (game-task-node ruins-tower-resolution)
            :play-continue "ruins-start"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "atoll-water"
            :text-name (text-id progress-missions-atoll-water)
            :pre-play-node (game-task-node atoll-water-introduction)
            :kiosk-play-node (game-task-node atoll-water-find)
            :pre-play-continue "hideout-start"
            :play-node (game-task-node atoll-water-find)
            :play-continue "atoll-start"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "fortress-dump"
            :text-name (text-id progress-missions-fortress-dump)
            :pre-play-node (game-task-node fortress-dump-introduction)
            :kiosk-play-node (game-task-node fortress-dump-deal)
            :pre-play-continue "hideout-start"
            :play-node (game-task-node fortress-dump-deal)
            :play-continue "fordumpa-start"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-krew-delivery"
            :text-name (text-id progress-missions-city-krew-delivery)
            :pre-play-node (game-task-node city-krew-delivery-introduction)
            :kiosk-play-node (game-task-node city-krew-delivery-delivery)
            :pre-play-continue "hideout-start"
            :play-node (game-task-node city-krew-delivery-delivery)
            :play-continue "ctysluma-alley"
            :kiosk-play-continue "hideout-start"
            )
          (new 'static 'game-task-info
            :name "city-red-gun-training"
            :text-name (text-id progress-missions-city-red-gun-training)
            :pre-play-node (game-task-node city-krew-delivery-resolution)
            :kiosk-play-node (game-task-node city-red-gun-training-try-once)
            :pre-play-continue "hiphog-start"
            :play-node (game-task-node city-red-gun-training-try-once)
            :play-continue "gungame-start"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "atoll-sig"
            :text-name (text-id progress-missions-atoll-sig)
            :pre-play-node (game-task-node atoll-sig-introduction)
            :kiosk-play-node (game-task-node atoll-sig-sig-introduction)
            :pre-play-continue "hiphog-start"
            :play-node (game-task-node atoll-sig-sig-introduction)
            :play-continue "atoll-start"
            :kiosk-play-continue "atoll-start"
            )
          (new 'static 'game-task-info
            :name "sewer-enemy"
            :text-name (text-id progress-missions-sewer-enemy)
            :pre-play-node (game-task-node sewer-enemy-introduction)
            :kiosk-play-node (game-task-node sewer-enemy-blow-up-turrets)
            :pre-play-continue "hiphog-start"
            :play-node (game-task-node sewer-enemy-blow-up-turrets)
            :play-continue "sewer-start"
            :kiosk-play-continue "sewer-start-kiosk"
            )
          (new 'static 'game-task-info
            :name "strip-rescue"
            :text-name (text-id progress-missions-strip-rescue)
            :pre-play-node (game-task-node strip-rescue-introduction)
            :kiosk-play-node (game-task-node strip-rescue-battle)
            :pre-play-continue "vinroom-start"
            :play-node (game-task-node strip-rescue-battle)
            :play-continue "strip-warp"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "atoll-battle"
            :text-name (text-id progress-missions-atoll-battle)
            :pre-play-node (game-task-node atoll-battle-introduction)
            :kiosk-play-node (game-task-node atoll-battle-rescue)
            :pre-play-continue "hideout-start"
            :play-node (game-task-node atoll-battle-rescue)
            :play-continue "atoll-start"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "mountain-lens"
            :text-name (text-id progress-missions-mountain-lens)
            :pre-play-node (game-task-node mountain-lens-introduction)
            :kiosk-play-node (game-task-node mountain-lens-started)
            :pre-play-continue "onintent-start"
            :play-node (game-task-node mountain-lens-started)
            :play-continue "mountain-start"
            :kiosk-play-continue "mountain-kiosk"
            )
          (new 'static 'game-task-info
            :name "mountain-gear"
            :text-name (text-id progress-missions-mountain-gear)
            :pre-play-node (game-task-node mountain-gear-find)
            :kiosk-play-node (game-task-node mountain-gear-resolution)
            :pre-play-continue #f
            :play-node (game-task-node mountain-gear-resolution)
            :play-continue "mountain-start"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "mountain-shard"
            :text-name (text-id progress-missions-mountain-shard)
            :pre-play-node (game-task-node mountain-shard-dice)
            :kiosk-play-node (game-task-node mountain-shard-resolution)
            :pre-play-continue #f
            :play-node (game-task-node mountain-shard-resolution)
            :play-continue "mountain-start"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "mountain-collection"
            :pre-play-node (game-task-node mountain-collection-resolution)
            :kiosk-play-node (game-task-node city-keira-delivery-introduction)
            :pre-play-continue #f
            :play-node (game-task-node city-keira-delivery-introduction)
            :play-continue #f
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-keira-delivery"
            :text-name (text-id progress-missions-city-keira-delivery)
            :pre-play-node (game-task-node city-keira-delivery-introduction)
            :kiosk-play-node (game-task-node city-keira-delivery-delivery)
            :pre-play-continue "hiphog-start"
            :play-node (game-task-node city-keira-delivery-delivery)
            :play-continue "ctyport-hiphog-no-hiphog"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "stadium-board1"
            :text-name (text-id progress-missions-stadium-board1)
            :pre-play-node (game-task-node stadium-board1-introduction)
            :kiosk-play-node (game-task-node stadium-board1-board)
            :pre-play-continue "garage-start-skate"
            :play-node (game-task-node stadium-board1-board)
            :play-continue "skatea-training"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-krew-collection"
            :text-name (text-id progress-missions-city-krew-collection)
            :pre-play-node (game-task-node city-krew-collection-introduction)
            :kiosk-play-node (game-task-node city-krew-collection-collection)
            :pre-play-continue "hiphog-start"
            :play-node (game-task-node city-krew-collection-collection)
            :play-continue "ctyport-hiphog"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-yellow-gun-training"
            :text-name (text-id progress-missions-city-yellow-gun-training)
            :pre-play-node (game-task-node city-krew-collection-resolution)
            :kiosk-play-node (game-task-node city-yellow-gun-training-resolution)
            :pre-play-continue "hiphog-start"
            :play-node (game-task-node city-yellow-gun-training-resolution)
            :play-continue "gungame-start"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "drill-eggs"
            :text-name (text-id progress-missions-drill-eggs)
            :pre-play-node (game-task-node drill-eggs-introduction)
            :kiosk-play-node (game-task-node drill-eggs-eggs-0)
            :pre-play-continue "vinroom-start"
            :play-node (game-task-node drill-eggs-eggs-0)
            :play-continue "drill1-warp"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-power"
            :text-name (text-id progress-missions-city-power)
            :pre-play-node (game-task-node city-power-introduction)
            :kiosk-play-node (game-task-node city-power-vinroom)
            :pre-play-continue "vinroom-start"
            :play-node (game-task-node city-power-resolution)
            :play-continue "ctyinda-vinroom"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "palace-cable"
            :text-name (text-id progress-missions-palace-cable)
            :pre-play-node (game-task-node palace-cable-introduction)
            :kiosk-play-node (game-task-node palace-cable-resolution)
            :pre-play-continue "ctygenb-start"
            :play-node (game-task-node palace-cable-resolution)
            :play-continue "palcab-start"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "palace-boss"
            :text-name (text-id progress-missions-palace-boss)
            :pre-play-node (game-task-node palace-boss-introduction)
            :kiosk-play-node (game-task-node palace-boss-battle)
            :pre-play-continue "palroof-throne"
            :play-node (game-task-node palace-boss-battle)
            :play-continue "palroof-boss"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-shuttle"
            :text-name (text-id progress-missions-city-shuttle)
            :pre-play-node (game-task-node city-shuttle-introduction)
            :kiosk-play-node (game-task-node city-shuttle-shuttle)
            :pre-play-continue "hideout-start"
            :play-node (game-task-node city-shuttle-shuttle)
            :play-continue "ctysluma-alley"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "ruins-enemy"
            :text-name (text-id progress-missions-ruins-enemy)
            :pre-play-node (game-task-node ruins-enemy-introduction)
            :kiosk-play-node (game-task-node ruins-enemy-resolution)
            :pre-play-continue "hideout-start"
            :play-node (game-task-node ruins-enemy-resolution)
            :play-continue "ruins-start"
            :kiosk-play-continue "ruins-start"
            )
          (new 'static 'game-task-info
            :name "city-blue-gun-training"
            :pre-play-node (game-task-node city-blue-gun-training-bronze)
            :kiosk-play-node (game-task-node city-blue-gun-training-silver)
            :pre-play-continue #f
            :play-node (game-task-node city-blue-gun-training-silver)
            :play-continue #f
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "forest-scouts"
            :text-name (text-id progress-missions-forest-scouts)
            :pre-play-node (game-task-node forest-scouts-introduction)
            :kiosk-play-node (game-task-node forest-scouts-introduction)
            :pre-play-continue "hideout-start"
            :play-node (game-task-node forest-scouts-pegasus)
            :play-continue "forest-start"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-escort-kid"
            :text-name (text-id progress-missions-city-escort-kid)
            :pre-play-node (game-task-node city-escort-kid-introduction)
            :kiosk-play-node (game-task-node city-escort-kid-introduction)
            :pre-play-continue "ctysluma-escort-retry"
            :play-node (game-task-node city-escort-kid-resolution)
            :play-continue "escort-kid-intro"
            :kiosk-play-continue "ctysluma-escort-retry"
            )
          (new 'static 'game-task-info
            :name "dig-knock-down"
            :text-name (text-id progress-missions-dig-knock-down)
            :pre-play-node (game-task-node dig-knock-down-introduction)
            :kiosk-play-node (game-task-node dig-knock-down-resolution)
            :pre-play-continue "vinroom-start"
            :play-node (game-task-node dig-knock-down-resolution)
            :play-continue "dig1-start"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "strip-grenade"
            :text-name (text-id progress-missions-strip-grenade)
            :pre-play-node (game-task-node strip-grenade-introduction)
            :kiosk-play-node (game-task-node strip-grenade-explode)
            :pre-play-continue "vinroom-start"
            :play-node (game-task-node strip-grenade-explode)
            :play-continue "strip-warp"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "drill-ship"
            :text-name (text-id progress-missions-drill-ship)
            :pre-play-node (game-task-node drill-ship-introduction)
            :kiosk-play-node (game-task-node drill-ship-resolution)
            :pre-play-continue "vinroom-start"
            :play-node (game-task-node drill-ship-resolution)
            :play-continue "drill-warp-gunship"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-port-run"
            :text-name (text-id progress-missions-city-port-run)
            :pre-play-node (game-task-node city-port-run-introduction)
            :kiosk-play-node (game-task-node city-port-run-resolution)
            :pre-play-continue "ctyport-hiphog-no-hiphog"
            :play-node (game-task-node city-port-run-resolution)
            :play-continue "ctyport-hiphog-no-hiphog"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-meet-brutter"
            :text-name (text-id progress-missions-city-meet-brutter)
            :pre-play-node (game-task-node city-meet-brutter-pre-intro)
            :kiosk-play-node (game-task-node city-meet-brutter-introduction)
            :pre-play-continue "hiphog-start"
            :play-node (game-task-node city-meet-brutter-introduction)
            :play-continue "hiphog-start"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "sewer-board"
            :text-name (text-id progress-missions-sewer-board)
            :pre-play-node (game-task-node sewer-board-introduction)
            :kiosk-play-node (game-task-node sewer-board-drain)
            :pre-play-continue "hiphog-start"
            :play-node (game-task-node sewer-board-drain)
            :play-continue "sewer-start"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "forest-hunt"
            :text-name (text-id progress-missions-forest-hunt)
            :pre-play-node (game-task-node forest-hunt-introduction)
            :kiosk-play-node (game-task-node forest-hunt-resolution)
            :pre-play-continue "hiphog-start"
            :play-node (game-task-node forest-hunt-resolution)
            :play-continue "forest-start"
            :kiosk-play-continue "forest-start"
            )
          (new 'static 'game-task-info
            :name "city-intercept-tanker"
            :text-name (text-id progress-missions-city-intercept-tanker)
            :pre-play-node (game-task-node city-intercept-tanker-roof-explode)
            :kiosk-play-node (game-task-node city-intercept-tanker-introduction)
            :pre-play-continue #f
            :play-node (game-task-node city-intercept-tanker-roof-explode)
            :play-continue "ctymarkb-tanker"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "stadium-race-class3"
            :text-name (text-id progress-missions-stadium-race-class3)
            :pre-play-node (game-task-node stadium-race-class3-introduction)
            :kiosk-play-node (game-task-node stadium-race-class3-race)
            :pre-play-continue "garage-start-class3"
            :play-node (game-task-node stadium-race-class3-race)
            :play-continue "stadiumb-race-fail"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-protect-water-slums"
            :text-name (text-id progress-missions-city-protect-water-slums)
            :pre-play-node (game-task-node city-protect-water-slums-introduction)
            :kiosk-play-node (game-task-node city-protect-water-slums-get-seal)
            :pre-play-continue #f
            :play-node (game-task-node city-protect-water-slums-resolution)
            :play-continue "ctyslumc-slums"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "dig-find-totem"
            :text-name (text-id progress-missions-dig-find-totem)
            :pre-play-node (game-task-node dig-find-totem-introduction)
            :kiosk-play-node (game-task-node dig-find-totem-raise-log)
            :pre-play-continue "onintent-start"
            :play-node (game-task-node dig-find-totem-raise-log)
            :play-continue "dig3-start"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-destroy-guard-vehicles"
            :text-name (text-id progress-missions-city-destroy-guard-vehicles)
            :pre-play-node (game-task-node city-destroy-guard-vehicles-introduction)
            :kiosk-play-node (game-task-node city-destroy-guard-vehicles-destroy)
            :pre-play-continue "hideout-start"
            :play-node (game-task-node city-destroy-guard-vehicles-destroy)
            :play-continue "ctysluma-alley"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-play-onin-game"
            :text-name (text-id progress-missions-onin-game)
            :pre-play-node (game-task-node city-play-onin-game-introduction)
            :kiosk-play-node (game-task-node city-play-onin-game-wait)
            :pre-play-continue "onintent-start"
            :play-node (game-task-node city-play-onin-game-wait)
            :play-continue "onintent-start"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "canyon-insert-items"
            :text-name (text-id progress-missions-canyon-insert-items)
            :pre-play-node (game-task-node canyon-insert-items-door)
            :kiosk-play-node (game-task-node canyon-insert-items-door)
            :pre-play-continue "mountain-door"
            :play-node (game-task-node canyon-insert-items-gear)
            :play-continue "mincan-start"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "tomb-poles"
            :text-name (text-id progress-missions-tomb-poles)
            :pre-play-node (game-task-node tomb-poles-introduction)
            :kiosk-play-node (game-task-node tomb-poles-block)
            :pre-play-continue "tombd-start"
            :play-node (game-task-node tomb-poles-block)
            :play-continue "tomb-start"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "tomb-water"
            :text-name (text-id progress-missions-tomb-water)
            :pre-play-node (game-task-node tomb-water-vibe)
            :kiosk-play-node (game-task-node tomb-water-resolution)
            :pre-play-continue #f
            :play-node (game-task-node tomb-water-vibe)
            :play-continue "tomb-start"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "tomb-boss"
            :text-name (text-id progress-missions-tomb-boss)
            :pre-play-node (game-task-node tomb-boss-introduction)
            :kiosk-play-node (game-task-node tomb-boss-door)
            :pre-play-continue "tombboss-start"
            :play-node (game-task-node tomb-boss-introduction)
            :play-continue "tombboss-play-start"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "fortress-save-friends"
            :text-name (text-id progress-missions-fortress-save-friends)
            :pre-play-node (game-task-node fortress-save-friends-introduction)
            :kiosk-play-node (game-task-node fortress-save-friends-resolution)
            :pre-play-continue "hideout-start"
            :play-node (game-task-node fortress-save-friends-resolution)
            :play-continue "forresca-start"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "sewer-escort"
            :text-name (text-id progress-missions-sewer-escort)
            :pre-play-node (game-task-node sewer-escort-introduction)
            :kiosk-play-node (game-task-node sewer-escort-explode-wall1)
            :pre-play-continue "hiphog-start"
            :play-node (game-task-node sewer-escort-explode-wall1)
            :play-continue "sewesc-start"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-dark-gun-training"
            :pre-play-node (game-task-node city-dark-gun-training-bronze)
            :kiosk-play-node (game-task-node city-dark-gun-training-silver)
            :pre-play-continue #f
            :play-node (game-task-node city-dark-gun-training-silver)
            :play-continue #f
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "stadium-race-class2"
            :text-name (text-id progress-missions-stadium-race-class2)
            :pre-play-node (game-task-node stadium-race-class2-introduction)
            :kiosk-play-node (game-task-node stadium-race-class2-race)
            :pre-play-continue "garage-start-class3"
            :play-node (game-task-node stadium-race-class2-race)
            :play-continue "stadiumc-race-retry-pidax"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-stop-bomb-bots"
            :text-name (text-id progress-missions-city-stop-bomb-bots)
            :pre-play-node (game-task-node city-stop-bomb-bots-introduction)
            :kiosk-play-node (game-task-node city-stop-bomb-bots-destroy)
            :pre-play-continue "hideout-start"
            :play-node (game-task-node city-stop-bomb-bots-destroy)
            :play-continue "ctysluma-alley"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-errol-challenge"
            :text-name (text-id progress-missions-city-errol-challenge)
            :pre-play-node (game-task-node city-errol-challenge-introduction)
            :kiosk-play-node (game-task-node city-errol-challenge-race)
            :pre-play-continue "hiphog-start"
            :play-node (game-task-node city-errol-challenge-race)
            :play-continue "ctyport-errol-race-retry"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "strip-drop"
            :text-name (text-id progress-missions-strip-drop)
            :pre-play-node (game-task-node strip-drop-introduction)
            :kiosk-play-node (game-task-node strip-drop-resolution)
            :pre-play-continue "vinroom-start"
            :play-node (game-task-node strip-drop-resolution)
            :play-continue "strip-warp"
            :kiosk-play-continue "vinroom-start"
            )
          (new 'static 'game-task-info
            :name "ruins-mech"
            :text-name (text-id progress-missions-ruins-mech)
            :pre-play-node (game-task-node ruins-mech-introduction)
            :kiosk-play-node (game-task-node ruins-mech-break-wall-1)
            :pre-play-continue #f
            :play-node (game-task-node ruins-mech-break-wall-1)
            :play-continue "ruins-start"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "forest-protect"
            :text-name (text-id progress-missions-forest-protect)
            :pre-play-node (game-task-node forest-protect-introduction)
            :kiosk-play-node (game-task-node forest-protect-meeting)
            :pre-play-continue "onintent-start"
            :play-node (game-task-node forest-protect-meeting)
            :play-continue "forest-tree"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "drill-mech"
            :text-name (text-id progress-missions-drill-mech)
            :pre-play-node (game-task-node drill-mech-introduction)
            :kiosk-play-node (game-task-node drill-mech-started-smashing)
            :pre-play-continue "vinroom-start"
            :play-node (game-task-node drill-mech-started-smashing)
            :play-continue "drill3-warp"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-save-lurkers"
            :text-name (text-id progress-missions-city-meet-brutter)
            :pre-play-node (game-task-node city-save-lurkers-introduction)
            :kiosk-play-node (game-task-node city-save-lurkers-save-lurkers)
            :pre-play-continue #f
            :play-node (game-task-node city-save-lurkers-save-lurkers)
            :play-continue "kiosk-start"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "stadium-race-class1"
            :text-name (text-id progress-missions-stadium-race-class1)
            :pre-play-node (game-task-node stadium-race-class1-introduction)
            :kiosk-play-node (game-task-node stadium-race-class1-race)
            :pre-play-continue "garage-start-class3"
            :play-node (game-task-node stadium-race-class1-race)
            :play-continue "stadiumd-race-fail"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "palace-sneak-in"
            :text-name (text-id progress-missions-palace-sneak-in)
            :pre-play-node (game-task-node palace-sneak-in-introduction)
            :kiosk-play-node (game-task-node palace-sneak-in-meeting)
            :pre-play-continue #f
            :play-node (game-task-node palace-sneak-in-meeting)
            :play-continue "ctypal-shaft"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "castle-break-in"
            :text-name (text-id progress-missions-castle-break-in)
            :pre-play-node (game-task-node castle-break-in-introduction)
            :kiosk-play-node (game-task-node castle-break-in-castle-1)
            :pre-play-continue #f
            :play-node (game-task-node castle-break-in-castle-1)
            :play-continue "caspad-face-castle"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "castle-boss"
            :text-name (text-id progress-missions-castle-boss)
            :pre-play-node (game-task-node castle-boss-introduction)
            :kiosk-play-node (game-task-node castle-boss-resolution)
            :pre-play-continue #f
            :play-node (game-task-node castle-boss-resolution)
            :play-continue "casboss-start"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-whack"
            :text-name (text-id progress-missions-beat-whack)
            :pre-play-node (game-task-node city-whack-introduction)
            :kiosk-play-node (game-task-node city-whack-introduction)
            :pre-play-continue "hiphog-start"
            :play-node (game-task-node city-whack-wait)
            :play-continue "hiphog-start"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "under-mech"
            :text-name (text-id progress-missions-under-find-sig)
            :pre-play-node (game-task-node under-mech-resolution)
            :kiosk-play-node (game-task-node under-mech-resolution)
            :pre-play-continue "ctyport-under"
            :play-node (game-task-node under-mech-resolution)
            :play-continue "under-airlock"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "under-sig"
            :text-name (text-id progress-missions-under-escort-sig)
            :pre-play-node (game-task-node under-sig-introduction)
            :kiosk-play-node (game-task-node under-sig-centipede1-start)
            :pre-play-continue "under-start"
            :play-node (game-task-node under-sig-introduction)
            :play-continue "under-start"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-defend-stadium"
            :text-name (text-id progress-missions-city-defend-stadium)
            :pre-play-node (game-task-node city-defend-stadium-introduction)
            :kiosk-play-node (game-task-node city-defend-stadium-introduction)
            :pre-play-continue "stadium-blimp-intro"
            :play-node (game-task-node city-defend-stadium-resolution)
            :play-continue "stadium-blimp-intro"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "consite-find-baron"
            :text-name (text-id progress-missions-check-consite)
            :pre-play-node (game-task-node consite-find-baron-introduction)
            :kiosk-play-node (game-task-node consite-find-baron-resolution)
            :pre-play-continue #f
            :play-node (game-task-node consite-find-baron-resolution)
            :play-continue "consite-start"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "nest-get-to-gun"
            :text-name (text-id progress-missions-nest-get-to-gun)
            :pre-play-node (game-task-node nest-get-to-gun-introduction)
            :kiosk-play-node (game-task-node nest-get-to-gun-resolution)
            :pre-play-continue #f
            :play-node (game-task-node nest-get-to-gun-resolution)
            :play-continue "nest-start"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "nest-enter"
            :text-name (text-id progress-missions-nest-attack)
            :pre-play-node (game-task-node nest-enter-introduction)
            :kiosk-play-node (game-task-node nest-enter-resolution)
            :pre-play-continue #f
            :play-node (game-task-node nest-enter-resolution)
            :play-continue "nest-barrier"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "nest-boss"
            :text-name (text-id progress-missions-nest-boss)
            :pre-play-node (game-task-node nest-boss-introduction)
            :kiosk-play-node (game-task-node nest-boss-resolution)
            :pre-play-continue "nestb-start"
            :play-node (game-task-node nest-boss-resolution)
            :play-continue "nestb-boss-pit"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-win"
            :pre-play-node (game-task-node city-win-pre-intro)
            :kiosk-play-node (game-task-node city-win-introduction)
            :pre-play-continue #f
            :play-node (game-task-node city-win-introduction)
            :play-continue #f
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-oracle"
            :pre-play-node (game-task-node city-oracle-introduction)
            :kiosk-play-node (game-task-node city-oracle-level0)
            :pre-play-continue #f
            :play-node (game-task-node city-oracle-level0)
            :play-continue #f
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-burning-bush-ring-1"
            :pre-play-node (game-task-node city-burning-bush-ring-1-introduction)
            :kiosk-play-node (game-task-node city-burning-bush-ring-1-resolution)
            :pre-play-continue #f
            :play-node (game-task-node city-burning-bush-ring-1-resolution)
            :play-continue "ctyslumb-burning-bush"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-burning-bush-get-to-1"
            :pre-play-node (game-task-node city-burning-bush-get-to-1-introduction)
            :kiosk-play-node (game-task-node city-burning-bush-get-to-1-resolution)
            :pre-play-continue "ctysluma-burning-bush"
            :play-node (game-task-node city-burning-bush-get-to-1-resolution)
            :play-continue "ctysluma-burning-bush"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-burning-bush-get-to-2"
            :pre-play-node (game-task-node city-burning-bush-get-to-2-introduction)
            :kiosk-play-node (game-task-node city-burning-bush-get-to-2-resolution)
            :pre-play-continue "ctyindb-burning-bush"
            :play-node (game-task-node city-burning-bush-get-to-2-resolution)
            :play-continue "ctyindb-burning-bush"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-burning-bush-get-to-3"
            :pre-play-node (game-task-node city-burning-bush-get-to-3-introduction)
            :kiosk-play-node (game-task-node city-burning-bush-get-to-3-resolution)
            :pre-play-continue "ctyport-burning-bush-3"
            :play-node (game-task-node city-burning-bush-get-to-3-resolution)
            :play-continue "ctyport-burning-bush-3"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-burning-bush-get-to-4"
            :pre-play-node (game-task-node city-burning-bush-get-to-4-introduction)
            :kiosk-play-node (game-task-node city-burning-bush-get-to-4-resolution)
            :pre-play-continue "ctyslumc-burning-bush"
            :play-node (game-task-node city-burning-bush-get-to-4-resolution)
            :play-continue "ctyslumc-burning-bush"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-burning-bush-collection-1"
            :pre-play-node (game-task-node city-burning-bush-collection-1-introduction)
            :kiosk-play-node (game-task-node city-burning-bush-collection-1-resolution)
            :pre-play-continue #f
            :play-node (game-task-node city-burning-bush-collection-1-resolution)
            :play-continue "ctygenb-burning-bush"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-burning-bush-racepoint-1"
            :pre-play-node (game-task-node city-burning-bush-racepoint-1-introduction)
            :kiosk-play-node (game-task-node city-burning-bush-racepoint-1-resolution)
            :pre-play-continue #f
            :play-node (game-task-node city-burning-bush-racepoint-1-resolution)
            :play-continue "ctymarka-burning-bush"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-burning-bush-ring-2"
            :pre-play-node (game-task-node city-burning-bush-ring-2-introduction)
            :kiosk-play-node (game-task-node city-burning-bush-ring-2-resolution)
            :pre-play-continue #f
            :play-node (game-task-node city-burning-bush-ring-2-resolution)
            :play-continue "ctyport-burning-bush"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-burning-bush-get-to-5"
            :pre-play-node (game-task-node city-burning-bush-get-to-5-introduction)
            :kiosk-play-node (game-task-node city-burning-bush-get-to-5-resolution)
            :pre-play-continue "ctyfarmb-burning-bush"
            :play-node (game-task-node city-burning-bush-get-to-5-resolution)
            :play-continue "ctyfarmb-burning-bush"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-burning-bush-get-to-6"
            :pre-play-node (game-task-node city-burning-bush-get-to-6-introduction)
            :kiosk-play-node (game-task-node city-burning-bush-get-to-6-resolution)
            :pre-play-continue "ctymarkb-burning-bush-2"
            :play-node (game-task-node city-burning-bush-get-to-6-resolution)
            :play-continue "ctymarkb-burning-bush-2"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-burning-bush-shuttle-1"
            :pre-play-node (game-task-node city-burning-bush-shuttle-1-introduction)
            :kiosk-play-node (game-task-node city-burning-bush-shuttle-1-resolution)
            :pre-play-continue #f
            :play-node (game-task-node city-burning-bush-shuttle-1-resolution)
            :play-continue "ctymarka-burning-bush"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-burning-bush-get-to-7"
            :pre-play-node (game-task-node city-burning-bush-get-to-7-introduction)
            :kiosk-play-node (game-task-node city-burning-bush-get-to-7-resolution)
            :pre-play-continue "ctymarkb-burning-bush"
            :play-node (game-task-node city-burning-bush-get-to-7-resolution)
            :play-continue "ctymarkb-burning-bush"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-burning-bush-get-to-8"
            :pre-play-node (game-task-node city-burning-bush-get-to-8-introduction)
            :kiosk-play-node (game-task-node city-burning-bush-get-to-8-resolution)
            :pre-play-continue "ctyfarma-burning-bush"
            :play-node (game-task-node city-burning-bush-get-to-8-resolution)
            :play-continue "ctyfarma-burning-bush"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-burning-bush-get-to-9"
            :pre-play-node (game-task-node city-burning-bush-get-to-9-introduction)
            :kiosk-play-node (game-task-node city-burning-bush-get-to-9-resolution)
            :pre-play-continue "ctygenb-burning-bush"
            :play-node (game-task-node city-burning-bush-get-to-9-resolution)
            :play-continue "ctygenb-burning-bush"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-burning-bush-collection-2"
            :pre-play-node (game-task-node city-burning-bush-collection-2-introduction)
            :kiosk-play-node (game-task-node city-burning-bush-collection-2-resolution)
            :pre-play-continue #f
            :play-node (game-task-node city-burning-bush-collection-2-resolution)
            :play-continue "ctygenc-burning-bush"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-burning-bush-get-to-10"
            :pre-play-node (game-task-node city-burning-bush-get-to-10-introduction)
            :kiosk-play-node (game-task-node city-burning-bush-get-to-10-resolution)
            :pre-play-continue "ctyinda-burning-bush"
            :play-node (game-task-node city-burning-bush-get-to-10-resolution)
            :play-continue "ctyinda-burning-bush"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-burning-bush-get-to-11"
            :pre-play-node (game-task-node city-burning-bush-get-to-11-introduction)
            :kiosk-play-node (game-task-node city-burning-bush-get-to-11-resolution)
            :pre-play-continue "ctygena-burning-bush"
            :play-node (game-task-node city-burning-bush-get-to-11-resolution)
            :play-continue "ctygena-burning-bush"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-burning-bush-ring-3"
            :pre-play-node (game-task-node city-burning-bush-ring-3-introduction)
            :kiosk-play-node (game-task-node city-burning-bush-ring-3-resolution)
            :pre-play-continue #f
            :play-node (game-task-node city-burning-bush-ring-3-resolution)
            :play-continue "ctyslumb-burning-bush"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-burning-bush-get-to-12"
            :pre-play-node (game-task-node city-burning-bush-get-to-12-introduction)
            :kiosk-play-node (game-task-node city-burning-bush-get-to-12-resolution)
            :pre-play-continue #f
            :play-node (game-task-node city-burning-bush-get-to-12-resolution)
            :play-continue "ctymarka-burning-bush"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-burning-bush-bombbot-1"
            :pre-play-node (game-task-node city-burning-bush-bombbot-1-introduction)
            :kiosk-play-node (game-task-node city-burning-bush-bombbot-1-resolution)
            :pre-play-continue #f
            :play-node (game-task-node city-burning-bush-bombbot-1-resolution)
            :play-continue "ctymarka-burning-bush"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-burning-bush-get-to-13"
            :pre-play-node (game-task-node city-burning-bush-get-to-13-introduction)
            :kiosk-play-node (game-task-node city-burning-bush-get-to-13-resolution)
            :pre-play-continue "ctyslumb-burning-bush-2"
            :play-node (game-task-node city-burning-bush-get-to-13-resolution)
            :play-continue "ctyslumb-burning-bush-2"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-burning-bush-get-to-14"
            :pre-play-node (game-task-node city-burning-bush-get-to-14-introduction)
            :kiosk-play-node (game-task-node city-burning-bush-get-to-14-resolution)
            :pre-play-continue "ctygena-burning-bush-2"
            :play-node (game-task-node city-burning-bush-get-to-14-resolution)
            :play-continue "ctygena-burning-bush-2"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-burning-bush-get-to-15"
            :pre-play-node (game-task-node city-burning-bush-get-to-15-introduction)
            :kiosk-play-node (game-task-node city-burning-bush-get-to-15-resolution)
            :pre-play-continue "ctypal-burning-bush"
            :play-node (game-task-node city-burning-bush-get-to-15-resolution)
            :play-continue "ctypal-burning-bush"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-burning-bush-collection-3"
            :pre-play-node (game-task-node city-burning-bush-collection-3-introduction)
            :kiosk-play-node (game-task-node city-burning-bush-collection-3-resolution)
            :pre-play-continue #f
            :play-node (game-task-node city-burning-bush-collection-3-resolution)
            :play-continue "ctyfarma-burning-bush"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-burning-bush-race-errol"
            :pre-play-node (game-task-node city-burning-bush-race-errol-introduction)
            :kiosk-play-node (game-task-node city-burning-bush-race-errol-resolution)
            :pre-play-continue "ctyport-burning-bush"
            :play-node (game-task-node city-burning-bush-race-errol-resolution)
            :play-continue "ctyport-errol-race-retry"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "city-burning-bush-race-port"
            :pre-play-node (game-task-node city-burning-bush-race-port-introduction)
            :kiosk-play-node (game-task-node city-burning-bush-race-port-resolution)
            :pre-play-continue "ctyport-burning-bush-3"
            :play-node (game-task-node city-burning-bush-race-port-resolution)
            :play-continue "ctyport-race-retry"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "stadium-burning-bush-race-board"
            :pre-play-node (game-task-node stadium-burning-bush-race-board-introduction)
            :kiosk-play-node (game-task-node stadium-burning-bush-race-board-resolution)
            :pre-play-continue "stadium-burning-bush"
            :play-node (game-task-node stadium-burning-bush-race-board-resolution)
            :play-continue "skatea-training"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "stadium-burning-bush-race-class3"
            :pre-play-node (game-task-node stadium-burning-bush-race-class3-introduction)
            :kiosk-play-node (game-task-node stadium-burning-bush-race-class3-resolution)
            :pre-play-continue "stadium-burning-bush"
            :play-node (game-task-node stadium-burning-bush-race-class3-resolution)
            :play-continue "stadiumb-race-fail"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "stadium-burning-bush-race-class2"
            :pre-play-node (game-task-node stadium-burning-bush-race-class2-introduction)
            :kiosk-play-node (game-task-node stadium-burning-bush-race-class2-resolution)
            :pre-play-continue "stadium-burning-bush"
            :play-node (game-task-node stadium-burning-bush-race-class2-resolution)
            :play-continue "stadiumc-race-fail"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "stadium-burning-bush-race-class1"
            :pre-play-node (game-task-node stadium-burning-bush-race-class1-introduction)
            :kiosk-play-node (game-task-node stadium-burning-bush-race-class1-resolution)
            :pre-play-continue "stadium-burning-bush"
            :play-node (game-task-node stadium-burning-bush-race-class1-resolution)
            :play-continue "stadiumd-race-fail"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "stadium-burning-bush-race-class3-r"
            :pre-play-node (game-task-node stadium-burning-bush-race-class3-r-introduction)
            :kiosk-play-node (game-task-node stadium-burning-bush-race-class3-r-resolution)
            :pre-play-continue "stadium-burning-bush"
            :play-node (game-task-node stadium-burning-bush-race-class3-r-resolution)
            :play-continue "stadiumb-race-fail"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "stadium-burning-bush-race-class2-r"
            :pre-play-node (game-task-node stadium-burning-bush-race-class2-r-introduction)
            :kiosk-play-node (game-task-node stadium-burning-bush-race-class2-r-resolution)
            :pre-play-continue "stadium-burning-bush"
            :play-node (game-task-node stadium-burning-bush-race-class2-r-resolution)
            :play-continue "stadiumc-race-fail"
            :kiosk-play-continue #f
            )
          (new 'static 'game-task-info
            :name "stadium-burning-bush-race-class1-r"
            :pre-play-node (game-task-node stadium-burning-bush-race-class1-r-introduction)
            :kiosk-play-node (game-task-node stadium-burning-bush-race-class1-r-resolution)
            :pre-play-continue "stadium-burning-bush"
            :play-node (game-task-node stadium-burning-bush-race-class1-r-resolution)
            :play-continue "stadiumd-race-fail"
            :kiosk-play-continue #f
            )
          )
        )
  (set! (-> gp-0 sub-task-list)
        (new 'static 'boxed-array :type game-task-node-info
          (new 'static 'game-task-node-info
            :level 'none
            :name "none"
            :flags (game-task-node-flag closed)
            :on-open #f
            :info #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task fortress-escape)
            :name "fortress-escape-start"
            :when-open #f
            :flags (game-task-node-flag closed auto-close save-on-life abs-task-mask utility-node)
            :task-mask (task-mask task0 task1 task2 task3)
            :on-open #f
            :info #f
            :borrow '((hiphog 0 #f #f)
              (hideout 0 #f #f)
              (ctywide 0 #f #f)
              (ctywide 1 lwidea special)
              (prison 0 #f #f)
              (throne 0 #f #f)
              (garage 0 #f #f)
              (stadium 0 #f #f)
              (introcst 0 lintcstb #f)
              (onintent 0 ltentout display)
              )
            :open? #f
            :on-close #f
            :add (game-task-node-command add-sidekick)
            )
          (new 'static 'game-task-node-info
            :level 'fortress
            :task (game-task fortress-escape)
            :name "fortress-escape-introduction"
            :when-open #f
            :flags (game-task-node-flag save-on-life task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node fortress-escape-start)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'forexita
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node fortress-escape-resolution)
              :on-complete #f
              :on-fail #f
              )
            :borrow '((prison 0 ldjakbrn #f))
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'fortress
            :task (game-task fortress-escape)
            :name "fortress-escape-resolution"
            :when-open #f
            :flags (game-task-node-flag close-task abs-task-mask)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node fortress-escape-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask task1)
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-fortress-escape)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-help-kid)
            :name "city-help-kid-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor kor-alley)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "city-help-kid-intro"
                )
              )
            :flags (game-task-node-flag task-manager no-audio)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node fortress-escape-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'ctywide
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-help-kid-resolution)
              :on-complete #f
              :on-fail #f
              )
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-talk-to-kor)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-help-kid)
            :name "city-help-kid-battle"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor kor-alley)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              )
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-help-kid-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-city-save-kid)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-help-kid)
            :name "city-help-kid-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor kor-alley)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "city-help-kid-resolution"
                )
              )
            :flags (game-task-node-flag close-task)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-help-kid-battle)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :add (game-task-node-command add-darkjak)
            :description (text-id progress-missions-city-save-kid)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-vehicle-training)
            :name "city-vehicle-training-map"
            :when-open #f
            :flags (game-task-node-flag save-on-life city-wait task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-help-kid-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'ctywide
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-vehicle-training-map)
              :intro-delay #xbb8
              :on-complete #f
              :on-fail #f
              )
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-vehicle-training)
            :name "city-vehicle-training-hover-zone-1"
            :when-open #f
            :flags (game-task-node-flag save-on-life city-wait task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-vehicle-training-map)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'ctywide
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-vehicle-training-hover-zone-1)
              :intro-delay #x12c
              :on-complete #f
              :on-fail #f
              )
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-vehicle-training)
            :name "city-vehicle-training-hover-zone-2"
            :when-open #f
            :flags (game-task-node-flag save-on-life city-wait task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-vehicle-training-hover-zone-1)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'ctywide
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-vehicle-training-hover-zone-2)
              :intro-delay #x12c
              :on-complete #f
              :on-fail #f
              )
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-vehicle-training)
            :name "city-vehicle-training-resolution"
            :when-open #f
            :flags (game-task-node-flag close-task)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-vehicle-training-hover-zone-2)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'ruins
            :task (game-task ruins-tower)
            :name "ruins-tower-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor torn-alley)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "ruins-tower-intro"
                :distance (meters 20)
                )
              (new 'static 'game-task-event
                :actor (game-task-actor tess-alley)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-05)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-help-kid-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-talk-to-torn)
            )
          (new 'static 'game-task-node-info
            :level 'ruins
            :task (game-task ruins-tower)
            :name "ruins-tower-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor torn-alley)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :flags (game-task-flags gatflag-00)
                :scene "ruins-tower-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor tess-alley)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :flags (game-task-flags gatflag-00)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-02)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node ruins-tower-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-ruins-tower)
            )
          (new 'static 'game-task-node-info
            :level 'ruins
            :task (game-task ruins-tower)
            :name "ruins-tower-exit"
            :when-open #f
            :flags (game-task-node-flag save-on-life task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node ruins-tower-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'ruins
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node ruins-tower-exit)
              :on-complete #f
              :on-fail #f
              :end-sphere (new 'static 'sphere :x 3419490.2 :y -9.8304 :z -1391682.0 :r 57344.0)
              )
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'atoll
            :task (game-task atoll-water)
            :name "atoll-water-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor torn-hideout)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "atoll-1-int"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-05)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node ruins-tower-exit)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((hideout 0 ltrnysam special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-talk-to-torn)
            )
          (new 'static 'game-task-node-info
            :level 'atoll
            :task (game-task atoll-water)
            :name "atoll-water-find"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor torn-hideout)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "atoll-1-int"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-07)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-63)
                :scene #f
                )
              )
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node atoll-water-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((hideout 0 ltrnysam special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-atoll-water)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task atoll-water)
            :name "atoll-water-valve"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor torn-hideout)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "atoll-1-int"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-07)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-63)
                :scene #f
                )
              )
            :flags (game-task-node-flag clear-task-mask utility-node)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node atoll-water-find)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask task0)
            :on-open #f
            :info #f
            :borrow '((hideout 0 ltrnysam special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-atoll-water)
            )
          (new 'static 'game-task-node-info
            :level 'atoll
            :task (game-task atoll-water)
            :name "atoll-water-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor torn-hideout)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "atoll-1-int"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-07)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-63)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node atoll-water-valve)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((hideout 0 ltrnysam special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-atoll-water)
            )
          (new 'static 'game-task-node-info
            :level 'atoll
            :task (game-task atoll-water)
            :name "atoll-water-exit"
            :when-open #f
            :flags (game-task-node-flag save-on-life task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node atoll-water-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'atoll
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node atoll-water-exit)
              :on-complete #f
              :on-fail #f
              :end-sphere (new 'static 'sphere :x 2286840.2 :y 2954.0352 :z -3471073.8 :r 81920.0)
              )
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'fortress
            :task (game-task fortress-dump)
            :name "fortress-dump-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor torn-hideout)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "fortress-2-intro"
                :distance (meters 45)
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-05)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node atoll-water-exit)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((hideout 0 ltrnysam special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-talk-to-torn)
            )
          (new 'static 'game-task-node-info
            :level 'fortress
            :task (game-task fortress-dump)
            :name "fortress-dump-deal"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor torn-hideout)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "fortress-2-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-09)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life reset-on-try)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node fortress-dump-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((hideout 0 ltrnysam special))
            :open? #f
            :on-close #f
            :add (game-task-node-command add-pass-red)
            :description (text-id progress-missions-fortress-dump)
            )
          (new 'static 'game-task-node-info
            :level 'fortress
            :task (game-task fortress-dump)
            :name "fortress-dump-missile"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor torn-hideout)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "fortress-2-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-09)
                :scene #f
                )
              )
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node fortress-dump-deal)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((hideout 0 ltrnysam special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-fortress-dump)
            )
          (new 'static 'game-task-node-info
            :level 'fortress
            :task (game-task fortress-dump)
            :name "fortress-dump-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-09)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node fortress-dump-missile)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-fortress-dump)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-krew-delivery)
            :name "city-krew-delivery-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor torn-hideout)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "city-krew-delivery-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-05)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-try)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node fortress-dump-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((ctywide 0 lpackage display) (hideout 0 ltrnysam special))
            :open? #f
            :on-close '(task-close! "city-vehicle-training-resolution")
            :description (text-id progress-missions-talk-to-torn)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-krew-delivery)
            :name "city-krew-delivery-delivery"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor torn-hideout)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "city-krew-delivery-intro"
                )
              )
            :flags (game-task-node-flag task-retry task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-krew-delivery-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :mask (task-manager-mask resolution-scene)
              :level 'lpackage
              :intro-scene #f
              :resolution-scene "krew-delivery-res"
              :resolution-scene-continue "hiphog-start"
              :retry-continue "ctysluma-alley-no-hideout"
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-krew-delivery-resolution)
              :on-complete #f
              :on-fail #f
              )
            :borrow '((ctywide 0 lpackage display) (hideout 0 ltrnysam special) (hiphog 0 lguard #f))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-city-krew-delivery)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-krew-delivery)
            :name "city-krew-delivery-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor krew-hiphog)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "krew-delivery-res"
                )
              )
            :flags (game-task-node-flag close-task)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-krew-delivery-delivery)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((ctywide 0 lpackage display) (hiphog 0 lguard special))
            :open? #f
            :on-close #f
            :add (game-task-node-command add-gun-red)
            :description (text-id progress-missions-city-krew-delivery)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-red-gun-training)
            :name "city-red-gun-training-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor krew-hiphog)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "krew-delivery-res"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor sig-hiphog)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-10)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-krew-delivery-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((hiphog 0 lguard special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-city-red-gun-training)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-red-gun-training)
            :name "city-red-gun-training-try-once"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor krew-hiphog)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor sig-hiphog)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-10)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-red-gun-training-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((hiphog 0 lguard special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-city-red-gun-training)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-red-gun-training)
            :name "city-red-gun-training-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-10)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-red-gun-training-try-once)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-city-red-gun-training)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-red-gun-training)
            :name "city-red-gun-training-bronze"
            :when-open #f
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-red-gun-training-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-red-gun-training)
            :name "city-red-gun-training-silver"
            :when-open #f
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-red-gun-training-bronze)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-red-gun-training)
            :name "city-red-gun-training-gold"
            :when-open #f
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-red-gun-training-silver)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'atoll
            :task (game-task atoll-sig)
            :name "atoll-sig-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor krew-hiphog)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "atoll-2-intro"
                :distance (meters 34)
                )
              (new 'static 'game-task-event
                :actor (game-task-actor sig-hiphog)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-08)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life abs-task-mask)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-red-gun-training-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask task1)
            :on-open #f
            :info #f
            :borrow '((hiphog 0 lguard special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-talk-to-krew)
            )
          (new 'static 'game-task-node-info
            :level 'atoll
            :task (game-task atoll-sig)
            :name "atoll-sig-sig-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor krew-hiphog)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "atoll-2-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor sig-atoll)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "atoll-sig-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-07)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node atoll-sig-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((hiphog 0 lguard special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-atoll-sig)
            )
          (new 'static 'game-task-node-info
            :level 'atoll
            :task (game-task atoll-sig)
            :name "atoll-sig-tank"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor krew-hiphog)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor sig-atoll)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-07)
                :scene #f
                )
              )
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node atoll-sig-sig-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((hiphog 0 lguard special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-atoll-sig)
            )
          (new 'static 'game-task-node-info
            :level 'atoll
            :task (game-task atoll-sig)
            :name "atoll-sig-sniper-a"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor krew-hiphog)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor sig-atoll)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-07)
                :scene #f
                )
              )
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node atoll-sig-tank)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((hiphog 0 lguard special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-atoll-sig)
            )
          (new 'static 'game-task-node-info
            :level 'atoll
            :task (game-task atoll-sig)
            :name "atoll-sig-sniper-b"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor krew-hiphog)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor sig-atoll)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-07)
                :scene #f
                )
              )
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node atoll-sig-sniper-a)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((hiphog 0 lguard special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-atoll-sig)
            )
          (new 'static 'game-task-node-info
            :level 'atoll
            :task (game-task atoll-sig)
            :name "atoll-sig-sniper-c"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor krew-hiphog)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor sig-atoll)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-07)
                :scene #f
                )
              )
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node atoll-sig-sniper-b)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((hiphog 0 lguard special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-atoll-sig)
            )
          (new 'static 'game-task-node-info
            :level 'atoll
            :task (game-task atoll-sig)
            :name "atoll-sig-sniper-d"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor krew-hiphog)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor sig-atoll)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-07)
                :scene #f
                )
              )
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node atoll-sig-sniper-c)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((hiphog 0 lguard special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-atoll-sig)
            )
          (new 'static 'game-task-node-info
            :level 'atoll
            :task (game-task atoll-sig)
            :name "atoll-sig-resolution"
            :when-open #f
            :flags (game-task-node-flag close-task)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node atoll-sig-sniper-d)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-atoll-sig)
            )
          (new 'static 'game-task-node-info
            :level 'sewer
            :task (game-task sewer-enemy)
            :name "sewer-enemy-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor krew-hiphog)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "sewer-1-intro"
                :distance (meters 34)
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-08)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node atoll-sig-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((hiphog 0 lguard special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-talk-to-krew)
            )
          (new 'static 'game-task-node-info
            :level 'sewer
            :task (game-task sewer-enemy)
            :name "sewer-enemy-blow-up-turrets"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor krew-hiphog)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "sewer-1-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-06)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node sewer-enemy-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'sewerb
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node sewer-enemy-blow-up-turrets)
              :on-complete '(talker-spawn "krew010")
              :on-fail #f
              )
            :borrow '((hiphog 0 lguard special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-sewer-enemy)
            )
          (new 'static 'game-task-node-info
            :level 'sewer
            :task (game-task sewer-enemy)
            :name "sewer-enemy-talk-to-krew"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor krew-hiphog)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "sewer-1-res"
                :distance (meters 40)
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-08)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node sewer-enemy-blow-up-turrets)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((hiphog 0 lguard special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-talk-to-krew)
            )
          (new 'static 'game-task-node-info
            :level 'sewer
            :task (game-task sewer-enemy)
            :name "sewer-enemy-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-11)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task abs-task-mask task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node sewer-enemy-talk-to-krew)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask task1)
            :on-open #f
            :info (new 'static 'task-manager-info
              :mask (task-manager-mask resolution-scene)
              :level 'gungame
              :intro-scene #f
              :resolution-scene "city-get-yellow-gun"
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node sewer-enemy-resolution)
              :on-complete #f
              :on-fail #f
              )
            :borrow '()
            :open? #f
            :on-close #f
            :add (game-task-node-command add-gun-yellow)
            :description (text-id progress-missions-city-get-yellow-gun)
            )
          (new 'static 'game-task-node-info
            :level 'strip
            :task (game-task strip-rescue)
            :name "strip-rescue-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor torn-hideout)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "vin-rescue-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-05)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node sewer-enemy-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((hideout 0 ltrnysam special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-talk-to-torn)
            )
          (new 'static 'game-task-node-info
            :level 'strip
            :task (game-task strip-rescue)
            :name "strip-rescue-battle"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor torn-hideout)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "vin-rescue-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-03)
                :scene #f
                )
              )
            :flags (game-task-node-flag task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node strip-rescue-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'strip
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node strip-rescue-resolution)
              :on-complete #f
              :on-fail #f
              :end-sphere (new 'static 'sphere :x 9618717.0 :y 368630.6 :z -177470.27 :r 81920.0)
              )
            :borrow '((hideout 0 ltrnysam special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-strip-rescue)
            )
          (new 'static 'game-task-node-info
            :level 'strip
            :task (game-task strip-rescue)
            :name "strip-rescue-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor torn-hideout)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "vin-rescue-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-03)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task abs-task-mask)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node strip-rescue-battle)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask task1)
            :on-open #f
            :info #f
            :borrow '((hideout 0 ltrnysam special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-strip-rescue)
            )
          (new 'static 'game-task-node-info
            :level 'atoll
            :task (game-task atoll-battle)
            :name "atoll-battle-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor torn-hideout)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "atoll-3-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-05)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life abs-task-mask)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node strip-rescue-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask task2)
            :on-open #f
            :info #f
            :borrow '((hideout 0 ltrnysam special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-talk-to-torn)
            )
          (new 'static 'game-task-node-info
            :level 'atoll
            :task (game-task atoll-battle)
            :name "atoll-battle-rescue"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor torn-hideout)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "atoll-3-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor ashelin-atoll)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "atoll-save-ashelin-res-a"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-07)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-64)
                :scene #f
                )
              )
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node atoll-battle-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((hideout 0 ltrnysam special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-atoll-battle)
            )
          (new 'static 'game-task-node-info
            :level 'atoll
            :task (game-task atoll-battle)
            :name "atoll-battle-battle"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor torn-hideout)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "atoll-3-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor ashelin-atoll)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-07)
                :scene #f
                )
              )
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node atoll-battle-rescue)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((hideout 0 ltrnysam special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-atoll-battle)
            )
          (new 'static 'game-task-node-info
            :level 'atoll
            :task (game-task atoll-battle)
            :name "atoll-battle-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor torn-hideout)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "atoll-3-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor ashelin-atoll)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "atoll-save-ashelin-res-b"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-07)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task abs-task-mask)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node atoll-battle-battle)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask done)
            :on-open #f
            :info #f
            :borrow '((hideout 0 ltrnysam special))
            :open? #f
            :on-close #f
            :add (game-task-node-command add-pass-yellow)
            :description (text-id progress-missions-atoll-battle)
            )
          (new 'static 'game-task-node-info
            :level 'mountain
            :task (game-task mountain-lens)
            :name "mountain-lens-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor onin-onintent)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "mountain-finditems-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor pecker-onintent)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node atoll-battle-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-talk-to-onin)
            )
          (new 'static 'game-task-node-info
            :level 'mountain
            :task (game-task mountain-lens)
            :name "mountain-lens-started"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor onin-onintent)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "mountain-finditems-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor pecker-onintent)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-04)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-65)
                :scene #f
                )
              )
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node mountain-lens-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-mountain-lens)
            )
          (new 'static 'game-task-node-info
            :level 'mountain
            :task (game-task mountain-lens)
            :name "mountain-lens-intermediate"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor onin-onintent)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "mountain-finditems-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor pecker-onintent)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-04)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-65)
                :scene #f
                )
              )
            :flags (game-task-node-flag clear-task-mask)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node mountain-lens-started)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask task3)
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-mountain-lens)
            )
          (new 'static 'game-task-node-info
            :level 'mountain
            :task (game-task mountain-lens)
            :name "mountain-lens-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor onin-onintent)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "mountain-finditems-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor pecker-onintent)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-04)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-65)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task set-task-mask)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node mountain-lens-intermediate)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask task0)
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-mountain-lens)
            )
          (new 'static 'game-task-node-info
            :level 'mountain
            :task (game-task mountain-gear)
            :name "mountain-gear-find"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor onin-onintent)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "mountain-finditems-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor pecker-onintent)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-04)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-67)
                :scene #f
                )
              )
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node mountain-lens-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-mountain-gear)
            )
          (new 'static 'game-task-node-info
            :level 'mountain
            :task (game-task mountain-gear)
            :name "mountain-gear-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor onin-onintent)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "mountain-finditems-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor pecker-onintent)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-04)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-67)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task set-task-mask)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node mountain-gear-find)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask task1)
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-mountain-gear)
            )
          (new 'static 'game-task-node-info
            :level 'mountain
            :task (game-task mountain-shard)
            :name "mountain-shard-dice"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor onin-onintent)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "mountain-finditems-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor pecker-onintent)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-04)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-66)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node mountain-lens-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-mountain-shard)
            )
          (new 'static 'game-task-node-info
            :level 'mountain
            :task (game-task mountain-shard)
            :name "mountain-shard-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor onin-onintent)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "mountain-finditems-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor pecker-onintent)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-04)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-66)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task set-task-mask)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node mountain-lens-introduction)
              (game-task-node mountain-shard-dice)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask task2)
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-mountain-shard)
            )
          (new 'static 'game-task-node-info
            :level 'mountain
            :task (game-task mountain-collection)
            :name "mountain-collection-resolution"
            :when-open #f
            :flags (game-task-node-flag close-task set-task-mask)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node mountain-lens-resolution)
              (game-task-node mountain-gear-resolution)
              (game-task-node mountain-shard-resolution)
              (game-task-node none)
              )
            :task-mask (task-mask done)
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-keira-delivery)
            :name "city-keira-delivery-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor krew-hiphog)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "city-keira-delivery-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-08)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-try)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node sewer-enemy-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((hiphog 0 lguard special))
            :open? #f
            :on-close #f
            :add (game-task-node-command add-pass-green)
            :description (text-id progress-missions-talk-to-krew)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-keira-delivery)
            :name "city-keira-delivery-delivery"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor krew-hiphog)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "city-keira-delivery-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor keira-garage)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              )
            :flags (game-task-node-flag task-retry city-wait task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-keira-delivery-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :mask (task-manager-mask resolution-scene)
              :level 'ctywide
              :intro-scene #f
              :resolution-scene "city-keira-hover-challenge-intro"
              :resolution-scene-continue "garage-start-skate"
              :retry-continue "ctyport-hiphog-no-hiphog"
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-keira-delivery-resolution)
              :on-complete #f
              :on-fail #f
              )
            :borrow '((hiphog 0 lguard special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-city-keira-delivery)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-keira-delivery)
            :name "city-keira-delivery-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor krew-hiphog)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor keira-garage)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "city-keira-hover-challenge-intro"
                :distance (meters 30)
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-12)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-keira-delivery-delivery)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((hiphog 0 lguard special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-city-keira-delivery)
            )
          (new 'static 'game-task-node-info
            :level 'stadium
            :task (game-task stadium-board1)
            :name "stadium-board1-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor keira-garage)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "city-keira-hover-challenge-intro"
                :distance (meters 30)
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-12)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-keira-delivery-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'stadium
            :task (game-task stadium-board1)
            :name "stadium-board1-board"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor keira-garage)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "city-keira-hover-challenge-intro"
                )
              )
            :flags (game-task-node-flag task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node stadium-board1-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'ctywide
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node stadium-board1-board)
              :on-complete #f
              :on-fail #f
              )
            :borrow '()
            :open? #f
            :on-close #f
            :add (game-task-node-command add-board)
            :description (text-id progress-missions-stadium-board1)
            )
          (new 'static 'game-task-node-info
            :level 'stadium
            :task (game-task stadium-board1)
            :name "stadium-board1-training"
            :when-open #f
            :flags (game-task-node-flag save-on-life save-on-try)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node stadium-board1-board)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-stadium-board1)
            )
          (new 'static 'game-task-node-info
            :level 'stadium
            :task (game-task stadium-board1)
            :name "stadium-board1-training-judge"
            :when-open #f
            :flags (game-task-node-flag save-on-life task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node stadium-board1-training)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'ctywide
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "skatea-training-judge"
              :fail-continue "skatea-training-judge"
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node stadium-board1-training-judge)
              :on-complete #f
              :on-fail #f
              )
            :borrow '()
            :open? #f
            :on-close #f
            :add (game-task-node-command add-board-training)
            :description (text-id progress-missions-stadium-board1)
            )
          (new 'static 'game-task-node-info
            :level 'stadium
            :task (game-task stadium-board1)
            :name "stadium-board1-done"
            :when-open #f
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node stadium-board1-training-judge)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :add (game-task-node-command sub-board)
            :description (text-id progress-missions-stadium-board1)
            )
          (new 'static 'game-task-node-info
            :level 'stadium
            :task (game-task stadium-board1)
            :name "stadium-board1-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor keira-garage)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "city-keira-hover-challenge-res"
                :distance (meters 30)
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-12)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node stadium-board1-done)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'ctywide
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node stadium-board1-resolution)
              :on-complete #f
              :on-fail #f
              )
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id board-score-return-to-garage)
            )
          (new 'static 'game-task-node-info
            :level 'stadium
            :task (game-task stadium-board1)
            :name "stadium-board1-bronze"
            :when-open #f
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node stadium-board1-board)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'stadium
            :task (game-task stadium-board1)
            :name "stadium-board1-silver"
            :when-open #f
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node stadium-board1-bronze)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'stadium
            :task (game-task stadium-board1)
            :name "stadium-board1-gold"
            :when-open #f
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node stadium-board1-silver)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-krew-collection)
            :name "city-krew-collection-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor krew-hiphog)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "city-krew-collection-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor tess-hiphog)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-08)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-try)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-keira-delivery-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((hiphog 0 ltess special) (ctywide 0 lsack display))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-talk-to-krew)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-krew-collection)
            :name "city-krew-collection-collection"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor krew-hiphog)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor tess-hiphog)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life task-retry city-wait task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-krew-collection-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'lsack
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "ctyport-hiphog-no-hiphog"
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-krew-collection-collection)
              :on-complete #f
              :on-fail #f
              )
            :borrow '((ctywide 0 lsack display) (hiphog 0 ltess special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-city-krew-collection)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-krew-collection)
            :name "city-krew-collection-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor krew-hiphog)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "city-krew-collection-res"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-08)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-krew-collection-collection)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((ctywide 0 lsack display) (hiphog 0 lguard special))
            :open? #f
            :on-close #f
            :add (game-task-node-command add-gun-up-1)
            :description (text-id progress-missions-city-krew-collection)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-yellow-gun-training)
            :name "city-yellow-gun-training-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-10)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node sewer-enemy-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-city-yellow-gun-training)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-yellow-gun-training)
            :name "city-yellow-gun-training-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-10)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-yellow-gun-training-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-city-yellow-gun-training)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-yellow-gun-training)
            :name "city-yellow-gun-training-bronze"
            :when-open #f
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-yellow-gun-training-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-yellow-gun-training)
            :name "city-yellow-gun-training-silver"
            :when-open #f
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-yellow-gun-training-bronze)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-yellow-gun-training)
            :name "city-yellow-gun-training-gold"
            :when-open #f
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-yellow-gun-training-silver)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'drill
            :task (game-task drill-eggs)
            :name "drill-eggs-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor vin-vinroom)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "drill-kill-metal-heads-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-03)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node strip-rescue-resolution)
              (game-task-node city-yellow-gun-training-resolution)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-talk-to-vin)
            )
          (new 'static 'game-task-node-info
            :level 'drill
            :task (game-task drill-eggs)
            :name "drill-eggs-eggs-0"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor vin-vinroom)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "drill-kill-metal-heads-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-03)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node drill-eggs-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-drill-eggs)
            )
          (new 'static 'game-task-node-info
            :level 'drill
            :task (game-task drill-eggs)
            :name "drill-eggs-eggs-1"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor vin-vinroom)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "drill-kill-metal-heads-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-03)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node drill-eggs-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-drill-eggs)
            )
          (new 'static 'game-task-node-info
            :level 'drill
            :task (game-task drill-eggs)
            :name "drill-eggs-eggs-2"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor vin-vinroom)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "drill-kill-metal-heads-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-03)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node drill-eggs-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-drill-eggs)
            )
          (new 'static 'game-task-node-info
            :level 'drill
            :task (game-task drill-eggs)
            :name "drill-eggs-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor vin-vinroom)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "drill-kill-metal-heads-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-03)
                :scene #f
                )
              )
            :flags (game-task-node-flag auto-close close-task)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node drill-eggs-eggs-0)
              (game-task-node drill-eggs-eggs-1)
              (game-task-node drill-eggs-eggs-2)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-drill-eggs)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-power)
            :name "city-power-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor vin-vinroom)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "city-switch-on-power-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-03)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node drill-eggs-resolution)
              (game-task-node stadium-board1-resolution)
              (game-task-node atoll-battle-resolution)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-talk-to-vin)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-power)
            :name "city-power-vinroom"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor vin-vinroom)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "city-switch-on-power-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-03)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-try)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-power-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-talk-to-vin)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-power)
            :name "city-power-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor vin-vinroom)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task task-retry city-wait task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-power-vinroom)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'lpower
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "ctyinda-vinroom"
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-power-post-win)
              :on-complete #f
              :on-fail #f
              )
            :borrow '((ctywide 0 lpower display))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-city-power)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-power)
            :name "city-power-post-win"
            :when-open #f
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-power-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((ctywide 0 lpower display))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-city-power)
            )
          (new 'static 'game-task-node-info
            :level 'palace
            :task (game-task palace-cable)
            :name "palace-cable-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-13)
                :scene #f
                )
              )
            :flags (game-task-node-flag auto-close save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-power-post-win)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'palace
            :task (game-task palace-cable)
            :name "palace-cable-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-13)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task abs-task-mask)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node palace-cable-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask task1)
            :on-open #f
            :info #f
            :borrow '((throne 0 lbrnermk special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-palace-cable)
            )
          (new 'static 'game-task-node-info
            :level 'palace
            :task (game-task palace-boss)
            :name "palace-boss-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor baron-palace)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "palace-outside-window-res-b"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-13)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node palace-cable-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'palace
            :task (game-task palace-boss)
            :name "palace-boss-battle"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor baron-palace)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-13)
                :scene #f
                )
              )
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node palace-boss-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-palace-boss)
            )
          (new 'static 'game-task-node-info
            :level 'palace
            :task (game-task palace-boss)
            :name "palace-boss-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor baron-palace)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "palace-boss-res"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-13)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task abs-task-mask)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node palace-boss-battle)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask done)
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-palace-boss)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-shuttle)
            :name "city-shuttle-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor torn-hideout)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "city-shuttle-underground-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor kor-hideout)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor kid-hideout)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-05)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-try)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node mountain-collection-resolution)
              (game-task-node palace-boss-resolution)
              (game-task-node city-krew-collection-resolution)
              (game-task-node city-yellow-gun-training-resolution)
              )
            :on-open #f
            :info #f
            :borrow '((hideout 0 ltrnkrkd special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-talk-to-torn)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-shuttle)
            :name "city-shuttle-shuttle"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor torn-hideout)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor kor-hideout)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor kid-hideout)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              )
            :flags (game-task-node-flag task-retry task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-shuttle-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'lshuttle
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "ctysluma-alley-no-hideout"
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-shuttle-resolution)
              :on-complete #f
              :on-fail #f
              )
            :borrow '((hideout 0 ltrnkrkd special) (ctywide 0 lshuttle display))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-city-shuttle)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-shuttle)
            :name "city-shuttle-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor torn-hideout)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "city-shuttle-underground-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-05)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-shuttle-shuttle)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((hideout 0 ltrnkrkd special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-city-shuttle)
            )
          (new 'static 'game-task-node-info
            :level 'ruins
            :task (game-task ruins-enemy)
            :name "ruins-enemy-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor torn-hideout)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "ruins-sacred-intro"
                :distance (meters 20)
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-05)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life abs-task-mask)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-shuttle-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask task1)
            :on-open #f
            :info #f
            :borrow '((hideout 0 ltrnysam special))
            :open? #f
            :on-close #f
            :add (game-task-node-command add-gun-blue)
            :description (text-id progress-missions-talk-to-torn)
            )
          (new 'static 'game-task-node-info
            :level 'ruins
            :task (game-task ruins-enemy)
            :name "ruins-enemy-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor torn-hideout)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "ruins-sacred-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-02)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-68)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node ruins-enemy-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((hideout 0 ltrnysam special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-ruins-enemy)
            )
          (new 'static 'game-task-node-info
            :level 'ruins
            :task (game-task ruins-enemy)
            :name "ruins-enemy-exit"
            :when-open #f
            :flags (game-task-node-flag save-on-life task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node ruins-enemy-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'ruins
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node ruins-enemy-exit)
              :on-complete #f
              :on-fail #f
              :end-sphere (new 'static 'sphere :x 3419490.2 :y -9.8304 :z -1391682.0 :r 57344.0)
              )
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-blue-gun-training)
            :name "city-blue-gun-training-bronze"
            :when-open #f
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node ruins-enemy-exit)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-blue-gun-training)
            :name "city-blue-gun-training-silver"
            :when-open #f
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-blue-gun-training-bronze)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-blue-gun-training)
            :name "city-blue-gun-training-gold"
            :when-open #f
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-blue-gun-training-silver)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'forest
            :task (game-task forest-scouts)
            :name "forest-scouts-pre-intro"
            :when-open #f
            :flags (game-task-node-flag save-on-life intro-wait city-wait task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node ruins-enemy-exit)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :mask (task-manager-mask intro-scene)
              :level 'ctywide
              :intro-scene "ds006"
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node forest-scouts-pre-intro)
              :intro-delay #x5dc
              :on-complete #f
              :on-fail #f
              )
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'forest
            :task (game-task forest-scouts)
            :name "forest-scouts-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor youngsamos-hideout)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "forest-catch-metal-heads-intro"
                :distance (meters 35)
                )
              (new 'static 'game-task-event
                :actor (game-task-actor torn-hideout)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-05)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node forest-scouts-pre-intro)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((hideout 0 ltrnysam special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-talk-to-shadow)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task forest-scouts)
            :name "forest-scouts-voicebox"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor youngsamos-hideout)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "forest-catch-metal-heads-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor torn-hideout)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-18)
                :scene #f
                )
              )
            :flags (game-task-node-flag intro-wait city-wait task-manager utility-node)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node forest-scouts-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :mask (task-manager-mask intro-scene)
              :level 'ctywide
              :intro-scene "kei026"
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node forest-scouts-voicebox)
              :intro-delay #x1770
              :on-complete #f
              :on-fail #f
              )
            :borrow '((hideout 0 ltrnysam special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-forest-scouts)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task forest-scouts)
            :name "forest-scouts-get-board"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor youngsamos-hideout)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "forest-catch-metal-heads-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor torn-hideout)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-18)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life utility-node)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node forest-scouts-voicebox)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((hideout 0 ltrnysam special))
            :open? #f
            :on-close #f
            :add (game-task-node-command add-board)
            :description (text-id progress-missions-forest-scouts)
            )
          (new 'static 'game-task-node-info
            :level 'forest
            :task (game-task forest-scouts)
            :name "forest-scouts-pegasus"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor youngsamos-hideout)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "forest-catch-metal-heads-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor torn-hideout)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-18)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node forest-scouts-get-board)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'forest
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node forest-scouts-pegasus)
              :on-complete #f
              :on-fail #f
              )
            :borrow '((hideout 0 ltrnysam special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-forest-scouts)
            )
          (new 'static 'game-task-node-info
            :level 'forest
            :task (game-task forest-scouts)
            :name "forest-scouts-resolution"
            :when-open #f
            :flags (game-task-node-flag close-task)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node forest-scouts-pegasus)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-forest-scouts)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-escort-kid)
            :name "city-escort-kid-pre-intro"
            :when-open #f
            :flags (game-task-node-flag auto-close save-on-life clear-task-mask)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node forest-scouts-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask task1)
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-escort-kid)
            :name "city-escort-kid-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor youngsamos-alley)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "city-escort-kid-intro"
                :distance (meters 15)
                )
              (new 'static 'game-task-event
                :actor (game-task-actor kid-alley)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor crocadog-alley)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-05)
                :scene #f
                )
              )
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-escort-kid-pre-intro)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-talk-to-shadow)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-escort-kid)
            :name "city-escort-kid-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor youngsamos-alley)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-03)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task set-task-mask task-manager no-audio)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-escort-kid-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask task1)
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'lkiddoge
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "ctysluma-escort-retry"
              :fail-continue "ctysluma-escort-retry"
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-escort-kid-resolution)
              :on-complete #f
              :on-fail #f
              )
            :borrow '((ctywide 0 lkiddoge display))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-city-escort-kid)
            )
          (new 'static 'game-task-node-info
            :level 'dig
            :task (game-task dig-knock-down)
            :name "dig-knock-down-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor kor-vinroom)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "dig-knock-down-scaffolding-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-03)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-escort-kid-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-talk-to-kor)
            )
          (new 'static 'game-task-node-info
            :level 'dig
            :task (game-task dig-knock-down)
            :name "dig-knock-down-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor kor-vinroom)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "dig-knock-down-scaffolding-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor kid-vinroom)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor crocadog-vinroom)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-20)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node dig-knock-down-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-dig-knock-down)
            )
          (new 'static 'game-task-node-info
            :level 'strip
            :task (game-task strip-grenade)
            :name "strip-grenade-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor vin-vinroom)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "ecowells-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-03)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node dig-knock-down-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-talk-to-vin)
            )
          (new 'static 'game-task-node-info
            :level 'strip
            :task (game-task strip-grenade)
            :name "strip-grenade-explode"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor vin-vinroom)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "ecowells-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-03)
                :scene #f
                )
              )
            :flags (game-task-node-flag task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node strip-grenade-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :mask (task-manager-mask resolution-scene)
              :level 'strip
              :intro-scene #f
              :resolution-scene "ecowells-victory"
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node strip-grenade-resolution)
              :on-complete #f
              :on-fail #f
              )
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-strip-grenade)
            )
          (new 'static 'game-task-node-info
            :level 'strip
            :task (game-task strip-grenade)
            :name "strip-grenade-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor vin-vinroom)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task abs-task-mask)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node strip-grenade-explode)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask task2)
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-strip-grenade)
            )
          (new 'static 'game-task-node-info
            :level 'drill
            :task (game-task drill-ship)
            :name "drill-ship-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor vin-vinroom)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "drill-destroy-ship-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-03)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life abs-task-mask)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node strip-grenade-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask task1)
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-talk-to-kor)
            )
          (new 'static 'game-task-node-info
            :level 'drill
            :task (game-task drill-ship)
            :name "drill-ship-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor kor-vinroom)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "drill-destroy-ship-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor vin-vinroom)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-03)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node drill-ship-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'drillmid
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node drill-ship-resolution)
              :on-complete #f
              :on-fail #f
              )
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-drill-ship)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-port-run)
            :name "city-port-run-introduction"
            :when-open #f
            :flags (game-task-node-flag save-on-life save-on-try task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node forest-scouts-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'lportrun
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-port-run-introduction)
              :on-complete #f
              :on-fail #f
              )
            :borrow '((ctywide 0 lportrun display))
            :open? (lambda ((arg0 game-task-node-info))
              (let ((v1-1 (level-get-target-inside *level*)))
                (the-as symbol (and v1-1 (logtest? (-> v1-1 info level-flags) 1) (!= (-> v1-1 name) 'ctysluma)))
                )
              )
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-port-run)
            :name "city-port-run-resolution"
            :when-open #f
            :flags (game-task-node-flag close-task task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-port-run-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'lportrun
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "ctyport-hiphog-no-hiphog"
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-port-run-post-win)
              :on-complete #f
              :on-fail #f
              )
            :borrow '((ctywide 0 lportrun display))
            :open? (lambda ((arg0 game-task-node-info))
              (let ((v1-1 (level-get-target-inside *level*)))
                (the-as symbol (and v1-1 (logtest? (-> v1-1 info level-flags) 1) (!= (-> v1-1 name) 'ctysluma)))
                )
              )
            :on-close #f
            :description (text-id progress-missions-city-port-run)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-port-run)
            :name "city-port-run-post-win"
            :when-open #f
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-port-run-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((ctywide 0 lportrun display))
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-meet-brutter)
            :name "city-meet-brutter-pre-intro"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor krew-hiphog)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "city-meet-brutter-intro"
                :distance (meters 34)
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-08)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-port-run-post-win)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((hiphog 0 lguard special))
            :open? #f
            :on-close #f
            :add (game-task-node-command add-gun-up-2)
            :description (text-id progress-missions-talk-to-krew)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-meet-brutter)
            :name "city-meet-brutter-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor krew-hiphog)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "city-meet-brutter-intro"
                :distance (meters 34)
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-08)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-try)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-meet-brutter-pre-intro)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((hiphog 0 lguard special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-talk-to-krew)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-meet-brutter)
            :name "city-meet-brutter-meet-brutter"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor krew-hiphog)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "city-meet-brutter-intro"
                )
              )
            :flags (game-task-node-flag task-retry city-wait task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-meet-brutter-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :mask (task-manager-mask resolution-scene)
              :level 'lmeetbrt
              :intro-scene #f
              :resolution-scene "city-meet-brutter-res"
              :resolution-scene-continue #f
              :retry-continue "ctyport-hiphog-no-hiphog"
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-meet-brutter-resolution)
              :on-complete #f
              :on-fail #f
              )
            :borrow '((ctywide 0 lmeetbrt display) (hiphog 0 lguard special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-city-meet-brutter)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-meet-brutter)
            :name "city-meet-brutter-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor brutter-kiosk)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-19)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-meet-brutter-meet-brutter)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-city-meet-brutter)
            )
          (new 'static 'game-task-node-info
            :level 'sewer
            :task (game-task sewer-board)
            :name "sewer-board-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor krew-hiphog)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "sewer-2-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor brutter-kiosk)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-08)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-meet-brutter-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((hiphog 0 lguard special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-talk-to-krew)
            )
          (new 'static 'game-task-node-info
            :level 'sewer
            :task (game-task sewer-board)
            :name "sewer-board-drain"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor krew-hiphog)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "sewer-2-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-06)
                :scene #f
                )
              )
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node sewer-board-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((hiphog 0 lguard special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-sewer-board)
            )
          (new 'static 'game-task-node-info
            :level 'sewer
            :task (game-task sewer-board)
            :name "sewer-board-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor krew-hiphog)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "sewer-2-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-06)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task abs-task-mask)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node sewer-board-drain)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask task2)
            :on-open #f
            :info #f
            :borrow '((hiphog 0 lguard special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-sewer-board)
            )
          (new 'static 'game-task-node-info
            :level 'forest
            :task (game-task forest-hunt)
            :name "forest-hunt-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor sig-hiphog)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "forest-hunt-camo-metal-heads-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor tess-hiphog)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-08)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life abs-task-mask)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node sewer-board-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask task1)
            :on-open #f
            :info #f
            :borrow '((hiphog 0 ltess special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-talk-to-sig)
            )
          (new 'static 'game-task-node-info
            :level 'forest
            :task (game-task forest-hunt)
            :name "forest-hunt-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor sig-hiphog)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "forest-hunt-camo-metal-heads-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor tess-hiphog)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-18)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node forest-hunt-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((hiphog 0 ltess special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-forest-hunt)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-intercept-tanker)
            :name "city-intercept-tanker-roof-explode"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor ashelin-market)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "city-intercept-tanker-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-23)
                :scene #f
                )
              )
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node forest-scouts-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-check-bazaar)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-intercept-tanker)
            :name "city-intercept-tanker-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor ashelin-market)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "city-intercept-tanker-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-23)
                :scene #f
                )
              )
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-intercept-tanker-roof-explode)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-check-bazaar)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-intercept-tanker)
            :name "city-intercept-tanker-battle"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor ashelin-market)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-23)
                :scene #f
                )
              )
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-intercept-tanker-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-city-intercept-tanker)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-intercept-tanker)
            :name "city-intercept-tanker-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor ashelin-market)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "city-intercept-tanker-res"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-23)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-intercept-tanker-battle)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-city-intercept-tanker)
            )
          (new 'static 'game-task-node-info
            :level 'stadium
            :task (game-task stadium-race-class3)
            :name "stadium-race-class3-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor keira-garage)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "city-class-3-race-intro"
                :distance (meters 30)
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-12)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node sewer-board-resolution)
              (game-task-node city-intercept-tanker-resolution)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((garage 0 lgarcsta #f))
            :open? (lambda ((arg0 game-task-node-info)) (!= *kernel-boot-message* 'preview))
            :on-close #f
            :description (text-id progress-missions-talk-to-mechanic)
            )
          (new 'static 'game-task-node-info
            :level 'stadium
            :task (game-task stadium-race-class3)
            :name "stadium-race-class3-race"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor keira-garage)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "city-class-3-race-intro"
                )
              )
            :flags (game-task-node-flag save-on-life task-retry task-manager no-fail-on-death no-slow-down)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node stadium-race-class3-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :mask (task-manager-mask resolution-scene)
              :level 'ctywide
              :intro-scene #f
              :resolution-scene "city-class-3-race-res"
              :resolution-scene-continue "garage-start-class3"
              :retry-continue "stadiumb-race-retry"
              :fail-continue "stadiumb-race-fail"
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node stadium-race-class3-race)
              :on-complete #f
              :on-fail #f
              )
            :borrow '((garage 0 lgarcsta #f) (stadium 0 lracelit special) (ctywide 0 lracebf special))
            :open? (lambda ((arg0 game-task-node-info)) (= (level-status *level* 'stadium) 'active))
            :on-close #f
            :description (text-id progress-missions-stadium-race-class3)
            )
          (new 'static 'game-task-node-info
            :level 'stadium
            :task (game-task stadium-race-class3)
            :name "stadium-race-class3-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor keira-garage)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "city-class-3-race-res"
                :distance (meters 30)
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-12)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node stadium-race-class3-race)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((garage 0 lashgrd #f) (stadium 0 lracelit special) (ctywide 0 lracebf special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-stadium-race-class3)
            )
          (new 'static 'game-task-node-info
            :level 'stadium
            :task (game-task stadium-race-class3)
            :name "stadium-race-class3-select-bush"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-stadium)
                :action (game-task-action menu)
                :tex (game-task-icon gaticon-07)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-62)
                :scene #f
                )
              )
            :flags (game-task-node-flag no-restart)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node stadium-race-class3-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close '(begin
               (task-open! "stadium-burning-bush-race-board-introduction")
               (task-open! "stadium-burning-bush-race-class3-introduction")
               (task-open! "stadium-burning-bush-race-class3-r-introduction")
               )
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-protect-water-slums)
            :name "city-protect-water-slums-introduction"
            :when-open #f
            :flags (game-task-node-flag save-on-life intro-wait city-wait task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node sewer-board-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :mask (task-manager-mask intro-scene)
              :level 'ctywide
              :intro-scene "bru002"
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-protect-water-slums-introduction)
              :intro-delay #x1770
              :on-complete #f
              :on-fail #f
              )
            :borrow '()
            :open? (lambda ((arg0 game-task-node-info)) (!= *kernel-boot-message* 'preview))
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-protect-water-slums)
            :name "city-protect-water-slums-get-seal"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-35)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-protect-water-slums-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'ctywide
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-protect-water-slums-get-seal)
              :on-complete #f
              :on-fail #f
              )
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-check-water-slums)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-protect-water-slums)
            :name "city-protect-water-slums-fight"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-35)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-protect-water-slums-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'lprotect
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-protect-water-slums-fight)
              :on-complete #f
              :on-fail #f
              )
            :borrow '((ctywide 0 lprotect special))
            :open? (lambda ((arg0 game-task-node-info)) (let ((v1-1 (level-get-target-inside *level*)))
                                                   (the-as symbol (and v1-1 (= (-> v1-1 name) 'ctyslumc)))
                                                   )
                    )
            :on-close '(task-close! "city-protect-water-slums-get-seal")
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-protect-water-slums)
            :name "city-protect-water-slums-resolution"
            :when-open #f
            :flags (game-task-node-flag close-task save-on-life task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-protect-water-slums-fight)
              (game-task-node city-protect-water-slums-get-seal)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'lprotect
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "ctyslumc-slums"
              :fail-continue "ctyslumc-slums"
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-protect-water-slums-resolution)
              :on-complete #f
              :on-fail #f
              )
            :borrow '((ctywide 0 lprotect display))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-city-protect-water-slums)
            )
          (new 'static 'game-task-node-info
            :level 'dig
            :task (game-task dig-find-totem)
            :name "dig-find-totem-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor onin-onintent)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "dig-find-totem-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor pecker-onintent)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor youngsamos-onintent)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node drill-ship-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? (lambda ((arg0 game-task-node-info)) (!= *kernel-boot-message* 'preview))
            :on-close #f
            :description (text-id progress-missions-talk-to-onin)
            )
          (new 'static 'game-task-node-info
            :level 'dig
            :task (game-task dig-find-totem)
            :name "dig-find-totem-raise-log"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor onin-onintent)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "dig-find-totem-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor pecker-onintent)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor youngsamos-onintent)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-20)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node dig-find-totem-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-dig-find-totem)
            )
          (new 'static 'game-task-node-info
            :level 'dig
            :task (game-task dig-find-totem)
            :name "dig-find-totem-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor onin-onintent)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "dig-find-totem-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor pecker-onintent)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor youngsamos-onintent)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-20)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node dig-find-totem-raise-log)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-dig-find-totem)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-destroy-guard-vehicles)
            :name "city-destroy-guard-vehicles-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor torn-hideout)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "city-destroy-guard-vehicles-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-05)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-try)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node dig-find-totem-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((hideout 0 ltrnysam special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-talk-to-torn)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-destroy-guard-vehicles)
            :name "city-destroy-guard-vehicles-destroy"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor torn-hideout)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "city-destroy-guard-vehicles-intro"
                )
              )
            :flags (game-task-node-flag save-on-life task-retry task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-destroy-guard-vehicles-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'lhelldog
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "ctysluma-alley-no-hideout"
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-destroy-guard-vehicles-resolution)
              :on-complete #f
              :on-fail #f
              )
            :borrow '((ctywide 0 lhelldog display) (hideout 0 ltrnysam special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-city-destroy-guard-vehicles)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-destroy-guard-vehicles)
            :name "city-destroy-guard-vehicles-resolution"
            :when-open #f
            :flags (game-task-node-flag close-task)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-destroy-guard-vehicles-destroy)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((ctywide 0 lhelldog display))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-city-destroy-guard-vehicles)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-play-onin-game)
            :name "city-play-onin-game-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor onin-onintent)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "city-play-onin-game-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor pecker-onintent)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor kor-onintent)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-destroy-guard-vehicles-resolution)
              (game-task-node city-protect-water-slums-resolution)
              (game-task-node stadium-race-class3-resolution)
              (game-task-node forest-hunt-resolution)
              )
            :on-open #f
            :info #f
            :borrow '((onintent 0 ltentob display))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-talk-to-onin)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-play-onin-game)
            :name "city-play-onin-game-wait"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor onin-onintent)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "city-play-onin-game-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor pecker-onintent)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor kor-onintent)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              )
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-play-onin-game-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((onintent 0 ltentob display))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-onin-game)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-play-onin-game)
            :name "city-play-onin-game-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor onin-onintent)
                :action (game-task-action play)
                :tex (game-task-icon gaticon-06)
                :scene "onin-game"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor pecker-onintent)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :flags (game-task-flags gatflag-02)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor kor-onintent)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-play-onin-game-wait)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :mask (task-manager-mask resolution-scene fail-message)
              :level 'onintent
              :intro-scene #f
              :resolution-scene "city-play-onin-game-res"
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue "onintent-start"
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-play-onin-game-resolution)
              :on-complete #f
              :on-fail #f
              )
            :borrow '((onintent 0 ltentob display))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-onin-game)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-play-onin-game)
            :name "city-play-onin-game-skill"
            :when-open #f
            :flags (game-task-node-flag no-restart)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-play-onin-game-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-play-onin-game)
            :name "city-play-onin-game-post-game"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor onin-onintent)
                :action (game-task-action play)
                :tex (game-task-icon gaticon-06)
                :scene "onin-game"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor pecker-onintent)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :flags (game-task-flags gatflag-02)
                :scene #f
                )
              )
            :flags (game-task-node-flag no-restart)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-play-onin-game-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((onintent 0 ltentob display))
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'canyon
            :task (game-task canyon-insert-items)
            :name "canyon-insert-items-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-21)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-play-onin-game-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-go-to-canyon)
            )
          (new 'static 'game-task-node-info
            :level 'canyon
            :task (game-task canyon-insert-items)
            :name "canyon-insert-items-door"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-21)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node canyon-insert-items-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :mask (task-manager-mask resolution-scene)
              :level 'mountain
              :intro-scene #f
              :resolution-scene "canyon-insert-items-intro"
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node canyon-insert-items-door)
              :on-complete #f
              :on-fail #f
              :end-sphere (new 'static 'sphere :x -2629474.0 :y 324481.44 :z 689014.4 :r 28672.0)
              )
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-canyon-insert-items)
            )
          (new 'static 'game-task-node-info
            :level 'canyon
            :task (game-task canyon-insert-items)
            :name "canyon-insert-items-gear"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-21)
                :scene #f
                )
              )
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node canyon-insert-items-door)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-canyon-insert-items)
            )
          (new 'static 'game-task-node-info
            :level 'canyon
            :task (game-task canyon-insert-items)
            :name "canyon-insert-items-shard"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-21)
                :scene #f
                )
              )
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node canyon-insert-items-gear)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-canyon-insert-items)
            )
          (new 'static 'game-task-node-info
            :level 'canyon
            :task (game-task canyon-insert-items)
            :name "canyon-insert-items-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-21)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node canyon-insert-items-shard)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-canyon-insert-items)
            )
          (new 'static 'game-task-node-info
            :level 'tomb
            :task (game-task tomb-poles)
            :name "tomb-poles-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor youngsamos-tomb)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "tomb-face-tests-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor kor-tomb)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor kid-tomb)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-22)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node canyon-insert-items-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-go-to-tomb)
            )
          (new 'static 'game-task-node-info
            :level 'tomb
            :task (game-task tomb-poles)
            :name "tomb-poles-block"
            :when-open #f
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node tomb-poles-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-tomb-poles)
            )
          (new 'static 'game-task-node-info
            :level 'tomb
            :task (game-task tomb-poles)
            :name "tomb-poles-poles"
            :when-open #f
            :flags (game-task-node-flag save-on-life reset-on-try)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node tomb-poles-block)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-tomb-poles)
            )
          (new 'static 'game-task-node-info
            :level 'tomb
            :task (game-task tomb-poles)
            :name "tomb-poles-boulder"
            :when-open #f
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node tomb-poles-poles)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :add (game-task-node-command sub-sidekick)
            :description (text-id progress-missions-tomb-poles)
            )
          (new 'static 'game-task-node-info
            :level 'tomb
            :task (game-task tomb-poles)
            :name "tomb-poles-poles2"
            :when-open #f
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node tomb-poles-boulder)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-tomb-poles)
            )
          (new 'static 'game-task-node-info
            :level 'tomb
            :task (game-task tomb-poles)
            :name "tomb-poles-resolution"
            :when-open #f
            :flags (game-task-node-flag close-task save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node tomb-poles-poles2)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-tomb-poles)
            )
          (new 'static 'game-task-node-info
            :level 'tomb
            :task (game-task tomb-water)
            :name "tomb-water-vibe"
            :when-open #f
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node tomb-poles-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-tomb-water)
            )
          (new 'static 'game-task-node-info
            :level 'tomb
            :task (game-task tomb-water)
            :name "tomb-water-resolution"
            :when-open #f
            :flags (game-task-node-flag close-task save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node tomb-water-vibe)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-tomb-water)
            )
          (new 'static 'game-task-node-info
            :level 'tomb
            :task (game-task tomb-boss)
            :name "tomb-boss-torches"
            :when-open #f
            :flags (game-task-node-flag save-on-life set-task-mask no-restart)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node tomb-poles-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask task0)
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'tomb
            :task (game-task tomb-boss)
            :name "tomb-boss-door"
            :when-open #f
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node tomb-boss-torches)
              (game-task-node tomb-water-resolution)
              (game-task-node tomb-poles-resolution)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'tomb
            :task (game-task tomb-boss)
            :name "tomb-boss-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor daxter-tomb)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-22)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node tomb-boss-door)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :add (game-task-node-command add-sidekick)
            )
          (new 'static 'game-task-node-info
            :level 'tomb
            :task (game-task tomb-boss)
            :name "tomb-boss-resolution"
            :when-open #f
            :flags (game-task-node-flag close-task)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node tomb-boss-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-tomb-boss)
            )
          (new 'static 'game-task-node-info
            :level 'fortress
            :task (game-task fortress-save-friends)
            :name "fortress-save-friends-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor torn-hideout)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "fortress-save-friends-intro-a"
                :distance (meters 20)
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-05)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life abs-task-mask)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node tomb-boss-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask task2)
            :on-open #f
            :info #f
            :borrow '((hideout 0 ltrnysam special) (prison 0 lprsncst special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-talk-to-torn)
            )
          (new 'static 'game-task-node-info
            :level 'fortress
            :task (game-task fortress-save-friends)
            :name "fortress-save-friends-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor torn-hideout)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "fortress-save-friends-intro-a"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-09)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task abs-task-mask task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node fortress-save-friends-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask done)
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'forrescb
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node fortress-save-friends-resolution)
              :on-complete #f
              :on-fail #f
              )
            :borrow '((hideout 0 ltrnysam special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-fortress-save-friends)
            )
          (new 'static 'game-task-node-info
            :level 'sewer
            :task (game-task sewer-escort)
            :name "sewer-escort-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor krew-hiphog)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "sewer-blow-up-statue-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor sig-hiphog)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-08)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node fortress-save-friends-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((hiphog 0 lguard special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-talk-to-krew)
            )
          (new 'static 'game-task-node-info
            :level 'sewer
            :task (game-task sewer-escort)
            :name "sewer-escort-explode-wall1"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor krew-hiphog)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "sewer-blow-up-statue-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor sig-hiphog)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-06)
                :scene #f
                )
              )
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node sewer-escort-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((hiphog 0 lguard special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-sewer-escort)
            )
          (new 'static 'game-task-node-info
            :level 'sewer
            :task (game-task sewer-escort)
            :name "sewer-escort-explode-wall2"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor krew-hiphog)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "sewer-blow-up-statue-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor sig-hiphog)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-06)
                :scene #f
                )
              )
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node sewer-escort-explode-wall1)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((hiphog 0 lguard special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-sewer-escort)
            )
          (new 'static 'game-task-node-info
            :level 'sewer
            :task (game-task sewer-escort)
            :name "sewer-escort-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor krew-hiphog)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "sewer-blow-up-statue-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor sig-hiphog)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-06)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task save-on-life abs-task-mask)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node sewer-escort-explode-wall2)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask done)
            :on-open #f
            :info #f
            :borrow '((hiphog 0 lguard special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-sewer-escort)
            )
          (new 'static 'game-task-node-info
            :level 'sewer
            :task (game-task sewer-escort)
            :name "sewer-escort-get-gun"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor krew-hiphog)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-34)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node sewer-escort-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :mask (task-manager-mask resolution-scene)
              :level 'gungame
              :intro-scene #f
              :resolution-scene "city-get-dark-gun"
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node sewer-escort-get-gun)
              :on-complete #f
              :on-fail #f
              )
            :borrow '((hiphog 0 lguard special))
            :open? #f
            :on-close #f
            :add (game-task-node-command add-gun-dark)
            :description (text-id progress-missions-city-get-dark-gun)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-dark-gun-training)
            :name "city-dark-gun-training-bronze"
            :when-open #f
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node sewer-escort-get-gun)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-dark-gun-training)
            :name "city-dark-gun-training-silver"
            :when-open #f
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-dark-gun-training-bronze)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-dark-gun-training)
            :name "city-dark-gun-training-gold"
            :when-open #f
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-dark-gun-training-silver)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'stadium
            :task (game-task stadium-race-class2)
            :name "stadium-race-class2-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor keira-garage)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "city-class-2-race-intro"
                :distance (meters 30)
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-12)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-try)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node fortress-save-friends-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((garage 0 lsamergd #f))
            :open? #f
            :on-close '(task-close! "stadium-race-class3-select-bush")
            :description (text-id progress-missions-talk-to-keira)
            )
          (new 'static 'game-task-node-info
            :level 'stadium
            :task (game-task stadium-race-class2)
            :name "stadium-race-class2-race"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor keira-garage)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "city-class-2-race-intro"
                )
              )
            :flags (game-task-node-flag save-on-life task-retry task-manager no-fail-on-death no-slow-down)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node stadium-race-class2-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :mask (task-manager-mask resolution-scene)
              :level 'ctywide
              :intro-scene #f
              :resolution-scene "city-class-2-race-res"
              :resolution-scene-continue "garage-class3-movie"
              :retry-continue "stadiumc-race-retry-pidax"
              :fail-continue "garage-start-class3"
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node stadium-race-class2-race)
              :index 1
              :on-complete #f
              :on-fail #f
              )
            :borrow '((garage 0 lsamergd #f) (stadium 0 lracelit special) (ctywide 0 lracecf special))
            :open? (lambda ((arg0 game-task-node-info)) (= (level-status *level* 'stadium) 'active))
            :on-close #f
            :description (text-id progress-missions-stadium-race-class2)
            )
          (new 'static 'game-task-node-info
            :level 'stadium
            :task (game-task stadium-race-class2)
            :name "stadium-race-class2-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor keira-garage)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "city-class-2-race-res"
                :distance (meters 30)
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-12)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node stadium-race-class2-race)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((garage 0 lashgrd #f) (stadium 0 lracelit special) (ctywide 0 lracecf special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-stadium-race-class2)
            )
          (new 'static 'game-task-node-info
            :level 'stadium
            :task (game-task stadium-race-class2)
            :name "stadium-race-class2-select-bush"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-stadium)
                :action (game-task-action menu)
                :tex (game-task-icon gaticon-07)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-62)
                :scene #f
                )
              )
            :flags (game-task-node-flag no-restart)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node stadium-race-class2-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close '(begin
               (task-open! "stadium-burning-bush-race-board-introduction")
               (task-open! "stadium-burning-bush-race-class3-introduction")
               (task-open! "stadium-burning-bush-race-class3-r-introduction")
               (task-open! "stadium-burning-bush-race-class2-introduction")
               (task-open! "stadium-burning-bush-race-class2-r-introduction")
               )
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-stop-bomb-bots)
            :name "city-stop-bomb-bots-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor youngsamos-hideout)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "city-stop-bomb-bots-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor samos-hideout)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-05)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-try)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node fortress-save-friends-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((hideout 0 lysamsam special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-talk-to-torn)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-stop-bomb-bots)
            :name "city-stop-bomb-bots-destroy"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor youngsamos-hideout)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "city-stop-bomb-bots-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor samos-hideout)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life task-retry task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-stop-bomb-bots-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'lbombbot
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "ctysluma-alley-no-hideout"
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-stop-bomb-bots-resolution)
              :on-complete #f
              :on-fail #f
              )
            :borrow '((ctywide 0 lbombbot display) (hideout 0 lysamsam special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-city-stop-bomb-bots)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-stop-bomb-bots)
            :name "city-stop-bomb-bots-resolution"
            :when-open #f
            :flags (game-task-node-flag close-task)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-stop-bomb-bots-destroy)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((ctywide 0 lbombbot display))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-city-stop-bomb-bots)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-errol-challenge)
            :name "city-errol-challenge-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor krew-hiphog)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "city-errol-challenge-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor tess-hiphog)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-08)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-try)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node sewer-escort-get-gun)
              (game-task-node stadium-race-class2-resolution)
              (game-task-node city-stop-bomb-bots-resolution)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((hiphog 0 lerltess special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-talk-to-krew)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-errol-challenge)
            :name "city-errol-challenge-race"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor krew-hiphog)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "city-errol-challenge-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor tess-hiphog)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor keira-garage)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-12)
                :scene #f
                )
              )
            :flags (game-task-node-flag task-retry city-wait task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-errol-challenge-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :mask (task-manager-mask resolution-scene)
              :level 'lerlchal
              :intro-scene #f
              :resolution-scene "city-errol-challenge-res"
              :resolution-scene-continue "garage-start-class3"
              :retry-continue "ctyport-errol-race-retry"
              :fail-continue "ctyport-hiphog-no-hiphog"
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-errol-challenge-resolution)
              :index 3
              :on-complete #f
              :on-fail #f
              )
            :borrow '((ctywide 0 lerlchal display) (hiphog 0 lerltess special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-city-errol-challenge)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-errol-challenge)
            :name "city-errol-challenge-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor krew-hiphog)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor keira-garage)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-12)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-errol-challenge-race)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((ctywide 0 lerlchal display) (stadium 0 lerrol special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-city-errol-challenge)
            )
          (new 'static 'game-task-node-info
            :level 'strip
            :task (game-task strip-drop)
            :name "strip-drop-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor vin-vinroom)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "crane-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-03)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-errol-challenge-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-talk-to-vin)
            )
          (new 'static 'game-task-node-info
            :level 'strip
            :task (game-task strip-drop)
            :name "strip-drop-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor vin-vinroom)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "crane-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-03)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task abs-task-mask)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node strip-drop-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask done)
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-strip-drop)
            )
          (new 'static 'game-task-node-info
            :level 'ruins
            :task (game-task ruins-mech)
            :name "ruins-mech-introduction"
            :when-open #f
            :flags (game-task-node-flag save-on-life abs-task-mask intro-wait city-wait task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-errol-challenge-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask task2)
            :on-open #f
            :info (new 'static 'task-manager-info
              :mask (task-manager-mask intro-scene)
              :level 'ctywide
              :intro-scene "sam001"
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node ruins-mech-introduction)
              :intro-delay #x1770
              :on-complete #f
              :on-fail #f
              )
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'ruins
            :task (game-task ruins-mech)
            :name "ruins-mech-break-wall-1"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-02)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-68)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node ruins-mech-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'ruins
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node ruins-mech-break-wall-1)
              :on-complete #f
              :on-fail #f
              )
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-ruins-mech)
            )
          (new 'static 'game-task-node-info
            :level 'ruins
            :task (game-task ruins-mech)
            :name "ruins-mech-move-block-1"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-02)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-68)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node ruins-mech-break-wall-1)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'ruins
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node ruins-mech-move-block-1)
              :on-complete #f
              :on-fail #f
              )
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-ruins-mech)
            )
          (new 'static 'game-task-node-info
            :level 'ruins
            :task (game-task ruins-mech)
            :name "ruins-mech-throw-block-1"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-02)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-68)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node ruins-mech-move-block-1)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'ruins
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node ruins-mech-throw-block-1)
              :on-complete #f
              :on-fail #f
              )
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-ruins-mech)
            )
          (new 'static 'game-task-node-info
            :level 'ruins
            :task (game-task ruins-mech)
            :name "ruins-mech-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-02)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-68)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task abs-task-mask)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node ruins-mech-throw-block-1)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask done)
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-ruins-mech)
            )
          (new 'static 'game-task-node-info
            :level 'forest
            :task (game-task forest-protect)
            :name "forest-protect-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor onin-onintent)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "forest-protect-samos-intro-a"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor pecker-onintent)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life abs-task-mask)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node ruins-mech-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask task2)
            :on-open #f
            :info #f
            :borrow '()
            :open? (lambda ((arg0 game-task-node-info)) (task-node-close! (game-task-node city-play-onin-game-post-game)) #t)
            :on-close #f
            :description (text-id progress-missions-talk-to-onin)
            )
          (new 'static 'game-task-node-info
            :level 'forest
            :task (game-task forest-protect)
            :name "forest-protect-meeting"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor onin-onintent)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "forest-protect-samos-intro-a"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor pecker-onintent)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-18)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-69)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor youngsamos-forest)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "forest-protect-samos-intro-b"
                :distance (meters 24)
                )
              )
            :flags (game-task-node-flag abs-task-mask)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node forest-protect-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask task3)
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-deliver-life-seed)
            )
          (new 'static 'game-task-node-info
            :level 'forest
            :task (game-task forest-protect)
            :name "forest-protect-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor onin-onintent)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor pecker-onintent)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-18)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task abs-task-mask task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node forest-protect-meeting)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask done)
            :on-open #f
            :info (new 'static 'task-manager-info
              :mask (task-manager-mask resolution-scene)
              :level 'forest
              :intro-scene #f
              :resolution-scene "forest-protect-samos-res"
              :resolution-scene-continue #f
              :retry-continue "forest-tree"
              :fail-continue "forest-tree"
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node forest-protect-resolution)
              :on-complete #f
              :on-fail #f
              )
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-forest-protect)
            )
          (new 'static 'game-task-node-info
            :level 'forest
            :task (game-task forest-protect)
            :name "forest-protect-post-game"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor onin-onintent)
                :action (game-task-action play)
                :tex (game-task-icon gaticon-06)
                :scene "onin-game"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor pecker-onintent)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :flags (game-task-flags gatflag-02)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor youngsamos-forest)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              )
            :flags (game-task-node-flag no-restart)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node forest-protect-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'drill
            :task (game-task drill-mech)
            :name "drill-mech-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor kor-vinroom)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "drill-destroy-control-tower-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-03)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life abs-task-mask)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node forest-protect-resolution)
              (game-task-node strip-drop-resolution)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask task2)
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-talk-to-kor)
            )
          (new 'static 'game-task-node-info
            :level 'drill
            :task (game-task drill-mech)
            :name "drill-mech-started-smashing"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor kor-vinroom)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-03)
                :scene #f
                )
              )
            :flags (game-task-node-flag task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node drill-mech-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'drillmid
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "drill3-warp"
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node drill-mech-resolution)
              :on-complete #f
              :on-fail #f
              )
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-drill-mech)
            )
          (new 'static 'game-task-node-info
            :level 'drill
            :task (game-task drill-mech)
            :name "drill-mech-smash-consoles"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor kor-vinroom)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-03)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life abs-task-mask reset-on-try)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node drill-mech-started-smashing)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask task2 task3)
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-drill-mech)
            )
          (new 'static 'game-task-node-info
            :level 'drill
            :task (game-task drill-mech)
            :name "drill-mech-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor kor-vinroom)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "drill-destroy-control-tower-intro"
                )
              )
            :flags (game-task-node-flag close-task abs-task-mask)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node drill-mech-smash-consoles)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask done)
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-drill-mech)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-save-lurkers)
            :name "city-save-lurkers-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor brutter-kiosk)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "city-save-lurkers-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-19)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-try)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node forest-protect-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-talk-to-brutter)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-save-lurkers)
            :name "city-save-lurkers-save-lurkers"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor brutter-kiosk)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "city-save-lurkers-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-19)
                :scene #f
                )
              )
            :flags (game-task-node-flag task-retry task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-save-lurkers-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'lmeetbrt
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "kiosk-start"
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-save-lurkers-resolution)
              :on-complete '(talker-spawn "bru001")
              :on-fail #f
              )
            :borrow '((ctywide 0 lmeetbrt display))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-city-meet-brutter)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-save-lurkers)
            :name "city-save-lurkers-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor brutter-kiosk)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "city-save-lurkers-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-19)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-save-lurkers-save-lurkers)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((ctywide 0 lmeetbrt display))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-city-meet-brutter)
            )
          (new 'static 'game-task-node-info
            :level 'stadium
            :task (game-task stadium-race-class)
            :name "stadium-race-class1-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor keira-garage)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "city-class-1-race-intro-a"
                :distance (meters 30)
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-12)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node drill-mech-resolution)
              (game-task-node city-save-lurkers-resolution)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((garage 0 lsamergd special))
            :open? #f
            :on-close '(task-close! "stadium-race-class2-select-bush")
            :description (text-id progress-missions-talk-to-keira)
            )
          (new 'static 'game-task-node-info
            :level 'stadium
            :task (game-task stadium-race-class)
            :name "stadium-race-class1-race"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor keira-garage)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "city-class-1-race-intro-a"
                )
              )
            :flags (game-task-node-flag save-on-life task-retry task-manager no-fail-on-death no-slow-down)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node stadium-race-class1-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :mask (task-manager-mask resolution-scene)
              :level 'ctywide
              :intro-scene #f
              :resolution-scene "city-class-1-race-res"
              :resolution-scene-continue #f
              :retry-continue "stadiumd-race-retry"
              :fail-continue "stadiumd-race-fail"
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node stadium-race-class1-race)
              :index 2
              :on-complete #f
              :on-fail #f
              )
            :borrow '((stadium 0 lracelit special) (ctywide 0 lracedf special))
            :open? (lambda ((arg0 game-task-node-info)) (= (level-status *level* 'stadium) 'active))
            :on-close #f
            :description (text-id progress-missions-stadium-race-class1)
            )
          (new 'static 'game-task-node-info
            :level 'stadium
            :task (game-task stadium-race-class)
            :name "stadium-race-class1-resolution"
            :when-open #f
            :flags (game-task-node-flag close-task save-on-life task-retry task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node stadium-race-class1-race)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'ctywide
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node stadium-race-class1-resolution)
              :on-complete #f
              :on-fail #f
              )
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-stadium-race-class1)
            )
          (new 'static 'game-task-node-info
            :level 'stadium
            :task (game-task stadium-race-class)
            :name "stadium-race-class1-select-bush"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-stadium)
                :action (game-task-action menu)
                :tex (game-task-icon gaticon-07)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-62)
                :scene #f
                )
              )
            :flags (game-task-node-flag no-restart)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node stadium-race-class1-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'palace
            :task (game-task palace-sneak-in)
            :name "palace-sneak-in-introduction"
            :when-open #f
            :flags (game-task-node-flag auto-close save-on-life abs-task-mask intro-wait city-wait task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node stadium-race-class1-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask task2)
            :on-open #f
            :info (new 'static 'task-manager-info
              :mask (task-manager-mask intro-scene)
              :level 'ctywide
              :intro-scene "ds163"
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node palace-sneak-in-introduction)
              :intro-delay #x1770
              :on-complete #f
              :on-fail #f
              )
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-palace-sneak-in)
            )
          (new 'static 'game-task-node-info
            :level 'palace
            :task (game-task palace-sneak-in)
            :name "palace-sneak-in-meeting"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor ashelin-throne)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "palace-sneak-in-res"
                :distance (meters 40)
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-26)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life reset-on-try)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node palace-sneak-in-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((throne 0 lashthrn special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-palace-sneak-in)
            )
          (new 'static 'game-task-node-info
            :level 'palace
            :task (game-task palace-sneak-in)
            :name "palace-sneak-in-palace-3"
            :when-open #f
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node palace-sneak-in-meeting)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-palace-sneak-in)
            )
          (new 'static 'game-task-node-info
            :level 'palace
            :task (game-task palace-sneak-in)
            :name "palace-sneak-in-door"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-26)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node palace-sneak-in-palace-3)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-palace-sneak-in)
            )
          (new 'static 'game-task-node-info
            :level 'palace
            :task (game-task palace-sneak-in)
            :name "palace-sneak-in-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-26)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task abs-task-mask)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node palace-sneak-in-door)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask done)
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-palace-sneak-in)
            )
          (new 'static 'game-task-node-info
            :level 'castle
            :task (game-task castle-break-in)
            :name "castle-break-in-introduction"
            :when-open #f
            :flags (game-task-node-flag save-on-life intro-wait city-wait task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node palace-sneak-in-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :mask (task-manager-mask intro-scene)
              :level 'ctywide
              :intro-scene "asht002"
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node castle-break-in-introduction)
              :intro-delay #x5dc
              :on-complete #f
              :on-fail #f
              )
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-castle-break-in)
            )
          (new 'static 'game-task-node-info
            :level 'castle
            :task (game-task castle-break-in)
            :name "castle-break-in-castle-1"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-20)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node castle-break-in-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'caspad
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node castle-break-in-castle-1)
              :on-complete #f
              :on-fail #f
              :end-sphere (new 'static 'sphere :x 195072.81 :y 223707.95 :z -6889803.0 :r 28672.0)
              )
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-castle-break-in)
            )
          (new 'static 'game-task-node-info
            :level 'castle
            :task (game-task castle-break-in)
            :name "castle-break-in-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-27)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node castle-break-in-castle-1)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-castle-break-in)
            )
          (new 'static 'game-task-node-info
            :level 'castle
            :task (game-task castle-boss)
            :name "castle-boss-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor baron-castle)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "castle-krew-boss-fight-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-27)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life abs-task-mask)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node castle-break-in-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask task1)
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :add (game-task-node-command add-gun-up-3)
            )
          (new 'static 'game-task-node-info
            :level 'castle
            :task (game-task castle-boss)
            :name "castle-boss-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-27)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node castle-boss-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-castle-boss)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-whack)
            :name "city-whack-pre-intro"
            :when-open #f
            :flags (game-task-node-flag save-on-life intro-wait city-wait task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node castle-boss-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :mask (task-manager-mask intro-scene)
              :level 'ctywide
              :intro-scene "tess001"
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-whack-pre-intro)
              :intro-delay #xbb8
              :on-complete #f
              :on-fail #f
              )
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-whack)
            :name "city-whack-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor tess-hiphog)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "city-whack-a-metal-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-08)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-whack-pre-intro)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((hiphog 0 lwhack special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-beat-whack)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-whack)
            :name "city-whack-wait"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor tess-hiphog)
                :action (game-task-action talk)
                :tex (game-task-icon gaticon-03)
                :scene "city-whack-a-metal-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-08)
                :scene #f
                )
              )
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-whack-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((hiphog 0 lwhack special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-beat-whack)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-whack)
            :name "city-whack-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-08)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task set-task-mask task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-whack-wait)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask task5)
            :on-open #f
            :info (new 'static 'task-manager-info
              :mask (task-manager-mask resolution-scene)
              :level 'lwhack
              :intro-scene #f
              :resolution-scene "city-whack-a-metal-res"
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue "hiphog-start"
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-whack-resolution)
              :on-complete #f
              :on-fail #f
              )
            :borrow '((hiphog 0 lwhack special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-beat-whack)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-whack)
            :name "city-whack-post-game"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor whack-a-metal-hiphog)
                :action (game-task-action play)
                :tex (game-task-icon gaticon-06)
                :scene "whack-game"
                :distance (meters 6)
                )
              )
            :flags (game-task-node-flag no-restart)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-whack-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'under
            :task (game-task under-mech)
            :name "under-mech-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor tess-hiphog)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              )
            :flags (game-task-node-flag auto-close save-on-life abs-task-mask)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-whack-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask task0)
            :on-open #f
            :info #f
            :borrow '((ctywide 1 lwideb special) (hiphog 0 lwhack special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-under-find-sig)
            )
          (new 'static 'game-task-node-info
            :level 'under
            :task (game-task under-mech)
            :name "under-mech-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-28)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor tess-hiphog)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task abs-task-mask)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node under-mech-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask task1)
            :on-open #f
            :info #f
            :borrow '((ctywide 1 lwideb special) (hiphog 0 lwhack special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-under-find-sig)
            )
          (new 'static 'game-task-node-info
            :level 'under
            :task (game-task under-sig)
            :name "under-sig-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-28)
                :scene #f
                )
              )
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node under-mech-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((ctywide 1 lwideb special))
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'under
            :task (game-task under-sig)
            :name "under-sig-centipede1-start"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-28)
                :scene #f
                )
              )
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node under-sig-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((ctywide 1 lwideb special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-under-escort-sig)
            )
          (new 'static 'game-task-node-info
            :level 'under
            :task (game-task under-sig)
            :name "under-sig-centipede1-end"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-28)
                :scene #f
                )
              )
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node under-sig-centipede1-start)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((ctywide 1 lwideb special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-under-escort-sig)
            )
          (new 'static 'game-task-node-info
            :level 'under
            :task (game-task under-sig)
            :name "under-sig-centipede2-start"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-28)
                :scene #f
                )
              )
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node under-sig-centipede1-end)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((ctywide 1 lwideb special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-under-escort-sig)
            )
          (new 'static 'game-task-node-info
            :level 'under
            :task (game-task under-sig)
            :name "under-sig-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-28)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task abs-task-mask)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node under-sig-centipede2-start)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask done)
            :on-open #f
            :info #f
            :borrow '((ctywide 1 lwideb special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-under-escort-sig)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-defend-stadium)
            :name "city-defend-stadium-pre-intro"
            :when-open #f
            :flags (game-task-node-flag save-on-life intro-wait city-wait task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node under-sig-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :mask (task-manager-mask intro-scene)
              :level 'ctywide
              :intro-scene "kei029"
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-defend-stadium-pre-intro)
              :intro-delay #x258
              :on-complete #f
              :on-fail #f
              )
            :borrow '((ctywide 1 lwideb special))
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'stadium
            :task (game-task city-defend-stadium)
            :name "city-defend-stadium-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor keira-stadium)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "city-defend-stadium-intro"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-29)
                :scene #f
                )
              )
            :flags (game-task-node-flag abs-task-mask task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-defend-stadium-pre-intro)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask task1)
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'stadium
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-defend-stadium-introduction)
              :on-complete #f
              :on-fail #f
              )
            :borrow '((stadium 0 lkeirift special) (ctywide 1 lwideb special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-talk-to-keira)
            )
          (new 'static 'game-task-node-info
            :level 'stadium
            :task (game-task city-defend-stadium)
            :name "city-defend-stadium-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-29)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task abs-task-mask task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-defend-stadium-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask done)
            :on-open #f
            :info (new 'static 'task-manager-info
              :mask (task-manager-mask resolution-scene)
              :level 'stadium
              :intro-scene #f
              :resolution-scene "city-defend-stadium-res"
              :resolution-scene-continue #f
              :retry-continue "stadium-blimp-intro"
              :fail-continue "stadium-blimp-intro"
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-defend-stadium-resolution)
              :on-complete #f
              :on-fail #f
              )
            :borrow '((stadium 0 lkeirift special) (ctywide 1 lwideb special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-city-defend-stadium)
            )
          (new 'static 'game-task-node-info
            :level 'consite
            :task (game-task consite-find-baron)
            :name "consite-find-baron-introduction"
            :when-open #f
            :flags (game-task-node-flag save-on-life intro-wait task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-defend-stadium-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :mask (task-manager-mask intro-scene)
              :level 'ctywide
              :intro-scene "vin013"
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node consite-find-baron-introduction)
              :intro-delay #x258
              :on-complete #f
              :on-fail #f
              )
            :borrow '((ctywide 1 lwideb special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-check-consite)
            )
          (new 'static 'game-task-node-info
            :level 'consite
            :task (game-task consite-find-baron)
            :name "consite-find-baron-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor baron-consite)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "consite-find-baron-res"
                :distance (meters 80)
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-25)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node consite-find-baron-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((ctywide 1 lwideb special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-check-consite)
            )
          (new 'static 'game-task-node-info
            :level 'nest
            :task (game-task nest-get-to-gun)
            :name "nest-get-to-gun-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor baron-consite)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life intro-wait city-wait task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node consite-find-baron-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :mask (task-manager-mask intro-scene)
              :level 'ctywide
              :intro-scene "asht006"
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node nest-get-to-gun-introduction)
              :intro-delay #x258
              :on-complete #f
              :on-fail #f
              )
            :borrow '((ctywide 1 lwideb special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-nest-get-to-gun)
            )
          (new 'static 'game-task-node-info
            :level 'nest
            :task (game-task nest-get-to-gun)
            :name "nest-get-to-gun-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-20)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node nest-get-to-gun-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((ctywide 1 lwideb special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-nest-get-to-gun)
            )
          (new 'static 'game-task-node-info
            :level 'nest
            :task (game-task nest-enter)
            :name "nest-enter-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-20)
                :scene #f
                )
              )
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node nest-get-to-gun-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((ctywide 1 lwideb special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-nest-attack)
            )
          (new 'static 'game-task-node-info
            :level 'nest
            :task (game-task nest-enter)
            :name "nest-enter-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-20)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node nest-enter-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((ctywide 1 lwideb special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-nest-attack)
            )
          (new 'static 'game-task-node-info
            :level 'nest
            :task (game-task nest-boss)
            :name "nest-boss-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-20)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node nest-enter-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((ctywide 1 lwideb special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-nest-boss)
            )
          (new 'static 'game-task-node-info
            :level 'nest
            :task (game-task nest-boss)
            :name "nest-boss-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-20)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node nest-boss-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'nestb
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node nest-boss-resolution)
              :on-complete #f
              :on-fail #f
              )
            :borrow '((ctywide 1 lwideb special) (outrocst 0 loutcstb special))
            :open? #f
            :on-close #f
            :description (text-id progress-missions-nest-boss)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-win)
            :name "city-win-pre-intro"
            :when-open #f
            :flags (game-task-node-flag clear-task-mask)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node nest-boss-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask task3 task5)
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-win)
            :name "city-win-introduction"
            :when-open #f
            :flags (game-task-node-flag save-on-life set-task-mask)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-win-pre-intro)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :task-mask (task-mask task4)
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-win)
            :name "city-win-resolution"
            :when-open #f
            :flags (game-task-node-flag close-task save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-win-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '((hiphog 0 lhipout display))
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-oracle)
            :name "city-oracle-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-31)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor oracle-oracle)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "city-oracle-intro"
                )
              )
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node atoll-water-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-go-to-oracle)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-oracle)
            :name "city-oracle-level0"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-31)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor oracle-oracle)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "city-oracle-level-0"
                )
              )
            :flags (game-task-node-flag save-on-life task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-oracle-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'oracle
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-oracle-level0)
              :on-complete #f
              :on-fail #f
              )
            :borrow '()
            :open? (lambda ((arg0 game-task-node-info)) (>= (-> *game-info* gem) 25.0))
            :on-close #f
            :add (game-task-node-command add-darkjak-0)
            :description (text-id progress-missions-go-to-oracle)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-oracle)
            :name "city-oracle-level0-training"
            :when-open #f
            :flags (game-task-node-flag save-on-life task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-oracle-level0)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'oracle
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-oracle-level0-training)
              :on-complete #f
              :on-fail #f
              )
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-go-to-oracle)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-oracle)
            :name "city-oracle-level1"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-31)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor oracle-oracle)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "city-oracle-level-1"
                )
              )
            :flags (game-task-node-flag save-on-life task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-oracle-level0-training)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'oracle
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-oracle-level1)
              :on-complete #f
              :on-fail #f
              )
            :borrow '()
            :open? (lambda ((arg0 game-task-node-info)) (>= (-> *game-info* gem) 200.0))
            :on-close #f
            :add (game-task-node-command add-darkjak-1)
            :description (text-id progress-missions-go-to-oracle)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-oracle)
            :name "city-oracle-level1-training"
            :when-open #f
            :flags (game-task-node-flag save-on-life task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-oracle-level1)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'oracle
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-oracle-level1-training)
              :on-complete #f
              :on-fail #f
              )
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-go-to-oracle)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-oracle)
            :name "city-oracle-level2"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-31)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor oracle-oracle)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "city-oracle-level-2"
                )
              )
            :flags (game-task-node-flag save-on-life task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-oracle-level1-training)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'oracle
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-oracle-level2)
              :on-complete #f
              :on-fail #f
              )
            :borrow '()
            :open? (lambda ((arg0 game-task-node-info)) (>= (-> *game-info* gem) 200.0))
            :on-close #f
            :add (game-task-node-command add-darkjak-2)
            :description (text-id progress-missions-go-to-oracle)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-oracle)
            :name "city-oracle-level2-training"
            :when-open #f
            :flags (game-task-node-flag save-on-life task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-oracle-level2)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'oracle
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-oracle-level2-training)
              :on-complete #f
              :on-fail #f
              )
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-go-to-oracle)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-oracle)
            :name "city-oracle-level3"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-31)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor oracle-oracle)
                :action (game-task-action say)
                :tex (game-task-icon gaticon-02)
                :scene "city-oracle-level-3"
                )
              )
            :flags (game-task-node-flag save-on-life task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-oracle-level2-training)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'oracle
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-oracle-level3)
              :on-complete #f
              :on-fail #f
              )
            :borrow '()
            :open? (lambda ((arg0 game-task-node-info)) (>= (-> *game-info* gem) 100.0))
            :on-close #f
            :add (game-task-node-command add-darkjak-3)
            :description (text-id progress-missions-go-to-oracle)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-oracle)
            :name "city-oracle-level3-training"
            :when-open #f
            :flags (game-task-node-flag save-on-life task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-oracle-level3)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'oracle
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue #f
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-oracle-level3-training)
              :on-complete #f
              :on-fail #f
              )
            :borrow '()
            :open? #f
            :on-close #f
            :description (text-id progress-missions-go-to-oracle)
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-ring-1)
            :name "city-burning-bush-ring-1-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-slumb)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-04)
                :scene "bb01int"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-47)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-try)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node atoll-water-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-ring-1)
            :name "city-burning-bush-ring-1-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-slumb)
                :action (game-task-action play)
                :tex (game-task-icon gaticon-06)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task task-retry task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-burning-bush-ring-1-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'lbbush
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "ctyslumb-burning-bush"
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-burning-bush-ring-1-resolution)
              :index 1
              :on-complete '(begin (talker-spawn "bb01win") (apply ,(lambda () (send-event *target* 'get-pickup (pickup-type skill) (-> *FACT-bank* super-skill-inc))))) ;; patched
              :on-fail #f
              )
            :borrow '((ctywide 0 lbbush display))
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-get-to-1)
            :name "city-burning-bush-get-to-1-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-sluma)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-04)
                :scene "bb26int"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-46)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-try)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-red-gun-training-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-get-to-1)
            :name "city-burning-bush-get-to-1-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-sluma)
                :action (game-task-action play)
                :tex (game-task-icon gaticon-06)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task task-retry task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-burning-bush-get-to-1-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'lbbush
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "ctysluma-burning-bush"
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-burning-bush-get-to-1-resolution)
              :index 1
              :on-complete '(talker-spawn "bb10win")
              :on-fail #f
              )
            :borrow '((ctywide 0 lbbush display))
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-get-to-2)
            :name "city-burning-bush-get-to-2-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-indb)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-04)
                :scene "bb30int"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-56)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-try)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node atoll-sig-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-get-to-2)
            :name "city-burning-bush-get-to-2-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-indb)
                :action (game-task-action play)
                :tex (game-task-icon gaticon-06)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task task-retry task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-burning-bush-get-to-2-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'lbbush
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "ctyindb-burning-bush"
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-burning-bush-get-to-2-resolution)
              :index #xe
              :on-complete '(talker-spawn "bb10win")
              :on-fail #f
              )
            :borrow '((ctywide 0 lbbush display))
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-get-to-3)
            :name "city-burning-bush-get-to-3-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-port-3)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-04)
                :scene "bb27int"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-50)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-try)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node sewer-enemy-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-get-to-3)
            :name "city-burning-bush-get-to-3-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-port-3)
                :action (game-task-action play)
                :tex (game-task-icon gaticon-06)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task task-retry task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-burning-bush-get-to-3-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'lbbush
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "ctyport-burning-bush-3"
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-burning-bush-get-to-3-resolution)
              :index 3
              :on-complete '(talker-spawn "bb10win")
              :on-fail #f
              )
            :borrow '((ctywide 0 lbbush display))
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-get-to-4)
            :name "city-burning-bush-get-to-4-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-slumc)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-04)
                :scene "bb28int"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-49)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-try)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node atoll-battle-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-get-to-4)
            :name "city-burning-bush-get-to-4-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-slumc)
                :action (game-task-action play)
                :tex (game-task-icon gaticon-06)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task task-retry task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-burning-bush-get-to-4-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'lbbush
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "ctyslumc-burning-bush"
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-burning-bush-get-to-4-resolution)
              :index #xa
              :on-complete '(talker-spawn "bb10win")
              :on-fail #f
              )
            :borrow '((ctywide 0 lbbush display))
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-collection-1)
            :name "city-burning-bush-collection-1-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-genb)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-04)
                :scene "bb19int"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-42)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-try)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node stadium-board1-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-collection-1)
            :name "city-burning-bush-collection-1-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-genb)
                :action (game-task-action play)
                :tex (game-task-icon gaticon-06)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task task-retry task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-burning-bush-collection-1-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'lbbush
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "ctygenb-burning-bush"
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-burning-bush-collection-1-resolution)
              :index 1
              :on-complete '(begin (talker-spawn "bb19win") (apply ,(lambda () (send-event *target* 'get-pickup (pickup-type skill) (-> *FACT-bank* super-skill-inc))))) ;; patched
              :on-fail #f
              )
            :borrow '((ctywide 0 lbbush display))
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-racepoint-1)
            :name "city-burning-bush-racepoint-1-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-marka)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-04)
                :scene "bb10int"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-57)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-try)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node mountain-collection-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? (lambda ((arg0 game-task-node-info)) (or (not (task-node-closed? (game-task-node forest-scouts-resolution)))
                                                     (task-node-closed? (game-task-node city-escort-kid-resolution))
                                                     )
                    )
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-racepoint-1)
            :name "city-burning-bush-racepoint-1-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-marka)
                :action (game-task-action play)
                :tex (game-task-icon gaticon-06)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task task-retry task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-burning-bush-racepoint-1-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'ctywide
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "ctymarka-burning-bush"
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-burning-bush-racepoint-1-resolution)
              :on-complete '(begin (talker-spawn "bb14win") (apply ,(lambda () (send-event *target* 'get-pickup (pickup-type skill) (-> *FACT-bank* super-skill-inc))))) ;; patched
              :on-fail #f
              )
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-ring-2)
            :name "city-burning-bush-ring-2-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-port)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-04)
                :scene "bb02int"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-52)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-try)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node forest-scouts-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-ring-2)
            :name "city-burning-bush-ring-2-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-port)
                :action (game-task-action play)
                :tex (game-task-icon gaticon-06)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task task-retry task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-burning-bush-ring-2-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'lbbush
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "ctyport-burning-bush"
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-burning-bush-ring-2-resolution)
              :index 2
              :on-complete '(begin (talker-spawn "bb02win") (apply ,(lambda () (send-event *target* 'get-pickup (pickup-type skill) (-> *FACT-bank* super-skill-inc))))) ;; patched
              :on-fail #f
              )
            :borrow '((ctywide 0 lbbush display))
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-get-to-5)
            :name "city-burning-bush-get-to-5-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-farmb)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-04)
                :scene "bb29int"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-54)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-try)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node forest-scouts-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-get-to-5)
            :name "city-burning-bush-get-to-5-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-farmb)
                :action (game-task-action play)
                :tex (game-task-icon gaticon-06)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task task-retry task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-burning-bush-get-to-5-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'lbbush
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "ctyfarmb-burning-bush"
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-burning-bush-get-to-5-resolution)
              :index 5
              :on-complete '(talker-spawn "bb10win")
              :on-fail #f
              )
            :borrow '((ctywide 0 lbbush display))
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-get-to-6)
            :name "city-burning-bush-get-to-6-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-markb-2)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-04)
                :scene "bb31int"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-59)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-try)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-intercept-tanker-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-get-to-6)
            :name "city-burning-bush-get-to-6-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-markb-2)
                :action (game-task-action play)
                :tex (game-task-icon gaticon-06)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task task-retry task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-burning-bush-get-to-6-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'lbbush
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "ctymarkb-burning-bush-2"
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-burning-bush-get-to-6-resolution)
              :index #xd
              :on-complete '(talker-spawn "bb10win")
              :on-fail #f
              )
            :borrow '((ctywide 0 lbbush display))
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-shuttle-1)
            :name "city-burning-bush-shuttle-1-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-marka)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-04)
                :scene "bb07int"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor brutter-kiosk)
                :action (game-task-action idle)
                :tex (game-task-icon gaticon-01)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-57)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-try)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-meet-brutter-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-shuttle-1)
            :name "city-burning-bush-shuttle-1-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-marka)
                :action (game-task-action play)
                :tex (game-task-icon gaticon-06)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task task-retry task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-burning-bush-shuttle-1-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'lshuttle
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "ctymarka-burning-bush"
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-burning-bush-shuttle-1-resolution)
              :on-complete '(begin (talker-spawn "bb07win") (apply ,(lambda () (send-event *target* 'get-pickup (pickup-type skill) (-> *FACT-bank* super-skill-inc))))) ;; patched
              :on-fail #f
              )
            :borrow '((ctywide 0 lshuttle display))
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-get-to-7)
            :name "city-burning-bush-get-to-7-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-markb)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-04)
                :scene "bb32int"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-58)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-try)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node drill-ship-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-get-to-7)
            :name "city-burning-bush-get-to-7-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-markb)
                :action (game-task-action play)
                :tex (game-task-icon gaticon-06)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task task-retry task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-burning-bush-get-to-7-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'lbbush
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "ctymarkb-burning-bush"
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-burning-bush-get-to-7-resolution)
              :index #xc
              :on-complete '(talker-spawn "bb10win")
              :on-fail #f
              )
            :borrow '((ctywide 0 lbbush display))
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-get-to-8)
            :name "city-burning-bush-get-to-8-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-farma)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-04)
                :scene "bb33int"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-53)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-try)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node forest-hunt-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-get-to-8)
            :name "city-burning-bush-get-to-8-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-farma)
                :action (game-task-action play)
                :tex (game-task-icon gaticon-06)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task task-retry task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-burning-bush-get-to-8-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'lbbush
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "ctyfarma-burning-bush"
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-burning-bush-get-to-8-resolution)
              :index #x6
              :on-complete '(talker-spawn "bb10win")
              :on-fail #f
              )
            :borrow '((ctywide 0 lbbush display))
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-get-to-9)
            :name "city-burning-bush-get-to-9-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-genb)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-04)
                :scene "bb34int"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-42)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-try)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node stadium-race-class3-resolution)
              (game-task-node city-burning-bush-collection-1-resolution)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-get-to-9)
            :name "city-burning-bush-get-to-9-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-genb)
                :action (game-task-action play)
                :tex (game-task-icon gaticon-06)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task task-retry task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-burning-bush-get-to-9-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'lbbush
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "ctygenb-burning-bush"
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-burning-bush-get-to-9-resolution)
              :index #x8
              :on-complete '(talker-spawn "bb10win")
              :on-fail #f
              )
            :borrow '((ctywide 0 lbbush display))
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-collection-2)
            :name "city-burning-bush-collection-2-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-genc)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-04)
                :scene "bb20int"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-44)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-try)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-destroy-guard-vehicles-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-collection-2)
            :name "city-burning-bush-collection-2-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-genc)
                :action (game-task-action play)
                :tex (game-task-icon gaticon-06)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task task-retry task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-burning-bush-collection-2-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'lbbush
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "ctygenc-burning-bush"
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-burning-bush-collection-2-resolution)
              :on-complete '(begin (talker-spawn "bb20win") (apply ,(lambda () (send-event *target* 'get-pickup (pickup-type skill) (-> *FACT-bank* super-skill-inc))))) ;; patched
              :on-fail #f
              )
            :borrow '((ctywide 0 lbbush display))
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-get-to-10)
            :name "city-burning-bush-get-to-10-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-inda)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-04)
                :scene "bb35int"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-55)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-try)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-errol-challenge-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-get-to-10)
            :name "city-burning-bush-get-to-10-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-inda)
                :action (game-task-action play)
                :tex (game-task-icon gaticon-06)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task task-retry task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-burning-bush-get-to-10-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'lbbush
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "ctyinda-burning-bush"
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-burning-bush-get-to-10-resolution)
              :index 2
              :on-complete '(talker-spawn "bb10win")
              :on-fail #f
              )
            :borrow '((ctywide 0 lbbush display))
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-get-to-11)
            :name "city-burning-bush-get-to-11-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-gena)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-04)
                :scene "bb36int"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-40)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-try)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-errol-challenge-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-get-to-11)
            :name "city-burning-bush-get-to-11-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-gena)
                :action (game-task-action play)
                :tex (game-task-icon gaticon-06)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task task-retry task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-burning-bush-get-to-11-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'lbbush
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "ctygena-burning-bush"
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-burning-bush-get-to-11-resolution)
              :index #x9
              :on-complete '(talker-spawn "bb10win")
              :on-fail #f
              )
            :borrow '((ctywide 0 lbbush display))
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-ring-3)
            :name "city-burning-bush-ring-3-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-slumb)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-04)
                :scene "bb03int"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-47)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-try)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node ruins-mech-resolution)
              (game-task-node city-burning-bush-ring-1-resolution)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-ring-3)
            :name "city-burning-bush-ring-3-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-slumb)
                :action (game-task-action play)
                :tex (game-task-icon gaticon-06)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task task-retry task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-burning-bush-ring-3-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'lbbush
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "ctyslumb-burning-bush"
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-burning-bush-ring-3-resolution)
              :on-complete '(begin (talker-spawn "bb03win") (apply ,(lambda () (send-event *target* 'get-pickup (pickup-type skill) (-> *FACT-bank* super-skill-inc))))) ;; patched
              :on-fail #f
              )
            :borrow '((ctywide 0 lbbush display))
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-get-to-12)
            :name "city-burning-bush-get-to-12-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-marka)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-04)
                :scene "bb37int"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-57)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-try)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node forest-protect-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-get-to-12)
            :name "city-burning-bush-get-to-12-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-marka)
                :action (game-task-action play)
                :tex (game-task-icon gaticon-06)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task task-retry task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-burning-bush-get-to-12-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'lbbush
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "ctymarka-burning-bush"
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-burning-bush-get-to-12-resolution)
              :on-complete '(talker-spawn "bb10win")
              :on-fail #f
              )
            :borrow '((ctywide 0 lbbush display))
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-bombbot-1)
            :name "city-burning-bush-bombbot-1-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-marka)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-04)
                :scene "bb05int"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-57)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-try)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-save-lurkers-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-bombbot-1)
            :name "city-burning-bush-bombbot-1-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-marka)
                :action (game-task-action play)
                :tex (game-task-icon gaticon-06)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task task-retry task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-burning-bush-bombbot-1-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'lbombbot
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "ctymarka-burning-bush"
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-burning-bush-bombbot-1-resolution)
              :on-complete '(begin (talker-spawn "bb05win") (apply ,(lambda () (send-event *target* 'get-pickup (pickup-type skill) (-> *FACT-bank* super-skill-inc))))) ;; patched
              :on-fail #f
              )
            :borrow '((ctywide 0 lbombbot display))
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-get-to-13)
            :name "city-burning-bush-get-to-13-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-slumb-2)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-04)
                :scene "bb28int"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-48)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-try)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node stadium-race-class1-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-get-to-13)
            :name "city-burning-bush-get-to-13-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-slumb-2)
                :action (game-task-action play)
                :tex (game-task-icon gaticon-06)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task task-retry task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-burning-bush-get-to-13-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'lbbush
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "ctyslumb-burning-bush-2"
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-burning-bush-get-to-13-resolution)
              :index #xb
              :on-complete '(talker-spawn "bb10win")
              :on-fail #f
              )
            :borrow '((ctywide 0 lbbush display))
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-get-to-14)
            :name "city-burning-bush-get-to-14-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-gena-2)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-04)
                :scene "bb29int"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-41)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-try)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node nest-boss-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-get-to-14)
            :name "city-burning-bush-get-to-14-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-gena-2)
                :action (game-task-action play)
                :tex (game-task-icon gaticon-06)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task task-retry task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-burning-bush-get-to-14-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'lbbush
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "ctygena-burning-bush-2"
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-burning-bush-get-to-14-resolution)
              :index #x7
              :on-complete '(talker-spawn "bb10win")
              :on-fail #f
              )
            :borrow '((ctywide 0 lbbush display))
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-get-to-15)
            :name "city-burning-bush-get-to-15-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-pal)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-04)
                :scene "bb30int"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-60)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-try)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node nest-boss-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-get-to-15)
            :name "city-burning-bush-get-to-15-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-pal)
                :action (game-task-action play)
                :tex (game-task-icon gaticon-06)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task task-retry task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-burning-bush-get-to-15-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'lbbush
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "ctypal-burning-bush"
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-burning-bush-get-to-15-resolution)
              :index 4
              :on-complete '(talker-spawn "bb10win")
              :on-fail #f
              )
            :borrow '((ctywide 0 lbbush display))
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-collection-3)
            :name "city-burning-bush-collection-3-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-farma)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-04)
                :scene "cityv152"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-53)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-try)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node nest-boss-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-collection-3)
            :name "city-burning-bush-collection-3-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-farma)
                :action (game-task-action play)
                :tex (game-task-icon gaticon-06)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task task-retry task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-burning-bush-collection-3-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'lbbush
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "ctyfarma-burning-bush"
              :fail-continue #f
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-burning-bush-collection-3-resolution)
              :index 2
              :on-complete '(begin (talker-spawn "cityv154") (apply ,(lambda () (send-event *target* 'get-pickup (pickup-type skill) (-> *FACT-bank* super-skill-inc))))) ;; patched
              :on-fail #f
              )
            :borrow '((ctywide 0 lbbush display))
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-race-errol)
            :name "city-burning-bush-race-errol-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-port)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-04)
                :scene "bb23int"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-52)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-try)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-errol-challenge-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-race-errol)
            :name "city-burning-bush-race-errol-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-port)
                :action (game-task-action play)
                :tex (game-task-icon gaticon-06)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task save-on-life task-retry city-wait task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-burning-bush-race-errol-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'lerlchal
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "ctyport-errol-race-retry"
              :fail-continue "ctyport-burning-bush"
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-burning-bush-race-errol-resolution)
              :index #x7
              :on-complete #f
              :on-fail #f
              )
            :borrow '((ctywide 0 lerlchal display))
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-race-port)
            :name "city-burning-bush-race-port-introduction"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-port-3)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-04)
                :scene "bb24int"
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-50)
                :scene #f
                )
              )
            :flags (game-task-node-flag save-on-try)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node stadium-race-class1-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'city
            :task (game-task city-burning-bush-race-port)
            :name "city-burning-bush-race-port-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-port-3)
                :action (game-task-action play)
                :tex (game-task-icon gaticon-06)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task save-on-life task-retry city-wait task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node city-burning-bush-race-port-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'lprtrace
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "ctyport-race-retry"
              :fail-continue "ctyport-burning-bush-3"
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node city-burning-bush-race-port-resolution)
              :index #x8
              :on-complete #f
              :on-fail #f
              )
            :borrow '((ctywide 0 lprtrace display))
            :open? #f
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'stadium
            :task (game-task stadium-burning-bush-race-board)
            :name "stadium-burning-bush-race-board-introduction"
            :when-open #f
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node stadium-race-class3-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close '(begin
               (when (task-closed? "stadium-race-class3-resolution")
                 (task-open! "stadium-burning-bush-race-class3-introduction")
                 (task-open! "stadium-burning-bush-race-class3-r-introduction")
                 )
               (when (task-closed? "stadium-race-class2-resolution")
                 (task-open! "stadium-burning-bush-race-class2-introduction")
                 (task-open! "stadium-burning-bush-race-class2-r-introduction")
                 )
               (when (task-closed? "stadium-race-class1-resolution")
                 (task-open! "stadium-burning-bush-race-class1-introduction")
                 (task-open! "stadium-burning-bush-race-class1-r-introduction")
                 )
               )
            )
          (new 'static 'game-task-node-info
            :level 'stadium
            :task (game-task stadium-burning-bush-race-board)
            :name "stadium-burning-bush-race-board-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-stadium)
                :action (game-task-action play)
                :tex (game-task-icon gaticon-06)
                :scene #f
                )
              (new 'static 'game-task-event
                :actor (game-task-actor minimap)
                :action (game-task-action show)
                :tex (game-task-icon gaticon-39)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task task-retry task-manager)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node stadium-burning-bush-race-board-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'ctywide
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "skatea-training-judge"
              :fail-continue "stadium-burning-bush"
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node stadium-burning-bush-race-board-resolution)
              :on-complete #f
              :on-fail #f
              )
            :borrow '()
            :open? (lambda ((arg0 game-task-node-info)) (let ((v1-1 (level-get-target-inside *level*)))
                                                   (the-as symbol (and v1-1 (= (-> v1-1 info taskname) (-> arg0 level))))
                                                   )
                    )
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'stadium
            :task (game-task stadium-burning-bush-race-class3)
            :name "stadium-burning-bush-race-class3-introduction"
            :when-open #f
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node stadium-race-class3-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close '(begin
               (when (task-closed? "stadium-board1-resolution")
                 (task-open! "stadium-burning-bush-race-board-introduction")
                 )
               (when (task-closed? "stadium-race-class2-resolution")
                 (task-open! "stadium-burning-bush-race-class2-introduction")
                 (task-open! "stadium-burning-bush-race-class2-r-introduction")
                 )
               (when (task-closed? "stadium-race-class1-resolution")
                 (task-open! "stadium-burning-bush-race-class1-introduction")
                 (task-open! "stadium-burning-bush-race-class1-r-introduction")
                 )
               (task-open! "stadium-burning-bush-race-class3-r-introduction")
               )
            )
          (new 'static 'game-task-node-info
            :level 'stadium
            :task (game-task stadium-burning-bush-race-class3)
            :name "stadium-burning-bush-race-class3-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-stadium)
                :action (game-task-action play)
                :tex (game-task-icon gaticon-06)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task task-retry task-manager no-slow-down)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node stadium-burning-bush-race-class3-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'ctywide
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "stadiumb-race-retry"
              :fail-continue "stadiumb-race-fail"
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node stadium-burning-bush-race-class3-resolution)
              :index 4
              :on-complete #f
              :on-fail #f
              )
            :borrow '((stadium 0 lracelit special) (ctywide 0 lracebf special))
            :open? (lambda ((arg0 game-task-node-info)) (let ((v1-1 (level-get-target-inside *level*)))
                                                   (the-as symbol (and v1-1 (= (-> v1-1 info taskname) (-> arg0 level))))
                                                   )
                    )
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'stadium
            :task (game-task stadium-burning-bush-race-class2)
            :name "stadium-burning-bush-race-class2-introduction"
            :when-open #f
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node stadium-race-class2-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close '(begin
               (when (task-closed? "stadium-board1-resolution")
                 (task-open! "stadium-burning-bush-race-board-introduction")
                 )
               (when (task-closed? "stadium-race-class3-resolution")
                 (task-open! "stadium-burning-bush-race-class3-introduction")
                 (task-open! "stadium-burning-bush-race-class3-r-introduction")
                 )
               (when (task-closed? "stadium-race-class1-resolution")
                 (task-open! "stadium-burning-bush-race-class1-introduction")
                 (task-open! "stadium-burning-bush-race-class1-r-introduction")
                 )
               (task-open! "stadium-burning-bush-race-class2-r-introduction")
               )
            )
          (new 'static 'game-task-node-info
            :level 'stadium
            :task (game-task stadium-burning-bush-race-class2)
            :name "stadium-burning-bush-race-class2-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-stadium)
                :action (game-task-action play)
                :tex (game-task-icon gaticon-06)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task task-retry task-manager no-slow-down)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node stadium-burning-bush-race-class2-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'ctywide
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "stadiumc-race-retry"
              :fail-continue "stadiumc-race-fail"
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node stadium-burning-bush-race-class2-resolution)
              :index 5
              :on-complete #f
              :on-fail #f
              )
            :borrow '((stadium 0 lracelit special) (ctywide 0 lracecf special))
            :open? (lambda ((arg0 game-task-node-info)) (let ((v1-1 (level-get-target-inside *level*)))
                                                   (the-as symbol (and v1-1 (= (-> v1-1 info taskname) (-> arg0 level))))
                                                   )
                    )
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'stadium
            :task (game-task stadium-burning-bush-race-class1)
            :name "stadium-burning-bush-race-class1-introduction"
            :when-open #f
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node stadium-race-class1-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? #f
            :on-close '(begin
               (when (task-closed? "stadium-board1-resolution")
                 (task-open! "stadium-burning-bush-race-board-introduction")
                 )
               (when (task-closed? "stadium-race-class3-resolution")
                 (task-open! "stadium-burning-bush-race-class3-introduction")
                 (task-open! "stadium-burning-bush-race-class3-r-introduction")
                 )
               (when (task-closed? "stadium-race-class2-resolution")
                 (task-open! "stadium-burning-bush-race-class2-introduction")
                 (task-open! "stadium-burning-bush-race-class2-r-introduction")
                 )
               (task-open! "stadium-burning-bush-race-class1-r-introduction")
               )
            )
          (new 'static 'game-task-node-info
            :level 'stadium
            :task (game-task stadium-burning-bush-race-class1)
            :name "stadium-burning-bush-race-class1-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-stadium)
                :action (game-task-action play)
                :tex (game-task-icon gaticon-06)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task task-retry task-manager no-slow-down)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node stadium-burning-bush-race-class1-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'ctywide
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "stadiumd-race-retry"
              :fail-continue "stadiumd-race-fail"
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node stadium-burning-bush-race-class1-resolution)
              :index #x6
              :on-complete #f
              :on-fail #f
              )
            :borrow '((stadium 0 lracelit special) (ctywide 0 lracedf special))
            :open? (lambda ((arg0 game-task-node-info)) (let ((v1-1 (level-get-target-inside *level*)))
                                                   (the-as symbol (and v1-1 (= (-> v1-1 info taskname) (-> arg0 level))))
                                                   )
                    )
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'stadium
            :task (game-task stadium-burning-bush-race-class3-r)
            :name "stadium-burning-bush-race-class3-r-introduction"
            :when-open #f
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node stadium-race-class1-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? (lambda ((arg0 game-task-node-info)) (logtest? (-> *game-info* secrets) (game-secrets reverse-races)))
            :on-close '(begin
               (task-open! "stadium-burning-bush-race-board-introduction")
               (task-open! "stadium-burning-bush-race-class2-introduction")
               (task-open! "stadium-burning-bush-race-class2-r-introduction")
               (task-open! "stadium-burning-bush-race-class1-introduction")
               (task-open! "stadium-burning-bush-race-class1-r-introduction")
               (task-open! "stadium-burning-bush-race-class3-introduction")
               )
            )
          (new 'static 'game-task-node-info
            :level 'stadium
            :task (game-task stadium-burning-bush-race-class3-r)
            :name "stadium-burning-bush-race-class3-r-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-stadium)
                :action (game-task-action play)
                :tex (game-task-icon gaticon-06)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task task-retry task-manager no-slow-down)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node stadium-burning-bush-race-class3-r-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'ctywide
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "stadiumb-race-r-retry"
              :fail-continue "stadiumb-race-fail"
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node stadium-burning-bush-race-class3-r-resolution)
              :index #x9
              :on-complete #f
              :on-fail #f
              )
            :borrow '((stadium 0 lracelit special) (ctywide 0 lracebb special))
            :open? (lambda ((arg0 game-task-node-info)) (let ((v1-1 (level-get-target-inside *level*)))
                                                   (the-as symbol (and v1-1 (= (-> v1-1 info taskname) (-> arg0 level))))
                                                   )
                    )
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'stadium
            :task (game-task stadium-burning-bush-race-class2-r)
            :name "stadium-burning-bush-race-class2-r-introduction"
            :when-open #f
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node stadium-race-class1-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? (lambda ((arg0 game-task-node-info)) (logtest? (-> *game-info* secrets) (game-secrets reverse-races)))
            :on-close '(begin
               (task-open! "stadium-burning-bush-race-board-introduction")
               (task-open! "stadium-burning-bush-race-class3-introduction")
               (task-open! "stadium-burning-bush-race-class3-r-introduction")
               (task-open! "stadium-burning-bush-race-class1-introduction")
               (task-open! "stadium-burning-bush-race-class1-r-introduction")
               (task-open! "stadium-burning-bush-race-class2-introduction")
               )
            )
          (new 'static 'game-task-node-info
            :level 'stadium
            :task (game-task stadium-burning-bush-race-class2-r)
            :name "stadium-burning-bush-race-class2-r-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-stadium)
                :action (game-task-action play)
                :tex (game-task-icon gaticon-06)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task task-retry task-manager no-slow-down)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node stadium-burning-bush-race-class2-r-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'ctywide
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "stadiumc-race-r-retry"
              :fail-continue "stadiumc-race-fail"
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node stadium-burning-bush-race-class2-r-resolution)
              :index #xa
              :on-complete #f
              :on-fail #f
              )
            :borrow '((stadium 0 lracelit special) (ctywide 0 lracecb special))
            :open? (lambda ((arg0 game-task-node-info)) (let ((v1-1 (level-get-target-inside *level*)))
                                                   (the-as symbol (and v1-1 (= (-> v1-1 info taskname) (-> arg0 level))))
                                                   )
                    )
            :on-close #f
            )
          (new 'static 'game-task-node-info
            :level 'stadium
            :task (game-task stadium-burning-bush-race-class1-r)
            :name "stadium-burning-bush-race-class1-r-introduction"
            :when-open #f
            :flags (game-task-node-flag save-on-life)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node stadium-race-class1-resolution)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info #f
            :borrow '()
            :open? (lambda ((arg0 game-task-node-info)) (logtest? (-> *game-info* secrets) (game-secrets reverse-races)))
            :on-close '(begin
               (task-open! "stadium-burning-bush-race-board-introduction")
               (task-open! "stadium-burning-bush-race-class3-introduction")
               (task-open! "stadium-burning-bush-race-class3-r-introduction")
               (task-open! "stadium-burning-bush-race-class2-introduction")
               (task-open! "stadium-burning-bush-race-class2-r-introduction")
               (task-open! "stadium-burning-bush-race-class1-introduction")
               )
            )
          (new 'static 'game-task-node-info
            :level 'stadium
            :task (game-task stadium-burning-bush-race-class1-r)
            :name "stadium-burning-bush-race-class1-r-resolution"
            :when-open (new 'static 'boxed-array :type game-task-event
              (new 'static 'game-task-event
                :actor (game-task-actor burning-bush-stadium)
                :action (game-task-action play)
                :tex (game-task-icon gaticon-06)
                :scene #f
                )
              )
            :flags (game-task-node-flag close-task task-retry task-manager no-slow-down)
            :parent-node (new 'static 'array game-task-node 4
              (game-task-node stadium-burning-bush-race-class1-r-introduction)
              (game-task-node none)
              (game-task-node none)
              (game-task-node none)
              )
            :on-open #f
            :info (new 'static 'task-manager-info
              :level 'ctywide
              :intro-scene #f
              :resolution-scene #f
              :resolution-scene-continue #f
              :retry-continue "stadiumd-race-r-retry"
              :fail-continue "stadiumd-race-fail"
              :init-hook #f
              :cleanup-hook #f
              :update-hook #f
              :code-hook #f
              :complete-hook #f
              :fail-hook #f
              :event-hook #f
              :final-node (game-task-node stadium-burning-bush-race-class1-r-resolution)
              :index #xb
              :on-complete #f
              :on-fail #f
              )
            :borrow '((stadium 0 lracelit special) (ctywide 0 lracedb special))
            :open? (lambda ((arg0 game-task-node-info)) (let ((v1-1 (level-get-target-inside *level*)))
                                                   (the-as symbol (and v1-1 (= (-> v1-1 info taskname) (-> arg0 level))))
                                                   )
                    )
            :on-close #f
            )
          )
        )
  (set! (-> gp-0 mission-list) (new 'global 'boxed-array game-task-node-info 324))
  (dotimes (v1-3 (-> gp-0 sub-task-list length))
    (if (-> gp-0 sub-task-list v1-3 info)
        (set! (-> gp-0 sub-task-list v1-3 info manager) (the-as handle #f))
        )
    )
  (when (zero? (-> gp-0 task-perm-list))
    (let ((v1-8 (new 'global 'entity-perm-array 110)))
      (set! (-> gp-0 task-perm-list) v1-8)
      (dotimes (a0-16 (-> v1-8 length))
        (set! (-> v1-8 data a0-16 task) (the-as game-task a0-16))
        )
      (logior! (-> v1-8 data 1 status) (entity-perm-status complete))
      )
    )
  )

(kmemclose)
