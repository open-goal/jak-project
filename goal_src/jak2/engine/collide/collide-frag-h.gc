;;-*-Lisp-*-
(in-package goal)

;; name: collide-frag-h.gc
;; name in dgo: collide-frag-h
;; dgos: ENGINE, GAME

;; DECOMP BEGINS

(deftype collide-frag-vertex (vector)
  ()
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype collide-frag-mesh (basic)
  ((packed-data     uint32           :offset-assert   4)
   (pat-array       uint32           :offset-assert   8)
   (strip-data-len  uint16           :offset-assert  12)
   (poly-count      uint16           :offset-assert  14)
   (base-trans      vector4w :inline :offset-assert  16)
   (vertex-count    uint8            :offset         28)
   (vertex-data-qwc uint8            :offset         29)
   (total-qwc       uint8            :offset         30)
   (unused          uint8            :offset         31)
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

(deftype collide-fragment (drawable)
  ((mesh        collide-frag-mesh  :offset   8)
   (collide-new basic              :offset  12)
   )
  :method-count-assert 17
  :size-assert         #x20
  :flag-assert         #x1100000020
  )

(deftype drawable-inline-array-collide-fragment (drawable-inline-array)
  ((data collide-fragment 1 :inline :offset-assert  32)
   (pad  uint32                     :offset-assert  64)
   )
  :method-count-assert 17
  :size-assert         #x44
  :flag-assert         #x1100000044
  )

(deftype drawable-tree-collide-fragment (drawable-tree)
  ()
  :method-count-assert 17
  :size-assert         #x20
  :flag-assert         #x1100000020
  )

