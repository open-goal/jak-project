;;-*-Lisp-*-
(in-package goal)

;; name: hud-h.gc
;; name in dgo: hud-h
;; dgos: ENGINE, GAME

(defenum hud-flags
  :type uint32
  :bitfield #t
  (disable 0)
  (should-die 1)
  (show 2)
  )

;; NOTE - for progress
(define-extern hide-hud (function symbol none))
(define-extern hud-hidden? (function symbol))
(declare-type hud-sprite structure)
(define-extern set-hud-piece-position! (function hud-sprite int int none))
(define-extern show-hud (function object none))
(declare-type hud process)
(define-extern hud-init-by-other (function object :behavior hud))
(define-extern hud-arriving (state hud))
(define-extern hud-leaving (state float hud))
(define-extern hud-in (state hud))

;; DECOMP BEGINS

(deftype hud-string (basic)
  ((text  string       :offset-assert   4)
   (scale float        :offset-assert   8)
   (color font-color   :offset-assert  12)
   (flags font-flags   :offset-assert  16)
   (pos   int32      4 :offset         32)
   )
  :allow-misaligned
  :method-count-assert 9
  :size-assert         #x30
  :flag-assert         #x900000030
  )


(deftype hud-sprite (structure)
  ((pos     vector4w :inline :offset-assert   0)
   (color   vector4w :inline :offset-assert  16)
   (color2  int32    4       :offset         16)
   (flags   uint32           :offset-assert  32)
   (scale-x float            :offset-assert  36)
   (scale-y float            :offset-assert  40)
   (angle   float            :offset-assert  44)
   (tex     texture          :offset-assert  48)
   )
  :method-count-assert 11
  :size-assert         #x34
  :flag-assert         #xb00000034
  (:methods
    (draw (_type_ dma-buffer level) none 9)
    (hud-sprite-method-10 (_type_ dma-buffer level int int int int) object 10)
    )
  )


(deftype hud-box (structure)
  ((min   vector2  :inline :offset-assert   0)
   (max   vector2  :inline :offset-assert   8)
   (color vector4w :inline :offset-assert  16)
   )
  :method-count-assert 16
  :size-assert         #x20
  :flag-assert         #x1000000020
  (:methods
    (draw-box-prim-only (_type_ dma-buffer) none 9)
    (draw-box-alpha-1 (_type_ dma-buffer) none 10)
    (draw-box-alpha-2 (_type_ dma-buffer) none 11)
    (draw-box-alpha-3 (_type_ dma-buffer) none 12)
    (draw-scan-and-line (_type_ dma-buffer float) int 13)
    (setup-scissor (_type_ dma-buffer) none 14)
    (restore-scissor (_type_ dma-buffer) none 15)
    )
  )


(deftype hud-icon (basic)
  ((icon    (pointer manipy)   :offset-assert   4)
   (pos     int32            4 :offset         16)
   (scale-x float              :offset-assert  32)
   (scale-y float              :offset-assert  36)
   )
  :allow-misaligned
  :method-count-assert 9
  :size-assert         #x28
  :flag-assert         #x900000028
  )


(deftype hud-value (basic)
  ((current int32   :offset-assert   4)
   (target  int32   :offset-assert   8)
   (flags   uint16  :offset-assert  12)
   (counter uint16  :offset-assert  14)
   )
  :allow-misaligned
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )


(deftype hud (process)
  ((trigger-time   time-frame            :offset-assert 128)
   (last-hide-time time-frame            :offset-assert 136)
   (offset         float                 :offset-assert 144)
   (flags          hud-flags             :offset-assert 148)
   (values         hud-value  8 :inline  :offset        148)
   (strings        hud-string 14 :inline :offset        284)
   (sprites        hud-sprite 30 :inline :offset        960)
   (icons          hud-icon   2 :inline  :offset        2876)
   (gui-id         sound-id              :offset        2976)
   )
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  (:methods
    (hidden? (_type_) symbol 14)
    (draw (_type_) none 15)
    (update-values (_type_) none 16)
    (init-callback (_type_) none 17)
    (event-callback (_type_ process int symbol event-message-block) symbol 18)
    (hud-method-19 (_type_) none 19)
    (hud-method-20 (_type_) none 20)
    (hud-method-21 (_type_) none 21)
    (hud-method-22 (_type_) none 22)
    (hud-method-23 (_type_) none 23)
    (check-ready-and-maybe-show (_type_ symbol) symbol 24)
    (update-value-callback (_type_ int int) none 25)
    (alloc-string-if-needed (_type_ int) none 26)
    )
  (:states
    hud-arriving
    hud-hidden
    hud-in
    (hud-leaving float)
    )
  )


(deftype hud-ashelin (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-cargo (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-citizen (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-cpanel (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-dig-clasp (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-gun (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-health (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-dark-eco-symbol (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-helldog (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-lurker (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-map (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-moneybag (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-pegasus (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-plasmite (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-dig-button (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-predator (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-heatmeter (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-progress (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-rocketsensor (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-ruffians (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-score (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-sig (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-skill (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-skullgem (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-timer (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-turret (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-squid (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-gunturret (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-gruntegg (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-crimsonhover (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-metalkor (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-big-score (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-goal (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-miss (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-race-timer (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-race-lap-counter (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-race-turbo-counter (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-race-position (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-race-map (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-samos-old (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-samos-young (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-lurker-button (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-widow (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-race-final-stats (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-mech-air-tank (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-homing-beacon (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-dark-eco-pickup (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )


(deftype hud-green-eco-pickup (hud)
  ()
  :heap-base #xb30
  :method-count-assert 27
  :size-assert         #xba4
  :flag-assert         #x1b0b300ba4
  )
