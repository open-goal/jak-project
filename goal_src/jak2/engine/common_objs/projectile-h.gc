;;-*-Lisp-*-
(in-package goal)

;; name: projectile-h.gc
;; name in dgo: projectile-h
;; dgos: ENGINE, GAME

;; +++projectile-options
(defenum projectile-options
  :type uint64
  :bitfield #t
  (lose-altitude 0)
  (proj-options-2 1)
  (proj-options-3 3)
  (proj-options-4 4)
  (account-for-target-velocity 13)
  (deal-damage 14)
  (proj-options-8000 15)
  (respect-invinc-time 16)
  (ignore-impact 17)
  )
;; ---projectile-options

(declare-type projectile process-drawable)
(declare-type projectile-init-by-other-params structure)
(define-extern projectile-init-by-other (function projectile-init-by-other-params projectile :behavior projectile))

;; DECOMP BEGINS

(deftype projectile (process-drawable)
  ((root-override   collide-shape-moving               :offset        128)
   (starting-pos    vector                     :inline :offset-assert 208)
   (starting-dir    vector                     :inline :offset-assert 224)
   (target-pos      vector                     :inline :offset-assert 240)
   (base-target-pos vector                     :inline :offset-assert 256)
   (pre-move-transv vector                     :inline :offset-assert 272)
   (timeout         time-frame                         :offset-assert 288)
   (spawn-time      time-frame                         :offset-assert 296)
   (options         projectile-options                 :offset-assert 304)
   (last-target     handle                             :offset-assert 312)
   (notify-handle   handle                             :offset-assert 320)
   (owner-handle    handle                             :offset-assert 328)
   (ignore-handle   handle                             :offset-assert 336)
   (update-velocity (function projectile none)         :offset-assert 344)
   (move            (function projectile none)         :offset-assert 348)
   (pick-target     (function projectile none)         :offset-assert 352)
   (max-speed       float                              :offset-assert 356)
   (old-dist        float                      16      :offset-assert 360)
   (old-dist-count  int32                              :offset-assert 424)
   (hits            int32                              :offset-assert 428)
   (max-hits        int32                              :offset-assert 432)
   (tween           float                              :offset-assert 436)
   (attack-mode     symbol                             :offset-assert 440)
   (attack-id       uint32                             :offset-assert 444)
   (damage          float                              :offset-assert 448)
   (charge-level    float                              :offset-assert 452)
   (sound-id        sound-id                           :offset-assert 456)
   (stop-speed      meters                             :offset-assert 460)
   (invinc-time     time-frame                         :offset-assert 464)
   )
  :heap-base #x160
  :method-count-assert 40
  :size-assert         #x1d8
  :flag-assert         #x28016001d8
  (:methods
    (die () _type_ :state 20)
    (dissipate () _type_ :state 21)
    (impact () _type_ :state 22)
    (moving () _type_ :state 23)
    (draw-laser-sight (_type_) none 24)
    (spawn-impact-particles (_type_) none 25)
    (spawn-shell-particles (_type_) none 26)
    (unknown-particles (_type_) none 27)
    (play-impact-sound (_type_ projectile-options) none 28)
    (stop-sound! (_type_) none 29)
    (init-proj-collision! (_type_) none 30)
    (init-proj-settings! (_type_) none 31)
    (go-moving! (_type_) none 32)
    (go-sitting! (_type_) none 33)
    (kill-projectile! (_type_) symbol 34)
    (event-handler! (_type_ process int symbol event-message-block) object 35)
    (handle-proj-hit! (_type_ process event-message-block) object 36)
    (deal-damage! (_type_ process event-message-block) symbol 37)
    (made-impact? (_type_) symbol 38)
    (play-impact-sound! (_type_) none :behavior projectile 39)
    )
  )


(deftype projectile-init-by-other-params (structure)
  ((ent           entity                     :offset-assert   0)
   (charge        float                      :offset-assert   4)
   (attack-id     uint32                     :offset-assert   8)
   (options       projectile-options         :offset-assert  16)
   (notify-handle handle                     :offset-assert  24)
   (owner-handle  handle                     :offset-assert  32)
   (ignore-handle handle                     :offset-assert  40)
   (pos           vector             :inline :offset-assert  48)
   (vel           vector             :inline :offset-assert  64)
   (timeout       time-frame                 :offset-assert  80)
   )
  :method-count-assert 9
  :size-assert         #x58
  :flag-assert         #x900000058
  )


(defun spawn-projectile ((arg0 type) (arg1 projectile-init-by-other-params) (arg2 process-tree) (arg3 dead-pool))
  (let ((s4-0 (get-process arg3 arg0 #x4000)))
    (when s4-0
      (let ((t9-1 (method-of-type process activate)))
        (t9-1 s4-0 arg2 (symbol->string (-> arg0 symbol)) (the-as pointer #x70004000))
        )
      (run-now-in-process s4-0 projectile-init-by-other arg1)
      (-> s4-0 ppointer)
      )
    )
  )

(deftype projectile-bounce (projectile)
  "This seems to be the scrapped peacemaker gun implementation - the bouncing dark eco grenade launcher"
  ((played-bounce-time time-frame         :offset-assert 472)
   (tumble-quat        quaternion :inline :offset-assert 480)
   )
  :heap-base #x170
  :method-count-assert 42
  :size-assert         #x1f0
  :flag-assert         #x2a017001f0
  (:methods
    (sitting () _type_ :state 40)
    (noop (_type_) none 41)
    )
  )
