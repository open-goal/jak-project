
;; ----------------------
;; File - gcommon
;; Source Path - kernel/gcommon.gc
;; Containing DGOs - ['KERNEL']
;; Version - 3

;; - Types

(deftype vec4s (uint128)
  ((x float :offset 0)
   (y float :offset 32)
   (z float :offset 64)
   (w float :offset 96))
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype bfloat (basic)
  ((data float  :offset-assert 4)
   )
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )

(deftype inline-array-class (basic)
  ((length           int32  :offset-assert 4)
   (allocated-length int32  :offset-assert 8)
   ;; this is 16-byte aligned.
   ;; children of inline-array-class should define their own data which overlays this one.
   (_data            uint8  :score -50 :dynamic :offset 16)
   )
  (:methods (new (symbol type int) _type_ 0))
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

;; - Functions

(define-extern format (function _varargs_ object))
(define-extern valid? (function object type basic basic object symbol))
(define-extern type-type? (function type type symbol))
(define-extern fact (function int int))
(define-extern delete-car! (function object object object))
(define-extern nmember (function basic object object))
(define-extern name= (function basic basic symbol))
(define-extern nothing (function none))
(define-extern identity (function object object))
(define-extern 1/ (function float float))
(define-extern + (function int int int))
(define-extern - (function int int int))
(define-extern * (function int int int))
(define-extern / (function int int int))
(define-extern ash (function int int int))
(define-extern mod (function int int int))
(define-extern rem (function int int int))
(define-extern abs (function int int))
(define-extern min (function int int int))
(define-extern max (function int int int))
(define-extern logior (function int int int))
(define-extern logand (function int int int))
(define-extern lognor (function int int int))
(define-extern logxor (function int int int))
(define-extern lognot (function int int))
(define-extern false-func (function symbol))
(define-extern true-func (function symbol))
(define-extern _format (function _varargs_ object))
(define-extern method-set! (function type int function none)) ;; may actually return function.
(define-extern basic-type? (function basic type symbol))
(define-extern find-parent-method (function type int function))
(define-extern ref (function object int object))
(define-extern last (function object object))
(define-extern member (function object object object))
(define-extern assoc (function object object object))
(define-extern assoce (function object object object))
(define-extern nassoc (function string object object))
(define-extern nassoce (function string object object))
(define-extern append! (function object object object))
(define-extern delete! (function object object pair))
(define-extern insert-cons! (function object object pair))
(define-extern sort (function object (function object object object) object))
(define-extern mem-copy! (function pointer pointer int pointer))
(define-extern qmem-copy<-! (function pointer pointer int pointer))
(define-extern qmem-copy->! (function pointer pointer int pointer))
(define-extern mem-set32! (function pointer int int pointer))
(define-extern mem-or! (function pointer pointer int pointer))
(define-extern print (function object object))
(define-extern printl (function object object))
(define-extern inspect (function object object))
(define-extern mem-print (function (pointer uint32) int symbol))
(define-extern print-tree-bitmask (function int int symbol))
;; has issues:
(define-extern breakpoint-range-set! (function uint uint uint int))

;; - Symbols

(define-extern #f symbol)
(define-extern structure type)
(define-extern pair type)
(define-extern binteger type)
(define-extern type type)
;; built-in. these need to be listed so the type symbols have type of type
;; in the decompiler.
(define-extern symbol type)
(define-extern array type)
(define-extern number type)
(define-extern integer type)
(define-extern float type)
(define-extern object type)
(define-extern uint128 type)
(define-extern basic type)
(define-extern *print-column* binteger)
(define-extern *debug-segment* symbol)
(define-extern *trace-list* pair)

;; - Unknowns

;;(define-extern quad-copy! UNKNOWN)


;; ----------------------
;; NO FILE
;; Unknowns / Built-Ins / Non-Original Types

(define-extern #t symbol)

(define-extern uint8 type)

(define-extern int8 type)

(define-extern int16 type)

(define-extern int128 type)

(defenum kmalloc-flags
  :bitfield #t
  (align-16    4)
  (align-64    6)
  (align-256   8)
  (memset     12)
  (top        13)
  )

(defenum link-flag
    :bitfield #t
    :type int32
    (output-load-msg 0)
    (output-load-true-msg 1)
    (execute-login 2)
    (print-login 3)
    (force-debug 4)
    (fast-link 5)
    )

(defenum process-mask
    :bitfield #t :type uint32
    (execute         0) ;; 1
    (draw            1) ;; 2
    (pause           2) ;; 4
    (menu            3) ;; 8
    (progress        4) ;; 16
    (actor-pause     5) ;; 32
    (sleep           6) ;; 64
    (sleep-code      7) ;; 128
    (process-tree    8) ;; 256        not an actual process, just a "tree node" for organization
    (heap-shrunk     9) ;; 512
    (going          10) ;; 1024
    (movie          11) ;; 2048
    (movie-subject  12) ;; 4096
    (target         13) ;; 8192
    (sidekick       14) ;; 16384
    (crate          15) ;; 32768
    (collectable    16) ;; 65536
    (enemy          17) ;; 131072
    (camera         18) ;; 262144
    (platform       19) ;; 524288
    (ambient        20) ;; 1048576
    (entity         21) ;; 2097152
    (projectile     22) ;; 4194304
    (attackable     23) ;; 8388608
    (death          24) ;; 16777216
    )

(defenum timer-clock-selection
  :type uint8
  (busclk 0)
  (busclk/16 1)
  (busclk/256 2)
  (hblank 3)
  )

(defenum dma-tag-id
    :bitfield #f
    :type uint8
    (refe 0)      ;; addr=ADDR, ends after this transfer
    (cnt 1)       ;; addr=after tag, next-tag=after data
    (next 2)      ;; addr=after tag, next-tag=ADDR
    (ref 3)       ;; addr=ADDR, next-tag=after tag
    (refs 4)      ;; ref, but stall controled
    (call 5)      ;;
    (ret 6)       ;;
    (end 7)       ;; next, but ends.
    )

;; all these have mask (only applies to unpacks) and interrupt not set.
(defenum vif-cmd
    :bitfield #f
    :type uint8
    (nop          0)  ;; no-op, can still have irq set.
    (stcycl       1)  ;; set write recycle register
    (offset       2)  ;; set offset register
    (base         3)  ;; set base register
    (itop         4)  ;; set data pointer register (itops)
    (stmod        5)  ;; set mode register
    (mskpath3     6)  ;; set path 3 mask
    (mark         7)  ;; set mark register
    (flushe       16) ;; wait for end of microprogram
    (flush        17) ;; wait for end of microprogram and transfer (path1/path2)
    (flusha       19) ;; wait for end of microprogram and transfer (path1/path2/path3)
    (mscal        20) ;; activate microprogram (call)
    (mscalf       21) ;; flushe and activate (call)
    (mscnt        23) ;; activate microprogram (continue)
    (stmask       32) ;; set MASK register.
    (strow        48) ;; set filling data
    (stcol        49) ;; set filling data
    (mpg          74) ;; transfer microprogram
    (direct       80) ;; straight to GIF.
    (directhl     81)
    (unpack-s-32  96)
    (unpack-s-16  97)
    (unpack-s-8   98)
    ;; 99 is invalid
    (unpack-v2-32 100)
    (unpack-v2-16 101)
    (unpack-v2-8  102)
    ;; 103 is invalid
    (unpack-v3-32 104)
    (unpack-v3-16 105)
    (unpack-v3-8  106)
    ;; 107 is invalid
    (unpack-v4-32 108)
    (unpack-v4-16 109)
    (unpack-v4-8  110)
    (unpack-v4-5  111)
    (cmd-mask     239) ;; not sure what this is
    )

(defenum vif-cmd-32
    :bitfield #f
    :type uint32
    :copy-entries vif-cmd
    )

;; moved these here for the decompiler for now!
(defenum gs-prim-type
  :type uint8
  (point 0)
  (line 1)
  (line-strip 2)
  (tri 3)
  (tri-strip 4)
  (tri-fan 5)
  (sprite 6)
  )

(defenum gif-reg-id
  :bitfield #f
  :type uint8
  (prim 0)
  (rgbaq 1)
  (st 2)
  (uv 3)
  (xyzf2 4)
  (xyz2 5)
  (tex0-1 6)
  (tex0-2 7)
  (clamp-1 8)
  (clamp-2 9)
  (fog 10)
  (xyzf3 12)
  (xyz3 13)
  (a+d 14)
  (nop 15)
  )

(deftype gif-tag-regs (uint64)
  ((regs0   gif-reg-id :offset 0  :size 4)
   (regs1   gif-reg-id :offset 4  :size 4)
   (regs2   gif-reg-id :offset 8  :size 4)
   (regs3   gif-reg-id :offset 12  :size 4)
   (regs4   gif-reg-id :offset 16  :size 4)
   (regs5   gif-reg-id :offset 20  :size 4)
   (regs6   gif-reg-id :offset 24  :size 4)
   (regs7   gif-reg-id :offset 28  :size 4)
   (regs8   gif-reg-id :offset 32  :size 4)
   (regs9   gif-reg-id :offset 36 :size 4)
   (regs10  gif-reg-id :offset 40 :size 4)
   (regs11  gif-reg-id :offset 44 :size 4)
   (regs12  gif-reg-id :offset 48 :size 4)
   (regs13  gif-reg-id :offset 52 :size 4)
   (regs14  gif-reg-id :offset 56 :size 4)
   (regs15  gif-reg-id :offset 60 :size 4)
   )
  )

(defenum pad-buttons
    :bitfield #t
    :type uint32
    (select   0)
    (l3       1)
    (r3       2)
    (start    3)
    (up       4)
    (right    5)
    (down     6)
    (left     7)
    (l2       8)
    (r2       9)
    (l1       10)
    (r1       11)
    (triangle 12)
    (circle   13)
    (x        14)
    (square   15)
    )

(defenum gs-psm
    :bitfield #f
    :type uint8
    (ct32 0)
    (ct24 1)
    (ct16 2)
    (ct16s 10)
    (mt8 19)
    (mt4 20)
    (mt8h 27)
    (mt4hl 36)
    (mt4hh 44)
    (mz32 48)
    (mz24 49)
    (mz16 50)
    (mz16s 58)
    )

(defenum gs-reg
  :type uint8
  (prim 0)
  (rgbaq 1)
  (st 2)
  (uv 3)
  (xyzf2 4)
  (xyz2 5)
  (tex0-1 6)
  (tex0-2 7)
  (clamp-1 8)
  (clamp-2 9)
  (fog 10)
  (xyzf3 12)
  (xyz3 13)
  (tex1-1 20)
  (tex1-2 21)
  (tex2-1 22)
  (tex2-2 23)
  (xyoffset-1 24)
  (xyoffset-2 25)
  (prmodecont 26)
  (prmode 27)
  (texclut 28)
  (scanmsk 34)
  (miptbp1-1 52)
  (miptbp1-2 53)
  (miptbp2-1 54)
  (miptbp2-2 55)
  (texa 59)
  (fogcol 61)
  (texflush 63)
  (scissor-1 64)
  (scissor-2 65)
  (alpha-1 66)
  (alpha-2 67)
  (dimx 68)
  (dthe 69)
  (colclamp 70)
  (test-1 71)
  (test-2 72)
  (pabe 73)
  (fba-1 74)
  (fba-2 75)
  (frame-1 76)
  (frame-2 77)
  (zbuf-1 78)
  (zbuf-2 79)
  (bitbltbuf 80)
  (trxpos 81)
  (trxreg 82)
  (trxdir 83)
  (hwreg 84)
  (signal 96)
  (finish 97)
  (label 98)
  )

(defenum gs-reg64
  :type uint64
  :copy-entries gs-reg
  )

(defenum file-kind
    :bitfield #f
    (level-bt 0) ;; aka bsp-header.
    (art-group 1)
    (tpage 2)
    (dir-tpage 3)
    (level-vs 4)
    (tx 5)
    (vis 6)
    )

(deftype res-tag-pair (uint64)
  ((lo  uint32 :offset 0)
   (hi  uint32 :offset 32)
   )
  ;; made-up type
  )

(defenum pat-material
  :type uint8
  (stone)
  (ice)
  (quicksand)
  (waterbottom)
  (tar)
  (sand)
  (wood)
  (grass)
  (pcmetal)
  (snow)
  (deepsnow)
  (hotcoals)
  (lava)
  (crwood)
  (gravel)
  (dirt)
  (metal)
  (straw)
  (tube)
  (swamp)
  (stopproj)
  (rotate)
  (neutral)
  )

(defenum pat-mode
  :type uint8
  (ground)
  (wall)
  (obstacle)
  )

(defenum pat-event
  :type uint8
  (none)
  (deadly)
  (endlessfall)
  (burn)
  (deadlyup)
  (burnup)
  (melt)
  )

(defenum pickup-type
  (none)
  (eco-yellow)
  (eco-red)
  (eco-blue)
  (eco-green)
  (money)
  (fuel-cell)
  (eco-pill)
  (buzzer)
  (eco-pill-random)
  )

(defenum load-msg-result
  :type uint16
  :bitfield #f
  (done 0)
  (error 1)
  (more 2)
  (aborted 3)
  (invalid 666)
  )

(defenum bucket-id
    :type int32
    :bitfield #f

    (bucket-3 3)
    (tfrag-tex0 5)
    ;; merc0 10
    ;; generic0 11

    (tfrag-tex1 12)
    ;; merc1 17
    ;; generic1 18

    (shrub-tex0 19)

    (shrub-tex1 25)

    (alpha-tex0 31)

    (alpha-tex1 38)

    (pris-tex0 48)
    ;; merc0 49
    ;; generic0 50

    (pris-tex1 51)
    ;; merc1 52
    ;; generic1 53

    (water-tex0 57)
    ;; merc0 58     (+ default)
    ;; generic0 59  (+ default)

    (water-tex1 60)
    ;; merc1 61
    ;; generic1 62
    (bucket-65 65)
    ;; debug spheres? 67
    (debug-draw0 67)
    ;; debug text 68
    (debug-draw1 68)
    )

(define-extern sinteger type)

(define-extern wheel type)

(define-extern evilplant type)

(define-extern lavaspoutdrip type)

(defenum sound-command
  :type uint16
  (load-bank)
  (load-music)
  (unload-bank)
  (play)
  (pause-sound)
  (stop-sound)
  (continue-sound)
  (set-param)
  (set-master-volume)
  (pause-group)
  (stop-group)
  (continue-group)
  (get-irx-version)
  (set-falloff-curve)
  (set-sound-falloff)
  (reload-info)
  (set-language)
  (set-flava)
  (set-reverb)
  (set-ear-trans)
  (shutdown)
  (list-sounds)
  (unload-music)
  )

;; - Enums
(defenum joint-mod-handler-mode
  :bitfield #t
  :type uint32
  (flex-blend 0)    ;; 1
  (look-at 1)       ;; 2
  (world-look-at 2) ;; 4
  (rotate 3)        ;; 8
  (joint-set 4)     ;; 16
  (joint-set* 5)    ;; 32
  ;; ??             ;; 64
  (reset 7)         ;; 128
  )

(defenum collide-list-enum
  (hit-by-player)
  (usually-hit-by-player)
  (hit-by-others)
  (player)
  )

(defenum entity-perm-status
  :bitfield #t
  :type uint16
  (bit-0 0)
  (bit-1 1)
  (dead 2)
  (bit-3 3)
  (bit-4 4)
  (user-set-from-cstage 5)
  (complete 6) ;; wrong!
  (bit-7 7)
  (real-complete 8)
  (bit-9 9)
  )

(defenum path-control-flag
  :bitfield #t
  :type uint32
  (display 0)
  (draw-line 1) ;; TODO - only seen it used to control debug drawing so far
  (draw-point 2) ;; TODO - only seen it used to control debug drawing so far
  (draw-text 3) ;; TODO - only seen it used to control debug drawing so far
  (not-found 4)
  )

(defenum nav-control-flags
  :bitfield #t
  :type uint32
  (display-marks 0)
  (bit8 8)
  (bit13 13)
  )

(defenum task-status
  :type uint64
  (invalid 0)
  (unknown 1)
  (need-hint 2)
  (need-introduction 3)
  (need-reminder-a 4)
  (need-reminder 5)
  (need-reward-speech 6)
  (need-resolution 7)
  )

(defenum game-task
  :type uint8
  (none 0)
  (complete 1)
  (jungle-eggtop 2)
  (jungle-lurkerm 3)
  (jungle-tower 4)
  (jungle-fishgame 5)
  (jungle-plant 6)
  (jungle-buzzer 7)
  (jungle-canyon-end 8)
  (jungle-temple-door 9)
  (village1-yakow 10)
  (village1-mayor-money 11)
  (village1-uncle-money 12)
  (village1-oracle-money1 13)
  (village1-oracle-money2 14)
  (beach-ecorocks 15)
  (beach-pelican 16)
  (beach-flutflut 17)
  (beach-seagull 18)
  (beach-cannon 19)
  (beach-buzzer 20)
  (beach-gimmie 21)
  (beach-sentinel 22)
  (misty-muse 23)
  (misty-boat 24)
  (misty-warehouse 25)
  (misty-cannon 26)
  (misty-bike 27)
  (misty-buzzer 28)
  (misty-bike-jump 29)
  (misty-eco-challenge 30)
  (village2-gambler-money 31)
  (village2-geologist-money 32)
  (village2-warrior-money 33)
  (village2-oracle-money1 34)
  (village2-oracle-money2 35)
  (swamp-billy 36)
  (swamp-flutflut 37)
  (swamp-battle 38)
  (swamp-tether-1 39)
  (swamp-tether-2 40)
  (swamp-tether-3 41)
  (swamp-tether-4 42)
  (swamp-buzzer 43)
  (sunken-platforms 44)
  (sunken-pipe 45)
  (sunken-slide 46)
  (sunken-room 47)
  (sunken-sharks 48)
  (sunken-buzzer 49)
  (sunken-top-of-helix 50)
  (sunken-spinning-room 51)
  (rolling-race 52)
  (rolling-robbers 53)
  (rolling-moles 54)
  (rolling-plants 55)
  (rolling-lake 56)
  (rolling-buzzer 57)
  (rolling-ring-chase-1 58)
  (rolling-ring-chase-2 59)
  (snow-eggtop 60)
  (snow-ram 61)
  (snow-fort 62)
  (snow-ball 63)
  (snow-bunnies 64)
  (snow-buzzer 65)
  (snow-bumpers 66)
  (snow-cage 67)
  (firecanyon-buzzer 68)
  (firecanyon-end 69)
  (citadel-sage-green 70)
  (citadel-sage-blue 71)
  (citadel-sage-red 72)
  (citadel-sage-yellow 73)
  (village3-extra1 74)
  (village1-buzzer 75)
  (village2-buzzer 76)
  (village3-buzzer 77)
  (cave-gnawers 78)
  (cave-dark-crystals 79)
  (cave-dark-climb 80)
  (cave-robot-climb 81)
  (cave-swing-poles 82)
  (cave-spider-tunnel 83)
  (cave-platforms 84)
  (cave-buzzer 85)
  (ogre-boss 86)
  (ogre-end 87)
  (ogre-buzzer 88)
  (lavatube-end 89)
  (lavatube-buzzer 90)
  (citadel-buzzer 91)
  (training-gimmie 92)
  (training-door 93)
  (training-climb 94)
  (training-buzzer 95)
  (village3-miner-money1 96)
  (village3-miner-money2 97)
  (village3-miner-money3 98)
  (village3-miner-money4 99)
  (village3-oracle-money1 100)
  (village3-oracle-money2 101)
  (firecanyon-assistant 102)
  (village2-levitator 103)
  (swamp-arm 104)
  (village3-button 105)
  (red-eggtop 106)
  (lavatube-balls 107)
  (lavatube-start 108)
  (intro 109)
  (ogre-secret 110)
  (village4-button 111)
  (finalboss-movies 112)
  (plunger-lurker-hit 113)
  (leaving-misty 114)
  (assistant-village3 115)
  (max 116)
  (*unknown* 255))


(defenum game-text-id
  :type uint32
  :bitfield #f
  (zero 0)
  (pause #x109)
  (sfx-volume #x10a)
  (music-volume #x10b)
  (speech-volume #x10c)
  (language #x10d)
  (vibrations #x10e)
  (play-hints #x10f)
  (center-screen #x110)
  (english #x114)
  (french #x115)
  (german #x116)
  (spanish #x117)
  (italian #x118)
  (japanese #x119)
  (aspect-ratio #x125)
  (video-mode #x126)
  (game-options #x127)
  (graphic-options #x128)
  (sound-options #x129)
  
  (hidden-power-cell #x12f) ;; why is this here??
  
  (continue-without-saving #x13f)
  (back #x13e)
  (load-game #x14b)
  (save-game #x14c)
  (options #x150)
  (new-game #x15c)
  (ok #x15e)
  (exit-demo #x15f)
  (quit-game #x16f)
  
  (village1-mayor-money #x200)
  (vollage1-uncle-money #x201)
  (village1-yakow-herd #x202)
  (village1-yakow-return #x203)
  (village1-oracle #x204)
  (beach-ecorocks #x205)
  (beach-flutflut-push #x206)
  (beach-flutflut-meet #x207)
  (beach-pelican #x208)
  (beach-seagull #x209)
  (beach-cannon #x20a)
  (beach-buzzer #x20b)
  (jungle-lurkerm-connect #x20c)
  (jungle-tower #x20d)
  (jungle-eggtop #x20e)
  (jungle-plant #x20f)
  (jungle-fishgame #x210)
  (misty-muse-catch #x211)
  (misty-muse-return #x212)
  (misty-boat #x213)
  (misty-cannon #x214)
  (misty-return-to-pool #x215) ;; task name??
  (misty-find-transpad #x216) ;; task name?
  (misty-balloon-lurkers #x217)
  
  (village1-level-name #x220)
  (beach-level-name #x221)
  (jungle-level-name #x222)
  (misty-level-name #x223)
  
  (beach-seagull-get #x22e)
  
  (jungle-lurkerm-unblock #x22f)
  (jungle-lurkerm-return #x230)
  
  (MISSING-orb-hint #x233)
  
  (beach-gimmie #x262)
  (beach-sentinel #x263)
  (jungle-canyon-end #x264)
  (jungle-temple-door #x265)
  (misty-bike-jump #x266)
  (misty-eco-challenge #x267)
  
  (village2-gambler-money #x300)
  (village2-geologist-money #x301)
  (village2-warrior-money #x302)
  (village2-oracle-money #x303)
  (swamp-tether #x304)
  
  (swamp-flutflut #x307)
  
  (swamp-billy #x309)
  
  (sunken-elevator-raise #x30a)
  (sunken-elevator-get-to-roof #x30b)
  (sunken-pipe #x30c)
  (sunken-climb-tube #x30d) ;; task name?
  (sunken-pool #x30e) ;; task name?
  (sunken-platforms #x30f)
  
  (rolling-moles #x310)
  (rolling-moles-return #x311)
  (rolling-robbers #x312)
  (rolling-race #x313)
  (rolling-race-return #x314)
  (rolling-lake #x315)
  (rolling-plants #x316)
  
  (unknown-buzzers #x317)
  
  (village2-level-name #x319)
  
  (rolling-level-name #x31b)
  (swamp-level-name #x31c)
  (sunken-level-name #x31d)
  (ogre-level-name #x31e)
  
  (swamp-battle #x321)
  (sunken-bottom #x322) ;; task name?
  (reach-center #x323) ;; task name?
  (rolling-ring-chase-1 #x324)
  (rolling-ring-chase-2 #x325)
  
  (village3-miner-money #x400)
  (village3-oracle-money #x401)
  (snow-ram-3-left #x402)
  (snow-ram-2-left #x403)
  (snow-ram-1-left #x404)
  (snow-fort #x405)
  (snow-bunnies #x406)
  (snow-open-door #x408) ;; task name?
  
  (cave-robot-climb #x40e)
  (cave-dark-climb #x40f) ;; destroy crystals
  
  (cave-gnawers #x410)
  (cave-dark-crystals #x411)
  
  (village3-buzzer #x413)
  
  (village3-level-name #x415)
  
  (snowy-level-name #x417)
  
  (cave-level-name #x419)
  
  (lavatube-level-name #x41b)
  
  (snow-eggtop #x421)
  
  (cave-spider-tunnel #x423)
  (cave-platforms #x424)
  
  (cave-swing-poles #x426)
  
  (snow-frozen-crate #x42b) ;; task name?
  (snow-bumpers #x42c)
  
  (fire-canyon-end #x500)
  (fire-canyon-buzzer #x501)
  
  (fire-canyon-level-name #x50c)
  
  (ogre-end #x600)
  (ogre-buzzer #x601)
  (ogre-boss #x603)
  
  (lavatube-end #x700)
  (lavatube-buzzer #x701)
  
  (citadel-buzzer #x800)
  (citadel-level-name #x801)
  (citadel-sage-blue #x802)
  (citadel-sage-red #x803)
  (citadel-sage-yellow #x804)
  (citadel-sage-green #x805)
  
  (training-gimmie-task-name #x91b)
  (training-buzzer-task-name #x91c)
  (training-door-task-name #x91d)
  (training-climb-task-name #x91e)
  (training-level-name #x91f)
  
  (inc #xf10)
  (europe #xf11)
  )

;; ----------------------
;; File - gstring-h
;; Source Path - kernel/gstring-h.gc
;; Containing DGOs - ['KERNEL']
;; Version - 3

;; - Nothing Defined in This File!


;; ----------------------
;; File - gkernel-h
;; Source Path - kernel/gkernel-h.gc
;; Containing DGOs - ['KERNEL']
;; Version - 3

;; - Types

(define-extern process-tree type) ; deftype provided by C Kernel
(declare-type process basic)

(deftype process-tree (basic)
  ((name basic :offset-assert 4)
   (mask process-mask :offset-assert 8)
   (parent (pointer process-tree) :offset-assert 12)
   (brother (pointer process-tree) :offset-assert 16)
   (child (pointer process-tree) :offset-assert 20)
   (ppointer (pointer process) :offset-assert 24)
   (self process-tree :offset-assert 28)
   )
  (:methods
    (new (symbol type basic) _type_ 0)
    (activate (_type_ process-tree basic pointer) process-tree 9)
    (deactivate  (_type_) none 10)
    (dummy-method-11 () none 11)
    (run-logic? (_type_) symbol 12)
    (dummy-method () none 13)
    )
  :size-assert #x20
  :method-count-assert 14
  :no-runtime-type
  )

(deftype stack-frame (basic)
  ((name basic :offset 4)
   (next stack-frame :offset 8) ;; which way does this point?
   )
  :size-assert #xc
  :method-count-assert 9
  :flag-assert #x90000000c
  )

(deftype kernel-context (basic)
  ((prevent-from-run   process-mask  :offset-assert 4)
   (require-for-run    process-mask  :offset-assert 8)
   (allow-to-run       process-mask  :offset-assert 12)
   (next-pid           int32         :offset-assert 16)
   (fast-stack-top     pointer       :offset-assert 20)
   (current-process    basic         :offset-assert 24)
   (relocating-process basic         :offset-assert 28)
   (relocating-min     int32         :offset-assert 32)
   (relocating-max     int32         :offset-assert 36)
   (relocating-offset  int32         :offset-assert 40)
   (low-memory-message basic         :offset-assert 44)
   )
  :method-count-assert 9
  :size-assert         #x30
  :flag-assert         #x900000030
  )

(declare-type cpu-thread thread)
(declare-type process process-tree)
(deftype thread (basic)
  ((name         basic   :offset-assert 4)
   (process      process :offset-assert 8)
   (previous     thread  :offset-assert 12)
   (suspend-hook (function cpu-thread none)   :offset-assert 16)
   (resume-hook  (function cpu-thread none)   :offset-assert 20)
   (pc           pointer :offset-assert 24)
   (sp           pointer :offset-assert 28)
   (stack-top    pointer :offset-assert 32)
   (stack-size   int32   :offset-assert 36)
   )
  (:methods
    (stack-size-set! (_type_ int) none 9)
    (thread-suspend (_type_) none 10)
    (thread-resume  (_type_) none 11)
    )
  :method-count-assert 12
  :size-assert         #x28
  :flag-assert         #xc00000028
  )

(deftype cpu-thread (thread)
  (
   ;;(rreg  uint64 8       :offset-assert 40)
   ;;(freg  float 6        :offset-assert 104)
   ;; changed from GOAL, see gkernel-h.gc
   (rreg  uint64 7       :offset-assert 40)
   (freg float 8)
   (stack uint8 :dynamic :offset-assert 128)
   )
  (:methods
    (new (symbol type process symbol int pointer) _type_ 0)
    (thread-suspend (_type_) none 10)
    (thread-resume  (_type_) none 11)
    )
  :method-count-assert 12
  :size-assert         #x80
  :flag-assert         #xc00000080
  )

(deftype dead-pool (process-tree)
  (
   ;; nothing new!
   )
  (:methods
    (new (symbol type int int basic) _type_ 0)
    (get-process (_type_ type int) process 14)
    (return-process ( _type_ process) none 15)
    )
  :size-assert #x20
  :method-count-assert 16
  :flag-assert #x1000000020
  )

(deftype dead-pool-heap-rec (structure)
  ((process process             :offset-assert 0)
   (prev    dead-pool-heap-rec  :offset-assert 4)
   (next    dead-pool-heap-rec  :offset-assert 8)
   )
  :pack-me
  :method-count-assert 9
  :size-assert         #xc
  :flag-assert         #x90000000c
  )

(deftype dead-pool-heap (dead-pool)
  ((allocated-length   int32                       :offset-assert 32)
   (compact-time       uint32                      :offset-assert 36)
   (compact-count-targ uint32                      :offset-assert 40)
   (compact-count      uint32                      :offset-assert 44)
   (fill-percent       float                       :offset-assert 48)
   (first-gap          dead-pool-heap-rec          :offset-assert 52)
   (first-shrink       dead-pool-heap-rec          :offset-assert 56)
   (heap               kheap              :inline  :offset-assert 64)
   (alive-list         dead-pool-heap-rec :inline  :offset-assert 80)
   (last               dead-pool-heap-rec :offset #x54  :offset-assert 84)
   (dead-list          dead-pool-heap-rec :inline  :offset-assert 92)
   (process-list       dead-pool-heap-rec :inline :dynamic :offset-assert 104)
   )
  (:methods
    (new (symbol type basic int int) _type_ 0)
    (compact (dead-pool-heap int) none 16)
    (shrink-heap (dead-pool-heap process) dead-pool-heap 17)
    (churn (dead-pool-heap int) none 18)
    (memory-used (dead-pool-heap) int 19)
    (memory-total (dead-pool-heap) int 20)
    (gap-size (dead-pool-heap dead-pool-heap-rec) int 21)
    (gap-location (dead-pool-heap dead-pool-heap-rec) pointer 22)
    (find-gap (dead-pool-heap dead-pool-heap-rec) dead-pool-heap-rec 23)
    (find-gap-by-size (dead-pool-heap int) dead-pool-heap-rec 24)
    (memory-free (dead-pool-heap) int 25)
    (compact-time (dead-pool-heap) uint 26)
    )
  :method-count-assert 27
  :size-assert         #x68
  :flag-assert         #x1b00000068
  )

(deftype catch-frame (stack-frame)
  ((sp   int32     :offset-assert 12)
   (ra   int32     :offset-assert 16)
   ;; changed from GOAL, see gkernel-h.gc
   (freg float 10 :offset-assert 20)
   (rreg uint128 7)
   ;;(freg float 6 :offset-assert 20)
   ;;(rreg uint128 8 :offset-assert 48)
   )
  (:methods
    (new (symbol type symbol function (pointer uint64)) object 0)
    )
  :method-count-assert 9
  :size-assert         #xb0
  :flag-assert         #x9000000b0
  )

(deftype protect-frame (stack-frame)
  ((exit (function object)  :offset-assert 12)
   )
  (:methods
    (new (symbol type (function object)) protect-frame)
    )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype handle (uint64)
  ((process (pointer process) :offset 0)
   (pid int32 :offset 32)
   (u64 uint64 :offset 0)
   )
  :flag-assert #x900000008
  )

(declare-type event-message-block structure)
(deftype state (protect-frame)
  ((code  function  :offset-assert 16)
   (trans (function object)  :offset-assert 20)
   (post  function  :offset-assert 24)
   (enter (function object object object object object object object)  :offset-assert 28)
   (event (function basic int basic event-message-block object)     :offset-assert 32)
   )
  (:methods
    (new (symbol type basic function
          (function object)
          (function object object object object object object object)
          (function object)
          (function basic int basic event-message-block object)) _type_ 0)
    )
  :method-count-assert 9
  :size-assert         #x24
  :flag-assert         #x900000024
  )

(deftype event-message-block (structure)
  ((to         basic     :offset-assert 0)
   (from       basic     :offset-assert 4)
   (num-params int32     :offset-assert 8)
   (message    basic     :offset-assert 12)
   (param      uint64 7  :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x48
  :flag-assert         #x900000048
  )

;; - Symbols

(define-extern uint64 type)


;; ----------------------
;; File - gkernel
;; Source Path - kernel/gkernel.gc
;; Containing DGOs - ['KERNEL']
;; Version - 3

;; - Types

(declare-type connectable structure)
(declare-type res-lump basic)
(declare-type entity res-lump)
(define-extern process type) ; deftype provided by C Kernel
(deftype process (process-tree)
  ((pool dead-pool :offset-assert #x20)
   (status basic :offset-assert #x24)
   (pid int32 :offset-assert #x28)
   (main-thread cpu-thread :offset-assert #x2c)
   (top-thread thread :offset-assert #x30)
   (entity entity :offset-assert #x34) ;; likely a res-lump
   (state state :offset-assert #x38)
   (trans-hook function :offset-assert #x3c)
   (post-hook function :offset-assert #x40)
   (event-hook (function basic int basic event-message-block object) :offset-assert #x44)
   (allocated-length int32 :offset-assert #x48)
   (next-state state :offset-assert #x4c)
   (heap-base pointer :offset-assert #x50)
   (heap-top pointer :offset-assert #x54)
   (heap-cur pointer :offset-assert #x58)
   (stack-frame-top stack-frame :offset-assert #x5c)
   (connection-list connectable :inline :offset-assert #x60) ;; can be a connection
   (stack uint8 :dynamic :offset-assert #x70)
   )
  (:methods
    (new (symbol type basic int) _type_ 0)
    (activate (_type_ process-tree basic pointer) process-tree 9)
    (deactivate  (process) none 10)
    (dummy-method-11 () none 11)
    (run-logic? (process) symbol 12)
    (dummy-method () none 13)
    )
  :size-assert #x70
  :method-count-assert 14
  :no-runtime-type ;; already defined by kscheme. Don't do it again.
  )

;; - Functions

(define-extern entity-deactivate-handler (function process object none))
(define-extern process-disconnect (function process int))
(define-extern throw (function symbol object int))
(define-extern set-to-run-bootstrap (function none))
(define-extern change-parent (function process-tree process-tree process-tree))
(define-extern inspect-process-tree (function process-tree int int symbol process-tree))
(define-extern *listener-function* (function object))
(define-extern reset-and-call (function thread function object))
(define-extern execute-process-tree (function process-tree (function object object) kernel-context object))
(define-extern search-process-tree (function process-tree (function process-tree object) process-tree))
(define-extern iterate-process-tree (function process-tree (function object object) kernel-context object))
(define-extern process-not-name (function object process-tree process))
(define-extern process-by-name (function object process-tree process))
(define-extern inspect-process-heap (function process symbol))
;; functions defined in C. TODO - this will end up being a duplicate of kernel-defs.gc?
(define-extern dgo-load (function string kheap int int none))
(define-extern load-package (function string kheap pair))
(define-extern unload-package (function string pair))
(define-extern malloc (function symbol int pointer)) ;; from kernel-defs.gc
(define-extern remove-exit (function :behavior process stack-frame))
(define-extern stream<-process-mask (function object process-mask process-mask))
(define-extern return-from-thread (function none))
(define-extern return-from-thread-dead (function none))
(define-extern process-count (function process-tree int))
(define-extern kill-by-name (function object process-tree symbol))
(define-extern kill-by-type (function object process-tree symbol))
(define-extern kill-not-name (function object process-tree symbol))
(define-extern kill-not-type (function object process-tree symbol))
(define-extern kernel-dispatcher (function object))
(define-extern throw-dispatch (function catch-frame object none))
(define-extern previous-brother (function process-tree object))
(define-extern change-brother (function process-tree process-tree object))
(define-extern change-to-last-brother (function process-tree process-tree))
(define-extern run-function-in-process (function process function object object object object object object object))
(define-extern set-to-run (function cpu-thread function object object object object object object pointer))

;; - Symbols

(define-extern dead-state state)
(define-extern *kernel-context* kernel-context)
(define-extern *enable-method-set* int)
(define-extern *listener-process* process)
(define-extern *active-pool* process-tree)
(define-extern *stdcon1* string)
(define-extern *stdcon* string)
(define-extern *debug-draw-pauseable* symbol)
(define-extern *stdcon0* string)
(define-extern *dram-stack* (pointer uint8))
(define-extern *global-search-name* basic)
(define-extern *global-search-count* int)
(define-extern *null-kernel-context* kernel-context)
(define-extern *null-process* process)
(define-extern *debug-dead-pool* dead-pool-heap)
(define-extern *vis-boot* basic)
(define-extern *kernel-packages* pair)
(define-extern *kernel-version* binteger)
(define-extern *irx-version* binteger)
(define-extern *kernel-boot-mode* symbol)
(define-extern *kernel-boot-level* symbol)
(define-extern *deci-count* int)
(define-extern *last-loado-length* int)
(define-extern *last-loado-global-usage* int)
(define-extern *last-loado-debug-usage* int)
(define-extern *master-mode* symbol)
(define-extern *pause-lock* symbol)
(define-extern *16k-dead-pool* dead-pool)
(define-extern *8k-dead-pool* dead-pool)
(define-extern *4k-dead-pool* dead-pool)
(define-extern *target-dead-pool* dead-pool)
(define-extern *camera-dead-pool* dead-pool)
(define-extern *camera-master-dead-pool* dead-pool)
(define-extern *nk-dead-pool* dead-pool-heap)
(define-extern *default-dead-pool* dead-pool)
(define-extern *pickup-dead-pool* dead-pool)
(define-extern *dead-pool-list* pair)
(define-extern *display-pool* process-tree)
(define-extern *camera-pool* process-tree)
(define-extern *target-pool* process-tree)
(define-extern *entity-pool* process-tree)
(define-extern *default-pool* process-tree)


;; ----------------------
;; File - pskernel
;; Source Path - kernel/pskernel.gc
;; Containing DGOs - ['KERNEL']
;; Version - 3

;; - Types

(deftype lowmemmap (structure)
  ((irq-info-stack  uint32   :offset-assert 0)
   (irq2-info-stack uint32   :offset-assert 4)
   (kernel-copy-fn  uint32   :offset-assert 8)
   (kernel-write-fn uint32   :offset-assert 12)
   (r1-save         uint128  :offset-assert 16)
   (last-time       uint32   :offset-assert 32)
   (high-time       uint32   :offset-assert 36)
   (dma-status      uint32   :offset-assert 40)
   (dma-qnext       uint32   :offset-assert 44)
   (dma-qwc         uint32   :offset-assert 48)
   (dma-tnext       uint32   :offset-assert 52)
   (dma-stack0      uint32   :offset-assert 56)
   (dma-stack1      uint32   :offset-assert 60)
   (kernel-read-fn  uint32   :offset-assert 64)
   )
  :method-count-assert 9
  :size-assert         #x44
  :flag-assert         #x900000044
  )

;; - Functions

(define-extern deinstall-debug-handlers (function none))
(define-extern return-from-exception (function object none))
(define-extern kernel-set-exception-vector (function none))
(define-extern kernel-write (function none))
(define-extern install-debug-handler (function int object symbol))
(define-extern kernel-copy-function (function object object object object none))
(define-extern kernel-copy-to-kernel-ram (function none))
(define-extern kernel-write-function (function object object object none))
(define-extern kernel-read-function (function object object none))
(define-extern kernel-read (function none))
(define-extern kernel-check-hardwired-addresses (function none))
(define-extern install-default-debug-handler (function object none))
(define-extern kernel-set-interrupt-vector (function none))
(define-extern kernel-set-level2-vector (function none))
(define-extern deinstall-debug-handler (function none))
(define-extern resend-exception (function none))


;; ----------------------
;; File - gstring
;; Source Path - kernel/gstring.gc
;; Containing DGOs - ['KERNEL']
;; Version - 3

;; - Functions

(define-extern string-get-arg!! (function string string symbol))
(define-extern string= (function string string symbol))
(define-extern string->float (function string float))
(define-extern string->int (function string int))
(define-extern string-skip-whitespace (function (pointer uint8) (pointer uint8)))
(define-extern copyn-string<-charp (function string (pointer uint8) int string))
(define-extern string-suck-up! (function string (pointer uint8) symbol))
(define-extern string-strip-trailing-whitespace! (function string symbol))
(define-extern string-strip-leading-whitespace! (function string symbol))
(define-extern string-skip-to-char (function (pointer uint8) uint (pointer uint8)))
(define-extern cat-string<-string_to_charp (function string string (pointer uint8) (pointer uint8)))
(define-extern copy-string<-string (function string string string))
(define-extern string-charp= (function string (pointer uint8) symbol))
(define-extern string<-charp (function string (pointer uint8) string))
(define-extern charp<-string (function (pointer uint8) string int))
(define-extern copy-charp<-charp (function (pointer uint8) (pointer uint8) (pointer uint8)))
(define-extern cat-string<-string (function string string string))
(define-extern catn-string<-charp (function string (pointer uint8) int string))
(define-extern append-character-to-string (function string uint8 int))
(define-extern charp-basename (function (pointer uint8) (pointer uint8)))
(define-extern clear (function string string))
(define-extern string<? (function string string symbol))
(define-extern string>? (function string string symbol))
(define-extern string<=? (function string string symbol))
(define-extern string>=? (function string string symbol))
;; this one might be wrong
(define-extern string-cat-to-last-char (function string string uint (pointer uint8)))
(define-extern string-strip-whitespace! (function string symbol))
(define-extern string-get-int32!! (function (pointer int32) string symbol))
(define-extern string-get-float!! (function (pointer float) string symbol))
(define-extern string-get-flag!! (function (pointer symbol) string string string symbol))

;; - Symbols

(define-extern *string-tmp-str* string)
(define-extern string type)
(define-extern *temp-string* string)


;; ----------------------
;; File - dgo-h
;; Source Path - kernel/dgo-h.gc
;; Containing DGOs - ['KERNEL']
;; Version - 3

;; - Types

(deftype dgo-entry (structure)
  ((offset uint32  :offset-assert 0)
   (length uint32  :offset-assert 4)
   )
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )

(deftype dgo-file (basic)
  ((num-go-files uint32           :offset-assert 4)
   (total-length uint32           :offset-assert 8)
   (rsvd         uint32           :offset-assert 12)
   (data         uint8 :dynamic   :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )


;; ----------------------
;; File - gstate
;; Source Path - kernel/gstate.gc
;; Containing DGOs - ['KERNEL']
;; Version - 3

;; - Functions

(define-extern enter-state (function object object object object object object object))
(define-extern inherit-state (function state state state))
(define-extern send-event-function (function process event-message-block object))
(define-extern looping-code (function symbol))


;; ----------------------
;; File - types-h
;; Source Path - engine/util/types-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype time-frame (int64)
  ()
  :flag-assert #x900000008
  )

(deftype part-id (uint32)
  ()
  :flag-assert #x900000004
  )

;; - Symbols

(define-extern int64 type)
(define-extern uint32 type)


;; ----------------------
;; File - vu1-macros
;; Source Path - engine/ps2/vu1-macros.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Nothing Defined in This File!


;; ----------------------
;; File - math
;; Source Path - engine/math/math.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype rgba (uint32)
  ((r uint8 :offset 0)
   (g uint8 :offset 8)
   (b uint8 :offset 16)
   (a uint8 :offset 24)
   )
  :flag-assert #x900000004
  )

;; TODO: fields
(deftype xyzw (uint128)
  ()
  :flag-assert #x900000010
  )

;; TODO: fields
(deftype xyzwh (uint128)
  ()
  :flag-assert #x900000010
  )

(deftype random-generator (basic)
  ((seed uint32  :offset-assert 4)
   )
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )

;; - Functions

(define-extern rand-vu (function float))
(define-extern rand-vu-float-range (function float float float))
(define-extern truncate (function float float))
(define-extern integral? (function float symbol))
(define-extern fractional-part (function float float))
(define-extern log2 (function int int))
(define-extern seek (function float float float float))
(define-extern lerp (function float float float float))
(define-extern lerp-scale (function float float float float float float))
(define-extern lerp-clamp (function float float float float))
(define-extern seekl (function int int int int))
(define-extern rand-vu-init (function float float))
(define-extern rand-vu-nostep (function float))
(define-extern rand-vu-percent? (function float symbol))
(define-extern rand-vu-int-range (function int int int))
(define-extern rand-vu-int-count (function int int))
(define-extern rand-uint31-gen (function random-generator uint))

;; - Symbols

(define-extern *random-generator* random-generator)


;; ----------------------
;; File - vector-h
;; Source Path - engine/math/vector-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype bit-array (basic)
  ((length           int32  :offset-assert 4)
   (allocated-length int32  :offset-assert 8)
   (_pad             uint8  :offset-assert 12)
   (bytes            uint8  :dynamic :offset 12)
   )
  :method-count-assert 13
  :size-assert         #xd
  :flag-assert         #xd0000000d
  (:methods
    (new (symbol type int) _type_ 0)
    (get-bit (_type_ int) symbol 9)
    (clear-bit (_type_ int) int 10)
    (set-bit (_type_ int) int 11)
    (clear-all! (_type_) _type_ 12)
    )
  )

(deftype vector4ub (structure)
  ((data uint8 4 :offset-assert 0)
   (x    uint8     :offset 0)
   (y    uint8     :offset 1)
   (z    uint8     :offset 2)
   (w    uint8     :offset 3)
   (clr  uint32    :offset 0)
   )
  :pack-me
  :method-count-assert 9
  :size-assert         #x4
  :flag-assert         #x900000004
  )

(deftype vector4b (structure)
  ((data int8 4 :offset-assert 0)
   (x    int8      :offset 0)
   (y    int8      :offset 1)
   (z    int8      :offset 2)
   (w    int8      :offset 3)
   )
  :method-count-assert 9
  :size-assert         #x4
  :flag-assert         #x900000004
  )

(deftype vector2h (structure)
  ((data int16 2 :score -9999 :offset-assert 0)
   (x    int16     :offset 0)
   (y    int16     :offset 2)
   )
  :pack-me
  :method-count-assert 9
  :size-assert         #x4
  :flag-assert         #x900000004
  )

(deftype vector2uh (structure)
  ((data uint16 2 :offset-assert 0)
   (x    uint16    :offset 0)
   (y    uint16    :offset 2)
   (val  uint32    :offset 0)
   )
  :pack-me
  :method-count-assert 9
  :size-assert         #x4
  :flag-assert         #x900000004
  )

(deftype vector3h (structure)
  ((data int16 2 :score -9999 :offset-assert 0) ;; probably a bug, should be 3.
   (x    int16     :offset 0)
   (y    int16     :offset 2)
   (z    int16     :offset-assert 4)
   )
  :method-count-assert 9
  :size-assert         #x6
  :flag-assert         #x900000006
  )

(deftype vector2w (structure)
  ((data int32 2 :score -9999 :offset-assert 0)
   (x    int32     :offset 0)
   (y    int32     :offset 4)
   )
  :pack-me
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )

(deftype vector3w (structure)
  ((data int32 3 :score -9999 :offset-assert 0)
   (x    int32     :offset 0)
   (y    int32     :offset 4)
   (z    int32     :offset 8)
   )
  :allow-misaligned
  :method-count-assert 9
  :size-assert         #xc
  :flag-assert         #x90000000c
  )

(deftype vector4w (structure)
  ((data  int32 4 :score -9999 :offset-assert 0)
   (x     int32     :offset 0)
   (y     int32     :offset 4)
   (z     int32     :offset 8)
   (w     int32     :offset 12)
   (dword uint64 2 :offset 0)
   (quad  uint128   :offset 0)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype vector4w-2 (structure)
  ((data   int32 8 :score -9999 :offset-assert 0)
   (quad   uint128 2 :offset 0)
   (vector vector4w 2 :inline :offset 0)
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

(deftype vector4w-3 (structure)
  ((data   int32 12 :score -9999 :offset-assert 0)
   (quad   uint128 3  :offset 0)
   (vector vector4w 3  :inline :offset 0)
   )
  :method-count-assert 9
  :size-assert         #x30
  :flag-assert         #x900000030
  )

(deftype vector4w-4 (structure)
  ((data   int32 16 :score -9999 :offset-assert 0)
   (quad   uint128 4  :offset 0)
   (vector vector4w 4  :inline :offset 0)
   )
  :method-count-assert 9
  :size-assert         #x40
  :flag-assert         #x900000040
  )

(deftype vector4h (structure)
  ((data int16 4 :offset-assert 0)
   (x    int16     :offset 0)
   (y    int16     :offset 2)
   (z    int16     :offset 4)
   (w    int16     :offset 6)
   (long uint64    :offset 0)
   )
  :pack-me
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )

(deftype vector8h (structure)
  ((data int16 8 :offset-assert 0)
   (quad uint128   :offset 0)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype vector16b (structure)
  ((data int8 16 :offset-assert 0)
   (quad uint128   :offset 0)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype vector (structure)
  ((x float :offset 0)
   (y float :offset 4)
   (z float :offset 8)
   (w float :offset 12)
   (data float 4  :score -9999 :offset 0)
   (quad uint128 :offset 0)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype vector4s-3 (structure)
  ((data   float 12 :offset-assert 0) ;; guess
   (quad   uint128 3  :offset 0)
   (vector vector 3 :inline :offset 0)     ;; guess
   )
  :method-count-assert 9
  :size-assert         #x30
  :flag-assert         #x900000030
  )

(deftype vector-array (inline-array-class)
  (
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype rgbaf (vector)
  ((r    float     :offset 0)
   (g    float     :offset 4)
   (b    float     :offset 8)
   (a    float     :offset 12)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype plane (vector)
  ((a    float     :offset 0)
   (b    float     :offset 4)
   (c    float     :offset 8)
   (d    float     :offset 12)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype sphere (vector)
  ((r    float     :offset 12)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

;; todo isphere
(deftype isphere (vec4s)
  ()
  )

(deftype box8s (structure)
  ((data   float 8       :offset-assert 0)
   (quad   uint128 2       :offset 0)
   (vector vector 2       :offset 0)
   (min    vector  :inline :offset 0)
   (max    vector  :inline :offset 16)
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

(deftype box8s-array (inline-array-class)
  ((data  box8s  :inline :dynamic :offset 16)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype cylinder (structure)
  ((origin vector :inline :offset-assert 0)
   (axis   vector :inline :offset-assert 16)
   (radius float          :offset-assert 32)
   (length float          :offset-assert 36)
   )
  :method-count-assert 11
  :size-assert         #x28
  :flag-assert         #xb00000028
  (:methods
    (TODO-RENAME-HUGE-9 (_type_ vector) none 9)
    (TODO-RENAME-10 (_type_ vector vector) float 10)
    )
  )

(deftype cylinder-flat (structure)
  ((origin vector :inline :offset-assert 0)
   (axis   vector :inline :offset-assert 16)
   (radius float          :offset-assert 32)
   (length float          :offset-assert 36)
   )
  :method-count-assert 11
  :size-assert         #x28
  :flag-assert         #xb00000028
  (:methods
    (TODO-RENAME-HUGE-9 (_type_ vector) none 9)
    (TODO-RENAME-10 (_type_ vector vector) float 10)
    )
  )

(deftype vertical-planes (structure)
  ((data uint128 4 :offset-assert 0) ;; probably wrong
   )
  :method-count-assert 9
  :size-assert         #x40
  :flag-assert         #x900000040
  )

(deftype vertical-planes-array (basic)
  ((length uint32           :offset-assert 4)
   (data   vertical-planes :inline :dynamic :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

;; the signs on these are a guess
(deftype qword (structure)
  ((data     uint32  4       :offset-assert 0)
   (byte     uint8  16      :offset 0)
   (hword    uint16  8       :offset 0)
   (word     uint32  4       :offset 0)
   (dword    uint64  2       :offset 0)
   (quad     uint128          :offset 0)
   (vector   vector   :inline :offset 0 :score -100)
   (vector4w vector4w :inline :offset 0)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype vector3s (structure)
  ((data float 3 :offset-assert 0)
   (x    float     :offset 0)
   (y    float     :offset 4)
   (z    float     :offset 8)
   )
  :method-count-assert 9
  :size-assert         #xc
  :flag-assert         #x90000000c
  )

;; - Functions

(define-extern vector-dot (function vector vector float))
(define-extern vector-dot-vu (function vector vector float))
(define-extern vector4-dot (function vector vector float))
(define-extern vector4-dot-vu (function vector vector float))
(define-extern vector+! (function vector vector vector vector))
(define-extern vector-! (function vector vector vector vector))
(define-extern vector-zero! (function vector vector))
(define-extern vector-reset! (function vector vector))
(define-extern vector-copy! (function vector vector vector))

;; - Symbols

(define-extern *null-vector* vector)
(define-extern *identity-vector* vector)
(define-extern *x-vector* vector)
(define-extern *y-vector* vector)
(define-extern *z-vector* vector)
(define-extern *up-vector* vector)
(define-extern *zero-vector* vector)


;; ----------------------
;; File - gravity-h
;; Source Path - engine/physics/gravity-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Nothing Defined in This File!


;; ----------------------
;; File - bounding-box-h
;; Source Path - engine/geometry/bounding-box-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype bounding-box (structure)
  ((min vector :inline :offset-assert 0)
   (max vector :inline :offset-assert 16)
   )
  :method-count-assert 16
  :size-assert         #x20
  :flag-assert         #x1000000020
  (:methods
    (add-spheres! (_type_ (pointer sphere) int) int 9)
    (add-point! (_type_ vector3s) int 10)
    (set-from-point-offset! (_type_ vector3s vector3s) int 11)
    (set-from-point-offset-pad! (_type_ vector3s vector3s float) int 12)
    (set-from-sphere! (_type_ sphere) int 13)
    (set-from-spheres! (_type_ (pointer sphere) int) int 14)
    (add-box! (_type_ bounding-box) int 15)
    )
  )

(deftype bounding-box4w (structure)
  ((min vector4w :inline :offset-assert 0)
   (max vector4w :inline :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

(deftype bounding-box-both (structure)
  ((box   bounding-box   :inline :offset-assert 0)
   (box4w bounding-box4w :inline :offset-assert 32)
   )
  :method-count-assert 9
  :size-assert         #x40
  :flag-assert         #x900000040
  )


;; ----------------------
;; File - matrix-h
;; Source Path - engine/math/matrix-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype matrix (structure)
  ((vector vector 4  :inline :offset 0)
   (quad   uint128 4  :offset 0)
   (data   float 16 :offset 0)
   )
  :method-count-assert 10
  :size-assert         #x40
  :flag-assert         #xa00000040
  (:methods
    (transform-vectors! (_type_ (inline-array vector) (inline-array vector) int) none 9)
    )
  )

(deftype matrix3 (structure)
  ((data   float 12 :offset-assert 0)
   (vector vector 3 :inline :offset 0)
   (quad   uint128 3  :offset 0)
   )
  :method-count-assert 9
  :size-assert         #x30
  :flag-assert         #x900000030
  )

(deftype matrix4h (structure)
  ((data     int16 16 :offset-assert 0)
   (vector4h vector4h 4 :inline :offset 0)
   (long     int64 4  :offset 0)
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

;; - Functions

(define-extern matrix-copy! (function matrix matrix matrix))


;; ----------------------
;; File - quaternion-h
;; Source Path - engine/math/quaternion-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype quaternion (structure)
  ((x    float           :offset-assert 0)
   (y    float           :offset-assert 4)
   (z    float           :offset-assert 8)
   (w    float           :offset-assert 12)
   (data float 4 :score -9999 :offset 0)
   (vec  vector  :inline :offset 0)
   (quad uint128         :offset 0)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

;; - Symbols

(define-extern *unity-quaternion* quaternion)


;; ----------------------
;; File - euler-h
;; Source Path - engine/math/euler-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype euler-angles (vector)
  ()
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

;; - Symbols

(define-extern EulSafe (array int32))
(define-extern EulNext (array int32))


;; ----------------------
;; File - transform-h
;; Source Path - engine/math/transform-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype transform (structure)
  ((trans vector :inline :offset-assert 0)
   (rot   vector :inline :offset-assert 16)
   (scale vector :inline :offset-assert 32)
   )
  :method-count-assert 9
  :size-assert         #x30
  :flag-assert         #x900000030
  )

(deftype trs (basic)
  ((trans vector :inline :offset-assert 16)
   (rot   vector :inline :offset-assert 32)
   (scale vector :inline :offset-assert 48)
   )
  (:methods
    (new (symbol type) _type_ 0)
    )
  :method-count-assert 9
  :size-assert         #x40
  :flag-assert         #x900000040
  )


;; ----------------------
;; File - geometry-h
;; Source Path - engine/geometry/geometry-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype curve (structure)
  ((cverts     pointer  :offset-assert 0)
   (num-cverts int32   :offset-assert 4)
   (knots      (inline-array vector)  :offset-assert 8)
   (num-knots  int32   :offset-assert 12)
   (length     float   :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x14
  :flag-assert         #x900000014
  )

(deftype border-plane (basic)
  ((name   symbol         :offset-assert 4)
   (action basic          :offset-assert 8)
   (slot   int8           :offset-assert 12)
   (trans  vector :inline :offset-assert 16)
   (normal vector :inline :offset-assert 32)
   )
  :method-count-assert 11
  :size-assert         #x30
  :flag-assert         #xb00000030
  (:methods
    (debug-draw! (_type_) none 9)
    (point-past-plane? (_type_ vector) symbol 10)
    )
  )


;; ----------------------
;; File - trigonometry-h
;; Source Path - engine/math/trigonometry-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Nothing Defined in This File!


;; ----------------------
;; File - transformq-h
;; Source Path - engine/math/transformq-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype transformq (transform)
  ((quat  quaternion :inline :offset 16 :score 100)
   )
  :method-count-assert 9
  :size-assert         #x30
  :flag-assert         #x900000030
  )

(deftype trsq (trs)
  ((quat  quaternion :inline :offset 32 :score 100)
   )
  :method-count-assert 9
  :size-assert         #x40
  :flag-assert         #x900000040
  )

(deftype trsqv (trsq)
  ((pause-adjust-distance meters             :offset 4)
   (nav-radius            meters             :offset 8)
   (transv                vector     :inline :offset-assert 64)
   (rotv                  vector     :inline :offset-assert 80)
   (scalev                vector     :inline :offset-assert 96)
   (dir-targ              quaternion :inline :offset-assert 112)
   (angle-change-time     uint64             :offset-assert 128)
   (old-y-angle-diff      float              :offset-assert 136)
   )
  :method-count-assert 28
  :size-assert         #x8c
  :flag-assert         #x1c0000008c
  (:methods
    (TODO-RENAME-9 (_type_ vector float int) quaternion 9)
    (TODO-RENAME-10 (_type_ vector) quaternion 10)
    (TODO-RENAME-11 (_type_ vector float int) quaternion 11)
    (TODO-RENAME-12 (_type_ vector) quaternion 12)
    (TODO-RENAME-13 (_type_ float float int) quaternion 13)
    (TODO-RENAME-14 (_type_ float) quaternion 14)
    (TODO-RENAME-15 (_type_ float) quaternion 15)
    (TODO-RENAME-VECTOR-DOT-16 (_type_ float) quaternion 16)
    (TODO-RENAME-17 (_type_ quaternion float float) quaternion 17)
    (set-quaternion!-18 (_type_ quaternion) quaternion 18)
    (TODO-RENAME-19 (_type_ vector) quaternion 19)
    (TODO-RENAME-20 (_type_ vector) quaternion 20)
    (rot->dir-targ!-21 (_type_) quaternion 21)
    (y-angle (_type_) float 22)
    (global-y-angle-to-point (_type_ vector) float 23)
    (relative-y-angle-to-point (_type_ vector) float 24)
    (TODO-VECTOR-MATH-ISSUES-25 (_type_) float 25)
    (TODO-RENAME-26 (_type_ int vector float) trsqv 26)
    (get-quaternion (_type_) quaternion 27)
    )
  )

;; - Functions

(define-extern deg-diff (function float float float))
(define-extern vector-y-angle (function vector float))


;; ----------------------
;; File - bounding-box
;; Source Path - engine/geometry/bounding-box.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern box-vector-enside? (function bounding-box vector symbol))
(define-extern box-vector-inside? (function bounding-box vector symbol))


;; ----------------------
;; File - matrix
;; Source Path - engine/math/matrix.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern atan (function float float float))
(define-extern matrix-4x4-determinant (function matrix float))
(define-extern matrix-3x3-determinant (function matrix float))
(define-extern matrix-axis-sin-cos! (function matrix vector float float matrix))
(define-extern sin (function float float))
(define-extern cos (function float float))
(define-extern matrix-rotate-y! (function matrix float matrix))
(define-extern matrix-rotate-x! (function matrix float matrix))
(define-extern matrix*! (function matrix matrix matrix matrix))
(define-extern vector-sincos! (function vector vector vector int))
(define-extern matrix-rotate-z! (function matrix float matrix))
(define-extern matrix-identity! (function matrix matrix))
(define-extern matrix-transpose! (function matrix matrix matrix))
(define-extern vector-rotate*! (function vector vector matrix vector))
(define-extern vector-matrix*! (function vector vector matrix vector))
(define-extern matrix+! (function matrix matrix matrix matrix))
(define-extern matrix-! (function matrix matrix matrix matrix))
(define-extern matrixp*! (function matrix matrix matrix matrix))
(define-extern vector3s-matrix*! (function vector3s vector3s matrix vector3s))
(define-extern vector3s-rotate*! (function vector3s vector3s matrix vector3s))
(define-extern matrix-inverse-of-rot-trans! (function matrix matrix matrix))
(define-extern matrix-4x4-inverse! (function matrix matrix matrix))
(define-extern matrix-translate! (function matrix vector matrix))
(define-extern matrix-translate+! (function matrix matrix vector matrix))
(define-extern matrix-scale! (function matrix vector matrix))
(define-extern scale-matrix! (function matrix vector matrix matrix))
(define-extern matrix-inv-scale! (function matrix vector matrix))
(define-extern column-scale-matrix! (function matrix vector matrix matrix))
(define-extern matrix-rotate-zyx! (function matrix vector matrix))
(define-extern matrix-rotate-xyz! (function matrix vector matrix))
(define-extern matrix-rotate-zxy! (function matrix vector matrix))
(define-extern matrix-rotate-yxz! (function matrix vector matrix))
(define-extern matrix-rotate-yzx! (function matrix vector matrix))
(define-extern matrix-rotate-yxy! (function matrix vector matrix))
(define-extern matrix-rotate-yx! (function matrix float float matrix))
(define-extern matrix-axis-sin-cos-vu! (function matrix vector float float none))
(define-extern matrix-axis-angle! (function matrix vector float none))
(define-extern matrix-lerp! (function matrix matrix matrix float matrix))
(define-extern matrix3-determinant (function matrix float))
(define-extern matrix-3x3-inverse! (function matrix matrix matrix))
(define-extern matrix-3x3-inverse-transpose! (function matrix matrix matrix))
(define-extern matrix3-inverse-transpose! (function matrix matrix matrix))
(define-extern matrix-4x4-inverse-transpose! (function matrix matrix matrix))
(define-extern matrix-y-angle (function matrix float))

;; - Symbols

(define-extern *identity-matrix* matrix)


;; ----------------------
;; File - transform
;; Source Path - engine/math/transform.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern transform-matrix-calc! (function transform matrix matrix))
(define-extern vector-identity! (function vector vector))
(define-extern transform-matrix-parent-calc! (function transform matrix vector matrix))
(define-extern trs-matrix-calc! (function trs matrix matrix))


;; ----------------------
;; File - quaternion
;; Source Path - engine/math/quaternion.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern quaternion->matrix (function matrix quaternion matrix))
(define-extern quaternion-vector-angle! (function quaternion vector float quaternion))
(define-extern vector-xz-length (function vector float))
(define-extern vector-xz-normalize! (function vector float vector))
(define-extern quaternion-from-two-vectors-max-angle! (function quaternion vector vector float quaternion))
(define-extern vector-z-quaternion! (function vector quaternion vector))
(define-extern quaternion-normalize! (function quaternion quaternion))
(define-extern quaternion*! (function quaternion quaternion quaternion quaternion))
(define-extern acos (function float float))
(define-extern vector-x-quaternion! (function vector quaternion vector))
(define-extern quaternion-y-angle (function quaternion float))
(define-extern vector-rad<-vector-deg/2! (function vector vector int))
(define-extern vector-sincos-rad! (function vector vector vector int))
(define-extern quaternion-dot (function quaternion quaternion float))
(define-extern atan-series-rad (function float float))
(define-extern vector-sin-rad! (function vector vector vector))
(define-extern vector-length (function vector float))
(define-extern sincos-rad! (function (pointer float) float int))
(define-extern quaternion-vector-len (function quaternion float))
(define-extern atan2-rad (function float float float))
(define-extern matrix->quaternion (function quaternion matrix quaternion))
(define-extern quaternion-float*! (function quaternion quaternion float quaternion))
(define-extern acos-rad (function float float))
(define-extern quaternion-norm (function quaternion float))
(define-extern quaternion-axis-angle! (function quaternion float float float float quaternion))
(define-extern vector-angle<-quaternion! (function vector quaternion vector))
(define-extern quaternion-zero! (function quaternion quaternion))
(define-extern quaternion-identity! (function quaternion quaternion))
(define-extern quaternion-i! (function quaternion quaternion))
(define-extern quaternion-j! (function quaternion quaternion))
(define-extern quaternion-k! (function quaternion quaternion))
(define-extern quaternion-copy! (function quaternion quaternion quaternion))
(define-extern quaternion-set! (function quaternion float float float float quaternion))
(define-extern quaternion+! (function quaternion quaternion quaternion quaternion))
(define-extern quaternion-! (function quaternion quaternion quaternion quaternion))
(define-extern quaternion-negate! (function quaternion quaternion quaternion))
(define-extern quaternion-conjugate! (function quaternion quaternion quaternion))
(define-extern quaternion-float/! (function quaternion quaternion float quaternion))
(define-extern quaternion-norm2 (function quaternion float))
(define-extern quaternion-inverse! (function quaternion quaternion quaternion))
(define-extern quaternion-right-mult-matrix! (function matrix quaternion matrix))
(define-extern quaternion-left-mult-matrix! (function matrix quaternion matrix))
(define-extern matrix-with-scale->quaternion (function quaternion matrix quaternion))
(define-extern quaternion-log! (function quaternion quaternion quaternion))
(define-extern quaternion-exp! (function quaternion quaternion quaternion))
(define-extern quaternion-slerp! (function quaternion quaternion quaternion float quaternion))
(define-extern quaternion-pseudo-slerp! (function quaternion quaternion quaternion float quaternion))
(define-extern quaternion-zxy! (function quaternion vector quaternion))
(define-extern vector-y-quaternion! (function vector quaternion vector))
(define-extern quaternion-vector-y-angle (function quaternion vector float))
(define-extern quaternion-rotate-local-x! (function quaternion quaternion float quaternion))
(define-extern quaternion-rotate-local-y! (function quaternion quaternion float quaternion))
(define-extern quaternion-rotate-local-z! (function quaternion quaternion float quaternion))
(define-extern quaternion-rotate-y! (function quaternion quaternion float quaternion))
(define-extern quaternion-rotate-x! (function quaternion quaternion float quaternion))
(define-extern quaternion-rotate-z! (function quaternion quaternion float quaternion))
(define-extern quaternion-delta-y (function quaternion quaternion float))
(define-extern quaternion-rotate-y-to-vector! (function quaternion quaternion quaternion float quaternion))
(define-extern vector-rotate-y! (function vector vector float vector))
(define-extern vector-x-angle (function vector float))
(define-extern quaterion<-rotate-y-vector (function quaternion vector quaternion))
(define-extern quaternion-validate (function quaternion none))
(define-extern quaternion-xz-angle (function quaternion float))


;; ----------------------
;; File - euler
;; Source Path - engine/math/euler.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern matrix->eul (function euler-angles matrix int euler-angles))
(define-extern eul->matrix (function matrix euler-angles matrix))
(define-extern set-eul! (function euler-angles float float float int euler-angles))
(define-extern eul->quat (function quaternion euler-angles quaternion))
(define-extern quat->eul (function euler-angles quaternion int euler-angles))


;; ----------------------
;; File - geometry
;; Source Path - engine/geometry/geometry.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions



(define-extern vector-vector-distance-squared (function vector vector float))

(define-extern vector-vector-distance (function vector vector float))
(define-extern circle-circle-xz-intersect (function sphere sphere vector vector int))
(define-extern vector-normalize-copy! (function vector vector float vector))
(define-extern forward-up->quaternion (function quaternion vector vector quaternion))
(define-extern matrix-from-two-vectors-partial-linear! (function matrix vector vector float matrix))
(define-extern matrix-from-two-vectors-max-angle! (function matrix vector vector float matrix))
(define-extern vector-negate! (function vector vector vector))
(define-extern vector-normalize-ret-len! (function vector float float))
(define-extern vector-flatten! (function vector vector vector vector))
(define-extern vector-normalize! (function vector float vector))
(define-extern vector-cross! (function vector vector vector vector))
(define-extern forward-down->inv-matrix (function matrix vector vector matrix))
(define-extern forward-up-nopitch->inv-matrix (function matrix vector vector matrix))
(define-extern forward-down-nopitch->inv-matrix (function matrix vector vector matrix))
(define-extern vector-float*! (function vector vector float vector))
(define-extern vector+float*! (function vector vector vector float vector))
(define-extern vector-reflect! (function vector vector vector vector))
(define-extern vector-reflect-flat! (function vector vector vector vector))
(define-extern vector-reflect-true-flat! (function vector vector vector vector))
(define-extern vector-reflect-flat-above! (function vector vector vector vector))
(define-extern vector-segment-distance-point! (function vector vector vector vector float))
(define-extern vector-line-distance (function vector vector vector float))
(define-extern vector-line-distance-point! (function vector vector vector vector float))
(define-extern vector-orient-by-quat! (function vector vector quaternion vector))
(define-extern forward-up-nopitch->quaternion (function quaternion vector vector quaternion))
(define-extern quaternion-from-two-vectors! (function quaternion vector vector quaternion))
(define-extern matrix-from-two-vectors! (function matrix vector vector matrix))
(define-extern matrix-from-two-vectors-max-angle-partial! (function matrix vector vector float float matrix))
(define-extern matrix-remove-z-rot (function matrix matrix matrix))
(define-extern matrix-rot-diff! (function vector matrix matrix float))
(define-extern quaternion-seek (function quaternion quaternion quaternion float float quaternion))
(define-extern vector-deg-seek (function vector vector vector float vector))
(define-extern vector-deg-slerp (function vector vector vector float vector))
(define-extern vector-vector-deg-slerp! (function vector vector vector float vector vector)) ;; stack spills!
(define-extern normal-of-plane (function vector vector vector vector vector))
(define-extern vector-3pt-cross! (function vector vector vector vector vector))
(define-extern closest-pt-in-triangle (function vector vector matrix vector none)) ;; asm branches
(define-extern point-in-triangle-cross (function vector vector vector vector vector symbol))
(define-extern point-in-plane-<-point+normal! (function vector vector vector vector))
(define-extern circle-test (function none))
(define-extern vector-circle-tangent-new (function vector vector vector vector none))
(define-extern vector-circle-tangent (function vector vector vector vector none))
(define-extern find-knot-span (function int int float (inline-array vector) int))
(define-extern calculate-basis-functions-vector! (function (pointer float) int float (pointer float) (pointer float)))

(define-extern curve-closest-point (function curve vector float float int float float))
(define-extern vector-plane-distance (function vector plane vector float))

(define-extern curve-get-pos! (function vector float curve vector))
(define-extern curve-evaluate! (function vector float pointer int (inline-array vector) int vector))
(define-extern curve-length (function curve float))
(define-extern curve-copy! (function curve curve curve))


;; ----------------------
;; File - trigonometry
;; Source Path - engine/math/trigonometry.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype float-type (uint32)
  ()
  )

;; - Functions

(define-extern coserp180 (function float float float float))
(define-extern coserp (function float float float float))
(define-extern sinerp (function float float float float))
(define-extern asin (function float float))
(define-extern atan0 (function float float float))
(define-extern sign (function float float))
(define-extern vector-rad<-vector-deg! (function vector vector none))
(define-extern deg- (function float float float))
(define-extern radmod (function float float))
(define-extern deg-seek (function float float float float))
(define-extern deg-seek-smooth (function float float float float float))
(define-extern deg-lerp-clamp (function float float float float))
(define-extern sin-rad (function float float))
(define-extern cos-rad (function float float))
(define-extern vector-cos-rad! (function vector vector vector))
(define-extern sincos! (function (pointer float) float int))
(define-extern tan-rad (function float float))
(define-extern tan (function float float))
(define-extern atan-rad (function float float))
(define-extern exp (function float float))
(define-extern sinerp-clamp (function float float float float))
(define-extern coserp-clamp (function float float float float))
;; ;; unknown type
(define-extern coserp180-clamp (function float float float float))
 ;; unknown type
(define-extern ease-in-out (function int int float))

;; - Symbols

(define-extern *sin-poly-vec2* vector)
(define-extern *sin-poly-vec* vector)
(define-extern *cos-poly-vec* vector)
(define-extern binary-table (array float))
(define-extern sincos-table (array float))
(define-extern exp-slead (pointer float))
(define-extern exp-strail (pointer float))


;; ----------------------
;; File - gsound-h
;; Source Path - engine/sound/gsound-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype sound-id (uint32)
  ()
  (:methods
   (dummy-9 () none 9)
   )
  :flag-assert #xa00000004
  )

(deftype sound-bank-id (uint32)
  ()
  :flag-assert #x900000004
  )

(deftype sound-name (uint128)
  ((lo  uint64  :offset 0)
   (hi  uint64  :offset 64)
   )
  :flag-assert #x900000010
  )

(deftype sound-rpc-cmd (structure)
  ((rsvd1   uint16  :offset-assert 0)
   (command sound-command  :offset-assert 2)
   )
  :method-count-assert 9
  :size-assert         #x4
  :flag-assert         #x900000004
  )

(deftype sound-play-parms (structure)
  ((mask      uint16    :offset-assert 0)
   (pitch-mod int16     :offset-assert 2)
   (bend      int16     :offset-assert 4)
   (fo-min    int16     :offset-assert 6)
   (fo-max    int16     :offset-assert 8)
   (fo-curve  int8      :offset-assert 10)
   (priority  int8      :offset-assert 11)
   (volume    int32     :offset-assert 12)
   (trans     vector3w  :inline :offset-assert 16)
   (group     uint8     :offset-assert 28)
   )
  :pack-me
  :method-count-assert 9
  :size-assert         #x1d
  :flag-assert         #x90000001d
  )

(deftype sound-rpc-bank-cmd (sound-rpc-cmd)
  ((bank-name sound-name  :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

(deftype sound-rpc-sound-cmd (sound-rpc-cmd)
  ((id      sound-id  :offset-assert 4)
   )
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )

(deftype sound-rpc-group-cmd (sound-rpc-cmd)
  ((group   uint8   :offset-assert 4)
   )
  :method-count-assert 9
  :size-assert         #x5
  :flag-assert         #x900000005
  )

(deftype sound-rpc-load-bank (sound-rpc-bank-cmd)
  ()
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

(deftype sound-rpc-load-music (sound-rpc-bank-cmd)
  ()
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

(deftype sound-rpc-unload-bank (sound-rpc-bank-cmd)
  ()
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

(deftype sound-rpc-play (sound-rpc-sound-cmd)
  ((name    sound-name               :offset-assert 16)
   (parms   sound-play-parms :inline :offset-assert 32)
   )
  :method-count-assert 9
  :size-assert         #x3d
  :flag-assert         #x90000003d
  )

(deftype sound-rpc-pause-sound (sound-rpc-sound-cmd)
  ()
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )

(deftype sound-rpc-stop-sound (sound-rpc-sound-cmd)
  ()
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )

(deftype sound-rpc-continue-sound (sound-rpc-sound-cmd)
  ()
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )

(deftype sound-rpc-set-param (sound-rpc-sound-cmd)
  ((parms     sound-play-parms :inline :offset-assert 8)
   (auto-time int32                    :offset-assert 40)
   (auto-from int32                    :offset-assert 44)
   )
  :method-count-assert 9
  :size-assert         #x30
  :flag-assert         #x900000030
  )

(deftype sound-rpc-set-master-volume (sound-rpc-group-cmd)
  ((volume  int32   :offset-assert 8)
   )
  :method-count-assert 9
  :size-assert         #xc
  :flag-assert         #x90000000c
  )

(deftype sound-rpc-pause-group (sound-rpc-group-cmd)
  ()
  :method-count-assert 9
  :size-assert         #x5
  :flag-assert         #x900000005
  )

(deftype sound-rpc-stop-group (sound-rpc-group-cmd)
  ()
  :method-count-assert 9
  :size-assert         #x5
  :flag-assert         #x900000005
  )

(deftype sound-rpc-continue-group (sound-rpc-group-cmd)
  ()
  :method-count-assert 9
  :size-assert         #x5
  :flag-assert         #x900000005
  )

(deftype sound-rpc-get-irx-version (sound-rpc-cmd)
  ((major   uint32  :offset-assert 4)
   (minor   uint32  :offset-assert 8)
   (ee-addr pointer :offset-assert 12)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype sound-rpc-set-language (sound-rpc-cmd)
  ((lang    uint32  :offset-assert 4)
   )
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )

(deftype sound-rpc-set-falloff-curve (sound-rpc-cmd)
  ((curve   int32   :offset-assert 4)
   (falloff int32   :offset-assert 8)
   (ease    int32   :offset-assert 12)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype sound-rpc-set-sound-falloff (sound-rpc-cmd)
  ((name    sound-name  :offset-assert 16)
   (curve   int32    :offset-assert 32)
   (min     int32    :offset-assert 36)
   (max     int32    :offset-assert 40)
   )
  :method-count-assert 9
  :size-assert         #x2c
  :flag-assert         #x90000002c
  )

(deftype sound-rpc-reload-info (sound-rpc-cmd)
  ()
  :method-count-assert 9
  :size-assert         #x4
  :flag-assert         #x900000004
  )

(deftype sound-rpc-set-reverb (sound-rpc-cmd)
  ((core    uint8   :offset-assert 4)
   (reverb  int32   :offset-assert 8)
   (left    uint32  :offset-assert 12)
   (right   uint32  :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x14
  :flag-assert         #x900000014
  )

(deftype sound-rpc-set-ear-trans (sound-rpc-cmd)
  ((ear-trans vector3w :inline :offset-assert 4)
   (cam-trans vector3w :inline :offset-assert 16)
   (cam-angle int32     :offset-assert 28)
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

(deftype sound-rpc-set-flava (sound-rpc-cmd)
  ((flava   uint8   :offset-assert 4)
   )
  :method-count-assert 9
  :size-assert         #x5
  :flag-assert         #x900000005
  )

(deftype sound-rpc-shutdown (sound-rpc-cmd)
  ()
  :method-count-assert 9
  :size-assert         #x4
  :flag-assert         #x900000004
  )

(deftype sound-rpc-list-sounds (sound-rpc-cmd)
  ()
  :method-count-assert 9
  :size-assert         #x4
  :flag-assert         #x900000004
  )

(deftype sound-rpc-unload-music (sound-rpc-cmd)
  ()
  :method-count-assert 9
  :size-assert         #x4
  :flag-assert         #x900000004
  )

(deftype sound-rpc-union (structure)
  ((data              uint32                     20 :offset-assert 0)
   (load-bank         sound-rpc-load-bank            :offset 0)
   (unload-bank       sound-rpc-unload-bank          :offset 0)
   (play              sound-rpc-play                 :offset 0)
   (pause-sound       sound-rpc-pause-sound          :offset 0)
   (stop-sound        sound-rpc-stop-sound           :offset 0)
   (continue-sound    sound-rpc-continue-sound       :offset 0)
   (set-param         sound-rpc-set-param            :offset 0)
   (set-master-volume sound-rpc-set-master-volume    :offset 0)
   (pause-group       sound-rpc-pause-group          :offset 0)
   (stop-group        sound-rpc-stop-group           :offset 0)
   (continue-group    sound-rpc-continue-group       :offset 0)
   (get-irx-version   sound-rpc-get-irx-version      :offset 0)
   (set-falloff-curve sound-rpc-set-falloff-curve    :offset 0)
   (set-sound-falloff sound-rpc-set-sound-falloff    :offset 0)
   (reload-info       sound-rpc-reload-info          :offset 0)
   (set-language      sound-rpc-set-language         :offset 0)
   (set-reverb        sound-rpc-set-reverb           :offset 0)
   (set-ear-trans     sound-rpc-set-ear-trans        :offset 0)
   (set-flava         sound-rpc-set-flava            :offset 0)
   (shutdown          sound-rpc-shutdown             :offset 0)
   (list-sounds       sound-rpc-list-sounds          :offset 0)
   (unload-music      sound-rpc-unload-music         :offset 0)
   )
  :method-count-assert 9
  :size-assert         #x50
  :flag-assert         #x900000050
  )

(deftype sound-spec (basic)
  ((mask            uint16     :offset-assert 4)
   (num             float      :offset-assert 8)
   (group           uint8      :offset-assert 12)
   (sound-name-char uint8 16 :offset 16)
   (sound-name      sound-name    :offset 16)
   (trans           float 4  :offset-assert 32) ;; guess
   (volume          int32      :offset-assert 48)
   (pitch-mod       int32      :offset-assert 52)
   (bend            int32      :offset-assert 56)
   (fo-min          int16      :offset-assert 60)
   (fo-max          int16      :offset-assert 62)
   (fo-curve        int8       :offset-assert 64)
   (priority        int8       :offset-assert 65)
   (auto-time       int32      :offset-assert 68)
   (auto-from       int32      :offset-assert 72)
   )
  :method-count-assert 9
  :size-assert         #x4c
  :flag-assert         #x90000004c
  )

(declare-type res-lump basic)
(declare-type entity res-lump)
(deftype ambient-sound (basic)
  ((spec         sound-spec       :offset-assert 4)
   (playing-id   sound-id         :offset-assert 8)
   (trans        vector   :inline :offset-assert 16)
   (name         sound-name       :offset-assert 32)
   (play-time    uint64           :offset-assert 48)
   (time-base    uint64           :offset-assert 56)
   (time-random  uint64           :offset-assert 64)
   (volume       int32            :offset-assert 72)
   (pitch        int32            :offset-assert 76)
   (falloff-near int32            :offset-assert 80)
   (falloff-far  int32            :offset-assert 84)
   (falloff-mode int32            :offset-assert 88)
   (params       sound-play-parms :offset-assert 92)
   (param-count  int32            :offset-assert 96)
   (entity       entity           :offset-assert 100)
   (sound-count  int32            :offset-assert 104)
   )
  :method-count-assert 14
  :size-assert         #x6c
  :flag-assert         #xe0000006c
  (:methods
    (new (symbol type basic vector) _type_ 0)
    (update! (_type_) int 9)
    (change-sound! (_type_ sound-name) int 10)
    (update-trans! (_type_ vector) int 11)
    (update-vol! (_type_ int) int 12)
    (stop! (_type_) int 13)
    )
  )

;; - Symbols

(define-extern *current-sound-id* sound-id)
(define-extern *sound-bank-1* symbol)
(define-extern *sound-bank-2* symbol)


;; ----------------------
;; File - timer-h
;; Source Path - engine/ps2/timer-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype timer-mode (uint32)
  ((clks  timer-clock-selection :offset 0 :size 2)
   (gate  uint8 :offset 2 :size 1) ;; gate function enable
   (gats  uint8 :offset 3 :size 1) ;; gate selection: 0 = hblank, 1 = vblank
   ;; gate mode:
   ;;  0: count while gate signal is low
   ;;  1: start when gate signal rises
   ;;  2: start when gate signal falls
   ;;  3: start when gate signal rises/falls
   (gatm  uint8 :offset 4 :size 2)
   (zret  uint8 :offset 6 :size 1) ;; zero return: clear counter when equal to reference value
   (cue   uint8 :offset 7 :size 1) ;; count-up enable
   (cmpe  uint8 :offset 8 :size 1) ;; compare-interrupt enable
   (ovfe  uint8 :offset 9 :size 1) ;; overflow-interrupt enable
   (equf  uint8 :offset 10 :size 1) ;; equal-flag
   (ovff  uint8 :offset 11 :size 1) ;; overflow-flag
   )
  :method-count-assert 9
  :size-assert         #x4
  :flag-assert         #x900000004
  )

(deftype timer-bank (structure)
  ((count uint32      :offset 0)
   (mode  timer-mode  :offset 16)
   (comp  uint32      :offset 32)
   )
  :method-count-assert 9
  :size-assert         #x24
  :flag-assert         #x900000024
  )

(deftype timer-hold-bank (timer-bank)
  ((hold  uint32  :offset 48)
   )
  :method-count-assert 9
  :size-assert         #x34
  :flag-assert         #x900000034
  )

(deftype stopwatch (basic)
  ((prev-time-elapsed uint64  :offset-assert 8)
   (start-time        uint64  :offset-assert 16)
   (begin-level       int32   :offset-assert 24)
   )
  :method-count-assert 9
  :size-assert         #x1c
  :flag-assert         #x90000001c
  )

(deftype profile-frame (structure)
  ((name       symbol  :offset-assert 0)
   (time-stamp uint32  :offset-assert 4)
   (color      rgba    :offset-assert 8)
   )
  :method-count-assert 9
  :size-assert         #xc
  :flag-assert         #x90000000c
  )

(declare-type dma-buffer basic)
(deftype profile-bar (basic)
  ((profile-frame-count int32        :offset-assert 4)
   (cache-time          uint64       :offset-assert 8)
   (data                profile-frame 1024 :inline :offset-assert 16)
   )
  :method-count-assert 14
  :size-assert         #x4010
  :flag-assert         #xe00004010
  (:methods
    (new (symbol type) _type_)
    (get-last-frame-time-stamp (_type_) uint 9)
    (reset (_type_) _type_ 10)
    (add-frame (_type_ symbol rgba) profile-frame 11)
    (add-end-frame (_type_ symbol rgba) profile-frame 12)
    (draw (_type_ dma-buffer int) float 13)
    )
  )

;; - Functions

(define-extern timer-init (function timer-bank timer-mode int))

;; - Symbols

(define-extern *ticks-per-frame* int)


;; ----------------------
;; File - timer
;; Source Path - engine/ps2/timer.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern stopwatch-elapsed-ticks (function stopwatch uint))
(define-extern timer-reset (function timer-bank none))
(define-extern timer-count (function timer-bank uint))
(define-extern disable-irq (function none))
(define-extern enable-irq (function none))
(define-extern stopwatch-init (function stopwatch int))
(define-extern stopwatch-reset (function stopwatch int))
(define-extern stopwatch-start (function stopwatch int))
(define-extern stopwatch-stop (function stopwatch uint))
(define-extern stopwatch-begin (function stopwatch int))
(define-extern stopwatch-end (function stopwatch uint))
(define-extern stopwatch-elapsed-seconds (function stopwatch float))


;; ----------------------
;; File - vif-h
;; Source Path - engine/ps2/vif-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype vif-stat (uint32)
  ((vps uint8 :offset 0 :size 2)
   (vew uint8 :offset 2 :size 1)
   (mrk uint8 :offset 6 :size 1)
   (vss uint8 :offset 8 :size 1)
   (vfs uint8 :offset 9 :size 1)
   (vis uint8 :offset 10 :size 1)
   (int uint8 :offset 11 :size 1)
   (er0 uint8 :offset 12 :size 1)
   (er1 uint8 :offset 13 :size 1)
   (fqc uint8 :offset 24 :size 4)
   )
  :method-count-assert 9
  :size-assert         #x4
  :flag-assert         #x900000004
  )

(deftype vif-fbrst (uint32)
  ((rst uint8 :offset 0 :size 1)
   (fbk uint8 :offset 1 :size 1)
   (stp uint8 :offset 2 :size 1)
   (stc uint8 :offset 3 :size 1)
   )
  :method-count-assert 9
  :size-assert         #x4
  :flag-assert         #x900000004
  )

(deftype vif-err (uint32)
  ((mii uint8 :offset 0 :size 1)
   (me0 uint8 :offset 1 :size 1) ;; PS2 hardware bug, must set this to 1 for correct operation.
   (me1 uint8 :offset 2 :size 1)
   )
  :method-count-assert 9
  :size-assert         #x4
  :flag-assert         #x900000004
  )

(deftype vif-bank (structure)
  ((stat   uint32  :offset-assert 0)
   (fbrst  uint32  :offset 16)
   (err    vif-err :offset 32)
   (mark   uint32  :offset 48)
   (cycle  uint32  :offset 64)
   (mode   uint32  :offset 80)
   (num    uint32  :offset 96)
   (mask   uint32  :offset 112)
   (code   uint32  :offset 128)
   (itops  uint32  :offset 144)
   (base   uint32  :offset 160)
   (offset uint32  :offset 176)
   (tops   uint32  :offset 192)
   (itop   uint32  :offset 208)
   (top    uint32  :offset 224)
   (r0     uint32  :offset 256)
   (r1     uint32  :offset 272)
   (r2     uint32  :offset 288)
   (r3     uint32  :offset 304)
   (c0     uint32  :offset 320)
   (c1     uint32  :offset 336)
   (c2     uint32  :offset 352)
   (c3     uint32  :offset 368)
   )
  :method-count-assert 9
  :size-assert         #x174
  :flag-assert         #x900000174
  )


;; ----------------------
;; File - dma-h
;; Source Path - engine/dma/dma-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype dma-chcr (uint32)
  ((dir uint8 :offset 0 :size 1) ;; 1 - from memory
   (mod uint8 :offset 2 :size 2) ;; normal, chain, interleave
   (asp uint8 :offset 4 :size 2) ;; none, 1, 2
   (tte uint8 :offset 6 :size 1) ;; transfer tag (sc only)
   (tie uint8 :offset 7 :size 1) ;; tag interrupt
   (str uint8 :offset 8 :size 1) ;; start!
   (tag uint16 :offset 16)
   )
  :method-count-assert 9
  :size-assert         #x4
  :flag-assert         #x900000004
  )

(deftype dma-bank (structure)
  ((chcr dma-chcr  :offset 0)
   (madr uint32  :offset 16)
   (qwc  uint32  :offset 32)
   )
  :method-count-assert 9
  :size-assert         #x24
  :flag-assert         #x900000024
  )

(deftype dma-bank-source (dma-bank)
  ((tadr uint32  :offset 48)
   )
  :method-count-assert 9
  :size-assert         #x34
  :flag-assert         #x900000034
  )

(deftype dma-bank-vif (dma-bank-source)
  ((as0  uint32  :offset 64)
   (as1  uint32  :offset 80)
   )
  :method-count-assert 9
  :size-assert         #x54
  :flag-assert         #x900000054
  )

(deftype dma-bank-spr (dma-bank-source)
  ((sadr uint32  :offset 128)
   )
  :method-count-assert 9
  :size-assert         #x84
  :flag-assert         #x900000084
  )

(deftype dma-ctrl (uint32)
  ((dmae  uint8 :offset 0 :size 1)
   (rele  uint8 :offset 1 :size 1)
   (mfd   uint8 :offset 2 :size 2)
   (sts   uint8 :offset 4 :size 2)
   (std   uint8 :offset 6 :size 2)
   (rcyc  uint8 :offset 8 :size 3)
   )
  :method-count-assert 9
  :size-assert         #x4
  :flag-assert         #x900000004
  ;; likely a bitfield type
  )

(deftype dma-enable (uint32)
  ((cpnd  uint8 :offset 16 :size 1))
  :flag-assert #x900000004
  )

(deftype dma-sqwc (uint32)
  ((sqwc  uint8 :offset 0  :size 8)
   (tqwc  uint8 :offset 16 :size 8)
   )
  :flag-assert #x900000004
  )

(deftype dma-bank-control (structure)
  ((ctrl    dma-ctrl  :offset 0)
   (stat    uint32  :offset 16)
   (pcr     uint32  :offset 32)
   (sqwc    dma-sqwc  :offset 48)
   (rbsr    uint32  :offset 64)
   (rbor    uint32  :offset 80)
   (stadr   uint32  :offset 96)
   (enabler uint32  :offset 5408)
   (enablew uint32  :offset 5520)
   )
  :method-count-assert 9
  :size-assert         #x1594
  :flag-assert         #x900001594
  )

(deftype vu-code-block (basic)
  ((name         basic   :offset-assert 4)
   (code         uint32  :offset-assert 8)
   (size         int32   :offset-assert 12)
   (dest-address uint32  :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x14
  :flag-assert         #x900000014
  )

(deftype vu-stat (uint64)
  ()
  :flag-assert #x900000008
  )

(deftype dma-tag (uint64)
  ((qwc uint16    :offset 0)          ;; quadword count
   (pce uint8     :offset 26 :size 2)  ;; priority (source mode)
   (id dma-tag-id :offset 28 :size 3)   ;; ID (what the tag means)
   (irq uint8     :offset 31 :size 1)  ;; interrupt at the end?
   (addr uint32   :offset 32 :size 31) ;; address (31 bits)
   (spr uint8     :offset 63 :size 1)    ;; spr or not flag.
   )
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )

(deftype dma-bucket (structure)
  ((tag   dma-tag  :offset-assert 0)     ;; the DMA tag to transfer the bucket's data
   (last  (pointer dma-tag)  :offset-assert 8)  ;; the last tag of this bucket.
   (dummy uint32  :offset-assert 12)     ;; empty space.
   (next  uint32  :offset 4)             ;; this overlaps with the addr bit-field of the dma-tag
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype vif-mask (uint32)
  ((m0  uint8 :offset 0  :size 2)
   (m1  uint8 :offset 2  :size 2)
   (m2  uint8 :offset 4  :size 2)
   (m3  uint8 :offset 6  :size 2)
   (m4  uint8 :offset 8  :size 2)
   (m5  uint8 :offset 10 :size 2)
   (m6  uint8 :offset 12 :size 2)
   (m7  uint8 :offset 14 :size 2)
   (m8  uint8 :offset 16 :size 2)
   (m9  uint8 :offset 18 :size 2)
   (m10 uint8 :offset 20 :size 2)
   (m11 uint8 :offset 22 :size 2)
   (m12 uint8 :offset 24 :size 2)
   (m13 uint8 :offset 26 :size 2)
   (m14 uint8 :offset 28 :size 2)
   (m15 uint8 :offset 30 :size 2)
   )
  :flag-assert #x900000004
  )

(deftype vif-stcycl-imm (uint16)
  ((cl  uint8 :offset 0 :size 8)
   (wl  uint8 :offset 8 :size 8)
   )
  :flag-assert #x900000002
  )

(deftype vif-unpack-imm (uint16)
  ((addr  uint16 :offset 0  :size 10)
   (usn   uint8  :offset 14 :size 1)
   (flg   uint8  :offset 15 :size 1)
   )
  :flag-assert #x900000002
  )

(deftype vif-tag (uint32)
  ((imm uint16  :offset 0 :size 16)
   (num uint8   :offset 16 :size 8)
   (cmd vif-cmd :offset 24 :size 7)
   (irq uint8   :offset 31 :size 1)
   (msk uint8   :offset 28 :size 1)
   )
  :method-count-assert 9
  :size-assert         #x4
  :flag-assert         #x900000004
  )

;; - Functions

(define-extern dma-sync-fast (function dma-bank none))
(define-extern dma-send-no-scratch (function dma-bank uint32 uint32 none))
(define-extern dma-sync-with-count (function dma-bank (pointer int32) int))
;
(define-extern dma-count-until-done (function dma-bank (pointer int32) int))

;; - Symbols

(define-extern uint16 type)


;; ----------------------
;; File - video-h
;; Source Path - engine/gfx/hw/video-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype video-parms (structure)
  ((set-video-mode              basic  :offset-assert 0)
   (reset-video-mode            basic  :offset-assert 4)
   (screen-sy                   int32  :offset-assert 8)
   (screen-hy                   int32  :offset-assert 12)
   (screen-miny                 int32  :offset-assert 16)
   (screen-maxy                 int32  :offset-assert 20)
   (screen-masky                int32  :offset-assert 24)
   (display-dx                  int32  :offset-assert 28)
   (display-dy                  int32  :offset-assert 32)
   (screen-pages-high           int32  :offset-assert 36)
   (_pad                        int64)
   (relative-x-scale            float  :offset-assert 48)
   (relative-y-scale            float  :offset-assert 52)
   (_pad2                       int64)
   (relative-x-scale-reciprical float  :offset-assert 64)
   (relative-y-scale-reciprical float  :offset-assert 68)
   )
  :method-count-assert 9
  :size-assert         #x48
  :flag-assert         #x900000048
  )

;; - Symbols

(define-extern *video-parms* video-parms)


;; ----------------------
;; File - vu1-user-h
;; Source Path - engine/gfx/hw/vu1-user-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype dma-foreground-sink (basic)
  ((bucket                   int32  :offset-assert 4)
   (foreground-texture-page  int8   :offset-assert 8)
   (foreground-texture-level int8   :offset-assert 9)
   (foreground-output-bucket int8   :offset-assert 10)
   )
  :method-count-assert 9
  :size-assert         #xb
  :flag-assert         #x90000000b
  )

(deftype generic-bucket-state (structure)
  ((gifbuf-adr uint32  :offset-assert 0)
   (inbuf-adr  uint32  :offset-assert 4)
   )
  :pack-me
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )

(deftype generic-dma-foreground-sink (dma-foreground-sink)
  ((state                    generic-bucket-state :inline :offset-assert 12)
   )
  :method-count-assert 9
  :size-assert         #x14
  :flag-assert         #x900000014
  )

(deftype dma-foreground-sink-group (basic)
  ((sink         dma-foreground-sink       3 :offset-assert 4)
   (merc-sink    dma-foreground-sink         :offset 4)
   (generic-sink generic-dma-foreground-sink :offset 8)
   (level        basic                       :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x14
  :flag-assert         #x900000014
  )

;; - Symbols

(define-extern *vu1-enable-user-menu* int)
(define-extern *vu1-enable-user* int)


;; ----------------------
;; File - dma
;; Source Path - engine/dma/dma.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern flush-cache (function int none))
(define-extern dma-sync (function pointer int int int))
(define-extern reset-path (function none))
(define-extern reset-graph (function int int int int none))
(define-extern dma-sync-hang (function dma-bank none))
(define-extern dma-sync-crash (function dma-bank none))
(define-extern dma-send (function dma-bank uint uint none))
(define-extern dma-send-chain (function dma-bank-source uint none))
(define-extern dma-send-chain-no-tte (function dma-bank-source uint none))
(define-extern dma-send-chain-no-flush (function dma-bank-source uint none))
(define-extern dma-send-to-spr (function uint uint uint symbol none))
(define-extern dma-send-to-spr-no-flush (function uint uint uint symbol none))
(define-extern dma-send-from-spr (function uint uint uint symbol none))
(define-extern dma-send-from-spr-no-flush (function uint uint uint symbol none))
(define-extern dma-initialize (function none))
(define-extern clear-vu0-mem (function none))
(define-extern clear-vu1-mem (function none))
(define-extern dump-vu1-mem (function none))
(define-extern dump-vu1-range (function uint uint symbol))
(define-extern reset-vif1-path (function none))
(define-extern ultimate-memcpy (function pointer pointer uint none))
(define-extern symlink2 (function none))
(define-extern symlink3 (function none))

;; - Symbols

(define-extern *video-reset-parm* int)


;; ----------------------
;; File - dma-buffer
;; Source Path - engine/dma/dma-buffer.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype dma-packet (structure)
  ((dma  dma-tag   :offset-assert 0)
   (vif0 vif-tag   :offset-assert 8)
   (vif1 vif-tag   :offset-assert 12)
   (quad uint128  :offset 0)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype dma-packet-array (inline-array-class)
  ()
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

;; change this type when you want the decompiler to output nice gif-tags,
;; change it back when you're done or other stuff breaks.
;; ND did something REALLY strange with these and now we have to suffer from it
(deftype dma-gif-packet (structure)
  ((dma-vif dma-packet :inline :offset-assert 0)
   (gif     uint64    2       :offset-assert 16) ;; guess
   (quad    uint128    2       :offset 0)
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

(deftype dma-buffer (basic)
  ((allocated-length int32     :offset-assert 4)
   (base             pointer   :offset-assert 8)
   (end              pointer    :offset-assert 12)
   (data             uint64 1 :offset-assert 16) ;; weird, I guess this aligns the data?
   (data-buffer      uint8 :dynamic :offset 16)
   )
  (:methods
   (new (symbol type int) _type_  0)
   )
  :method-count-assert 9
  :size-assert         #x18
  :flag-assert         #x900000018
  )

;; - Functions

(define-extern dma-buffer-length (function dma-buffer int))
(define-extern dma-buffer-inplace-new (function dma-buffer int dma-buffer))
(define-extern dma-buffer-free (function dma-buffer int))
(define-extern dma-buffer-add-vu-function (function dma-buffer vu-function int symbol))
(define-extern dma-buffer-send (function dma-bank dma-buffer none))
(define-extern dma-buffer-send-chain (function dma-bank-source dma-buffer none))


;; ----------------------
;; File - dma-bucket
;; Source Path - engine/dma/dma-bucket.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern dma-buffer-add-buckets (function dma-buffer int none))
(define-extern dma-buffer-patch-buckets (function dma-bucket int dma-bucket))
(define-extern dma-bucket-insert-tag (function dma-bucket bucket-id pointer (pointer dma-tag) pointer))


;; ----------------------
;; File - dma-disasm
;; Source Path - engine/dma/dma-disasm.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype vif-disasm-element (structure)
  ((mask    uint32   :offset-assert 0)
   (tag     vif-cmd-32  :offset-assert 4)
   (val     uint32   :offset-assert 8)
   (print   uint32   :offset-assert 12)
   (string1 string   :offset-assert 16)
   (string2 string   :offset-assert 20)
   )
  :method-count-assert 9
  :size-assert         #x18
  :flag-assert         #x900000018
  )

;; - Functions

(define-extern disasm-dma-tag (function dma-tag symbol none))
(define-extern disasm-vif-tag (function (pointer vif-tag) int symbol symbol int))
(define-extern disasm-vif-details (function symbol (pointer uint8) vif-cmd int symbol))
(define-extern disasm-dma-list (function dma-packet symbol symbol symbol int symbol))

;; - Symbols

(define-extern *vif-disasm-table* (array vif-disasm-element)) ;; unknown type
(define-extern *dma-disasm* symbol)


;; ----------------------
;; File - pad
;; Source Path - engine/ps2/pad.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype hw-cpad (basic)
  ((valid   uint8       :offset-assert 4)
   (status  uint8       :offset-assert 5)
   (button0 uint16      :offset-assert 6)
   (rightx  uint8       :offset-assert 8)
   (righty  uint8       :offset-assert 9)
   (leftx   uint8       :offset-assert 10)
   (lefty   uint8       :offset-assert 11)
   (abutton uint8 12    :offset-assert 12)
   (dummy   uint8 12    :offset-assert 24)
   )
  :method-count-assert 9
  :size-assert         #x24
  :flag-assert         #x900000024
  )

(deftype cpad-info (hw-cpad)
  ((number             int32      :offset-assert 36)
   (cpad-file          int32      :offset-assert 40)
   (button0-abs        pad-buttons 3  :offset-assert 44) ;; guess
   (button0-shadow-abs pad-buttons 1  :offset-assert 56) ;; guess
   (button0-rel        pad-buttons 3  :offset-assert 60) ;; guess
   (stick0-dir         float      :offset-assert 72)
   (stick0-speed       float      :offset-assert 76)
   (new-pad            int32      :offset-assert 80)
   (state              int32      :offset-assert 84)
   (align              uint8 6  :offset-assert 88)
   (direct             uint8 6  :offset-assert 94)
   (buzz-val           uint8 2  :offset-assert 100)
   (buzz-time          uint64 2  :offset-assert 104)
   (buzz               basic      :offset-assert 120)
   (buzz-act           int32      :offset-assert 124)
   (change-time        uint64     :offset-assert 128)
   )
  (:methods
    (new (symbol type int) _type_ 0)
    )
  :method-count-assert 9
  :size-assert         #x88
  :flag-assert         #x900000088
  )

(deftype cpad-list (basic)
  ((num-cpads int32     :offset-assert 4)
   (cpads     cpad-info 2 :offset-assert 8) ;; guess
   )
  (:methods
    (new (symbol type) _type_ 0))
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

;; - Functions

(define-extern cpad-set-buzz! (function cpad-info int int int none))
(define-extern cpad-get-data (function cpad-info cpad-info))
(define-extern get-current-time (function uint))
(define-extern get-integral-current-time (function uint))
(define-extern cpad-invalid! (function cpad-info cpad-info))
;; in the kernel.
(define-extern cpad-open (function cpad-info int cpad-info))
(define-extern analog-input (function int float float float float float))
(define-extern service-cpads (function cpad-list))
(define-extern buzz-stop! (function int none))

;; - Symbols

(define-extern *cpad-list* cpad-list)
(define-extern *cpad-debug* symbol)
(define-extern *cheat-mode* symbol) ;; bool


;; ----------------------
;; File - gs
;; Source Path - engine/gfx/hw/gs.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype gs-pmode (uint64)
  ((en1    uint8 :offset 0 :size 1)
   (en2    uint8 :offset 1 :size 1)
   (crtmd  uint8 :offset 2 :size 3)
   (mmod   uint8 :offset 5 :size 1)
   (amod   uint8 :offset 6 :size 1)
   (slbg   uint8 :offset 7 :size 1)
   (alp    uint8 :offset 8 :size 8)
   )
  :flag-assert #x900000008
  )

(deftype gs-smode2 (uint64)
  ((int   uint8 :offset 0 :size 1)
   (ffmd  uint8 :offset 1 :size 1)
   (dpms  uint8 :offset 2 :size 2)
   )
  :flag-assert #x900000008
  )

(deftype gs-display-fb (uint64)
  ((fbp  uint16 :offset 0  :size 9)
   (fbw  uint8  :offset 9  :size 6)
   (psm  gs-psm :offset 15 :size 5)
   (dbx  uint16 :offset 32 :size 11)
   (dby  uint16 :offset 43 :size 11)
   )
  :flag-assert #x900000008
  )

;; the GS's DISPLAY registers make settings for the display position on the screen regarding
;; information on Rectangular Area Read Output Circuit n for the PCRTC.
;; write-only
(deftype gs-display (uint64)
  ((dx    uint16 :offset 0  :size 12)
   (dy    uint16 :offset 12 :size 11)
   (magh  uint8  :offset 23 :size 4)
   (magv  uint8  :offset 27 :size 2)
   (dw    uint16 :offset 32 :size 12)
   (dh    uint16 :offset 44 :size 11)
   )
  :flag-assert #x900000008
  )

;; the GS's BGCOLOR register sets the background color of the PCRTC with RGB value.
;; write-only
(deftype gs-bgcolor (uint64)
  ((r  uint8 :offset 0)
   (g  uint8 :offset 8)
   (b  uint8 :offset 16)
   )
  :flag-assert #x900000008
  )

;; the GS's CSR register sets and obtains various GS statuses.
;; read-write. the fields have different effects depending on whether they're being read from
;; or written to.
;; bits 5 and 6 (0x20 and 0x40) should be zero
(deftype gs-csr (uint64)
  ((signal  uint8 :offset 0  :size 1)
   (finish  uint8 :offset 1  :size 1)
   (hsint   uint8 :offset 2  :size 1)
   (vsint   uint8 :offset 3  :size 1)
   (edwint  uint8 :offset 4  :size 1)
   (flush   uint8 :offset 8  :size 1)
   (reset   uint8 :offset 9  :size 1)
   (nfield  uint8 :offset 12 :size 1)
   (field   uint8 :offset 13 :size 1)
   (fifo    uint8 :offset 14 :size 2)
   (rev     uint8 :offset 16 :size 8)
   (id      uint8 :offset 24 :size 8)
   )
  :flag-assert #x900000008
  )

;; memory layout of the GS's privileged registers
;; it is missing the SIGLBLID/LABELID register at 4224 (useless anyway?)
(deftype gs-bank (structure)
  ((pmode    gs-pmode  :offset-assert 0)
   (smode2   gs-smode2  :offset 32)
   (dspfb1   gs-display-fb  :offset 112)
   (display1 gs-display  :offset 128)
   (dspfb2   gs-display-fb  :offset 144)
   (display2 gs-display  :offset 160)
   (extbuf   uint64  :offset 176)
   (extdata  uint64  :offset 192)
   (extwrite uint64  :offset 208)
   (bgcolor  gs-bgcolor  :offset 224)
   (csr      gs-csr   :offset 4096)
   (imr      uint64  :offset 4112)
   (busdir   uint64  :offset 4160)
   )
  :method-count-assert 9
  :size-assert         #x1048
  :flag-assert         #x900001048
  )

;; the GS's FRAME registers store various settings related to the frame buffer.
(deftype gs-frame (uint64)
  ((fbp    uint16 :offset 0  :size 9)
   (fbw    uint8  :offset 16 :size 6)
   (psm    uint8  :offset 24 :size 6)
   (fbmsk  uint32 :offset 32 :size 32)
   )
  :flag-assert #x900000008
  )

;; the GS's ZBUF registers make various settings regarding Z buffer.
(deftype gs-zbuf (uint64)
  ((zbp   uint16 :offset 0  :size 9)
   (psm   uint8  :offset 24 :size 4)
   (zmsk  uint8  :offset 32 :size 1)
   )
  :flag-assert #x900000008
  )

;; the GS's XYOFFSET registers set the offset value for converting from the primitive coordinate
;; system to the window coordinate system.
(deftype gs-xy-offset (uint64)
  ((ofx  uint16 :offset 0  :size 16)
   (ofy  uint16 :offset 32 :size 16)
   )
  :flag-assert #x900000008
  )

;; the GS's SCISSOR registers specify the scissoring area.  The coordinate values for
;; the upper-left/lower-right points of the enabled drawing area are specified by the window
;; coordinate system.
(deftype gs-scissor (uint64)
  ((scax0  uint16 :offset 0  :size 11)
   (scax1  uint16 :offset 16 :size 11)
   (scay0  uint16 :offset 32 :size 11)
   (scay1  uint16 :offset 48 :size 11)
   )
  :flag-assert #x900000008
  )

;; the GS's PRMODECONT register sets whether to use primitive attributes (IIP, TME, FGE, ABE,
;; AA1, FST, CTXT, FIX) specified by the PRMODE register or the PRIM register.
(deftype gs-prmode-cont (uint64)
  ((ac  uint8 :offset 0 :size 1))
  :flag-assert #x900000008
  )

;; the GS's COLCLAMP register stores settings as to whether clamping for the RGB value of the
;; pixel is performed.
(deftype gs-color-clamp (uint64)
  ((clamp  uint8 :offset 0 :size 1))
  :flag-assert #x900000008
  )

;; the GS's DTHE register stores settings for dithering (performed/not performed).
(deftype gs-dthe (uint64)
  ((dthe  uint8 :offset 0 :size 1))
  :flag-assert #x900000008
  )

;; the GS's TEST register performs settings related to the pixel test.
(deftype gs-test (uint64)
  ((ate    uint8 :offset 0  :size 1) ;; alpha test enable
   (atst   uint8 :offset 1  :size 3) ;; alpha test method
   (aref   uint8 :offset 4  :size 8) ;; alpha val reference
   (afail  uint8 :offset 12 :size 2) ;; processing method on alpha test fail
   (date   uint8 :offset 14 :size 1) ;; dest alpha test enable
   (datm   uint8 :offset 15 :size 1) ;; dest alpha test mode
   (zte    uint8 :offset 16 :size 1) ;; depth test enable
   (ztst   uint8 :offset 17 :size 2) ;; depth test method
   )
  :flag-assert #x900000008
  )

(deftype gs-prim (uint64)
  ((prim  gs-prim-type :offset 0  :size 3)
   (iip   uint8        :offset 3  :size 1)
   (tme   uint8        :offset 4  :size 1)
   (fge   uint8        :offset 5  :size 1)
   (abe   uint8        :offset 6  :size 1)
   (aa1   uint8        :offset 7  :size 1)
   (fst   uint8        :offset 8  :size 1)
   (ctxt  uint8        :offset 9  :size 1)
   (fix   uint8        :offset 10 :size 1)
   )
  :flag-assert #x900000008
  )

;; gap!
;; the GS's RGBAQ register sets the RGBA value of the vertex and the Q value of the normalized
;; texture coordinates.
(deftype gs-rgbaq (uint64)
  ((r  uint8 :offset 0  :size 8)
   (g  uint8 :offset 8  :size 8)
   (b  uint8 :offset 16 :size 8)
   (a  uint8 :offset 24 :size 8) ;; 0x80 --> 1.0
   (q  float :offset 32 :size 32) ;; affects some LOD behavior apparently?
   )
  :flag-assert #x900000008
  )

;; GS XYZ registers
(deftype gs-xyz (uint64)
  ((x  uint16 :offset 0  :size 16) ;; Q4 fixed point
   (y  uint16 :offset 16 :size 16) ;; Q4 fixed point
   (z  uint32 :offset 32 :size 32)
   )
  :flag-assert #x900000008
  )

;; the GS's UV register specifies the texel coordinate (UV) values of the vertex.
(deftype gs-uv (uint64)
  ((u  uint16 :offset 0  :size 14) ;; Q4 fixed point
   (v  uint16 :offset 16 :size 14) ;; Q4 fixed point
   )
  :flag-assert #x900000008
  )

;; the GS's ST register sets the S and T values of the vertex texture coordinates.
;; The value Q is specified by the RGBAQ register.
(deftype gs-st (uint64)
  ((s  float :offset 0  :size 32)
   (t  float :offset 32 :size 32)
   )
  :flag-assert #x900000008
  )

;; GS XYZF registers
(deftype gs-xyzf (uint64)
  ((x  uint16 :offset 0  :size 16) ;; Q4 fixed point
   (y  uint16 :offset 16 :size 16) ;; Q4 fixed point
   (z  uint32 :offset 32 :size 24)
   (f  uint8  :offset 56 :size 8) ;; fog coeff
   )
  :flag-assert #x900000008
  )

;; the GS's TRXPOS register specifies the position and scanning direction of the rectangular area
;; in each buffer where buffer transmission is performed.
(deftype gs-trxpos (uint64)
  ((ssax  uint16 :offset 0  :size 11)
   (ssay  uint16 :offset 16 :size 11)
   (dsax  uint16 :offset 32 :size 11)
   (dsay  uint16 :offset 48 :size 11)
   (dir   uint8 :offset 59 :size 2)
   )
  :flag-assert #x900000008
  )

;; the GS's TRXREG register specifies the size of the rectangular area, where the transmission
;; between buffers is implemented, in units of pixels.
;; The pixel mode must be the one set by the BITBLTBUF register.
(deftype gs-trxreg (uint64)
  ((rrw  uint16 :offset 0  :size 12)
   (rrh  uint16 :offset 32 :size 12)
   )
  :flag-assert #x900000008
  )

;; the GS's TRXDIR register specifies the transmission direction in the transmission between
;; buffers, and activates transmission.
;; Appropriate settings must be made by the BITBLTBUF/TRXPOS/TRXREG before activating
;; the transmission.
(deftype gs-trxdir (uint64)
  ((xdir  uint8 :offset 0 :size 2))
  :flag-assert #x900000008
  )

;; the GS's BITBLTBUF register stores buffer-related settings for transmission source and
;; destination during transmission between buffers.
(deftype gs-bitbltbuf (uint64)
  ((sbp   uint16 :offset 0  :size 14)
   (sbw   uint8  :offset 16 :size 6)
   (spsm  uint8  :offset 24 :size 6)
   (dbp   uint16 :offset 32 :size 14)
   (dbw   uint8  :offset 48 :size 6)
   (dpsm  uint8  :offset 56 :size 6)
   )
  :flag-assert #x900000008
  )

;; the GS's TEX0 registers set various kinds of information regarding the textures to be used.
(deftype gs-tex0 (uint64)
  ((tbp0  uint16 :offset 0 :size 14)
   (tbw   uint8  :offset 14 :size 6)
   (psm   uint8  :offset 20 :size 6)
   (tw    uint8  :offset 26 :size 4)
   (th    uint8  :offset 30 :size 4)
   (tcc   uint8  :offset 34 :size 1)
   (tfx   uint8  :offset 35 :size 2)
   (cbp   uint16 :offset 37 :size 14)
   (cpsm  uint8  :offset 51 :size 4)
   (csm   uint8  :offset 55 :size 1)
   (csa   uint8  :offset 56 :size 5)
   (cld   uint8  :offset 61 :size 3)
   )
  :flag-assert #x900000008
  )

;; the GS's TEX1 registers set information on the sampling method of the textures.
(deftype gs-tex1 (uint64)
  ((lcm   uint8 :offset 0  :size 1)
   (mxl   uint8 :offset 2  :size 3)
   (mmag  uint8 :offset 5  :size 1)
   (mmin  uint8 :offset 6  :size 3)
   (mtba  uint8 :offset 9  :size 1)
   (l     uint8 :offset 19 :size 2)
   (k     int16 :offset 32 :size 12)
   )
  :flag-assert #x900000008
  )

;; the GS's TEXA register sets the Alpha value to be referred to when the Alpha value of the
;; texture is not an 8-bit value.
(deftype gs-texa (uint64)
  ((ta0  uint8 :offset 0  :size 8)
   (aem  uint8 :offset 15 :size 1)
   (ta1  uint8 :offset 32 :size 8)
   )
  :flag-assert #x900000008
  )

;; the GS's TEXCLUT register specifies the CLUT position in the buffer when the CLUT storage mode
;; is CSM=1 (CSM2 mode).
(deftype gs-texclut (uint64)
  ((cbw  uint8  :offset 0  :size 6)
   (cou  uint8  :offset 6  :size 6)
   (cov  uint16 :offset 12 :size 10)
   )
  :flag-assert #x900000008
  )

;; the GS's MIPTBP registers set the buffer pointer and buffer width of textures when performing
;; MIPMAP.
;; MIPTBP1 sets levels 1 to 3, MIPTBP2 sets levels 4 to 6.
(deftype gs-miptbp (uint64)
  ((tbp1  uint16 :offset 0  :size 14)
   (tbw1  uint8  :offset 14 :size 6)
   (tbp2  uint16 :offset 20 :size 14)
   (tbw2  uint8  :offset 34 :size 6)
   (tbp3  uint16 :offset 40 :size 14)
   (tbw3  uint8  :offset 54 :size 6)
   )
  :flag-assert #x900000008
  )

;; the GS's ALPHA registers define the blend function of alpha blending
(deftype gs-alpha (uint64)
  ((a    uint8 :offset 0  :size 2)
   (b    uint8 :offset 2  :size 2)
   (c    uint8 :offset 4  :size 2)
   (d    uint8 :offset 6  :size 2)
   (fix  uint8 :offset 32 :size 8)
   )
  :flag-assert #x900000008
  )

(deftype gs-clamp (uint64)
  ((wms   uint8  :offset 0  :size 2)
   (wmt   uint8  :offset 2  :size 2)
   (minu  uint16 :offset 4  :size 10)
   (maxu  uint16 :offset 14 :size 10)
   (minv  uint16 :offset 24 :size 10)
   (maxv  uint16 :offset 34 :size 10)
   )
  :flag-assert #x900000008
  )

(deftype gs-fog (uint64)
  ((f  uint8 :offset 56 :size 8))
  :flag-assert #x900000008
  )

(deftype gs-fogcol (uint64)
  ((fcr  uint8 :offset 0  :size 8)
   (fcg  uint8 :offset 8  :size 8)
   (fcb  uint8 :offset 16 :size 8)
   )
  :flag-assert #x900000008
  )

(deftype gif-ctrl (uint32)
  ((rst  uint8 :offset 0 :size 1)
   (pse  uint8 :offset 3 :size 1)
   )
  :flag-assert #x900000004
  )

(deftype gif-mode (uint32)
  ((m3r  uint8 :offset 0 :size 1)
   (imt  uint8 :offset 2 :size 1)
   )
  :flag-assert #x900000004
  )

(deftype gif-stat (uint32)
  ((m3r    uint8 :offset 0  :size 1)
   (m3p    uint8 :offset 1  :size 1)
   (imt    uint8 :offset 2  :size 1)
   (pse    uint8 :offset 3  :size 1)
   (ip3    uint8 :offset 5  :size 1)
   (p3q    uint8 :offset 6  :size 1)
   (p2q    uint8 :offset 7  :size 1)
   (p1q    uint8 :offset 8  :size 1)
   (oph    uint8 :offset 9  :size 1)
   (apath  uint8 :offset 10 :size 2)
   (dir    uint8 :offset 12 :size 1)
   (fqc    uint8 :offset 24 :size 5)
   )
  :flag-assert #x900000004
  )

(deftype gif-cnt (uint32)
  ((loopcnt  uint16 :offset 0  :size 15)
   (regcnt   uint8  :offset 16 :size 4)
   (vuaddr   uint16 :offset 20 :size 10)
   )
  :flag-assert #x900000004
  )

(deftype gif-p3cnt (uint32)
  ((p3cnt  uint16 :offset 0 :size 15))
  :flag-assert #x900000004
  )

(deftype gif-p3tag (uint32)
  ((loopcnt  uint16 :offset 0  :size 15)
   (eop      uint8  :offset 15 :size 1)
   )
  :flag-assert #x900000004
  )

(deftype gif-bank (structure)
  ((ctrl  gif-ctrl  :offset 0)
   (mode  gif-mode  :offset 16)
   (stat  gif-stat  :offset 32)
   (tag0  uint32  :offset 64)
   (tag1  uint32  :offset 80)
   (tag2  uint32  :offset 96)
   (tag3  uint32  :offset 112)
   (cnt   gif-cnt  :offset 128)
   (p3cnt gif-p3cnt  :offset 144)
   (p3tag gif-p3tag  :offset 160)
   )
  :method-count-assert 9
  :size-assert         #xa4
  :flag-assert         #x9000000a4
  )

(deftype gif-tag-prim (uint32)
  ()
  :flag-assert #x900000004
  )

(deftype gif-tag-count (uint32)
  ()
  :flag-assert #x900000004
  )

(deftype gif-tag64 (uint64)
  ((nloop   uint16  :offset 0   :size 15)
   (eop     uint8   :offset 15  :size 1)
   (id      uint16  :offset 32  :size 14)
   (pre     uint8   :offset 46  :size 1)
   (prim    gs-prim :offset 47  :size 11)
   (flg     uint8   :offset 58  :size 2)
   (nreg    uint8   :offset 60  :size 4))
  :flag-assert #x900000008
  )

(deftype gif-tag (uint128)
  ((nloop   uint16 :offset 0   :size 15)
   (eop     uint8  :offset 15  :size 1)
   (id      uint16 :offset 32  :size 14)
   (pre     uint8  :offset 46  :size 1)
   (prim    uint16 :offset 47  :size 11)
   (flg     uint8  :offset 58  :size 2)
   (nreg    uint8  :offset 60  :size 4)
   (regs0   uint8 :offset 64  :size 4)
   (regs1   uint8 :offset 68  :size 4)
   (regs2   uint8 :offset 72  :size 4)
   (regs3   uint8 :offset 76  :size 4)
   (regs4   uint8 :offset 80  :size 4)
   (regs5   uint8 :offset 84  :size 4)
   (regs6   uint8 :offset 88  :size 4)
   (regs7   uint8 :offset 92  :size 4)
   (regs8   uint8 :offset 96  :size 4)
   (regs9   uint8 :offset 100 :size 4)
   (regs10  uint8 :offset 104 :size 4)
   (regs11  uint8 :offset 108 :size 4)
   (regs12  uint8 :offset 112 :size 4)
   (regs13  uint8 :offset 116 :size 4)
   (regs14  uint8 :offset 120 :size 4)
   (regs15  uint8 :offset 124 :size 4)
   )
  :flag-assert #x900000010
  )

(deftype gs-gif-tag (structure)
  ((qword uint128   :offset-assert 0) ;; is "qword" and inline? in game

   (tag   gif-tag64    :offset 0)
   (regs  gif-tag-regs :offset 8)

   (dword uint64 2     :offset 0)
   (word  uint32 4     :offset 0)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype gif-packet (basic)
  ((reg-count int32     :offset-assert 4)

   (gif-tag   gs-gif-tag :inline :offset-assert 16) ;; note- added
   (gif-tag0  uint128   :offset 16)
   (args      uint64 1 :offset-assert 32)
   )
  (:methods
    (new (symbol type int) _type_ 0)
    )
  :method-count-assert 9
  :size-assert         #x28
  :flag-assert         #x900000028
  )

(deftype draw-context (basic)
  ((orgx   int32     :offset-assert 4)
   (orgy   int32     :offset-assert 8)
   (orgz   int32     :offset-assert 12)
   (width  int32     :offset-assert 16)
   (height int32     :offset-assert 20)
   (color  rgba    4 :offset-assert 24)
   )
  (:methods
    (new (symbol type int int int int rgba) _type_ 0)
    )
  :method-count-assert 9
  :size-assert         #x28
  :flag-assert         #x900000028
  )

;; - Functions

(define-extern psm-size (function gs-psm int))
(define-extern psm-page-height (function gs-psm int))
(define-extern psm->string (function gs-psm string))
(define-extern default-buffer-init (function dma-buffer none))
(define-extern open-gif-packet (function gif-packet gif-packet))
(define-extern add-reg-gif-packet (function gif-packet int int none))
(define-extern close-gif-packet (function gif-packet int gif-packet))
(define-extern draw-context-set-xy (function draw-context int int none))

;; - Symbols

(define-extern *fog-color* int)
(define-extern *default-regs-buffer* dma-buffer)


;; ----------------------
;; File - display-h
;; Source Path - engine/gfx/hw/display-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype display-env (structure)
  ((pmode   gs-pmode      :offset-assert 0)
   (smode2  gs-smode2     :offset-assert 8)
   (dspfb   gs-display-fb :offset-assert 16)
   (display gs-display    :offset-assert 24)
   (bgcolor gs-bgcolor    :offset-assert 32)
   )
  :pack-me
  :method-count-assert 9
  :size-assert         #x28
  :flag-assert         #x900000028
  )

;; the "addr" fields represent GS register addresses
(deftype draw-env (structure)
  ((frame1         gs-frame        :offset-assert 0)
   (frame1addr     gs-reg64        :offset-assert 8)
   (zbuf1          gs-zbuf         :offset-assert 16)
   (zbuf1addr      gs-reg64        :offset-assert 24)
   (xyoffset1      gs-xy-offset    :offset-assert 32)
   (xyoffset1addr  gs-reg64        :offset-assert 40)
   (scissor1       gs-scissor      :offset-assert 48)
   (scissor1addr   gs-reg64        :offset-assert 56)
   (prmodecont     gs-prmode-cont  :offset-assert 64)
   (prmodecontaddr gs-reg64        :offset-assert 72)
   (colclamp       gs-color-clamp  :offset-assert 80)
   (colclampaddr   gs-reg64        :offset-assert 88)
   (dthe           gs-dthe         :offset-assert 96)
   (dtheaddr       gs-reg64        :offset-assert 104)
   (test1          gs-test         :offset-assert 112)
   (test1addr      gs-reg64        :offset-assert 120)
   )
  :method-count-assert 9
  :size-assert         #x80
  :flag-assert         #x900000080
  )

(deftype display-frame (basic)
  ((calc-buf     dma-buffer    :offset 8)
   (vu1-buf      dma-buffer    :offset 8)
   (debug-buf    dma-buffer    :offset 36)
   (global-buf   dma-buffer    :offset 40)
   (bucket-group dma-bucket    :offset 44)
   (buffer       uint32    11  :offset 4) ;; for debugging?


   (profile-bar  profile-bar 2 :offset 48)
   (run-time     uint64        :offset 56)
   )
  (:methods
   (new (symbol type) _type_ 0)
   )
  :method-count-assert 9
  :size-assert         #x40
  :flag-assert         #x900000040
  )

(deftype virtual-frame (structure)
  ((display      display-env    :offset-assert 0)
   (display-last display-env    :offset-assert 4)
   (gif          pointer        :offset-assert 8)
   (draw         draw-env       :offset-assert 12)
   (frame        display-frame  :offset-assert 16)
   )
  :allow-misaligned
  :method-count-assert 9
  :size-assert         #x14
  :flag-assert         #x900000014
  )

(deftype display (basic)
  ((display-env0                    display-env :inline :offset-assert 8)
   (display-env1                    display-env :inline :offset-assert 48)
   (display-env2                    display-env :inline :offset-assert 88)
   (gif-tag0                        gs-gif-tag  :inline :offset-assert 128)
   (draw0                           draw-env    :inline :offset-assert 144)
   (gif-tag1                        gs-gif-tag  :inline :offset-assert 272)
   (draw1                           draw-env    :inline :offset-assert 288)
   (gif-tag2                        gs-gif-tag  :inline :offset-assert 416)
   (draw2                           draw-env    :inline :offset-assert 432)
   (on-screen                       int32               :offset-assert 560)
   (last-screen                     int32               :offset-assert 564)
   (frames                          virtual-frame 6 :inline :offset-assert 568)
   (bg-clear-color                  rgba         4      :offset-assert 760)
   (real-frame-counter              uint64              :offset-assert 776)
   (base-frame-counter              uint64              :offset-assert 784)
   (game-frame-counter              uint64              :offset-assert 792)
   (integral-frame-counter          uint64              :offset-assert 800)
   (real-integral-frame-counter     uint64              :offset-assert 808)
   (actual-frame-counter            uint64              :offset-assert 816)
   (real-actual-frame-counter       uint64              :offset-assert 824)
   (part-frame-counter              uint64              :offset-assert 832)
   (old-real-frame-counter          uint64              :offset-assert 840)
   (old-base-frame-counter          uint64              :offset-assert 848)
   (old-game-frame-counter          uint64              :offset-assert 856)
   (old-integral-frame-counter      uint64              :offset-assert 864)
   (old-real-integral-frame-counter uint64              :offset-assert 872)
   (old-actual-frame-counter        uint64              :offset-assert 880)
   (old-real-actual-frame-counter   uint64              :offset-assert 888)
   (old-part-frame-counter          uint64              :offset-assert 896)
   (time-ratio                      float               :offset-assert 904)
   (seconds-per-frame               float               :offset-assert 908)
   (frames-per-second               float               :offset-assert 912)
   (time-factor                     float               :offset-assert 916)
   (time-adjust-ratio               float               :offset-assert 920)
   )
  :method-count-assert 10
  :size-assert         #x39c
  :flag-assert         #xa0000039c
  (:methods
   (new (symbol type int int int int int) _type_ 0)
   (set-time-ratios (_type_ float) float 9)
   )
  )

;; - Functions

(define-extern set-display (function display int int int int int display))
(define-extern put-draw-env (function (pointer gif-tag) none))
(define-extern *pre-draw-hook* (function none)) ;; unknown type
(define-extern *post-draw-hook* (function dma-buffer none)) ;; unknown type


;; ----------------------
;; File - vector
;; Source Path - engine/math/vector.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern vector+float! (function vector vector float vector))
(define-extern vector*! (function vector vector vector vector))
(define-extern vector+*! (function vector vector vector float vector))
(define-extern vector-*! (function vector vector vector float vector))
(define-extern vector/! (function vector vector vector vector))
(define-extern vector-average! (function vector vector vector vector))
(define-extern vector--float*! (function vector vector vector float vector))
(define-extern vector-float/! (function vector vector float vector))
(define-extern vector-negate-in-place! (function vector vector))
(define-extern vector= (function vector vector symbol))
(define-extern vector-delta (function vector vector float))
(define-extern vector-seek! (function vector vector float vector))
(define-extern vector-seek-2d-xz-smooth! (function vector vector float float vector))
(define-extern vector-seek-2d-yz-smooth! (function vector vector float float vector))
(define-extern vector-seek-3d-smooth! (function vector vector float float vector))
(define-extern seek-with-smooth (function float float float float float float))
(define-extern vector-seconds (function vector vector vector))
(define-extern vector-seconds! (function vector vector))
(define-extern vector-v! (function vector vector))
(define-extern vector-v+! (function vector vector vector vector))
(define-extern vector-v*float+! (function vector vector vector float vector))
(define-extern vector-v++! (function vector vector vector))
(define-extern vector-v*float! (function vector vector float vector))
(define-extern vector-v*float++! (function vector vector float vector))
(define-extern vector-to-ups! (function vector vector vector))
(define-extern vector-from-ups! (function vector vector vector))
(define-extern vector-length-squared (function vector float))
(define-extern vector-xz-length-squared (function vector float))
(define-extern vector-vector-xz-distance (function vector vector float))
(define-extern vector-vector-xz-distance-squared (function vector vector float))
(define-extern vector-length-max! (function vector float vector))
(define-extern vector-xz-length-max! (function vector float vector))
(define-extern vector-rotate-around-y! (function vector vector float vector))
(define-extern rotate-y<-vector+vector (function vector vector float))
(define-extern vector-cvt.w.s! (function vector vector vector))
(define-extern vector-cvt.s.w! (function vector vector vector))
(define-extern rot-zxy-from-vector! (function vector vector vector))
(define-extern rot-zyx-from-vector! (function vector vector vector))
(define-extern vector-lerp! (function vector vector vector float vector))
(define-extern vector-lerp-clamp! (function vector vector vector float vector))
(define-extern vector4-lerp! (function vector vector vector float vector))
(define-extern vector4-lerp-clamp! (function vector vector vector float vector))
(define-extern vector-degi (function vector vector vector))
(define-extern vector-degf (function vector vector vector))
(define-extern vector-degmod (function vector vector vector))
(define-extern vector-deg-diff (function vector vector vector none))
(define-extern vector-deg-lerp-clamp! (function vector vector vector float vector)) ;; todo
(define-extern vector3s-copy! (function vector vector vector))
(define-extern vector3s+! (function vector vector vector vector))
(define-extern vector3s*float! (function vector vector float vector))
(define-extern vector3s-! (function vector vector vector vector))
(define-extern spheres-overlap? (function sphere sphere symbol))
(define-extern sphere<-vector! (function sphere vector sphere))
(define-extern sphere<-vector+r! (function sphere vector float sphere))
(define-extern rand-vu-sphere-point! (function vector float vector)) ;; todo

;; - Symbols

(define-extern *display* display)


;; ----------------------
;; File - file-io
;; Source Path - engine/load/file-io.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype file-stream (basic)
  ((flags uint32  :offset-assert 4)
   (mode  basic   :offset-assert 8)
   (name  string  :offset-assert 12)
   (file  uint32  :offset-assert 16)
   )
  (:methods
    (new (symbol type string basic) _type_)
    )
  :method-count-assert 9
  :size-assert         #x14
  :flag-assert         #x900000014
  )

(deftype file-info (basic)
  ((file-type      symbol  :offset-assert 4)
   (file-name      basic   :offset-assert 8)
   (major-version  uint32  :offset-assert 12)
   (minor-version  uint32  :offset-assert 16)
   (maya-file-name basic   :offset-assert 20)
   (tool-debug     basic   :offset-assert 24)
   (mdb-file-name  basic   :offset-assert 28)
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

;; - Functions

(define-extern file-stream-read (function file-stream pointer int int))
(define-extern file-stream-open (function file-stream basic basic file-stream))
(define-extern file-stream-length (function file-stream int))
(define-extern file-stream-read-string (function file-stream string string))
(define-extern make-file-name (function file-kind string int symbol string))
(define-extern make-vfile-name (function file-kind string string))
(define-extern file-info-correct-version? (function file-info file-kind int symbol))

;; - Symbols

(define-extern *file-temp-string* string)


;; ----------------------
;; File - loader-h
;; Source Path - engine/load/loader-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(declare-type art-group basic)
;; custom fields
(deftype load-dir (basic)
  ((unknown basic :offset-assert 4)
   (string-array (array string) :offset-assert 8) ;; these are the names
   (data-array (array basic) :score -50 :offset-assert 12) ;; this is the file data.
   )
  :flag-assert #xb00000010
  (:methods
    (new (symbol type int basic) _type_ 0)
    ;; these methods dont exist
    (dummy-9 (_type_ string symbol kheap int) art-group 9)
    (dummy-10 (_type_ art-group) art-group 10)
    )
  )

;; custom fields
(deftype load-dir-art-group (load-dir)
  ((art-group-array (array art-group) :offset 12)
   )
  :flag-assert #xb00000010
  (:methods
    (new (symbol type int basic) _type_ 0)
    (dummy-9 (_type_ string symbol kheap int) art-group 9)
    (dummy-10 (_type_ art-group) art-group 10)
    )
  )

(deftype external-art-buffer (basic)
  ((index                      int32          :offset-assert 4)
   (other                      external-art-buffer          :offset-assert 8)
   (status                     symbol         :offset-assert 12)
   (locked?                    symbol         :offset-assert 16)
   (frame-lock                 symbol         :offset-assert 20)
   (heap                       kheap  :inline :offset-assert 32)
   (pending-load-file          string         :offset-assert 48)
   (pending-load-file-part     int32          :offset-assert 52)
   (pending-load-file-owner    handle         :offset-assert 56)
   (pending-load-file-priority float          :offset-assert 64)
   (load-file                  string         :offset-assert 68)
   (load-file-part             int32          :offset-assert 72)
   (load-file-owner            handle         :offset-assert 80)
   (load-file-priority         float          :offset-assert 88)
   (buf                        pointer        :offset-assert 92)
   (len                        int32          :offset-assert 96)
   (art-group                  art-group      :offset-assert 100)
   )
  :method-count-assert 16
  :size-assert         #x68
  :flag-assert         #x1000000068
  (:methods
    (new (symbol type int) _type_ 0)
    (want-file (_type_ string int handle float) int 9)
    (update (_type_) int 10)
    (inactive? (_type_) symbol 11)
    (file-status (_type_ string int) symbol 12)
    (link-file (_type_ art-group) art-group 13)
    (unlink-file (_type_ art-group) int 14)
    (unlock! (_type_) symbol 15)
    )
  )

(deftype spool-anim (basic)
  ((name         string  :offset 16) ;; why?
   (buf1         external-art-buffer  :offset 16) ;; custom
   (buf2         external-art-buffer  :offset-assert 20) ;; custom (also what?)
   (index        int32   :offset 20)
   (parts        int32   :offset-assert 24)
   (priority     float   :offset-assert 28)
   (owner        handle  :offset-assert 32)
   (command-list pair    :offset-assert 40)
   )
  :pack-me
  :method-count-assert 9
  :size-assert         #x2c
  :flag-assert         #x90000002c
  )

(deftype external-art-control (basic)
  ((buffer               external-art-buffer    2       :offset-assert 4)
   (rec                  spool-anim 3 :inline :offset-assert 16)
   (spool-lock           handle             :offset-assert 160)
   (reserve-buffer       external-art-buffer  :offset-assert 168)
   (reserve-buffer-count int32              :offset-assert 172)
   (active-stream        string             :offset-assert 176)
   (preload-stream       spool-anim :inline :offset-assert 184)
   (last-preload-stream  spool-anim :inline :offset-assert 232)
   (end-pad uint32)
   )
  :method-count-assert 17
  :size-assert         #x118
  :flag-assert         #x1100000118
  (:methods
    (new (symbol type) _type_ 0)
    (update (_type_ symbol) int 9)
    (clear-rec (_type_) int 10)
    (spool-push (_type_ string int process float) int 11)
    (file-status (_type_ string int) symbol 12)
    (reserve-alloc (_type_) kheap 13)
    (reserve-free (_type_ kheap) int 14)
    (none-reserved? (_type_) symbol 15)
    (try-preload-stream (_type_ string int process float) int 16)
    )
  )


;; ----------------------
;; File - texture-h
;; Source Path - engine/gfx/texture-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype texture-id (uint32)
  ((index  uint16 :offset 8  :size 12)
   (page   uint16 :offset 20 :size 12)
   )
  :method-count-assert 9
  :size-assert         #x4
  :flag-assert         #x900000004
  )

(deftype texture-pool-segment (structure)
  ((dest uint32  :offset-assert 0)
   (size uint32  :offset-assert 4)
   )
  :pack-me
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )

(declare-type texture-page basic)
(declare-type level basic)
(deftype texture-pool (basic)
  ((top              int32                        :offset-assert 4)
   (cur              int32                        :offset-assert 8)
   (allocate-func    (function texture-pool texture-page kheap int texture-page)                        :offset-assert 12)
   (font-palette     int32                        :offset-assert 16) ;; vram word idx

   ;; these were reordered
   (segment-near     texture-pool-segment :inline :offset-assert 20)
   (segment-common   texture-pool-segment :inline :offset-assert 28)
   (segment          texture-pool-segment 4 :inline :offset 20)

   (common-page      texture-page              32      :offset-assert 52)
   (common-page-mask int32                        :offset-assert 180)
   (ids              uint32              126     :offset-assert 184)
   )
  :method-count-assert 23
  :size-assert         #x2b0
  :flag-assert         #x17000002b0
  (:methods
    (new (symbol type) _type_ 0)
    (initialize! (_type_) _type_ 9)
    (print-usage (_type_) _type_ 10)
    (setup-font-texture! (_type_) none 11)
    (allocate-defaults! (_type_) none 12)
    (login-level-textures (_type_ level int (pointer texture-id)) none 13) ;; loading level...
    (add-tex-to-dma! (_type_ level int) none 14) ;; very mysterious arg types.
    (allocate-vram-words! (_type_ int) int 15)
    (allocate-segment! (_type_ texture-pool-segment int) texture-pool-segment 16)
    (dummy-17 () none 17)
    (dummy-18 () none 18)
    (dummy-19 () none 19)
    (unload! (_type_ texture-page) int 20)
    (upload-one-common! (_type_ level) symbol 21)
    (lookup-boot-common-id (_type_ int) int 22)
    )
  )

(deftype texture (basic)
  ((w            int16     :offset-assert 4)
   (wu           uint16    :offset 4)
   (h            int16     :offset-assert 6)
   (hu           uint16    :offset 6)
   (num-mips     uint8     :offset-assert 8)
   (tex1-control uint8     :offset-assert 9)   ;; each level has a dest and a width
   (psm          gs-psm    :offset-assert 10)
   (mip-shift    uint8     :offset-assert 11)
   (clutpsm      uint16    :offset-assert 12)
   (dest         uint16 7 :offset-assert 14)  ;; dest vram word addr, per leve
   (clutdest     uint16    :offset-assert 28) ;; destination vram word addr of clut.
   (width        uint8 7 :offset-assert 30)   ;; mip widths
   (name         string    :offset-assert 40)
   (size         uint32    :offset-assert 44)
   (uv-dist      float     :offset-assert 48)
   (masks        uint32 3 :offset-assert 52)
   )
  :method-count-assert 9
  :size-assert         #x40
  :flag-assert         #x900000040
  )

(deftype texture-page-segment (structure)
  ((block-data pointer :offset-assert 0)
   (size       uint32  :offset-assert 4)
   (dest       uint32  :offset-assert 8)
   )
  :pack-me
  :method-count-assert 9
  :size-assert         #xc
  :flag-assert         #x90000000c
  )

(deftype texture-page (basic)
  ((info      file-info        :offset-assert 4)
   (name      basic            :offset-assert 8)
   (id        uint32           :offset-assert 12)
   (length    int32            :offset-assert 16) ;; number of texture
   (mip0-size uint32           :offset-assert 20)
   (size      uint32           :offset-assert 24) ;; in vram words.
   (segment   texture-page-segment 3 :inline :offset-assert 28)
   (pad       uint32 16       :offset-assert 64)
   (data      texture :dynamic :offset-assert 128)
   )
  :method-count-assert 15
  :size-assert         #x80
  :flag-assert         #xf00000080
  (:methods
    (relocate (_type_ kheap (pointer uint8)) none :replace 7)
    (remove-from-heap (_type_ kheap) _type_ 9)
    (get-leftover-block-count (_type_ int int) int 10)
    (dummy-11 () none 11)
    (relocate-dests! (_type_ int int) none 12)
    (add-to-dma-buffer (_type_ dma-buffer int) int 13)
    (upload-now! (_type_ int) none 14)
    )
  )

(deftype shader-ptr (uint32)
  ((shader uint32 :offset 8 :size 24)) ;; TODO this seems wrong - default-menu::all-texture-tweak-adjust
  :method-count-assert 9
  :size-assert         #x4
  :flag-assert         #x900000004
  )

(deftype texture-link (structure)
  ((next shader-ptr 1 :offset-assert 0)
   )
  :method-count-assert 9
  :size-assert         #x4
  :flag-assert         #x900000004
  )

(deftype texture-page-dir-entry (structure)
  ((length int16   :offset-assert 0)
   (status uint16  :offset-assert 2)
   (page   texture-page   :offset-assert 4)
   (link   texture-link  :offset-assert 8)
   )
  :pack-me
  :method-count-assert 9
  :size-assert         #xc
  :flag-assert         #x90000000c
  )

(deftype texture-page-dir (basic)
  ((length int32)
   (entries texture-page-dir-entry 1 :inline)
   )
  (:methods
    (relocate (_type_ kheap (pointer uint8)) none :replace 7)
    (unlink-textures-in-heap! (_type_ kheap) int 9)
    )
  :flag-assert #xa00000014
  )

(deftype texture-relocate-later (basic)
  ((memcpy symbol                  :offset-assert 4)
   (dest   uint32                  :offset-assert 8)
   (source uint32                  :offset-assert 12)
   (move   uint32                  :offset-assert 16)
   (entry  texture-page-dir-entry  :offset-assert 20)
   (page   texture-page                   :offset-assert 24)
   )
  :method-count-assert 9
  :size-assert         #x1c
  :flag-assert         #x90000001c
  )

(defenum link-test-flags
  :type uint32
  :bitfield #t
  (needs-log-in 8)
  (bit-9 9)
  )

(deftype adgif-shader (structure)
  ((quad       qword  5 :score -100 :inline  :offset 0)
   (prims      gs-reg64 10 :score -100 :offset 0)
   (tex0       gs-tex0     :offset 0)
   (tex1       gs-tex1     :offset 16)
   (miptbp1    gs-miptbp     :offset 32)
   (clamp      gs-clamp     :offset 48)
   (clamp-reg  gs-reg64     :offset 56)
   (alpha      gs-miptbp     :offset 64)
   (link-test  link-test-flags     :offset 8)
   (texture-id texture-id     :offset 24)
   (next       shader-ptr :offset 40)
   )
  :method-count-assert 9
  :size-assert         #x50
  :flag-assert         #x900000050
  )

(deftype adgif-shader-array (inline-array-class)
  ((data  adgif-shader  :inline :dynamic :offset 16)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

;; - Functions

(define-extern texture-mip->segment (function int int int))

;; - Symbols

(define-extern *texture-enable-user-menu* int)
(define-extern *texture-enable-user* int)
(define-extern *texture-relocate-later* texture-relocate-later)
(define-extern *texture-page-dir* texture-page-dir)
(define-extern *sky-base-vram-word* int)
(define-extern *sky-base-block* int)
(define-extern *sky-base-page* int)
(define-extern *depth-cue-base-vram-word* int)
(define-extern *depth-cue-base-block* int)
(define-extern *depth-cue-base-page* int)
(define-extern *eyes-base-vram-word* int)
(define-extern *eyes-base-block* int)
(define-extern *eyes-base-page* int)
(define-extern *ocean-base-vram-word* int)
(define-extern *ocean-base-block* int)
(define-extern *ocean-base-page* int)


;; ----------------------
;; File - level-h
;; Source Path - engine/level/level-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(declare-type bsp-header basic)
(deftype level-vis-info (basic)
  ((level              symbol           :offset-assert 4)
   (from-level         symbol           :offset-assert 8)
   (from-bsp           bsp-header       :offset-assert 12)
   (flags              uint32           :offset-assert 16)
   (length             uint32           :offset-assert 20)
   (allocated-length   uint32           :offset-assert 24)
   (dictionary-length  uint32           :offset-assert 28)
   (dictionary         uint32           :offset-assert 32)
   (string-block       uint32           :offset-assert 36)
   (ramdisk            uint32           :offset-assert 40)
   (vis-bits           pointer          :offset-assert 44)
   (current-vis-string uint32           :offset-assert 48)
   (vis-string         uint8 :dynamic :offset-assert 52)
   )
  :method-count-assert 9
  :size-assert         #x34
  :flag-assert         #x900000034
  )

(deftype level-load-info (basic)
  ((name-list         symbol 3   :do-not-decompile :offset-assert 4)
   (index             int32     :offset-assert 16)
   (name              symbol     :offset 4)
   (visname           symbol    :offset 8)
   (nickname          symbol    :offset 12)
   (packages          pair      :offset-assert 20)
   (sound-banks       pair      :offset-assert 24)
   (music-bank        symbol     :offset-assert 28)
   (ambient-sounds    pair      :offset-assert 32)
   (mood              symbol    :offset-assert 36)
   (mood-func         symbol    :offset-assert 40)
   (ocean             symbol    :offset-assert 44)
   (sky               symbol    :offset-assert 48)
   (sun-fade          float     :offset-assert 52)
   (continues         pair      :offset-assert 56)
   (tasks             pair      :offset-assert 60)
   (priority          int32     :offset-assert 64)
   (load-commands     pair      :offset-assert 68)
   (alt-load-commands pair      :offset-assert 72)
   (bsp-mask          uint64    :offset-assert 80)
   (bsphere           sphere    :offset-assert 88)
   (buzzer            int32     :offset-assert 92)
   (bottom-height     meters    :offset-assert 96)
   (run-packages      pair      :offset-assert 100)
   (prev-level        basic     :offset-assert 104)
   (next-level        basic     :offset-assert 108)
   (wait-for-load     symbol    :offset-assert 112)
   )
  :method-count-assert 9
  :size-assert         #x74
  :flag-assert         #x900000074
  )

(declare-type drawable basic)
(deftype login-state (basic)
  ((state int32      :offset-assert 4)
   (pos   uint32     :offset-assert 8)
   (elts  uint32     :offset-assert 12)
   (elt   drawable 16 :offset-assert 16) ;; might be something more specific.
   )
  :method-count-assert 9
  :size-assert         #x50
  :flag-assert         #x900000050
  )

(declare-type engine basic)
(declare-type entity-links-array basic)
(declare-type entity-ambient-data-array basic)
(declare-type mood-context basic)
(deftype level (basic)
  ((name                      symbol          :offset-assert 4)
   (load-name                 symbol          :offset-assert 8)
   (nickname                  symbol          :offset-assert 12)
   (index                     int32           :offset-assert 16)
   (status                    symbol          :offset-assert 20)
   (other                     level           :offset-assert 24)
   (heap                      kheap   :inline :offset-assert 32)
   (bsp                       bsp-header      :offset-assert 48)
   (art-group                 load-dir-art-group  :offset-assert 52)
   (info                      level-load-info     :offset-assert 56)
   (texture-page              texture-page 9      :offset-assert 60)
   (loaded-texture-page       texture-page 16     :offset-assert 96)
   (loaded-texture-page-count int32           :offset-assert 160)
   ; (foreground-sink-group-0   dma-foreground-sink-group :inline :offset-assert 176)
   ; (foreground-sink-group-1   dma-foreground-sink-group :inline :offset-assert 208)
   ; (foreground-sink-group-2   dma-foreground-sink-group :inline :offset-assert 240)
   ; (array-pad uint8 12)
   (foreground-sink-group     dma-foreground-sink-group 3 :inline :offset-assert 176) ;; inline basic
   (foreground-draw-engine    engine 3       :offset-assert 272)
   (entity                    entity-links-array           :offset-assert 284)
   (ambient                   entity-ambient-data-array           :offset-assert 288)
   (closest-object            float 9       :offset-assert 292)
   (upload-size               int32 9       :offset-assert 328)
   (level-distance            meters          :offset-assert 364)
   (inside-sphere?            symbol          :offset-assert 368)
   (inside-boxes?             symbol          :offset-assert 372)
   (display?                  symbol          :offset-assert 376)
   (meta-inside?              symbol          :offset-assert 380)
   (mood                      mood-context          :offset-assert 384)
   (mood-func                 function           :offset-assert 388)
   (vis-bits                  pointer         :offset-assert 392)
   (all-visible?              symbol        :offset-assert 396)
   (force-all-visible?        symbol          :offset-assert 400)
   (linking                   basic           :offset-assert 404)
   (vis-info                  level-vis-info 8       :offset-assert 408)
   (vis-self-index            int32           :offset-assert 440)
   (vis-adj-index             int32           :offset-assert 444)
   (vis-buffer                uint8 2048    :offset-assert 448)
   (mem-usage-block           memory-usage-block           :offset-assert 2496)
   (mem-usage                 int32           :offset-assert 2500)
   (code-memory-start         pointer          :offset-assert 2504)
   (code-memory-end           pointer          :offset-assert 2508) ;; NOTE - usually a texture-page
   (texture-mask              uint32 9       :offset-assert 2512)
   (force-inside?             symbol          :offset-assert 2548)
   (pad                       uint8 56)
   )
  :method-count-assert 29
  :size-assert         #xa30
  :flag-assert         #x1d00000a30
  (:methods
    (deactivate (_type_) _type_ 9)
    (dummy-10 (_type_ int) symbol 10)
    (add-irq-to-tex-buckets! (_type_) none 11)
    (unload! (_type_) _type_ 12)
    (bsp-name (_type_) symbol 13)
    (dummy-14 (_type_ object) memory-usage-block 14)
    (dummy-15 (_type_ vector) symbol 15)
    (dummy-16 (_type_) none 16)
    (load-continue (_type_) _type_ 17)
    (load-begin (_type_) _type_ 18)
    (login (_type_) _type_ 19)
    (vis-load (_type_) uint 20)
    (dummy-21 (_type_) none 21)
    (activate (_type_) _type_ 22)
    (level-status-set! (_type_ symbol) _type_ 23)
    (dummy-24 (_type_) _type_ 24)
    (dummy-25 (_type_) int 25)
    (vis-clear (_type_) int 26)
    (dummy-27 (_type_ vector string) none 27)
    (art-group-get-by-name (_type_ string) art-group 28)
    )
  )

(declare-type entity-links structure)
(deftype level-group (basic)
  ((length          int32                :offset-assert 4)
   (log-in-level    level                :offset-assert 8)
   (loading-level   level                :offset-assert 12)
   (entity-link     entity-links         :offset-assert 16) ;; not sure what's going on here
   (border?         basic                :offset-assert 20)
   (vis?            basic                :offset-assert 24)
   (want-level      basic                :offset-assert 28)
   (receiving-level basic                :offset-assert 32)
   (load-commands   pair                 :offset-assert 36)
   (play?           symbol               :offset-assert 40)
   ;; there's something? from 40 -> 96. ;; - Look at default-menu::debug-create-cam-restore
   (_hack-pad        uint8                :offset 90)
   (level0          level        :inline :offset-assert 96)
   (level1          level        :inline :offset-assert 2704)
   (level-default   level        :inline :offset-assert 5312)
   ;; this actually went earlier,
   (level           level 3      :inline :offset 96)
   ;; and this one too. why another one?
   (data            level 3      :score -1 :inline :offset 96)
   (pad uint32)
   )
  :method-count-assert 27
  :size-assert         #x1ef4
  :flag-assert         #x1b00001ef4
  (:methods
    (level-get (_type_ symbol) level 9)
    (level-get-with-status (_type_ symbol) level 10)
    (level-get-for-use (_type_ symbol symbol) level 11)
    (activate-levels! (_type_) int 12)
    (dummy-13 () none 13)
    (dummy-14 (_type_ object) none 14)
    (dummy-15 () none 15)
    (dummy-16 (_type_) int 16)
    (level-get-target-inside (_type_) level 17)
    (alloc-levels! (_type_ symbol) int 18)
    (load-commands-set! (_type_ pair) pair 19)
    (art-group-get-by-name (_type_ string) art-group 20)
    (load-command-get-index (_type_ symbol int) pair 21)
    (dummy-22 () none 22)
    (dummy-23 () none 23)
    (dummy-24 () none 24)
    (level-status (_type_ symbol) symbol 25)
    (level-get-most-disposable (_type_) level 26)
    )
  )

;; - Symbols

(define-extern *level* level-group)


;; ----------------------
;; File - math-camera-h
;; Source Path - engine/camera/math-camera-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype vis-gif-tag (structure)
  ((fog0  uint32  :offset-assert 0)
   (strip uint32  :offset-assert 4)
   (regs  uint32  :offset-assert 8)
   (fan   uint32  :offset-assert 12)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype cull-info (structure)
  ((x-fact      float  :offset-assert 0)
   (y-fact      float  :offset-assert 4)
   (z-fact      float  :offset-assert 8)
   (cam-radius  float  :offset-assert 12)
   (cam-x       float  :offset-assert 16)
   (cam-y       float  :offset-assert 20)
   (xz-dir-ax   float  :offset-assert 24)
   (xz-dir-az   float  :offset-assert 28)
   (xz-dir-bx   float  :offset-assert 32)
   (xz-dir-bz   float  :offset-assert 36)
   (xz-cross-ab float  :offset-assert 40)
   (yz-dir-ay   float  :offset-assert 44)
   (yz-dir-az   float  :offset-assert 48)
   (yz-dir-by   float  :offset-assert 52)
   (yz-dir-bz   float  :offset-assert 56)
   (yz-cross-ab float  :offset-assert 60)
   )
  :pack-me
  :method-count-assert 9
  :size-assert         #x40
  :flag-assert         #x900000040
  )

(deftype math-camera (basic)
  ((d                          meters             :offset-assert 4)
   (f                          meters             :offset-assert 8)
   (fov                        degrees            :offset-assert 12)
   (x-ratio                    float              :offset-assert 16)
   (y-ratio                    float              :offset-assert 20)
   (x-pix                      float              :offset-assert 24)
   (x-clip                     float              :offset-assert 28)
   (x-clip-ratio-in            float              :offset-assert 32)
   (x-clip-ratio-over          float              :offset-assert 36)
   (y-pix                      float              :offset-assert 40)
   (y-clip                     float              :offset-assert 44)
   (y-clip-ratio-in            float              :offset-assert 48)
   (y-clip-ratio-over          float              :offset-assert 52)
   (cull-info                  cull-info  :inline :offset-assert 56)
   (fog-start                  meters             :offset-assert 120)
   (fog-end                    meters             :offset-assert 124)
   (fog-max                    float              :offset-assert 128)
   (fog-min                    float              :offset-assert 132)
   (reset                      int32              :offset-assert 136)
   (smooth-step                float              :offset-assert 140)
   (smooth-t                   float              :offset-assert 144)
   (perspective                matrix     :inline :offset-assert 160)
   (isometric                  matrix     :inline :offset-assert 224)
   (sprite-2d                  matrix     :inline :offset-assert 288)
   (sprite-2d-hvdf             vector     :inline :offset-assert 352)
   (camera-rot                 matrix     :inline :offset-assert 368)
   (inv-camera-rot             matrix     :inline :offset-assert 432)
   (inv-camera-rot-smooth      matrix     :inline :offset-assert 496)
   (inv-camera-rot-smooth-from quaternion :inline :offset-assert 560)
   (camera-temp                matrix     :inline :offset-assert 576)
   (prev-camera-temp           matrix     :inline :offset-assert 640)
   (hmge-scale                 vector     :inline :offset-assert 704)
   (inv-hmge-scale             vector     :inline :offset-assert 720)
   (hvdf-off                   vector     :inline :offset-assert 736)
   (guard                      vector     :inline :offset-assert 752)
   (vis-gifs                   vis-gif-tag 4 :inline      :offset-assert 768)
   (vis-gifs-quads             uint128 4      :offset 768) ;; added
   (giftex                     vis-gif-tag            :offset 768)
   (gifgr                      vis-gif-tag            :offset 784)
   (giftex-trans               vis-gif-tag            :offset 800)
   (gifgr-trans                vis-gif-tag            :offset 816)
   (pfog0                      float              :offset-assert 832)
   (pfog1                      float              :offset-assert 836)
   (trans                      vector     :inline :offset-assert 848)
   (plane                      uint128    4       :offset-assert 864)
   (guard-plane                uint128    4       :offset-assert 928)
   (shrub-mat                  matrix     :inline :offset-assert 992)
   (fov-correction-factor      float              :offset-assert 1056)
   )
  (:methods
    (new (symbol type) _type_ 0)
    )
  :method-count-assert 9
  :size-assert         #x424
  :flag-assert         #x900000424
  )


;; ----------------------
;; File - math-camera
;; Source Path - engine/camera/math-camera.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype fog-corrector (structure)
  ((fog-end   float  :offset-assert 0)
   (fog-start float  :offset-assert 4)
   )
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )

;; - Functions

(define-extern update-math-camera (function math-camera symbol symbol math-camera))
(define-extern fog-corrector-setup (function fog-corrector math-camera none))
(define-extern sprite-distorter-generate-tables (function none))
(define-extern math-cam-start-smoothing (function float float quaternion))
(define-extern move-target-from-pad (function transform int transform))
(define-extern transform-point-vector! (function vector vector symbol))
(define-extern transform-point-qword! (function vector vector symbol))
(define-extern transform-point-vector-scale! (function vector vector float))
(define-extern init-for-transform (function matrix none))

;; - Symbols

(define-extern *math-camera* math-camera) ;; unknown type
(define-extern *math-camera-fog-correction* fog-corrector) ;; unknown type


;; ----------------------
;; File - font-h
;; Source Path - engine/gfx/font-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

;;;;;;;;;;;
;;;;;;;;;;;
(deftype char-verts (structure)
  ((pos    vector 4 :inline :offset-assert 0)
   (color  vector 4 :inline :offset-assert 64)
   (tex-st vector 4 :inline :offset-assert 128)
   )
  :method-count-assert 9
  :size-assert         #xc0
  :flag-assert         #x9000000c0
  )

(deftype char-color (structure)
  ((color rgba 4 :offset-assert 0)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype font-context (basic)
  ((origin     vector :inline :offset-assert 16)
   (strip-gif  vector :inline :offset-assert 32)
   (width      float          :offset-assert 48)
   (height     float          :offset-assert 52)
   (projection float          :offset-assert 56)
   (color      int64          :offset-assert 64)
   (flags      uint32         :offset-assert 72)
   (mat        matrix         :offset-assert 76)
   (start-line uint32         :offset-assert 80)
   (scale      float          :offset-assert 84)
   )
  :method-count-assert 20
  :size-assert         #x58
  :flag-assert         #x1400000058
  (:methods
    (new (symbol type matrix int int float int uint) _type_ 0)
    (set-mat! (font-context matrix) font-context 9)
    (set-origin! (font-context int int) font-context 10)
    (set-depth! (font-context int) font-context 11)
    (set-w! (font-context float) font-context 12)
    (set-width! (font-context int) font-context 13)
    (set-height! (font-context int) font-context 14)
    (set-projection! (font-context float) font-context 15)
    (set-color! (font-context int) font-context 16)
    (set-flags! (font-context uint) font-context 17)
    (set-start-line! (font-context uint) font-context 18)
    (set-scale! (font-context float) font-context 19)
    )
  )

(deftype font-work (structure)
  ((font-tmpl          dma-gif-packet :inline :offset-assert 0)
   (char-tmpl          dma-gif-packet :inline :offset-assert 32)
   (tex1-tmpl          uint64        2       :offset-assert 64)
   (small-font-lo-tmpl uint64        2       :offset-assert 80)
   (small-font-hi-tmpl uint64        2       :offset-assert 96)
   (large-font-lo-tmpl uint64        2       :offset-assert 112)
   (large-font-hi-tmpl uint64        2       :offset-assert 128)
   (size1-small        vector         :inline :offset-assert 144)
   (size2-small        vector         :inline :offset-assert 160)
   (size3-small        vector         :inline :offset-assert 176)
   (size1-large        vector         :inline :offset-assert 192)
   (size2-large        vector         :inline :offset-assert 208)
   (size3-large        vector         :inline :offset-assert 224)
   (size-st1           vector         :inline :offset-assert 240)
   (size-st2           vector         :inline :offset-assert 256)
   (size-st3           vector         :inline :offset-assert 272)
   (save               vector         :inline :offset-assert 288)
   (save-color         vector  4   :inline    :offset-assert 304)
   (current-verts      char-verts     :inline :offset-assert 368)
   (src-verts          char-verts     :inline :offset-assert 560)
   (dest-verts         char-verts     :inline :offset-assert 752)
   (justify            vector        64   :inline   :offset-assert 944)
   (color-shadow       vector4w       :inline :offset-assert 1968)
   (color-table        char-color       64  :inline    :offset-assert 1984)
   (last-color         uint64                 :offset-assert 3008)
   (save-last-color    uint64                 :offset-assert 3016)
   (buf                basic                  :offset-assert 3024)
   (str-ptr            uint32                 :offset-assert 3028)
   (flags              uint32                 :offset-assert 3032)
   (reg-save           uint32        5       :offset-assert 3036)
   )
  :method-count-assert 9
  :size-assert         #xbf0
  :flag-assert         #x900000bf0
  )

;; - Functions

(define-extern font-set-tex0 (function (pointer gs-tex0) texture uint uint uint none))

;; - Symbols

(define-extern *font-default-matrix* matrix) ;; unknown type
(define-extern *font-work* font-work) ;; unknown type


;; ----------------------
;; File - decomp-h
;; Source Path - engine/gfx/decomp-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

;;;;;;;;;;;;;
;;;;;;;;;;;;;
(deftype decomp-work (structure)
  ((buffer0      uint8 2048 :offset-assert 0)
   (buffer1      uint8 2048 :offset-assert 2048)
   (indices      uint16 2048 :offset-assert 4096)
   (temp-indices uint16 2048 :offset-assert 8192)
   )
  :method-count-assert 9
  :size-assert         #x3000
  :flag-assert         #x900003000
  )


;; ----------------------
;; File - display
;; Source Path - engine/gfx/hw/display.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern draw-quad2d (function dma-buffer draw-context none))
(define-extern set-display-env (function display-env int int int int int int display-env))
(define-extern set-draw-env (function draw-env int int int int int int draw-env))
(define-extern get-video-mode (function symbol))
(define-extern draw-string-xy (function string dma-buffer int int int int none))
(define-extern set-draw-env-offset (function draw-env int int int draw-env))
(define-extern put-display-alpha-env (function display-env none))
(define-extern set-display2 (function display int int int int int display))
(define-extern allocate-dma-buffers (function display display))
(define-extern draw-sprite2d-xy (function dma-buffer int int int int rgba none))
(define-extern screen-gradient (function dma-buffer rgba rgba rgba rgba none))
(define-extern vif1-handler-debug (function int))
(define-extern vif1-handler (function int))
(define-extern install-handler (function int (function int) int))  ;; GOAL thinks it returns something.
(define-extern vblank-handler (function int))
(define-extern set-display-gs-state (function dma-buffer int int int int int dma-buffer))
(define-extern set-display-gs-state-offset (function dma-buffer int int int int int int int dma-buffer))
(define-extern reset-display-gs-state (function display dma-buffer int none))

;; - Symbols

(define-extern *profile-y* int)
(define-extern *profile-h* int)
(define-extern *profile-x* int)
(define-extern *profile-w* int)
(define-extern *profile-ticks* symbol)
(define-extern *font-context* font-context)
(define-extern *pause-context* font-context)
(define-extern *vblank-counter* int)
(define-extern *oddeven* int)
(define-extern *vu0-dma-list* dma-buffer)


;; ----------------------
;; File - connect
;; Source Path - engine/engine/connect.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

;;;;;;;;;;;;;
;;;;;;;;;;;;;
(deftype connectable (structure)
  ((next0 connectable  :offset-assert 0)
   (prev0 connectable  :offset-assert 4)
   (next1 connectable  :offset-assert 8)
   (prev1 connectable  :offset-assert 12)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(declare-type engine basic)
(deftype connection (connectable)
  ((param0 (function object object object object object)      :offset-assert 16)
   (param1 basic         :offset-assert 20)
   (param2 basic         :offset-assert 24)
   (param3 basic         :offset-assert 28)
   (quad   uint128     2 :offset 0)
   )
  :method-count-assert 14
  :size-assert         #x20
  :flag-assert         #xe00000020
  ;; field param1 is a basic loaded with a signed load field param2 is a basic loaded with a signed load field param3 is a basic loaded with a signed load
  (:methods
    (print (connection) _type_ 2)
    (get-engine (connection) engine 9)
    (get-process (connection) process 10)
    (belongs-to-engine? (connection engine) symbol 11)
    (belongs-to-process? (connection process) symbol 12)
    (move-to-dead (connection) connection 13)
    )
  )

(deftype engine (basic)
  ((name basic :offset-assert 4)
   (length int16 :offset-assert 8)             ;; in use elts of the data array
   (allocated-length int16 :offset-assert 10)  ;; size of the data array
   (engine-time uint64 :offset-assert 16)      ;; frame that we last executed
   ;; terminating nodes for the next0/prev0 linked lists
   (alive-list connectable :inline :offset-assert 32)
   (alive-list-end connectable :inline :offset-assert 48)
   (dead-list connectable :inline :offset-assert 64)
   (dead-list-end connectable :inline :offset-assert 80)
   ;; storage for nodes. this is dynamically sized.
   (data connection 1 :inline :offset-assert 96)
   )
  :method-count-assert 24
  :size-assert         #x80
  :flag-assert         #x1800000080
  (:methods
    (new (symbol type basic int) _type_ 0)
    (inspect-all-connections (engine) engine 9)
    (apply-to-connections (engine (function connectable none)) int 10)
    (apply-to-connections-reverse (engine (function connectable none)) int 11)
    (execute-connections (engine object) int 12)
    (execute-connections-and-move-to-dead (engine object) int 13)
    (execute-connections-if-needed (engine object) int 14)
    (add-connection (engine process (function object object object object object) object object object) connection 15)
    (remove-from-process (engine process) int 16)
    (remove-matching (engine (function connection engine symbol)) int 17)
    (remove-all (engine) int 18)
    (remove-by-param1 (engine object) int 19)
    (remove-by-param2 (engine int) int 20)
    (get-first-connectable (engine) connectable 21)
    (get-last-connectable (engine) connectable 22)
    (unknown-1 (engine (pointer uint32)) uint 23)
    )
  )

;; - Functions

(define-extern connection-process-apply (function process (function object none) symbol))


;; ----------------------
;; File - text-h
;; Source Path - engine/ui/text-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype game-text (structure)
  ((id   uint32  :offset-assert 0)
   (text string  :offset-assert 4)
   )
  :pack-me
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )

(deftype game-text-info (basic)
  ((length      int32            :offset-assert 4)
   (language-id int32            :offset-assert 8)
   (group-name  string           :offset-assert 12)
   (data        game-text :dynamic :inline :offset-assert 16)
   )
  :method-count-assert 10
  :size-assert         #x10
  :flag-assert         #xa00000010
  (:methods
    (lookup-text! (_type_ game-text-id symbol) string 9)
    )
  )

;; - Symbols

(define-extern *text-group-names* (array string))
(define-extern kheap type)
(define-extern *common-text-heap* kheap)
(define-extern *common-text* game-text-info) ; TODO guess, but its definitely not just a symbol!


;; ----------------------
;; File - settings-h
;; Source Path - engine/game/settings-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

;; was manually done
(deftype setting-data (structure)
  ((border-mode symbol :offset-assert 0)
   (sfx-volume  float :offset-assert 4)
   (music-volume float :offset-assert 8)
   (dialog-volume float :offset-assert 12)
   (process-mask process-mask :offset-assert 16)
   (common-page int32 :offset-assert 20)
   (language int64 :offset-assert 24)
   (screenx int32 :offset-assert 32)
   (screeny int32 :offset-assert 36)
   (vibration symbol :offset-assert 40)
   (play-hints symbol :offset-assert 44)
   (movie (pointer process) :offset-assert 48) ;; special print
   (talking (pointer process) :offset-assert 52) ;; special print
   (spooling (pointer process) :offset-assert 56) ;; special print
   (hint (pointer process) :offset-assert 60) ;; special print
   (ambient (pointer process) :offset-assert 64) ;; special print
   (video-mode symbol :offset-assert 68)
   (aspect-ratio symbol :offset-assert 72) ;; a guess but, anything besides this doesnt make sense
   (sound-flava uint8 :offset-assert 76)
   (auto-save symbol :offset-assert 80)
   (music-volume-movie float :offset-assert 84)
   (sfx-volume-movie float :offset-assert 88)
   (music symbol :offset-assert 92)
   (bg-r float :offset-assert 96)
   (bg-g float :offset-assert 100)
   (bg-b float :offset-assert 104)
   (bg-a float :offset-assert 108)
   (bg-a-speed float :offset-assert 112)
   (bg-a-force float :offset-assert 116)
   (allow-progress symbol :offset-assert 120)
   (allow-pause symbol :offset-assert 124)
   (sound-flava-priority float :offset-assert 128)
   (ocean-off symbol :offset-assert 132)
   (allow-look-around symbol :offset-assert 136)
   (ambient-volume float :offset-assert 140)
   (ambient-volume-movie float :offset-assert 144)
   (dialog-volume-hint float :offset-assert 148)
   (dummy uint32 11 :offset-assert 152)
   )
  :method-count-assert 10
  :size-assert         #xc4
  :flag-assert         #xa000000c4
  (:methods
    (handle-pending-updates (_type_ engine) setting-data 9)
    )
  )

(deftype setting-control (basic)
  ((current setting-data :inline :offset-assert 16)
   (target  setting-data :inline :offset-assert 224)
   (default setting-data :inline :offset-assert 432)
   (engine  engine               :offset-assert 628)
   )
  :method-count-assert 14
  :size-assert         #x278
  :flag-assert         #xe00000278
  (:methods
    (new (symbol type int) _type_ 0)
    (push-setting! (_type_ process (function object object object object object) object object object) none 9)
    (set-setting! (_type_ process symbol symbol float int) none 10)
    (clear-pending-settings-from-process (_type_ process symbol) none 11)
    (copy-settings-from-target! (_type_) setting-data 12)
    (update-per-frame-settings! (_type_) setting-data 13)
    )
  )

(deftype scf-time (structure)
  ((stat   uint8  :offset-assert 0)
   (second uint8  :offset-assert 1)
   (minute uint8  :offset-assert 2)
   (hour   uint8  :offset-assert 3)
   (week   uint8  :offset-assert 4)
   (day    uint8  :offset-assert 5)
   (month  uint8  :offset-assert 6)
   (year   uint8  :offset-assert 7)
   )
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )


;; ----------------------
;; File - capture
;; Source Path - engine/gfx/capture.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype gs-store-image-packet (structure)
  ((vifcode        vif-tag 4 :offset-assert 0)
   (giftag         gif-tag   :offset-assert 16)
   (bitbltbuf      gs-bitbltbuf    :offset-assert 32)
   (bitbltbuf-addr gs-reg64    :offset-assert 40)
   (trxpos         gs-trxpos    :offset-assert 48)
   (trxpos-addr    gs-reg64    :offset-assert 56)
   (trxreg         gs-trxreg    :offset-assert 64)
   (trxreg-addr    gs-reg64    :offset-assert 72)
   (finish         int64    :offset-assert 80) ;; gs-finish
   (finish-addr    gs-reg64    :offset-assert 88)
   (trxdir         gs-trxdir    :offset-assert 96)
   (trxdir-addr    gs-reg64    :offset-assert 104)
   )
  :method-count-assert 9
  :size-assert         #x70
  :flag-assert         #x900000070
  )

;; - Functions

(define-extern gs-set-default-store-image (function gs-store-image-packet int int int int int int int int))
(define-extern gs-store-image (function object object object))
(define-extern sync-path (function int int none))
(define-extern file-stream-write (function file-stream pointer uint uint))
(define-extern file-stream-close (function file-stream file-stream))
(define-extern store-image (function int int))


;; ----------------------
;; File - memory-usage-h
;; Source Path - engine/debug/memory-usage-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype memory-usage-info (structure)
  ((name  string :offset-assert 0)
   (count int32  :offset-assert 4)
   (used  int32  :offset-assert 8)
   (total int32  :offset-assert 12)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype memory-usage-block (basic)
  ((work-bsp basic       :offset-assert 4)
   (length   int32       :offset-assert 8)
   (data     memory-usage-info 109 :inline :offset-assert 16) ;; guess
   )
  :method-count-assert 12
  :size-assert         #x6e0
  :flag-assert         #xc000006e0
  (:methods
    (reset! (_type_) _type_ 9)
    (calculate-total (_type_) int 10)
    (print-mem-usage (_type_ level object) none 11)
    )
  )

;; - Symbols

(define-extern *mem-usage* memory-usage-block)
(define-extern *dma-mem-usage* memory-usage-block)
(define-extern *temp-mem-usage* memory-usage-block)


;; ----------------------
;; File - texture
;; Source Path - engine/gfx/texture.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern adgif-shader<-texture! (function adgif-shader texture adgif-shader))
(define-extern adgif-shader<-texture-with-update! (function adgif-shader texture adgif-shader))
(define-extern level-remap-texture (function texture-id texture-id))
(define-extern link-texture-by-id (function texture-id adgif-shader texture-page-dir-entry))
(define-extern lookup-texture-by-id (function texture-id texture))
(define-extern texture-page-login (function texture-id (function texture-pool texture-page kheap int texture-page) kheap texture-page-dir-entry))
;; arg2 in these is not an int, but something else. Not sure what it is yet.
;; all these texture-page-segment might actually be texture-relocate-later!
(define-extern texture-page-default-allocate (function texture-pool texture-page kheap int texture-page))
(define-extern loado (function string kheap object))
(define-extern texture-relocate (function dma-buffer texture int gs-psm int dma-buffer))
(define-extern dma-buffer-add-ref-texture (function dma-buffer pointer int int gs-psm none))
(define-extern upload-vram-pages (function texture-pool texture-pool-segment texture-page int bucket-id int))
(define-extern upload-vram-pages-pris (function texture-pool texture-pool-segment texture-page bucket-id int int))
(define-extern movie? (function symbol))
(define-extern texture-page-near-allocate-1 (function texture-pool texture-page kheap int texture-page))
(define-extern texture-page-near-allocate-0 (function texture-pool texture-page kheap int texture-page))
(define-extern texture-page-common-allocate (function texture-pool texture-page kheap int texture-page))
(define-extern texture-page-size-check (function texture-pool level symbol int))
(define-extern update-vram-pages (function texture-pool texture-pool-segment texture-page int int)) ;; todo
(define-extern upload-vram-data (function dma-buffer int pointer int none))
(define-extern gs-page-width (function gs-psm int))
(define-extern gs-page-height (function gs-psm int))
(define-extern gs-largest-block (function int int gs-psm int))
(define-extern gs-block-width (function gs-psm int))
(define-extern gs-block-height (function gs-psm int))
(define-extern gs-find-block (function int int gs-psm int))
(define-extern physical-address (function pointer pointer))
(define-extern texture-qwc (function int int gs-psm int))
(define-extern texture-bpp (function gs-psm int))
(define-extern texture-page-dir-inspect (function texture-page-dir symbol none))
(define-extern gs-blocks-used (function int int gs-psm int))
(define-extern texture-page-common-boot-allocate (function texture-pool texture-page kheap int texture-page))
(define-extern texture-page-level-allocate (function texture-pool texture-page kheap int texture-page))
(define-extern relocate-later (function symbol))
(define-extern adgif-shader-update! (function adgif-shader texture none)) ;; todo - unconfirmed
(define-extern adgif-shader-login (function adgif-shader texture))
(define-extern adgif-shader-login-no-remap (function adgif-shader texture))
(define-extern adgif-shader-login-fast (function adgif-shader texture))
(define-extern adgif-shader-login-no-remap-fast (function adgif-shader texture))
;;;; unknown type
(define-extern adgif-shader<-texture-simple! (function adgif-shader texture adgif-shader))

;; - Symbols

(define-extern loading-level kheap)
(define-extern *texture-pool* texture-pool)
(define-extern *font-texture* texture)
(define-extern global kheap)
(define-extern *txt-dma-list* dma-buffer) ;; unknown type
(define-extern ct32-24-block-table (array int32))
(define-extern ct16-block-table (array int32))
(define-extern ct16s-block-table (array int32))
(define-extern mz32-24-block-table (array int32))
(define-extern mz16-block-table (array int32))
(define-extern mz16s-block-table (array int32))
(define-extern mt8-block-table (array int32))
(define-extern mt4-block-table (array int32))
(define-extern *shader-list* pair) ;; unknown type
(define-extern *edit-shader* int) ;; unknown type


;; ----------------------
;; File - main-h
;; Source Path - engine/game/main-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype frame-stats (structure)
  ((field-time uint64 2 :offset-assert 0)
   (field      int32     :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x14
  :flag-assert         #x900000014
  )

(deftype screen-filter (basic)
  ((draw? basic   :offset-assert 4)
   (color rgba    :offset-assert 8)
   )
  :method-count-assert 10
  :size-assert         #xc
  :flag-assert         #xa0000000c
  (:methods
    (dummy-9 (_type_) none 9)
    )
  )

;; - Functions

(define-extern *draw-hook* (function none))
(define-extern *debug-hook* (function none))
(declare-type debug-menu-context basic)
(define-extern *menu-hook* (function debug-menu-context))
(define-extern *progress-hook* (function none))
(define-extern *dma-timeout-hook* (function none))

;; - Symbols

(define-extern *stats-poly* symbol)
(define-extern *stats-memory* symbol)
(define-extern *stats-memory-short* symbol)
(define-extern *stats-collide* symbol)
(define-extern *stats-bsp* symbol)
(define-extern *stats-buffer* symbol)
(define-extern *stats-target* symbol)
(define-extern *stats-dma-test* symbol)
(define-extern *artist-all-visible* symbol)
(define-extern *artist-flip-visible* symbol)
(define-extern *artist-fix-visible* symbol)
(define-extern *artist-fix-frustum* symbol)
(define-extern *artist-error-spheres* symbol)
(define-extern *artist-use-menu-subdiv* symbol)
(define-extern *display-profile* symbol)
(define-extern *display-sidekick-stats* symbol)
(define-extern *display-quad-stats* symbol)
(define-extern *display-tri-stats* symbol)
(define-extern *display-perf-stats* symbol)
(define-extern *display-ground-stats* symbol)
(define-extern *display-collision-marks* symbol)
(define-extern *display-collide-cache* symbol)
(define-extern *display-render-collision* symbol)
(define-extern *display-hipri-collision-marks* symbol)
(define-extern *display-edge-collision-marks* symbol)
(define-extern *display-geo-marks* symbol)
(define-extern *display-target-marks* symbol)
(define-extern *display-collide-history* int)
(define-extern *display-xyz-axes* symbol)
(define-extern *display-cam-collide-history* symbol)
(define-extern *record-cam-collide-history* symbol)
(define-extern *display-cam-master-marks* symbol)
(define-extern *display-cam-other* symbol)
(define-extern *display-camera-marks* symbol)
(define-extern *camera-no-mip-correction* symbol)
(define-extern *display-cam-los-info* symbol)
(define-extern *display-cam-los-debug* symbol)
(define-extern *display-cam-los-marks* symbol)
(define-extern *display-cam-coll-marks* symbol)
(define-extern *display-camera-info* symbol)
(define-extern *display-camera-old-stats* symbol)
(define-extern *display-camera-last-attacker* symbol)
(define-extern *display-file-info* symbol)
(define-extern *display-actor-marks* symbol)
(define-extern *display-ambient-hint-marks* symbol)
(define-extern *display-ambient-sound-marks* symbol)
(define-extern *display-ambient-poi-marks* symbol)
(define-extern *display-ambient-light-marks* symbol)
(define-extern *display-ambient-dark-marks* symbol)
(define-extern *display-ambient-weather-off-marks* symbol)
(define-extern *display-ambient-ocean-off-marks* symbol)
(define-extern *display-ambient-ocean-near-off-marks* symbol)
(define-extern *display-ambient-music-marks* symbol)
(define-extern *display-sprite-info* symbol)
(define-extern *display-entity-errors* symbol)
(define-extern *display-lights* symbol)
(define-extern *display-instance-info* symbol)
(define-extern *display-deci-count* symbol)
(define-extern *sync-dma* symbol)
(define-extern *display-strip-lines* int)
(define-extern *display-nav-marks* symbol)
(define-extern *display-path-marks* symbol)
(define-extern *display-vol-marks* symbol)
(define-extern *display-water-marks* symbol)
(define-extern *display-actor-anim* symbol)
(define-extern *display-process-anim* symbol)
(define-extern *display-actor-vis* symbol)
(define-extern *display-actor-graph* symbol)
(define-extern *display-level-border* symbol)
(define-extern *display-load-boundaries* symbol)
(define-extern *display-memcard-info* symbol)
(define-extern *display-split-boxes* symbol)
(define-extern *display-split-box-info* symbol)
(define-extern *display-texture-download* symbol)
(define-extern *display-art-control* symbol)
(define-extern *display-level-spheres* symbol)
(define-extern *time-of-day-effects* symbol)
(define-extern *time-of-day-fast* symbol)
(define-extern *display-iop-info* symbol)
(define-extern *ambient-sound-class* symbol)
(define-extern *slow-frame-rate* symbol)
(define-extern *weather-off* symbol)
(define-extern *debug-pause* symbol)
(define-extern *subdivide-draw-mode* int)
(define-extern *ocean-subdivide-draw-mode* int)
(define-extern *dproc* process)
(define-extern *run* symbol)
(define-extern *teleport* symbol)
(define-extern *teleport-count* int)
(define-extern *frame-stats* frame-stats)


;; ----------------------
;; File - mspace-h
;; Source Path - engine/anim/mspace-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype joint (basic)
  ((name      basic          :offset-assert 4)
   (number    int32          :offset-assert 8)
   (parent    joint          :offset-assert 12)
   (bind-pose matrix :inline :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x50
  :flag-assert         #x900000050
  )

(deftype bone-cache (structure)
  ((bone-matrix   uint32  :offset-assert 0)
   (parent-matrix uint32  :offset-assert 4)
   (dummy         uint32  :offset-assert 8)
   (frame         uint32  :offset-assert 12)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype bone (structure)
  ((transform matrix     :inline :offset-assert 0)
   (position  vector     :inline :offset 48) ;; overlays the matrix
   (scale     vector     :inline :offset-assert 64)
   (cache     bone-cache :inline :offset-assert 80)
   )
  :method-count-assert 9
  :size-assert         #x60
  :flag-assert         #x900000060
  )

(deftype skeleton (inline-array-class)
  ((bones bone :inline :dynamic))
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype cspace (structure)
  ((parent    cspace    :offset-assert 0)
   (joint     joint     :offset-assert 4)
   (joint-num int16     :offset-assert 8)
   (geo       basic     :offset-assert 12)
   (bone      bone      :offset-assert 16)
   (param0    function  :offset-assert 20)
   (param1    basic     :offset-assert 24)
   (param2    basic     :offset-assert 28)
   )
  :method-count-assert 10
  :size-assert         #x20
  :flag-assert         #xa00000020
  ;; field param1 is a basic loaded with a signed load field param2 is a basic loaded with a signed load
  (:methods
    (new (symbol type basic) _type_ 0)
    (dummy-9 (_type_ basic) _type_ 9)
    )
  )

(deftype cspace-array (inline-array-class)
  (
   (data cspace :inline :dynamic :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )


;; ----------------------
;; File - drawable-h
;; Source Path - engine/draw/drawable-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(declare-type ambient-list structure)
(deftype drawable (basic)
  ((id      int16          :offset-assert 4)
  ;  (unknown basic         :offset-assert 8) ;; - from default-menu::build-instance-list
   (bsphere vector :inline :offset-assert 16)
   )
  :method-count-assert 18
  :size-assert         #x20
  :flag-assert         #x1200000020
  (:methods
    (login (_type_) _type_ 9) ;; probably login or init.
    (draw (_type_ drawable display-frame) int 10) ;; display-frame is from the method inspect tool
    (dummy-11 (_type_ int) none 11) ; int - length
    (dummy-12 (_type_ int) none 12) ; int - length
    (dummy-13 (_type_ int) none 13) ; int - length
    (dummy-14 () none 14)
    (dummy-15 (_type_) none 15)
    (dummy-16 (_type_ object object) object 16)
    (dummy-17 (_type_ sphere int ambient-list) none 17)
    )
  )

(deftype drawable-error (drawable)
  ((name    basic          :offset-assert 32)
   )
  :method-count-assert 18
  :size-assert         #x24
  :flag-assert         #x1200000024
  )


;; ----------------------
;; File - drawable-group-h
;; Source Path - engine/draw/drawable-group-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype drawable-group (drawable)
  ((length  int16       :offset 6)
   (data    drawable 1  :offset-assert 32)
   )
  :flag-assert #x1200000024
  )

;; - Symbols

(define-extern *collide-nodes* int)


;; ----------------------
;; File - drawable-inline-array-h
;; Source Path - engine/draw/drawable-inline-array-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype drawable-inline-array (drawable)
  ((length  int16          :offset 6) ;; this is kinda weird.
   )
  :method-count-assert 18
  :size-assert         #x20
  :flag-assert         #x1200000020
  )


;; ----------------------
;; File - draw-node-h
;; Source Path - engine/draw/draw-node-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype draw-node (drawable)
  ((child-count uint8          :offset 6)
   (flags       uint8          :offset 7)
   (child       uint32         :offset 8)
   (distance    float          :offset 12)
   )
  :method-count-assert 18
  :size-assert         #x20
  :flag-assert         #x1200000020
  ;; field distance is a float printed as hex?
  )

(deftype drawable-inline-array-node (drawable-inline-array)
  ((data draw-node 1 :inline)
   (pad uint32)
   )
  :method-count-assert 18
  :size-assert         #x44
  :flag-assert         #x1200000044
  ;;  too many basic blocks
  (:methods

    )
  )

(deftype draw-node-dma (structure)
  ((banka draw-node 32 :inline :offset-assert 0)
   (bankb draw-node 32 :inline :offset-assert 1024)
   )
  :method-count-assert 9
  :size-assert         #x800
  :flag-assert         #x900000800
  )


;; ----------------------
;; File - drawable-tree-h
;; Source Path - engine/draw/drawable-tree-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype drawable-tree (drawable-group)
  ()
  :flag-assert #x1200000024
  )

(deftype drawable-tree-array (drawable-group)
  ()
  :flag-assert #x1200000024
  )


;; ----------------------
;; File - drawable-actor-h
;; Source Path - engine/draw/drawable-actor-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(declare-type entity-actor basic)
(deftype drawable-actor (drawable)
  ((actor   entity-actor   :offset 8)
   )
  :method-count-assert 18
  :size-assert         #x20
  :flag-assert         #x1200000020
  )

(deftype drawable-tree-actor (drawable-tree)
  ()
  :flag-assert #x1200000024
  )

(deftype drawable-inline-array-actor (drawable-inline-array)
  ((data drawable-actor 1 :inline)
   (pad uint8 4))
  :flag-assert #x1200000044
  )


;; ----------------------
;; File - drawable-ambient-h
;; Source Path - engine/draw/drawable-ambient-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(declare-type entity-ambient basic)
(deftype drawable-ambient (drawable)
  ((ambient entity-ambient :offset 8)
   )
  :method-count-assert 19
  :size-assert         #x20
  :flag-assert         #x1300000020
  (:methods
    (dummy-18 () none 18)
    )
  )

(deftype drawable-tree-ambient (drawable-tree)
  ()
  :flag-assert #x1200000024
  )

(deftype drawable-inline-array-ambient (drawable-inline-array)
  ((data drawable-ambient 1 :inline)
   (pad uint8 4))
  :flag-assert #x1200000044
  )

(deftype level-hint (process)
  ((text-id-to-display uint32    :offset-assert 112)
   (sound-to-play      basic     :offset-assert 116)
   (trans              vector    :offset-assert 120)
   (sound-id           sound-id  :offset-assert 124)
   (mode               basic     :offset-assert 128)
   (total-time         uint64    :offset-assert 136)
   (total-off-time     uint64    :offset-assert 144)
   (last-time          uint64    :offset-assert 152)
   (voicebox           uint64    :offset-assert 160)
   )
  :heap-base #x40
  :method-count-assert 16
  :size-assert         #xa8
  :flag-assert         #x10004000a8
  ;; inherited inspect of process
  (:methods
    (dummy-14 () none 14)
    (dummy-15 (_type_) symbol 15)
    )
  )

(deftype ambient-list (structure)
  ((num-items int32        :offset-assert 0)
   (items     drawable-ambient 2048 :offset-assert 4)
   )
  :method-count-assert 9
  :size-assert         #x2004
  :flag-assert         #x900002004
  )

;; ----------------------
;; File - game-task-h
;; Source Path - engine/game/task/game-task-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Nothing Defined in This File!


;; ----------------------
;; File - hint-control-h
;; Source Path - engine/game/task/hint-control-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype level-hint-control (structure)
  ((delay-before-playing        uint64  :offset-assert 0)
   (id                          uint32  :offset-assert 8)
   (num-attempts-before-playing int8    :offset-assert 12)
   (num-success-before-killing  int8    :offset-assert 13)
   (num-attempts                int8    :offset-assert 14)
   (num-success                 int8    :offset-assert 15)
   (start-time                  uint64  :offset-assert 16)
   (last-time-called            uint64  :offset-assert 24)
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

(deftype task-hint-control (structure)
  ((task  uint8   :offset-assert 0)
   (delay uint64  :offset-assert 8)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype task-hint-control-group (structure)
  ((tasks (array task-hint-control)  :offset-assert 0)
   )
  :method-count-assert 9
  :size-assert         #x4
  :flag-assert         #x900000004
  )


;; ----------------------
;; File - generic-h
;; Source Path - engine/gfx/generic/generic-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(declare-type gsf-vertex structure)
(deftype gsf-vertex-array (structure)
  ((vtx gsf-vertex :dynamic :offset-assert 0)
   )
  :method-count-assert 9
  :size-assert         #x0
  :flag-assert         #x900000000
  )

(declare-type gsf-fx-vertex structure)
(deftype gsf-fx-vertex-array (structure)
  ((data gsf-fx-vertex :dynamic :offset-assert 0)
   )
  :method-count-assert 9
  :size-assert         #x0
  :flag-assert         #x900000000
  )

(deftype gsf-vertex (structure)
  ((data uint32   8       :offset-assert 0)
   (byte uint8   32      :offset 0)
   (quad uint128   2       :offset 0)
   (vt   qword     :inline :offset 0)
   (pos  vector3s  :inline :offset 0)
   (tex  vector2uh :inline :offset 12)
   (nrm  vector3s  :inline :offset 16)
   (nc   qword     :inline :offset 16)
   (clr  vector4ub :inline :offset 28)
   (dtex vector2uh :inline :offset 16)
   (dclr vector4ub :inline :offset 20)
   )
  :pack-me
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

(deftype gsf-fx-vertex (structure)
  ((clr vector4ub :inline :offset-assert 0)
   (tex vector2uh :inline :offset-assert 4)
   )
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )

(deftype gsf-header (structure)
  ((num-strips  uint8      :offset-assert 0)
   (expanded    uint8      :offset-assert 1)
   (num-dps     uint16     :offset-assert 2)
   (num-vtxs    uint16     :offset-assert 4)
   (strip-table uint8 10 :offset-assert 6)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype gsf-ik (structure)
  ((index   uint8  :offset-assert 0)
   (no-kick uint8  :offset-assert 1)
   )
  :method-count-assert 9
  :size-assert         #x2
  :flag-assert         #x900000002
  )

(deftype gsf-info (structure)
  ((ptr-iks   uint32  :offset-assert 0)
   (ptr-verts uint32  :offset-assert 4)
   (ptr-fx    uint32  :offset-assert 8)
   (dummy2    uint32  :offset-assert 12)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype gsf-buffer (structure)
  ((data      uint8    8192     :offset-assert 0)
   (info      gsf-info   :inline  :offset 0)
   (header    gsf-header :inline  :offset 16)
   (work-area uint8    :dynamic :offset 32)
   )
  :method-count-assert 9
  :size-assert         #x2000
  :flag-assert         #x900002000
  )

(deftype generic-frag (structure)
  ((start-pos uint16  :offset-assert 0)
   (end-pos   uint16  :offset-assert 2)
   )
  :method-count-assert 9
  :size-assert         #x4
  :flag-assert         #x900000004
  )

(deftype generic-strip (structure)
  ((pos uint16  :offset-assert 0)
   (len uint16  :offset-assert 2)
   )
  :method-count-assert 9
  :size-assert         #x4
  :flag-assert         #x900000004
  )

(deftype generic-envmap-saves (structure)
  ((index-mask vector4w :inline :offset-assert 0)
   (verts      uint128  12     :offset-assert 16)
   (kicks      uint128  4       :offset-assert 208)
   )
  :method-count-assert 9
  :size-assert         #x110
  :flag-assert         #x900000110
  )

(deftype generic-interp-job (structure)
  ((job-type uint16  :offset-assert 0)
   (num      uint16  :offset-assert 2)
   (first    uint16  :offset-assert 4)
   (pad      uint16  :offset-assert 6)
   (ptr-data uint32  :offset-assert 8)
   (morph-z  uint16  :offset-assert 12)
   (morph-w  uint16  :offset-assert 14)
   )
  :pack-me
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype generic-saves (structure)
  ((ptr-dma           uint32                       :offset-assert 0)
   (ptr-vtxs          uint32                       :offset-assert 4)
   (ptr-clrs          uint32                       :offset-assert 8)
   (ptr-texs          uint32                       :offset-assert 12)
   (ptr-env-clrs      uint32                       :offset-assert 16)
   (ptr-env-texs      uint32                       :offset-assert 20)
   (cur-outbuf        uint32                       :offset-assert 24)
   (ptr-fx-buf        uint32                       :offset-assert 28)
   (xor-outbufs       uint32                       :offset-assert 32)
   (num-dps           uint32                       :offset-assert 36)
   (qwc               uint32                       :offset-assert 40)
   (gsf-buf           gsf-buffer                   :offset-assert 44)
   (ptr-shaders       uint32                       :offset-assert 48)
   (ptr-env-shader    uint32                       :offset-assert 52)
   (is-envmap         uint32                       :offset-assert 56)
   (basep             uint32                       :offset-assert 60)
   (ptr-interp-job    generic-interp-job           :offset-assert 64)
   (gifbuf-adr        uint32                       :offset-assert 68)
   (inbuf-adr         uint32                       :offset-assert 72)
   (fade-val          uint32                       :offset-assert 76)
   (time-of-day-color uint32                       :offset-assert 80)
   (to-vu0-waits      uint32                       :offset-assert 84)
   (to-spr-waits      uint32                       :offset-assert 88)
   (from-spr-waits    uint32                       :offset-assert 92)
   (envmap            generic-envmap-saves :inline :offset-assert 96)
   )
  :method-count-assert 9
  :size-assert         #x170
  :flag-assert         #x900000170
  )

(deftype generic-gif-tag (structure)
  ((data       uint32 4       :offset-assert 0)
   (qword      qword   :inline :offset 0)
   (fan-prim   uint32          :offset 0)
   (str-prim   uint32          :offset 4)
   (regs       uint32          :offset 8)
   (num-strips uint32          :offset 12)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype ad-cmd (structure)
  ((word uint32 4 :offset-assert 0)
   (quad uint128   :offset 0)
   (data uint64    :offset 0)
   (cmds uint64    :offset 8)
   (cmd  uint8     :offset 8)
   (x    uint32    :offset 0)
   (y    uint32    :offset 4)
   (z    uint32    :offset 8)
   (w    uint32    :offset 12)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype generic-envmap-consts (structure)
  ((consts vector          :inline :offset-assert 0)
   (strgif generic-gif-tag :inline :offset-assert 16)
   (colors vector4w        :inline :offset-assert 32)
   (shader adgif-shader    :inline :offset-assert 48)
   )
  :method-count-assert 9
  :size-assert         #x80
  :flag-assert         #x900000080
  )

(deftype generic-consts (structure)
  ((dma-header        dma-packet            :inline :offset-assert 0)
   (vif-header        uint32               4        :offset-assert 16)
   (dma-ref-vtxs      dma-packet            :inline :offset-assert 32)
   (dma-cnt-call      dma-packet            :inline :offset-assert 48)
   (matrix            matrix                :inline :offset-assert 64)
   (base-strgif       generic-gif-tag       :inline :offset-assert 128)
   (alpha-opaque      ad-cmd                :inline :offset-assert 144)
   (alpha-translucent ad-cmd                :inline :offset-assert 160)
   (ztest-normal      ad-cmd                :inline :offset-assert 176)
   (ztest-opaque      ad-cmd                :inline :offset-assert 192)
   (adcmd-offsets     uint8               16        :offset-assert 208)
   (adcmds            ad-cmd               4        :offset 144)
   (stcycle-tag       uint32                        :offset-assert 224)
   (unpack-vtx-tag    uint32                        :offset-assert 228)
   (unpack-clr-tag    uint32                        :offset-assert 232)
   (unpack-tex-tag    uint32                        :offset-assert 236)
   (mscal-tag         uint32                        :offset-assert 240)
   (flush-tag         uint32                        :offset-assert 244)
   (reset-cycle-tag   uint32                        :offset-assert 248)
   (dummy0            uint32                        :offset-assert 252)
   (dma-tag-cnt       uint64                        :offset-assert 256)
   (envmap            generic-envmap-consts :inline :offset-assert 272)
   (light-consts      vector                :inline :offset-assert 400)
   (texture-offset    uint16               8        :offset-assert 416)
   )
  :method-count-assert 9
  :size-assert         #x1b0
  :flag-assert         #x9000001b0
  )

(deftype generic-storage (structure)
  ((data uint128 16 :offset-assert 0)
   )
  :method-count-assert 9
  :size-assert         #x100
  :flag-assert         #x900000100
  )

;; - Functions

(define-extern kmalloc (function kheap int kmalloc-flags string pointer))

;; - Symbols

(define-extern *gsf-buffer* gsf-buffer)


;; ----------------------
;; File - lights-h
;; Source Path - engine/gfx/lights-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype vu-lights (structure)
  ((direction vector 3 :inline :offset-assert 0)
   (color     vector 3 :inline :offset-assert 48)
   (ambient   vector :inline   :offset-assert 96)
   )
  :method-count-assert 9
  :size-assert         #x70
  :flag-assert         #x900000070
  )

(deftype light (structure)
  ((direction  vector :inline :offset-assert 0)
   (color      rgbaf  :inline :offset-assert 16)
   (levels     vector :inline :offset-assert 32)
   (level      float          :offset 32)
   (sort-level float          :offset 36)
   )
  :method-count-assert 9
  :size-assert         #x30
  :flag-assert         #x900000030
  )

(deftype light-ellipse (structure)
  ((matrix              matrix :inline :offset-assert 0)
   (color               rgbaf  :inline :offset-assert 64)
   (name                basic          :offset 12)
   (decay-start         float          :offset 28)
   (ambient-point-ratio float          :offset 44)
   (level               float          :offset 60)
   (func-symbol         basic          :offset 76)
   (func                basic          :offset 76)
   )
  :method-count-assert 9
  :size-assert         #x50
  :flag-assert         #x900000050
  )

(deftype light-array (array)
  ()
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype light-volume (basic)
  ((light-array basic  :offset-assert 4)
   )
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )

(deftype light-volume-sphere (light-volume)
  ((bsphere     sphere :inline :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

(deftype light-volume-planes (light-volume)
  ((planes      vertical-planes  :offset-assert 8)
   )
  :method-count-assert 9
  :size-assert         #xc
  :flag-assert         #x90000000c
  )

; todo
(deftype light-volume-array (array)
  ()
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype light-group (structure)
  ((dir0 light :inline :offset-assert 0)
   (dir1 light :inline :offset-assert 48)
   (dir2 light :inline :offset-assert 96)
   (ambi light :inline :offset-assert 144)
   (lights light 4 :inline :offset 0)
   )
  :method-count-assert 9
  :size-assert         #xc0
  :flag-assert         #x9000000c0
  )


;; ----------------------
;; File - ocean-h
;; Source Path - engine/gfx/ocean/ocean-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype ocean-corner (structure)
  ((bsphere      sphere  :inline :offset-assert 0)
   (start-corner vector  :inline :offset-assert 16)
   (y-scales     vector  :inline :offset-assert 32)
   (alphas       vector  :inline :offset-assert 48)
   (colors       uint32 4       :offset-assert 64)
   )
  :method-count-assert 9
  :size-assert         #x50
  :flag-assert         #x900000050
  )

(deftype ocean-wave-info (structure)
  ((frequency  float  :offset-assert 0)
   (amplitude  float  :offset-assert 4)
   (wave-speed float  :offset-assert 8)
   (angle      float  :offset-assert 12)
   (kx         float  :offset-assert 16)
   (ky         float  :offset-assert 20)
   (w          float  :offset-assert 24)
   (flags      int32  :offset-assert 28)
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

(deftype ocean-vertex (structure)
  ((pos vector :inline :offset-assert 0)
   (stq vector :inline :offset-assert 16)
   (col vector :inline :offset-assert 32)
   )
  :method-count-assert 9
  :size-assert         #x30
  :flag-assert         #x900000030
  )

(deftype ocean-spheres (structure)
  ((spheres sphere 36 :inline :offset-assert 0)
   )
  :method-count-assert 9
  :size-assert         #x240
  :flag-assert         #x900000240
  )

(deftype ocean-colors (structure)
  ((colors rgba  2548 :offset-assert 0)
   )
  :method-count-assert 9
  :size-assert         #x27d0
  :flag-assert         #x9000027d0
  )

(deftype ocean-mid-mask (structure)
  ((mask  uint8 8 :offset-assert 0 :do-not-decompile) ;; avoid huge arrays.
   (dword uint64    :offset 0)
   )
  :pack-me
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )

(deftype ocean-mid-indices (basic)
  ((data uint16 36 :offset-assert 4)
   )
  :method-count-assert 9
  :size-assert         #x4c
  :flag-assert         #x90000004c
  )

(deftype ocean-mid-masks (basic)
  ((data (inline-array ocean-mid-mask) :offset-assert 4)
   )
  :pack-me
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )

(deftype ocean-trans-mask (structure)
  ((mask uint16 4 :offset-assert 0)
   (word uint64    :offset 0)
   )
  :pack-me
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )

(deftype ocean-trans-index (structure)
  ((parent int16  :offset-assert 0)
   (child  int16  :offset-assert 2)
   )
  :pack-me
  :method-count-assert 9
  :size-assert         #x4
  :flag-assert         #x900000004
  )

(deftype ocean-trans-indices (basic)
  ((data ocean-trans-index 2304 :inline :offset-assert 4)
   )
  :method-count-assert 9
  :size-assert         #x2404
  :flag-assert         #x900002404
  )

(deftype ocean-near-index (structure)
  ((data uint16 16 :offset-assert 0)
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

(deftype ocean-near-indices (basic)
  ((data (inline-array ocean-near-index)  :offset-assert 4)
   )
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )

(deftype ocean-near-colors (structure)
  ((color0 vector :inline :offset-assert 0)
   (color1 vector :inline :offset-assert 16)
   (color2 vector :inline :offset-assert 32)
   (color3 vector :inline :offset-assert 48)
   )
  :method-count-assert 9
  :size-assert         #x40
  :flag-assert         #x900000040
  )

(deftype ocean-map (basic)
  ((start-corner        vector        :inline :offset-assert 16)
   (far-color           vector        :inline :offset-assert 32)
   (ocean-spheres       ocean-spheres         :offset-assert 48)
   (ocean-colors        ocean-colors          :offset-assert 52)
   (ocean-mid-indices   ocean-mid-indices     :offset-assert 56)
   (ocean-trans-indices ocean-trans-indices   :offset-assert 60)
   (ocean-near-indices  ocean-near-indices    :offset-assert 64)
   (ocean-mid-masks     ocean-mid-masks       :offset-assert 68)
   )
  :method-count-assert 9
  :size-assert         #x48
  :flag-assert         #x900000048
  )

(deftype ocean-trans-strip (structure)
  ((verts uint128 10 :offset-assert 0)
   )
  :method-count-assert 9
  :size-assert         #xa0
  :flag-assert         #x9000000a0
  )

(deftype ocean-trans-strip-array (structure)
  ((data ocean-trans-strip 4 :inline :offset-assert 0)
   )
  :method-count-assert 9
  :size-assert         #x280
  :flag-assert         #x900000280
  )

(deftype ocean-wave-data (structure)
  ((data uint8 1024 :offset-assert 0)
   )
  :method-count-assert 9
  :size-assert         #x400
  :flag-assert         #x900000400
  )

(deftype ocean-wave-frames (structure)
  ((frame ocean-wave-data 64 :inline :offset-assert 0)
   )
  :method-count-assert 9
  :size-assert         #x10000
  ;:flag-assert         #x900010000
  )

(deftype ocean-work (basic)
  ((deltas             vector  :inline :offset-assert 16)
   (map-min            vector  :inline :offset-assert 32)
   (map-max            vector  :inline :offset-assert 48)
   (interp             vector  :inline :offset-assert 64)
   (corner-array       ocean-corner 25 :inline     :offset-assert 80)
   (corner-count       int32           :offset-assert 2080)
   (temp-vecs          vector 4 :inline        :offset-assert 2096)
   (mid-mask-ptrs      pointer 36      :offset-assert 2160)
   (mid-camera-masks   uint64 36     :offset-assert 2304)
   (trans-mask-ptrs    pointer 64      :offset-assert 2592)
   (trans-camera-masks ocean-trans-mask 16 :inline      :offset-assert 2848)
   (trans-temp-masks   ocean-trans-mask 16 :inline     :offset-assert 2976)
   (near-mask-indices  uint16 16      :offset-assert 3104)
   (mid-minx           uint8           :offset-assert 3136)
   (mid-maxx           uint8           :offset-assert 3137)
   (mid-minz           uint8           :offset-assert 3138)
   (mid-maxz           uint8           :offset-assert 3139)
   (near-minx          uint8           :offset-assert 3140)
   (near-maxx          uint8           :offset-assert 3141)
   (near-minz          uint8           :offset-assert 3142)
   (near-maxz          uint8           :offset-assert 3143)
   (temp-minx          uint8           :offset-assert 3144)
   (temp-maxx          uint8           :offset-assert 3145)
   (temp-minz          uint8           :offset-assert 3146)
   (temp-maxz          uint8           :offset-assert 3147)
   )
  :method-count-assert 9
  :size-assert         #xc4c
  :flag-assert         #x900000c4c
  )

(deftype ocean-vu0-work (structure)
  ((scales      vector    :inline :offset-assert 0)
   (mask-hi     vector4w  :inline :offset-assert 16)
   (mask-lo     vector4w  :inline :offset-assert 32)
   (lights      vu-lights :inline :offset-assert 48)
   (wait-to-vu0 uint32            :offset-assert 160)
   )
  :method-count-assert 9
  :size-assert         #xa4
  :flag-assert         #x9000000a4
  )

(deftype ocean-texture-constants (structure)
  ((giftag    qword    :inline :offset-assert 0)
   (buffers   vector4w :inline :offset-assert 16)
   (dests     vector4w :inline :offset-assert 32)
   (start     vector   :inline :offset-assert 48)
   (offsets   vector   :inline :offset-assert 64)
   (constants vector   :inline :offset-assert 80)
   (cam-nrm   vector   :inline :offset-assert 96)
   )
  :method-count-assert 9
  :size-assert         #x70
  :flag-assert         #x900000070
  )

(deftype ocean-texture-work (structure)
  ((sprite-tmpl  dma-gif-packet :inline :offset-assert 0)
   (sprite-tmpl2 dma-gif-packet :inline :offset-assert 32)
   (adgif-tmpl   dma-gif-packet :inline :offset-assert 64)
   )
  :method-count-assert 9
  :size-assert         #x60
  :flag-assert         #x900000060
  )

(deftype ocean-mid-vertex (structure)
  ((stq vector :inline :offset-assert 0)
   (col vector :inline :offset-assert 16)
   (pos vector :inline :offset-assert 32)
   )
  :method-count-assert 9
  :size-assert         #x30
  :flag-assert         #x900000030
  )

(deftype ocean-mid-constants (structure)
  ((hmge-scale     vector       :inline :offset-assert 0)
   (inv-hmge-scale vector       :inline :offset-assert 16)
   (hvdf-offset    vector       :inline :offset-assert 32)
   (fog            vector       :inline :offset-assert 48)
   (constants      vector       :inline :offset-assert 64)
   (constants2     vector       :inline :offset-assert 80)
   (drw-fan        qword        :inline :offset-assert 96)
   (env-fan        qword        :inline :offset-assert 112)
   (drw-adgif      qword        :inline :offset-assert 128)
   (drw-texture    adgif-shader :inline :offset-assert 144)
   (drw-strip-0    qword        :inline :offset-assert 224)
   (drw-strip-1    qword        :inline :offset-assert 240)
   (env-adgif      qword        :inline :offset-assert 256)
   (env-texture    adgif-shader :inline :offset-assert 272)
   (env-strip      qword        :inline :offset-assert 352)
   (env-color      vector       :inline :offset-assert 368)
   (index-table    uint128      8       :offset-assert 384)
   (pos0           vector       :inline :offset-assert 512)
   (pos1           vector       :inline :offset-assert 528)
   (pos2           vector       :inline :offset-assert 544)
   (pos3           vector       :inline :offset-assert 560)
   )
  :method-count-assert 9
  :size-assert         #x240
  :flag-assert         #x900000240
  )

(deftype ocean-mid-upload (structure)
  ((rot    matrix  :inline :offset-assert 0)
   (matrix matrix  :inline :offset-assert 64)
   (colors uint128 108     :offset-assert 128)
   (masks  uint128 2       :offset-assert 1856)
   )
  :method-count-assert 9
  :size-assert         #x760
  :flag-assert         #x900000760
  )

(deftype ocean-mid-upload2 (structure)
  ((rot    matrix   :inline :offset-assert 0)
   (matrix matrix   :inline :offset-assert 64)
   (count  vector4w :inline :offset-assert 128)
   (tex0   vector   :inline :offset-assert 144)
   (tex1   vector   :inline :offset-assert 160)
   (tex2   vector   :inline :offset-assert 176)
   (tex3   vector   :inline :offset-assert 192)
   (clr0   vector   :inline :offset-assert 208)
   (clr1   vector   :inline :offset-assert 224)
   (clr2   vector   :inline :offset-assert 240)
   (clr3   vector   :inline :offset-assert 256)
   (verts  uint128  18      :offset-assert 272)
   )
  :method-count-assert 9
  :size-assert         #x230
  :flag-assert         #x900000230
  )

(deftype ocean-mid-work (structure)
  ((env0    vector  :inline :offset-assert 0)
   (env1    vector  :inline :offset-assert 16)
   (env2    vector  :inline :offset-assert 32)
   (hmg0    vector  :inline :offset-assert 48)
   (hmg1    vector  :inline :offset-assert 64)
   (hmg2    vector  :inline :offset-assert 80)
   (indices uint128 16      :offset-assert 96)
   )
  :method-count-assert 9
  :size-assert         #x160
  :flag-assert         #x900000160
  )

(deftype ocean-near-constants (structure)
  ((hmge-scale     vector       :inline :offset-assert 0)
   (inv-hmge-scale vector       :inline :offset-assert 16)
   (hvdf-offset    vector       :inline :offset-assert 32)
   (fog            vector       :inline :offset-assert 48)
   (constants      vector       :inline :offset-assert 64)
   (constants2     vector       :inline :offset-assert 80)
   (constants3     vector       :inline :offset-assert 96)
   (constants4     vector       :inline :offset-assert 112)
   (drw-fan        qword        :inline :offset-assert 128)
   (drw2-fan       qword        :inline :offset-assert 144)
   (env-fan        qword        :inline :offset-assert 160)
   (drw-adgif      qword        :inline :offset-assert 176)
   (drw-texture    adgif-shader :inline :offset-assert 192)
   (drw-strip      qword        :inline :offset-assert 272)
   (env-adgif      qword        :inline :offset-assert 288)
   (env-texture    adgif-shader :inline :offset-assert 304)
   (env-strip      qword        :inline :offset-assert 384)
   (env-color      vector       :inline :offset-assert 400)
   (drw2-adgif     qword        :inline :offset-assert 416)
   (drw2-tex0      qword        :inline :offset-assert 432)
   (drw2-frame     qword        :inline :offset-assert 448)
   (drw2-strip     qword        :inline :offset-assert 464)
   (drw3-adgif     qword        :inline :offset-assert 480)
   (drw3-frame     qword        :inline :offset-assert 496)
   (index-table    uint128      4       :offset-assert 512)
   )
  :method-count-assert 9
  :size-assert         #x240
  :flag-assert         #x900000240
  )

(deftype ocean-near-upload (structure)
  ((rot          matrix            :inline :offset-assert 0)
   (matrix       matrix            :inline :offset-assert 64)
   (masks        uint128           2       :offset-assert 128)
   (start-height vector4w          :inline :offset-assert 160)
   (start-st     vector            :inline :offset-assert 176)
   (near-colors  ocean-near-colors :inline :offset-assert 192)
   )
  :method-count-assert 9
  :size-assert         #x100
  :flag-assert         #x900000100
  )

(deftype ocean-near-vertex (structure)
  ((stq vector :inline :offset-assert 0)
   (clr vector :inline :offset-assert 16)
   (pos vector :inline :offset-assert 32)
   )
  :method-count-assert 9
  :size-assert         #x30
  :flag-assert         #x900000030
  )

(deftype ocean-near-work (structure)
  ((verts-ptr vector  :inline :offset-assert 0)
   (indices   uint128 16      :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x110
  :flag-assert         #x900000110
  )

;; - Symbols

(define-extern *ocean-work* ocean-work) ;; unknown type
(define-extern *ocean-facing* int) ;; unknown type
(define-extern *ocean-off* symbol) ;; unknown type
(define-extern *ocean-mid-off* symbol) ;; unknown type
(define-extern *ocean-near-off* symbol) ;; unknown type
(define-extern *ocean-heights* symbol) ;; unknown type
(define-extern *ocean-verts* symbol) ;; unknown type


;; ----------------------
;; File - ocean-trans-tables
;; Source Path - engine/gfx/ocean/ocean-trans-tables.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Symbols

(define-extern *ocean-left-table* (pointer float)) ;; unknown type
(define-extern *ocean-right-table* (pointer float)) ;; unknown type
(define-extern *ocean-up-table* (pointer float)) ;; unknown type
(define-extern *ocean-down-table* (pointer float)) ;; unknown type
(define-extern *ocean-down-left-table* (pointer float)) ;; unknown type
(define-extern *ocean-down-right-table* (pointer float)) ;; unknown type
(define-extern *ocean-up-right-table* (pointer float)) ;; unknown type
(define-extern *ocean-up-left-table* (pointer float)) ;; unknown type
(define-extern *ocean-trans-left-table* (pointer float)) ;; unknown type
(define-extern *ocean-trans-right-table* (pointer float)) ;; unknown type
(define-extern *ocean-trans-up-table* (pointer float)) ;; unknown type
(define-extern *ocean-trans-down-table* (pointer float)) ;; unknown type
(define-extern *ocean-trans-down-left-table* (pointer float)) ;; unknown type
(define-extern *ocean-trans-down-right-table* (pointer float)) ;; unknown type
(define-extern *ocean-trans-up-right-table* (pointer float)) ;; unknown type
(define-extern *ocean-trans-up-left-table* (pointer float)) ;; unknown type
(define-extern *ocean-trans-corner-table* (pointer float)) ;; unknown type
(define-extern *ocean-trans-strip-array* (pointer float)) ;; unknown type
(define-extern *ocean-trans-st-table* (pointer float)) ;; unknown type


;; ----------------------
;; File - ocean-tables
;; Source Path - engine/gfx/ocean/ocean-tables.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Symbols

(define-extern *ocean-spheres-village1* ocean-spheres) ;; unknown type
(define-extern *ocean-colors-village1* ocean-colors) ;; unknown type
(define-extern *ocean-near-indices-village1* ocean-near-indices) ;; unknown type
(define-extern *ocean-trans-indices-village1* ocean-trans-indices) ;; unknown type
(define-extern *ocean-mid-indices-village1* ocean-mid-indices) ;; unknown type
(define-extern *ocean-mid-masks-village1* ocean-mid-masks) ;; unknown type
(define-extern *ocean-spheres-village2* ocean-spheres) ;; unknown type
(define-extern *ocean-colors-village2* ocean-colors) ;; unknown type
(define-extern *ocean-near-indices-village2* ocean-near-indices) ;; unknown type
(define-extern *ocean-trans-indices-village2* ocean-trans-indices) ;; unknown type
(define-extern *ocean-mid-indices-village2* ocean-mid-indices) ;; unknown type
(define-extern *ocean-mid-masks-village2* ocean-mid-masks) ;; unknown type
(define-extern *ocean-near-indices-sunken* ocean-near-indices) ;; unknown type
(define-extern *ocean-trans-indices-sunken* ocean-trans-indices) ;; unknown type
(define-extern *ocean-mid-indices-sunken* ocean-mid-indices) ;; unknown type
(define-extern *ocean-mid-masks-sunken* ocean-mid-masks) ;; unknown type
(define-extern *ocean-map-village1* ocean-map) ;; unknown type
(define-extern *ocean-map-village2* ocean-map) ;; unknown type
(define-extern *ocean-map-sunken* ocean-map) ;; unknown type


;; ----------------------
;; File - ocean-frames
;; Source Path - engine/gfx/ocean/ocean-frames.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Symbols

(define-extern *ocean-wave-frames* (pointer uint32))


;; ----------------------
;; File - sky-h
;; Source Path - engine/gfx/sky/sky-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

;;;;;;;;;;
;;;;;;;;;;
(deftype sky-color-hour (structure)
  ((snapshot1   int32  :offset-assert 0)
   (snapshot2   int32  :offset-assert 4)
   (morph-start float  :offset-assert 8)
   (morph-end   float  :offset-assert 12)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype sky-color-day (structure)
  ((hour sky-color-hour 24 :inline :offset-assert 0)
   )
  :method-count-assert 9
  :size-assert         #x180
  :flag-assert         #x900000180
  )

(deftype sky-circle-data (structure)
  ((data vector 17 :inline :offset-assert 0)
   )
  :method-count-assert 9
  :size-assert         #x110
  :flag-assert         #x900000110
  )

(deftype sky-sun-data (structure)
  ((data           uint128 4       :offset-assert 0)
   (pos            vector  :inline :offset 0)
   (r-sun          float           :offset 16)
   (r-halo         float           :offset 20)
   (r-aurora       float           :offset 24)
   (c-sun-start    uint32          :offset 32)
   (c-sun-end      uint32          :offset 48)
   (c-halo-start   uint32          :offset 36)
   (c-halo-end     uint32          :offset 52)
   (c-aurora-start uint32          :offset 40)
   (c-aurora-end   uint32          :offset 56)
   )
  :method-count-assert 9
  :size-assert         #x40
  :flag-assert         #x900000040
  )

(deftype sky-moon-data (structure)
  ((data  uint128 2       :offset-assert 0)
   (pos   vector  :inline :offset 0)
   (scale vector  :inline :offset 16)
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

(deftype sky-orbit (structure)
  ((high-noon float  :offset-assert 0)
   (tilt      float  :offset-assert 4)
   (rise      float  :offset-assert 8)
   (dist      float  :offset-assert 12)
   (min-halo  float  :offset-assert 16)
   (max-halo  float  :offset-assert 20)
   )
  :allow-misaligned
  :method-count-assert 9
  :size-assert         #x18
  :flag-assert         #x900000018
  )

(deftype sky-upload-data (basic)
  (
   ;(data   UNKNOWN         27      :offset-assert 16)
   (circle sky-circle-data :inline :offset-assert 16)
   (sun    sky-sun-data 2 :inline       :offset-assert 288)
   (moon   sky-moon-data   :inline :offset-assert 416)
   (data   uint128         27      :offset 16)
   )
  :method-count-assert 9
  :size-assert         #x1c0
  :flag-assert         #x9000001c0
  )

(deftype sky-parms (basic)
  ;; check - the alignment on some of these.
  ((orbit             sky-orbit 3     :inline :offset-assert 4)
   (upload-data       sky-upload-data :inline :offset-assert 112)
   (sun-lights        light-group     :inline :offset-assert 560)
   (moon-lights       light-group     :inline :offset-assert 752)
   (default-lights    light-group     :inline :offset-assert 944)
   (default-vu-lights vu-lights       :inline :offset-assert 1136)
   )
  (:methods
    (new (symbol type) _type_ 0)
    )
  :method-count-assert 9
  :size-assert         #x4e0
  :flag-assert         #x9000004e0
  )

(deftype sky-tng-data (basic)
  ((giftag-base  qword   :inline :offset-assert 16)
   (giftag-roof  qword   :inline :offset-assert 32)
   (giftag-ocean qword   :inline :offset-assert 48)
   (fog          vector  :inline :offset-assert 64)
   (sky          uint32 8       :offset-assert 80)
   (time         float           :offset-assert 112)
   (off-s-0      uint16          :offset-assert 116)
   (off-t-0      uint16          :offset-assert 118)
   (off-s-1      uint16          :offset-assert 120)
   (off-t-1      uint16          :offset-assert 122)
   )
  :method-count-assert 9
  :size-assert         #x7c
  :flag-assert         #x90000007c
  )

(deftype sky-work (structure)
  ((adgif-tmpl dma-gif-packet :inline :offset-assert 0)
   (draw-tmpl  dma-gif-packet :inline :offset-assert 32)
   (blend-tmpl dma-gif-packet :inline :offset-assert 64)
   (sky-data   uint128        5       :offset-assert 96)
   (cloud-data uint128        5       :offset-assert 176)
   )
  :method-count-assert 9
  :size-assert         #x100
  :flag-assert         #x900000100
  )

(deftype sky-vertex (structure)
  ((pos vector :inline :offset-assert 0)
   (stq vector :inline :offset-assert 16)
   (col vector :inline :offset-assert 32)
   )
  :method-count-assert 9
  :size-assert         #x30
  :flag-assert         #x900000030
  )

;; - Symbols

(define-extern *sky-parms* sky-parms) ;; unknown type
(define-extern *sky-upload-data* sky-upload-data) ;; unknown type
(define-extern *sky-drawn* symbol) ;; unknown type
(define-extern *cloud-drawn* symbol) ;; unknown type


;; ----------------------
;; File - mood-h
;; Source Path - engine/gfx/mood-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype mood-fog (structure)
  ((fog-color   vector :inline :offset-assert 0)
   (fog-dists   vector :inline :offset-assert 16)
   (fog-start   meters         :offset 16)
   (fog-end     meters         :offset 20)
   (fog-max     float          :offset 24)
   (fog-min     float          :offset 28)
   (erase-color vector :inline :offset-assert 32)
   )
  :method-count-assert 9
  :size-assert         #x30
  :flag-assert         #x900000030
  )

(deftype mood-fog-table (structure)
  ((data mood-fog 8 :inline :offset-assert 0)
   )
  :method-count-assert 9
  :size-assert         #x180
  :flag-assert         #x900000180
  )

(deftype mood-lights (structure)
  ((direction vector :inline :offset-assert 0)
   (lgt-color vector :inline :offset-assert 16)
   (prt-color vector :inline :offset-assert 32)
   (amb-color vector :inline :offset-assert 48)
   (shadow    vector :inline :offset-assert 64)
   )
  :method-count-assert 9
  :size-assert         #x50
  :flag-assert         #x900000050
  )

(deftype mood-lights-table (structure)
  ((data mood-lights 8 :inline :offset-assert 0)
   )
  :method-count-assert 9
  :size-assert         #x280
  :flag-assert         #x900000280
  )

(deftype mood-sun (structure)
  ((sun-color vector :inline :offset-assert 0)
   (env-color vector :inline :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

(deftype mood-sun-table (structure)
  ((data mood-sun 8 :inline :offset-assert 0)
   )
  :method-count-assert 9
  :size-assert         #x100
  :flag-assert         #x900000100
  )

(deftype mood-context (basic)
  ((mood-fog-table       mood-fog-table            :offset-assert 4)
   (mood-lights-table    mood-lights-table         :offset-assert 8)
   (mood-sun-table       mood-sun-table            :offset-assert 12)
   (fog-interp           sky-color-day             :offset-assert 16)
   (palette-interp       sky-color-day             :offset-assert 20)
   (sky-texture-interp   sky-color-day             :offset-assert 24)
   (current-fog          mood-fog          :inline :offset-assert 32)
   (current-sun          mood-sun          :inline :offset-assert 80)
   (current-prt-color    vector            :inline :offset-assert 112)
   (current-shadow       vector            :inline :offset-assert 128)
   (current-shadow-color vector            :inline :offset-assert 144)
   (light-group          light-group     8 :inline :offset-assert 160)
   (times                vector  8 :inline         :offset-assert 1696)
   (sky-times            float           8         :offset-assert 1824)
   (itimes               vector4w        4 :inline :offset-assert 1856)
   (state                uint8             16      :offset-assert 1920)
   (num-stars            float                     :offset-assert 1936)
   )
  (:methods
    (new (symbol type) _type_ 0)
    )
  :method-count-assert 9
  :size-assert         #x794
  :flag-assert         #x900000794
  )


;; ----------------------
;; File - time-of-day-h
;; Source Path - engine/gfx/time-of-day-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype palette-fade-control (structure)
  ((trans      vector :inline :offset-assert 0)
   (fade       float          :offset-assert 16)
   (actor-dist float          :offset-assert 20)
   )
  :method-count-assert 9
  :size-assert         #x18
  :flag-assert         #x900000018
  )

(deftype palette-fade-controls (basic)
  ((control palette-fade-control 8 :inline :offset-assert 16)
   )
  :method-count-assert 11
  :size-assert         #x110
  :flag-assert         #xb00000110
  (:methods
    (dummy-9 () none 9)
    (dummy-10 () none 10)
    )
  )

(deftype time-of-day-proc (process)
  ((year            int32  :offset-assert 112)
   (month           int32  :offset-assert 116)
   (week            int32  :offset-assert 120)
   (day             int32  :offset-assert 124)
   (hour            int32  :offset-assert 128)
   (minute          int32  :offset-assert 132)
   (second          int32  :offset-assert 136)
   (frame           int32  :offset-assert 140)
   (time-of-day     float  :offset-assert 144)
   (time-ratio      float  :offset-assert 148)
   (star-count      int32  :offset-assert 152)
   (stars           basic  :offset-assert 156)
   (sun-count       int32  :offset-assert 160)
   (sun             basic  :offset-assert 164)
   (green-sun-count int32  :offset-assert 168)
   (green-sun       basic  :offset-assert 172)
   (moon-count      int32  :offset-assert 176)
   (moon            basic  :offset-assert 180)
   )
  :heap-base #x50
  :method-count-assert 14
  :size-assert         #xb8
  :flag-assert         #xe005000b8
  ;; inherited inspect of process
  )

(deftype time-of-day-palette (basic)
  ((width  int32     :offset-assert 4)
   (height int32     :offset-assert 8)
   (pad    int32     :offset-assert 12)
   (data   int32 1 :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x14
  :flag-assert         #x900000014
  )

(deftype time-of-day-context (basic)
  ((active-count         uint32                :offset-assert 4)
   (interp               float                 :offset-assert 8)
   (current-interp       float                 :offset-assert 12)
   (moods                uint64      2         :offset-assert 16)
   (current-fog          mood-fog      :inline :offset-assert 32)
   (current-sun          mood-sun      :inline :offset-assert 80)
   (current-prt-color    vector        :inline :offset-assert 112)
   (current-shadow       vector        :inline :offset-assert 128)
   (current-shadow-color vector        :inline :offset-assert 144)
   (light-group          light-group 9 :inline :offset-assert 160)
   (title-light-group    light-group   :inline :offset-assert 1888)
   (time                 float                 :offset-assert 2080)
   (target-interp        float                 :offset-assert 2084)
   (erase-color          uint32                :offset-assert 2088)
   (num-stars            float                 :offset-assert 2092)
   (light-masks-0        uint8       2         :offset-assert 2096)
   (light-masks-1        uint8       2         :offset-assert 2098)
   (light-interp         uint32      2         :offset-assert 2100)
   (sky                  basic                 :offset-assert 2108)
   (sun-fade             float                 :offset-assert 2112)
   (title-updated        symbol                :offset-assert 2116)
   )
  :method-count-assert 9
  :size-assert         #x848
  :flag-assert         #x900000848
  )

(deftype time-of-day-dma (structure)
  ((outa  uint32 256 :offset-assert 0)
   (outb  uint32 256 :offset-assert 1024)
   (banka uint32 256 :offset-assert 2048)
   (bankb uint32 256 :offset-assert 3072)
   )
  :method-count-assert 9
  :size-assert         #x1000
  :flag-assert         #x900001000
  )

;; - Symbols

(define-extern *palette-fade-controls* palette-fade-controls) ;; unknown type
(define-extern *time-of-day-mode* int) ;; unknown type
(define-extern *time-of-day-context* time-of-day-context) ;; unknown type


;; ----------------------
;; File - art-h
;; Source Path - engine/data/art-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype joint-anim (basic)
  ((name   string :offset-assert 4)
   (number int16  :offset-assert 8)
   (length int16  :offset-assert 10)
   )
  :method-count-assert 9
  :size-assert         #xc
  :flag-assert         #x90000000c
  )

(deftype joint-anim-matrix (joint-anim)
  ((data  matrix :inline :dynamic :offset 16)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype joint-anim-transformq (joint-anim)
  ((data  transformq :inline :dynamic :offset 16)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype joint-anim-drawable (joint-anim)
  ((data   drawable :dynamic :offset-assert 12) ;; guess
   )
  :method-count-assert 9
  :size-assert         #xc
  :flag-assert         #x90000000c
  )

(declare-type joint-anim-compressed-hdr structure)
(deftype joint-anim-compressed (joint-anim)
  ((data  joint-anim-compressed-hdr :dynamic :offset-assert 12) ;; guess
   )
  :method-count-assert 9
  :size-assert         #xc
  :flag-assert         #x90000000c
  )

(deftype joint-anim-frame (structure)
  ((matrices matrix 2 :inline :offset-assert 0)
   (data     uint32   :dynamic :offset-assert 128) ;; guess
   )
  :method-count-assert 9
  :size-assert         #x80
  :flag-assert         #x900000080
  (:methods
    (new (symbol type int) _type_ 0)
    )
  )

(deftype joint-anim-compressed-hdr (structure)
  ((control-bits uint32 14  :offset-assert 0)
   (num-joints   uint32     :offset-assert 56)
   (matrix-bits  uint32     :offset-assert 60)
   )
  :method-count-assert 9
  :size-assert         #x40
  :flag-assert         #x900000040
  )

(deftype joint-anim-compressed-fixed (structure)
  ((hdr       joint-anim-compressed-hdr :inline :offset-assert 0)
   (offset-64 uint32                            :offset-assert 64)
   (offset-32 uint32                            :offset-assert 68)
   (offset-16 uint32                            :offset-assert 72)
   (reserved  uint32                            :offset-assert 76)
   (data      vector                133 :inline :offset-assert 80) ;; guess
   )
  :method-count-assert 9
  :size-assert         #x8a0
  :flag-assert         #x9000008a0
  )

(deftype joint-anim-compressed-frame (structure)
  ((offset-64 uint32      :offset-assert 0)
   (offset-32 uint32      :offset-assert 4)
   (offset-16 uint32      :offset-assert 8)
   (reserved  uint32      :offset-assert 12)
   (data      vector 133 :inline :offset-assert 16) ;; guess
   )
  :method-count-assert 9
  :size-assert         #x860
  :flag-assert         #x900000860
  )

(deftype joint-anim-compressed-control (structure)
  ((num-frames uint32                        :offset-assert 0)
   (fixed-qwc  uint32                        :offset-assert 4)
   (frame-qwc  uint32                        :offset-assert 8)
   (fixed      joint-anim-compressed-fixed   :offset-assert 12)
   (data       uint32 1                      :offset-assert 16) ;; guess
   )
  :method-count-assert 9
  :size-assert         #x14
  :flag-assert         #x900000014
  )

(declare-type art-element art)
(deftype art (basic)
  ((name   string  :offset 8)
   (length int32   :offset-assert 12)
   (extra  entity  :offset-assert 16) ; possible types: [res-lump]
                                      ; this field is very strange
   )
  :method-count-assert 13
  :size-assert         #x14
  :flag-assert         #xd00000014
  (:methods
    (dummy-9 (_type_) _type_ 9)
    (dummy-10 (_type_ string type) art-element 10)
    (dummy-11 (_type_ string type) int 11)
    (dummy-12 (_type_) symbol 12)
    )
  )

(deftype art-element (art)
  ((pad uint8 12))
  :method-count-assert 13
  :size-assert         #x20
  :flag-assert         #xd00000020
  (:methods
    (dummy-9 (_type_) _type_ 9)
    (dummy-10 (_type_ string type) art-element 10)
    (dummy-11 (_type_ string type) int 11)
    (dummy-12 (_type_) symbol 12)
    )
  )

(deftype art-mesh-anim (art-element)
  ((data basic :dynamic))
  :method-count-assert 13
  :size-assert         #x20
  :flag-assert         #xd00000020
  )

(deftype art-joint-anim (art-element)
  ;; figured out manually from custom inspect.
  ((_unknown (pointer int16) :offset 4) ;; no clue. used in mem-usage
   (speed float :offset 20)
   (artist-base float :offset 24)
   (artist-step float :offset 28)
   (master-art-group-name string :offset 32)
   (master-art-group-index int32 :offset 36)
   (frames pointer :offset 44) ;; this structure doesn't exist? it's a structure with an array of joint-anim-compressed-hdr starting at offset 12
   (data joint-anim-compressed :dynamic :offset-assert 48)
   )
  :method-count-assert 13
  :size-assert         #x30
  :flag-assert         #xd00000030
  )

(deftype art-group (art)
  ((info  file-info    :offset 4)
   (data  art-element  :dynamic :offset 32)
   )
  :method-count-assert 15
  :size-assert         #x20
  :flag-assert         #xf00000020
  (:methods
    (link-art! (_type_) art-group 13)
    (unlink-art! (_type_) int 14)
    )
  )

(deftype art-mesh-geo (art-element)
  ((data  basic  :dynamic :offset-assert 32)
   )
  :method-count-assert 13
  :size-assert         #x20
  :flag-assert         #xd00000020
  )

(deftype art-joint-geo (art-element)
  ((data  joint  :dynamic :offset-assert 32)
   )
  :method-count-assert 13
  :size-assert         #x20
  :flag-assert         #xd00000020
  )

(deftype skeleton-group (basic)
  ((art-group-name basic           :offset-assert 4)
   (jgeo           int32           :offset-assert 8)
   (janim          int32           :offset-assert 12)
   (bounds         vector  :inline :offset-assert 16)
   (radius         meters          :offset 28)
   (mgeo           uint16 4        :offset-assert 32)
   (max-lod        int32           :offset-assert 40)
   (lod-dist       float   4       :offset-assert 44)
   (longest-edge   meters          :offset-assert 60)
   (texture-level  int8            :offset-assert 64)
   (version        int8            :offset-assert 65)
   (shadow         int8            :offset-assert 66)
   (sort           int8            :offset-assert 67)
   (_pad uint8 4) ;; what was here?
   )
  :method-count-assert 9
  :size-assert         #x48
  :flag-assert         #x900000048
  )

(declare-type merc-ctrl art-element)
(deftype lod-group (structure)
  ((geo  merc-ctrl   :offset-assert 0)
   (dist meters  :offset-assert 4)
   )
  :pack-me
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )

(deftype lod-set (structure)
  ((lod     lod-group 4 :inline :offset-assert 0)
   (max-lod int8      :offset-assert 32)
   )
  :pack-me
  :method-count-assert 10
  :size-assert         #x21
  :flag-assert         #xa00000021
  (:methods
    (dummy-9 (_type_) _type_ 9)
    )
  )

(declare-type ripple-control basic)
(declare-type shadow-control basic)
(declare-type shadow-geo art-element)
(deftype draw-control (basic)
  ((status                   uint8           :offset-assert 4)
   (matrix-type              uint8           :offset-assert 5)
   (data-format              uint8           :offset-assert 6)
   (global-effect            uint8           :offset-assert 7)
   (art-group                art-group       :offset-assert 8)
   (jgeo                     art-joint-geo   :offset-assert 12)
   (mgeo                     merc-ctrl       :offset-assert 16)
   (dma-add-func             function        :offset-assert 20)
   (skeleton                 skeleton-group  :offset-assert 24) ;; or cspace-array or shadow-control
   (lod-set                  lod-set :inline :offset-assert 28)
   (lod                      lod-group 4 :inline :offset 28)
   (max-lod                  int8                :offset 60)
   (force-lod                int8            :offset-assert 61)
   (cur-lod                  int8            :offset-assert 62)
   (desired-lod              int8            :offset-assert 63)
   (ripple                   ripple-control  :offset-assert 64)
   (longest-edge             meters          :offset-assert 68)
   (longest-edge?            uint32          :offset 68)
   (light-index              uint8           :offset-assert 72)
   (dummy                    uint8 2         :offset-assert 73)
   (death-draw-overlap       uint8           :offset-assert 75)
   (death-timer              uint8           :offset-assert 76)
   (death-timer-org          uint8           :offset-assert 77)
   (death-vertex-skip        uint16          :offset-assert 78)
   (death-effect             uint32          :offset-assert 80)
   (sink-group               dma-foreground-sink-group :offset-assert 84) ;; dma-foreground-sink-group?
   (process                  process         :offset-assert 88)
   (shadow                   shadow-geo           :offset-assert 92)
   (shadow-ctrl              shadow-control           :offset-assert 96)
   (origin                   vector  :inline :offset-assert 112)
   (bounds                   vector  :inline :offset-assert 128)
   (radius                   meters          :offset 140)
   (color-mult               rgbaf   :inline :offset-assert 144)
   (color-emissive           rgbaf   :inline :offset-assert 160)
   (secondary-interp         float           :offset-assert 176)
   (current-secondary-interp float           :offset-assert 180)
   (shadow-mask              uint8           :offset-assert 184)
   (level-index              uint8           :offset-assert 185)
   (origin-joint-index       uint8           :offset-assert 186)
   (shadow-joint-index       uint8           :offset-assert 187)
   )
  :method-count-assert 12
  :size-assert         #xbc
  :flag-assert         #xc000000bc
  (:methods
    (new (symbol type process art-joint-geo) _type_ 0)
    (dummy-9 (_type_) (pointer int8) 9)
    (dummy-10 (_type_ int int) int 10)
    (dummy-11 (_type_ pointer) int 11)
    )
  )

;; - Functions

(define-extern new-dynamic-structure (function symbol type int structure)) ;; unknown type


;; ----------------------
;; File - generic-vu1-h
;; Source Path - engine/gfx/generic/generic-vu1-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype pris-mtx (structure)
  ((data   float 32      :offset 0)
   (vector vector 8 :inline       :offset 0)
   (t-mtx  matrix  :inline :offset 0)
   (n-mtx  matrix3 :inline :offset 64)
   (scale  vector  :inline :offset 112)
   )
  :method-count-assert 9
  :size-assert         #x80
  :flag-assert         #x900000080
  )

(deftype generic-pris-mtx-save (structure)
  ((loc-mtx pris-mtx :inline :offset-assert 0)
   (par-mtx pris-mtx :inline :offset-assert 128)
   (dif-mtx pris-mtx :inline :offset-assert 256)
   )
  :method-count-assert 9
  :size-assert         #x180
  :flag-assert         #x900000180
  )

(deftype generic-constants (structure)
  ((fog         vector :inline :offset-assert 0)
   (adgif       qword  :inline :offset-assert 16)
   (giftag      qword  :inline :offset-assert 32)
   (hvdf-offset vector :inline :offset-assert 48)
   (hmge-scale  vector :inline :offset-assert 64)
   (invh-scale  vector :inline :offset-assert 80)
   (guard       vector :inline :offset-assert 96)
   (adnop       qword  :inline :offset-assert 112)
   (flush       qword  :inline :offset-assert 128)
   (stores      qword  :inline :offset-assert 144)
   )
  :method-count-assert 9
  :size-assert         #xa0
  :flag-assert         #x9000000a0
  )


;; ----------------------
;; File - merc-h
;; Source Path - engine/gfx/merc/merc-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype merc-blend-data (structure) ;; was unknown!
  ((int8-data int8 :dynamic :offset-assert 0)
   )
  )

(deftype ripple-merc-query (inline-array-class)
  ((start-vertex     int32            :offset-assert 16)
   (vertex-skip      int32            :offset-assert 20)
   (vertex-count     int32            :offset-assert 24)
   (current-loc      int32            :offset-assert 28)
   (data2             uint8 :dynamic :offset-assert 32) ;; renamed from data. suspect inline-array has some magic.
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

(deftype merc-byte-header (structure)
  ((srcdest-off        uint8      :offset-assert 0)
   (rgba-off           uint8      :offset-assert 1)
   (lump-off           uint8      :offset-assert 2)
   (fp-off             uint8      :offset-assert 3)
   (mat1-cnt           uint8      :offset-assert 4)
   (mat2-cnt           uint8      :offset-assert 5)
   (mat3-cnt           uint8      :offset-assert 6)
   (samecopy-cnt       uint8      :offset-assert 7)
   (crosscopy-cnt      uint8      :offset-assert 8)
   (strip-len          uint8      :offset-assert 9)
   (mm-quadword-fp-off uint8      :offset-assert 10)
   (mm-quadword-size   uint8      :offset-assert 11)
   (perc-off           uint8      :offset-assert 12)
   (mat-slot           uint8 10 :offset-assert 13)
   )
  :method-count-assert 9
  :size-assert         #x17
  :flag-assert         #x900000017
  )

(deftype merc-fragment (structure)
  ((header merc-byte-header :inline :offset-assert 0)
   (rest   uint8          1       :offset-assert 23)
   )
  :method-count-assert 10
  :size-assert         #x18
  :flag-assert         #xa00000018
  (:methods
    (dummy-9 () none 9)
    )
  )

(deftype merc-vtx (structure)
  ((mat-0 uint8  :offset-assert 0)
   (mat-1 uint8  :offset-assert 1)
   (nrm-x uint8  :offset-assert 2)
   (pos-x uint8  :offset-assert 3)
   (dst-0 uint8  :offset-assert 4)
   (dst-1 uint8  :offset-assert 5)
   (nrm-y uint8  :offset-assert 6)
   (pos-y uint8  :offset-assert 7)
   (tex-s uint8  :offset-assert 8)
   (tex-t uint8  :offset-assert 9)
   (nrm-z uint8  :offset-assert 10)
   (pos-z uint8  :offset-assert 11)
   )
  :method-count-assert 9
  :size-assert         #xc
  :flag-assert         #x90000000c
  )

(deftype merc-fp-header (structure)
  ((x-add            float  :offset-assert 0)
   (y-add            float  :offset-assert 4)
   (z-add            float  :offset-assert 8)
   (shader-cnt       uint8  :offset-assert 12)
   (kick-info-offset uint8  :offset-assert 13)
   (kick-info-step   uint8  :offset-assert 14)
   (hword-cnt        uint8  :offset-assert 15)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype merc-mat-dest (structure)
  ((matrix-number uint8  :offset-assert 0)
   (matrix-dest   uint8  :offset-assert 1)
   )
  :method-count-assert 9
  :size-assert         #x2
  :flag-assert         #x900000002
  )

(deftype merc-fragment-control (structure)
  ((unsigned-four-count uint8            :offset-assert 0)
   (lump-four-count     uint8            :offset-assert 1)
   (fp-qwc              uint8            :offset-assert 2)
   (mat-xfer-count      uint8            :offset-assert 3)
   (mat-dest-data       uint8 :dynamic :offset-assert 4)
   )
  :method-count-assert 9
  :size-assert         #x4
  :flag-assert         #x900000004
  )

(deftype merc-blend-ctrl (structure)
  ((blend-vtx-count     uint8            :offset-assert 0)
   (nonzero-index-count uint8            :offset-assert 1)
   (bt-index            uint8 :dynamic :offset-assert 2)
   )
  :method-count-assert 9
  :size-assert         #x2
  :flag-assert         #x900000002
  )

(deftype mei-envmap-tint (structure)
  ((fade0 float   :offset-assert 0)
   (fade1 float   :offset-assert 4)
   (tint  uint32  :offset-assert 8)
   (dummy int32   :offset-assert 12)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype mei-texture-scroll (structure)
  ((max-dist     float     :offset-assert 0)
   (st-int-scale uint8     :offset-assert 4)
   (time-factor  uint8     :offset-assert 5)
   (scroll-dir   uint8     :offset-assert 6)
   (cached-time  uint8     :offset-assert 7)
   (time-delta   uint8     :offset-assert 8)
   (dummy        uint8 7 :offset-assert 9)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype mei-ripple (structure)
  ((x-base    float  :offset-assert 0)
   (z-base    float  :offset-assert 4)
   (grid-size float  :offset-assert 8)
   (angle     float  :offset-assert 12)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype merc-extra-info (structure)
  ((envmap-tint-offset    uint8      :offset-assert 0)
   (shader-offset         uint8      :offset-assert 1)
   (texture-scroll-offset uint8      :offset-assert 2)
   (ripple-offset         uint8      :offset-assert 3)
   (dummy                 uint8 12 :offset-assert 4)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype merc-effect (structure)
  ((frag-geo         merc-fragment          :offset-assert 0)
   (frag-ctrl        merc-fragment-control  :offset-assert 4)
   (blend-data       merc-blend-data        :offset-assert 8)
   (blend-ctrl       merc-blend-ctrl        :offset-assert 12)
   (dummy0           uint8                  :offset-assert 16)
   (effect-bits      uint8                  :offset-assert 17)
   (frag-count       uint16                 :offset-assert 18)
   (blend-frag-count uint16                 :offset-assert 20)
   (tri-count        uint16                 :offset-assert 22)
   (dvert-count      uint16                 :offset-assert 24)
   (dummy1           uint8                  :offset-assert 26)
   (envmap-usage     uint8                  :offset-assert 27)
   (extra-info       merc-extra-info        :offset-assert 28)
   )
  :method-count-assert 10
  :size-assert         #x20
  :flag-assert         #xa00000020
  (:methods
    (dummy-9 () none 9)
    )
  )

(deftype merc-eye-ctrl (structure)
  ((eye-slot      int8                 :offset-assert 0)
   (shader-offset int8                 :offset-assert 1)
   (shader-count  int8                 :offset-assert 2)
   (iris-shader   adgif-shader :inline :offset-assert 16)
   (pupil-shader  adgif-shader :inline :offset-assert 96)
   (lid-shader    adgif-shader :inline :offset-assert 176)
   (shader        adgif-shader 3 :inline :offset 16) ;; moved
   )
  :method-count-assert 9
  :size-assert         #x100
  :flag-assert         #x900000100
  )

(deftype merc-eye-anim-frame (structure)
  ((pupil-trans-x int8    :offset-assert 0)
   (pupil-trans-y int8    :offset-assert 1)
   (blink         int8    :offset-assert 2)
   (iris-scale    int8    :offset 4)
   (pupil-scale   int8    :offset-assert 5)
   (lid-scale     int8    :offset-assert 6)
   (dword         uint64  :offset 0)
   )
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )

(deftype merc-eye-anim-block (structure)
  ((max-frame int16            :offset-assert 0)
   (data      uint8 :dynamic :offset 8)
   )
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )

(deftype merc-ctrl-header (structure)
  ((xyz-scale              float            :offset-assert 0)
   (st-magic               uint32           :offset-assert 4)
   (st-out-a               uint32           :offset-assert 8)
   (st-out-b               uint32           :offset-assert 12)
   (st-vif-add             uint32           :offset-assert 16)
   (st-int-off             uint16           :offset-assert 20)
   (st-int-scale           uint16           :offset-assert 22)
   (effect-count           uint32           :offset-assert 24)
   (blend-target-count     uint32           :offset-assert 28)
   (fragment-count         uint16           :offset-assert 32)
   (tri-count              uint16           :offset-assert 34)
   (matrix-count           uint8            :offset-assert 36)
   (shader-count           uint8            :offset-assert 37)
   (transform-vertex-count uint16           :offset-assert 38)
   (dvert-count            uint16           :offset-assert 40)
   (one-mat-count          uint16           :offset-assert 42)
   (two-mat-count          uint16           :offset-assert 44)
   (two-mat-reuse-count    uint16           :offset-assert 46)
   (three-mat-count        uint16           :offset-assert 48)
   (three-mat-reuse-count  uint16           :offset-assert 50)
   (shader-upload-count    uint8            :offset-assert 52)
   (matrix-upload-count    uint8            :offset-assert 53)
   (same-copy-count        uint16           :offset-assert 54)
   (cross-copy-count       uint16           :offset-assert 56)
   (num-verts              uint16           :offset-assert 58)
   (longest-edge           float            :offset-assert 60)
   (eye-ctrl               merc-eye-ctrl    :offset-assert 64)
   (masks                  uint32       3  :offset-assert 68)
   (dummy-bytes            uint8       48 :offset 32)
   (envmap-tint            uint32           :offset 32)
   (query                  basic            :offset 36)
   (needs-clip             uint8            :offset 40)
   (use-isometric          uint8            :offset 41)
   (use-attached-shader    uint8            :offset 42)
   (display-triangles      uint8            :offset 43)
   (death-vertex-skip      uint16           :offset 44)
   (death-start-vertex     uint16           :offset 46)
   (death-effect           uint32           :offset 48)
   (use-translucent        uint8            :offset 52)
   (display-this-fragment  uint8            :offset 53)
   )
  :method-count-assert 9
  :size-assert         #x50
  :flag-assert         #x900000050
  ;; field xyz-scale is a float printed as hex?
  )

(deftype merc-ctrl (art-element)
  ((num-joints int32                     :offset 20)
   (header     merc-ctrl-header :inline  :offset-assert 32)
   (effect     merc-effect         :inline :dynamic :offset-assert 112)
   )
  :method-count-assert 13
  :size-assert         #x70
  :flag-assert         #xd00000070
  )

(deftype merc-vu1-low-mem (structure)
  ((tri-strip-gif qword   :inline :offset-assert 0)
   (ad-gif        qword   :inline :offset-assert 16)
   (hvdf-offset   vector  :inline :offset-assert 32)
   (perspective   uint128 4       :offset-assert 48)
   (fog           vector  :inline :offset-assert 112)
   )
  :method-count-assert 9
  :size-assert         #x80
  :flag-assert         #x900000080
  )

(deftype ripple-wave (structure)
  ((scale float  :offset-assert 0)
   (offs  float  :offset-assert 4)
   (xdiv  int16  :offset-assert 8)
   (zdiv  int16  :offset-assert 10)
   (speed float  :offset-assert 12)
   (xmul  float  :offset-assert 16)
   (zmul  float  :offset-assert 20)
   (delta float  :offset-assert 24)
   )
  :pack-me
  :method-count-assert 9
  :size-assert         #x1c
  :flag-assert         #x90000001c
  )

(deftype ripple-wave-set (basic)
  ((count        int32     :offset-assert 4)
   (converted    basic     :offset-assert 8)
   (frame-save   uint32    :offset-assert 12)
   (normal-scale float     :offset-assert 16)
   (wave         ripple-wave 4 :inline :offset-assert 20)
   )
  :method-count-assert 9
  :size-assert         #x84
  :flag-assert         #x900000084
  )

(deftype ripple-control (basic)
  ((global-scale            float  :offset-assert 4)
   (last-frame-scale        float  :offset-assert 8)
   (close-fade-dist         float  :offset-assert 12)
   (far-fade-dist           float  :offset-assert 16)
   (faded-scale             float  :offset-assert 20)
   (individual-normal-scale float  :offset-assert 24)
   (waveform                ripple-wave-set  :offset-assert 28)
   (send-query              basic  :offset-assert 32)
   (query                   basic  :offset-assert 36)
   )
  (:methods
    (new (symbol type) _type_ 0)
    )
  :method-count-assert 9
  :size-assert         #x28
  :flag-assert         #x900000028
  )

;; - Functions

(define-extern merc-fragment-fp-data (function merc-fragment pointer))


;; ----------------------
;; File - generic-merc-h
;; Source Path - engine/gfx/merc/generic-merc-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype merc-matrix (structure)
  ((quad   uint128 8 :offset-assert 0)
   (vector vector 8 :inline :offset 0)
   (tag    uint64    :offset 0)
   )
  :method-count-assert 9
  :size-assert         #x80
  :flag-assert         #x900000080
  )

(deftype generic-merc-tag (dma-packet)
  ((next-ptr uint32   :offset 12)
   (size     uint32   :offset 8)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype generic-merc-ctrl (structure)
  ((tag    generic-merc-tag :inline :offset-assert 0)
   (lights vu-lights        :inline :offset-assert 16)
   (header merc-ctrl-header :inline :offset-assert 128)
   (effect merc-effect      :inline :offset-assert 208)
   )
  :method-count-assert 9
  :size-assert         #xf0
  :flag-assert         #x9000000f0
  )

(deftype generic-merc-ctrl-with-sfx (generic-merc-ctrl)
  ((sfx-data uint128          11      :offset-assert 240)
   )
  :method-count-assert 9
  :size-assert         #x1a0
  :flag-assert         #x9000001a0
  )

(deftype generic-merc-input (structure)
  ((geo-tag     generic-merc-tag           :inline :offset-assert 0)
   (geo-block   uint8                    1296    :offset-assert 16)
   (byte-header merc-byte-header           :inline :offset 16)
   (matrix      merc-matrix       9    :inline   :offset-assert 1312)
   (control     generic-merc-ctrl-with-sfx :inline :offset-assert 2464)
   (end-tag     generic-merc-tag           :inline :offset-assert 2880)
   (shader      adgif-shader               :inline :offset-assert 2896)
   )
  :method-count-assert 9
  :size-assert         #xba0
  :flag-assert         #x900000ba0
  )

(deftype generic-merc-output (structure)
  ((info             gsf-info   :inline :offset-assert 0)
   (header           gsf-header :inline :offset-assert 16)
   (index-kick-table uint16     80      :offset-assert 32)
   (index-table      uint8      160     :offset 32)
   (inverse-table    uint8      256     :offset-assert 192)
   (vertex-table     gsf-vertex 72 :inline :offset-assert 448)
   )
  :method-count-assert 9
  :size-assert         #xac0
  :flag-assert         #x900000ac0
  )

(deftype generic-merc-dcache (structure)
  ((output-a    generic-merc-output :inline :offset-assert 0)
   (output-b    generic-merc-output :inline :offset-assert 2752)
   (inv-table-1 uint8               544     :offset-assert 5504)
   (inv-table-7 uint8               544     :offset-assert 6048)
   (inv-safety  uint8               16      :offset-assert 6592)
   (effect-data uint8               1584    :offset-assert 6608)
   )
  :method-count-assert 9
  :size-assert         #x2000
  :flag-assert         #x900002000
  )

(deftype gm-shadow (structure)
  ((perspective                matrix              :inline :offset-assert 0)
   (isometric                  matrix              :inline :offset-assert 64)
   (inv-camera-rot             matrix              :inline :offset-assert 128)
   (envmap-shader              adgif-shader        :inline :offset-assert 192)
   (current-chain              uint32                      :offset-assert 272)
   (next-chain                 uint32                      :offset-assert 276)
   (buf-index                  uint32                      :offset-assert 280)
   (fragment-count             uint32                      :offset-assert 284)
   (write-limit                int32                       :offset-assert 288)
   (indexed-input-base         generic-merc-input          :offset-assert 292)
   (other-input-base           generic-merc-input          :offset-assert 296)
   (indexed-output-base        generic-merc-output         :offset-assert 300)
   (other-output-base          generic-merc-output         :offset-assert 304)
   (p-input                    uint32                      :offset-assert 308)
   (gsf-buf                    generic-merc-dcache         :offset-assert 312)
   (p-fheader                  merc-fp-header              :offset-assert 316)
   (mercneric-convert          basic                       :offset-assert 320)
   (generic-prepare-dma-single basic                       :offset-assert 324)
   (generic-prepare-dma-double basic                       :offset-assert 328)
   (generic-light-proc         basic                       :offset-assert 332)
   (generic-envmap-proc        basic                       :offset-assert 336)
   (high-speed-reject          basic                       :offset-assert 340)
   (hsr-xmult                  vector              :inline :offset-assert 352)
   (hsr-ymult                  vector              :inline :offset-assert 368)
   )
  :method-count-assert 9
  :size-assert         #x180
  :flag-assert         #x900000180
  )

(deftype generic-merc-work (structure)
  ((input-a generic-merc-input         :inline :offset-assert 0)
   (input-b generic-merc-input         :inline :offset-assert 2976)
   (ctrl    generic-merc-ctrl-with-sfx :inline :offset-assert 5952)
   (shadow  gm-shadow                  :inline :offset-assert 6368)
   (stack   uint128                    16      :offset-assert 6752)
   )
  :method-count-assert 9
  :size-assert         #x1b60
  :flag-assert         #x900001b60
  )


;; ----------------------
;; File - generic-tie-h
;; Source Path - engine/gfx/tie/generic-tie-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype generic-tie-instance (structure)
  ((matrix-tag  dma-packet :inline :offset-assert 0)
   (matrix-data vector   6 :inline :offset-assert 16)
   (index-tag   dma-packet :inline :offset-assert 112)
   (indices     uint8      224     :offset-assert 128)
   (end-tag     dma-packet :inline :offset-assert 352)
   )
  :method-count-assert 9
  :size-assert         #x170
  :flag-assert         #x900000170
  )

(deftype generic-tie-input (structure)
  ((palette-tag dma-packet :inline :offset-assert 0)
   (palette     rgba       128 :offset-assert 16)
   (model-tag   dma-packet :inline :offset-assert 528)
   (model       vector     146 :inline :offset-assert 544)
   (matrix-tag  dma-packet :inline :offset-assert 2880)
   (matrix-data vector     6 :inline :offset-assert 2896)
   (index-tag   dma-packet :inline :offset-assert 2992)
   (indices     uint8      224     :offset-assert 3008)
   (end-tag     dma-packet :inline :offset-assert 3232)
   )
  :method-count-assert 9
  :size-assert         #xcb0
  :flag-assert         #x900000cb0
  )

(deftype generic-tie-run-control (structure)
  ((skip-bp2    uint8  :offset-assert 0)
   (skip-ips    uint8  :offset-assert 1)
   (gifbuf-skip uint8  :offset-assert 2)
   (strips      uint8  :offset-assert 3)
   (target-bp1  uint8  :offset-assert 4)
   (target-bp2  uint8  :offset-assert 5)
   (target-ip1  uint8  :offset-assert 6)
   (target-ip2  uint8  :offset-assert 7)
   (target-bps  uint8  :offset-assert 8)
   (target-ips  uint8  :offset-assert 9)
   (is-generic  uint8  :offset-assert 10)
   (reserved    uint8  :offset-assert 11)
   )
  :method-count-assert 9
  :size-assert         #xc
  :flag-assert         #x90000000c
  )

(deftype generic-tie-base-point (structure)
  ((x    int16     :offset-assert 0)
   (y    int16     :offset-assert 2)
   (z    int16     :offset-assert 4)
   (d0   int16     :offset-assert 6)
   (vtx  uint64    :offset 0)
   (u    int16     :offset-assert 8)
   (v    int16     :offset-assert 10)
   (tex  uint32    :offset 8)
   (w    int16     :offset-assert 12)
   (d1   int16     :offset-assert 14)
   (data uint16  8 :offset 0) ;; moved
   (quad uint128   :offset 0) ;; moved
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype generic-tie-bps (structure)
  ((bp generic-tie-base-point 4 :inline :offset-assert 0)
   )
  :method-count-assert 9
  :size-assert         #x40
  :flag-assert         #x900000040
  )

(deftype generic-tie-interp-point (structure)
  ((x      int16      :offset-assert 0)
   (y      int16      :offset-assert 2)
   (z      int16      :offset-assert 4)
   (d0     int16      :offset-assert 6)
   (vtx0   uint64     :offset 0)
   (dx     int16      :offset-assert 8)
   (dy     int16      :offset-assert 10)
   (dz     int16      :offset-assert 12)
   (unused int16      :offset-assert 14)
   (vtx1   uint64     :offset 8)
   (u      int16      :offset-assert 16)
   (v      int16      :offset-assert 18)
   (tex    uint32     :offset 16)
   (w      int16      :offset-assert 20)
   (d1     int16      :offset-assert 22)
   (data   uint16  12 :offset 0)
   ;(quad   uint128    :offset 0)
   )
  :pack-me
  :method-count-assert 9
  :size-assert         #x18
  :flag-assert         #x900000018
  )

(deftype generic-tie-ips (structure)
  ((ip generic-tie-interp-point 2 :inline :offset-assert 0)
   )
  :method-count-assert 9
  :size-assert         #x30
  :flag-assert         #x900000030
  )

(deftype generic-tie-header (structure)
  ((effect              uint8              :offset-assert 0)
   (interp-table-size   uint8              :offset-assert 1)
   (num-bps             uint8              :offset-assert 2)
   (num-ips             uint8              :offset-assert 3)
   (tint-color          uint32             :offset-assert 4)
   (index-table-offset  uint16             :offset-assert 8)
   (kick-table-offset   uint16             :offset-assert 10)
   (normal-table-offset uint16             :offset-assert 12)
   (interp-table-offset uint16             :offset-assert 14)
   (gsf-header          gsf-header :inline :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

(deftype generic-tie-matrix (structure)
  ((matrix matrix :inline :offset-assert 0)
   (morph  vector :inline :offset-assert 64)
   (fog    qword  :inline :offset-assert 80)
   )
  :method-count-assert 9
  :size-assert         #x60
  :flag-assert         #x900000060
  )

(deftype generic-tie-normal (structure)
  ((x     int8  :offset-assert 0)
   (y     int8  :offset-assert 1)
   (z     int8  :offset-assert 2)
   (dummy int8  :offset-assert 3)
   )
  :method-count-assert 9
  :size-assert         #x4
  :flag-assert         #x900000004
  )

(deftype generic-tie-control (structure)
  ((ptr-palette   uint32                   :offset-assert 0)
   (ptr-shaders   uint32                   :offset-assert 4)
   (ptr-runctrl   generic-tie-run-control  :offset-assert 8)
   (ptr-verts     uint32                   :offset-assert 12)
   (ptr-generic   generic-tie-header       :offset-assert 16)
   (ptr-dps       uint32                   :offset-assert 20)
   (ptr-kicks     uint32                   :offset-assert 24)
   (ptr-normals   uint32                   :offset-assert 28)
   (ptr-interp    uint32                   :offset-assert 32)
   (ptr-mtxs      generic-tie-matrix       :offset-assert 36)
   (ptr-cinds     uint32                   :offset-assert 40)
   (next-instance uint32                   :offset-assert 44)
   (next-model    uint32                   :offset-assert 48)
   (next-is-model uint32                   :offset-assert 52)
   (tie-type      uint32                   :offset-assert 56)
   )
  :method-count-assert 9
  :size-assert         #x3c
  :flag-assert         #x90000003c
  )

(deftype generic-tie-stats (structure)
  ((num-bps       uint32  :offset-assert 0)
   (num-ips       uint32  :offset-assert 4)
   (num-dps       uint32  :offset-assert 8)
   (num-shaders   uint32  :offset-assert 12)
   (num-models    uint32  :offset-assert 16)
   (num-instances uint32  :offset-assert 20)
   (num-waits     uint32  :offset-assert 24)
   (num-qwc       uint32  :offset-assert 28)
   (max-qwc       uint32  :offset-assert 32)
   )
  :method-count-assert 9
  :size-assert         #x24
  :flag-assert         #x900000024
  )

(deftype generic-tie-calls (structure)
  ((generic-prepare-dma-double basic  :offset-assert 0)
   (generic-envmap-dproc       basic  :offset-assert 4)
   (generic-interp-dproc       basic  :offset-assert 8)
   (generic-no-light-dproc     basic  :offset-assert 12)
   )
  :pack-me
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype generic-tie-shadow (structure)
  ((out-buf      gsf-buffer                :offset-assert 0)
   (cur-buf      uint32                    :offset-assert 4)
   (tie-type     int32                     :offset-assert 8)
   (ptr-inst     uint32                    :offset-assert 12)
   (ptr-buf      uint32                    :offset-assert 16)
   (inst-xor     int32                     :offset-assert 20)
   (end-of-chain uint32                    :offset-assert 24)
   (write-limit  uint32                    :offset-assert 28)
   (calls        generic-tie-calls :inline :offset-assert 32)
   )
  :pack-me
  :method-count-assert 9
  :size-assert         #x30
  :flag-assert         #x900000030
  )

(deftype generic-tie-work (structure)
  ((control     generic-tie-control  :inline :offset-assert 0)
   (interp-job  generic-interp-job   :inline :offset-assert 60)
   (shadow      generic-tie-shadow   :inline :offset-assert 76)
   (input-a     generic-tie-input    :inline :offset-assert 128)
   (input-b     generic-tie-input    :inline :offset-assert 3376)
   (inst-buf    generic-tie-instance :inline :offset-assert 6624)
   (palette-buf rgba                 128     :offset-assert 6992)
   )
  :method-count-assert 9
  :size-assert         #x1d50
  :flag-assert         #x900001d50
  )


;; ----------------------
;; File - generic-work-h
;; Source Path - engine/gfx/generic/generic-work-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype generic-input-buffer (structure)
  ((merc generic-merc-work :inline :offset 0)
   (tie  generic-tie-work  :inline :offset 0)
   (data uint128           472     :offset 0) ;; moved
   )
  :method-count-assert 9
  :size-assert         #x1d80
  :flag-assert         #x900001d80
  )

(deftype generic-debug (structure)
  ((locks      uint32  4  :offset-assert 0)
   (timer      uint32  32 :offset-assert 16)
   (count      uint32  32 :offset-assert 144)
   (vps        uint32  32 :offset-assert 272)
   (buffer     int32      :offset-assert 400)
   (start-addr int32      :offset-assert 404)
   (lock       int32      :offset-assert 408)
   )
  :method-count-assert 9
  :size-assert         #x19c
  :flag-assert         #x90000019c
  )

(deftype generic-vu1-header (structure)
  ((matrix  matrix          :inline :offset-assert 0)
   (strgif  generic-gif-tag :inline :offset-assert 64)
   (adnop1  ad-cmd          :inline :offset-assert 80)
   (adnop2  ad-cmd          :inline :offset-assert 96)
   (adcmds  ad-cmd        2 :inline :offset 80) ;; moved
   (dps     uint16                  :offset 92)
   (kickoff uint16                  :offset 108)
   (strips  uint16                  :offset 76)
   )
  :method-count-assert 9
  :size-assert         #x70
  :flag-assert         #x900000070
  )

(deftype generic-vu1-texbuf (structure)
  ((header generic-vu1-header :inline  :offset-assert 0)
   (shader uint32             :dynamic :offset-assert 112) ;; guess
   )
  :method-count-assert 9
  :size-assert         #x70
  :flag-assert         #x900000070
  )

(deftype generic-texbuf (structure)
  ((tag    dma-packet         :inline  :offset-assert 0)
   (header generic-vu1-header :inline  :offset-assert 16)
   (shader uint32             :dynamic :offset-assert 128) ;; guess
   )
  :method-count-assert 9
  :size-assert         #x80
  :flag-assert         #x900000080
  )

(deftype generic-effect-work (structure)
  ((consts   generic-consts  :inline :offset-assert 0)
   (storage  generic-storage :inline :offset-assert 432)
   (storage2 generic-storage :inline :offset-assert 688)
   (lights   vu-lights       :inline :offset-assert 944)
   )
  :method-count-assert 9
  :size-assert         #x420
  :flag-assert         #x900000420
  )

(deftype generic-effect-buffer (structure)
  ((outbuf-0 uint8               3552    :offset-assert 0)
   (work     generic-effect-work :inline :offset-assert 3552)
   (outbuf-1 uint8               3552    :offset-assert 4608)
   )
  :method-count-assert 9
  :size-assert         #x1fe0
  :flag-assert         #x900001fe0
  )

(deftype generic-work (structure)
  ((saves   generic-saves         :inline :offset-assert 0)
   (storage generic-storage       :inline :offset-assert 368)
   (in-buf  generic-input-buffer  :inline :offset-assert 624)
   (fx-buf  generic-effect-buffer :inline :offset-assert 8176)
   )
  :method-count-assert 9
  :size-assert         #x3fd0
  :flag-assert         #x900003fd0
  )

;; - Symbols

(define-extern *generic-debug* generic-debug) ;; unknown type


;; ----------------------
;; File - shadow-cpu-h
;; Source Path - engine/gfx/shadow/shadow-cpu-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype shadow-settings (structure)
  ((center        vector :inline :offset-assert 0)
   (flags         int32          :offset 12)
   (shadow-dir    vector :inline :offset-assert 16)
   (dist-to-locus float          :offset 28)
   (bot-plane     plane  :inline :offset-assert 32)
   (top-plane     plane  :inline :offset-assert 48)
   (fade-dist     float          :offset-assert 64)
   (fade-start    float          :offset-assert 68)
   (dummy-2       int32          :offset-assert 72)
   (dummy-3       int32          :offset-assert 76)
   )
  :method-count-assert 9
  :size-assert         #x50
  :flag-assert         #x900000050
  )

(deftype shadow-control (basic)
  ((settings shadow-settings :inline :offset-assert 16)
   )
  :method-count-assert 16
  :size-assert         #x60
  :flag-assert         #x1000000060
  (:methods
    (new (symbol type float float float float float) _type_ 0)
    (clear-offset-bit (shadow-control) int 9)
    (set-offset-bit (shadow-control) int 10)
    (set-top-plane-offset (shadow-control float) int 11)
    (set-bottom-plane-offset (shadow-control float) int 12)
    (dummy-13 () none 13)
    (dummy-14 () none 14)
    (dummy-15 () none 15)
    )
  )

(deftype shadow-data (structure)
  ((texoffset           vector     :inline :offset-assert 0)
   (texscale            vector     :inline :offset-assert 16)
   (clrs                uint128    2       :offset-assert 32)
   (dma-unpack-template dma-packet :inline :offset-assert 64)
   (dma-cnt             uint64             :offset-assert 80)
   (vif-nop             uint32             :offset-assert 88)
   (vif-unpack-v4-8     uint32             :offset-assert 92)
   (pdc                 basic              :offset-assert 96)
   (dist                float              :offset-assert 100)
   (oddeven             uint8              :offset-assert 104)
   (waits               uint32             :offset-assert 108)
   )
  :method-count-assert 9
  :size-assert         #x70
  :flag-assert         #x900000070
  )

(deftype shadow-work (structure)
  ((shadow-data shadow-data :inline :offset-assert 0)
   (inbuf       uint128     600     :offset-assert 112)
   )
  :method-count-assert 9
  :size-assert         #x25f0
  :flag-assert         #x9000025f0
  )

(deftype shadow-run (structure)
  ((first uint32  :offset-assert 0)
   (next  uint32  :offset-assert 4)
   )
  :allow-misaligned
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )

(deftype shadow-queue (structure)
  ((num-runs uint32     :offset-assert 0)
   (cur-run  uint32     :offset-assert 4)
   (run      shadow-run 15 :inline :offset-assert 8)
   )
  :method-count-assert 9
  :size-assert         #xf8
  :flag-assert         #x9000000f8
  )

(deftype shadow-vertex (structure)
  ((x      float  :offset-assert 0)
   (y      float  :offset-assert 4)
   (z      float  :offset-assert 8)
   (weight float  :offset-assert 12)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype shadow-matrix-ref (structure)
  ((joint-0 uint8  :offset-assert 0)
   (joint-1 uint8  :offset-assert 1)
   )
  :method-count-assert 9
  :size-assert         #x2
  :flag-assert         #x900000002
  )

; (deftype shadow-edge (structure)
;   ((ind-0 uint16  :offset-assert 0)
;    (ind-1 uint16  :offset-assert 2)
;    (tri-0 uint16  :offset-assert 4)
;    (tri-1 uint16  :offset-assert 6)
;    )
;   :method-count-assert 9
;   :size-assert         #x4
;   :flag-assert         #x900000004
;   )

(deftype shadow-tri (structure)
  ((ind-0 uint8  :offset-assert 0)
   (ind-1 uint8  :offset-assert 1)
   (ind-2 uint8  :offset-assert 2)
   (faces uint8  :offset-assert 3)
   )
  :method-count-assert 9
  :size-assert         #x4
  :flag-assert         #x900000004
  )

(deftype shadow-header (structure)
  ((qwc-data         uint32  :offset-assert 0)
   (num-joints       uint32  :offset-assert 4)
   (num-verts        uint16  :offset-assert 8)
   (num-twos         uint16  :offset-assert 10)
   (num-single-tris  uint16  :offset-assert 12)
   (num-single-edges uint16  :offset-assert 14)
   (num-double-tris  uint16  :offset-assert 16)
   (num-double-edges uint16  :offset-assert 18)
   (ofs-verts        uint32  :offset-assert 20)
   (ofs-refs         uint32  :offset-assert 24)
   (ofs-single-tris  uint32  :offset-assert 28)
   (ofs-single-edges uint32  :offset-assert 32)
   (ofs-double-tris  uint32  :offset-assert 36)
   (ofs-double-edges uint32  :offset-assert 40)
   )
  :method-count-assert 9
  :size-assert         #x2c
  :flag-assert         #x90000002c
  )

(deftype shadow-geo (art-element)
  ((total-size uint32                 :offset-assert 32)
   (header     shadow-header :inline  :offset 32)
   (rest       uint64       :dynamic :offset-assert 80)
   )
  :method-count-assert 13
  :size-assert         #x50
  :flag-assert         #xd00000050
  )

;; - Functions

(define-extern shadow-queue-append (function shadow-queue uint))
(define-extern shadow-queue-reset (function shadow-queue int))

;; - Symbols

(define-extern *shadow-queue* shadow-queue) ;; unknown type
(define-extern *shadow* symbol) ;; unknown type
(define-extern *shadow-object* symbol) ;; unknown type
(define-extern *shadow-debug* symbol) ;; unknown type


;; ----------------------
;; File - shadow-vu1-h
;; Source Path - engine/gfx/shadow/shadow-vu1-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Nothing Defined in This File!


;; ----------------------
;; File - memcard-h
;; Source Path - engine/ps2/memcard-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype mc-file-info (structure)
  ((present               int32      :offset-assert 0)
   (blind-data            float 16 :offset-assert 4)
   (blind-data-int8       int8 64 :offset 4)
   (level-index           int32      :offset 4)
   (fuel-cell-count       float      :offset 8)
   (money-count           float      :offset 12)
   (buzzer-count          float      :offset 16)
   (completion-percentage float      :offset 20)
   (minute                uint8      :offset 24)
   (hour                  uint8      :offset 25)
   (week                  uint8      :offset 26)
   (day                   uint8      :offset 27)
   (month                 uint8      :offset 28)
   (year                  uint8      :offset 29)
   )
  :pack-me
  :method-count-assert 9
  :size-assert         #x44
  :flag-assert         #x900000044
  )

(deftype mc-slot-info (structure)
  ((handle       int32     :offset-assert 0)
   (known        int32     :offset-assert 4)
   (formatted    int32     :offset-assert 8)
   (inited       int32     :offset-assert 12)
   (last-file    int32     :offset-assert 16)
   (mem-required int32     :offset-assert 20)
   (mem-actual   int32     :offset-assert 24)
   (file         mc-file-info 4 :inline :offset-assert 28)
   )
  :pack-me
  :method-count-assert 9
  :size-assert         #x12c
  :flag-assert         #x90000012c
  )

;; - Functions

(define-extern mc-get-slot-info (function int mc-slot-info))
(define-extern mc-run (function none))
(define-extern mc-check-result (function int))
(define-extern mc-sync (function int))
(define-extern show-mc-info (function dma-buffer none))

;; - Symbols

(define-extern int32 type)

;; - Unknowns

;;(define-extern mc-handle UNKNOWN)


;; ----------------------
;; File - game-info-h
;; Source Path - engine/game/game-info-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype game-bank (basic)
  ((life-max-default   float  :offset-assert 4)
   (life-start-default float  :offset-assert 8)
   (life-single-inc    float  :offset-assert 12)
   (money-task-inc     float  :offset-assert 16)
   (money-oracle-inc   float  :offset-assert 20)
   )
  :method-count-assert 9
  :size-assert         #x18
  :flag-assert         #x900000018
  )

(deftype actor-id (uint32)
  ()
  :method-count-assert 9
  :size-assert         #x4
  :flag-assert         #x900000004
  )

(deftype level-buffer-state (structure)
  ((name          basic  :offset-assert 0)
   (display?      symbol :offset-assert 4)
   (force-vis?    symbol :offset-assert 8)
   (force-inside? symbol :offset-assert 12)
   )
  :pack-me
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype load-state (basic)
  ((want          level-buffer-state  2 :inline  :offset-assert 4)
   (vis-nick      symbol     :offset-assert 36)
   (command-list  pair       :offset-assert 40)
   (object-name   symbol 256 :offset-assert 44)
   (object-status basic  256 :offset-assert 1068)
   )
  :method-count-assert 21
  :size-assert         #x82c
  :flag-assert         #x150000082c
  (:methods
    (new (symbol type) _type_ 0)
    (reset! (_type_) _type_ 9)
    (update! (_type_) int 10)
    (want-levels (_type_ symbol symbol) int 11)
    (want-display-level (_type_ symbol symbol) int 12)
    (want-vis (_type_ symbol) int 13)
    (want-force-vis (_type_ symbol symbol) int 14)
    (dummy-15 (_type_ pair) none 15)
    (dummy-16 (_type_ float) int 16)
    (dummy-17 (_type_ pair) int 17)
    (dummy-18 (_type_) int 18)
    (dummy-19 (_type_) int 19)
    (dummy-20 () none 20)
    )
  )

(deftype continue-point (basic)
  ((name          string          :offset-assert 4)
   (level         basic           :offset-assert 8)
   (flags         uint32          :offset-assert 12)
   (trans         vector  :inline :offset-assert 16)
   (quat          quaternion  :inline :offset-assert 32)
   (camera-trans  vector  :inline :offset-assert 48)
   (camera-rot    float 9       :offset-assert 64)
   (load-commands pair           :offset-assert 100)
   (vis-nick      basic           :offset-assert 104)
   (lev0          basic           :offset-assert 108)
   (disp0         basic           :offset-assert 112)
   (lev1          basic           :offset-assert 116)
   (disp1         basic           :offset-assert 120)
   )
  :method-count-assert 10
  :size-assert         #x7c
  :flag-assert         #xa0000007c
  (:methods
    (debug-draw! (_type_) none 9)
    )
  )

(declare-type entity-perm structure)
(declare-type game-save basic)
(declare-type entity-perm-array basic)
(deftype game-info (basic)
  ((mode                  symbol     :offset-assert 4)
   (save-name             basic     :offset-assert 8)
   (life                  float     :offset-assert 12)
   (life-max              float     :offset-assert 16)
   (money                 float     :offset-assert 20)
   (money-total           float     :offset-assert 24)
   (money-per-level       uint8  32 :offset-assert 28)
   (deaths-per-level      uint8  32 :offset-assert 60)
   (buzzer-total          float     :offset-assert 92)
   (fuel                  float     :offset-assert 96)
   (perm-list             entity-perm-array     :offset-assert 100)
   (task-perm-list        entity-perm-array     :offset-assert 104)
   (current-continue      continue-point     :offset-assert 108)
   (text-ids-seen         bit-array     :offset-assert 112)
   (level-opened          uint8  32 :offset-assert 116)
   (hint-control          (array level-hint-control)     :offset-assert 148)
   (task-hint-control     (array task-hint-control-group)     :offset-assert 152)
   (total-deaths          int32     :offset-assert 156)
   (continue-deaths       int32     :offset-assert 160)
   (fuel-cell-deaths      int32     :offset-assert 164)
   (game-start-time       uint64    :offset-assert 168)
   (continue-time         uint64    :offset-assert 176)
   (death-time            uint64    :offset-assert 184)
   (hit-time              uint64    :offset-assert 192)
   (fuel-cell-pickup-time uint64    :offset-assert 200)
   (fuel-cell-time        (array uint64)     :offset-assert 208)
   (enter-level-time      (array uint64)     :offset-assert 212)
   (in-level-time         (array uint64)     :offset-assert 216)
   (blackout-time         uint64    :offset-assert 224)
   (letterbox-time        uint64    :offset-assert 232)
   (hint-play-time        uint64    :offset-assert 240)
   (display-text-time     uint64    :offset-assert 248)
   (display-text-handle   uint64    :offset-assert 256)
   (death-movie-tick      int32     :offset-assert 264)
   (want-auto-save        symbol     :offset-assert 268)
   (auto-save-proc        handle    :offset-assert 272)
   (auto-save-status      uint32    :offset-assert 280)
   (auto-save-card        int32     :offset-assert 284)
   (auto-save-which       int32     :offset-assert 288)
   (pov-camera-handle     handle    :offset-assert 296)
   (other-camera-handle   handle    :offset-assert 304)
   (death-pos             vector-array     :offset-assert 312)
   (dummy                 basic     :offset-assert 316)
   (auto-save-count       int32     :offset-assert 320)
   )
  :method-count-assert 29
  :size-assert         #x144
  :flag-assert         #x1d00000144
  ;; field dummy is a basic loaded with a signed load
  (:methods
    (initialize! (_type_ symbol game-save string) _type_ 9)
    (adjust (_type_ symbol float handle) float 10)
    (task-complete? (_type_ game-task) symbol 11)
    (lookup-entity-perm-by-aid (_type_ uint) entity-perm 12)
    (get-entity-task-perm (_type_ game-task) entity-perm 13)
    (copy-perms-from-level! (_type_ level) none 14)
    (copy-perms-to-level! (_type_ level) none 15)
    (debug-print (_type_ symbol) _type_ 16)
    (get-or-create-continue! (_type_) continue-point 17)
    (get-continue-by-name (_type_ string) continue-point 18)
    (set-continue! (_type_ basic) continue-point 19)
    (buzzer-count (_type_ game-task) int 20)
    (seen-text? (_type_ game-text-id) symbol 21)
    (mark-text-as-seen (_type_ game-text-id) none 22)
    (got-buzzer? (_type_ game-task int) symbol 23)
    (dummy-24 () none 24)
    (load-game! (_type_ game-save) game-save 25)
    (clear-text-seen! (_type_ game-text-id) none 26)
    (get-death-count (_type_ symbol) int 27)
    (get-health-percent-lost (_type_) float 28)
    )
  )

;; - Symbols

(define-extern *GAME-bank* game-bank) ;; unknown type
(define-extern *game-info* game-info)


;; ----------------------
;; File - wind-h
;; Source Path - engine/gfx/wind-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype wind-vector (structure)
  ((wind-pos vector2w :inline :offset-assert 0)
   (wind-vel vector2w :inline :offset-assert 8)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype wind-work (basic)
  ((wind-array  vector  64 :inline      :offset-assert 16)
   (wind-normal vector  :inline :offset-assert 1040)
   (wind-temp   vector  :inline :offset-assert 1056)
   (wind-force  float 64      :offset-assert 1072)
   (wind-time   uint32          :offset-assert 1328)
   )
  :method-count-assert 9
  :size-assert         #x534
  :flag-assert         #x900000534
  )

;; - Functions

(define-extern wind-get-hashed-index (function vector int))

;; - Symbols

(define-extern *wind-work* wind-work)
(define-extern *wind-scales* (array uint8))


;; ----------------------
;; File - prototype-h
;; Source Path - engine/gfx/tie/prototype-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype prototype-bucket (basic)
  ((name          basic           :offset-assert 4)
   (flags         uint32          :offset-assert 8)
   (in-level      uint16          :offset-assert 12)
   (utextures     uint16          :offset-assert 14)
   (geometry      drawable 4        :offset-assert 16)
   (dists         vector  :inline :offset-assert 32)
   (rdists        vector  :inline :offset-assert 48)
   (next          uint32 4        :offset-assert 64)
   (count         uint16 4        :offset-assert 80)
   (near-plane    meters          :offset 32)
   (near-stiff    meters          :offset 36)
   (mid-plane     meters          :offset 40)
   (far-plane     meters          :offset 44)
   (rlength-near  float           :offset 48)
   (rlength-stiff float           :offset 52)
   (rlength-mid   float           :offset 56)
   (stiffness     float           :offset 60)
   (next-clear    uint128         :offset 64)
   (count-clear   uint64          :offset 80)
   )
  :method-count-assert 9
  :size-assert         #x58
  :flag-assert         #x900000058
  )

(deftype prototype-bucket-shrub (prototype-bucket)
  ((mod-count     uint16  4       :offset-assert 88)
   (last          uint32  4       :offset-assert 96)
   (last-clear    uint128         :offset 96)
   )
  :method-count-assert 9
  :size-assert         #x70
  :flag-assert         #x900000070
  )

(deftype prototype-inline-array-shrub (drawable)
  ((length  int16                     :offset 6)
   (data    prototype-bucket-shrub 1 :inline :offset 32)
   (_pad uint32)
   )
  :method-count-assert 18
  :size-assert         #x94
  :flag-assert         #x1200000094
  )

(deftype prototype-array-shrub-info (basic)
  ((prototype-inline-array-shrub basic   :offset-assert 4)
   (wind-vectors                 uint32  :offset-assert 8) ; likely a pointer
   )
  :method-count-assert 9
  :size-assert         #xc
  :flag-assert         #x90000000c
  )

(deftype prototype-bucket-tie (prototype-bucket)
  ((generic-count       uint16       4        :offset-assert 88)
   (generic-next        uint32       4        :offset-assert 96)
   (frag-count          uint8        4        :offset-assert 112)
   (index-start         uint8        4        :offset-assert 116)
   (base-qw             uint16       4        :offset-assert 120)
   (envmap-rfade        float                 :offset-assert 128)
   (envmap-fade-far     float                 :offset-assert 132)
   (envmap-shader       adgif-shader          :offset-assert 136)
   (collide-frag        basic                 :offset-assert 140)
   (tie-colors          basic                 :offset-assert 144)
   (data                uint32       :dynamic :offset-assert 148)
   (color-index-qwc     uint32       :dynamic :offset-assert 148)
   (generic-next-clear  uint128               :offset 96)
   (generic-count-clear uint128               :offset 80)
   )
  :method-count-assert 9
  :size-assert         #x94
  :flag-assert         #x900000094
  )

(deftype prototype-array-tie (array)
  ((array-data prototype-bucket-tie :dynamic :offset 16) ;; NOTE - field added, not 100% positive on the type
   )
  :method-count-assert 10
  :size-assert         #x10
  :flag-assert         #xa00000010
  (:methods
    (TODO-RENAME-9 (_type_) none 9)
    )
  )

(deftype proxy-prototype-array-tie (basic)
  ((prototype-array-tie prototype-array-tie   :offset-assert 4)
   (wind-vectors        uint32  :offset-assert 8) ; likely a pointer
   )
  :method-count-assert 9
  :size-assert         #xc
  :flag-assert         #x90000000c
  )

(deftype instance (drawable)
  ((bucket-index uint16           :offset 6)
   (unknown uint32 :offset 8) ; TODO - from default-menu
   (origin       matrix4h :inline :offset-assert 32) ; TODO - this can also be a float, default-menu::lambda_62
   (wind-index   uint16           :offset 62)
   )
  :method-count-assert 18
  :size-assert         #x40
  :flag-assert         #x1200000040
  )


;; ----------------------
;; File - joint-h
;; Source Path - engine/anim/joint-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(declare-type joint-control basic)
(deftype joint-control-channel (structure)
  ((parent           joint-control     :offset-assert 0)
   (command          symbol    :offset-assert 4)
   (frame-interp     float     :offset-assert 8)
   (frame-group      art-joint-anim     :offset-assert 12)
   (frame-num        float     :offset-assert 16)
   (num-func         (function joint-control-channel float float float)  :offset-assert 20)
   (param            float  2  :offset-assert 24)
   (group-sub-index  int16     :offset-assert 32)
   (group-size       int16     :offset-assert 34)
   (dist             meters    :offset-assert 36)
   (eval-time        uint32    :offset-assert 40)
   (inspector-amount float     :offset-assert 44)
   )
  :method-count-assert 10
  :size-assert         #x30
  :flag-assert         #xa00000030
  (:methods
    (dummy-9 (_type_) _type_ 9)
    )
  )

(deftype joint-control (basic)
  ((status                  uint16           :offset-assert 4)
   (allocated-length        int16            :offset-assert 6)
   (root-channel            (inline-array joint-control-channel) :offset 16)
   (blend-index             int32            :offset-assert 20)
   (active-channels         int32            :offset-assert 24)
   (generate-frame-function basic            :offset-assert 28)
   (prebind-function        basic            :offset-assert 32)
   (postbind-function       basic            :offset-assert 36)
   (effect                  basic            :offset-assert 40)
   (channel                 joint-control-channel 3 :inline :offset-assert 48) ;; actually dynamic?
   (frame-group0            art-joint-anim   :offset 60)
   (frame-num0              float            :offset 64)
   (frame-interp0           float            :offset 56)
   (frame-group1            art-joint-anim   :offset 108)
   (frame-num1              float            :offset 112)
   (frame-interp1           float            :offset 104)
   (frame-group2            art-joint-anim   :offset 156)
   (frame-num2              float            :offset 160)
   (frame-interp2           float            :offset 152)
   )
  :method-count-assert 11
  :size-assert         #xc0
  :flag-assert         #xb000000c0
  (:methods
    (new (symbol type int) _type_ 0)
    (dummy-9 (_type_) none 9)
    (dummy-10 (_type_ symbol) int 10)
    )
  )

(deftype matrix-stack (structure)
  ((top  matrix     :offset-assert 0)
   (data matrix 24 :inline :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x610
  :flag-assert         #x900000610
  )

(deftype channel-upload-info (structure)
  ((fixed     joint-anim-compressed-fixed  :offset-assert 0)
   (fixed-qwc int32                        :offset-assert 4)
   (frame     joint-anim-compressed-frame  :offset-assert 8)
   (frame-qwc int32                        :offset-assert 12)
   (amount    float                        :offset-assert 16)
   (interp    float                        :offset-assert 20)
   )
  :pack-me
  :method-count-assert 9
  :size-assert         #x18
  :flag-assert         #x900000018
  )

(deftype joint-work (structure)
  ((temp-mtx       matrix                      :inline :offset-assert 0)
   (joint-stack    matrix-stack                :inline :offset-assert 64)
   (fix-jmp-table  (function none)             16      :offset-assert 1616)
   (frm-jmp-table  (function none)             16      :offset-assert 1680)
   (pair-jmp-table (function none)             16      :offset-assert 1744)
   (uploads        channel-upload-info      24 :inline :offset-assert 1808)
   (num-uploads    int32                               :offset-assert 2384)
   (mtx-acc        matrix                    2 :inline :offset-assert 2400)
   (tq-acc         transformq              100 :inline :offset-assert 2528)
   (jacp-hdr       joint-anim-compressed-hdr   :inline :offset-assert 7328)
   (fixed-data     joint-anim-compressed-fixed :inline :offset-assert 7392)
   (frame-data     joint-anim-compressed-frame 2 :inline :offset-assert 9600)
   ;(flatten-array  UNKNOWN                     576     :offset-assert 2400) no clue!
   ;(flattened      UNKNOWN                     24      :offset-assert 2400) no clue!
   )
  :method-count-assert 9
  :size-assert         #x3640
  :flag-assert         #x900003640
  )


;; ----------------------
;; File - bones-h
;; Source Path - engine/anim/bones-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype bone-buffer (structure)
  ((joint  joint-anim-compressed-hdr 16 :inline :offset-assert 0) ;; might be something else
   (bone   bone 16 :inline :offset-assert 1024)
   ;(output UNKNOWN 16 :offset-assert 2560) no clue either :-(

   (_pad uint8 #x800)
   )
  :method-count-assert 9
  :size-assert         #x1200
  :flag-assert         #x900001200
  )

(deftype bone-layout (structure)
  ((joint  joint   2 :offset-assert 0)
   (bone   bone    2 :offset-assert 8)
   (data   uint16  8 :offset 0) ;; moved
   (output uint32  2 :offset-assert 16)
   (cache  uint32  2 :offset-assert 24)
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

(deftype bone-regs (structure)
  ((joint-ptr (pointer joint) :offset-assert 0)
   (bone-ptr  (pointer bone)  :offset-assert 4)
   (num-bones uint32          :offset-assert 8)
   )
  :method-count-assert 9
  :size-assert         #xc
  :flag-assert         #x90000000c
  )

(deftype bone-work (structure)
  ((layout     bone-layout :inline :offset-assert 0)
   (bounds     sphere      :inline :offset-assert 32)
   (lights     vu-lights   :inline :offset-assert 48)
   (distance   vector      :inline :offset-assert 160)
   (next-tag   dma-packet  :inline :offset-assert 176)
   (dma-buf    dma-buffer          :offset-assert 192)
   (sink-group basic               :offset-assert 196) ;; dma sink
   (next-pris  dma-packet          :offset-assert 200)
   (next-merc  dma-packet          :offset-assert 204)
   (wait-count uint32              :offset-assert 208)
   (in-count   uint32              :offset-assert 212)
   (sp-size    uint32              :offset-assert 216)
   (sp-bufnum  uint32              :offset-assert 220)
   (regs       bone-regs   :inline :offset-assert 224)
   )
  :method-count-assert 9
  :size-assert         #xec
  :flag-assert         #x9000000ec
  )

(deftype bone-debug (structure)
  ((time-ctr uint32      :offset-assert 0)
   (timing   uint32  360 :offset-assert 4)
   )
  :method-count-assert 9
  :size-assert         #x5a4
  :flag-assert         #x9000005a4
  )

(deftype bone-memory (structure)
  ((work     bone-work       :inline :offset-assert 0)
   (buffer   bone-buffer  2  :inline :offset-assert 240)
   (dma-list dma-packet      :inline :offset 240) ;; what?
   )
  :method-count-assert 9
  :size-assert         #x24f0
  :flag-assert         #x9000024f0
  )

(deftype merc-globals (structure)
  ((first uint32  :offset-assert 0)
   (next  uint32  :offset-assert 4)
   (sink  basic   :offset-assert 8) ;; dma sink
   )
  :allow-misaligned
  :method-count-assert 9
  :size-assert         #xc
  :flag-assert         #x90000000c
  )

(deftype merc-global-array (structure)
  ((count   uint32    :offset-assert 0)
   (globals merc-globals 8 :inline :offset-assert 4)
   )
  :method-count-assert 9
  :size-assert         #x84
  :flag-assert         #x900000084
  )

(deftype shadow-dma-packet (structure)
  ((tag      generic-merc-tag :inline :offset-assert 0)
   (settings shadow-settings  :inline :offset-assert 16)
   (geo-ref  dma-packet       :inline :offset-assert 96)
   (mtx-ref  dma-packet       :inline :offset-assert 112)
   (end-tag  dma-packet       :inline :offset-assert 128)
   )
  :method-count-assert 9
  :size-assert         #x90
  :flag-assert         #x900000090
  )

;; - Functions

(define-extern invalidate-cache-line (function pointer int))

;; - Symbols

(define-extern *merc-globals* symbol) ;; unknown type


;; ----------------------
;; File - engines
;; Source Path - engine/engine/engines.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Symbols

;;;; engine
(define-extern *background-draw-engine* engine)
(define-extern *matrix-engine* (array handle)) ;; unknown type
(define-extern *camera-engine* engine)
(define-extern *debug-engine* engine)


;; ----------------------
;; File - res-h
;; Source Path - engine/data/res-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype res-tag (uint128)
  ((name        symbol  :offset 0)
   (key-frame   float   :offset 32)
   (elt-type    type    :offset 64)
   (data-offset uint16  :offset 96)
   (elt-count   uint32  :offset 112 :size 15)
   (inlined?    uint8   :offset 127 :size 1) ;; guess.
   )
  :flag-assert #x900000010
  )

(deftype res-lump (basic)
  ((length           int32              :offset-assert 4)
   (allocated-length int32              :offset-assert 8)
   (data-base        pointer            :offset-assert 12)
   (data-top         pointer            :offset-assert 16)
   (data-size        int32              :offset-assert 20)
   (extra            entity-links       :offset-assert 24) ;; NOTE - can be anything it seems - have seen entity-links
   (tag              (pointer res-tag)  :offset-assert 28)
   )
  :method-count-assert 22
  :size-assert         #x20
  :flag-assert         #x1600000020
  ;; field extra is a basic loaded with a signed load
  (:methods
    (new (symbol type int int) _type_ 0)
    (get-property-data (_type_ symbol symbol float pointer (pointer res-tag) pointer) pointer :no-virtual 9)
    (get-property-struct (_type_ symbol symbol float structure (pointer res-tag) pointer) structure :no-virtual 10)
    (get-property-value (_type_ symbol symbol float uint128 (pointer res-tag) pointer) uint128 :no-virtual 11)
    (get-property-value-float (_type_ symbol symbol float float (pointer res-tag) pointer) float :no-virtual 12)
    (get-tag-index-data (_type_ int) pointer 13)
    (get-tag-data (_type_ res-tag) pointer 14)
    (allocate-data-memory-for-tag! (_type_ res-tag) res-tag 15)
    (sort! (_type_) _type_ 16)
    (add-data! (_type_ res-tag pointer) res-lump 17)
    (add-32bit-data! (_type_ res-tag object) res-lump 18)
    (lookup-tag-idx (_type_ symbol symbol float) res-tag-pair :no-virtual 19)
    (make-property-data (_type_ float res-tag-pair pointer) pointer 20)
    (get-curve-data! (_type_ curve symbol symbol float) symbol 21)
    )
  )

;; - Symbols

(define-extern *res-key-string* string)


;; ----------------------
;; File - res
;; Source Path - engine/data/res.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3


;; - Symbols

(define-extern *res-static-buf* pointer)
(define-extern uinteger type)


;; ----------------------
;; File - lights
;; Source Path - engine/gfx/lights.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern vu-lights<-light-group! (function vu-lights light-group none))
(define-extern light-slerp (function light light light float light))
(define-extern light-group-slerp (function light-group light-group light-group float light-group))
(define-extern light-group-process! (function vu-lights light-group vector vector none))
(define-extern vu-lights-default! (function vu-lights vu-lights))

;; - Symbols

(define-extern *default-lights* vu-lights)


;; ----------------------
;; File - dynamics-h
;; Source Path - engine/physics/dynamics-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype dynamics (basic)
  ((name           basic          :offset-assert 4)
   (gravity-max    meters         :offset-assert 8)
   (gravity-length meters         :offset-assert 12)
   (gravity        vector :inline :offset-assert 16)
   (gravity-normal vector :inline :offset-assert 32)
   (walk-distance  meters         :offset-assert 48)
   (run-distance   meters         :offset-assert 52)
   )
  :method-count-assert 9
  :size-assert         #x38
  :flag-assert         #x900000038
  )

;; - Functions

(define-extern time-to-apex (function float float int))
(define-extern time-to-ground (function float float float int))

;; - Symbols

(define-extern *standard-dynamics* dynamics)


;; ----------------------
;; File - surface-h
;; Source Path - engine/target/surface-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype surface (basic)
  ((name              basic      :offset-assert 4)
   ;; data went here
   (turnv             float      :offset-assert 8)
   (turnvv            float      :offset-assert 12)
   (tiltv             float      :offset-assert 16)
   (tiltvv            float      :offset-assert 20)
   (transv-max        float      :offset-assert 24)
   (target-speed      float      :offset-assert 28)
   (seek0             float      :offset-assert 32)
   (seek90            float      :offset-assert 36)
   (seek180           float      :offset-assert 40)
   (fric              float      :offset-assert 44)
   (nonlin-fric-dist  float      :offset-assert 48)
   (slip-factor       float      :offset-assert 52)
   (slide-factor      float      :offset-assert 56)
   (slope-up-factor   float      :offset-assert 60)
   (slope-down-factor float      :offset-assert 64)
   (slope-slip-angle  float      :offset-assert 68)
   (impact-fric       float      :offset-assert 72)
   (bend-factor       float      :offset-assert 76)
   (bend-speed        float      :offset-assert 80)
   (alignv            float      :offset-assert 84)
   (slope-up-traction float      :offset-assert 88)
   (align-speed       float      :offset-assert 92)
   ;; hook went here
   (active-hook       basic      :offset 128)
   (touch-hook        basic      :offset-assert 132)
   (impact-hook       basic      :offset-assert 136)
   (mult-hook         (function surface surface surface int none)     :offset-assert 140)
   ;; dataw went here
   (mode              basic      :offset-assert 144)
   (flags             uint32     :offset-assert 148)
   (data              float 30 :offset 8)
   (hook              basic 4  :offset 128)
   (dataw             uint32 2  :offset 144)
   )
  :method-count-assert 9
  :size-assert         #x98
  :flag-assert         #x900000098
  )

;; - Functions

(define-extern calc-terminal-vel (function float float float float))
(define-extern calc-terminal2-vel (function float float float float float))
(define-extern calc-terminal4-vel (function float float float float))
(define-extern surface-interp! (function surface surface surface float surface))
(define-extern surface-mult! (function surface surface surface surface))
(define-extern surface-clamp-speed (function surface surface surface int none))

;; - Symbols

(define-extern *walk-mods* surface) ;; unknown type
(define-extern *walk-no-turn-mods* surface) ;; unknown type
(define-extern *turn-around-mods* surface) ;; unknown type
(define-extern *duck-mods* surface) ;; unknown type
(define-extern *duck-attack-mods* surface) ;; unknown type
(define-extern *jump-mods* surface) ;; unknown type
(define-extern *double-jump-mods* surface) ;; unknown type
(define-extern *smack-jump-mods* surface) ;; unknown type
(define-extern *high-jump-mods* surface) ;; unknown type
(define-extern *launch-jump-mods* surface) ;; unknown type
(define-extern *forward-high-jump-mods* surface) ;; unknown type
(define-extern *flip-jump-mods* surface) ;; unknown type
(define-extern *forward-jump-mods* surface) ;; unknown type
(define-extern *forward-pole-jump-mods* surface) ;; unknown type
(define-extern *attack-mods* surface) ;; unknown type
(define-extern *jump-attack-mods* surface) ;; unknown type
(define-extern *uppercut-jump-mods* surface) ;; unknown type
(define-extern *run-attack-mods* surface) ;; unknown type
(define-extern *wheel-mods* surface) ;; unknown type
(define-extern *wheel-flip-mods* surface) ;; unknown type
(define-extern *flop-mods* surface) ;; unknown type
(define-extern *flop-land-mods* surface) ;; unknown type
(define-extern *wade-mods* surface) ;; unknown type
(define-extern *swim-mods* surface) ;; unknown type
(define-extern *dive-mods* surface) ;; unknown type
(define-extern *dive-bottom-mods* surface) ;; unknown type
(define-extern *pole-mods* surface) ;; unknown type
(define-extern *grab-mods* surface) ;; unknown type
(define-extern *edge-grab-mods* surface) ;; unknown type
(define-extern *empty-mods* surface) ;; unknown type
(define-extern *neutral-mods* surface) ;; unknown type
(define-extern *stone-surface* surface) ;; unknown type
(define-extern *edge-surface* surface) ;; unknown type
(define-extern *wade-surface* surface) ;; unknown type
(define-extern *slope-surface* surface) ;; unknown type
(define-extern *quicksand-surface* surface) ;; unknown type
(define-extern *tar-surface* surface) ;; unknown type
(define-extern *grass-surface* surface) ;; unknown type
(define-extern *ice-surface* surface) ;; unknown type
(define-extern *tread-surface* surface) ;; unknown type
(define-extern *standard-ground-surface* surface) ;; unknown type
(define-extern *swim-surface* surface) ;; unknown type


;; ----------------------
;; File - pat-h
;; Source Path - engine/target/pat-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype pat-surface (uint32)
  ((skip          uint8        :offset   0 :size   3)
   (mode          pat-mode     :offset   3 :size   3)
   (material      pat-material :offset   6 :size   6)
   (camera        uint8        :offset  12 :size   2)
   (event         pat-event    :offset  14 :size   6)
   (noentity      uint8        :offset   0 :size   1)
   (nocamera      uint8        :offset   1 :size   1)
   (noedge        uint8        :offset   2 :size   1)
   (nolineofsight uint8        :offset  12 :size   1)
   )
  :method-count-assert 9
  :size-assert         #x4
  :flag-assert         #x900000004
  )

(deftype pat-mode-info (structure)
  ((name         string  :offset-assert 0)
   (wall-angle   float   :offset-assert 4)
   (color        rgba    :offset-assert 8)
   (hilite-color rgba    :offset-assert 12)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

;; - Functions

(define-extern pat-material->string (function pat-surface string))
(define-extern pat-mode->string (function pat-surface string))
(define-extern pat-event->string (function pat-surface string))

;; - Symbols

(define-extern *pat-mode-info* (inline-array pat-mode-info)) ;; unknown type


;; ----------------------
;; File - fact-h
;; Source Path - engine/game/fact-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype fact-bank (basic)
  ((eco-level-max        float     :offset-assert 4)
   (eco-single-inc       float     :offset-assert 8)
   (eco-full-inc         float     :offset-assert 12)
   (eco-single-timeout   seconds   :offset-assert 16)
   (eco-full-timeout     seconds   :offset-assert 24)
   (dummy                seconds   :offset-assert 32)
   (health-max-default   float     :offset-assert 40)
   (health-single-inc    float     :offset-assert 44)
   (eco-pill-max-default float     :offset-assert 48)
   (health-small-inc     float     :offset-assert 52)
   (buzzer-max-default   float     :offset-assert 56)
   (buzzer-single-inc    float     :offset-assert 60)
   (suck-bounce-dist     meters    :offset-assert 64)
   (suck-suck-dist       meters    :offset-assert 68)
   (default-pill-inc     float     :offset-assert 72)
   )
  :method-count-assert 9
  :size-assert         #x4c
  :flag-assert         #x90000004c
  )

(deftype fact-info (basic)
  ((process             process :offset-assert 4)
   (pickup-type         pickup-type   :offset-assert 8)
   (pickup-amount       float   :offset-assert 12)
   (pickup-spawn-amount float   :offset-assert 16)
   (options             uint64  :offset-assert 24)
   (fade-time           uint64  :offset-assert 32)
   )
  :method-count-assert 12
  :size-assert         #x28
  :flag-assert         #xc00000028
  (:methods
    (new (symbol type process pickup-type float) _type_ 0)
    (dummy-9 () none 9)
    (reset! (_type_ symbol) none 10)
    (dummy-11 (_type_) float 11)
    )
  )

(deftype fact-info-target (fact-info)
  ((eco-type              int32     :offset-assert 40)
   (eco-level             float     :offset-assert 44)
   (eco-pickup-time       uint64    :offset-assert 48)
   (eco-timeout           seconds   :offset-assert 56)
   (health                float     :offset-assert 64)
   (health-max            float     :offset-assert 68)
   (buzzer                float     :offset-assert 72)
   (buzzer-max            float     :offset-assert 76)
   (eco-pill              float     :offset-assert 80)
   (eco-pill-max          float     :offset-assert 84)
   (health-pickup-time    uint64    :offset-assert 88)
   (eco-source            uint64    :offset-assert 96)
   (eco-source-time       uint64    :offset-assert 104)
   (money-pickup-time     uint64    :offset-assert 112)
   (buzzer-pickup-time    uint64    :offset-assert 120)
   (fuel-cell-pickup-time uint64    :offset-assert 128)
   (eco-pill-pickup-time  uint64    :offset-assert 136)
   )
  :method-count-assert 12
  :size-assert         #x90
  :flag-assert         #xc00000090
  (:methods
    (new (symbol type process pickup-type float) _type_ 0)
    )
  )

(deftype fact-info-enemy (fact-info)
  ((speed               float   :offset-assert 40)
   (idle-distance       meters  :offset-assert 44)
   (notice-top          meters  :offset-assert 48)
   (notice-bottom       meters  :offset-assert 52)
   (cam-horz            meters  :offset-assert 56)
   (cam-vert            meters  :offset-assert 60)
   (cam-notice-dist     meters  :offset-assert 64)
   )
  :method-count-assert 12
  :size-assert         #x44
  :flag-assert         #xc00000044
  (:methods
    (new (symbol type process pickup-type float) _type_ 0)
    )
  )

;; - Functions

(define-extern pickup-type->string (function pickup-type string))

;; - Symbols

(declare-type process-drawable process)
(define-extern process-drawable-art-error (state string process-drawable))
(define-extern *FACT-bank* fact-bank) ;; unknown type


;; ----------------------
;; File - aligner-h
;; Source Path - engine/anim/aligner-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype align-control (basic)
  ((flags       uint32             :offset-assert 4)
   (process     process-drawable            :offset-assert 8)
   (frame-group art-joint-anim              :offset-assert 12)
   (frame-num   float              :offset-assert 16)
   (matrix      matrix     2  :inline     :offset-assert 32)
   (transform   transform    2 :inline      :offset-assert 160)
   (delta       transformq :inline :offset-assert 256)
   (last-speed  meters             :offset-assert 304)
   (align       transformq :inline :offset 160)
   )
  :method-count-assert 14
  :size-assert         #x134
  :flag-assert         #xe00000134
  (:methods
    (new (symbol type process) _type_ :behavior process-drawable 0)
    (TODO-RENAME-9 (_type_) transformq 9)
    (TODO-RENAME-10 (_type_ int float float float) trsqv 10)
    (TODO-RENAME-11 (_type_ int vector int float float) none 11) ;; 3rd arg is unused
    (first-transform (_type_) transform 12)
    (snd-transform (_type_) transform 13)
    )
  )


;; ----------------------
;; File - game-h
;; Source Path - engine/game/game-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(declare-type collide-shape basic)
(declare-type water-control basic)
(declare-type sparticle-launch-control basic)
(deftype process-drawable (process)
  ((root        trsqv           :offset-assert 112)
   (node-list   cspace-array    :offset-assert 116)
   (draw        draw-control    :offset-assert 120)
   (skel        joint-control   :offset-assert 124)
   (nav         basic   :offset-assert 128)
   (align       align-control   :offset-assert 132)
   (path        basic   :offset-assert 136)
   (vol         basic   :offset-assert 140)
   (fact        fact-info       :offset-assert 144)
   (link        basic   :offset-assert 148)
   (part        sparticle-launch-control   :offset-assert 152)
   (water       water-control   :offset-assert 156)
   (sound       ambient-sound   :offset-assert 160)
   (state-flags uint32  :offset-assert 164)
   (state-time  uint64  :offset-assert 168)
   )
  :heap-base #x40
  :method-count-assert 20
  :size-assert         #xb0
  :flag-assert         #x14004000b0
  ;; inherited inspect of process
  (:methods
    (deactivate (_type_) none 10)
    (dummy-14 (_type_ skeleton-group object) none 14)
    (dummy-15 (_type_ string object) _type_ 15)
    (dummy-16 (_type_ int (inline-array vector) vector) collide-shape 16)
    (dummy-17 (_type_) none 17)
    (dummy-18 (_type_) symbol 18)
    (dummy-19 (_type_) none 19)
    )
  )

(deftype process-drawable-reserved (process-drawable)
  ()
  :heap-base #x40
  :method-count-assert 63
  :size-assert         #xb0
  :flag-assert         #x3f004000b0
  ;;  not enough basic ops
  (:methods
    (dummy-20 () none 20)
    (dummy-21 () none 21)
    (dummy-22 () none 22)
    (dummy-23 () none 23)
    (dummy-24 () none 24)
    (dummy-25 () none 25)
    (dummy-26 () none 26)
    (dummy-27 () none 27)
    (dummy-28 () none 28)
    (dummy-29 () none 29)
    (dummy-30 () none 30)
    (dummy-31 () none 31)
    (dummy-32 () none 32)
    (dummy-33 () none 33)
    (dummy-34 () none 34)
    (dummy-35 () none 35)
    (dummy-36 () none 36)
    (dummy-37 () none 37)
    (dummy-38 () none 38)
    (dummy-39 () none 39)
    (dummy-40 () none 40)
    (dummy-41 () none 41)
    (dummy-42 () none 42)
    (dummy-43 () none 43)
    (dummy-44 () none 44)
    (dummy-45 () none 45)
    (dummy-46 () none 46)
    (dummy-47 () none 47)
    (dummy-48 () none 48)
    (dummy-49 () none 49)
    (dummy-50 () none 50)
    (dummy-51 () none 51)
    (dummy-52 () none 52)
    (dummy-53 () none 53)
    (dummy-54 () none 54)
    (dummy-55 () none 55)
    (dummy-56 () none 56)
    (dummy-57 () none 57)
    (dummy-58 () none 58)
    (dummy-59 () none 59)
    (dummy-60 () none 60)
    (dummy-61 () none 61)
    (dummy-62 () none 62)
    )
  )

(deftype attack-info (structure)
  ((trans        vector :inline :offset-assert 0)
   (vector       vector :inline :offset-assert 16)
   (intersection vector :inline :offset-assert 32)
   (attacker     uint64         :offset-assert 48) ;; handle
   (invinc-time  uint64         :offset-assert 56)
   (mask         uint32         :offset-assert 64)
   (mode         basic          :offset-assert 68)
   (shove-back   meters         :offset-assert 72)
   (shove-up     meters         :offset-assert 76)
   (speed        meters         :offset-assert 80)
   (dist         meters         :offset-assert 84)
   (control      float          :offset-assert 88)
   (angle        basic          :offset-assert 92)
   (rotate-to    degrees        :offset-assert 96) 
   (prev-state   basic          :offset-assert 100)
   )
  :method-count-assert 10
  :size-assert         #x68
  :flag-assert         #xa00000068
  ;; field handle is likely a value type
  (:methods
    (dummy-9 () none 9)
    )
  )

(deftype ground-tween-info (structure)
  ((chan  uint8   3 :offset-assert 0)
   (blend uint32  3 :offset-assert 4)
   (group uint32  5 :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x24
  :flag-assert         #x900000024
  )

;; - Symbols

(define-extern *global-attack-id* int)


;; ----------------------
;; File - generic-obs-h
;; Source Path - engine/game/generic-obs-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype manipy (process-drawable)
  ((new-trans-hook       function        :offset-assert 176)
   (cur-trans-hook       function        :offset-assert 180)
   (cur-event-hook       function        :offset-assert 184)
   (new-joint-anim       basic           :offset-assert 188)
   (new-joint-anim-blend uint64          :offset-assert 192)
   (anim-mode            basic           :offset-assert 200)
   (cur-grab-handle      uint64          :offset-assert 208)
   (cur-target-handle    uint64          :offset-assert 216)
   (old-grab-pos         vector  :inline :offset-assert 224)
   (joint                joint 4         :offset-assert 240)
   (new-post-hook        function        :offset-assert 256)
   (cur-post-hook        function        :offset-assert 260)
   (clone-copy-trans     basic           :offset-assert 264)
   (shadow-backup        basic           :offset-assert 268)
   (draw?                symbol          :offset-assert 272)
   )
  :heap-base #xb0
  :method-count-assert 20
  :size-assert         #x114
  :flag-assert         #x1400b00114
  ;; inherited inspect of process-drawable
  )

(deftype part-spawner (process-drawable)
  ((mode         uint32         :offset-assert 176)
   (enable       basic          :offset-assert 180)
   (radius       meters         :offset-assert 184)
   (world-sphere sphere :inline :offset-assert 192)
   )
  :heap-base #x60
  :method-count-assert 21
  :size-assert         #xd0
  :flag-assert         #x15006000d0
  ;; inherited inspect of process-drawable
  (:methods
    (dummy-20 () none 20)
    )
  )

(deftype part-tracker (process)
  ((root             basic               :offset-assert 112)
   (part             basic               :offset-assert 116)
   (target           uint64              :offset-assert 120)
   (callback         basic               :offset-assert 128)
   (linger-callback  basic               :offset-assert 132)
   (duration         uint64              :offset-assert 136)
   (linger-duration  uint64              :offset-assert 144)
   (start-time       uint64              :offset-assert 152)
   (offset           vector     :inline  :offset-assert 160)
   (userdata         uint64              :offset-assert 176)
   (user-time        uint64  2           :offset-assert 184)
   (user-vector      vector  2  :inline  :offset-assert 208)
   (user-handle      uint32  2           :offset-assert 240)
   )
  :heap-base #x90
  :method-count-assert 14
  :size-assert         #xf8
  :flag-assert         #xe009000f8
  ;; inherited inspect of process
  (:methods
    )
  )

(deftype camera-tracker (process)
  (
   ;(name            basic   :offset-assert 4)
   (grab-target     uint64  :offset 120)
   (grab-event      basic   :offset-assert 128)
   (release-event   basic   :offset-assert 132)
   (old-global-mask uint32  :offset-assert 136)
   (old-self-mask   uint32  :offset-assert 140)
   (old-parent-mask uint32  :offset-assert 144)
   (look-at-target  uint64  :offset-assert 152)
   (pov-target      uint64  :offset-assert 160)
   (work-process    uint64  :offset-assert 168)
   (anim-process    uint64  :offset-assert 176)
   (start-time      uint64  :offset-assert 184)
   (callback        basic   :offset-assert 192)
   (userdata        basic   :offset-assert 196)
   (message         basic   :offset-assert 200)
   (border-value    basic   :offset-assert 204)
   (mask-to-clear   uint32  :offset-assert 208)
   (script          basic   :offset-assert 212)
   (script-line     basic   :offset-assert 216)
   (script-func     basic   :offset-assert 220)
   )
  :heap-base #x70
  :method-count-assert 15
  :size-assert         #xe0
  :flag-assert         #xf007000e0
  ;; inherited inspect of process
  ;; field ~Tuserdata is a basic loaded with a signed load
  (:methods
    (dummy-14 () none 14)
    )
  )

(deftype touch-tracker (process-drawable)
  ((duration     uint64  :offset-assert 176)
   (target       uint64  :offset-assert 184)
   (event        basic   :offset-assert 192)
   (run-function basic   :offset-assert 196)
   (callback     basic   :offset-assert 200)
   (event-mode   basic   :offset-assert 204)
   )
  :heap-base #x60
  :method-count-assert 20
  :size-assert         #xd0
  :flag-assert         #x14006000d0
  ;; inherited inspect of process-drawable
  )

(deftype swingpole (process)
  ((root        basic          :offset-assert 112)
   (dir         vector :inline :offset-assert 128)
   (range       meters         :offset-assert 144)
   (edge-length meters         :offset-assert 148)
   )
  :heap-base #x30
  :method-count-assert 14
  :size-assert         #x98
  :flag-assert         #xe00300098
  ;; inherited inspect of process
  )

(deftype gui-query (structure)
  ((x-position        int32  :offset-assert 0)
   (y-position        int32  :offset-assert 4)
   (message           basic  :offset-assert 8)
   (decision          basic  :offset-assert 12)
   (only-allow-cancel basic  :offset-assert 16)
   (no-msg            basic  :offset-assert 20)
   (message-space     int32  :offset-assert 24)
   )
  :pack-me
  :method-count-assert 11
  :size-assert         #x1c
  :flag-assert         #xb0000001c
  (:methods
    (dummy-9 () none 9)
    (dummy-10 () none 10)
    )
  )

(deftype othercam (process)
  ((hand              uint64         :offset-assert 112)
   (old-global-mask   uint32         :offset-assert 120)
   (mask-to-clear     uint32         :offset-assert 124)
   (cam-joint-index   int32          :offset-assert 128)
   (old-pos           vector :inline :offset-assert 144)
   (old-mat-z         vector :inline :offset-assert 160)
   (had-valid-frame   basic          :offset-assert 176)
   (border-value      basic          :offset-assert 180)
   (die?              basic          :offset-assert 184)
   (survive-anim-end? basic          :offset-assert 188)
   (spooling?         basic          :offset-assert 192)
   )
  :heap-base #x60
  :method-count-assert 14
  :size-assert         #xc4
  :flag-assert         #xe006000c4
  ;; inherited inspect of process
  )

(deftype process-hidden (process)
  ()
  :method-count-assert 15
  :size-assert         #x70
  :flag-assert         #xf00000070
  (:methods
    (dummy-14 () none 14)
    )
  )


;; ----------------------
;; File - pov-camera-h
;; Source Path - engine/camera/pov-camera-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype pov-camera (process-drawable)
  ((flags               int32   :offset-assert 176)
   (debounce-start-time uint64  :offset-assert 184)
   (notify-handle       uint64  :offset-assert 192)
   (anim-name           basic   :offset-assert 200)
   (command-list        basic   :offset-assert 204)
   (mask-to-clear       uint32  :offset-assert 208)
   (music-volume-movie  float   :offset-assert 212)
   (sfx-volume-movie    float   :offset-assert 216)
   )
  :heap-base #x70
  :method-count-assert 30
  :size-assert         #xdc
  :flag-assert         #x1e007000dc
  ;; inherited inspect of process-drawable
  (:methods
    (dummy-20 () none 20)
    (dummy-21 () none 21)
    (dummy-22 () none 22)
    (dummy-23 () none 23)
    (dummy-24 () none 24)
    (dummy-25 () none 25)
    (dummy-26 () none 26)
    (dummy-27 () none 27)
    (dummy-28 () none 28)
    (dummy-29 () none 29)
    )
  )


;; ----------------------
;; File - sync-info-h
;; Source Path - engine/util/sync-info-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype sync-info (structure)
  ((offset float   :offset-assert 0)
   (period uint32  :offset-assert 4)
   )
  :method-count-assert 18
  :size-assert         #x8
  :flag-assert         #x1200000008
  (:methods
    (dummy-9 (_type_ float) float 9)
    (dummy-10 (_type_) float 10)
    (dummy-11 (_type_) float 11)
    (dummy-12 (_type_ float) float 12)
    (dummy-13 (_type_) float 13)
    (dummy-14 (_type_ uint float float float) int 14) ;; 3 arg for parent 5 for child
    (dummy-15 (_type_ process) float 15) ;; wip
    (dummy-16 (_type_ float) float 16)
    (dummy-17 (_type_) float 17)
    )
  )

(deftype sync-info-eased (sync-info)
  ((tlo    float   :offset-assert 8)
   (thi    float   :offset-assert 12)
   (ylo    float   :offset-assert 16)
   (m2     float   :offset-assert 20)
   (yend   float   :offset-assert 24)
   )
  :method-count-assert 18
  :size-assert         #x1c
  :flag-assert         #x120000001c
  (:methods
    ;; (dummy-9 () none 9)
    ;; (dummy-10 () none 10)
    ;; (dummy-11 () none 11)
    (dummy-12 (_type_ float) float 12)
    (dummy-13 (_type_) float 13)
    (dummy-14 (_type_ uint float float float) int 14)
    (dummy-15 (_type_ process) float 15) ;; wip
    ;; (dummy-16 () none 16)
    ;; (dummy-17 () none 17)
    )
  )

(deftype sync-info-paused (sync-info)
  ((pause-after-out float   :offset-assert 8)
   (pause-after-in  float   :offset-assert 12)
   )
  :method-count-assert 18
  :size-assert         #x10
  :flag-assert         #x1200000010
  (:methods
    (dummy-9 (_type_ float) float 9)
    ;; (dummy-10 () none 10)
    (dummy-11 (_type_) float 11)
    (dummy-12 (_type_ float) float 12)
    (dummy-13 (_type_) float 13)
    (dummy-14 (_type_ uint float float float) int 14)
    (dummy-15 (_type_ process) float 15) ;; wip
    ;; (dummy-16 () none 16)
    ;; (dummy-17 () none 17)
    )
  )

(deftype delayed-rand-float (structure)
  ((min-time   int32   :offset-assert 0)
   (max-time   int32   :offset-assert 4)
   (max-val    float   :offset-assert 8)
   (timer      int32   :offset-assert 12)
   (start-time uint64  :offset-assert 16)
   (value      float   :offset-assert 24)
   )
  :method-count-assert 11
  :size-assert         #x1c
  :flag-assert         #xb0000001c
  (:methods
    (dummy-9 (_type_ int int float) float 9)
    (dummy-10 (_type_ ) float 10)
    )
  )

(deftype oscillating-float (structure)
  ((value   float  :offset-assert 0)
   (target  float  :offset-assert 4)
   (vel     float  :offset-assert 8)
   (max-vel float  :offset-assert 12)
   (damping float  :offset-assert 16)
   (accel   float  :offset-assert 20)
   )
  :method-count-assert 11
  :size-assert         #x18
  :flag-assert         #xb00000018
  (:methods
    (dummy-9 (_type_ float float float float) float 9)
    (dummy-10 (_type_ float) float 10)
    )
  )

(deftype bouncing-float (structure)
  ((osc        oscillating-float :inline :offset-assert 0)
   (max-value  float                     :offset-assert 24)
   (min-value  float                     :offset-assert 28)
   (elasticity float                     :offset-assert 32)
   (state      int32                     :offset-assert 36)
   )
  :method-count-assert 13
  :size-assert         #x28
  :flag-assert         #xd00000028
  (:methods
    (dummy-9 (_type_ float float float float float float float) float 9)
    (dummy-10 (_type_ float) float 10)
    (dummy-11 (_type_) symbol 11) ;; bool
    (dummy-12 (_type_) symbol 12) ;; bool
    )
  )

(deftype delayed-rand-vector (structure)
  ((min-time   int32          :offset-assert 0)
   (max-time   int32          :offset-assert 4)
   (xz-max     float          :offset-assert 8)
   (y-max      float          :offset-assert 12)
   (timer      int32          :offset-assert 16)
   (start-time uint64         :offset-assert 24)
   (value      vector :inline :offset-assert 32)
   )
  :method-count-assert 13
  :size-assert         #x30
  :flag-assert         #xd00000030
  (:methods
    (dummy-9 (_type_ int int float float) vector 9)
    (dummy-10 (_type_) vector 10)
    (dummy-11 (_type_) vector 11)
    (dummy-12 (_type_) vector 12)
    )
  )

(deftype oscillating-vector (structure)
  ((value   vector :inline :offset-assert 0)
   (target  vector :inline :offset-assert 16)
   (vel     vector :inline :offset-assert 32)
   (max-vel float          :offset-assert 48)
   (damping float          :offset-assert 52)
   (accel   float          :offset-assert 56)
   )
  :method-count-assert 11
  :size-assert         #x3c
  :flag-assert         #xb0000003c
  (:methods
    (dummy-9 (_type_ vector float float float) vector 9)
    (dummy-10 (_type_ vector) vector 10)
    )
  )


;; ----------------------
;; File - smush-control-h
;; Source Path - engine/util/smush-control-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype smush-control (structure)
  ((start-time  uint64  :offset-assert 0)
   (period      float   :offset-assert 8)
   (duration    float   :offset-assert 12)
   (amp         float   :offset-assert 16)
   (damp-amp    float   :offset-assert 20)
   (damp-period float   :offset-assert 24)
   (ticks       float   :offset-assert 28)
   )
  :method-count-assert 15
  :size-assert         #x20
  :flag-assert         #xf00000020
  (:methods
    (set-zero! (_type_) _type_ 9)
    (update! (_type_) float 10)
    (get-no-update (_type_) float 11)
    (activate! (_type_ float int int float float float) _type_ 12)
    (nonzero-amplitude? (_type_) symbol 13)
    (die-on-next-update! (_type_) _type_ 14)
    )
  )
  ;; trajectory-h
  (deftype trajectory (structure)
    ((initial-position vector :inline :offset-assert 0)
     (initial-velocity vector :inline :offset-assert 16)
     (time             float          :offset-assert 32)
     (gravity          meters         :offset-assert 36)
     )
    :method-count-assert 16
    :size-assert         #x28
    :flag-assert         #x1000000028
    (:methods
      (TODO-RENAME-9 (_type_ float vector) vector 9)
      (TODO-RENAME-10 (_type_ float vector) vector 10)
      (TODO-RENAME-11 (_type_ vector vector float float) none 11)
      (TODO-RENAME-12 (_type_ vector vector float float) none 12)
      (TODO-RENAME-13 (_type_ vector vector float float) none 13)
      (TODO-RENAME-14 (_type_ vector vector float float) none 14)
      (TODO-RENAME-15 (_type_) none 15)
      )
    )


;; ----------------------
;; File - trajectory-h
;; Source Path - engine/physics/trajectory-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Unknowns

;;(define-extern trajectory object) ;; unknown type


;; ----------------------
;; File - debug-h
;; Source Path - engine/debug/debug-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype pos-history (structure)
  ((points     (inline-array vector)  :offset-assert 0)
   (num-points int32   :offset-assert 4)
   (h-first    int32   :offset-assert 8)
   (h-last     int32   :offset-assert 12)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype debug-vertex (structure)
  ((trans  vector4w :inline :offset-assert 0)
   (normal vector3h :inline :offset-assert 16)
   (st     vector2h :inline :offset-assert 22)
   (color  uint32           :offset-assert 28)
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

(deftype debug-vertex-stats (basic)
  ((length    int32                    :offset-assert 4)
   (pos-count int32                    :offset-assert 8)
   (vertex    debug-vertex 600 :inline :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x4b10
  :flag-assert         #x900004b10
  )


;; ----------------------
;; File - joint-mod-h
;; Source Path - engine/target/joint-mod-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype joint-mod (basic)
  ((mode            joint-mod-handler-mode :offset-assert 4)
   (process         process-drawable       :offset-assert 8)
   (joint           cspace                 :offset-assert 12)
   (target          vector     :inline     :offset-assert 16)
   (twist           vector     :inline     :offset-assert 32)
   (twist-max       vector     :inline     :offset-assert 48)
   (trans           vector     :inline     :offset-assert 64)
   (quat            quaternion :inline     :offset-assert 80)
   (scale           vector     :inline     :offset-assert 96)
   (notice-time     uint64                 :offset-assert 112)
   (flex-blend      float                  :offset-assert 120)
   (blend           float                  :offset-assert 124)
   (max-dist        meters                 :offset-assert 128)
   (ignore-angle    degrees                :offset-assert 132)
   (up              uint8                  :offset-assert 136)
   (nose            uint8                  :offset-assert 137)
   (ear             uint8                  :offset-assert 138)
   (shutting-down?  basic                  :offset-assert 140)
   (parented-scale? basic                  :offset 128)
   )
  :method-count-assert 16
  :size-assert         #x90
  :flag-assert         #x1000000090
  (:methods
    (new (symbol type joint-mod-handler-mode process-drawable int) _type_ 0)
    (set-mode! (_type_ joint-mod-handler-mode) _type_ 9)
    (set-target! (_type_ vector) none 10)
    (look-at-enemy! (_type_ vector symbol process) none 11)
    (reset-blend! (_type_) _type_ 12)
    (set-twist! (_type_ float float float) vector 13)
    (set-trs! (_type_ vector quaternion vector) none 14)
    (shut-down! (_type_) float 15)
    )
  )

(deftype try-to-look-at-info (basic)
  ((who  handle  :offset-assert 8)
   (horz float   :offset-assert 16)
   (vert float   :offset-assert 20)
   )
  :method-count-assert 9
  :size-assert         #x18
  :flag-assert         #x900000018
  )

(deftype joint-mod-wheel (basic)
  ((last-position vector :inline   :offset-assert 16)
   (angle         float            :offset-assert 32)
   (process       process-drawable :offset-assert 36)
   (wheel-radius  float            :offset-assert 40)
   (wheel-axis    int8             :offset-assert 44)
   )
  (:methods
    (new (symbol type process-drawable int float int) _type_)
    )
  :method-count-assert 9
  :size-assert         #x2d
  :flag-assert         #x90000002d
  )

(deftype joint-mod-set-local (basic)
  ((transform       transformq :inline :offset-assert 16)
   (set-rotation    basic              :offset-assert 64)
   (set-scale       basic              :offset-assert 68)
   (set-translation basic              :offset-assert 72)
   (enable          basic              :offset-assert 76)
   )
  (:methods
    (new (symbol type process-drawable int basic basic basic) _type_)
    )
  :method-count-assert 9
  :size-assert         #x50
  :flag-assert         #x900000050
  )

(deftype joint-mod-set-world (basic)
  ((transform  transformq :inline :offset-assert 16)
   (node-index int32              :offset-assert 64)
   (enable     basic              :offset-assert 68)
   )
  (:methods
    (new (symbol type process-drawable int basic) _type_)
    )
  :method-count-assert 9
  :size-assert         #x48
  :flag-assert         #x900000048
  )

(deftype joint-mod-blend-local (basic)
  ((transform       transformq :inline :offset-assert 16)
   (blend-transform transformq :inline :offset-assert 64)
   (node-index      int32              :offset-assert 112)
   (blend           float              :offset-assert 116)
   (enable          basic              :offset-assert 120)
   )
  (:methods
    (new (symbol type process-drawable int basic) _type_)
    )
  :method-count-assert 9
  :size-assert         #x7c
  :flag-assert         #x90000007c
  )

(deftype joint-mod-spinner (basic)
  ((spin-axis vector :inline :offset-assert 16)
   (angle     float          :offset-assert 32)
   (spin-rate float          :offset-assert 36)
   (enable    basic          :offset-assert 40)
   )
  (:methods
    (new (symbol type process-drawable int vector float) _type_)
    )
  :method-count-assert 9
  :size-assert         #x2c
  :flag-assert         #x90000002c
  )

;; - Functions

(define-extern joint-mod-spinner-callback (function cspace transformq none))
(define-extern cspace<-parented-transformq-joint! (function cspace transformq none))
(define-extern joint-mod-blend-local-callback (function cspace transformq none))
(define-extern joint-mod-set-world-callback (function cspace transformq none))
(define-extern cspace<-transformq! (function cspace transformq matrix))
(define-extern joint-mod-set-local-callback (function cspace transformq none))
(define-extern joint-mod-wheel-callback (function cspace transformq none))
(define-extern vector<-cspace! (function vector cspace vector))
(define-extern add-debug-text-sphere (function symbol bucket-id vector float string rgba symbol))
(define-extern joint-mod-look-at-handler (function cspace transformq none))
(define-extern joint-mod-world-look-at-handler (function cspace transformq none))
(define-extern joint-mod-rotate-handler (function cspace transformq none))
(define-extern joint-mod-joint-set-handler (function cspace transformq none))
(define-extern joint-mod-joint-set*-handler (function cspace transformq none))
(define-extern add-debug-matrix (function symbol bucket-id matrix matrix))
(define-extern joint-mod-debug-draw (function joint-mod none))

;; - Symbols

(define-extern *joint-axis-vectors* (inline-array vector))
(define-extern last-try-to-look-at-data try-to-look-at-info)


;; ----------------------
;; File - collide-func-h
;; Source Path - engine/collide/collide-func-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Nothing Defined in This File!


;; ----------------------
;; File - collide-mesh-h
;; Source Path - engine/collide/collide-mesh-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype collide-tri-result (structure)
  ((vertex    vector 3 :inline :offset-assert 0)
   (intersect vector  :inline  :offset-assert 48)
   (normal    vector  :inline  :offset-assert 64)
   (pat       pat-surface      :offset-assert 80)
   )
  :method-count-assert 9
  :size-assert         #x54
  :flag-assert         #x900000054
  )

(deftype collide-mesh-tri (structure)
  ((vertex-index uint8   3    :offset-assert 0)
   (unused       uint8        :offset-assert 3)
   (pat          pat-surface  :offset-assert 4)
   )
  :pack-me
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )

(deftype collide-mesh (basic)
  ((joint-id    int32     :offset-assert 4)
   (num-tris    uint32    :offset-assert 8)
   (num-verts   uint32    :offset-assert 12)
   (vertex-data uint32    :offset-assert 16)
   ;; todo - this could be wrong
   (tris        collide-mesh-tri 1 :inline :offset 32)
   )
  :method-count-assert 16
  :size-assert         #x28
  :flag-assert         #x1000000028
  (:methods
    (dummy-9 () none 9)
    (dummy-10 () none 10)
    (dummy-11 () none 11)
    (dummy-12 () none 12)
    (dummy-13 () none 13)
    (dummy-14 () none 14)
    (dummy-15 () none 15)
    )
  )

(deftype collide-mesh-cache (basic)
  ((used-size uint32        :offset-assert 4)
   (max-size  uint32        :offset-assert 8)
   (id        uint64        :offset-assert 16)
   (data      uint8 #xa000  :offset 32)
   )
  :method-count-assert 12
  :size-assert         #xa020
  :flag-assert         #xc0000a020
  (:methods
    (dummy-9 () none 9)
    (is-id? (_type_ int) symbol 10)
    (next-id! (_type_) uint 11)
    )
  )

(deftype collide-mesh-cache-tri (structure)
  ((vertex vector   3     :inline :offset-assert 0)
   (normal vector         :inline :offset-assert 48)
   (bbox4w bounding-box4w :inline :offset-assert 64)
   (pat    pat-surface            :offset 60)
   )
  :method-count-assert 9
  :size-assert         #x60
  :flag-assert         #x900000060
  )

;; - Symbols

(define-extern *collide-mesh-cache* collide-mesh-cache)


;; ----------------------
;; File - collide-shape-h
;; Source Path - engine/collide/collide-shape-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype collide-sticky-rider (structure)
  ((rider-handle    handle         :offset-assert 0)
   (sticky-prim     basic          :offset-assert 8)
   (prim-ry         float          :offset-assert 12)
   (rider-local-pos vector :inline :offset-assert 16)
   )
  :method-count-assert 10
  :size-assert         #x20
  :flag-assert         #xa00000020
  (:methods
    (set-rider! (_type_ handle) symbol 9)
    )
  )

(deftype collide-sticky-rider-group (basic)
  ((num-riders       int32     :offset-assert 4)
   (allocated-riders int32     :offset-assert 8)
   (rider            collide-sticky-rider 1 :inline :offset-assert 16)
   )
  :method-count-assert 11
  :size-assert         #x30
  :flag-assert         #xb00000030
  (:methods
    (new (symbol type int) _type_ 0)
    (dummy-9 () none 9)
    (reset! (_type_) int 10)
    )
  )

(deftype pull-rider-info (structure)
  ((rider          collide-sticky-rider         :offset-assert 0)
   (rider-cshape   basic                        :offset-assert 4)
   (rider-delta-ry float                        :offset-assert 8)
   (rider-dest     vector               :inline :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

(deftype collide-shape-intersect (basic)
  ((move-vec       vector             :inline :offset-assert 16)
   (best-u         float                      :offset-assert 32)
   (best-tri       collide-tri-result :inline :offset-assert 48)
   (best-from-prim basic                      :offset-assert 132)
   (best-to-prim   basic                      :offset-assert 136)
   )
  :method-count-assert 10
  :size-assert         #x8c
  :flag-assert         #xa0000008c
  (:methods
    (dummy-9 () none 9)
    )
  )

(deftype collide-overlap-result (structure)
  ((best-dist      float                      :offset-assert 0)
   (best-from-prim basic                      :offset-assert 4)
   (best-to-prim   basic                      :offset-assert 8)
   (best-from-tri  collide-tri-result :inline :offset-assert 16)
   )
  :method-count-assert 10
  :size-assert         #x64
  :flag-assert         #xa00000064
  (:methods
    (reset! (_type_) none 9)
    )
  )

(deftype overlaps-others-params (structure)
  ((options uint32  :offset-assert 0)
   (tlist   basic   :offset-assert 4)
   )
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )

(deftype collide-prim-core (structure)
  ((world-sphere vector  :inline :offset-assert 0)
   (collide-as   uint64          :offset-assert 16)
   (action       uint32          :offset-assert 24)
   (offense      int8            :offset-assert 28)
   (prim-type    int8            :offset-assert 29)
   (extra        uint8 2       :offset-assert 30)
   (quad         uint128 2       :offset 0)
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

(deftype collide-shape-prim (basic)
  ((cshape          basic                     :offset-assert 4)
   (prim-id         uint32                    :offset-assert 8)
   (transform-index int8                      :offset-assert 12)
   (prim-core       collide-prim-core :inline :offset-assert 16)
   (local-sphere    vector            :inline :offset-assert 48)
   (collide-with    uint64                    :offset-assert 64)
   (world-sphere    vector            :inline :offset 16)
   (collide-as      uint64                    :offset 32)
   (action          uint32                    :offset 40)
   (offense         int8                      :offset 44)
   (prim-type       int8                      :offset 45)
   (radius          meters                    :offset 60)
   )
  :method-count-assert 28
  :size-assert         #x48
  :flag-assert         #x1c00000048
  (:methods
    (new (symbol type basic uint int) _type_ 0)
    (dummy-9 () none 9)
    (dummy-10 () none 10)
    (dummy-11 () none 11)
    (dummy-12 () none 12)
    (dummy-13 () none 13)
    (dummy-14 () none 14)
    (dummy-15 () none 15)
    (dummy-16 () none 16)
    (dummy-17 () none 17)
    (dummy-18 () none 18)
    (dummy-19 () none 19)
    (dummy-20 () none 20)
    (dummy-21 () none 21)
    (dummy-22 () none 22)
    (dummy-23 () none 23)
    (dummy-24 () none 24)
    (dummy-25 () none 25)
    (dummy-26 () none 26)
    (dummy-27 () none 27)
    )
  )

(deftype collide-shape-prim-sphere (collide-shape-prim)
  ((pat             pat-surface                    :offset-assert 72)
   )
  :method-count-assert 28
  :size-assert         #x4c
  :flag-assert         #x1c0000004c
  (:methods
    (new (symbol type basic uint) _type_ 0)
    (dummy-9 () none 9)
    (dummy-10 () none 10)
    (dummy-11 () none 11)
    (dummy-12 () none 12)
    (dummy-13 () none 13)
    (dummy-14 () none 14)
    (dummy-15 () none 15)
    (dummy-16 () none 16)
    (dummy-17 () none 17)
    (dummy-18 () none 18)
    (dummy-19 () none 19)
    (dummy-20 () none 20)
    (dummy-21 () none 21)
    (dummy-22 () none 22)
    (dummy-23 () none 23)
    (dummy-24 () none 24)
    (dummy-25 () none 25)
    (dummy-26 () none 26)
    (dummy-27 () none 27)
    )
  )

(deftype collide-shape-prim-mesh (collide-shape-prim)
  ((mesh            basic                     :offset-assert 72)
   (mesh-id         int32                     :offset-assert 76)
   (mesh-cache-id   uint64                    :offset-assert 80)
   (mesh-cache-tris uint32                    :offset-assert 88)
   )
  :method-count-assert 29
  :size-assert         #x5c
  :flag-assert         #x1d0000005c
  (:methods
    (new (symbol type basic uint uint) _type_ 0)
    (dummy-9 () none 9)
    (dummy-10 () none 10)
    (dummy-11 () none 11)
    (dummy-12 () none 12)
    (dummy-13 () none 13)
    (dummy-14 () none 14)
    (dummy-15 () none 15)
    (dummy-16 () none 16)
    (dummy-17 () none 17)
    (dummy-18 () none 18)
    (dummy-19 () none 19)
    (dummy-20 () none 20)
    (dummy-21 () none 21)
    (dummy-22 () none 22)
    (dummy-23 () none 23)
    (dummy-24 () none 24)
    (dummy-25 () none 25)
    (dummy-26 () none 26)
    (dummy-27 () none 27)
    (dummy-28 () none 28)
    )
  )

(deftype collide-shape-prim-group (collide-shape-prim)
  ((num-prims       int32                     :offset-assert 72)
   (allocated-prims int32                     :offset-assert 76)
   (prim            uint32           1       :offset-assert 80)
   )
  :method-count-assert 30
  :size-assert         #x54
  :flag-assert         #x1e00000054
  (:methods
    (new (symbol type basic uint int) _type_ 0)
    (dummy-9 () none 9)
    (dummy-10 () none 10)
    (dummy-11 () none 11)
    (dummy-12 () none 12)
    (dummy-13 () none 13)
    (dummy-14 () none 14)
    (dummy-15 () none 15)
    (dummy-16 () none 16)
    (dummy-17 () none 17)
    (dummy-18 () none 18)
    (dummy-19 () none 19)
    (dummy-20 () none 20)
    (dummy-21 () none 21)
    (dummy-22 () none 22)
    (dummy-23 () none 23)
    (dummy-24 () none 24)
    (dummy-25 () none 25)
    (dummy-26 () none 26)
    (dummy-27 () none 27)
    (dummy-28 () none 28)
    (dummy-29 () none 29)
    )
  )

(deftype collide-shape (trsqv)
  ((process               process            :offset-assert 140)
   (max-iteration-count   uint8              :offset-assert 144)
   (nav-flags             uint8              :offset-assert 145)
   (pad-byte              uint8      2       :offset-assert 146)
   (pat-ignore-mask       pat-surface        :offset-assert 148)
   (event-self            basic              :offset-assert 152)
   (event-other           basic              :offset-assert 156)
   (root-prim             basic              :offset-assert 160)
   (riders                basic              :offset-assert 164)
   (backup-collide-as     uint64             :offset-assert 168)
   (backup-collide-with   uint64             :offset-assert 176)
   )
  :method-count-assert 56
  :size-assert         #xb8
  :flag-assert         #x38000000b8
  (:methods
    (new (symbol type process collide-list-enum) _type_)
    (dummy-28 () none 28)
    (dummy-29 () none 29)
    (dummy-30 () none 30)
    (dummy-31 () none 31)
    (dummy-32 () none 32)
    (dummy-33 () none 33)
    (dummy-34 () none 34)
    (dummy-35 (_type_) none 35)
    (dummy-36 () none 36)
    (dummy-37 () none 37)
    (dummy-38 () none 38)
    (dummy-39 () none 39)
    (dummy-40 () none 40)
    (dummy-41 () none 41)
    (dummy-42 () none 42)
    (dummy-43 () none 43)
    (dummy-44 (_type_) none 44)
    (dummy-45 (_type_) none 45)
    (dummy-46 () none 46)
    (dummy-47 (_type_) none 47)
    (dummy-48 (_type_) none 48)
    (dummy-49 () none 49)
    (dummy-50 () none 50)
    (dummy-51 () none 51)
    (dummy-52 () none 52)
    (dummy-53 () none 53)
    (dummy-54 () none 54)
    (dummy-55 () none 55)
    )
  )

(deftype collide-shape-moving (collide-shape)
  ((rider-time            uint64             :offset-assert 184)
   (rider-last-move       vector     :inline :offset-assert 192)
   (trans-old             vector    3 :inline      :offset-assert 208)
   (poly-pat              pat-surface        :offset-assert 256)
   (cur-pat               pat-surface        :offset-assert 260)
   (ground-pat            pat-surface        :offset-assert 264)
   (status                uint64             :offset-assert 272)
   (old-status            uint64             :offset-assert 280)
   (prev-status           uint64             :offset-assert 288)
   (reaction-flag         uint32             :offset-assert 296)
   (reaction              basic              :offset-assert 300)
   (no-reaction           basic              :offset-assert 304)
   (local-normal          vector     :inline :offset-assert 320)
   (surface-normal        vector     :inline :offset-assert 336)
   (poly-normal           vector     :inline :offset-assert 352)
   (ground-poly-normal    vector     :inline :offset-assert 368)
   (ground-touch-point    vector     :inline :offset-assert 384)
   (shadow-pos            vector     :inline :offset-assert 400)
   (ground-impact-vel     meters             :offset-assert 416)
   (surface-angle         float              :offset-assert 420)
   (poly-angle            float              :offset-assert 424)
   (touch-angle           float              :offset-assert 428)
   (coverage              float              :offset-assert 432)
   (dynam                 basic              :offset-assert 436)
   (surf                  basic              :offset-assert 440)
   )
  :method-count-assert 65
  :size-assert         #x1bc
  :flag-assert         #x41000001bc
  (:methods
    (dummy-56 () none 56)
    (dummy-57 () none 57)
    (dummy-58 () none 58)
    (dummy-59 () none 59)
    (dummy-60 () none 60)
    (dummy-61 () none 61)
    (dummy-62 () none 62)
    (dummy-63 () none 63)
    (dummy-64 () none 64)
    )
  )

;; - Symbols

(define-extern *collide-hit-by-player-list* engine)
(define-extern *collide-usually-hit-by-player-list* engine)
(define-extern *collide-hit-by-others-list* engine)
(define-extern *collide-player-list* engine)
(define-extern *collide-shape-prim-backgnd* collide-shape-prim-mesh)
(define-extern *collide-shape-prim-water* collide-shape-prim-mesh)


;; ----------------------
;; File - collide-target-h
;; Source Path - engine/collide/collide-target-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype collide-history (structure)
  ((intersect      vector :inline :offset-assert 0)
   (trans          vector :inline :offset-assert 16)
   (transv         vector :inline :offset-assert 32)
   (transv-out     vector :inline :offset-assert 48)
   (local-normal   vector :inline :offset-assert 64)
   (surface-normal vector :inline :offset-assert 80)
   (time           uint64         :offset-assert 96)
   (status         uint64         :offset-assert 104)
   (pat            pat-surface    :offset-assert 112)
   (reaction-flag  uint32         :offset-assert 116)
   )
  :method-count-assert 10
  :size-assert         #x78
  :flag-assert         #xa00000078
  (:methods
    (update! (_type_ collide-shape-moving vector vector vector) _type_ 9)
    )
  )

(deftype control-info (collide-shape-moving)
  (
   (some-quaternion quaternion :offset 496)
   (unknown-vector00  vector :inline  :offset 576)
   (unknown-surface  surface  :offset 660)
   (unknown-symbol  symbol  :offset 664)
   (unknown-qword  uint128  :offset 1136)
   (unknown-vector10  vector :inline :offset 1216)
   (unknown-vector11  vector :inline :offset 1232)
   (unknown-vector12  vector :inline :offset 1248)
   (unknown-vector13  vector :inline :offset 1264)
   ;; these were determined from racer-collision-reaction.
   (history-length int16 :offset 2490)
   (history-data collide-history 128 :inline :offset-assert 2496)
   (pad uint32 27)
   )
  :size-assert #x4a2c
  :method-count-assert 65
  :flag-assert #x4100004a2c
  )


;; ----------------------
;; File - collide-touch-h
;; Source Path - engine/collide/collide-touch-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype touching-prim (structure)
  ((cprim    basic                      :offset-assert 0)
   (has-tri? basic                      :offset-assert 4)
   (tri      collide-tri-result :inline :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x64
  :flag-assert         #x900000064
  )

(deftype touching-prims-entry (structure)
  ((next       touching-prims-entry         :offset-assert 0)
   (prev       touching-prims-entry         :offset-assert 4)
   (allocated? basic                        :offset-assert 8)
   (u          float                        :offset-assert 12)
   (prim1      touching-prim        :inline :offset-assert 16)
   (prim2      touching-prim        :inline :offset-assert 128)
   )
  :method-count-assert 13
  :size-assert         #xe4
  :flag-assert         #xd000000e4
  (:methods
    (dummy-9 () none 9)
    (dummy-10 () none 10)
    (dummy-11 () none 11)
    (dummy-12 () none 12)
    )
  )

(deftype touching-prims-entry-pool (structure)
  ((head  touching-prims-entry    :offset-assert 0)
   (nodes touching-prims-entry 64 :inline :offset-assert 16)
   )
  :method-count-assert 13
  :size-assert         #x3c10
  :flag-assert         #xd00003c10
  (:methods
    (new (symbol type) _type_ 0)
    (dummy-9 () none 9)
    (dummy-10 () none 10)
    (init-list! (_type_) none 11)
    (dummy-12 () none 12)
    )
  )

(deftype touching-shapes-entry (structure)
  ((cshape1   basic                 :offset-assert 0)
   (cshape2   basic                 :offset-assert 4)
   (resolve-u int8                  :offset-assert 8)
   (head      touching-prims-entry  :offset-assert 12)
   )
  :allow-misaligned
  :method-count-assert 18
  :size-assert         #x10
  :flag-assert         #x1200000010
  (:methods
    (dummy-9 () none 9)
    (dummy-10 () none 10)
    (dummy-11 () none 11)
    (dummy-12 () none 12)
    (dummy-13 () none 13)
    (dummy-14 () none 14)
    (dummy-15 () none 15)
    (get-head (_type_) touching-prims-entry 16)
    (unknown1 (_type_ (pointer uint32)) uint 17)
    )
  )

(deftype touching-list (structure)
  ((num-touching-shapes int32      :offset-assert 0)
   (resolve-u           int8       :offset-assert 4)
   (touching-shapes     touching-shapes-entry 32 :inline :offset-assert 8)
   )
  :method-count-assert 15
  :size-assert         #x208
  :flag-assert         #xf00000208
  (:methods
    (new (symbol type) _type_ 0)
    (dummy-9 () none 9)
    (dummy-10 () none 10)
    (dummy-11 () none 11)
    (dummy-12 () none 12)
    (dummy-13 () none 13)
    (dummy-14 () none 14)
    )
  )

;; - Symbols

(define-extern *touching-prims-entry-pool* touching-prims-entry-pool)
(define-extern *touching-list* touching-list)


;; ----------------------
;; File - collide-edge-grab-h
;; Source Path - engine/collide/collide-edge-grab-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype edge-grab-info (structure)
  ((world-vertex             vector 6 :inline      :offset-assert 0)
   (local-vertex             vector 6 :inline      :offset-assert 96)
   (actor-cshape-prim-offset int32           :offset-assert 192)
   (actor-handle             uint64          :offset-assert 200)
   (hanging-matrix           matrix  :inline :offset-assert 208)
   (edge-vertex              vector 2 :inline       :offset 0)
   (center-hold              vector  :inline :offset 32)
   (tri-vertex               vector 3 :inline     :offset 48)
   (left-hand-hold           vector  :inline :offset-assert 272)
   (right-hand-hold          vector  :inline :offset-assert 288)
   (center-hold-old          vector  :inline :offset-assert 304)
   (edge-tri-pat             uint32          :offset-assert 320)
   )
  :method-count-assert 11
  :size-assert         #x144
  :flag-assert         #xb00000144
  (:methods
    (dummy-9 () none 9)
    (dummy-10 () none 10)
    )
  )

(declare-type collide-cache-tri structure)
(deftype collide-edge-tri (structure)
  ((ctri   collide-cache-tri         :offset-assert 0)
   (normal vector            :inline :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

(deftype collide-edge-edge (structure)
  ((ignore        basic                    :offset-assert 0)
   (etri          collide-edge-tri         :offset-assert 4)
   (vertex-ptr    vector         2       :offset-assert 8)
   (outward       vector           :inline :offset-assert 16)
   (edge-vec-norm vector           :inline :offset-assert 32)
   )
  :method-count-assert 9
  :size-assert         #x30
  :flag-assert         #x900000030
  )

(deftype collide-edge-hold-item (structure)
  ((next       collide-edge-hold-item         :offset-assert 0)
   (rating     float                          :offset-assert 4)
   (split      int8                           :offset-assert 8)
   (edge       collide-edge-edge              :offset-assert 12)
   (center-pt  vector                 :inline :offset-assert 16)
   (outward-pt vector                 :inline :offset-assert 32)
   )
  :method-count-assert 9
  :size-assert         #x30
  :flag-assert         #x900000030
  )

(deftype collide-edge-hold-list (structure)
  ((num-allocs   uint32                    :offset-assert 0)
   (num-attempts uint32                    :offset-assert 4)
   (head         collide-edge-hold-item    :offset-assert 8)
   (items        collide-edge-hold-item  32 :inline :offset-assert 16)
   (attempts     qword   32 :inline :offset-assert 1552)
   )
  :method-count-assert 11
  :size-assert         #x810
  :flag-assert         #xb00000810
  (:methods
    (dummy-9 () none 9)
    (dummy-10 () none 10)
    )
  )

(deftype collide-edge-work (structure)
  ((ccache                       basic                          :offset-assert 0)
   (cshape                       basic                          :offset-assert 4)
   (num-verts                    uint32                         :offset-assert 8)
   (num-edges                    uint32                         :offset-assert 12)
   (num-tris                     uint32                         :offset-assert 16)
   (cache-fill-box               bounding-box           :inline :offset-assert 32)
   (within-reach-box             bounding-box           :inline :offset-assert 64)
   (within-reach-box4w           bounding-box4w         :inline :offset-assert 96)
   (search-pt                    vector                 :inline :offset-assert 128)
   (search-dir-vec               vector                 :inline :offset-assert 144)
   (max-dist-sqrd-to-outward-pt  float                          :offset-assert 160)
   (max-dir-cosa-delta           float                          :offset-assert 164)
   (split-dists                  float                2       :offset-assert 168)
   (outward-offset               vector                 :inline :offset-assert 176)
   (local-cache-fill-box         bounding-box           :inline :offset-assert 192)
   (local-within-reach-box       bounding-box           :inline :offset-assert 224)
   (local-player-spheres         sphere   12   :inline   :offset-assert 256)
   (world-player-spheres         sphere                12  :inline    :offset-assert 448)
   (local-player-hanging-spheres sphere                6   :inline    :offset 256)
   (world-player-hanging-spheres sphere                6    :inline   :offset 448)
   (local-player-leap-up-spheres sphere                6    :inline   :offset 352)
   (world-player-leap-up-spheres sphere                6    :inline   :offset 544)
   (verts                        vector      64 :inline     :offset-assert 640)
   (edges                        collide-edge-edge     96  :inline    :offset-assert 1664)
   (tris                         collide-edge-tri    48  :inline    :offset-assert 6272)
   (hold-list                    collide-edge-hold-list :inline :offset-assert 7808)
   )
  :method-count-assert 20
  :size-assert         #x2690
  :flag-assert         #x1400002690
  (:methods
    (dummy-9 () none 9)
    (dummy-10 () none 10)
    (dummy-11 () none 11)
    (dummy-12 () none 12)
    (dummy-13 () none 13)
    (dummy-14 () none 14)
    (dummy-15 () none 15)
    (dummy-16 () none 16)
    (dummy-17 () none 17)
    (dummy-18 () none 18)
    (dummy-19 () none 19)
    )
  )

;; - Symbols

(define-extern *collide-edge-work* collide-edge-work)
(define-extern *edge-grab-info* edge-grab-info)


;; ----------------------
;; File - process-drawable-h
;; Source Path - engine/draw/process-drawable-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern joint-control-reset! (function joint-control joint-control-channel none))
(define-extern cspace-index-by-name (function process-drawable string int))
(define-extern cspace-by-name (function process-drawable string cspace))
(define-extern cspace-by-name-no-fail (function process-drawable string cspace))
(define-extern cspace-index-by-name-no-fail (function process-drawable string int))
(define-extern num-func-none (function joint-control-channel float float float))
(define-extern num-func-+! (function joint-control-channel float float float))
(define-extern num-func--! (function joint-control-channel float float float))
(define-extern num-func-loop! (function joint-control-channel float float float))
(define-extern num-func-seek! (function joint-control-channel float float float))
(define-extern num-func-blend-in! (function joint-control-channel float float float))
(define-extern num-func-chan (function joint-control-channel float float float))
(define-extern num-func-identity (function joint-control-channel float float float))


;; ----------------------
;; File - effect-control-h
;; Source Path - engine/game/effect-control-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype effect-control (basic)
  ((process          process-drawable   :offset-assert 4)
   (flags            uint32  :offset-assert 8)
   (last-frame-group art-joint-anim   :offset-assert 12)
   (last-frame-num   float   :offset-assert 16)
   (channel-offset   int32   :offset-assert 20)
   (res              res-lump   :offset-assert 24)
   (name             uint32  :offset-assert 28)
   (param            uint32  :offset-assert 32)
   )
  :method-count-assert 15
  :size-assert         #x24
  :flag-assert         #xf00000024
  (:methods
    (new (symbol type process-drawable) _type_)
    (dummy-9 () none 9)
    (dummy-10 () none 10)
    (dummy-11 () none 11)
    (dummy-12 () none 12)
    (set-channel-offset! (_type_ int) none 13)
    (dummy-14 () none 14)
    )
  )


;; ----------------------
;; File - collide-frag-h
;; Source Path - engine/collide/collide-frag-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype collide-frag-vertex (vector)
  ()
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype collide-frag-mesh (basic)
  ((packed-data     uint32         :offset-assert 4)
   (pat-array       uint32         :offset-assert 8)
   (strip-data-len  uint16         :offset-assert 12)
   (poly-count      uint16         :offset-assert 14)
   (base-trans      vector :inline :offset-assert 16)
   ;; these go in the w of the vector above.
   (vertex-count    uint8          :offset 28)
   (vertex-data-qwc uint8          :offset 29)
   (total-qwc       uint8          :offset 30)
   (unused          uint8          :offset 31)
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

(deftype collide-fragment (drawable)
  ((mesh    collide-frag-mesh          :offset 8)
   )
  :method-count-assert 18
  :size-assert         #x20
  :flag-assert         #x1200000020
  )

(deftype drawable-inline-array-collide-fragment (drawable-inline-array)
  ((data    collide-fragment 1 :inline      :offset-assert 32)
   (pad     uint32) ;; ending in inline basic always results in 4 byte pad.
   )
  :method-count-assert 18
  :size-assert         #x44
  :flag-assert         #x1200000044
  )

(deftype drawable-tree-collide-fragment (drawable-tree)
  ()
  :method-count-assert #x12
  :size-assert #x24
  :flag-assert #x1200000024
  )


;; ----------------------
;; File - projectiles-h
;; Source Path - engine/game/projectiles-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype projectile (process-drawable)
  ((base-trans      vector  :inline :offset-assert 176)
   (target          vector  :inline :offset-assert 192)
   (target-base     vector  :inline :offset-assert 208)
   (parent-base     vector  :inline :offset-assert 224)
   (parent-quat     vector  :inline :offset-assert 240)
   (base-vector     vector  :inline :offset-assert 256)
   (timeout         uint64          :offset-assert 272)
   (options         uint64          :offset-assert 280)
   (last-target     uint64          :offset-assert 288)
   (notify-handle   uint64          :offset-assert 296)
   (max-speed       float           :offset-assert 304)
   (max-turn        float           :offset-assert 308)
   (old-dist        float   16      :offset-assert 312)
   (old-dist-count  int32           :offset-assert 376)
   (hits            int32           :offset-assert 380)
   (max-hits        int32           :offset-assert 384)
   (tween           float           :offset-assert 388)
   (attack-mode     basic           :offset-assert 392)
   (update-velocity basic           :offset-assert 396)
   (counter         int32           :offset-assert 400)
   (target-count    int32           :offset-assert 404)
   (sound-id        sound-id        :offset-assert 408)
   )
  :heap-base #x130
  :method-count-assert 29
  :size-assert         #x19c
  :flag-assert         #x1d0130019c
  ;; inherited inspect of process-drawable
  (:methods
    (dummy-20 () none 20)
    (dummy-21 () none 21)
    (dummy-22 () none 22)
    (dummy-23 () none 23)
    (dummy-24 () none 24)
    (dummy-25 () none 25)
    (dummy-26 () none 26)
    (dummy-27 () none 27)
    (dummy-28 () none 28)
    )
  )

(deftype projectile-yellow (projectile)
  ((mode  int32  :offset-assert 412)
   (angle float  :offset-assert 416)
   )
  :heap-base #x140
  :method-count-assert 29
  :size-assert         #x1a4
  :flag-assert         #x1d014001a4
  )

(deftype projectile-blue (projectile)
  ((mode      int32  :offset-assert 412)
   (joint-num int32  :offset-assert 416)
   )
  :heap-base #x140
  :method-count-assert 29
  :size-assert         #x1a4
  :flag-assert         #x1d014001a4
  (:methods
    (dummy-20 () none 20)
    (dummy-21 () none 21)
    (dummy-22 () none 22)
    (dummy-23 () none 23)
    (dummy-24 () none 24)
    (dummy-25 () none 25)
    (dummy-26 () none 26)
    (dummy-27 () none 27)
    (dummy-28 () none 28)
    )
  )


;; ----------------------
;; File - target-h
;; Source Path - engine/target/target-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype target (process-drawable)
  ((control             control-info        :score 100 :offset 112)
   (skel2               basic               :offset-assert 176)
   (racer               basic               :offset-assert 180)
   (game                game-info           :offset-assert 184)
   (neck                joint-mod           :offset-assert 188)
   (state-hook-time     uint64              :offset-assert 192)
   (state-hook          function            :offset-assert 200)
   (cam-user-mode       symbol              :offset-assert 204)
   (sidekick            uint32              :offset-assert 208)
   (manipy              uint32              :offset-assert 212)
   (attack-info         attack-info :inline :offset-assert 224)
   (attack-info-rec     attack-info :inline :offset-assert 336)
   (anim-seed           uint64              :offset-assert 440)
   (alt-cam-pos         vector      :inline :offset-assert 448)
   (snowball            basic               :offset-assert 464)
   (tube                basic               :offset-assert 468)
   (flut                basic               :offset-assert 472)
   (current-level       level               :offset-assert 476)
   (saved-pos           transformq  :inline :offset-assert 480)
   (saved-owner         uint64              :offset-assert 528)
   (alt-neck-pos        vector      :inline :offset-assert 544)
   (fp-hud              uint64              :offset-assert 560)
   (no-load-wait        uint64              :offset-assert 568)
   (no-look-around-wait uint64              :offset-assert 576)
   )
  :heap-base #x1e0
  :method-count-assert 21
  :size-assert         #x248
  :flag-assert         #x1501e00248
  ;; inherited inspect of process-drawable
  (:methods
    (dummy-20 () none 20)
    )
  )

(deftype sidekick (process-drawable)
  ((control          control-info   :offset 112)
   (anim-seed        uint64  :offset 192)
   (shadow-in-movie? basic   :offset-assert 200)
   )
  :heap-base #x60
  :method-count-assert 20
  :size-assert         #xcc
  :flag-assert         #x14006000cc
  ;; inherited inspect of process-drawable
  )

;; - Symbols

(define-extern *target* target)
(define-extern *sidekick* sidekick)


;; ----------------------
;; File - depth-cue-h
;; Source Path - engine/gfx/depth-cue-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype depth-cue-data (structure)
  ((data      vector :inline :offset-assert 0)
   (sharpness float          :offset 0)
   (alpha     float          :offset 4)
   (distance  float          :offset 8)
   (w         float          :offset 12)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype depth-cue-work (structure)
  ((texture-strip-tmpl dma-gif-packet :inline :offset-assert 0)
   (temp-strip-tmpl    dma-gif-packet :inline :offset-assert 32)
   (stencil-tmpl       dma-gif-packet :inline :offset-assert 64)
   (clear-color        vector4w       :inline :offset-assert 96)
   (set-color          vector4w       :inline :offset-assert 112)
   (draw-color         vector4w       :inline :offset-assert 128)
   (depth              depth-cue-data         :offset-assert 144)
   (front              depth-cue-data         :offset-assert 148)
   )
  :method-count-assert 9
  :size-assert         #x98
  :flag-assert         #x900000098
  )


;; ----------------------
;; File - stats-h
;; Source Path - engine/debug/stats-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype tr-stat (structure)
  ((groups    uint16  :offset-assert 0)
   (fragments uint16  :offset-assert 2)
   (tris      uint32  :offset-assert 4)
   (dverts    uint32  :offset-assert 8)
   (instances uint16  :offset-assert 12)
   (pad       uint16  :offset-assert 14)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype merc-global-stats (structure)
  ((merc      tr-stat :inline :offset-assert 0)
   (mercneric tr-stat :inline :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

(deftype perf-stat (structure)
  ((frame-number   uint32  :offset-assert 0)
   (count          uint32  :offset-assert 4)
   (cycles         uint32  :offset-assert 8)
   (instructions   uint32  :offset-assert 12)
   (icache         uint32  :offset-assert 16)
   (dcache         uint32  :offset-assert 20)
   (select         uint32  :offset-assert 24)
   (ctrl           uint32  :offset-assert 28)
   (accum0         uint32  :offset-assert 32)
   (accum1         uint32  :offset-assert 36)
   (to-vu0-waits   uint32  :offset-assert 40)
   (to-spr-waits   uint32  :offset-assert 44)
   (from-spr-waits uint32  :offset-assert 48)
   )
  :method-count-assert 14
  :size-assert         #x34
  :flag-assert         #xe00000034
  (:methods
    (dummy-9 (_type_) none 9)
    (dummy-10 (_type_) none 10)
    (reset! (_type_) none 11)
    (read! (_type_) none 12)
    (update-wait-stats (_type_ uint uint uint) none 13)
    )
  )

(deftype perf-stat-array (inline-array-class)
  ((data perf-stat :inline :dynamic :offset-assert 16))
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )


;; ----------------------
;; File - bsp-h
;; Source Path - engine/gfx/vis/bsp-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype bsp-node (structure)
  ((front       int32          :offset-assert 0)
   (back        int32          :offset-assert 4)
   (front-flags uint32         :offset-assert 8)
   (back-flags  uint32         :offset-assert 12)
   (plane       vector :inline :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

(declare-type entity-camera basic)
(deftype bsp-header (drawable)
  (
   (info file-info :offset 4)
   (all-visible-list (pointer uint16) :offset-assert 32)
   (visible-list-length int32 :offset-assert 36)
   (drawable-trees drawable-tree-array :offset-assert 40)
   (pat pointer :offset-assert 44)
   (pat-length int32 :offset-assert 48)

   ;; not sure what this is
   (unk-data-0 pointer :offset-assert 52)
   (unk-data-0-len int32 :offset-assert 56)

   (unk-data-1 pointer :offset-assert 60)
   (unk-data-1-len int32 :offset-assert 64)

   (unk-zero-0 basic :offset-assert 68)

   (name symbol :offset-assert 72)
   (nickname symbol :offset-assert 76)
   (vis-info level-vis-info 8 :offset-assert 80)
   (actors drawable-inline-array-actor :offset-assert 112)
   (cameras (array entity-camera) :offset-assert 116)
   (nodes (inline-array bsp-node) :offset-assert 120)

   (level level :offset-assert 124)
   (unk-data-2 uint32 5 :offset-assert 128)

   (boxes box8s-array :offset-assert 148)
   (unk-data-3 uint32 :offset-assert 152)
   (ambients drawable-inline-array-ambient :offset-assert 156)
   (unk-data-4 float :offset-assert 160)
   (unk-data-5 float :offset-assert 164)
   (adgifs adgif-shader-array :offset-assert 168)
   (unk-data-6 pointer :offset-assert 172)
   (unk-data-7 pointer :offset-assert 176)
   (unk-data-8 uint32 55 :offset-assert 180)

   )
  :method-count-assert 20
  :size-assert         #x190
  :flag-assert         #x1400000190
  (:methods
    (relocate (_type_ kheap (pointer uint8)) none :replace 7)
    (dummy-18 (_type_) none 18)
    (dummy-19 (_type_) none 19)
    )
  )

(deftype game-level (basic)
  ((master-bsp basic  :offset-assert 4)
   )
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )

(deftype view-frustum (structure)
  ((hither-top-left     vector :inline :offset-assert 0)
   (hither-top-right    vector :inline :offset-assert 16)
   (hither-bottom-left  vector :inline :offset-assert 32)
   (hither-bottom-right vector :inline :offset-assert 48)
   (yon-top-left        vector :inline :offset-assert 64)
   (yon-top-right       vector :inline :offset-assert 80)
   (yon-bottom-left     vector :inline :offset-assert 96)
   (yon-bottom-right    vector :inline :offset-assert 112)
   )
  :method-count-assert 9
  :size-assert         #x80
  :flag-assert         #x900000080
  )

(deftype cl-stat (structure)
  ((fragments uint32  :offset-assert 0)
   (tris      uint32  :offset-assert 4)
   (output    uint32  :offset-assert 8)
   )
  :pack-me
  :method-count-assert 9
  :size-assert         #xc
  :flag-assert         #x90000000c
  )

(deftype collide-stats (structure)
  ((other             cl-stat   :inline :offset-assert 0)
   (total             cl-stat   :inline :offset-assert 12)
   (nodes             uint32            :offset-assert 24)
   (calls             uint32            :offset-assert 28)
   (total-target      stopwatch :inline :offset-assert 32)
   (target-cache-fill stopwatch :inline :offset-assert 64)
   (target-ray-poly   stopwatch :inline :offset-assert 96)
   (pad uint32) ;; end with inline basic
   )
  :method-count-assert 9
  :size-assert         #x80
  :flag-assert         #x900000080
  )

;; - Functions

(define-extern map-bsp-tree (function (function bsp-node none) bsp-header bsp-node none))
(define-extern inspect-bsp-tree (function bsp-header bsp-node none))


;; ----------------------
;; File - collide-cache-h
;; Source Path - engine/collide/collide-cache-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype collide-using-spheres-params (structure)
  ((spheres      uint32  :offset-assert 0)
   (num-spheres  uint32  :offset-assert 4)
   (collide-with uint64  :offset-assert 8)
   (proc         basic   :offset-assert 16)
   (ignore-pat   uint32  :offset-assert 20)
   (solid-only   basic   :offset-assert 24)
   )
  :method-count-assert 9
  :size-assert         #x1c
  :flag-assert         #x90000001c
  )

(deftype collide-puss-sphere (structure)
  ((bsphere sphere         :inline :offset-assert 0)
   (bbox4w  bounding-box4w :inline :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x30
  :flag-assert         #x900000030
  )

(deftype collide-puss-work (structure)
  ((closest-pt     vector         :inline :offset-assert 0)
   (tri-normal     vector         :inline :offset-assert 16)
   (tri-bbox4w     bounding-box4w :inline :offset-assert 32)
   (spheres-bbox4w bounding-box4w :inline :offset-assert 64)
   (spheres        collide-puss-sphere 64 :inline    :offset-assert 96)
   )
  :method-count-assert 11
  :size-assert         #xc60
  :flag-assert         #xb00000c60
  (:methods
    (dummy-9 () none 9)
    (dummy-10 () none 10)
    )
  )

(deftype collide-puyp-work (structure)
  ((best-u     float                      :offset-assert 0)
   (ignore-pat uint32                     :offset-assert 4)
   (tri-out    collide-tri-result         :offset-assert 8)
   (start-pos  vector             :inline :offset-assert 16)
   (move-dist  vector             :inline :offset-assert 32)
   )
  :method-count-assert 9
  :size-assert         #x30
  :flag-assert         #x900000030
  )

(deftype collide-cache-tri (structure)
  ((vertex     vector 3 :inline  :offset-assert 0)
   ;(extra-quad UNKNOWN 16 :offset-assert 48)
   (pat        uint32     :offset-assert 48)
   (prim-index uint16     :offset-assert 52)
   (user16     uint16     :offset-assert 54)
   (user32     uint32 2  :offset-assert 56)
   )
  :method-count-assert 9
  :size-assert         #x40
  :flag-assert         #x900000040
  )

(deftype collide-cache-prim (structure)
  ((prim-core    collide-prim-core :inline :offset-assert 0)
   ;;(extra-quad   UNKNOWN           16      :offset-assert 32)
   (ccache       basic                     :offset-assert 32)
   (prim         basic                     :offset-assert 36)
   (first-tri    uint16                    :offset-assert 40)
   (num-tris     uint16                    :offset-assert 42)
   (unused       uint8           4       :offset-assert 44)
   (world-sphere vector            :inline :offset 0)
   (collide-as   uint64                    :offset 16)
   (action       uint32                    :offset 24)
   (offense      int8                      :offset 28)
   (prim-type    int8                      :offset 29)
   )
  :method-count-assert 11
  :size-assert         #x30
  :flag-assert         #xb00000030
  (:methods
    (dummy-9 () none 9)
    (dummy-10 () none 10)
    )
  )

(deftype collide-cache (basic)
  ((num-tris      int32                  :offset-assert 4)
   (num-prims     int32                  :offset-assert 8)
   (ignore-mask   uint32                 :offset-assert 12)
   (proc          basic                  :offset-assert 16)
   (collide-box   bounding-box   :inline :offset-assert 32)
   (collide-box4w bounding-box4w :inline :offset-assert 64)
   (collide-with  uint64                 :offset-assert 96)
   (prims         collide-cache-prim    100 :inline    :offset-assert 112)
   (tris          collide-cache-tri  461 :inline    :offset-assert 4912)
   )
  :method-count-assert 33
  :size-assert         #x8670
  :flag-assert         #x2100008670
  (:methods
    (dummy-9 () none 9)
    (dummy-10 () none 10)
    (dummy-11 () none 11)
    (dummy-12 () none 12)
    (dummy-13 () none 13)
    (dummy-14 () none 14)
    (dummy-15 () none 15)
    (dummy-16 () none 16)
    (dummy-17 () none 17)
    (dummy-18 () none 18)
    (dummy-19 () none 19)
    (dummy-20 () none 20)
    (dummy-21 () none 21)
    (dummy-22 () none 22)
    (dummy-23 () none 23)
    (dummy-24 () none 24)
    (dummy-25 () none 25)
    (dummy-26 () none 26)
    (dummy-27 () none 27)
    (dummy-28 () none 28)
    (dummy-29 () none 29)
    (dummy-30 () none 30)
    (dummy-31 () none 31)
    (dummy-32 () none 32)
    )
  )

(deftype collide-list-item (structure)
  ((mesh basic  :offset-assert 0)
   (inst basic  :offset-assert 4)
   )
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )

(deftype collide-list (structure)
  ((num-items int32       :offset-assert 0)
   (items     collide-list-item 256 :inline :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x1010
  :flag-assert         #x900001010
  )

(deftype collide-work (structure)
  ((collide-sphere-neg-r sphere         :inline :offset-assert 0)
   (collide-box4w        bounding-box4w :inline :offset-assert 16)
   (inv-mat              matrix         :inline :offset-assert 48)
   )
  :method-count-assert 9
  :size-assert         #x70
  :flag-assert         #x900000070
  )

;; - Symbols

(define-extern *collide-work* collide-work) ;; unknown type
(define-extern *collide-cache* collide-cache) ;; unknown type
(define-extern *collide-list* collide-list) ;; unknown type


;; ----------------------
;; File - collide-h
;; Source Path - engine/collide/collide-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Symbols

(define-extern *collide-test-flag* symbol)


;; ----------------------
;; File - shrubbery-h
;; Source Path - engine/gfx/shrub/shrubbery-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype billboard (drawable)
  ((flat    adgif-shader :inline :offset-assert 32)
   )
  :method-count-assert 18
  :size-assert         #x70
  :flag-assert         #x1200000070
  )

(deftype shrub-view-data (structure)
  ((data           uint128 3       :offset-assert 0)
   (texture-giftag qword   :inline :offset 0)
   (consts         vector  :inline :offset 16)
   (fog-clamp      vector  :inline :offset 32)
   (tex-start-ptr  int32           :offset 16)
   (gifbufsum      float           :offset 16)
   (mtx-buf-ptr    int32           :offset 20)
   (exp23          float           :offset 20)
   (fog-0          float           :offset 24)
   (fog-1          float           :offset 28)
   (fog-min        float           :offset 32)
   (fog-max        float           :offset 36)
   )
  :method-count-assert 9
  :size-assert         #x30
  :flag-assert         #x900000030
  )

(deftype shrubbery (drawable)
  ((textures (inline-array adgif-shader)         :offset 4)
   (header   qword          :offset 8)
   (obj-qwc  uint8          :offset 12)
   (vtx-qwc  uint8          :offset 13)
   (col-qwc  uint8          :offset 14)
   (stq-qwc  uint8          :offset 15)
   (obj      uint32         :score 999 :offset 16)
   (vtx      uint32         :score 999 :offset 20)
   (col      uint32         :score 999 :offset 24)
   (stq      uint32         :score 999 :offset 28)
   )
  :method-count-assert 18
  :size-assert         #x20
  :flag-assert         #x1200000020
  )

(deftype instance-shrubbery (instance)
  ((flat-normal  vector   :inline :offset-assert 64)
   (flat-hwidth  float            :offset 76)
   (color        uint32           :offset 8)
   )
  :method-count-assert 18
  :size-assert         #x50
  :flag-assert         #x1200000050
  )

(deftype drawable-inline-array-instance-shrub (drawable-inline-array)
  ((data instance-shrubbery 1 :inline :offset-assert 32)
   (pad uint32)
   )
  :method-count-assert #x12
  :size-assert #x74
  :flag-assert #x1200000074
  )

(deftype drawable-tree-instance-shrub (drawable-tree)
  ()
  :method-count-assert #x12
  :size-assert #x24
  :flag-assert #x1200000024
  )

(deftype generic-shrub-fragment (drawable)
  ((textures (inline-array adgif-shader)         :score 999 :offset 4)
   (vtx-cnt  uint32         :score 999 :offset 8)
   (cnt-qwc  uint8          :score 999 :offset 12)
   (vtx-qwc  uint8          :score 999 :offset 13)
   (col-qwc  uint8          :score 999 :offset 14)
   (stq-qwc  uint8          :score 999 :offset 15)
   (cnt      uint32         :score 999 :offset 16)
   (vtx      uint32         :score 999 :offset 20)
   (col      uint32         :score 999 :offset 24)
   (stq      uint32         :score 999 :offset 28)
   )
  :method-count-assert 18
  :size-assert         #x20
  :flag-assert         #x1200000020
  )

(deftype prototype-shrubbery (drawable-inline-array)
  ((data generic-shrub-fragment 1 :inline :offset-assert 32)
   (pad uint32)
   )
  :method-count-assert 18
  :size-assert         #x44
  :flag-assert         #x1200000044
  )

(deftype prototype-trans-shrubbery (prototype-shrubbery)
  ()
  :method-count-assert #x12
  :size-assert #x44
  :flag-assert #x1200000044
  )

(deftype prototype-generic-shrub (drawable-group)
  ()
  :method-count-assert #x12
  :size-assert #x24
  :flag-assert #x1200000024
  )

(deftype shrubbery-matrix (structure)
  ((mat   matrix :inline :offset-assert 0)
   (color qword  :inline :offset-assert 64)
   )
  :method-count-assert 9
  :size-assert         #x50
  :flag-assert         #x900000050
  )

(deftype shrub-near-packet (structure)
  ((matrix-tmpl dma-packet :inline :offset-assert 0)
   (header-tmpl dma-packet :inline :offset-assert 16)
   (stq-tmpl    dma-packet :inline :offset-assert 32)
   (color-tmpl  dma-packet :inline :offset-assert 48)
   (vertex-tmpl dma-packet :inline :offset-assert 64)
   (mscal-tmpl  dma-packet :inline :offset-assert 80)
   (init-tmpl   dma-packet :inline :offset-assert 96)
   (init-data   uint32    8       :offset-assert 112)
   )
  :method-count-assert 9
  :size-assert         #x90
  :flag-assert         #x900000090
  )

(deftype instance-shrub-work (structure)
  ((dummy                     qword        3       :inline :offset-assert 0)
   (chaina                    qword        8       :inline :offset-assert 48)
   (chainb                    qword        8       :inline :offset-assert 176)
   (colors                    rgba           1024    :offset-assert 304)
   (matrix-tmpl               qword        20      :inline :offset-assert 4400)
   (count-tmpl                qword        20      :inline :offset-assert 4720)
   (mscalf-tmpl               dma-packet     :inline :offset-assert 5040)
   (mscalf-ret-tmpl           dma-packet     :inline :offset-assert 5056)
   (adgif-tmpl                dma-gif-packet :inline :offset-assert 5072)
   (billboard-tmpl            dma-gif-packet :inline :offset-assert 5104)
   (billboard-const           vector         :inline :offset-assert 5136)
   (shrub-near-packets        shrub-near-packet 6 :inline      :offset-assert 5152)
   (dma-ref                   dma-packet     :inline :offset-assert 6016)
   (dma-end                   dma-packet     :inline :offset-assert 6032)
   (wind-const                vector         :inline :offset-assert 6048)
   (constants                 vector         :inline :offset-assert 6064)
   (color-constant            vector4w       :inline :offset-assert 6080)
   (hmge-d                    vector         :inline :offset-assert 6096)
   (hvdf-offset               vector         :inline :offset-assert 6112)
   (wind-force                vector         :inline :offset-assert 6128)
   (color                     vector         :inline :offset-assert 6144)
   (bb-color                  vector         :inline :offset-assert 6160)
   (min-dist                  vector         :inline :offset-assert 6176)
   (temp-vec                  vector         :inline :offset-assert 6192)
   (guard-plane               plane 4 :inline      :offset-assert 6208)
   (plane                     plane 4 :inline      :offset-assert 6272)
   (last                      uint32        4       :offset-assert 6336)
   (next                      uint32        4       :offset-assert 6352)
   (count                     uint16        4       :offset-assert 6368)
   (mod-count                 uint16        4       :offset-assert 6376)
   (wind-vectors              uint32                 :offset-assert 6384)
   (instance-ptr              uint32                 :offset-assert 6388)
   (chain-ptr                 uint32                 :offset-assert 6392)
   (chain-ptr-next            uint32                 :offset-assert 6396)
   (stack-ptr                 uint32                 :offset-assert 6400)
   (bucket-ptr                uint32                 :offset-assert 6404)
   (src-ptr                   uint32                 :offset-assert 6408)
   (to-spr                    uint32                 :offset-assert 6412)
   (from-spr                  uint32                 :offset-assert 6416)
   (shrub-count               uint32                 :offset-assert 6420)
   ;;(stack-ptr               uint32                 :offset-assert 6400) ;; this field appears twice?
   (node                      uint32        6       :offset 6428)
   (length                    uint32        6       :offset-assert 6452)
   (prototypes                uint32                 :offset-assert 6476)
   ;;(bucket-ptr                uint32                 :offset-assert 6404) appears twice

   (start-bank                uint8        20        :offset 6484)
   (buffer-index              uint32                 :offset-assert 6504)
   (current-spr               uint32                 :offset-assert 6508)
   (current-mem               uint32                 :offset-assert 6512)
   (current-shrub-near-packet uint32                 :offset-assert 6516)
   ;;(to-spr                    uint32                 :offset-assert 6412)
   (dma-buffer                basic                  :offset 6524)
   (near-last                 uint32                 :offset-assert 6528)
   (near-next                 uint32                 :offset-assert 6532)
   (near-count                uint32                 :offset-assert 6536)
   (last-shrubs               uint32                 :offset-assert 6540)
   (chains                    uint32                 :offset-assert 6544)
   (flags                     uint32                 :offset-assert 6548)
   (paused                    basic                  :offset-assert 6552)
   (node-count                uint32                 :offset-assert 6556)
   (inst-count                uint32                 :offset-assert 6560)
   (wait-from-spr             uint32                 :offset-assert 6564)
   (wait-to-spr               uint32                 :offset-assert 6568)
   )
  :method-count-assert 9
  :size-assert         #x19ac
  :flag-assert         #x9000019ac
  )

(deftype instance-shrub-dma (structure)
  ((instancea uint128 325 :offset-assert 0)
   (instanceb uint128 325 :offset-assert 5200)
   (outa      uint128 128 :offset-assert 10400)
   (outb      uint128 128 :offset-assert 12448)
   )
  :method-count-assert 9
  :size-assert         #x38a0
  :flag-assert         #x9000038a0
  )

;; - Functions

(define-extern shrubbery-login-post-texture (function shrubbery none))

;; - Symbols

(define-extern *shrub-state* int)


;; ----------------------
;; File - tie-h
;; Source Path - engine/gfx/tie/tie-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype tie-fragment (drawable)
  ((gif-ref       uint32         :offset 4)
   (point-ref     uint32         :offset 8)
   (color-index   uint16         :offset 12)
   (base-colors   uint8          :offset 14)
   (tex-count     uint16         :offset-assert 32)
   (gif-count     uint16         :offset-assert 34)
   (vertex-count  uint16         :offset-assert 36)
   (color-count   uint16         :offset-assert 38)
   (num-tris      uint16         :offset-assert 40)
   (num-dverts    uint16         :offset-assert 42)
   (dp-ref        uint32         :offset-assert 44)
   (dp-qwc        uint32         :offset-assert 48)
   (generic-ref   uint32         :offset-assert 52)
   (generic-count uint32         :offset-assert 56)
   (debug-lines   basic          :offset-assert 60)
   )
  :method-count-assert 18
  :size-assert         #x40
  :flag-assert         #x1200000040
  )

(deftype instance-tie (instance)
  ((color-indices uint32           :offset 8)
   (bucket-ptr    basic            :offset 12)
   (max-scale     uint16           :offset 38)
   (flags         uint16           :offset 46)
   )
  :method-count-assert 18
  :size-assert         #x40
  :flag-assert         #x1200000040
  )

(deftype drawable-inline-array-instance-tie (drawable-inline-array)
  ((data instance-tie 1 :inline :offset-assert 32)  ;; not sure on type here
   (pad uint32)
   )
  :method-count-assert 18
  :size-assert         #x64
  :flag-assert         #x1200000064
  )

(deftype drawable-tree-instance-tie (drawable-tree)
  ((prototypes proxy-prototype-array-tie           :offset 8)
   )
  :method-count-assert 18
  :size-assert         #x24
  :flag-assert         #x1200000024
  )

(deftype prototype-tie (drawable-inline-array)
  ((data instance-tie 1 :inline :offset-assert 32) ;; not sure on type here
   (pad uint32)
   )
  :method-count-assert 18
  :size-assert         #x64
  :flag-assert         #x1200000064
  )

(deftype tie-matrix (structure)
  ((mat   matrix :inline :offset-assert 0)
   (morph qword  :inline :offset-assert 64)
   (fog   qword  :inline :offset-assert 80)
   )
  :method-count-assert 9
  :size-assert         #x60
  :flag-assert         #x900000060
  )

(deftype instance-tie-work (structure)
  ((wind-const                  vector     :inline :offset-assert 0)
   (hmge-d                      vector     :inline :offset-assert 16)
   (hvdf-offset                 vector     :inline :offset-assert 32)
   (wind-force                  vector     :inline :offset-assert 48)
   (constant                    vector     :inline :offset-assert 64)
   (far-morph                   vector     :inline :offset-assert 80)
   (dist-test                   vector     :inline :offset-assert 96)
   (min-dist                    vector     :inline :offset-assert 112)
   (guard-plane                 plane 4    :inline :offset-assert 128)
   (upload-color-0              dma-packet :inline :offset-assert 192)
   (upload-color-1              dma-packet :inline :offset-assert 208)
   (upload-color-2              dma-packet :inline :offset-assert 224)
   (upload-color-ret            dma-packet :inline :offset-assert 240)
   (upload-color-temp           dma-packet :inline :offset-assert 256)
   (generic-color-0             dma-packet :inline :offset-assert 272)
   (generic-color-1             dma-packet :inline :offset-assert 288)
   (generic-color-end           dma-packet :inline :offset-assert 304)
   (tie-near-perspective-matrix matrix     :inline :offset-assert 320)
   (wind-vectors                uint32             :offset-assert 384)
   (test-id                     uint32             :offset-assert 388)
   (test-id2                    uint32             :offset-assert 392)
   (dma-buffer                  basic              :offset-assert 396)
   (to-spr                      uint32             :offset-assert 400)
   (from-spr                    uint32             :offset-assert 404)
   (wind-work                   uint32             :offset-assert 408)
   (cur-vis-bits                uint32             :offset-assert 412)
   (end-vis-bits                uint32             :offset-assert 416)
   (first-generic-prototype     uint32             :offset-assert 420)
   (refl-fade-fac               float              :offset-assert 424)
   (refl-fade-end               float              :offset-assert 428)
   (flags                       uint32             :offset-assert 432)
   (paused                      basic              :offset-assert 436)
   (wait-from-spr               uint32             :offset-assert 440)
   (wait-to-spr                 uint32             :offset-assert 444)
   )
  :method-count-assert 9
  :size-assert         #x1c0
  :flag-assert         #x9000001c0
  )

(deftype instance-tie-dma (structure)
  ((banka instance-tie 32 :inline :offset-assert 0)
   (bankb instance-tie 32 :inline :offset-assert 2048)
   (outa  uint128           256 :offset-assert 4096)
   (outb  uint128           256 :offset-assert 8192)
   ;; this is outside the type????
   (work  instance-tie-work :dynamic  :offset-assert 12288)
   )
  :method-count-assert 9
  :size-assert         #x3000
  :flag-assert         #x900003000
  )

(deftype prototype-tie-work (structure)
  ((upload-palette-0      dma-packet :inline :offset-assert 0)
   (upload-palette-1      dma-packet :inline :offset-assert 16)
   (upload-model-0        dma-packet :inline :offset-assert 32)
   (upload-model-1        dma-packet :inline :offset-assert 48)
   (upload-model-2        dma-packet :inline :offset-assert 64)
   (upload-model-3        dma-packet :inline :offset-assert 80)
   (upload-model-near-0   dma-packet :inline :offset-assert 96)
   (upload-model-near-1   dma-packet :inline :offset-assert 112)
   (upload-model-near-2   dma-packet :inline :offset-assert 128)
   (upload-model-near-3   dma-packet :inline :offset-assert 144)
   (upload-model-near-4   dma-packet :inline :offset-assert 160)
   (generic-envmap-shader dma-packet :inline :offset-assert 176)
   (generic-palette       dma-packet :inline :offset-assert 192)
   (generic-model-0       dma-packet :inline :offset-assert 208)
   (generic-model-1       dma-packet :inline :offset-assert 224)
   (generic-model-2       dma-packet :inline :offset-assert 240)
   (generic-model-next    dma-packet :inline :offset-assert 256)
   (clamp                 uint64             :offset-assert 272)
   (prototype-array       basic              :offset-assert 280)
   (generic-wait-from-spr uint32             :offset-assert 284)
   (generic-wait-to-spr   uint32             :offset-assert 288)
   (wait-from-spr         uint32             :offset-assert 292)
   (wait-to-spr           uint32             :offset-assert 296)
   (near-wait-from-spr    uint32             :offset-assert 300)
   (near-wait-to-spr      uint32             :offset-assert 304)
   )
  :method-count-assert 9
  :size-assert         #x134
  :flag-assert         #x900000134
  )

(deftype prototype-tie-dma (structure)
  ((colora          rgba 256 :offset-assert 0)
   (colorb          rgba 256 :offset-assert 1024)
   (outa            uint128 256 :offset-assert 2048)
   (outb            uint128 256 :offset-assert 6144)
   (length          uint32      :offset-assert 10240)
   (dma-buffer      basic       :offset-assert 10244)
   (this-frag-count uint32      :offset-assert 10248)

   (next            uint32 4   :offset 10256)

   (geometry        uint32 4   :offset-assert 10272)
   (frag-count      uint8 4   :offset-assert 10288)
   )
  :method-count-assert 9
  :size-assert         #x2834
  :flag-assert         #x900002834
  )

;; - Symbols

(define-extern *instance-tie-work-copy* instance-tie-work)


;; ----------------------
;; File - tfrag-h
;; Source Path - engine/gfx/tfrag/tfrag-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype tfragment-stats (structure)
  ((num-tris   uint16 4 :offset-assert 0)
   (num-dverts uint16 4 :offset-assert 8)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype tfragment-debug-data (structure)
  ((stats       tfragment-stats :inline :offset-assert 0)
   (debug-lines basic                   :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x14
  :flag-assert         #x900000014
  )

(deftype generic-tfragment (structure)
  ((dummy int32  :offset-assert 0)
   )
  :method-count-assert 9
  :size-assert         #x4
  :flag-assert         #x900000004
  )

(deftype tfragment (drawable)
  (
   (color-index       uint16                       :offset 6)
   (debug-data        tfragment-debug-data         :offset 8)
   (color-indices     uint32                       :offset 12)
   (colors            uint32                       :offset 12)
   (dma-chain         uint32              3       :offset-assert 32)
   (dma-common        uint32                       :offset 32)
   (dma-level-0       uint32                       :offset 32)
   (dma-base          uint32                       :offset 36)
   (dma-level-1       uint32                       :offset 40)
   (dma-qwc           uint32              4       :offset 44)
   (shader            uint32                       :offset 48)
   (num-shaders       uint8                        :offset 52)
   (num-base-colors   uint8                        :offset 53)
   (num-level0-colors uint8                        :offset 54)
   (num-level1-colors uint8                        :offset 55)
   (color-offset      uint8                        :offset 56)
   (color-count       uint8                        :offset 57)
   (pad0              uint8                        :offset 58)
   (pad1              uint8                        :offset 59)
   (generic           generic-tfragment            :offset-assert 60)
   )
  :method-count-assert 18
  :size-assert         #x40
  :flag-assert         #x1200000040
  )

(deftype drawable-inline-array-tfrag (drawable-inline-array)
  ((data tfragment 1 :inline :offset-assert 32)
   (pad uint32))
  :method-count-assert 18
  :size-assert         #x64
  :flag-assert         #x1200000064
  )

(deftype drawable-inline-array-trans-tfrag (drawable-inline-array-tfrag)
  ;; I think this is a bug.
  ((data2 tfragment 1 :inline :offset-assert 112)
   (pad2 uint32))
  :method-count-assert #x12
  :size-assert #xb4
  :flag-assert #x12000000b4
  )

(deftype drawable-tree-tfrag (drawable-tree)
  ((time-of-day-pal time-of-day-palette :offset 12))
  :method-count-assert #x12
  :size-assert #x24
  :flag-assert #x1200000024
  )

(deftype drawable-tree-trans-tfrag (drawable-tree-tfrag)
  ()
  :method-count-assert #x12
  :size-assert #x24
  :flag-assert #x1200000024
  )

(deftype drawable-tree-dirt-tfrag (drawable-tree-tfrag)
  ()
  :method-count-assert #x12
  :size-assert #x24
  :flag-assert #x1200000024
  )

(deftype drawable-tree-ice-tfrag (drawable-tree-tfrag)
  ()
  :method-count-assert #x12
  :size-assert #x24
  :flag-assert #x1200000024
  )

(deftype drawable-tree-lowres-tfrag (drawable-tree-tfrag)
  ()
  :method-count-assert #x12
  :size-assert #x24
  :flag-assert #x1200000024
  )

(deftype drawable-tree-lowres-trans-tfrag (drawable-tree-trans-tfrag)
  ()
  :method-count-assert #x12
  :size-assert #x24
  :flag-assert #x1200000024
  )

(deftype tfrag-dists (structure)
  ((data   uint32 16 :offset-assert 0)
   (vector vector 4 :inline  :offset 0)
   (k0s    uint128 2  :offset 0)
   (k1s    uint128 2  :offset 32)
   )
  :method-count-assert 9
  :size-assert         #x40
  :flag-assert         #x900000040
  )

(deftype tfrag-data (structure)
  ((data        uint32     56      :offset 0)
   (vector      vector 14 :inline      :offset 0)
   (fog         vector      :inline :offset 0)
   (val         vector      :inline :offset 16)
   (strgif      qword       :inline :offset 32)
   (fangif      qword       :inline :offset 48)
   (adgif       qword       :inline :offset 64)
   (hvdf-offset vector      :inline :offset 80)
   (hmge-scale  vector      :inline :offset 96)
   (invh-scale  vector      :inline :offset 112)
   (ambient     vector      :inline :offset 128)
   (guard       vector      :inline :offset 144)
   (dists       tfrag-dists :inline :offset 160)
   (k0s         uint128     2       :offset 160)
   (k1s         uint128     2       :offset 192)
   )
  :method-count-assert 9
  :size-assert         #xe0
  :flag-assert         #x9000000e0
  )

(deftype tfrag-control (structure)
  ((num-base-points           uint32  :offset-assert 0)
   (num-shared-base-points    uint32  :offset-assert 4)
   (num-level0-points         uint32  :offset-assert 8)
   (num-shared-level0-points  uint32  :offset-assert 12)
   (num-level1-points         uint32  :offset-assert 16)
   (num-shared-level1-points  uint32  :offset-assert 20)
   (ptr-vtxdata               uint32  :offset-assert 24)
   (ptr-base-points           uint32  :offset-assert 28)
   (ptr-shared-base-points    uint32  :offset-assert 32)
   (ptr-level0-points         uint32  :offset-assert 36)
   (ptr-shared-level0-points  uint32  :offset-assert 40)
   (ptr-level1-points         uint32  :offset-assert 44)
   (ptr-shared-level1-points  uint32  :offset-assert 48)
   (ptr-draw-points           uint32  :offset-assert 52)
   (ptr-interpolated-0        uint32  :offset-assert 56)
   (ptr-shared-interpolated-0 uint32  :offset-assert 60)
   (ptr-interpolated1         uint32  :offset-assert 64)
   (ptr-shared-interpolated1  uint32  :offset-assert 68)
   (ptr-strip-data            uint32  :offset-assert 72)
   (ptr-texture-data          uint32  :offset-assert 76)
   )
  :method-count-assert 9
  :size-assert         #x50
  :flag-assert         #x900000050
  )

(deftype tfrag-stats (structure)
  ((from         int32  :offset-assert 0)
   (to           int32  :offset-assert 4)
   (cnt          int32  :offset-assert 8)
   (tris         int32  :offset-assert 12)
   (tfaces       int32  :offset-assert 16)
   (tfrags       int32  :offset-assert 20)
   (dtris        int32  :offset-assert 24)
   (base-verts   int32  :offset-assert 28)
   (level0-verts int32  :offset-assert 32)
   (level1-verts int32  :offset-assert 36)
   (dma-cnt      int32  :offset-assert 40)
   (dma-dta      int32  :offset-assert 44)
   (dma-tex      int32  :offset-assert 48)
   (strips       int32  :offset-assert 52)
   (drawpoints   int32  :offset-assert 56)
   (vif          int32  :offset-assert 60)
   )
  :method-count-assert 9
  :size-assert         #x40
  :flag-assert         #x900000040
  )

(deftype tfrag-packet (structure)
  ((tag uint128 2 :offset-assert 0)
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

(deftype tfrag-work (structure)
  ((base-tmpl             dma-packet :inline :offset-assert 0)
   (level-0-tmpl          dma-packet :inline :offset-assert 16)
   (common-tmpl           dma-packet :inline :offset-assert 32)
   (level-1-tmpl          dma-packet :inline :offset-assert 48)
   (color-tmpl            dma-packet :inline :offset-assert 64)
   (frag-dists            vector     :inline :offset-assert 80)
   (max-dist              vector     :inline :offset-assert 96)
   (min-dist              vector     :inline :offset-assert 112)
   (color-ptr             vector4w   :inline :offset-assert 128)
   (tr-stat-tfrag         tr-stat            :offset-assert 144)
   (tr-stat-tfrag-near    tr-stat            :offset-assert 148)
   (vu1-enable-tfrag      int32              :offset-assert 152)
   (vu1-enable-tfrag-near int32              :offset-assert 156)
   (cur-vis-bits          uint32             :offset-assert 160)
   (end-vis-bits          uint32             :offset-assert 164)
   (src-ptr               uint32             :offset-assert 168)
   (last-call             uint32             :offset-assert 172)
   (dma-buffer            basic              :offset-assert 176)
   (test-id               uint32             :offset-assert 180)
   (wait-from-spr         uint32             :offset-assert 184)
   (wait-to-spr           uint32             :offset-assert 188)
   (near-wait-from-spr    uint32             :offset-assert 192)
   (near-wait-to-spr      uint32             :offset-assert 196)
   )
  :method-count-assert 9
  :size-assert         #xc8
  :flag-assert         #x9000000c8
  )

(deftype tfrag-dma (structure)
  ((banka  tfragment 16 :inline   :offset-assert 0)
   (bankb  tfragment 16 :inline  :offset-assert 1024)
   (outa   uint128 128  :offset-assert 2048)
   (outb   uint128 128  :offset-assert 4096)
   (colors rgba 2047 :offset-assert 6144) ;; why is this one short!!!
   )
  :method-count-assert 9
  :size-assert         #x37fc
  :flag-assert         #x9000037fc
  )


;; ----------------------
;; File - background-h
;; Source Path - engine/gfx/background-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype background-work (basic)
  ((tfrag-tree-count              int32     :offset-assert 4)
   (tfrag-trees                   drawable-tree-tfrag 8 :offset-assert 8)
   (tfrag-levels                  level 8 :offset-assert 40)
   (trans-tfrag-tree-count        int32     :offset-assert 72)
   (trans-tfrag-trees             drawable-tree-trans-tfrag 8 :offset-assert 76)
   (trans-tfrag-levels            level 8 :offset-assert 108)
   (dirt-tfrag-tree-count         int32     :offset-assert 140)
   (dirt-tfrag-trees              drawable-tree-dirt-tfrag 8 :offset-assert 144)
   (dirt-tfrag-levels             level 8 :offset-assert 176)
   (ice-tfrag-tree-count          int32     :offset-assert 208)
   (ice-tfrag-trees               drawable-tree-ice-tfrag 8 :offset-assert 212)
   (ice-tfrag-levels              level 8 :offset-assert 244)
   (lowres-tfrag-tree-count       int32     :offset-assert 276)
   (lowres-tfrag-trees            drawable-tree-lowres-tfrag 8 :offset-assert 280)
   (lowres-tfrag-levels           level 8 :offset-assert 312)
   (lowres-trans-tfrag-tree-count int32     :offset-assert 344)
   (lowres-trans-tfrag-trees      drawable-tree-trans-tfrag 8 :offset-assert 348)
   (lowres-trans-tfrag-levels     level 8 :offset-assert 380)
   (shrub-tree-count              int32     :offset-assert 412)
   (shrub-trees                   drawable-tree-instance-shrub 8 :offset-assert 416)
   (shrub-levels                  level 8 :offset-assert 448)
   (tie-tree-count                int32     :offset-assert 480)
   (tie-trees                     drawable-tree-instance-tie 8 :offset-assert 484)
   (tie-levels                    level 8 :offset-assert 516)
   (tie-generic                   basic 8 :offset-assert 548)
   (wait-to-vu0                   uint32    :offset-assert 580)
   )
  :method-count-assert 9
  :size-assert         #x248
  :flag-assert         #x900000248
  )


;; ----------------------
;; File - subdivide-h
;; Source Path - engine/gfx/tfrag/subdivide-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype subdivide-settings (basic)
  ;; guess on these being floats
  ((dist   float 5 :offset-assert 4)
   (meters float 5 :offset-assert 24)
   (close  float 4 :offset-assert 44)
   (far    float 4 :offset-assert 60)
   )
  (:methods
    (new (symbol type float float) _type_)
    )
  :method-count-assert 9
  :size-assert         #x4c
  :flag-assert         #x90000004c
  )

(deftype subdivide-dists (structure)
  ((data   uint32 32 :offset 0)
   (vector vector 8 :inline  :offset 0)
   (k0s    uint128 4  :offset 0)
   (k1s    uint128 4  :offset 64)
   )
  :method-count-assert 9
  :size-assert         #x80
  :flag-assert         #x900000080
  )

(deftype gs-packed-rgba (structure)
  ((data  int32 4 :offset-assert 0)
   (red   int32     :offset 0)
   (green int32     :offset 4)
   (blue  int32     :offset 8)
   (alpha int32     :offset 12)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype gs-packed-xyzw (structure)
  ((data int32 4 :offset-assert 0)
   (x    int32     :offset 0)
   (y    int32     :offset 4)
   (z    int32     :offset 8)
   (w    int32     :offset 12)
   (quad uint128   :offset 0)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype gs-packed-stq (structure)
  ((data  float 4 :offset-assert 0)
   (tex-s float     :offset 0)
   (tex-t float     :offset 4)
   (tex-q float     :offset 8)
   (quad  uint128   :offset 0)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype gs-packed-gt (structure)
  ((stq  gs-packed-stq  :inline :offset-assert 0)
   (rgba gs-packed-rgba :inline :offset-assert 16)
   (xyzw gs-packed-xyzw :inline :offset-assert 32)
   )
  :method-count-assert 9
  :size-assert         #x30
  :flag-assert         #x900000030
  )

(deftype gs-packed-gt4 (structure)
  ((data gs-packed-gt 4 :inline :offset-assert 0)
   )
  :method-count-assert 9
  :size-assert         #xc0
  :flag-assert         #x9000000c0
  )

(deftype terrain-bsp (structure)
  ((lev-index int32  :offset-assert 0)
   (mood      basic  :offset-assert 4)
   )
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )

(deftype terrain-stats (structure)
  ((pris             tr-stat :inline :offset-assert 0)
   (tie-generic      tr-stat :inline :offset-assert 16)
   (tie              tr-stat :inline :offset-assert 32)
   (tie-near         tr-stat :inline :offset-assert 48)
   (shrub-near       tr-stat :inline :offset-assert 64)
   (shrub            tr-stat :inline :offset-assert 80)
   (tfrag-near       tr-stat :inline :offset-assert 96)
   (tfrag            tr-stat :inline :offset-assert 112)
   (billboard        tr-stat :inline :offset-assert 128)
   (trans-tfrag      tr-stat :inline :offset-assert 144)
   (trans-tfrag-near tr-stat :inline :offset-assert 160)
   (trans-pris       tr-stat :inline :offset-assert 176)
   (trans-shrub      tr-stat :inline :offset-assert 192)
   (ocean-mid        tr-stat :inline :offset-assert 208)
   (ocean-near       tr-stat :inline :offset-assert 224)
   (total            tr-stat :inline :offset-assert 240)
   )
  :method-count-assert 9
  :size-assert         #x100
  :flag-assert         #x900000100
  )

(deftype dma-area (structure)
  ((draw-node-dma      draw-node-dma      :inline :offset 0)
   (tfrag-dma          tfrag-dma          :inline :offset 0)
   (instance-shrub-dma instance-shrub-dma :inline :offset 0)
   (instance-tie-dma   instance-tie-dma   :inline :offset 0)
   (prototype-tie-dma  prototype-tie-dma  :inline :offset 0)
   (time-of-day-dma    time-of-day-dma    :inline :offset 0)
   (decomp-work        decomp-work        :inline :offset 0)
   (ocean-vertex       ocean-vertex   4   :inline :offset 0)
   )
  :method-count-assert 9
  :size-assert         #x38a0
  :flag-assert         #x9000038a0
  )

(deftype background-area (structure)
  ((dma-area dma-area :inline :offset-assert 0)
   (vis-list uint8  2048    :offset-assert 14496)
   )
  :method-count-assert 9
  :size-assert         #x40a0
  :flag-assert         #x9000040a0
  )

(deftype foreground-area (structure)
  ((joint-work   joint-work   :inline :offset-assert 0)
   (generic-work generic-work :inline :offset 0)
   (bone-mem     bone-memory  :inline :offset 0)
   (shadow-work  shadow-work  :inline :offset 0)
   )
  :method-count-assert 9
  :size-assert         #x3fd0
  :flag-assert         #x900003fd0
  )

(deftype ambient-area (structure)
  ((ambient-list ambient-list :inline :offset-assert 0)
   )
  :method-count-assert 9
  :size-assert         #x2004
  :flag-assert         #x900002004
  )

(deftype work-area (structure)
  ((background background-area :inline :offset-assert 0)
   (foreground foreground-area :inline :offset 0)
   (ambient    ambient-area    :inline :offset 0)
   )
  :method-count-assert 9
  :size-assert         #x40a0
  :flag-assert         #x9000040a0
  )

(deftype terrain-context (structure)
  ((bsp  terrain-bsp :inline :offset-assert 0)
   (work work-area   :inline :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x40b0
  :flag-assert         #x9000040b0
  )

;; - Symbols

(define-extern *terrain-stats* terrain-stats)
(define-extern *collide-stats* collide-stats)


;; ----------------------
;; File - entity-h
;; Source Path - engine/entity/entity-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype entity-perm (structure)
  ((user-object object 2 :offset-assert 0)
   (user-uint64 uint64    :offset 0)
   (user-float  float 2 :offset 0)
   (user-int32  int32 2 :offset 0)
   (user-uint32 uint32 2 :offset 0)
   (user-int16  int16 4 :offset 0)
   (user-uint16 uint16 4 :offset 0)
   (user-int8   int8 8 :offset 0)
   (user-uint8  uint8 8 :offset 0)
   (status      entity-perm-status    :offset-assert 8)
   (dummy       uint8 1 :offset-assert 10)
   (task        uint8     :offset-assert 11)
   (aid         uint32    :offset-assert 12)
   (quad        uint128   :offset 0)
   )
  :pack-me
  :method-count-assert 10
  :size-assert         #x10
  :flag-assert         #xa00000010
  (:methods
    (update-perm! (_type_ symbol entity-perm-status) _type_ 9)
    )
  )

(deftype entity-links (structure)
  ((prev-link entity-links         :offset-assert 0)
   (next-link entity-links         :offset-assert 4)
   (entity    entity                :offset-assert 8)
   (process   process              :offset-assert 12)
   (level     level                :offset-assert 16)
   (vis-id    int32                :offset-assert 20)
   (trans     vector       :inline :offset-assert 32)
   (perm      entity-perm  :inline :offset-assert 48)
   (status    uint16               :offset 56) ;; overlays
   (aid       uint32               :offset 60)
   (task      uint8                :offset 59)
   )
  :method-count-assert 10
  :size-assert         #x40
  :flag-assert         #xa00000040
  (:methods
    (dummy-9 () none 9)
    )
  )

(deftype entity-perm-array (inline-array-class)
  ((data entity-perm :inline :dynamic :offset-assert 16))
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype entity-links-array (inline-array-class)
  ((data entity-links :inline :dynamic :offset-assert 16))
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype entity (res-lump)
  (
    (trans vector :inline :offset-assert 32)
    (aid uint32 :offset-assert 48) ; prints with ~A but other entity types use uint32 :shrug: for now
   )
  :method-count-assert 27
  :size-assert         #x34
  :flag-assert         #x1b00000034
  ;; unrecognized get op: (set! t9 find-parent-method) parent was res-lump
  (:methods
    (dummy-22 () none 22)
    (dummy-23 () none 23)
    (dummy-24 () none 24)
    (dummy-25 () none 25)
    (dummy-26 () none 26)
    )
  )

(deftype entity-camera (entity)
  (
    (connect connectable :inline :offset-assert 64)
  )
  :method-count-assert 27
  :size-assert #x50
  :flag-assert #x1b00000050
  (:methods
    )
  )

(deftype entity-ambient-data (structure)
  ((user-object object 3  :offset-assert 0)
   (function    basic      :offset-assert 12)
   (quad        uint128    :offset 0)
   (user-uint64 uint64 1  :offset 0)
   (user-float  float 3  :offset 0)
   (user-int32  int32 3  :offset 0)
   (user-uint32 uint32 3  :offset 0)
   (user-int16  int16 6  :offset 0)
   (user-uint16 uint16 6  :offset 0)
   (user-int8   int8 12 :offset 0)
   (user-uint8  uint8 12 :offset 0)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype entity-ambient-data-array (inline-array-class)
  ()
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype entity-ambient (entity)
  ()
  :method-count-assert 29
  :size-assert #x34
  :flag-assert #x1d00000034
  (:methods
    (dummy-27 () none 27)
    (dummy-28 () none 28)
    )
  )

(declare-type nav-mesh basic)
(deftype entity-actor (entity)
  (
    (nav-mesh nav-mesh :offset-assert 52)
    (etype type :offset-assert 56) ;; probably type
    (task uint8 :offset-assert 60)
    (vis-id uint16 :offset-assert 62)
    (quat quaternion :inline :offset-assert 64)
  )
  :method-count-assert 31
  :size-assert         #x50
  :flag-assert         #x1f00000050
  ;; unrecognized get op: (set! t9 find-parent-method) parent was entity
  (:methods
    (next-actor (_type_) entity-actor 27)
    (prev-actor (_type_) entity-actor 28)
    (dummy-29 () none 29)
    (dummy-30 () none 30)
    )
  )

(deftype entity-info (basic)
  ((ptype     type   :offset-assert 4)
   (package   basic  :offset-assert 8)
   (art-group pair   :offset-assert 12)
   (pool      basic  :offset-assert 16)
   (heap-size int32  :offset-assert 20)
   )
  :method-count-assert 9
  :size-assert         #x18
  :flag-assert         #x900000018
  )

(deftype actor-bank (basic)
  ((pause-dist float  :offset-assert 4)
   (birth-dist float  :offset-assert 8)
   (birth-max  int32  :offset-assert 12)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

;; - Functions

(define-extern entity-nav-login (function entity-actor none))

;; - Symbols

(define-extern *generate-actor-vis* symbol)
(define-extern *generate-actor-vis-start* symbol)
(define-extern *generate-actor-vis-output* symbol)
(define-extern *ACTOR-bank* actor-bank)


;; ----------------------
;; File - sprite-h
;; Source Path - engine/gfx/sprite/sprite-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype sprite-vec-data-2d (structure)
  ((x-y-z-sx    vector   :inline :offset-assert 0)
   (flag-rot-sy vector   :inline :offset-assert 16)
   (r-g-b-a     vector   :inline :offset-assert 32)
   (x           float            :offset 0)
   (y           float            :offset 4)
   (z           float            :offset 8)
   (sx          float            :offset 12)
   (sy          float            :offset 28)
   (rot         float            :offset 24)
   (flag        int32            :offset 16)
   (matrix      int32            :offset 20)
   (warp-turns  int32            :offset 16)
   (r           float            :offset 32)
   (g           float            :offset 36)
   (b           float            :offset 40)
   (a           float            :offset 44)
   (trans       vector3s :inline :offset 0)
   (color       rgbaf    :inline :offset 32)
   (data        uint128  1       :offset 0)
   (data64      uint64  6       :offset 0)
   )
  :method-count-assert 9
  :size-assert         #x30
  :flag-assert         #x900000030
  )

(deftype sprite-array-2d (basic)
  ((num-sprites uint32 2 :offset-assert 4)
   (num-valid   uint32 2 :offset-assert 12)
   (vec-data    uint32    :offset-assert 20)
   (adgif-data  uint32    :offset-assert 24)
   (pad         uint128 4 :offset-assert 32)
   (data        uint128 1 :offset-assert 96)
   )
  :method-count-assert 9
  :size-assert         #x70
  :flag-assert         #x900000070
  )

(deftype sprite-vec-data-3d (structure)
  ((x-y-z-sx    vector   :inline :offset-assert 0)
   (qx-qy-qz-sy vector   :inline :offset-assert 16)
   (r-g-b-a     vector   :inline :offset-assert 32)
   (x           float            :offset 0)
   (y           float            :offset 4)
   (z           float            :offset 8)
   (sx          float            :offset 12)
   (sy          float            :offset 28)
   (qx          float            :offset 16)
   (qy          float            :offset 20)
   (qz          float            :offset 24)
   (r           float            :offset 32)
   (g           float            :offset 36)
   (b           float            :offset 40)
   (a           float            :offset 44)
   (trans       vector3s :inline :offset 0)
   (rot         vector3s :inline :offset 16)
   (color       rgbaf    :inline :offset 32)
   (data        uint128  1       :offset 0)
   )
  :method-count-assert 9
  :size-assert         #x30
  :flag-assert         #x900000030
  )

(deftype sprite-array-3d (basic)
  ((num-sprites uint32 2 :offset-assert 4)
   (num-valid   uint32 2 :offset-assert 12)
   (vec-data    uint32    :offset-assert 20)
   (adgif-data  uint32    :offset-assert 24)
   (data        uint128 1 :offset-assert 32)
   )
  :method-count-assert 9
  :size-assert         #x30
  :flag-assert         #x900000030
  )


;; ----------------------
;; File - shadow-h
;; Source Path - engine/gfx/shadow/shadow-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype fake-shadow (structure)
  ((px    float  :offset-assert 0)
   (py    float  :offset-assert 4)
   (pz    float  :offset-assert 8)
   (scale float  :offset-assert 12)
   (qx    float  :offset-assert 16)
   (qy    float  :offset-assert 20)
   (qz    float  :offset-assert 24)
   (flags int32  :offset-assert 28)
   )
  :pack-me
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

(deftype fake-shadow-buffer (basic)
  ((num-shadows int32      :offset-assert 4)
   (data fake-shadow 32 :inline :offset-assert 8)
   )
  :method-count-assert 9
  :size-assert         #x408
  :flag-assert         #x900000408
  )

;; - Symbols

(define-extern *fake-shadow-buffer-1* fake-shadow-buffer)
(define-extern *fake-shadow-buffer-2* fake-shadow-buffer)
(define-extern *fake-shadow-buffer* fake-shadow-buffer)


;; ----------------------
;; File - eye-h
;; Source Path - engine/gfx/eye-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype eye (structure)
  ((data        uint128 2 :offset-assert 0)
   (x           float     :offset 0)
   (y           float     :offset 4)
   (lid         float     :offset 8)
   (iris-scale  float     :offset 16)
   (pupil-scale float     :offset 20)
   (lid-scale   float     :offset 24)
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

(deftype eye-control (structure)
  ((process     uint64         :offset-assert 0)
   (random-time uint16         :offset-assert 8)
   (level       uint16         :offset-assert 10)
   (blink       float          :offset-assert 12)
   (shaders     uint32         :offset-assert 16)
   (left        eye    :inline :offset-assert 32)
   (right       eye    :inline :offset-assert 64)
   )
  :method-count-assert 9
  :size-assert         #x60
  :flag-assert         #x900000060
  )

(deftype eye-control-array (basic)
  ((data eye-control 11 :inline :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x430
  :flag-assert         #x900000430
  )

(deftype eye-work (structure)
  ((sprite-tmpl  dma-gif-packet :inline :offset-assert 0)
   (sprite-tmpl2 dma-gif-packet :inline :offset-assert 32)
   (adgif-tmpl   dma-gif-packet :inline :offset-assert 64)
   (blink-table  float        10      :offset-assert 96)
   )
  :method-count-assert 9
  :size-assert         #x88
  :flag-assert         #x900000088
  )

;; - Symbols

(define-extern *eye-control-array* eye-control-array)


;; ----------------------
;; File - sparticle-launcher-h
;; Source Path - engine/sparticle/sparticle-launcher-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype sp-field-init-spec (structure)
  ((field          uint16  :offset-assert 0)
   (flags          uint16  :offset-assert 2)
   (initial-valuef float   :offset-assert 4)
   (random-rangef  float   :offset-assert 8)
   (random-multf   float   :offset-assert 12)
   (initial-value  int32   :offset 4)
   (random-range   int32   :offset 8)
   (random-mult    int32   :offset 12)
   (func           basic   :offset 4)
   (tex            uint32  :offset 4)
   (pntr           uint32  :offset 4)
   (sym            basic   :offset 4)
   (sound          basic   :offset 4)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype sparticle-launcher (basic)
  ((birthaccum float   :offset-assert 4)
   (soundaccum float   :offset-assert 8)
   (init-specs uint32  :offset-assert 12)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype sparticle-group-item (structure)
  ((launcher   uint32  :offset-assert 0)
   (fade-after meters  :offset-assert 4)
   (falloff-to meters  :offset-assert 8)
   (flags      uint16  :offset-assert 12)
   (period     uint16  :offset-assert 14)
   (length     uint16  :offset-assert 16)
   (offset     uint16  :offset-assert 18)
   (hour-mask  uint32  :offset-assert 20)
   (binding    uint32  :offset-assert 24)
   )
  :method-count-assert 9
  :size-assert         #x1c
  :flag-assert         #x90000001c
  )

(deftype sparticle-launch-state (structure)
  ((group-item sparticle-group-item  :offset-assert 0)
   (flags      uint16                :offset-assert 4)
   (randomize  uint16                :offset-assert 6)
   (origin     vector                :offset-assert 8)
   (sprite3d   sprite-vec-data-3d    :offset-assert 12)
   (sprite     basic                 :offset-assert 16)
   (offset     uint32                :offset-assert 20)
   (accum      float                 :offset-assert 24)
   (spawn-time uint32                :offset-assert 28)
   (swarm      basic                 :offset 20)
   (seed       uint32                :offset 24)
   (time       uint32                :offset 28)
   (spec       basic                 :offset 16)
   (id         uint32                :offset 12)
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

(deftype sparticle-launch-group (basic)
  ((length          int16          :offset-assert 4)
   (duration        uint16         :offset-assert 6)
   (linger-duration uint16         :offset-assert 8)
   (flags           uint16         :offset-assert 10)
   (name            basic          :offset-assert 12)
   (launcher        uint32         :offset-assert 16)
   (bounds          sphere :inline :offset-assert 32)
   )
  :method-count-assert 10
  :size-assert         #x30
  :flag-assert         #xa00000030
  (:methods
    (dummy-9 () none 9)
    )
  )

(deftype sparticle-launch-control (inline-array-class)
  ((group            basic            :offset-assert 16)
   (proc             basic            :offset-assert 20)
   (local-clock      int32            :offset-assert 24)
   (fade             float            :offset-assert 28)
   (matrix           int32            :offset-assert 32)
   (last-spawn-frame int32            :offset-assert 36)
   (last-spawn-time  int32            :offset-assert 40)
   (center           vector  :inline  :offset-assert 48)
   ;; todo - what's the real type?
   ;; maybe its sparticle-launch-state based on heap-base.
   (data             uint8 :dynamic :offset-assert 64)
   )
  :method-count-assert 14
  :size-assert         #x40
  :flag-assert         #xe00000040
  (:methods
    (dummy-9 () none 9)
    (dummy-10 () none 10)
    (dummy-11 () none 11)
    (dummy-12 () none 12)
    (dummy-13 () none 13)
    )
  )


(define-extern part-group-pointer? (function pointer symbol))

;; ----------------------
;; File - sparticle-h
;; Source Path - engine/sparticle/sparticle-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype sparticle-cpuinfo (structure)
  ((sprite        sprite-vec-data-2d             :offset-assert 0)
   (adgif         adgif-shader                   :offset-assert 4)
   (radius        float                          :offset-assert 8)
   (omega         float                          :offset-assert 12)
   (vel-sxvel     vector                 :inline :offset-assert 16)
   (rot-syvel     vector                 :inline :offset-assert 32)
   (fade          rgbaf                  :inline :offset-assert 48)
   (acc           vector                 :inline :offset-assert 64)
   (rotvel3d      quaternion             :inline :offset-assert 80)
   (vel           vector3s               :inline :offset 16)
   (accel         vector3s               :inline :offset 64)
   (scalevelx     float                          :offset 28)
   (scalevely     float                          :offset 44)
   (friction      float                          :offset-assert 96)
   (timer         int32                          :offset-assert 100)
   (flags         uint32                         :offset-assert 104)
   (user-int32    int32                          :offset-assert 108)
   (user-uint32   uint32                         :offset 108)
   (user-float    float                          :offset 108)
   (user-pntr     uint32                         :offset 108)
   (user-sprite   sprite-vec-data-2d             :offset 108)
   (func          basic                          :offset-assert 112)
   (next-time     uint32                         :offset-assert 116)
   (next-launcher basic                          :offset-assert 120)
   (cache-alpha   float                          :offset-assert 124)
   (valid         basic                          :offset-assert 128)
   (key           basic                          :offset-assert 132)
   (binding       sparticle-launch-state         :offset-assert 136)
   (data          uint32                 1       :offset 12)
   (dataf         float                  1       :offset 12)
   (datac         uint8                  1       :offset 12)
   )
  :method-count-assert 9
  :size-assert         #x8c
  :flag-assert         #x90000008c
  ;; field key is a basic loaded with a signed load
  )

(deftype sparticle-launchinfo (structure)
  ((launchrot  vector  :inline :offset-assert 0)
   (conerot    vector  :inline :offset-assert 16)
   (coneradius float           :offset-assert 32)
   (rotate-y   float           :offset-assert 36)
   (data       uint8 1       :offset 0)
   )
  :method-count-assert 9
  :size-assert         #x28
  :flag-assert         #x900000028
  )

(deftype sparticle-system (basic)
  ((blocks          uint32 2 :offset-assert 4)
   (length          uint32 2 :offset-assert 12)
   (num-alloc       uint32 2 :offset-assert 20)
   (is-3d           basic     :offset-assert 28)
   (flags           uint32    :offset-assert 32)
   (alloc-table     uint32    :offset-assert 36)
   (cpuinfo-table   uint32    :offset-assert 40)
   (vecdata-table   uint32    :offset-assert 44)
   (adgifdata-table uint32    :offset-assert 48)
   )
  :method-count-assert 9
  :size-assert         #x34
  :flag-assert         #x900000034
  )

;; - Symbols

(define-extern *sp-frame-time* vector)
(define-extern *sp-60-hz* symbol)


;; ----------------------
;; File - actor-link-h
;; Source Path - engine/entity/actor-link-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype actor-link-info (basic)
  ((process process  :offset-assert 4)
   (next    entity-actor  :offset-assert 8)
   (prev    entity-actor  :offset-assert 12)
   )
  :method-count-assert 26
  :size-assert         #x10
  :flag-assert         #x1a00000010
  (:methods
    (new (symbol type process) _type_)
    (get-matching-actor-type-mask (_type_ type) int 9)
    (actor-count-before (_type_) int 10)
    (link (_type_) entity-actor 11)
    (get-next (_type_) entity-actor 12)
    (get-prev (_type_) entity-actor 13)
    (get-next-process (_type_) process 14)
    (get-prev-process (_type_) process 15)
    (apply-function-forward (_type_ (function entity-actor object object) object) int 16)
    (apply-function-reverse (_type_ (function entity-actor object object) object) int 17)
    (apply-all (_type_ (function entity-actor object object) object) int 18)
    (send-to-all (_type_ object) none 19)
    (send-to-all-after (_type_ object) object 20)
    (send-to-all-before (_type_ object) object 21)
    (send-to-next-and-prev (_type_ object) none 22)
    (send-to-next (_type_ object) none 23)
    (send-to-prev (_type_ object) none 24)
    (actor-count (_type_) int 25)
    )
  )

;; - Functions

(define-extern entity-actor-count (function res-lump symbol int))
(define-extern entity-actor-lookup (function res-lump symbol int entity-actor)) ;; NOTE - return value is not confirmed
(define-extern entity-by-name (function string entity))
(define-extern entity-by-aid (function uint entity))
(define-extern actor-link-subtask-complete-hook (function entity-actor (pointer symbol) symbol))
(define-extern actor-link-dead-hook (function entity-actor (pointer symbol) symbol))
(define-extern alt-actor-list-subtask-incomplete-count (function process-drawable int))


;; ----------------------
;; File - camera-h
;; Source Path - engine/camera/camera-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype camera-bank (basic)
  ((collide-move-rad        float   :offset-assert 4)
   (joypad                  uint32  :offset-assert 8)
   (min-detectable-velocity float   :offset-assert 12)
   (attack-timeout          uint64  :offset-assert 16)
   (default-string-max-y    meters  :offset-assert 24)
   (default-string-min-y    meters  :offset-assert 28)
   (default-string-max-z    meters  :offset-assert 32)
   (default-string-min-z    meters  :offset-assert 36)
   (default-string-push-z   meters  :offset-assert 40)
   (default-tilt-adjust     degrees :offset-assert 44)
   )
  :method-count-assert 9
  :size-assert         #x30
  :flag-assert         #x900000030
  )

(deftype cam-index (structure)
  ((flags uint32    :offset-assert 0)
   (vec   uint128 2 :offset-assert 16)
   )
  :method-count-assert 11
  :size-assert         #x30
  :flag-assert         #xb00000030
  (:methods
    (dummy-9 () none 9)
    (dummy-10 () none 10)
    )
  )

(deftype tracking-point (structure)
  ((position    vector :inline :offset-assert 0)
   (direction   vector :inline :offset-assert 16)
   (tp-length   float          :offset-assert 32)
   (next        int32          :offset-assert 36)
   (incarnation int32          :offset-assert 40)
   )
  :method-count-assert 9
  :size-assert         #x2c
  :flag-assert         #x90000002c
  )

(deftype tracking-spline-sampler (structure)
  ((cur-pt     int32  :offset-assert 0)
   (partial-pt float  :offset-assert 4)
   )
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )

(deftype tracking-spline (structure)
  ((point tracking-point 32 :inline     :offset-assert 0)
   (summed-len         float           :offset-assert 1536)
   (free-point         int32           :offset-assert 1540)
   (used-point         int32           :offset-assert 1544)
   (partial-point      float           :offset-assert 1548)
   (end-point          int32           :offset-assert 1552)
   (next-to-last-point int32           :offset-assert 1556)
   (max-move           float           :offset-assert 1560)
   (sample-len         float           :offset-assert 1564)
   (used-count         int32           :offset-assert 1568)
   (old-position       vector  :inline :offset-assert 1584)
   (debug-old-position vector  :inline :offset-assert 1600)
   (debug-out-position vector  :inline :offset-assert 1616)
   (debug-last-point   int32           :offset-assert 1632)
   )
  :method-count-assert 24
  :size-assert         #x664
  :flag-assert         #x1800000664
  (:methods
    (dummy-9 () none 9)
    (dummy-10 () none 10)
    (dummy-11 () none 11)
    (dummy-12 () none 12)
    (dummy-13 () none 13)
    (dummy-14 () none 14)
    (dummy-15 () none 15)
    (dummy-16 () none 16)
    (dummy-17 () none 17)
    (dummy-18 () none 18)
    (dummy-19 () none 19)
    (dummy-20 () none 20)
    (dummy-21 () none 21)
    (dummy-22 () none 22)
    (dummy-23 () none 23)
    )
  )

(deftype cam-float-seeker (structure)
  ((target      float  :offset-assert 0)
   (value       float  :offset-assert 4)
   (vel         float  :offset-assert 8)
   (accel       float  :offset-assert 12)
   (max-vel     float  :offset-assert 16)
   (max-partial float  :offset-assert 20)
   )
  :pack-me
  :method-count-assert 13
  :size-assert         #x18
  :flag-assert         #xd00000018
  (:methods
    (init-cam-float-seeker (_type_ float float float float) none 9)
    (copy-cam-float-seeker (_type_ _type_) none 10)
    (update! (_type_ float) none 11)
    (jump-to-target! (_type_ float) float 12)
    )
  )

(deftype cam-vector-seeker (structure)
  ((target      vector :inline :offset-assert 0)
   (value       vector :inline :offset-assert 16)
   (vel         vector :inline :offset-assert 32)
   (accel       float          :offset-assert 48)
   (max-vel     float          :offset-assert 52)
   (max-partial float          :offset-assert 56)
   )
  :method-count-assert 11
  :size-assert         #x3c
  :flag-assert         #xb0000003c
  (:methods
    (init! (_type_ vector float float float) none 9)
    (update! (_type_ vector) none 10)
    )
  )

(deftype cam-rotation-tracker (structure)
  ((inv-mat                 matrix           :inline :offset-assert 0)
   (no-follow               basic                    :offset-assert 64)
   (follow-pt               vector           :inline :offset-assert 80)
   (follow-off              vector           :inline :offset-assert 96)
   (follow-blend            float                    :offset-assert 112)
   (tilt-adjust             cam-float-seeker :inline :offset-assert 116)
   (use-point-of-interest   basic                    :offset-assert 140)
   (point-of-interest       vector           :inline :offset-assert 144)
   (point-of-interest-blend cam-float-seeker :inline :offset-assert 160)
   (underwater-blend        cam-float-seeker :inline :offset-assert 184)
   )
  :method-count-assert 9
  :size-assert         #xd0
  :flag-assert         #x9000000d0
  )

(deftype camera-combiner (process)
  ((trans             vector               :inline :offset-assert 112)
   (inv-camera-rot    matrix               :inline :offset-assert 128)
   (fov               float                        :offset-assert 192)
   (interp-val        float                        :offset-assert 196)
   (interp-step       float                        :offset-assert 200)
   (dist-from-src     float                        :offset-assert 204)
   (dist-from-dest    float                        :offset-assert 208)
   (flip-control-axis vector               :inline :offset-assert 224)
   (velocity          vector               :inline :offset-assert 240)
   (tracking-status   uint64                       :offset-assert 256)
   (tracking-options  int32                        :offset-assert 264)
   (tracking          cam-rotation-tracker :inline :offset-assert 272)
   )
  :heap-base #x170
  :method-count-assert 14
  :size-assert         #x1e0
  :flag-assert         #xe017001e0
  ;; inherited inspect of process
  )

(deftype camera-slave (process)
  ((trans                         vector               :inline :offset-assert 112)
   (fov                           float                        :offset-assert 128)
   (fov0                          float                        :offset-assert 132)
   (fov1                          float                        :offset-assert 136)
   (fov-index                     cam-index            :inline :offset-assert 144)
   (tracking                      cam-rotation-tracker :inline :offset-assert 192)
   (view-off-param                float                        :offset-assert 400)
   (view-off                      vector               :inline :offset-assert 416)
   (min-z-override                float                        :offset-assert 432)
   (view-flat                     vector               :inline :offset-assert 448)
   (string-vel-dir                uint32                       :offset-assert 464)
   (string-trans                  vector               :inline :offset-assert 480)
   (position-spline               tracking-spline      :inline :offset-assert 496)
   (pivot-pt                      vector               :inline :offset-assert 2144)
   (pivot-rad                     float                        :offset-assert 2160)
   (circular-follow               vector               :inline :offset-assert 2176)
   (max-angle-offset              float                        :offset-assert 2192)
   (max-angle-curr                float                        :offset-assert 2196)
   (options                       uint32                       :offset-assert 2200)
   (cam-entity                    basic                        :offset-assert 2204)
   (velocity                      vector               :inline :offset-assert 2208)
   (desired-pos                   vector               :inline :offset-assert 2224)
   (time-dist-too-far             uint32                       :offset-assert 2240)
   (los-state                     uint32                       :offset-assert 2244)
   (good-point                    vector               :inline :offset-assert 2256)
   (los-tgt-spline-pt             int32                        :offset-assert 2272)
   (los-tgt-spline-pt-incarnation int32                        :offset-assert 2276)
   (los-last-pos                  vector               :inline :offset-assert 2288)
   (intro-curve                   curve                :inline :offset-assert 2304)
   (intro-offset                  vector               :inline :offset-assert 2336)
   (intro-t                       float                        :offset-assert 2352)
   (intro-t-step                  float                        :offset-assert 2356)
   (outro-exit-value              float                        :offset-assert 2360)
   (spline-exists                 basic                        :offset-assert 2364)
   (spline-curve                  curve                :inline :offset-assert 2368)
   (spline-offset                 vector               :inline :offset-assert 2400)
   (index                         cam-index            :inline :offset-assert 2416)
   (saved-pt                      vector               :inline :offset-assert 2464)
   (spline-tt                     float                        :offset-assert 2480)
   (spline-follow-dist            float                        :offset-assert 2484)
   (change-event-from             uint32                       :offset-assert 2488)
   (enter-has-run                 basic                        :offset-assert 2492)
   (blend-from-type               uint64                       :offset-assert 2496)
   (blend-to-type                 uint64                       :offset-assert 2504)
   (have-phony-joystick           basic                        :offset-assert 2512)
   (phony-joystick-x              float                        :offset-assert 2516)
   (phony-joystick-y              float                        :offset-assert 2520)
   (string-min-val                vector               :inline :offset-assert 2528)
   (string-max-val                vector               :inline :offset-assert 2544)
   (string-val-locked             basic                        :offset-assert 2560)
   )
  :heap-base #x9a0
  :method-count-assert 14
  :size-assert         #xa04
  :flag-assert         #xe09a00a04
  ;; inherited inspect of process
  )

(deftype camera-master (process)
  ((master-options      uint32                    :offset-assert 112)
   (num-slaves          int32                     :offset-assert 116)
   (slave               basic           2       :offset-assert 120)
   (slave-options       uint32                    :offset-assert 128)
   (view-off-param-save float                     :offset-assert 132)
   (changer             uint32                    :offset-assert 136)
   (cam-entity          basic                     :offset-assert 140)
   (stringMinLength     float                     :offset-assert 144)
   (stringMaxLength     float                     :offset-assert 148)
   (stringMinHeight     float                     :offset-assert 152)
   (stringMaxHeight     float                     :offset-assert 156)
   (string-min          cam-vector-seeker :inline :offset-assert 160)
   (string-max          cam-vector-seeker :inline :offset-assert 224)
   (string-push-z       float                     :offset-assert 284)
   (stringCliffHeight   float                     :offset-assert 288)
   (no-intro            uint32                    :offset-assert 292)
   (force-blend         uint32                    :offset-assert 296)
   (force-blend-time    uint32                    :offset-assert 300)
   (local-down          vector            :inline :offset-assert 304)
   (drawable-target     uint64                    :offset-assert 320)
   (which-bone          int32                     :offset-assert 328)
   (pov-handle          uint64                    :offset-assert 336)
   (pov-bone            int32                     :offset-assert 344)
   (being-attacked      basic                     :offset-assert 348)
   (attack-start        uint64                    :offset-assert 352)
   (on-ground           basic                     :offset-assert 360)
   (under-water         int32                     :offset-assert 364)
   (on-pole             basic                     :offset-assert 368)
   (tgt-rot-mat         matrix            :inline :offset-assert 384)
   (tgt-face-mat        matrix            :inline :offset-assert 448)
   (tpos-old            vector            :inline :offset-assert 512)
   (tpos-curr           vector            :inline :offset-assert 528)
   (target-height       float                     :offset-assert 544)
   (tpos-old-adj        vector            :inline :offset-assert 560)
   (tpos-curr-adj       vector            :inline :offset-assert 576)
   (tpos-tgt            vector            :inline :offset-assert 592)
   (upspeed             float                     :offset-assert 608)
   (pitch-off           vector            :inline :offset-assert 624)
   (foot-offset         float                     :offset-assert 640)
   (head-offset         float                     :offset-assert 644)
   (target-spline       tracking-spline   :inline :offset-assert 656)
   (ease-from           vector            :inline :offset-assert 2304)
   (ease-t              float                     :offset-assert 2320)
   (ease-step           float                     :offset-assert 2324)
   (ease-to             vector            :inline :offset-assert 2336)
   (outro-curve         curve             :inline :offset-assert 2352)
   (outro-t             float                     :offset-assert 2372)
   (outro-t-step        float                     :offset-assert 2376)
   (outro-exit-value    float                     :offset-assert 2380)
   (water-drip-time     uint64                    :offset-assert 2384)
   (water-drip          basic                     :offset-assert 2392)
   (water-drip-mult     float                     :offset-assert 2396)
   (water-drip-speed    float                     :offset-assert 2400)
   )
  :heap-base #x900
  :method-count-assert 14
  :size-assert         #x964
  :flag-assert         #xe09000964
  ;; inherited inspect of process
  )

;; - Symbols

(define-extern *CAMERA-bank* camera-bank)


;; ----------------------
;; File - cam-debug-h
;; Source Path - engine/camera/cam-debug-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern float-save-redline (function float none))
(define-extern float-lookup-redline (function float float))
(define-extern float-save-blueline (function float none))
(define-extern float-lookup-blueline (function float float))
(define-extern float-save-greenline (function float none))
(define-extern float-lookup-greenline (function float float))
(define-extern float-save-yellowline (function float none))
(define-extern float-lookup-yellowline (function float float))
(define-extern float-save-timeplot (function float none))
(define-extern float-lookup-timeplot (function float float))

;; - Symbols

(define-extern *timeplot-index* int)
(define-extern *timeplot-table* (pointer float))
(define-extern *yellowline-index* int)
(define-extern *yellowline-table* (pointer float))
(define-extern *greenline-index* int)
(define-extern *greenline-table* (pointer float))
(define-extern *blueline-index* int)
(define-extern *blueline-table* (pointer float))
(define-extern *redline-index* int)
(define-extern *redline-table* (pointer float))
(define-extern *cam-layout* symbol)


;; ----------------------
;; File - cam-interface-h
;; Source Path - engine/camera/cam-interface-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Symbols

(define-extern *camera-read-analog* symbol)
(define-extern *camera-read-buttons* symbol)
(define-extern *cam-free-move-along-z* symbol)
(define-extern *camera-init-mat* matrix)
(define-extern *camera* camera-master)
(define-extern *camera-combiner* camera-combiner)
(define-extern *camera-orbit-target* process-drawable)


;; ----------------------
;; File - cam-update-h
;; Source Path - engine/camera/cam-update-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Symbols

(define-extern *external-cam-options* int)
(define-extern *external-cam-mode* symbol)
(define-extern *camera-look-through-other* int)
(define-extern *camera-other-fov* bfloat)
(define-extern *camera-other-trans* vector)
(define-extern *camera-other-matrix* matrix)
(define-extern *camera-smush-control* smush-control)
(define-extern *camera-other-root* vector)


;; ----------------------
;; File - assert-h
;; Source Path - engine/debug/assert-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype __assert-info-private-struct (structure)
  ((filename   string  :offset-assert 0)
   (line-num   uint16  :offset-assert 4)
   (column-num uint16  :offset-assert 6)
   )
  :method-count-assert 11
  :size-assert         #x8
  :flag-assert         #xb00000008
  (:methods
    (set-pos (_type_ string uint uint) int 9)
    (print-pos (_type_) int 10)
    )
  )

;; - Symbols

(define-extern *__private-assert-info* __assert-info-private-struct)


;; ----------------------
;; File - hud-h
;; Source Path - engine/ui/hud-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype hud-icon (basic)
  ((icon    uint32  :offset-assert 4)
   (icon-y  int32   :offset-assert 8)
   (icon-x  int32   :offset-assert 12)
   (icon-z  int32   :offset-assert 16)
   (scale-x float   :offset-assert 20)
   (scale-y float   :offset-assert 24)
   )
  :method-count-assert 9
  :size-assert         #x1c
  :flag-assert         #x90000001c
  )

(deftype hud-particle (basic)
  ((part     basic          :offset-assert 4)
   (init-pos vector :inline :offset-assert 16)
   (pos      vector :inline :offset-assert 32)
   (prev-pos vector :inline :offset-assert 48)
   )
  :method-count-assert 9
  :size-assert         #x40
  :flag-assert         #x900000040
  )

(deftype hud (process)
  ((value                  int32     :offset-assert 112)
   (value2                 int32     :offset-assert 116)
   (target-value           int32     :offset-assert 120)
   (last-increment-time    uint64    :offset-assert 128)
   (last-target-equal-time uint64    :offset-assert 136)
   (offset                 int32     :offset-assert 144)
   (y-offset               int32     :offset-assert 148)
   (next-y-offset          int32     :offset-assert 152)
   (x-sgn                  int32     :offset-assert 156)
   (y-sgn                  int32     :offset-assert 160)
   (text-x                 int32     :offset-assert 164)
   (text-y                 int32     :offset-assert 168)
   (friend                 int32     :offset-assert 172)
   (first-init             basic     :offset-assert 176)
   (increment-on-event     basic     :offset-assert 180)
   (skip-particle          int32     :offset-assert 184)
   (disable                basic     :offset-assert 188)
   (force-on-screen        basic     :offset-assert 192)
   (deactivate-when-hidden basic     :offset-assert 196)
   (trigger-time           uint64    :offset-assert 200)
   (last-hide-time         uint64    :offset-assert 208)
   (nb-of-icons            int32     :offset-assert 216)
   (icons                  hud-icon 6 :offset-assert 220)
   (max-nb-of-particles    int32     :offset-assert 244)
   (nb-of-particles        int32     :offset-assert 248)
   (particles              hud-particle 7 :offset-assert 252)
   )
  :heap-base #xb0
  :method-count-assert 27
  :size-assert         #x118
  :flag-assert         #x1b00b00118
  ;; inherited inspect of process
  (:methods
    (dummy-14 () none 14)
    (dummy-15 () none 15)
    (dummy-16 () none 16)
    (dummy-17 () none 17)
    (dummy-18 () none 18)
    (dummy-19 () none 19)
    (dummy-20 () none 20)
    (dummy-21 () none 21)
    (dummy-22 () none 22)
    (dummy-23 () none 23)
    (dummy-24 () none 24)
    (dummy-25 () none 25)
    (dummy-26 () none 26)
    )
  )

(deftype hud-parts (structure)
  (
   (pickups    basic    :offset-assert 0)
   (money      basic    :offset-assert 4)
   (fuel-cell  basic    :offset-assert 8)
   (health     basic    :offset-assert 12)
   (buzzers    basic    :offset-assert 16)
   (power      basic    :offset-assert 20)
   (bike-speed basic    :offset-assert 24)
   (bike-heat  basic    :offset-assert 28)
   (money-all  basic    :offset-assert 32)
   )
  :method-count-assert 9
  :size-assert         #x24
  :flag-assert         #x900000024
  )

;; - Symbols

(define-extern *hud-parts* hud-parts)


;; ----------------------
;; File - progress-h
;; Source Path - engine/ui/progress-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype count-info (structure)
  ((money-count  int32  :offset-assert 0)
   (buzzer-count int32  :offset-assert 4)
   )
  :pack-me
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )

(deftype game-count-info (basic)
  ((length int32            :offset-assert 4)
   (data   count-info :inline :dynamic :offset-assert 8)
   )
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )

(deftype task-info-data (basic)
  ((task-id                  game-task     :offset-assert 4)
   (task-name                game-text-id  4 :offset-assert 8)
   (text-index-when-resolved int32     :offset-assert 24)
   )
  :method-count-assert 9
  :size-assert         #x1c
  :flag-assert         #x90000001c
  )

(deftype level-tasks-info (basic)
  ((level-name-id     game-text-id    :offset-assert 4)
   (text-group-index  int32     :offset-assert 8)
   (nb-of-tasks       int32     :offset-assert 12)
   (buzzer-task-index int32     :offset-assert 16)
   (task-info         task-info-data 8 :offset-assert 20)
   )
  :method-count-assert 9
  :size-assert         #x34
  :flag-assert         #x900000034
  )

(deftype game-option (basic)
  ((option-type     uint64  :offset-assert 8)
   (name            game-text-id  :offset-assert 16)
   (scale           basic   :offset-assert 20)
   (param1          float   :offset-assert 24)
   (param2          float   :offset-assert 28)
   (param3          int32   :offset-assert 32)
   (value-to-modify uint32  :offset-assert 36)
   )
  :method-count-assert 9
  :size-assert         #x28
  :flag-assert         #x900000028
  )

(deftype progress (process)
  ((current-debug-string         int32           :offset-assert 112)
   (current-debug-language       int32           :offset-assert 116)
   (current-debug-group          int32           :offset-assert 120)
   (in-out-position              int32           :offset-assert 124)
   (display-state                uint64          :offset-assert 128)
   (next-display-state           uint64          :offset-assert 136)
   (option-index                 int32           :offset-assert 144)
   (selected-option              basic           :offset-assert 148)
   (completion-percentage        float           :offset-assert 152)
   (ready-to-run                 basic           :offset-assert 156)
   (display-level-index          int32           :offset-assert 160)
   (next-level-index             int32           :offset-assert 164)
   (task-index                   int32           :offset-assert 168)
   (in-transition                basic           :offset-assert 172)
   (last-in-transition           basic           :offset-assert 176)
   (force-transition             basic           :offset-assert 180)
   (stat-transition              basic           :offset-assert 184)
   (level-transition             int32           :offset-assert 188)
   (language-selection           uint64          :offset-assert 192)
   (language-direction           basic           :offset-assert 200)
   (language-transition          basic           :offset-assert 204)
   (language-x-offset            int32           :offset-assert 208)
   (sides-x-scale                float           :offset-assert 212)
   (sides-y-scale                float           :offset-assert 216)
   (left-x-offset                int32           :offset-assert 220)
   (right-x-offset               int32           :offset-assert 224)
   (button-scale                 float           :offset-assert 228)
   (slot-scale                   float           :offset-assert 232)
   (left-side-x-scale            float           :offset-assert 236)
   (left-side-y-scale            float           :offset-assert 240)
   (right-side-x-scale           float           :offset-assert 244)
   (right-side-y-scale           float           :offset-assert 248)
   (small-orb-y-offset           int32           :offset-assert 252)
   (big-orb-y-offset             int32           :offset-assert 256)
   (transition-offset            int32           :offset-assert 260)
   (transition-offset-invert     int32           :offset-assert 264)
   (transition-percentage        float           :offset-assert 268)
   (transition-percentage-invert float           :offset-assert 272)
   (transition-speed             float           :offset-assert 276)
   (total-nb-of-power-cells      int32           :offset-assert 280)
   (total-nb-of-orbs             int32           :offset-assert 284)
   (total-nb-of-buzzers          int32           :offset-assert 288)
   (card-info                    mc-slot-info    :offset-assert 292)
   (last-option-index-change     uint64          :offset-assert 296)
   (video-mode-timeout           uint64          :offset-assert 304)
   (display-state-stack          uint64       5  :offset-assert 312)
   (option-index-stack           uint32       5  :offset-assert 352)
   (display-state-pos            int32           :offset-assert 372)
   (nb-of-icons                  int32           :offset-assert 376)
   (icons                        uint32       6  :offset-assert 380)
   (max-nb-of-particles          int32           :offset-assert 404)
   (nb-of-particles              int32           :offset-assert 408)
   (particles                    uint32       40 :offset-assert 412)
   (particle-state               uint32       40 :offset-assert 572)
   )
  :method-count-assert 59
  :size-assert         #x2dc
  :flag-assert         #x3b000002dc
  ;; inherited inspect of process
  (:methods
    (dummy-14 () none 14)
    (dummy-15 () none 15)
    (dummy-16 () none 16)
    (dummy-17 () none 17)
    (dummy-18 () none 18)
    (dummy-19 () none 19)
    (hidden? (_type_) symbol 20)
    (dummy-21 () none 21)
    (dummy-22 () none 22)
    (TODO-RENAME-23 (_type_ symbol symbol) none 23)
    (dummy-24 () none 24)
    (dummy-25 () none 25)
    (dummy-26 () none 26)
    (dummy-27 () none 27)
    (dummy-28 () none 28)
    (dummy-29 () none 29)
    (dummy-30 () none 30)
    (dummy-31 () none 31)
    (dummy-32 () none 32)
    (dummy-33 () none 33)
    (dummy-34 () none 34)
    (dummy-35 () none 35)
    (dummy-36 () none 36)
    (dummy-37 () none 37)
    (dummy-38 () none 38)
    (dummy-39 () none 39)
    (dummy-40 () none 40)
    (dummy-41 () none 41)
    (dummy-42 () none 42)
    (dummy-43 () none 43)
    (dummy-44 () none 44)
    (dummy-45 () none 45)
    (dummy-46 () none 46)
    (dummy-47 () none 47)
    (dummy-48 () none 48)
    (dummy-49 () none 49)
    (dummy-50 () none 50)
    (dummy-51 () none 51)
    (dummy-52 () none 52)
    (dummy-53 () none 53)
    (dummy-54 () none 54)
    (dummy-55 () none 55)
    (dummy-56 () none 56)
    (dummy-57 () none 57)
    (dummy-58 () none 58)
    )
  )

;; - Symbols

(define-extern *progress-process* (pointer progress))
(define-extern *progress-last-task-index* int)


;; ----------------------
;; File - rpc-h
;; Source Path - engine/ps2/rpc-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype rpc-buffer (basic)
  ((elt-size  uint32           :offset-assert 4)
   (elt-count uint32           :offset-assert 8)
   (elt-used  uint32           :offset-assert 12)
   (busy      basic            :offset-assert 16)
   (base      pointer          :offset-assert 20)
   (data      uint8   :dynamic :offset 32)
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  (:methods
    (new (symbol type uint uint) rpc-buffer 0)
    )
  )

(deftype rpc-buffer-pair (basic)
  ((buffer           rpc-buffer 2 :offset-assert 4)
   (current          rpc-buffer   :offset-assert 12)
   (last-recv-buffer pointer      :offset-assert 16)
   (rpc-port         int32     :offset-assert 20)
   )
  :method-count-assert 15
  :size-assert         #x18
  :flag-assert         #xf00000018
  (:methods
    (new (symbol type uint uint int) rpc-buffer-pair 0)
    (call (rpc-buffer-pair uint pointer uint) int 9)
    (add-element (rpc-buffer-pair) pointer 10)
    (decrement-elt-used (rpc-buffer-pair) int 11)
    (sync (rpc-buffer-pair symbol) int 12)
    (check-busy (rpc-buffer-pair) symbol 13)
    (pop-last-received (rpc-buffer-pair) pointer 14)
    )
  )

;; - Functions

(define-extern rpc-busy? (function int uint))
(define-extern rpc-call (function int uint uint uint int uint int uint))


;; ----------------------
;; File - path-h
;; Source Path - engine/nav/path-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype path-control (basic)
  ((flags      path-control-flag         :offset-assert 4)
   (name       symbol          :offset-assert 8)
   (process    process-drawable          :offset-assert 12)
   (curve      curve  :inline :offset-assert 16)
   (num-cverts int32          :offset 20)
   (cverts     (inline-array vector)         :score 100 :offset 16)
   )
  :method-count-assert 21
  :size-assert         #x24
  :flag-assert         #x1500000024
  (:methods
    (new (symbol type process symbol float) _type_)
    (dummy-9 (_type_) none 9)
    (eval-path-curve-div! (_type_ vector float symbol) vector 10)
    (get-random-point (_type_ vector) vector 11)
    (TODO-RENAME-12 (_type_ vector float) vector 12)
    (eval-path-curve! (_type_ vector float symbol) vector 13)
    (TODO-RENAME-14 (_type_ vector float) vector 14)
    (length-as-float (_type_) float 15)
    (path-distance (_type_) float 16)
    (get-num-verts (_type_) int 17)
    (should-display? (_type_) symbol 18)
    (TODO-RENAME-19 (_type_) float 19)
    (TODO-RENAME-20 (_type_) float 20)
    )
  )

(deftype curve-control (path-control)
  ()
  (:methods
    (new (symbol type process symbol float) _type_)
    )
  :method-count-assert 21
  :size-assert         #x24
  :flag-assert         #x1500000024
  )

;; - Functions

(define-extern string->symbol (function string symbol))


;; ----------------------
;; File - navigate-h
;; Source Path - engine/nav/navigate-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype nav-poly (structure)
  ((id       uint8     :offset-assert 0)
   (vertex   uint8 3 :offset-assert 1)
   (adj-poly uint8 3 :offset-assert 4)
   (pat      uint8     :offset-assert 7)
   )
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )

(deftype nav-vertex (vector)
  ()
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype nav-sphere (structure)
  ((trans sphere :inline :offset-assert 0)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype nav-ray (structure)
  ((current-pos  vector   :inline :offset-assert 0)
   (dir          vector   :inline :offset-assert 16)
   (dest-pos     vector   :inline :offset-assert 32)
   (current-poly nav-poly         :offset-assert 48)
   (next-poly    nav-poly         :offset-assert 52)
   (len          meters           :offset-assert 56)
   (last-edge    int8             :offset-assert 60)
   (terminated   basic            :offset-assert 64)
   (reached-dest basic            :offset-assert 68)
   (hit-boundary basic            :offset-assert 72)
   (hit-gap      basic            :offset-assert 76)
   )
  :method-count-assert 9
  :size-assert         #x50
  :flag-assert         #x900000050
  )

(deftype nav-route-portal (structure)
  ((next-poly  nav-poly   :offset-assert 0)
   (vertex     nav-vertex 2 :offset-assert 4)
   (edge-index int8       :offset-assert 12)
   )
  :method-count-assert 9
  :size-assert         #xd
  :flag-assert         #x90000000d
  )

(deftype clip-travel-vector-to-mesh-return-info (structure)
  ((found-boundary  basic            :offset-assert 0)
   (intersection    vector   :inline :offset-assert 16)
   (boundary-normal vector   :inline :offset-assert 32)
   (prev-normal     vector   :inline :offset-assert 48)
   (next-normal     vector   :inline :offset-assert 64)
   (poly            nav-poly         :offset-assert 80)
   (gap-poly        nav-poly         :offset-assert 84)
   (edge            int32            :offset-assert 88)
   (vert-prev       vector   :inline :offset-assert 96)
   (vert-0          vector   :inline :offset-assert 112)
   (vert-1          vector   :inline :offset-assert 128)
   (vert-next       vector   :inline :offset-assert 144)
   )
  :method-count-assert 9
  :size-assert         #xa0
  :flag-assert         #x9000000a0
  )

(deftype nav-node (structure)
  ((center-x      float           :offset-assert 0)
   (center-y      float           :offset-assert 4)
   (center-z      float           :offset-assert 8)
   (type          uint16          :offset-assert 12)
   (parent-offset uint16          :offset-assert 14)
   (center        vector  :inline :offset 0)
   (radius-x      float           :offset-assert 16)
   (radius-y      float           :offset-assert 20)
   (radius-z      float           :offset-assert 24)
   (left-offset   uint16          :offset-assert 28)
   (right-offset  uint16          :offset-assert 30)
   (num-tris      uint32          :offset 28)
   (radius        vector  :inline :offset 16)
   (scale-x       float           :offset-assert 32)
   (first-tris    uint8 4         :offset-assert 36)
   (scale-z       float           :offset-assert 40)
   (last-tris     uint8 4         :offset-assert 44)
   (scale         vector  :inline :offset 32)
   )
  :method-count-assert 9
  :size-assert         #x30
  :flag-assert         #x900000030
  )

(deftype nav-lookup-elem (structure)
  ((vec         vector :inline :offset-assert 0)
   (y-thresh    float          :offset 12)
   (time        uint32         :offset-assert 16)
   (node-offset uint32         :offset-assert 20)
   (lookup-type uint8          :offset-assert 24)
   (poly-ind    uint8          :offset-assert 25)
   (dummy0      uint16         :offset-assert 26)
   (dummy       uint32         :offset-assert 28)
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

(deftype nav-mesh (basic)
  ((user-list           engine           :offset-assert 4)
   (poly-lookup-history uint8 2       :offset-assert 8)
   (debug-time          uint8           :offset-assert 10)
   (static-sphere-count uint8           :offset-assert 11)
   (static-sphere       uint32          :offset-assert 12)
   (bounds              sphere  :inline :offset-assert 16)
   (origin              vector  :inline :offset-assert 32)
   (cache               nav-lookup-elem 4 :inline :offset-assert 48) ;; guess on type
   (node-count          int32           :offset-assert 176)
   (nodes               uint32          :offset-assert 180)
   (vertex-count        int32           :offset-assert 184)
   (vertex              uint32          :offset-assert 188)
   (poly-count          int32           :offset-assert 192)
   (poly                uint32          :offset-assert 196)
   (route               uint32          :offset-assert 200)
   )
  :method-count-assert 30
  :size-assert         #xcc
  :flag-assert         #x1e000000cc
  (:methods
    (dummy-9 () none 9)
    (dummy-10 () none 10)
    (dummy-11 () none 11)
    (dummy-12 () none 12)
    (dummy-13 (_type_) none 13)
    (dummy-14 () none 14)
    (dummy-15 () none 15)
    (dummy-16 () none 16)
    (dummy-17 (_type_) none 17)
    (dummy-18 () none 18)
    (dummy-19 () none 19)
    (dummy-20 () none 20)
    (dummy-21 () none 21)
    (dummy-22 () none 22)
    (dummy-23 () none 23)
    (dummy-24 () none 24)
    (dummy-25 () none 25)
    (dummy-26 () none 26)
    (dummy-27 () none 27)
    (dummy-28 () none 28)
    (dummy-29 () none 29)
    )
  )

(deftype check-vector-collision-with-nav-spheres-info (structure)
  ((u         float          :offset-assert 0)
   (intersect vector :inline :offset-assert 16)
   (normal    vector :inline :offset-assert 32)
   )
  :method-count-assert 9
  :size-assert         #x30
  :flag-assert         #x900000030
  )

(deftype nav-gap-info (structure)
  ((dest vector   :inline :offset-assert 0)
   (poly nav-poly         :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x14
  :flag-assert         #x900000014
  )

(deftype nav-control (basic)
  ((flags               nav-control-flags :offset-assert 4)
   (process             basic             :offset-assert 8)
   (shape               collide-shape     :offset-assert 12)
   (mesh                nav-mesh          :offset-assert 16)
   (gap-event           basic             :offset-assert 20)
   (block-event         basic             :offset-assert 24)
   (current-poly        nav-poly          :offset-assert 28)
   (next-poly           nav-poly          :offset-assert 32)
   (target-poly         nav-poly          :offset-assert 36)
   (portal              nav-route-portal  2        :offset-assert 40) ;; guess
   (nearest-y-threshold meters            :offset-assert 48)
   (event-temp          vector   :inline  :offset-assert 64)
   (old-travel          vector   :inline  :offset-assert 80)
   (blocked-travel      vector   :inline  :offset-assert 96)
   (prev-pos            vector   :inline  :offset-assert 112)
   (extra-nav-sphere    vector   :inline  :offset-assert 128)
   (travel              vector   :inline  :offset-assert 144)
   (target-pos          vector   :inline  :offset-assert 160)
   (destination-pos     vector   :inline  :offset-assert 176)
   (block-time          uint64            :offset-assert 192)
   (block-count         float             :offset-assert 200)
   (user-poly           nav-poly          :offset-assert 204)
   (nav-cull-radius     float             :offset-assert 208)
   (num-spheres         int16             :offset-assert 212)
   (max-spheres         int16             :offset-assert 214)
   (sphere              sphere :inline  :dynamic :offset-assert 224) ;; guess
   )
  :method-count-assert 36
  :size-assert         #xe0
  :flag-assert         #x24000000e0
  (:methods
    (new (symbol type collide-shape int float) _type_)
    (dummy-9 () none 9)
    (point-in-bounds? (_type_ vector) symbol 10)
    (dummy-11 () none 11)
    (dummy-12 () none 12)
    (dummy-13 () none 13)
    (dummy-14 () none 14)
    (set-target-pos! (_type_ vector) none 15)
    (dummy-16 () none 16)
    (dummy-17 () none 17)
    (dummy-18 () none 18)
    (dummy-19 () none 19)
    (dummy-20 () none 20)
    (dummy-21 () none 21)
    (dummy-22 () none 22)
    (dummy-23 () none 23)
    (dummy-24 () none 24)
    (dummy-25 () none 25)
    (dummy-26 () none 26)
    (dummy-27 () none 27)
    (dummy-28 () none 28)
    (should-display? (_type_) symbol 29)
    (dummy-30 () none 30)
    (dummy-31 () none 31)
    (dummy-32 () none 32)
    (dummy-33 () none 33)
    (dummy-34 () none 34)
    (dummy-35 () none 35)
    )
  )

;; - Functions

(define-extern nav-mesh-connect (function process trsqv nav-control nav-mesh))
(define-extern has-nav-mesh? (function entity-actor symbol))

;; - Symbols

(define-extern process-level-heap kheap) ;; unknown type
(define-extern *default-nav-mesh* nav-mesh) ;; unknown type


;; ----------------------
;; File - load-dgo
;; Source Path - engine/load/load-dgo.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype load-dgo-msg (structure)
  ((rsvd       uint16              :offset-assert 0) ;; unused?
   (result     load-msg-result     :offset-assert 2) ;; status from OVERLORD
   (b1         pointer             :offset-assert 4) ;; EE -> OVERLORD, first temp load buffer
   (b2         pointer             :offset-assert 8) ;; EE -> OVERLORD, second temp load buffer
   (bt         pointer             :offset-assert 12) ;; EE -> OVERLORD, location of heap
   (name       uint128             :offset-assert 16) ;; EE -> OVERLORD, name of file.
   (name-chars uint8   16          :offset  16)       ;; name of file (as chars)
   (address    uint32              :offset   4) ;; OVERLORD -> EE, location of loaded file.
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

(deftype load-chunk-msg (structure)
  ((rsvd     uint16     :offset-assert 0)
   (result   load-msg-result     :offset-assert 2)
   (address  pointer    :offset-assert 4)
   (section  uint32     :offset-assert 8)
   (maxlen   uint32     :offset-assert 12)
   (id       uint32     :offset 4)
   (basename uint8 48 :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x40
  :flag-assert         #x900000040
  )

(deftype dgo-header (structure)
  ((length   uint32     :offset-assert 0)
   (rootname uint8 60 :offset-assert 4)
   ;; added
   (data uint8 :dynamic :offset-assert 64)
   )
  :method-count-assert 9
  :size-assert         #x40
  :flag-assert         #x900000040
  )

;; - Functions

(define-extern link-begin (function pointer (pointer uint8) int kheap link-flag int))
(define-extern string->sound-name (function string sound-name))
(define-extern str-load (function string int pointer int symbol))
(define-extern str-load-status (function (pointer int32) symbol))
(define-extern str-load-cancel (function none))
(define-extern str-play-async (function string pointer none))
(define-extern str-play-stop (function string none))
(define-extern str-play-queue (function string none))
(define-extern str-ambient-play (function string none))
(define-extern str-ambient-stop (function string none))
(define-extern str-play-kick (function none))
(define-extern dgo-load-begin (function string pointer pointer pointer load-dgo-msg))
(define-extern dgo-load-get-next (function (pointer symbol) pointer))
(define-extern dgo-load-continue (function pointer int))
(define-extern dgo-load-cancel (function none))
(define-extern find-temp-buffer (function int pointer))
(define-extern dgo-load-link (function dgo-header kheap symbol symbol symbol))
(define-extern destroy-mem (function (pointer uint32) (pointer uint32) none))

;; - Symbols

(define-extern *dgo-name* string)
(define-extern *load-dgo-rpc* rpc-buffer-pair)
(define-extern *dgo-time* uint)
(define-extern *play-str-rpc* rpc-buffer-pair)
(define-extern *que-str-lock* symbol)
(define-extern *load-str-lock* symbol)
(define-extern *load-str-rpc* rpc-buffer-pair)


;; ----------------------
;; File - ramdisk
;; Source Path - engine/load/ramdisk.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype ramdisk-rpc-fill (structure)
  ((rsvd1    int32     :offset-assert 0)
   (ee-id    int32     :offset-assert 4)
   (rsvd2    int32 2 :offset-assert 8)
   (filename uint128   :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

(deftype ramdisk-rpc-load (structure)
  ((rsvd   int32   :offset-assert 0)
   (ee-id  int32   :offset-assert 4)
   (offset uint32  :offset-assert 8)
   (length uint32  :offset-assert 12)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype ramdisk-rpc-load-to-ee (structure)
  ((rsvd     int32    :offset-assert 0)
   (addr     int32    :offset-assert 4)
   (offset   int32    :offset-assert 8)
   (length   int32    :offset-assert 12)
   (filename uint128  :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

;; - Functions

(define-extern ramdisk-load (function int uint uint pointer int))
(define-extern ramdisk-sync (function none))

;; - Symbols

(define-extern *ramdisk-rpc* rpc-buffer-pair)
(define-extern *current-ramdisk-id* int)


;; ----------------------
;; File - gsound
;; Source Path - engine/sound/gsound.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype sound-iop-info (basic)
  ((frame       uint32     :offset 16)
   (strpos      int32      :offset-assert 20)
   (str-id      uint32     :offset-assert 24)
   (str-id-sign int32      :offset 24)
   (freemem     uint32     :offset-assert 28)
   (chinfo      uint8   48 :offset-assert 32)
   (freemem2    uint32     :offset-assert 80)
   (nocd        uint32     :offset-assert 84)
   (dirtycd     uint32     :offset-assert 88)
   (diskspeed   uint32  2  :offset-assert 92)
   (lastspeed   uint32     :offset-assert 100)
   (dupseg      int32      :offset-assert 104)
   (times       uint32  41 :offset-assert 108)
   (times-seq   uint32     :offset-assert 272)
   )
  :method-count-assert 9
  :size-assert         #x114
  :flag-assert         #x900000114
  )

(deftype flava-table-row (structure)
  ((music symbol     :offset-assert 0)
   (flava uint8   50 :offset-assert 4)
   )
  :allow-misaligned
  :method-count-assert 9
  :size-assert         #x36
  :flag-assert         #x900000036
  )

(deftype flava-table (basic)
  ((row   flava-table-row 20 :inline :offset-assert 4)
   (count int32      :offset-assert 1284)
   )
  :method-count-assert 9
  :size-assert         #x508
  :flag-assert         #x900000508
  )

;; - Functions

(define-extern math-camera-pos (function vector))
(define-extern target-pos (function int vector))
(define-extern camera-pos (function vector))
(define-extern new-sound-id (function sound-id))
(define-extern get-sound-buffer-entry (function pointer))
(define-extern sound-trans-convert (function vector3w vector int))
(define-extern sound-stop (function sound-id int))
(define-extern effect-param->sound-spec (function sound-spec sound-play-parms int sound-spec))
(define-extern ear-trans (function vector))
(define-extern sound-play-by-spec (function sound-spec sound-id vector sound-id))
(define-extern sound-play-by-name (function sound-name sound-id int int int uint vector sound-id))
(define-extern sound-angle-convert (function float int))
(define-extern sound-set-ear-trans (function vector vector float int))
(define-extern activate-progress (function process int int))
(define-extern kset-language (function int int)) ;; unknown type
(define-extern sound-command->string (function sound-command string))
(define-extern sound-name= (function sound-name sound-name symbol))
(define-extern str-is-playing? (function symbol))
(define-extern current-str-id (function int))
(define-extern current-str-pos (function int int))
(define-extern is-cd-in? (function symbol))
(define-extern check-irx-version (function int))
(define-extern sound-bank-load (function sound-name sound-id))
(define-extern sound-bank-unload (function sound-name int))
(define-extern sound-music-load (function sound-name int))
(define-extern sound-music-unload (function int))
(define-extern sound-reload-info (function int))
(define-extern set-language (function int int))
(define-extern list-sounds (function int))
(define-extern sound-buffer-dump (function int))
(define-extern swap-sound-buffers (function vector vector float int))
(define-extern free-last-sound-buffer-entry (function int))
(define-extern sound-basic-cb (function int (pointer int32) none))
(define-extern sound-set-volume (function uint float int))
(define-extern sound-set-reverb (function int float float uint int))
(define-extern sound-pause (function sound-id int))
(define-extern sound-continue (function sound-id int))
(define-extern sound-group-pause (function uint int))
(define-extern sound-group-stop (function uint int))
(define-extern sound-group-continue (function uint int))
(define-extern sound-set-falloff-curve (function int float float int))
(define-extern sound-set-sound-falloff (function sound-name int int int int))
(define-extern sound-set-flava (function uint int))
(define-extern sound-volume-off (function int))
(define-extern show-iop-info (function dma-buffer int))
(define-extern show-iop-memory (function dma-buffer int))
(define-extern make-sqrt-table (function int))
(define-extern flava-lookup (function symbol int integer))

;; - Symbols

(define-extern *flava-table* flava-table) ;; unknown type
(define-extern *sound-iop-info* sound-iop-info) ;; unknown type
(define-extern *ambient-spec* sound-spec) ;; unknown type
(define-extern *debug-effect-control* symbol) ;; unknown type
(define-extern *setting-control* setting-control)
(define-extern *sound-player-enable* symbol) ;; unknown type
(define-extern *sound-player-rpc* rpc-buffer-pair) ;; unknown type
(define-extern *sound-loader-rpc* rpc-buffer-pair) ;; unknown type


;; ----------------------
;; File - transformq
;; Source Path - engine/math/transformq.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern transformq-copy! (function transformq transformq transformq))
(define-extern matrix<-transformq! (function matrix transformq matrix))
(define-extern matrix<-no-trans-transformq! (function matrix transformq matrix))
(define-extern matrix<-transformq+trans! (function matrix transformq vector matrix))
(define-extern matrix<-transformq+world-trans! (function matrix transformq vector matrix))
(define-extern matrix<-parented-transformq! (function matrix transformq quaternion matrix))


;; ----------------------
;; File - collide-func
;; Source Path - engine/collide/collide-func.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern ray-sphere-intersect (function vector vector vector vector float))
(define-extern raw-ray-sphere-intersect (function vector float))
(define-extern ray-circle-intersect (function vector vector vector vector float))
(define-extern ray-cylinder-intersect (function vector vector vector vector float float vector float))
(define-extern ray-plane-intersect (function vector vector vector vector vector vector vector float))
(define-extern ray-triangle-intersect (function vector)) ;; NOTE - didn't bother to check input args
(define-extern collide-do-primitives (function float)) ;; NOTE - didn't bother to check input args
(define-extern moving-sphere-sphere-intersect (function vector vector vector vector float))
(define-extern moving-sphere-moving-sphere-intersect (function vector vector vector vector float))


;; ----------------------
;; File - joint
;; Source Path - engine/anim/joint.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern flatten-joint-control-to-spr (function joint-control int))
(define-extern make-joint-jump-tables (function int))
(define-extern calc-animation-from-spr (function joint-control int int))
(define-extern decompress-fixed-data-to-accumulator (function none))
(define-extern decompress-frame-data-to-accumulator (function none))
(define-extern decompress-frame-data-pair-to-accumulator (function none))
(define-extern matrix-from-control! (function matrix-stack joint matrix symbol matrix))
(define-extern matrix-from-control-channel! (function matrix joint joint-control-channel matrix))
(define-extern matrix-from-control-pair! (function matrix matrix joint matrix))
(define-extern matrix-from-joint-anim-frame (function pointer int int matrix)) ;; ???
(define-extern create-interpolated-joint-animation-frame (function joint-control int process-drawable int))
(define-extern mem-size (function basic symbol int int))
(define-extern jacc-mem-usage (function pointer memory-usage-block int int))
(define-extern joint-anim-inspect-elt (function joint-anim float int))
(define-extern joint-anim-login (function joint-anim-drawable joint-anim-drawable))
(define-extern joint-control-channel-eval (function joint-control-channel float))
(define-extern joint-control-channel-eval! (function joint-control-channel (function joint-control-channel float float float) float))
(define-extern joint-control-channel-group-eval! (function joint-control-channel art-joint-anim (function joint-control-channel float float float) int))
(define-extern joint-control-channel-group! (function joint-control-channel art-joint-anim (function joint-control-channel float float float) int))
(define-extern joint-control-copy! (function joint-control joint-control joint-control))
(define-extern joint-control-remap! (function joint-control art-group art-group pair int string object))
(define-extern cspace<-cspace! (function cspace cspace matrix))
(define-extern cspace<-rot-yxy! function) ;; unused
(define-extern cspace<-transform-yxy! function) ;; unused
(define-extern cspace<-transformq+trans! (function cspace transformq vector matrix))
(define-extern cspace<-transformq+world-trans! (function cspace transformq vector matrix))
(define-extern cspace-calc-total-matrix! (function cspace matrix matrix))
(define-extern cspace<-matrix-no-push-joint! (function cspace matrix matrix))
(define-extern cspace<-matrix-joint! (function cspace matrix matrix))
(define-extern cspace<-parented-matrix-joint! (function cspace matrix matrix))
(define-extern clear-frame-accumulator function)
(define-extern normalize-frame-quaternions function)


;; ----------------------
;; File - cylinder
;; Source Path - engine/geometry/cylinder.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype cylinder-verts (structure)
  ((vert vector 24 :inline :offset-assert 0)
   )
  :method-count-assert 9
  :size-assert         #x180
  :flag-assert         #x900000180
  )

(deftype cylinder-flat-verts (structure)
  ((vert vector 10 :inline :offset-assert 0)
   )
  :method-count-assert 9
  :size-assert         #xa0
  :flag-assert         #x9000000a0
  )

;; - Functions

;; TODO - not decompiling correctly due to vector-dot-product again i believe
(define-extern ray-arbitrary-circle-intersect (function vector vector vector vector float float))
(define-extern camera-line (function vector vector vector none))


;; ----------------------
;; File - wind
;; Source Path - engine/gfx/wind.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern update-wind (function wind-work (array uint8) none))


;; ----------------------
;; File - bsp
;; Source Path - engine/gfx/vis/bsp.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern print-cl-stat function)
(define-extern clear-cl-stat function)
(define-extern mem-usage-bsp-tree (function bsp-header (inline-array bsp-node) memory-usage-block int none))
(define-extern bsp-camera-asm function)
(define-extern print-collide-stats (function none))

;; - Unknowns

(define-extern *test-shrub* int)


;; ----------------------
;; File - subdivide
;; Source Path - engine/gfx/tfrag/subdivide.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern perf-stat-bucket->string function)
(define-extern print-tr-stat function)
(define-extern clear-tr-stat function)
(define-extern print-terrain-stats (function none))
(define-extern update-subdivide-settings! function)
(define-extern set-tfrag-dists! function)
(define-extern start-perf-stat-collection (function engine display-frame int int none))
(define-extern end-perf-stat-collection (function none))
(define-extern print-perf-stats (function none))

;; - Unknowns

(define-extern *subdivide-settings* subdivide-settings)
(define-extern *tfrag-work* tfrag-work) ;; unknown type
(define-extern *perf-stats* perf-stat-array) ;; unknown type
;;(define-extern *merc-global-stats* object) ;; unknown type
;;(define-extern *stat-string-tfrag-near* object) ;; unknown type
;;(define-extern *stat-string-tfrag* object) ;; unknown type
;;(define-extern *stat-string-total* object) ;; unknown type
(define-extern *terrain-context* terrain-context) ;; unknown type
;;(define-extern GSH_ENABLE object) ;; unknown type
;;(define-extern GSH_BUCKET object) ;; unknown type
;;(define-extern GSH_WHICH_STAT object) ;; unknown type
;;(define-extern GSH_MAX_DISPLAY object) ;; unknown type
;;(define-extern GSH_TIME object) ;; unknown type
;;(define-extern *gomi-stats-hack* object) ;; unknown type


;; ----------------------
;; File - sprite
;; Source Path - engine/gfx/sprite/sprite.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

; (deftype sprite-header (structure)
;   ((header      UNKNOWN 1 :offset-assert 0)
;    (num-sprites int32     :offset-assert 0)
;    )
;   :method-count-assert 9
;   :size-assert         #x10
;   :flag-assert         #x900000010
;   )

; (deftype sprite-hvdf-data (structure)
;   ((data UNKNOWN 76 :offset-assert 0)
;    )
;   :method-count-assert 9
;   :size-assert         #x4c0
;   :flag-assert         #x9000004c0
;   )

; (deftype sprite-hvdf-control (structure)
;   ((alloc UNKNOWN 76 :offset-assert 0)
;    )
;   :method-count-assert 9
;   :size-assert         #x4c
;   :flag-assert         #x90000004c
;   )

; (deftype sprite-aux-list (basic)
;   ((num-entries int32     :offset-assert 4)
;    (entry       int32     :offset-assert 8)
;    (data        UNKNOWN 1 :offset-assert 12)
;    )
;   :method-count-assert 9
;   :size-assert         #x10
;   :flag-assert         #x900000010
;   )

; (deftype sprite-frame-data (structure)
;   ((data               UNKNOWN      41      :offset-assert 0)
;    (cdata              UNKNOWN      16      :offset-assert 0)
;    (fdata              UNKNOWN      25      :offset-assert 256)
;    (xy-array           UNKNOWN      8       :offset-assert 0)
;    (st-array           UNKNOWN      4       :offset-assert 128)
;    (xyz-array          UNKNOWN      4       :offset-assert 192)
;    (hmge-scale         vector       :inline :offset-assert 256)
;    (consts             vector       :inline :offset-assert 272)
;    (pfog0              float                :offset-assert 272)
;    (deg-to-rad         float                :offset-assert 276)
;    (min-scale          float                :offset-assert 280)
;    (inv-area           float                :offset-assert 284)
;    (adgif-giftag       qword        :inline :offset-assert 288)
;    (sprite-2d-giftag   qword        :inline :offset-assert 304)
;    (sprite-2d-giftag-2 qword        :inline :offset-assert 320)
;    (sincos-01          vector       :inline :offset-assert 336)
;    (sincos-23          vector       :inline :offset-assert 352)
;    (sincos-45          vector       :inline :offset-assert 368)
;    (sincos-67          vector       :inline :offset-assert 384)
;    (sincos-89          vector       :inline :offset-assert 400)
;    (basis-x            vector       :inline :offset-assert 416)
;    (basis-y            vector       :inline :offset-assert 432)
;    (sprite-3d-giftag   qword        :inline :offset-assert 448)
;    (screen-shader      adgif-shader :inline :offset-assert 464)
;    (clipped-giftag     qword        :inline :offset-assert 544)
;    (inv-hmge-scale     vector       :inline :offset-assert 560)
;    (stq-offset         vector       :inline :offset-assert 576)
;    (stq-scale          vector       :inline :offset-assert 592)
;    (rgba-plain         qword        :inline :offset-assert 608)
;    (warp-giftag        qword        :inline :offset-assert 624)
;    (fog-clamp          vector       :inline :offset-assert 640)
;    (fog-min            float                :offset-assert 640)
;    (fog-max            float                :offset-assert 644)
;    (max-scale          float                :offset-assert 648)
;    )
;   :method-count-assert 9
;   :size-assert         #x290
;   :flag-assert         #x900000290
;   )

;; - Functions

(define-extern sprite-init-distorter function)
(define-extern sprite-draw-distorters function)
(define-extern sprite-add-frame-data function)
(define-extern sprite-add-matrix-data function)
(define-extern sprite-add-3d-all function)
(define-extern sprite-add-2d-all function)
(define-extern sprite-add-shadow-all function)
(define-extern sprite-add-shadow-chunk function)
(define-extern sprite-setup-header function)
(define-extern sprite-add-3d-chunk function)
(define-extern sprite-add-2d-chunk function)
(define-extern sprite-setup-frame-data function)
(define-extern clear-sprite-aux-list function)
(define-extern add-to-sprite-aux-list function)
(define-extern sprite-set-3d-quaternion! function)
(define-extern sprite-get-3d-quaternion! function)
(define-extern sprite-draw (function display none))
(define-extern sprite-allocate-user-hvdf function)
(define-extern sprite-release-user-hvdf function)
(define-extern sprite-get-user-hvdf function)

;; - Symbols

(define-extern *shadow-middot-texture* texture) ;; unknown type

;; - Unknowns

;;(define-extern *sprite-hvdf-data* object) ;; unknown type
;;(define-extern *sprite-hvdf-control* object) ;; unknown type
;;(define-extern sprite-vu1-block object) ;; unknown type
;;(define-extern *sprite-array-3d* object) ;; unknown type
;;(define-extern *sprite-array-2d* object) ;; unknown type
;;(define-extern *sprite-aux-list* object) ;; unknown type


;; ----------------------
;; File - sprite-distort
;; Source Path - engine/gfx/sprite/sprite-distort.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

; (deftype sprite-distorter-sine-tables (basic)
;   ((aspx   float           :offset-assert 4)
;    (aspy   float           :offset-assert 8)
;    (entry  UNKNOWN 128     :offset-assert 16)
;    (ientry UNKNOWN 9       :offset-assert 2064)
;    (giftag qword   :inline :offset-assert 2208)
;    (color  qword   :inline :offset-assert 2224)
;    )
;   :method-count-assert 9
;   :size-assert         #x8c0
;   :flag-assert         #x9000008c0
;   )

;; - Unknowns

;;(define-extern *sprite-distorter-sine-tables* object) ;; unknown type
;;(define-extern sprite-distort-vu1-block object) ;; unknown type


;; ----------------------
;; File - debug-sphere
;; Source Path - engine/debug/debug-sphere.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype debug-sphere-table (basic)
  ((point vector 300 :inline :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x12d0
  :flag-assert         #x9000012d0
  )

;; - Functions

(define-extern add-debug-line (function symbol bucket-id vector vector rgba symbol rgba symbol))
(define-extern make-debug-sphere-table (function debug-sphere-table none))
(define-extern add-debug-sphere-from-table (function bucket-id vector float rgba none))

;; - Symbols

(define-extern *debug-sphere-table* debug-sphere-table) ;; unknown type


;; ----------------------
;; File - debug
;; Source Path - engine/debug/debug.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype debug-line (structure)
  ((flags  int32          :offset-assert 0)
   (bucket bucket-id      :offset-assert 4)
   (v1     vector :inline :offset-assert 16)
   (v2     vector :inline :offset-assert 32)
   (color  rgba           :offset-assert 48)
   (mode   symbol         :offset-assert 52)
   (color2 rgba           :offset-assert 56)
   )
  :method-count-assert 9
  :size-assert         #x3c
  :flag-assert         #x90000003c
  )

(deftype debug-text-3d (structure)
  ((flags  int32            :offset-assert 0)
   (bucket bucket-id        :offset-assert 4)
   (pos    vector   :inline :offset-assert 16)
   (color  uint64           :offset-assert 32)
   (offset vector2h :inline :offset-assert 40)
   (str    string           :offset-assert 44)
   )
  :method-count-assert 9
  :size-assert         #x30
  :flag-assert         #x900000030
  )

(deftype debug-tracking-thang (basic)
  ((length           int32  :offset-assert 4)
   (allocated-length int32  :offset-assert 8)
   )
  :method-count-assert 9
  :size-assert         #xc
  :flag-assert         #x90000000c
  )

;; - Functions

(define-extern debug-set-camera-pos-rot! (function vector matrix int))
(define-extern drawable-frag-count (function drawable int))
(define-extern add-debug-light (function symbol bucket-id light vector string symbol))
(define-extern add-debug-text-3d (function symbol bucket-id string vector rgba vector2h symbol))
(define-extern add-debug-x (function symbol bucket-id vector rgba symbol))
(define-extern add-debug-curve (function symbol bucket-id pointer int (inline-array vector) int rgba symbol))
(define-extern add-debug-sphere (function symbol bucket-id vector float rgba symbol))
(define-extern get-debug-text-3d (function debug-text-3d))
(define-extern internal-draw-debug-text-3d (function bucket-id string vector rgba vector2h pointer))
(define-extern get-debug-line (function debug-line))
(define-extern internal-draw-debug-line (function bucket-id vector vector rgba symbol rgba object))
(define-extern draw-string (function string dma-buffer font-context float))
(define-extern transform-float-point (function vector vector vector))
(define-extern add-debug-point (function symbol bucket-id vector symbol)) ;; unused
(define-extern add-debug-outline-triangle (function symbol bucket-id vector vector vector rgba symbol))
(define-extern add-debug-triangle-normal (function symbol bucket-id vector vector vector rgba symbol))
(define-extern add-debug-flat-triangle (function symbol bucket-id vector vector vector rgba symbol))
(define-extern debug-reset-buffers (function symbol))
(define-extern debug-draw-buffers (function symbol))
(define-extern add-debug-line2d (function symbol bucket-id vector vector vector symbol))
(define-extern add-debug-box (function symbol bucket-id vector vector rgba symbol))
(define-extern add-debug-sphere-with-transform (function symbol bucket-id vector float matrix rgba symbol))
(define-extern add-debug-spheres (function symbol bucket-id (pointer float) int rgba symbol))
(define-extern add-debug-circle (function symbol bucket-id vector float rgba matrix symbol))
(define-extern add-debug-rot-matrix (function symbol bucket-id matrix vector matrix))
(define-extern add-debug-yrot-vector (function symbol bucket-id vector float float rgba symbol))
(define-extern add-debug-arc (function symbol bucket-id vector float float float rgba matrix symbol))
(define-extern add-debug-curve2 (function symbol bucket-id curve rgba symbol symbol))
(define-extern add-debug-points (function symbol bucket-id (inline-array vector) int rgba float int symbol)) ;; unused
(define-extern debug-percent-bar (function symbol bucket-id int int float rgba symbol))
(define-extern debug-pad-display (function cpad-info symbol)) ;; unused
(define-extern add-debug-lights (function symbol bucket-id (inline-array light) vector symbol))
(define-extern history-init (function pos-history int pos-history))
(define-extern history-draw-and-update (function pos-history int vector symbol))
(define-extern dma-timeout-cam (function int))
(define-extern display-file-info (function int))

;; - Unknowns

(define-extern add-debug-vector (function symbol bucket-id vector vector meters rgba symbol))
(define-extern *debug-lines* (inline-array debug-line))
(define-extern *debug-lines-trk* debug-tracking-thang)
(define-extern *debug-text-3ds* (inline-array debug-text-3d))
(define-extern *debug-text-3d-trk* debug-tracking-thang)


;; ----------------------
;; File - merc-vu1
;; Source Path - engine/gfx/merc/merc-vu1.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Unknowns

;;(define-extern merc-vu1-block object) ;; unknown type


;; ----------------------
;; File - merc-blend-shape
;; Source Path - engine/gfx/merc/merc-blend-shape.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype blerc-block-header (structure)
  ((tag       generic-merc-tag :inline :offset-assert 0)
   (vtx-count uint32                   :offset-assert 16)
   (overlap   uint32                   :offset-assert 20)
   (lump-dest uint32                   :offset-assert 24)
   (lump-qwc  uint32                   :offset-assert 28)
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

; (deftype blerc-block (structure)
;   ((output UNKNOWN            848     :offset-assert 0)
;    (header blerc-block-header :inline :offset-assert 848)
;    )
;   :method-count-assert 9
;   :size-assert         #x370
;   :flag-assert         #x900000370
;   )

; (deftype blerc-dcache (structure)
;   ((repl-mult UNKNOWN 40 :offset-assert 0)
;    )
;   :method-count-assert 9
;   :size-assert         #x280
;   :flag-assert         #x900000280
;   )

(deftype blerc-globals (structure)
  ((first            uint32  :offset-assert 0)
   (next             uint32  :offset-assert 4)
   (min-val          int16   :offset-assert 8)
   (max-val          int16   :offset-assert 10)
   (fragment-count   int32   :offset-assert 12)
   (vtx-count        int32   :offset-assert 16)
   (target-vtx-count int32   :offset-assert 20)
   )
  :method-count-assert 9
  :size-assert         #x18
  :flag-assert         #x900000018
  )

; (deftype blerc-context (structure)
;   ((block-a blerc-block :inline :offset-assert 0)
;    (dummy   UNKNOWN     7312    :offset-assert 880)
;    (block-b blerc-block :inline :offset-assert 8192)
;    )
;   :method-count-assert 9
;   :size-assert         #x2370
;   :flag-assert         #x900002370
;   )

;; - Functions

(define-extern setup-blerc-chains-for-one-fragment function)
(define-extern setup-blerc-chains function)
(define-extern blerc-stats-init function)
(define-extern blerc-init (function none))
(define-extern blerc-a-fragment function)
(define-extern dma-from-spr function)
(define-extern merc-dma-chain-to-spr function)
(define-extern blerc-execute (function none))
(define-extern merc-blend-shape function)

;; - Unknowns

;;(define-extern *blerc-globals* object) ;; unknown type
;;(define-extern *stats-blerc* object) ;; unknown type


;; ----------------------
;; File - merc
;; Source Path - engine/gfx/merc/merc.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern merc-vu1-init-buffer function)
(define-extern merc-vu1-initialize-chain function)
(define-extern merc-vu1-add-vu-function function)
(define-extern get-eye-block function)
(define-extern merc-stats-display function)
(define-extern merc-stats function)
(define-extern merc-edge-stats function)
(define-extern merc-vu1-init-buffers (function none))

;; - Unknowns

;;(define-extern *merc-ctrl-header* object) ;; unknown type


;; ----------------------
;; File - ripple
;; Source Path - engine/gfx/ripple.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype ripple-request (structure)
  ((waveform ripple-wave  :offset-assert 0)
   (effect   merc-effect  :offset-assert 4)
   )
  :pack-me
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )

(deftype ripple-globals (structure)
  ((count    int32      :offset-assert 0)
   (requests ripple-request 16 :inline :offset-assert 4)
   )
  :method-count-assert 9
  :size-assert         #x84
  :flag-assert         #x900000084
  )

;; - Functions

(define-extern ripple-update-waveform-offs (function ripple-wave-set none))
(define-extern ripple-slow-add-sine-waves (function ripple-wave-set float float float))
(define-extern ripple-execute-init (function none))
(define-extern ripple-create-wave-table (function ripple-wave-set int))
(define-extern ripple-apply-wave-table (function merc-effect symbol))
(define-extern ripple-make-request (function ripple-wave merc-effect none))
(define-extern ripple-execute (function none))
(define-extern ripple-matrix-scale function)
(define-extern ripple-add-debug-sphere (function process-drawable vector float float none)) ; TODO - this could be a child type of process-drawable instead
(define-extern ripple-find-height (function process-drawable basic vector float))

;; - Symbols

(define-extern *ripple-globals* ripple-globals)


;; ----------------------
;; File - bones
;; Source Path - engine/anim/bones.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

; (deftype bone-calculation (structure)
;   ((flags               uint16            :offset-assert 0)
;    (num-bones           uint16            :offset-assert 2)
;    (matrix-area         uint32            :offset-assert 4)
;    (joints              uint32            :offset-assert 8)
;    (bones               uint32            :offset-assert 12)
;    (ripple-scale        float             :offset-assert 16)
;    (ripple-y-scale      float             :offset-assert 20)
;    (ripple-normal-scale float             :offset-assert 24)
;    (ripple-area         uint32            :offset-assert 28)
;    (next                bone-calculation  :offset-assert 32)
;    (dummy-1             uint32            :offset-assert 36)
;    (dummy-2             uint32            :offset-assert 40)
;    (dummy-3             uint32            :offset-assert 44)
;    )
;   :method-count-assert 9
;   :size-assert         #x30
;   :flag-assert         #x900000030
;   )

; (deftype bone-calculation-list (structure)
;   ((first bone-calculation  :offset-assert 0)
;    (next  bone-calculation  :offset-assert 4)
;    )
;   :method-count-assert 9
;   :size-assert         #x8
;   :flag-assert         #x900000008
;   )

; (deftype texscroll-globals (structure)
;   ((requests int32      :offset-assert 0)
;    (effects  UNKNOWN 32 :offset-assert 4)
;    )
;   :method-count-assert 9
;   :size-assert         #x84
;   :flag-assert         #x900000084
;   )

(deftype merc-effect-bucket-info (structure)
  ((color-fade    uint32  :offset-assert 0)
   (use-mercneric uint8   :offset-assert 4)
   (ignore-alpha  uint8   :offset-assert 5)
   (pad0          uint8   :offset-assert 6)
   (pad1          uint8   :offset-assert 7)
   )
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )

; (deftype merc-bucket-info (structure)
;   ((light                       vu-lights :inline :offset-assert 0)
;    (needs-clip                  int32             :offset-assert 112)
;    (need-mercprime-if-merc      int32             :offset-assert 116)
;    (must-use-mercneric-for-clip int32             :offset-assert 120)
;    (effect                      UNKNOWN   16      :offset-assert 124)
;    )
;   :method-count-assert 9
;   :size-assert         #xfc
;   :flag-assert         #x9000000fc
;   )

;; - Functions

(define-extern paused? (function symbol))
(define-extern dump-mem function)
(define-extern bone-list-init function)
(define-extern texscroll-make-request function)
(define-extern texscroll-execute (function none))
(define-extern bones-set-sqwc function)
(define-extern bones-reset-sqwc function)
(define-extern bones-init function)
(define-extern draw-bones-mtx-calc function)
(define-extern bones-mtx-calc function)
(define-extern bones-mtx-calc-execute (function none))
(define-extern bones-wrapup function)
(define-extern dump-qword function)
(define-extern bones-debug function)
(define-extern dump-bone-mem function)
(define-extern draw-bones-shadow function)
(define-extern draw-bones-generic-merc function)
(define-extern draw-bones-merc function)
(define-extern draw-bones-check-longest-edge function)
(define-extern draw-bones-check-longest-edge-asm function)
(define-extern draw-bones function)
(define-extern draw-bones-hud function)

;; - Unknowns

;;(define-extern *merc-bucket-info* object) ;; unknown type
;;(define-extern *bone-calculation-list* object) ;; unknown type
;;(define-extern bones-vu0-block object) ;; unknown type
;;(define-extern *texscroll-globals* object) ;; unknown type
;;(define-extern *use-generic* object) ;; unknown type
(define-extern *merc-global-array* merc-global-array) ;; unknown type
;;(define-extern *bones-first* object) ;; unknown type
;;(define-extern *default-shadow-settings* object) ;; unknown type


;; ----------------------
;; File - generic-vu0
;; Source Path - engine/gfx/generic/generic-vu0.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Unknowns

;;(define-extern generic-vu0-block object) ;; unknown type


;; ----------------------
;; File - generic
;; Source Path - engine/gfx/generic/generic.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern generic-init-buf (function dma-buffer int uint none))
(define-extern generic-dma-foreground-sink-init (function generic-dma-foreground-sink none))
(define-extern generic-init-buffers (function symbol))
(define-extern generic-sink (function int generic-dma-foreground-sink))

;; - Symbols

(define-extern *generic-foreground-sinks* (array generic-dma-foreground-sink)) ;; unknown type


;; ----------------------
;; File - generic-vu1
;; Source Path - engine/gfx/generic/generic-vu1.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern generic-add-constants function)
(define-extern generic-setup-constants function)
(define-extern generic-reset-buffers function)

;; - Unknowns

;;(define-extern generic-vu1-block object) ;; unknown type


;; ----------------------
;; File - generic-effect
;; Source Path - engine/gfx/generic/generic-effect.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern generic-work-init function)
(define-extern generic-upload-vu0 function)
(define-extern upload-vu0-program function)
(define-extern generic-initialize-without-sink function)
(define-extern generic-initialize function)
(define-extern generic-wrapup function)
(define-extern generic-dma-from-spr function)
(define-extern generic-light-proc function)
(define-extern generic-envmap-proc function)
(define-extern generic-prepare-dma-double function)
(define-extern generic-prepare-dma-single function)
(define-extern generic-envmap-dproc function)
(define-extern generic-interp-dproc function)
(define-extern generic-no-light-proc function)
(define-extern generic-no-light-dproc-only function)
(define-extern generic-no-light-dproc function)
(define-extern generic-no-light+envmap function)
(define-extern generic-no-light function)
(define-extern generic-envmap-only-proc function)
(define-extern generic-light function)
(define-extern generic-copy-vtx-dclr-dtex function)
(define-extern generic-none function)
(define-extern generic-none-dma-wait function)
(define-extern generic-debug-light-proc function)
(define-extern generic-post-debug function)

;; - Symbols

(define-extern *generic-envmap-texture* texture) ;; unknown type

;; - Unknowns

;;(define-extern *generic-consts* object) ;; unknown type
;;(define-extern *target-lock* object) ;; unknown type


;; ----------------------
;; File - generic-merc
;; Source Path - engine/gfx/generic/generic-merc.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype invinitdata (structure)
  ((count     uint8   :offset-assert 0)
   (init-data uint8   :offset-assert 1)
   (init-addr uint16  :offset-assert 2)
   )
  :method-count-assert 9
  :size-assert         #x4
  :flag-assert         #x900000004
  )

;; - Functions

(define-extern generic-merc-init-asm function)
(define-extern mercneric-matrix-asm function)
(define-extern mercneric-shader-asm function)
(define-extern mercneric-bittable-asm function)
(define-extern mercneric-convert function)
(define-extern high-speed-reject function)
(define-extern generic-merc-execute-asm function)
(define-extern generic-merc-add-to-cue function)
(define-extern generic-merc-execute-all (function none))

;; - Unknowns

;;(define-extern mercneric-vu0-block object) ;; unknown type
;;(define-extern *inv-init-table* object) ;; unknown type


;; ----------------------
;; File - generic-tie
;; Source Path - engine/gfx/generic/generic-tie.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern generic-tie-dma-to-spad function)
(define-extern generic-tie-dma-to-spad-sync function)
(define-extern generic-tie-decompress function)
(define-extern generic-tie-upload-next function)
(define-extern generic-tie-convert-proc function)
(define-extern generic-tie-convert function)
(define-extern generic-tie-display-stats function)
(define-extern generic-tie-debug function)
(define-extern generic-tie-execute function)

;; - Unknowns

;;(define-extern *generic-tie* object) ;; unknown type


;; ----------------------
;; File - shadow-cpu
;; Source Path - engine/gfx/shadow/shadow-cpu.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype shadow-stats (structure)
  ((num-single-tris  uint32  :offset-assert 0)
   (num-double-tris  uint32  :offset-assert 4)
   (num-single-edges uint32  :offset-assert 8)
   (num-double-edges uint32  :offset-assert 12)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype shadow-dcache (structure)
  ((vtx-table              uint32                :offset-assert 0)
   (single-edge-table      uint32                :offset-assert 4)
   (double-edge-table      uint32                :offset-assert 8)
   (double-tri-table       uint32                :offset-assert 12)
   (dcache-top             uint32                :offset-assert 16)
   (num-facing-single-tris uint32                :offset-assert 20)
   (num-single-edges       uint32                :offset-assert 24)
   (num-double-edges       uint32                :offset-assert 28)
   (single-tri-list        uint32                :offset-assert 32)
   (single-edge-list       uint32                :offset-assert 36)
   (double-edge-list       uint32                :offset-assert 40)
   (ptr-dual-verts         uint32                :offset-assert 44)
   (stats                  shadow-stats :inline  :offset-assert 48)
   (center                 vector       :inline  :offset-assert 64)
   (plane                  vector       :inline  :offset-assert 80)
   (top-plane              vector       :inline  :offset-assert 96)
   (near-plane             vector       :inline  :offset-assert 112)
   (light-dir              vector       :inline  :offset-assert 128)
   (vtx-min                vector       :inline  :offset-assert 144)
   (data                   uint8      :dynamic :offset-assert 160)
   )
  :method-count-assert 9
  :size-assert         #xa0
  :flag-assert         #x9000000a0
  )

;; - Functions

(define-extern shadow-vu0-upload function)
(define-extern shadow-vu1-init-buffer function)
(define-extern shadow-dma-init function)
(define-extern shadow-execute function)
(define-extern shadow-dma-end function)
(define-extern shadow-xform-verts function)
(define-extern shadow-calc-dual-verts function)
(define-extern shadow-scissor-edges function)
(define-extern shadow-scissor-top function)
(define-extern shadow-init-vars function)
(define-extern shadow-find-facing-single-tris function)
(define-extern shadow-find-single-edges function)
(define-extern shadow-find-facing-double-tris function)
(define-extern shadow-find-double-edges function)
(define-extern shadow-add-verts function)
(define-extern shadow-add-facing-single-tris function)
(define-extern shadow-add-single-edges function)
(define-extern shadow-add-double-tris function)
(define-extern shadow-add-double-edges function)
(define-extern shadow-execute-all (function dma-buffer shadow-queue none))

;; - Symbols

(define-extern *shadow-data* shadow-data)

;; - Unknowns

;;(define-extern shadow-vu0-block object) ;; unknown type


;; ----------------------
;; File - shadow-vu1
;; Source Path - engine/gfx/shadow/shadow-vu1.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

; (deftype shadow-vu1-constants (structure)
;   ((hmgescale vector     :inline :offset-assert 0)
;    (invhscale vector     :inline :offset-assert 16)
;    (texoffset vector     :inline :offset-assert 32)
;    (texscale  vector     :inline :offset-assert 48)
;    (hvdfoff   vector     :inline :offset-assert 64)
;    (fog       vector     :inline :offset-assert 80)
;    (clrs      UNKNOWN    2       :offset-assert 96)
;    (adgif     gs-gif-tag :inline :offset-assert 128)
;    (texflush  ad-cmd     :inline :offset-assert 144)
;    (flush     ad-cmd     :inline :offset-assert 160)
;    (trigif    gs-gif-tag :inline :offset-assert 176)
;    (quadgif   gs-gif-tag :inline :offset-assert 192)
;    )
;   :method-count-assert 9
;   :size-assert         #xd0
;   :flag-assert         #x9000000d0
;   )

; (deftype shadow-vu1-gifbuf-template (structure)
;   ((adgif   gs-gif-tag :inline :offset-assert 0)
;    (ad      ad-cmd     :inline :offset-assert 16)
;    (flush   ad-cmd     :inline :offset-assert 32)
;    (trigif  gs-gif-tag :inline :offset-assert 48)
;    (quadgif gs-gif-tag :inline :offset-assert 64)
;    )
;   :method-count-assert 9
;   :size-assert         #x50
;   :flag-assert         #x900000050
;   )

;; - Functions

(define-extern shadow-vu1-add-constants function)
(define-extern shadow-vu1-add-matrix function)

;; - Unknowns

;;(define-extern shadow-vu1-block object) ;; unknown type
;;(define-extern *shadow-vu1-tri-template* object) ;; unknown type


;; ----------------------
;; File - depth-cue
;; Source Path - engine/gfx/depth-cue.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern depth-cue-draw-front function)
(define-extern depth-cue-set-stencil function)
(define-extern depth-cue-draw-depth function)
(define-extern depth-cue-calc-z function)
(define-extern depth-cue (function display none))

;; - Unknowns

;;(define-extern *depth-cue-work* object) ;; unknown type


;; ----------------------
;; File - font
;; Source Path - engine/gfx/font.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern get-string-length (function string font-context float))
(define-extern draw-string-adv (function string dma-buffer font-context none)) ;; TODO - ret value unconfirmed!

;; - Unknowns

;;(define-extern *font12-table* object) ;; unknown type
;;(define-extern *font24-table* object) ;; unknown type


;; ----------------------
;; File - decomp
;; Source Path - engine/load/decomp.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype huf-dictionary-node (structure)
  ((zero uint16  :offset-assert 0)
   (one  uint16  :offset-assert 2)
   )
  :method-count-assert 9
  :size-assert         #x4
  :flag-assert         #x900000004
  )

;; - Functions

(define-extern unpack-comp-rle function)
(define-extern unpack-comp-huf function)


;; ----------------------
;; File - background
;; Source Path - engine/gfx/background.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern background-upload-vu0 function)
(define-extern time-of-day-interp-colors function)
(define-extern draw-drawable-tree-instance-shrub function)
(define-extern upload-vis-bits function)
(define-extern time-of-day-interp-colors-scratch function)
(define-extern draw-drawable-tree-tfrag function)
(define-extern draw-drawable-tree-trans-tfrag function)
(define-extern draw-drawable-tree-dirt-tfrag function)
(define-extern draw-drawable-tree-ice-tfrag function)
(define-extern tie-near-make-perspective-matrix function)
(define-extern draw-drawable-tree-instance-tie function)
(define-extern init-background (function none))
(define-extern finish-background (function none))

;; - Symbols

(define-extern *instance-shrub-work* instance-shrub-work)
(define-extern *background-work* background-work)
(define-extern *instance-tie-work* instance-tie-work)

;; - Unknowns

;;(define-extern background-vu0-block object) ;; unknown type


;; ----------------------
;; File - draw-node
;; Source Path - engine/draw/draw-node.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern collide-cache-using-line-sphere-test function)
(define-extern collide-cache-using-y-probe-test function)
(define-extern collide-cache-using-box-test function)
(define-extern draw-node-cull function)


;; ----------------------
;; File - shrubbery
;; Source Path - engine/gfx/shrub/shrubbery.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern upload-generic-shrub (function dma-buffer generic-shrub-fragment int int dma-buffer))
(define-extern shrub-num-tris function)
(define-extern shrub-init-frame function)
(define-extern shrub-upload-model function)
(define-extern shrub-do-init-frame function)
(define-extern shrub-upload-view-data function)
(define-extern shrub-init-view-data function)
(define-extern mem-usage-shrub-walk function)
(define-extern shrub-make-perspective-matrix (function matrix none))
(define-extern shrub-time function)
(define-extern draw-inline-array-instance-shrub function)
(define-extern draw-prototype-inline-array-shrub function)
(define-extern shrub-upload-test (function generic-shrub-fragment none))
(define-extern test-func function)

;; - Unknowns

;;(define-extern shrub-vu1-block object) ;; unknown type


;; ----------------------
;; File - shrub-work
;; Source Path - engine/gfx/shrub/shrub-work.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Nothing Defined in This File!


;; ----------------------
;; File - tfrag-near
;; Source Path - engine/gfx/tfrag/tfrag-near.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern tfrag-details function)
(define-extern clip-restore function)

;; - Unknowns

;;(define-extern tnear-vu1-block object) ;; unknown type


;; ----------------------
;; File - tfrag
;; Source Path - engine/gfx/tfrag/tfrag.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern add-tfrag-mtx-0 function)
(define-extern add-tfrag-mtx-1 function)
(define-extern add-tfrag-data function)
(define-extern tfrag-data-setup function)
(define-extern tfrag-print-stats function)
(define-extern tfrag-init-buffer function)
(define-extern tfrag-end-buffer function)
(define-extern draw-inline-array-tfrag function)
(define-extern tfrag-near-init-buffer function)
(define-extern tfrag-near-end-buffer function)
(define-extern draw-inline-array-tfrag-near function)
(define-extern stats-tfrag-asm function)

;; - Unknowns

;;(define-extern tfrag-vu1-block object) ;; unknown type
;;(define-extern t-stat object) ;; unknown type
;;(define-extern *tfrag-display-stats* object) ;; unknown type


;; ----------------------
;; File - tfrag-methods
;; Source Path - engine/gfx/tfrag/tfrag-methods.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern edge-debug-lines function)
(define-extern vis-cull function)


;; ----------------------
;; File - tfrag-work
;; Source Path - engine/gfx/tfrag/tfrag-work.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Nothing Defined in This File!


;; ----------------------
;; File - tie
;; Source Path - engine/gfx/tie/tie.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

; (deftype tie-consts (structure)
;   ((data      UNKNOWN 24      :offset-assert 0)
;    (vector    UNKNOWN 6       :offset-assert 0)
;    (quads     UNKNOWN 6       :offset-assert 0)
;    (adgif     qword   :inline :offset-assert 0)
;    (strgif    qword   :inline :offset-assert 16)
;    (extra     qword   :inline :offset-assert 32)
;    (gifbufs   qword   :inline :offset-assert 48)
;    (clrbufs   qword   :inline :offset-assert 64)
;    (misc      qword   :inline :offset-assert 80)
;    (atestgif  qword   :inline :offset-assert 96)
;    (atest     UNKNOWN 2       :offset-assert 112)
;    (atest-tra ad-cmd  :inline :offset-assert 112)
;    (atest-def ad-cmd  :inline :offset-assert 128)
;    )
;   :method-count-assert 9
;   :size-assert         #x90
;   :flag-assert         #x900000090
;   )

;; - Functions

(define-extern tie-init-consts function)
(define-extern tie-float-reg function)
(define-extern tie-int-reg function)
(define-extern tie-init-engine function)
(define-extern tie-end-buffer function)
(define-extern tie-ints function)
(define-extern tie-floats function)

;; - Unknowns

;;(define-extern tie-vu1-block object) ;; unknown type


;; ----------------------
;; File - tie-near
;; Source Path - engine/gfx/tie/tie-near.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

; (deftype tie-near-consts (structure)
;   ((extra     qword   :inline :offset-assert 0)
;    (gifbufs   qword   :inline :offset-assert 16)
;    (clrbufs   qword   :inline :offset-assert 32)
;    (adgif     qword   :inline :offset-assert 48)
;    (strgif    qword   :inline :offset-assert 64)
;    (fangif    qword   :inline :offset-assert 80)
;    (hvdfoffs  vector  :inline :offset-assert 96)
;    (invhscale vector  :inline :offset-assert 112)
;    (guard     vector  :inline :offset-assert 128)
;    (atest     UNKNOWN 2       :offset-assert 144)
;    (atest-tra ad-cmd  :inline :offset-assert 144)
;    (atest-def ad-cmd  :inline :offset-assert 160)
;    )
;   :method-count-assert 9
;   :size-assert         #xb0
;   :flag-assert         #x9000000b0
;   )

;; - Functions

(define-extern tie-near-init-consts function)
(define-extern tie-near-init-engine function)
(define-extern tie-near-end-buffer function)
(define-extern tie-near-int-reg function)
(define-extern tie-near-float-reg function)

;; - Unknowns

;;(define-extern tie-near-vu1-block object) ;; unknown type


;; ----------------------
;; File - tie-work
;; Source Path - engine/gfx/tie/tie-work.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Symbols

(define-extern *prototype-tie-work* prototype-tie-work)


;; ----------------------
;; File - tie-methods
;; Source Path - engine/gfx/tie/tie-methods.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype tie-instance-debug (structure)
  ((max-instance uint32  :offset-assert 0)
   (min-instance uint32  :offset-assert 4)
   )
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )

;; - Functions

(define-extern tie-init-buffers (function dma-buffer none))
(define-extern tie-debug-between function)
(define-extern tie-debug-one function)
(define-extern walk-tie-generic-prototypes function)
(define-extern draw-inline-array-instance-tie function)
(define-extern draw-inline-array-prototype-tie-generic-asm function)
(define-extern draw-inline-array-prototype-tie-asm function)
(define-extern draw-inline-array-prototype-tie-near-asm function)
(define-extern tie-test-cam-restore function)

;; - Unknowns

;;(define-extern *tie* object) ;; unknown type
;;(define-extern *pke-hack* object) ;; unknown type


;; ----------------------
;; File - sync-info
;; Source Path - engine/util/sync-info.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Nothing Defined in This File!


;; ----------------------
;; File - trajectory
;; Source Path - engine/physics/trajectory.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Nothing Defined in This File!


;; ----------------------
;; File - sparticle-launcher
;; Source Path - engine/sparticle/sparticle-launcher.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

; (deftype sparticle-birthinfo (structure)
;   ((sprite       uint32    :offset-assert 0)
;    (anim         int32     :offset-assert 4)
;    (anim-speed   float     :offset-assert 8)
;    (birth-func   basic     :offset-assert 12)
;    (joint-ppoint int32     :offset-assert 16)
;    (num-to-birth float     :offset-assert 20)
;    (sound        basic     :offset-assert 24)
;    (dataf        UNKNOWN 1 :offset-assert 0)
;    (data         UNKNOWN 1 :offset-assert 0)
;    )
;   :method-count-assert 9
;   :size-assert         #x1c
;   :flag-assert         #x90000001c
;   )

(deftype sp-queued-launch-particles (structure)
  ((sp-system   basic          :offset-assert 0)
   (sp-launcher basic          :offset-assert 4)
   (pos         vector :inline :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

; (deftype sp-launch-queue (basic)
;   ((in-use int32      :offset-assert 4)
;    (queue  UNKNOWN 32 :offset-assert 16)
;    )
;   :method-count-assert 9
;   :size-assert         #x410
;   :flag-assert         #x900000410
;   )

; (deftype particle-adgif-cache (basic)
;   ((used    int32           :offset-assert 4)
;    (last    uint16          :offset-assert 8)
;    (lastgif adgif-shader    :offset-assert 12)
;    (tidhash UNKNOWN      80 :offset-assert 16)
;    (spadgif UNKNOWN      80 :offset-assert 176)
;    )
;   :method-count-assert 9
;   :size-assert         #x19b0
;   :flag-assert         #x9000019b0
;   )

;; - Functions

(define-extern sphere-in-view-frustum? function)
(define-extern kill-all-particles-with-key function)
(define-extern sp-relaunch-setup-fields function)
(define-extern sp-init-fields! function)
(define-extern sp-launch-particles-var function)
(define-extern sp-get-particle function)
(define-extern particle-adgif function)
(define-extern lookup-part-group-by-name (function string basic))
(define-extern lookup-part-group-pointer-by-name function)
(define-extern unlink-part-group-by-heap (function kheap int))
(define-extern particle-setup-adgif function)
(define-extern sp-queue-launch function)
(define-extern sp-adjust-launch function)
(define-extern sp-euler-convert function)
(define-extern sp-rotate-system function)
(define-extern sp-launch-particles-death function)
(define-extern sp-clear-queue function)
(define-extern sp-relaunch-particle-2d function)
(define-extern sp-relaunch-particle-3d function)
(define-extern sparticle-track-root function)
(define-extern sparticle-track-root-prim function)
(define-extern birth-func-copy-rot-color function)
(define-extern birth-func-copy2-rot-color function)
(define-extern birth-func-copy-omega-to-z function)
(define-extern birth-func-random-next-time function)

;; - Unknowns

;;(define-extern *global-toggle* object) ;; unknown type
(define-extern *part-id-table* (array sparticle-launcher)) ;; unknown type
;;(define-extern *particle-300hz-timer* object) ;; unknown type
;;(define-extern *sp-launch-queue* object) ;; unknown type
;;(define-extern *death-adgif* object) ;; unknown type
(define-extern *part-group-id-table* (array sparticle-launch-group))
;;(define-extern *sp-launcher-lock* object) ;; unknown type
;;(define-extern *sp-launcher-enable* object) ;; unknown type
;;(define-extern *particle-adgif-cache* object) ;; unknown type


;; ----------------------
;; File - sparticle
;; Source Path - engine/sparticle/sparticle.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern all-particles-60-to-50 function)
(define-extern all-particles-50-to-60 function)
(define-extern sp-process-particle-system function)
(define-extern forall-particles-runner function)
(define-extern sparticle-60-to-50 function)
(define-extern sparticle-50-to-60 function)
(define-extern forall-particles function)
(define-extern sparticle-kill-it-level0 function)
(define-extern sparticle-kill-it-level1 function)
(define-extern forall-particles-with-key function)
(define-extern sparticle-kill-it function)
(define-extern forall-particles-with-key-runner function)
(define-extern sp-get-approx-alloc-size function)
(define-extern sp-process-block function)
(define-extern sp-copy-to-spr function)
(define-extern sp-process-block-3d function)
(define-extern sp-process-block-2d function)
(define-extern sp-copy-from-spr function)
(define-extern sp-free-particle function)
(define-extern sp-particle-copy! function)
(define-extern sp-get-block-size function)
(define-extern sp-kill-particle function)
(define-extern sp-orbiter function)
(define-extern memcpy function)
(define-extern kill-all-particles-in-level (function int))
(define-extern set-particle-frame-time (function int none))
(define-extern process-particles (function none))

;; - Unknowns

;;(define-extern *particles-flag* object) ;; unknown type
;;(define-extern *sp-particle-system-2d* object) ;; unknown type
;;(define-extern *sp-particle-system-3d* object) ;; unknown type


;; ----------------------
;; File - entity-table
;; Source Path - engine/entity/entity-table.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

;; This is a terrible terrible function, here be dragons - https://github.com/water111/jak-project/pull/623!
(define-extern entity-info-lookup (function type entity-info))

;; - Symbols

(define-extern *entity-info* (array entity-info))


;; ----------------------
;; File - loader
;; Source Path - engine/load/loader.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern ja-channel-push! (function int int int))
(define-extern ja-channel-set! (function int int))
(define-extern kill-current-level-hint (function pair pair symbol none))
(define-extern level-hint-surpress! (function none))
(define-extern ja-aframe-num (function int float))
(define-extern ja-abort-spooled-anim (function spool-anim art-joint-anim int int :behavior process-drawable))
(define-extern art-group-load-check (function string kheap int art-group))
(define-extern drawable-load (function drawable kheap drawable))
(define-extern art-load (function string kheap art))
(define-extern ja-play-spooled-anim (function spool-anim art-joint-anim art-joint-anim (function process-drawable symbol) int :behavior process-drawable))
(define-extern link (function pointer pointer int kheap int pointer))

;; - Symbols

(define-extern *load-state* load-state)
(define-extern *kernel-sp* pointer)

;; - Unknowns

(define-extern *art-control* external-art-control)
(define-extern *preload-spool-anims* symbol)
(define-extern *stack-top* pointer)


;; ----------------------
;; File - task-control-h
;; Source Path - engine/game/task/task-control-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(defenum task-flags
  :type uint8
  :bitfield #t
  (closed 0)
  (has-entity 1)
  (closed-by-default 2)
  )

(declare-type task-control basic)
(deftype task-cstage (structure)
  ((game-task game-task   :offset-assert 0)
   (status    task-status  :offset-assert 8)
   (flags     task-flags  :offset-assert 16)
   (condition (function task-control symbol) :offset-assert 20)
   )
  :method-count-assert 16
  :size-assert         #x18
  :flag-assert         #x1000000018
  (:methods
    (get-game-task (_type_) game-task 9)
    (get-task-status (_type_) task-status 10)
    (task-available? (_type_ task-control) symbol 11)
    (closed? (_type_) symbol 12)
    (closed-by-default? (_type_) symbol 13)
    (close-task! (_type_) int 14)
    (open-task! (_type_) int 15)
    )
  )

(deftype task-control (basic)
  ((current-stage int16  :offset-assert 4)
   (stage         (array task-cstage)  :offset-assert 8)
   )
  :method-count-assert 19
  :size-assert         #xc
  :flag-assert         #x130000000c
  (:methods
    (current-task (_type_) int 9)
    (current-status (_type_) int 10)
    (close-current! (_type_) none 11)
    (close-status! (_type_ task-status) int 12)
    (first-any (_type_ symbol) int 13)
    (reset! (_type_ symbol symbol) int 14)
    (closed? (_type_ game-task task-status) symbol 15)
    (get-reminder (_type_ int) int 16)
    (save-reminder (_type_ int int) int 17) ;; TODO - i believe this is none
    (exists? (_type_ game-task task-status) symbol 18)
    )
  )

(deftype ambient-control (structure)
  ((last-ambient-time uint64  :offset-assert 0)
   (last-ambient      basic   :offset-assert 8)
   (last-ambient-id   uint32  :offset-assert 12)
   )
  :method-count-assert 12
  :size-assert         #x10
  :flag-assert         #xc00000010
  (:methods
    (dummy-9 () none 9)
    (dummy-10 () none 10)
    (dummy-11 () none 11)
    )
  )

(deftype process-taskable (process-drawable)
  ((tasks                basic                   :offset-assert 176)
   (query                gui-query       :inline :offset-assert 180)
   (old-target-pos       transformq      :inline :offset-assert 208)
   (cell-for-task        uint8                   :offset-assert 256)
   (cell-x               uint64                  :offset-assert 264)
   (cam-joint-index      int32                   :offset-assert 272)
   (skippable            basic                   :offset-assert 276)
   (blend-on-exit        basic                   :offset-assert 280)
   (camera               uint64                  :offset-assert 288)
   (will-talk            basic                   :offset-assert 296)
   (talk-message         uint32                  :offset-assert 300)
   (last-talk            uint64                  :offset-assert 304)
   (bounce-away          basic                   :offset-assert 312)
   (ambient              ambient-control :inline :offset-assert 320)
   (center-joint-index   int32                   :offset-assert 336)
   (draw-bounds-y-offset float                   :offset-assert 340)
   (neck-joint-index     int32                   :offset-assert 344)
   (fuel-cell-anim       basic                   :offset-assert 348)
   (sound-flava          uint8                   :offset-assert 352)
   (have-flava           basic                   :offset-assert 356)
   (music                basic                   :offset-assert 360)
   (have-music           basic                   :offset-assert 364)
   (been-kicked          basic                   :offset-assert 368)
   (cur-trans-hook       basic                   :offset-assert 372)
   (shadow-backup        basic                   :offset-assert 376)
   )
  :heap-base #x110
  :method-count-assert 53
  :size-assert         #x17c
  :flag-assert         #x350110017c
  ;; inherited inspect of process-drawable
  (:methods
    (dummy-20 () none 20)
    (dummy-21 () none 21)
    (dummy-22 () none 22)
    (dummy-23 () none 23)
    (dummy-24 () none 24)
    (dummy-25 () none 25)
    (dummy-26 () none 26)
    (dummy-27 () none 27)
    (dummy-28 () none 28)
    (dummy-29 () none 29)
    (dummy-30 () none 30)
    (dummy-31 () none 31)
    (dummy-32 () none 32)
    (dummy-33 () none 33)
    (dummy-34 () none 34)
    (dummy-35 () none 35)
    (dummy-36 () none 36)
    (dummy-37 () none 37)
    (dummy-38 () none 38)
    (dummy-39 () none 39)
    (dummy-40 () none 40)
    (dummy-41 () none 41)
    (dummy-42 () none 42)
    (dummy-43 () none 43)
    (dummy-44 () none 44)
    (dummy-45 () none 45)
    (dummy-46 () none 46)
    (dummy-47 () none 47)
    (dummy-48 () none 48)
    (dummy-49 () none 49)
    (dummy-50 () none 50)
    (dummy-51 () none 51)
    (dummy-52 () none 52)
    )
  )


;; ----------------------
;; File - game-info
;; Source Path - engine/game/game-info.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern get-task-control (function game-task task-control))
(define-extern level-hint-spawn (function game-text-id string symbol process-tree int none))
(define-extern get-game-count (function int count-info))
(define-extern activate-orb-all (function int int))
(define-extern close-specific-task! (function game-task task-status int))
(define-extern reset-all-hint-controls (function none))
(define-extern reset-actors (function symbol none))
(define-extern set-blackout-frames (function int int))
(define-extern set-master-mode (function symbol none))
(define-extern stop (function symbol int))
(define-extern start (function symbol continue-point target))
(define-extern position-in-front-of-camera! (function vector float float vector))
(define-extern game-task->string (function game-task string))
(define-extern trsq->continue-point (function trsq none))

;; - Symbols

(define-extern *kernel-boot-message* symbol)
(define-extern *level-load-list* pair)
(define-extern *spawn-actors* symbol)
(define-extern *default-continue* continue-point)


;; ----------------------
;; File - game-save
;; Source Path - engine/game/game-save.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(defenum game-save-elt
  :type uint16
  (name 100)
  (base-time 101)
  (real-time 102)
  (game-time 103)
  (integral-time 104)
  (continue 200)
  (life 201)
  (money 202)
  (money-total 203)
  (moeny-per-level 204)
  (buzzer-total 205)
  (fuel-cell 206)
  (death-movie-tick 207)
  (task-list 300)
  (perm-list 301)
  (hint-list 303)
  (text-list 304)
  (level-open-list 305)
  (total-deaths 400)
  (continue-deaths 401)
  (fuel-cell-deaths 402)
  (game-start-time 403)
  (continue-timke 404) ;; typo in game
  (death-time 405)
  (hit-time 406)
  (fuel-cell-pickup-time 407)
  (continue-time 408)
  (fuel-cell-time 409)
  (enter-level-time 410)
  (deaths-per-level 411)
  (death-pos 412)
  (auto-save-count 413)
  (in-level-time 414)
  (sfx-volume 500)
  (music-volume 501)
  (dialog-volume 502)
  (language 503)
  (screenx 504)
  (screeny 505)
  (vibration 506)
  (play-hints 507)
  (video-mode 508)
  (aspect-ratio 509)
  )

(deftype game-save-tag (structure)
  ((user-object object 2 :offset-assert 0)
   (user-uint64 uint64    :offset 0)
   (user-float0 float     :offset 0)
   (user-float  float 2 :offset 0)
   (user-int32  int32 2 :offset 0)
   (user-uint32 uint32 2 :offset 0)
   (user-int16  int16 4 :offset 0)
   (user-uint16 uint16 4 :offset 0)
   (user-int8   int8 8 :offset 0)
   (user-int80  int8      :offset 0)
   (user-int81  int8      :offset 1)
   (user-uint8  uint8 8 :offset 0)
   (elt-count   int32     :offset-assert 8)
   (elt-size    uint16    :offset-assert 12)
   (elt-type    game-save-elt    :offset-assert 14)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype game-save (basic)
  ((version               int32            :offset-assert 4)
   (allocated-length      int32            :offset-assert 8)
   (length                int32            :offset-assert 12)
   (info-int32            int32 16       :offset-assert 16)
   (info-int8             int8 64       :offset 16)
   (level-index           int32            :offset 16)
   (fuel-cell-count       float            :offset 20)
   (money-count           float            :offset 24)
   (buzzer-count          float            :offset 28)
   (completion-percentage float            :offset 32)
   (minute                uint8            :offset 36)
   (hour                  uint8            :offset 37)
   (week                  uint8            :offset 38)
   (day                   uint8            :offset 39)
   (month                 uint8            :offset 40)
   (year                  uint8            :offset 41)
   (new-game              int32            :offset 44)
   (tag                   game-save-tag :inline :dynamic :offset-assert 80)
   )
  :method-count-assert 12
  :size-assert         #x50
  :flag-assert         #xc00000050
  (:methods
    (new (symbol type int) _type_ 0)
    (save-to-file (_type_ string) _type_ 9)
    (load-from-file! (_type_ string) _type_ 10)
    (debug-print (_type_ symbol) _type_ 11)
    )
  )

(deftype auto-save (process)
  ((card       int32                :offset-assert 112)
   (slot       int32                :offset-assert 116)
   (which      int32                :offset-assert 120)
   (buffer     kheap                :offset-assert 124)
   (mode       basic                :offset-assert 128)
   (result     uint32               :offset-assert 132)
   (save       basic                :offset-assert 136)
   (info       mc-slot-info :inline :offset-assert 140)
   (notify     uint64               :offset-assert 440)
   (state-time uint64               :offset-assert 448)
   (part       basic                :offset-assert 456)
   )
  :heap-base #x160
  :method-count-assert 23
  :size-assert         #x1cc
  :flag-assert         #x17016001cc
  ;; inherited inspect of process
  (:methods
    (dummy-14 () none 14)
    (dummy-15 () none 15)
    (dummy-16 () none 16)
    (dummy-17 () none 17)
    (dummy-18 () none 18)
    (dummy-19 () none 19)
    (dummy-20 () none 20)
    (dummy-21 () none 21)
    (dummy-22 () none 22)
    )
  )

;; - Functions

(define-extern auto-save-command (function symbol int int process-tree none)) ;; TODO - not confirmed
(define-extern auto-save-init-by-other function)
(define-extern progress-allowed? (function symbol))
(define-extern print-game-text (function string font-context symbol int int float)) ; TODO decomp error, this seems correct though
(define-extern get-aspect-ratio (function symbol))
(define-extern get-task-status (function game-task task-status))
(define-extern lookup-level-info (function symbol level-load-info))
(define-extern calculate-completion function)
(define-extern game-save-elt->string (function game-save-elt string))
(define-extern progress-level-index->string (function int string))
(define-extern auto-save-post function)
(define-extern auto-save-check (function none))

;; - Unknowns

(define-extern *auto-save-info* mc-slot-info) ;; unknown type
;;(define-extern scf-get-time object) ;; unknown type
;; ;; unknown type


;; ----------------------
;; File - settings
;; Source Path - engine/game/settings.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern set-aspect-ratio (function symbol none))
(define-extern set-video-mode (function symbol none))

;; - Unknowns

(define-extern scf-get-volume (function int))
(define-extern scf-get-language (function uint))
(define-extern scf-get-aspect (function uint))
(define-extern *boot-video-mode* int) ;; TODO - a guess


;; ----------------------
;; File - mood-tables
;; Source Path - engine/ambient/mood-tables.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern make-light-kit (function light-group float float float float float))
(define-extern make-village1-light-kit (function mood-context none))
(define-extern make-misty-light-kit (function mood-context none))
(define-extern make-village2-light-kit (function mood-context none))
(define-extern make-rolling-light-kit (function mood-context none))
(define-extern make-village3-light-kit (function mood-context none))
(define-extern update-mood-shadow-direction (function mood-lights none))
(define-extern update-mood-erase-color (function mood-fog mood-lights none))
(define-extern update-mood-erase-color2 (function mood-fog mood-lights mood-lights none))

;; - Symbols

(define-extern *default-interp-table* sky-color-day)
(define-extern *village1-palette-interp-table* sky-color-day)
(define-extern *misty-palette-interp-table* sky-color-day)
(define-extern *firecanyon-palette-interp-table* sky-color-day)
(define-extern *rolling-palette-interp-table* sky-color-day)
(define-extern *village2-sky-texture-table* sky-color-day)
(define-extern *finalboss-interp-table* sky-color-day)
(define-extern *village1-mood-fog-table* mood-fog-table)
(define-extern *village1-mood-lights-table* mood-lights-table)
(define-extern *village1-mood-sun-table* mood-sun-table)
(define-extern *training-mood-fog-table* mood-fog-table)
(define-extern *snow-mood-fog-table* mood-fog-table)
(define-extern *snow-mood-lights-table* mood-lights-table)
(define-extern *snow-mood-sun-table* mood-sun-table)
(define-extern *jungleb-mood-fog-table* mood-fog-table)
(define-extern *jungleb-mood-lights-table* mood-lights-table)
(define-extern *jungleb-mood-sun-table* mood-sun-table)
(define-extern *maincave-mood-fog-table* mood-fog-table)
(define-extern *maincave-mood-lights-table* mood-lights-table)
(define-extern *maincave-mood-sun-table* mood-sun-table)
(define-extern *robocave-mood-fog-table* mood-fog-table)
(define-extern *darkcave-mood-fog-table* mood-fog-table)
(define-extern *darkcave-mood-lights-table* mood-lights-table)
(define-extern *darkcave-mood-sun-table* mood-sun-table)
(define-extern *misty-mood-fog-table* mood-fog-table)
(define-extern *misty-mood-lights-table* mood-lights-table)
(define-extern *misty-mood-sun-table* mood-sun-table)
(define-extern *village2-mood-fog-table* mood-fog-table)
(define-extern *village2-mood-lights-table* mood-lights-table)
(define-extern *village2-mood-sun-table* mood-sun-table)
(define-extern *swamp-mood-fog-table* mood-fog-table)
(define-extern *swamp-mood-lights-table* mood-lights-table)
(define-extern *swamp-mood-sun-table* mood-sun-table)
(define-extern *sunken-mood-fog-table* mood-fog-table)
(define-extern *sunken-mood-lights-table* mood-lights-table)
(define-extern *sunken-mood-sun-table* mood-sun-table)
(define-extern *rolling-mood-fog-table* mood-fog-table)
(define-extern *rolling-mood-lights-table* mood-lights-table)
(define-extern *rolling-mood-sun-table* mood-sun-table)
(define-extern *firecanyon-mood-fog-table* mood-fog-table)
(define-extern *firecanyon-mood-lights-table* mood-lights-table)
(define-extern *firecanyon-mood-sun-table* mood-sun-table)
(define-extern *ogre-mood-fog-table* mood-fog-table)
(define-extern *ogre-mood-lights-table* mood-lights-table)
(define-extern *ogre2-mood-lights-table* mood-lights-table)
(define-extern *ogre3-mood-fog-table* mood-fog-table)
(define-extern *ogre3-mood-lights-table* mood-lights-table)
(define-extern *village3-mood-fog-table* mood-fog-table)
(define-extern *village3-mood-lights-table* mood-lights-table)
(define-extern *lavatube-mood-fog-table* mood-fog-table)
(define-extern *lavatube-mood-lights-table* mood-lights-table)
(define-extern *lavatube-mood-sun-table* mood-sun-table)
(define-extern *finalboss-mood-sun-table* mood-sun-table)
(define-extern *finalboss-mood-fog-table* mood-fog-table)
(define-extern *citadel-mood-fog-table* mood-fog-table)
(define-extern *citadel-mood-lights-table* mood-lights-table)
(define-extern *citadel-mood-sun-table* mood-sun-table)
(define-extern *default-mood* mood-context)
(define-extern *village1-mood* mood-context)
(define-extern *beach-mood* mood-context)
(define-extern *jungle-mood* mood-context)
(define-extern *jungleb-mood* mood-context)
(define-extern *misty-mood* mood-context)
(define-extern *firecanyon-mood* mood-context)
(define-extern *village2-mood* mood-context)
(define-extern *swamp-mood* mood-context)
(define-extern *sunken-mood* mood-context)
(define-extern *sunkenb-mood* mood-context)
(define-extern *rolling-mood* mood-context)
(define-extern *training-mood* mood-context)
(define-extern *maincave-mood* mood-context)
(define-extern *darkcave-mood* mood-context)
(define-extern *robocave-mood* mood-context)
(define-extern *snow-mood* mood-context)
(define-extern *ogre-mood* mood-context)
(define-extern *ogre2-mood* mood-context)
(define-extern *ogre3-mood* mood-context)
(define-extern *village3-mood* mood-context)
(define-extern *finalboss-mood* mood-context)
(define-extern *finalboss2-mood* mood-context)
(define-extern *lavatube-mood* mood-context)
(define-extern *citadel-mood* mood-context)


;; ----------------------
;; File - mood
;; Source Path - engine/ambient/mood.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype flames-state (structure)
  ((index  uint8  :offset-assert 0)
   (time   uint8  :offset-assert 1)
   (length uint8  :offset-assert 2)
   (height uint8  :offset-assert 3)
   )
  :method-count-assert 9
  :size-assert         #x4
  :flag-assert         #x900000004
  )

(deftype lightning-state (structure)
  ((val uint8  :offset-assert 0)
   )
  :pack-me
  :method-count-assert 9
  :size-assert         #x1
  :flag-assert         #x900000001
  )

(deftype light-time-state (structure)
  ((time uint8  :offset-assert 0)
   )
  :pack-me
  :method-count-assert 9
  :size-assert         #x1
  :flag-assert         #x900000001
  )

(deftype light-state (structure)
  ((fade uint8  :offset-assert 0)
   )
  :pack-me
  :method-count-assert 9
  :size-assert         #x1
  :flag-assert         #x900000001
  )

(deftype lava-state (structure)
  ((scale      float 4 :offset-assert 0)
   (time       uint8     :offset-assert 16)
   (last-index uint8     :offset-assert 17)
   )
  :pack-me
  :method-count-assert 9
  :size-assert         #x12
  :flag-assert         #x900000012
  )

(deftype misty-states (structure)
  ((flames flames-state     :inline :offset-assert 0)
   (light0 light-state      :inline :offset-assert 4)
   (light1 light-state      :inline :offset-assert 5)
   (time0  light-time-state :inline :offset-assert 6)
   (time1  light-time-state :inline :offset-assert 7)
   )
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )

(deftype swamp-village2-states (structure)
  ((flames    flames-state    :inline :offset-assert 0)
   (lightning lightning-state :inline :offset-assert 4)
   )
  :method-count-assert 9
  :size-assert         #x5
  :flag-assert         #x900000005
  )

(deftype village1-states (structure)
  ((flames flames-state :inline :offset-assert 0)
   )
  :method-count-assert 9
  :size-assert         #x4
  :flag-assert         #x900000004
  )

(deftype jungle-states (structure)
  ((light    light-state      :inline :offset-assert 0)
   (time     light-time-state :inline :offset-assert 1)
   (one-shot uint8                    :offset-assert 2)
   )
  :method-count-assert 9
  :size-assert         #x3
  :flag-assert         #x900000003
  )

(deftype sunken-states (structure)
  ((light light-state      :inline :offset-assert 0)
   (time  light-time-state :inline :offset-assert 1)
   )
  :method-count-assert 9
  :size-assert         #x2
  :flag-assert         #x900000002
  )

(deftype rolling-states (structure)
  ((light0    light-state      :inline :offset-assert 0)
   (light1    light-state      :inline :offset-assert 1)
   (light2    light-state      :inline :offset-assert 2)
   (light3    light-state      :inline :offset-assert 3)
   (time      light-time-state :inline :offset-assert 4)
   (lightning lightning-state  :inline :offset-assert 5)
   )
  :method-count-assert 9
  :size-assert         #x6
  :flag-assert         #x900000006
  )

(deftype firecanyon-states (structure)
  ((lava lava-state :inline :offset-assert 0)
   )
  :method-count-assert 9
  :size-assert         #x12
  :flag-assert         #x900000012
  )

(deftype training-states (structure)
  ((light light-state      :inline :offset-assert 0)
   (time  light-time-state :inline :offset-assert 1)
   )
  :method-count-assert 9
  :size-assert         #x2
  :flag-assert         #x900000002
  )

(deftype maincave-states (structure)
  ((flames flames-state :inline :offset-assert 0)
   )
  :method-count-assert 9
  :size-assert         #x4
  :flag-assert         #x900000004
  )

(deftype robocave-states (structure)
  ((flames flames-state :inline :offset-assert 0)
   )
  :method-count-assert 9
  :size-assert         #x4
  :flag-assert         #x900000004
  )

(deftype snow-states (structure)
  ((flames   flames-state     :inline :offset-assert 0)
   (light    light-state      :inline :offset-assert 4)
   (time     light-time-state :inline :offset-assert 5)
   (one-shot uint8                    :offset-assert 6)
   (interp   float                    :offset-assert 8)
   )
  :method-count-assert 9
  :size-assert         #xc
  :flag-assert         #x90000000c
  )

(deftype village3-states (structure)
  ((flames    flames-state :inline :offset-assert 0)
   (scale     float                :offset-assert 4)
   (lava      lava-state   :inline :offset-assert 8)
   (lava-time float                :offset-assert 28)
   (time      uint8                :offset-assert 32)
   )
  :method-count-assert 9
  :size-assert         #x21
  :flag-assert         #x900000021
  )

(deftype lavatube-states (structure)
  ((lava  lava-state       :inline :offset-assert 0)
   (light light-state      :inline :offset-assert 18)
   (time  light-time-state :inline :offset-assert 19)
   )
  :method-count-assert 9
  :size-assert         #x14
  :flag-assert         #x900000014
  )

(deftype ogre-states (structure)
  ((lava      lava-state      :inline :offset-assert 0)
   (lightning lightning-state :inline :offset-assert 18)
   (lava-time float                   :offset-assert 20)
   (lava-fade float                   :offset-assert 24)
   )
  :method-count-assert 9
  :size-assert         #x1c
  :flag-assert         #x90000001c
  )

(deftype finalboss-states (structure)
  ((start-time  uint64  :offset-assert 0)
   (secret-time uint64  :offset-assert 8)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype citadel-states (structure)
  ((flames      flames-state     :inline :offset-assert 0)
   (light       light-state      :inline :offset-assert 4)
   (time        light-time-state :inline :offset-assert 5)
   (flicker-off uint8                    :offset-assert 6)
   (flicker-on  uint8                    :offset-assert 7)
   (shield-fade float                    :offset-assert 8)
   )
  :method-count-assert 9
  :size-assert         #xc
  :flag-assert         #x90000000c
  )

;; - Functions

(define-extern clear-mood-times function)
(define-extern update-mood-quick function)
(define-extern update-mood-flames function)
(define-extern update-mood-light function)
(define-extern target-joint-pos function)
(define-extern update-mood-itimes function)
(define-extern update-mood-fog (function mood-fog mood-lights-table none))
(define-extern update-mood-sky-texture function)
(define-extern update-mood-palette function)
(define-extern update-mood-interp function)
(define-extern update-mood-lightning function)
(define-extern update-mood-lava function)
(define-extern update-light-kit function)
(define-extern set-target-light-index function)
(define-extern update-mood-caustics function)
(define-extern update-mood-jungleb-blue function)
(define-extern update-mood-prt-color function)
(define-extern update-mood-default function)
(define-extern update-mood-misty function)
(define-extern update-mood-village2 function)
(define-extern update-mood-swamp function)
(define-extern update-mood-village1 function)
(define-extern update-mood-jungle function)
(define-extern update-mood-jungleb function)
(define-extern update-mood-sunken function)
(define-extern update-mood-rolling function)
(define-extern update-mood-firecanyon function)
(define-extern update-mood-training function)
(define-extern update-mood-maincave function)
(define-extern update-mood-darkcave function)
(define-extern update-mood-robocave function)
(define-extern update-mood-snow function)
(define-extern update-mood-village3 function)
(define-extern update-mood-lavatube function)
(define-extern update-mood-ogre function)
(define-extern update-mood-finalboss function)
(define-extern update-mood-citadel function)

;; - Symbols

(define-extern *time-of-day-proc* (pointer time-of-day-proc))

;; - Unknowns

;;(define-extern *lightning-time2* object) ;; unknown type
;;(define-extern *rolling-spheres-on* object) ;; unknown type
;;(define-extern *rolling-spheres-light0* object) ;; unknown type
;;(define-extern *rolling-spheres-light1* object) ;; unknown type
;;(define-extern *rolling-spheres-light2* object) ;; unknown type
;;(define-extern *rolling-spheres-light3* object) ;; unknown type
;;(define-extern *rolling-spheres-light4* object) ;; unknown type
;;(define-extern *flash0* object) ;; unknown type
;;(define-extern *flash1* object) ;; unknown type
;;(define-extern *flash2* object) ;; unknown type
;;(define-extern *flash3* object) ;; unknown type
;;(define-extern *flash4* object) ;; unknown type
;;(define-extern *flash5* object) ;; unknown type
;;(define-extern *flash6* object) ;; unknown type
;;(define-extern *flash7* object) ;; unknown type
;;(define-extern *lightning-index* object) ;; unknown type
;;(define-extern *lightning-time* object) ;; unknown type
;;(define-extern *lightning-frame-done* object) ;; unknown type
;;(define-extern *lightning-realtime-done* object) ;; unknown type
;;(define-extern *thunder-id0* object) ;; unknown type
;;(define-extern *thunder-id1* object) ;; unknown type
;;(define-extern *thunder-id2* object) ;; unknown type
;;(define-extern *thunder-id* object) ;; unknown type
;;(define-extern *thunder-count* object) ;; unknown type
;;(define-extern *lava-time* object) ;; unknown type


;; ----------------------
;; File - weather-part
;; Source Path - engine/ambient/weather-part.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern matrix-local->world (function symbol matrix))
(define-extern update-snow function)
(define-extern check-drop-level-rain function)
(define-extern update-rain function)
(define-extern cam-master-effect function)
(define-extern sparticle-track-sun function)

;; - Unknowns

;;(define-extern group-rain-screend-drop object) ;; unknown type


;; ----------------------
;; File - time-of-day
;; Source Path - engine/gfx/time-of-day.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern make-sky-textures function)
(define-extern init-time-of-day function)
(define-extern update-sky-tng-data function)
(define-extern time-of-day-update function)
(define-extern start-time-of-day (function int))
(define-extern time-of-day-setup (function symbol int none)) ;; not confirmed
(define-extern set-time-of-day function)
(define-extern init-time-of-day-context (function time-of-day-context none))
(define-extern update-time-of-day (function time-of-day-context none))

;; - Unknowns

;;(define-extern sky-base-polygons object) ;; unknown type
;;(define-extern time-of-day-tick object) ;; unknown type
;;(define-extern time-of-day-effect object) ;; unknown type


;; ----------------------
;; File - sky-utils
;; Source Path - engine/gfx/sky/sky-utils.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern sky-set-sun-radii (function sky-parms int float float float symbol))
(define-extern sky-set-sun-colors (function sky-parms int uint uint uint uint symbol))
(define-extern sky-set-sun-colors-sun (function sky-parms int uint uint symbol))
(define-extern sky-set-sun-colors-halo (function sky-parms int uint uint symbol))
(define-extern sky-set-sun-colors-aurora (function sky-parms int uint uint symbol))
(define-extern sky-set-orbit (function sky-parms int float float float float float float symbol))


;; ----------------------
;; File - sky
;; Source Path - engine/gfx/sky/sky.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

; (deftype sky-frame-data (structure)
;   ((data              UNKNOWN 18      :offset-assert 0)
;    (world-homo-matrix matrix  :inline :offset-assert 0)
;    (hmge-scale        vector  :inline :offset-assert 64)
;    (hvdf-offset       vector  :inline :offset-assert 80)
;    (consts            vector  :inline :offset-assert 96)
;    (pfog0             float           :offset-assert 96)
;    (radius            float           :offset-assert 100)
;    (nokick            float           :offset-assert 108)
;    (strip-giftag      qword   :inline :offset-assert 112)
;    (col-adgif         qword   :inline :offset-assert 128)
;    (save              UNKNOWN 5       :offset-assert 144)
;    (sun-fan-giftag    qword   :inline :offset-assert 224)
;    (sun-strip-giftag  qword   :inline :offset-assert 240)
;    (sun-alpha         qword   :inline :offset-assert 256)
;    (sun-alpha-giftag  qword   :inline :offset-assert 272)
;    )
;   :method-count-assert 9
;   :size-assert         #x120
;   :flag-assert         #x900000120
;   )

;; - Functions

(define-extern sky-add-frame-data function)
(define-extern sky-make-sun-data function)
(define-extern sky-make-moon-data function)
(define-extern sky-make-light function)
(define-extern sky-init-upload-data function)
(define-extern sky-upload function)
(define-extern sky-draw function)

;; - Unknowns

;;(define-extern sky-vu1-block object) ;; unknown type


;; ----------------------
;; File - sky-tng
;; Source Path - engine/gfx/sky/sky-tng.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern copy-sky-texture function)
(define-extern copy-cloud-texture function)
(define-extern init-sky-regs function)
(define-extern render-sky-tri function)
(define-extern close-sky-buffer function)
(define-extern set-tex-offset function)
(define-extern render-sky-quad function)
(define-extern sky-tng-setup-cloud-layer function)
(define-extern draw-large-polygon function)
(define-extern init-sky-tng-data function)
(define-extern clip-polygon-against-positive-hyperplane function)
(define-extern clip-polygon-against-negative-hyperplane function)
(define-extern sky-duplicate-polys function)
(define-extern sky-tng-setup-clouds function)
(define-extern render-sky-tng (function time-of-day-context none))

;; - Unknowns

;;(define-extern *sky-work* object) ;; unknown type
;;(define-extern *sky-tng-data* object) ;; unknown type
;;(define-extern sky-roof-polygons object) ;; unknown type
;;(define-extern sky-cloud-polygons object) ;; unknown type
;;(define-extern sky-cloud-polygon-indices object) ;; unknown type


;; ----------------------
;; File - load-boundary-h
;; Source Path - engine/level/load-boundary-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype lbvtx (structure)
  ((x    float           :offset-assert 0)
   (y    float           :offset-assert 4)
   (z    float           :offset-assert 8)
   (v0   uint8           :offset-assert 12)
   (v1   uint8           :offset-assert 13)
   (v2   uint8           :offset-assert 14)
   (ix   uint8           :offset-assert 15)
   (quad uint128         :offset 0)
   (v    vector  :inline :offset 0)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

(deftype load-boundary-crossing-command (structure)
  ((cmd        uint8     :offset-assert 0)
   (bparm      uint8 3 :offset-assert 1)
   ;(parm       UNKNOWN 2 :offset-assert 4)
   (lev0       basic     :offset-assert 4)
   (lev1       basic     :offset-assert 8)
   (displev    basic     :offset 4)
   (dispcmd    basic     :offset 8)
   (nick       basic     :offset 4)
   (forcelev   basic     :offset 4)
   (forceonoff basic     :offset 8)
   (checkname  basic     :offset 4)
   )
  :pack-me
  :method-count-assert 9
  :size-assert         #xc
  :flag-assert         #x90000000c
  )

(deftype load-boundary (basic)
  ((num-points uint16                                 :offset-assert 4)
   (flags      uint8                                  :offset-assert 6)
   (top-plane  float                                  :offset-assert 8)
   (bot-plane  float                                  :offset-assert 12)
   (tri-cnt    int32                                  :offset-assert 16)
   (next       basic                                  :offset-assert 20)
   (cmd-fwd    load-boundary-crossing-command :inline :offset-assert 24)
   (cmd-bwd    load-boundary-crossing-command :inline :offset-assert 36)
   (rejector   vector                         :inline :offset-assert 48)
   (data       uint128                        1       :offset-assert 64)
   )
  :method-count-assert 9
  :size-assert         #x50
  :flag-assert         #x900000050
  )

;; - Unknowns

;;(define-extern *load-boundary-list* object) ;; unknown type
;;(define-extern *load-boundary-target* object) ;; unknown type


;; ----------------------
;; File - load-boundary
;; Source Path - engine/level/load-boundary.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype lb-editor-parms (basic)
  ((boundary basic  :offset-assert 4)
   (vertex   int32  :offset-assert 8)
   (x-origin float  :offset-assert 12)
   (z-origin float  :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x14
  :flag-assert         #x900000014
  )

;; - Functions

(define-extern check-closed-boundary function)
(define-extern check-open-boundary function)
(define-extern load-state-want-vis (function symbol int))
(define-extern load-state-want-levels (function symbol symbol int))
(define-extern load-state-want-display-level (function symbol symbol int))
(define-extern load-state-want-force-vis (function symbol symbol int))
(define-extern command-get-param (function object symbol symbol))
(define-extern entity-birth-no-kill (function entity none))
(define-extern part-tracker-init function)
(define-extern command-list-get-process (function object process))
(define-extern command-get-quoted-param (function object symbol symbol))
(define-extern command-get-int (function object int int))
(define-extern ambient-hint-spawn (function symbol symbol process-tree none))
(define-extern command-get-float (function object float float))
(define-extern process-by-ename function)
(define-extern point-in-polygon function)
(define-extern try-corner function)
(define-extern split-monotone-polygon function)
(define-extern fix-boundary-normals function)
(define-extern triangulate-boundary function)
(define-extern find-bounding-circle function)
(define-extern render-boundary function)
(define-extern check-boundary function)
(define-extern edit-load-boundaries function)
(define-extern copy-load-command! function)
(define-extern copy-load-boundary! function)
(define-extern lb-add-plane function)
(define-extern lb-add function)
(define-extern save-boundary-cmd function)
(define-extern replace-load-boundary function)
(define-extern format-boundary-cmd function)
(define-extern boundary-set-color function)
(define-extern add-boundary-shader function)
(define-extern draw-boundary-cap function)
(define-extern draw-boundary-side function)
(define-extern init-boundary-regs function)
(define-extern render-boundary-tri function)
(define-extern render-boundary-quad function)
(define-extern draw-boundary-polygon function)
(define-extern lb-del function)
(define-extern lb-add-vtx-before function)
(define-extern lb-add-vtx-after function)
(define-extern lb-del-vtx function)
(define-extern load-boundary-from-template function)
(define-extern ---lb-save function)
(define-extern lb-add-load function)
(define-extern lb-add-load-plane function)
(define-extern lb-flip function)
(define-extern lb-set-camera function)
(define-extern lb-set-player function)
(define-extern lb-copy function)
(define-extern render-boundaries (function none))
(define-extern command-get-time function)

;; - Unknowns

(define-extern *backup-load-state* load-state)
(define-extern *display-load-commands* symbol)
(define-extern *triangulation-buffer* pointer)
(define-extern *lb-editor-parms* lb-editor-parms)
(define-extern *boundary-polygon* (inline-array lbvtx))


;; ----------------------
;; File - load-boundary-data
;; Source Path - engine/level/load-boundary-data.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Unknowns

;;(define-extern *static-load-boundary-list* object) ;; unknown type


;; ----------------------
;; File - level-info
;; Source Path - engine/level/level-info.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Symbols

(define-extern training level-load-info)
(define-extern village1 level-load-info)
(define-extern beach level-load-info)
(define-extern jungle level-load-info)
(define-extern jungleb level-load-info)
(define-extern misty level-load-info)
(define-extern firecanyon level-load-info)
(define-extern village2 level-load-info)
(define-extern sunken level-load-info)
(define-extern sunkenb level-load-info)
(define-extern swamp level-load-info)
(define-extern rolling level-load-info)
(define-extern ogre level-load-info)
(define-extern village3 level-load-info)
(define-extern snow level-load-info)
(define-extern maincave level-load-info)
(define-extern darkcave level-load-info)
(define-extern robocave level-load-info)
(define-extern lavatube level-load-info)
(define-extern citadel level-load-info)
(define-extern finalboss level-load-info)
(define-extern intro level-load-info)
(define-extern demo level-load-info)
(define-extern title level-load-info)
(define-extern halfpipe level-load-info)
(define-extern default-level level-load-info)


;; ----------------------
;; File - level
;; Source Path - engine/level/level.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern update-sound-banks (function int))
(define-extern load-vis-info (function symbol symbol int))
(define-extern on (function symbol process))
(define-extern level-update-after-load (function level login-state level))
(define-extern add-bsp-drawable (function bsp-header level symbol display-frame none))
(define-extern remap-level-name (function level-load-info symbol))
(define-extern bg (function symbol int))
(define-extern play (function symbol symbol int))
(define-extern show-level (function symbol int))

;; - Symbols

(define-extern *print-login* symbol)

;; - Unknowns

(define-extern unload (function string none))
(define-extern *login-state* login-state)
(define-extern link-resume (function int))


;; ----------------------
;; File - text
;; Source Path - engine/ui/text.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern set-font-color-alpha function)
(define-extern load-game-text-info (function string symbol kheap int))
(define-extern load-level-text-files (function int none))
(define-extern draw-debug-text-box function)
(define-extern print-game-text-scaled function)
(define-extern disable-level-text-file-loading function)
(define-extern enable-level-text-file-loading function)
(define-extern link (function pointer pointer int kheap int pointer))

;; - Unknowns

(define-extern *level-text-file-load-flag* symbol)
(define-extern *game-text-line* string)
(define-extern *game-text-word* string)
(define-extern text-is-loading symbol)


;; ----------------------
;; File - collide-probe
;; Source Path - engine/collide/collide-probe.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype collide-probe-stack-elem (structure)
  ((child uint32  :offset-assert 0)
   (count uint32  :offset-assert 4)
   )
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )

(deftype collide-probe-stack (structure)
  ((data collide-probe-stack-elem 1024 :inline :offset-assert 0)
   )
  :method-count-assert 9
  :size-assert         #x4000
  :flag-assert         #x900004000
  )

;; - Functions

(define-extern misty-ambush-height function)
(define-extern distc function)
(define-extern interpolate function)
(define-extern collide-upload-vu0 function)
(define-extern collide-probe-instance-tie function)
(define-extern collide-probe-node function)
(define-extern indent-to function)
(define-extern probe-traverse-inline-array-node function)
(define-extern probe-traverse-draw-node function)
(define-extern creates-new-method? function)
(define-extern overrides-parent-method? function)
(define-extern describe-methods function)
(define-extern probe-traverse-collide-fragment function)
(define-extern print-out function)
(define-extern collide-probe-instance-tie-collide-frags function)
(define-extern collide-probe-collide-fragment-tree-make-list function)
(define-extern collide-probe-instance-tie-tree-make-list function)
(define-extern collide-probe-make-list function)
(define-extern misty-ambush-height-probe function)
(define-extern pke-collide-test function)

;; - Unknowns

;;(define-extern collide-vu0-block object) ;; unknown type
;;(define-extern *collide-probe-stack* object) ;; unknown type


;; ----------------------
;; File - collide-frag
;; Source Path - engine/collide/collide-frag.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern sphere-cull (function vector symbol))


;; ----------------------
;; File - collide-mesh
;; Source Path - engine/collide/collide-mesh.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype sopt-work (structure)
  ((intersect     vector         :inline :offset-assert 0)
   (sphere-bbox4w bounding-box4w :inline :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x30
  :flag-assert         #x900000030
  )

(deftype spat-work (structure)
  ((intersect     vector         :inline :offset-assert 0)
   (sphere-bbox4w bounding-box4w :inline :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x30
  :flag-assert         #x900000030
  )

(deftype oot-work (structure)
  ((intersect     vector         :inline :offset-assert 0)
   (sphere-bbox4w bounding-box4w :inline :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x30
  :flag-assert         #x900000030
  )


;; ----------------------
;; File - collide-touch
;; Source Path - engine/collide/collide-touch.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

; (deftype add-prims-touching-work (structure)
;   ((tri1 collide-tri-result  :offset-assert 0)
;    (tri2 collide-tri-result  :offset-assert 4)
;    )
;   :method-count-assert 9
;   :size-assert         #x8
;   :flag-assert         #x900000008
;   )


;; ----------------------
;; File - collide-edge-grab
;; Source Path - engine/collide/collide-edge-grab.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

; (deftype pbhp-stack-vars (structure)
;   ((edge        collide-edge-edge         :offset-assert 0)
;    (allocated   basic                     :offset-assert 4)
;    (neg-hold-pt vector            :inline :offset-assert 16)
;    (split-vec   vector            :inline :offset-assert 32)
;    )
;   :method-count-assert 9
;   :size-assert         #x30
;   :flag-assert         #x900000030
;   )

;; - Unknowns

;;(define-extern *rotate-surface* object) ;; unknown type
;;(define-extern *no-walk-surface* object) ;; unknown type


;; ----------------------
;; File - collide-shape
;; Source Path - engine/collide/collide-shape.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern target-attack-up function)
(define-extern find-ground-point function)
(define-extern default-collision-reaction function)
(define-extern simple-collision-reaction function)
(define-extern collide-shape-draw-debug-marks (function none))
(define-extern debug-report-col-stats function)

;; - Unknowns

;;(define-extern *col-timer-enable* object) ;; unknown type
;;(define-extern *frame-timer* object) ;; unknown type
;;(define-extern *col-timer* object) ;; unknown type
;;(define-extern *race-track-surface* object) ;; unknown type


;; ----------------------
;; File - collide-shape-rider
;; Source Path - engine/collide/collide-shape-rider.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Nothing Defined in This File!


;; ----------------------
;; File - collide
;; Source Path - engine/collide/collide.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Unknowns

(define-extern *collide-vif0-init* (array uint32)) ;; unknown type


;; ----------------------
;; File - collide-planes
;; Source Path - engine/collide/collide-planes.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern camera-bounding-box-draw function)
(define-extern collide-planes-test0 function)
(define-extern collide-planes-test1 function)
(define-extern camera-cross function)
(define-extern collide-planes-intersect function)
(define-extern collide-planes function)


;; ----------------------
;; File - merc-death
;; Source Path - engine/gfx/merc/merc-death.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype death-info (basic)
  ((vertex-skip uint16  :offset-assert 4)
   (timer       uint8   :offset-assert 6)
   (overlap     uint8   :offset-assert 7)
   (effect      uint32  :offset-assert 8)
   (sound       basic   :offset-assert 12)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

;; - Functions

(define-extern birth-func-death-sparks function)
(define-extern merc-death-spawn function)

;; - Unknowns

;;(define-extern *merc-death-globals* object) ;; unknown type
;;(define-extern death-beach-puppy object) ;; unknown type
;;(define-extern death-jungle-snake object) ;; unknown type
;;(define-extern death-default object) ;; unknown type
;;(define-extern death-warp-in object) ;; unknown type
;;(define-extern death-warp-out object) ;; unknown type


;; ----------------------
;; File - water-h
;; Source Path - engine/gfx/water/water-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype water-control (basic)
  ((flags             uint32                :offset-assert 4)
   (process           process               :offset-assert 8)
   (joint-index       int32                 :offset-assert 12)
   (top-y-offset      float                 :offset-assert 16)
   (ripple-size       meters                :offset-assert 20)
   (enter-water-time  uint64                :offset-assert 24)
   (wade-time         uint64                :offset-assert 32)
   (on-water-time     uint64                :offset-assert 40)
   (enter-swim-time   uint64                :offset-assert 48)
   (swim-time         uint64                :offset-assert 56)
   (base-height       meters                :offset-assert 64)
   (wade-height       meters                :offset-assert 68)
   (swim-height       meters                :offset-assert 72)
   (surface-height    meters                :offset-assert 76)
   (bottom-height     meters                :offset-assert 80)
   (height            meters                :offset-assert 84)
   (height-offset     float       4       :offset-assert 88)
   (real-ocean-offset meters                :offset 88)
   (ocean-offset      meters                :offset 92)
   (bob-offset        meters                :offset 96)
   (align-offset      meters                :offset 100)
   (swim-depth        meters                :offset-assert 104)
   (bob               smush-control :inline :offset-assert 112)
   (volume            uint64                :offset-assert 144) ;; handle?
   (bottom            vector       2       :inline :offset-assert 160)
   (top               vector       2       :inline :offset-assert 192)
   (enter-water-pos   vector        :inline :offset-assert 224)
   (drip-old-pos      vector        :inline :offset-assert 240)
   (drip-joint-index  int32                 :offset-assert 256)
   (drip-wetness      float                 :offset-assert 260)
   (drip-time         uint64                :offset-assert 264)
   (drip-speed        float                 :offset-assert 272)
   (drip-height       meters                :offset-assert 276)
   (drip-mult         float                 :offset-assert 280)
   )
  :method-count-assert 17
  :size-assert         #x11c
  :flag-assert         #x110000011c
  (:methods
    (new (symbol type process int float float float) _type_ 0)
    (dummy-9 () none 9)
    (dummy-10 () none 10)
    (dummy-11 () none 11)
    (distance-from-surface (_type_) float 12)
    (dummy-13 () none 13)
    (display-water-marks? (_type_) symbol 14)
    (dummy-15 () none 15)
    (dummy-16 () none 16)
    )
  )

(deftype water-vol (process-drawable)
  ((water-height  meters  :offset-assert 176)
   (wade-height   meters  :offset-assert 180)
   (swim-height   meters  :offset-assert 184)
   (bottom-height meters  :offset-assert 188)
   (attack-event  basic   :offset-assert 192)
   (target        uint64  :offset-assert 200)
   (flags         uint32  :offset-assert 208)
   )
  :heap-base #x70
  :method-count-assert 30
  :size-assert         #xd4
  :flag-assert         #x1e007000d4
  ;; inherited inspect of process-drawable
  (:methods
    (dummy-20 () none 20)
    (dummy-21 () none 21)
    (dummy-22 () none 22)
    (dummy-23 () none 23)
    (dummy-24 () none 24)
    (dummy-25 () none 25)
    (dummy-26 () none 26)
    (dummy-27 () none 27)
    (dummy-28 () none 28)
    (dummy-29 () none 29)
    )
  )


;; ----------------------
;; File - camera
;; Source Path - engine/camera/camera.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern vector-into-frustum-nosmooth! function)
(define-extern slave-matrix-blend-2 function)
(define-extern mat-remove-z-rot function)
(define-extern parameter-ease-sin-clamp function)
(define-extern cam-slave-get-intro-step function)
(define-extern cam-slave-get-float function)
(define-extern cam-slave-init-vars function)
(define-extern cam-calc-follow! function)
(define-extern slave-set-rotation! function)
(define-extern camera-slave-debug function)
(define-extern camera-line-rel-len function)
(define-extern cam-slave-get-flags function)
(define-extern cam-slave-get-vector-with-offset function)
(define-extern cam-slave-get-fov function)
(define-extern cam-slave-get-interp-time function)
(define-extern cam-slave-get-rot function)
(define-extern cam-state-from-entity function)
(define-extern parameter-ease-none function)
(define-extern parameter-ease-clamp function)
(define-extern parameter-ease-lerp-clamp function)
(define-extern parameter-ease-sqrt-clamp function)
(define-extern fourth-power function)
(define-extern third-power function)
(define-extern parameter-ease-sqr-clamp function)
(define-extern cam-slave-go function)
(define-extern cam-slave-init function)
(define-extern cam-standard-event-handler function)
(define-extern cam-curve-pos function)
(define-extern cam-curve-setup function)
(define-extern v-slrp2! function)
(define-extern v-slrp3! function)

;; - Unknowns

;;(define-extern *cam-res-string* object) ;; unknown type
;;(define-extern cam-circular object) ;; unknown type
;;(define-extern cam-standoff-read-entity object) ;; unknown type
;;(define-extern cam-spline object) ;; unknown type
;;(define-extern *camera-base-mode* object) ;; unknown type
;;(define-extern cam-fixed-read-entity object) ;; unknown type


;; ----------------------
;; File - cam-interface
;; Source Path - engine/camera/cam-interface.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern matrix-world->local (function matrix))
(define-extern camera-angle (function float))
(define-extern camera-teleport-to-entity (function entity-actor none :behavior process))

;; - Symbols

(define-extern *camera-dummy-vector* vector)


;; ----------------------
;; File - cam-master
;; Source Path - engine/camera/cam-master.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype camera-master-bank (basic)
  ((onscreen-head-height            meters  :offset-assert 4)
   (onscreen-foot-height            meters  :offset-assert 8)
   (target-height                   meters  :offset-assert 12)
   (up-move-to-pitch-ratio-in-air   float   :offset-assert 16)
   (down-move-to-pitch-ratio-in-air float   :offset-assert 20)
   (up-move-to-pitch-on-ground      float   :offset-assert 24)
   (down-move-to-pitch-on-ground    float   :offset-assert 28)
   (pitch-off-blend                 float   :offset-assert 32)
   )
  :method-count-assert 9
  :size-assert         #x24
  :flag-assert         #x900000024
  )

(deftype list-keeper (process)
  ((dummy float  :offset-assert 112)
   )
  :heap-base #x10
  :method-count-assert 14
  :size-assert         #x74
  :flag-assert         #xe00100074
  ;; inherited inspect of process
  )

;; - Functions

(define-extern list-keeper-init function)
(define-extern master-track-target function)
(define-extern master-check-regions function)
(define-extern camera-master-debug function)
(define-extern master-unset-region function)
(define-extern reset-target-tracking function)
(define-extern reset-drawable-tracking function)
(define-extern master-switch-to-entity function)
(define-extern reset-drawable-follow function)
(define-extern reset-follow function)
(define-extern in-cam-entity-volume? function)
(define-extern master-base-region function)
(define-extern setup-slave-for-hopefull function)
(define-extern master-is-hopeful-better? function)
(define-extern target-cam-pos function)
(define-extern cam-master-init function)

;; - Symbols

(define-extern cam-free-floating state)

;; - Unknowns

;;(define-extern cam-master-active object) ;; unknown type
;;(define-extern list-keeper-active object) ;; unknown type
;;(define-extern cam-fixed object) ;; unknown type
;;(define-extern cam-decel object) ;; unknown type
;;(define-extern cam-eye object) ;; unknown type
;;(define-extern *CAMERA_MASTER-bank* object) ;; unknown type


;; ----------------------
;; File - cam-states
;; Source Path - engine/camera/cam-states.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

; (deftype cam-eye-bank (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; bad get label
;   )

; (deftype cam-billy-bank (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; bad get label
;   )

; (deftype cam-string-bank (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; bad get label
;   )

; (deftype los-dist (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; bad get label
;   )

; (deftype collide-los-dist-info (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; bad get label
;   )

; (deftype collide-los-result (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; bad get label
;   )

; (deftype cam-stick-bank (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; bad get label
;   )

; (deftype cam-bike-bank (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; bad get label
;   )

;; - Functions

(define-extern cam-bike-code function)
(define-extern cam-calc-bike-follow! function)
(define-extern cam-stick-code function)
(define-extern set-string-parms function)
(define-extern cam-string-code function)
(define-extern cam-string-find-position-rel! function)
(define-extern cam-string-set-position-rel! function)
(define-extern cam-debug-reset-coll-tri function)
(define-extern cam-string-follow function)
(define-extern cam-string-line-of-sight function)
(define-extern cam-string-joystick function)
(define-extern cam-string-find-hidden function)
(define-extern cam-collision-record-save function)
(define-extern cam-string-move function)
(define-extern cam-dist-analog-input function)
(define-extern cam-los-collide function)
(define-extern dist-info-init function)
(define-extern los-cw-ccw function)
(define-extern cam-debug-add-los-tri function)
(define-extern cam-los-spline-collide function)
(define-extern cam-los-setup-lateral function)
(define-extern slave-los-state->string function)
(define-extern dist-info-print function)
(define-extern dist-info-valid? function)
(define-extern dist-info-append function)
(define-extern cam-circular-code function)
(define-extern cam-circular-position function)
(define-extern cam-circular-position-into-max-angle function)
(define-extern cam-standoff-calc-trans function)
(define-extern string-push-help function)
(define-extern cam-draw-collide-cache function)

;; - Unknowns

;;(define-extern *CAM_BIKE-bank* object) ;; unknown type
;;(define-extern *CAM_STICK-bank* object) ;; unknown type
;;(define-extern cam-string object) ;; unknown type
;;(define-extern *CAM_STRING-bank* object) ;; unknown type
;;(define-extern *CAM_BILLY-bank* object) ;; unknown type
;;(define-extern *CAM_EYE-bank* object) ;; unknown type
;;(define-extern cam-standoff object) ;; unknown type
;;(define-extern cam-pov object) ;; unknown type
;;(define-extern cam-pov180 object) ;; unknown type
;;(define-extern cam-pov-track object) ;; unknown type
;;(define-extern cam-billy object) ;; unknown type
;;(define-extern cam-endlessfall object) ;; unknown type
;;(define-extern cam-lookat object) ;; unknown type
;;(define-extern cam-stick object) ;; unknown type
;;(define-extern cam-bike object) ;; unknown type


;; ----------------------
;; File - cam-states-dbg
;; Source Path - engine/camera/cam-states-dbg.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype cam-point-watch-bank (basic)
  ((speed     float   :offset-assert 4)
   (rot-speed degrees :offset-assert 8)
   )
  :method-count-assert 9
  :size-assert         #xc
  :flag-assert         #x90000000c
  )

(deftype cam-free-bank (basic)
  ((speed     float   :offset-assert 4)
   (rot-speed degrees :offset-assert 8)
   )
  :method-count-assert 9
  :size-assert         #xc
  :flag-assert         #x90000000c
  )

(deftype camera-free-floating-move-info (structure)
  ((rv vector :inline :offset-assert 0)
   (tv vector :inline :offset-assert 16)
   (up vector :inline :offset-assert 32)
   (tm matrix :inline :offset-assert 48)
   )
  :method-count-assert 9
  :size-assert         #x70
  :flag-assert         #x900000070
  )

(deftype camera-orbit-info (structure)
  ((radius      float          :offset-assert 0)
   (rot         float          :offset-assert 4)
   (target-off  vector :inline :offset-assert 16)
   (orbit-off   vector :inline :offset-assert 32)
   (radius-lerp float          :offset-assert 48)
   )
  :method-count-assert 9
  :size-assert         #x34
  :flag-assert         #x900000034
  )

(deftype CAM_ORBIT-bank (basic)
  ((RADIUS_MAX        float  :offset-assert 4)
   (RADIUS_MIN        float  :offset-assert 8)
   (TARGET_OFF_ADJUST float  :offset-assert 12)
   (ORBIT_OFF_ADJUST  float  :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x14
  :flag-assert         #x900000014
  )

;; - Functions

(define-extern cam-free-floating-move function)
(define-extern cam-free-floating-input function)

;; - Unknowns

;;(define-extern *camera-orbit-info* object) ;; unknown type
;;(define-extern *CAM_ORBIT-bank* object) ;; unknown type
;;(define-extern *CAM_FREE-bank* object) ;; unknown type
;;(define-extern *CAM_POINT_WATCH-bank* object) ;; unknown type
;;(define-extern cam-point-watch object) ;; unknown type
;;(define-extern cam-orbit object) ;; unknown type


;; ----------------------
;; File - cam-combiner
;; Source Path - engine/camera/cam-combiner.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern cam-combiner-init function)

;; - Unknowns

;;(define-extern cam-combiner-active object) ;; unknown type


;; ----------------------
;; File - cam-update
;; Source Path - engine/camera/cam-update.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern move-camera-from-pad function)
(define-extern update-view-planes function)
(define-extern update-visible function)
(define-extern set-point function)
(define-extern plane-from-points function)
(define-extern update-camera (function none))

;; - Unknowns

;;(define-extern *start-timer* object) ;; unknown type
;;(define-extern *timer-value* object) ;; unknown type
;;(define-extern *start-pos* object) ;; unknown type
;;(define-extern *save-camera-inv-rot* object) ;; unknown type
;;(define-extern *update-leaf-when-outside-bsp* object) ;; unknown type


;; ----------------------
;; File - vol-h
;; Source Path - engine/geometry/vol-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype plane-volume (structure)
  ((volume-type  basic   :offset-assert 0)
   (point-count  int16   :offset-assert 4)
   (normal-count int16   :offset-assert 6)
   (first-point  vector  :offset-assert 8)
   (first-normal vector  :offset-assert 12)
   (num-planes   int32   :offset-assert 16)
   (plane        uint32  :offset-assert 20)
   )
  :pack-me
  :method-count-assert 12
  :size-assert         #x18
  :flag-assert         #xc00000018
  (:methods
    (dummy-9 () none 9)
    (dummy-10 () none 10)
    (dummy-11 () none 11)
    )
  )

(deftype vol-control (basic)
  ((flags         uint32     :offset-assert 4)
   (process       process-drawable      :offset-assert 8)
   (pos-vol-count int32      :offset-assert 12)
   (pos-vol       plane-volume 32 :inline :offset-assert 16)
   (neg-vol-count int32      :offset-assert 784)
   (neg-vol       plane-volume 32 :inline :offset-assert 788)
   (debug-point   basic      :offset-assert 1556)
   (debug-normal  basic      :offset-assert 1560)
   )
  :method-count-assert 12
  :size-assert         #x61c
  :flag-assert         #xc0000061c
  (:methods
    (new (symbol type process-drawable) _type_ 0)
    (dummy-9 () none 9)
    (dummy-10 () none 10)
    (TODO-RENAME-11 (_type_) symbol 11)
    )
  )


;; ----------------------
;; File - cam-layout
;; Source Path - engine/camera/cam-layout.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

; (deftype cam-layout (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; unrecognized get op: (set! v1 process) parent was UNKNOWN
;   )

; (deftype clm-list (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; bad get label
;   )

; (deftype clm (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; bad get label
;   )

; (deftype clmf-cam-flag-toggle-info (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; bad get label
;   )

; (deftype interp-test-info (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; bad get label
;   )

; (deftype cam-layout-bank (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; bad get label
;   )

; (deftype clm-basic (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; bad get label
;   )

; (deftype clm-item-action (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; bad get label
;   )

; (deftype clm-item (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; bad get label
;   )

; (deftype clm-list-item (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; bad get label
;   )

; (deftype volume-descriptor-array (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; bad get label
;   )

;; - Functions

(define-extern cam-layout-stop function)
(define-extern cam-layout-start function)
(define-extern cam-layout-init function)
(define-extern clmf-next-entity function)
(define-extern cam-layout-entity-info function)
(define-extern cam-layout-entity-volume-info function)
(define-extern cam-layout-do-menu function)
(define-extern cam-layout-print function)
(define-extern cam-layout-function-call function)
(define-extern cam-layout-do-action function)
(define-extern clmf-save-single function)
(define-extern cam-layout-save-cam-rot function)
(define-extern cam-layout-save-cam-trans function)
(define-extern cam-layout-save-pivot function)
(define-extern cam-layout-save-align function)
(define-extern cam-layout-save-interesting function)
(define-extern cam-layout-save-fov function)
(define-extern cam-layout-save-focalpull function)
(define-extern cam-layout-save-flags function)
(define-extern cam-layout-save-introsplinetime function)
(define-extern cam-layout-save-introsplineexitval function)
(define-extern cam-layout-save-interptime function)
(define-extern cam-layout-save-splineoffset function)
(define-extern cam-layout-save-spline-follow-dist-offset function)
(define-extern cam-layout-save-campointsoffset function)
(define-extern cam-layout-save-tiltAdjust function)
(define-extern cam-layout-save-stringMinLength function)
(define-extern cam-layout-save-stringMaxLength function)
(define-extern cam-layout-save-stringMinHeight function)
(define-extern cam-layout-save-stringMaxHeight function)
(define-extern cam-layout-save-stringCliffHeight function)
(define-extern cam-layout-save-maxAngle function)
(define-extern cam-layout-save-campoints-flags function)
(define-extern cam-layout-save-focalpull-flags function)
(define-extern cam-index-options->string function)
(define-extern cam-slave-options->string function)
(define-extern fov->maya function)
(define-extern cam-layout-entity-volume-info-create function)
(define-extern clmf-next-volume function)
(define-extern clmf-input function)
(define-extern camera-fov-frame function)
(define-extern interp-test function)
(define-extern v-slrp! function)
(define-extern interp-test-deg function)
(define-extern camera-line-setup (function vector none))
(define-extern camera-line-draw function)
(define-extern cam-layout-intersect-dist function)
(define-extern clmf-button-test function)
(define-extern clmf-bna function)
(define-extern clmf-implement function)
(define-extern clmf-pos-rot function)
(define-extern clmf-next-vol-dpad function)
(define-extern clmf-to-edit-cam function)
(define-extern clmf-to-vol-attr function)
(define-extern clmf-to-spline-attr function)
(define-extern clmf-to-intro-attr function)
(define-extern clmf-to-index-attr function)
(define-extern clmf-to-focalpull-attr function)
(define-extern clmf-to-edit function)
(define-extern clmf-to-select function)
(define-extern clmf-look-through function)
(define-extern clmf-save-one function)
(define-extern clmf-save-all function)
(define-extern clmf-cam-flag-toggle function)
(define-extern clmf-cam-flag function)
(define-extern clmf-cam-float-adjust function)
(define-extern clmf-cam-meters function)
(define-extern clmf-cam-fov function)
(define-extern clmf-cam-deg function)
(define-extern clmf-cam-intro-time function)
(define-extern clmf-cam-interp-time function)
(define-extern clmf-cam-float function)
(define-extern clmf-cam-string function)
(define-extern cam-layout-restart function)

;; - Symbols

(define-extern function type)

;; - Unknowns

;;(define-extern *camera-layout-blink* object) ;; unknown type
;;(define-extern *last-cur-entity* object) ;; unknown type
;;(define-extern *clm-select* object) ;; unknown type
;;(define-extern *clm* object) ;; unknown type
;;(define-extern cam-layout-active object) ;; unknown type
;;(define-extern *camera-layout-message-ypos* object) ;; unknown type
;;(define-extern *CAM_LAYOUT-bank* object) ;; unknown type
;;(define-extern *clm-edit* object) ;; unknown type
;;(define-extern *clm-focalpull-attr* object) ;; unknown type
;;(define-extern *clm-index-attr* object) ;; unknown type
;;(define-extern *clm-intro-attr* object) ;; unknown type
;;(define-extern *clm-spline-attr* object) ;; unknown type
;;(define-extern *clm-vol-attr* object) ;; unknown type
;;(define-extern *volume-descriptor-current* object) ;; unknown type
;;(define-extern *volume-point-current* object) ;; unknown type
;;(define-extern *volume-normal-current* object) ;; unknown type
;;(define-extern *volume-descriptor* object) ;; unknown type
;;(define-extern *volume-point* object) ;; unknown type
;;(define-extern *volume-normal* object) ;; unknown type
;;(define-extern *clm-cam-attr* object) ;; unknown type
;;(define-extern *clm-cam-lookthrough* object) ;; unknown type
;;(define-extern *clm-save-all* object) ;; unknown type
;;(define-extern *clm-save-one* object) ;; unknown type


;; ----------------------
;; File - cam-debug
;; Source Path - engine/camera/cam-debug.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

; (deftype cam-dbg-scratch (structure)
;   ((linevec4w      UNKNOWN 2       :offset-assert 0)
;    (color          vector  :inline :offset-assert 32)
;    (plotvec        UNKNOWN 2       :offset-assert 48)
;    (linevec        UNKNOWN 2       :offset-assert 80)
;    (rel-vec        vector  :inline :offset-assert 112)
;    (sphere-v-start vector  :inline :offset-assert 128)
;    (sphere-v-end   vector  :inline :offset-assert 144)
;    (sphere-v-down  vector  :inline :offset-assert 160)
;    (sphere-vec     vector  :inline :offset-assert 176)
;    (crossvec       UNKNOWN 3       :offset-assert 192)
;    (bboxvec        UNKNOWN 6       :offset-assert 240)
;    (fov-vv         UNKNOWN 4       :offset-assert 336)
;    (fov-src        vector  :inline :offset-assert 400)
;    (fov-dest       vector  :inline :offset-assert 416)
;    (fov-vert       vector  :inline :offset-assert 432)
;    (fov-horz       vector  :inline :offset-assert 448)
;    )
;   :method-count-assert 9
;   :size-assert         #x1d0
;   :flag-assert         #x9000001d0
;   )

; (deftype cam-debug-tri (structure)
;   ((vertex    UNKNOWN  3       :offset-assert 0)
;    (intersect vector   :inline :offset-assert 48)
;    (color     vector4w         :offset-assert 64)
;    )
;   :method-count-assert 9
;   :size-assert         #x44
;   :flag-assert         #x900000044
;   )

(deftype cam-collision-record (structure)
  ((pos            vector :inline :offset-assert 0)
   (vel            vector :inline :offset-assert 16)
   (desired-pos    vector :inline :offset-assert 32)
   (cam-tpos-cur   vector :inline :offset-assert 48)
   (cam-tpos-old   vector :inline :offset-assert 64)
   (view-flat      vector :inline :offset-assert 80)
   (string-min-val vector :inline :offset-assert 96)
   (string-max-val vector :inline :offset-assert 112)
   (view-off       vector :inline :offset-assert 128)
   (min-z-override float          :offset-assert 144)
   (string-push-z  float          :offset-assert 148)
   (view-off-param float          :offset-assert 152)
   (frame          int32          :offset-assert 156)
   (iteration      int32          :offset-assert 160)
   (move-type      basic          :offset-assert 164)
   )
  :method-count-assert 9
  :size-assert         #xa8
  :flag-assert         #x9000000a8
  )

; (deftype cam-collision-record-array (inline-array-class)
;   ((length           int32            :offset-assert 4)
;    (allocated-length int32            :offset-assert 8)
;    (data             UNKNOWN :dynamic :offset-assert 16)
;    )
;   :method-count-assert 9
;   :size-assert         #x10
;   :flag-assert         #x900000010
;   )

;; - Functions

(define-extern cam-collision-record-draw function)
(define-extern master-draw-coordinates function)
(define-extern cam-debug-draw-tris function)
(define-extern cam-collision-record-step function)
(define-extern camera-sphere function)
(define-extern camera-line-rel function)
(define-extern camera-fov-draw function)
(define-extern cam-line-dma function)
(define-extern camera-line2d function)
(define-extern camera-plot-float-func function)
(define-extern cam-debug-add-coll-tri function)
(define-extern debug-euler function)
(define-extern bike-cam-limit function)
(define-extern external-cam-reset! (function none)) ;; TODO - unconfirmed

;; - Unknowns

;;(define-extern *camera-old-level* object) ;; unknown type
;;(define-extern *camera-old-cpu* object) ;; unknown type
;;(define-extern *camera-old-vu* object) ;; unknown type
;;(define-extern *camera-old-tfrag-bytes* object) ;; unknown type
;;(define-extern *camera-old-stat-string-tfrag-near* object) ;; unknown type
;;(define-extern *camera-old-stat-string-tfrag* object) ;; unknown type
;;(define-extern *camera-old-stat-string-total* object) ;; unknown type
;;(define-extern *cam-collision-record-show* object) ;; unknown type
;;(define-extern *cam-collision-record* object) ;; unknown type
;;(define-extern *cam-collision-record-last* object) ;; unknown type
;;(define-extern *cam-collision-record-first* object) ;; unknown type
;;(define-extern *cam-debug-los-tri* object) ;; unknown type
;;(define-extern *cam-debug-los-tri-current* object) ;; unknown type
;;(define-extern *cam-debug-coll-tri* object) ;; unknown type
;;(define-extern *cam-debug-coll-tri-current* object) ;; unknown type


;; ----------------------
;; File - cam-start
;; Source Path - engine/camera/cam-start.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern cam-stop function)
(define-extern reset-cameras function)
(define-extern cam-start function)


;; ----------------------
;; File - process-drawable
;; Source Path - engine/draw/process-drawable.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern process-entity-status! (function process int symbol symbol))
(define-extern process-grab? (function process symbol))
(define-extern process-release? (function process symbol))
(define-extern ja-post (function int))
(define-extern make-nodes-from-jg (function object pair symbol int))
(define-extern dma-add-process-drawable function)
(define-extern add-process-drawable function)
(define-extern vector<-cspace+vector! (function vector cspace vector vector))
(define-extern cspace-children (function process-drawable int pair))
(define-extern cspace-inspect-tree function)
(define-extern fill-skeleton-cache (function process-drawable int))
(define-extern execute-math-engine (function int))
(define-extern draw-joint-spheres (function process-drawable symbol))
(define-extern anim-loop (function symbol))
(define-extern ja-done? (function int symbol))
(define-extern ja-min? (function int symbol))
(define-extern ja-max? (function int symbol))
(define-extern ja-num-frames (function int int))
(define-extern ja-frame-num (function int float))
(define-extern ja-aframe (function float int float))
(define-extern ja-speed (function int float))
(define-extern ja-step (function int float))
(define-extern ja-group-size (function int int))
(define-extern ja-eval (function int))
(define-extern ja-blend-eval (function int))
(define-extern transform-post (function int))
(define-extern rider-trans (function int))
(define-extern rider-post (function int))
(define-extern pusher-post (function int))
(define-extern process-drawable-delay-player (function int int))
(define-extern process-drawable-fuel-cell-handler (function process-drawable object symbol (pointer int64) symbol))
(define-extern process-drawable-birth-fuel-cell function)
(define-extern process-drawable-valid? (function process-drawable symbol))

;; - Unknowns

(define-extern *valid-con* string)
(define-extern *default-skel-template* pair)
(define-extern process-drawable-idle state)


;; ----------------------
;; File - hint-control
;; Source Path - engine/game/task/hint-control.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern find-hint-control-index (function level-hint-control int))
(define-extern start-hint-timer (function level-hint-control none))
(define-extern increment-success-for-hint (function level-hint-control none))
(define-extern can-hint-be-played? (function int symbol))
(define-extern update-task-hints (function none))

;; - Symbols

(define-extern *hint-semaphore* (pointer process-tree)) ;; likely a level-hint process


;; ----------------------
;; File - ambient
;; Source Path - engine/ambient/ambient.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern ambient-type-error function)
(define-extern ambient-type-sound function)
(define-extern ambient-type-sound-loop function)
(define-extern ambient-type-poi function)
(define-extern ambient-type-hint function)
(define-extern ambient-type-light function)
(define-extern ambient-type-dark function)
(define-extern ambient-type-weather-off function)
(define-extern ambient-type-ocean-off function)
(define-extern ambient-type-ocean-near-off function)
(define-extern ambient-type-music function)
(define-extern level-hint-task-process function)
(define-extern bottom-hud-hidden? function)
(define-extern level-hint-init-by-other function)
(define-extern voicebox-spawn function)
(define-extern hide-bottom-hud function)
(define-extern ambient-hint-init-by-other (function none))
(define-extern level-hint-process-cmd function)
(define-extern task-known? (function game-task symbol))
(define-extern can-grab-display? function)
(define-extern level-hint-displayed? function)
(define-extern ambient-inspect function)

;; - Unknowns

;;(define-extern level-hint-exit object) ;; unknown type
;;(define-extern level-hint-error object) ;; unknown type
;;(define-extern level-hint-ambient-sound object) ;; unknown type
;;(define-extern level-hint-sidekick object) ;; unknown type
;;(define-extern level-hint-normal object) ;; unknown type
(define-extern *execute-ambients* symbol) ;; unknown type


;; ----------------------
;; File - assert
;; Source Path - engine/debug/assert.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern __assert (function symbol string int))
(define-extern __assert-min-max-range-float (function float float float string string string int))
(define-extern __assert-min-max-range-int (function int int int string string string int))
(define-extern __assert-zero-lim-range-int (function int int string string int))

;; - Symbols

(define-extern *run-time-assert-enable* symbol)


;; ----------------------
;; File - generic-obs
;; Source Path - engine/game/generic-obs.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

; (deftype target-start (process-hidden)
;   ((name             basic                 :offset-assert 4)
;    (mask             uint32                :offset-assert 8)
;    (parent           uint32                :offset-assert 12)
;    (brother          uint32                :offset-assert 16)
;    (child            uint32                :offset-assert 20)
;    (ppointer         uint32                :offset-assert 24)
;    (self             basic                 :offset-assert 28)
;    (pool             basic                 :offset-assert 32)
;    (status           basic                 :offset-assert 36)
;    (pid              int32                 :offset-assert 40)
;    (main-thread      basic                 :offset-assert 44)
;    (top-thread       basic                 :offset-assert 48)
;    (entity           basic                 :offset-assert 52)
;    (state            basic                 :offset-assert 56)
;    (trans-hook       basic                 :offset-assert 60)
;    (post-hook        basic                 :offset-assert 64)
;    (event-hook       basic                 :offset-assert 68)
;    (allocated-length int32                 :offset-assert 72)
;    (next-state       basic                 :offset-assert 76)
;    (heap-base        uint32                :offset-assert 80)
;    (heap-top         uint32                :offset-assert 84)
;    (heap-cur         uint32                :offset-assert 88)
;    (stack-frame-top  basic                 :offset-assert 92)
;    (heap             kheap        :inline  :offset-assert 80)
;    (connection-list  'connectable :inline  :offset-assert 96)
;    (stack            UNKNOWN      :dynamic :offset-assert 112)
;    )
;   :method-count-assert 15
;   :size-assert         #x70
;   :flag-assert         #xf00000070
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     )
;   )

(deftype camera-start (process-hidden)
  ()
  :method-count-assert 15
  :size-assert         #x70
  :flag-assert         #xf00000070
  )

; (deftype med-res-level (process-drawable)
;   ((level     basic  :offset-assert 176)
;    (part-mode basic  :offset-assert 180)
;    (index     int32  :offset-assert 184)
;    )
;   :method-count-assert 20
;   :size-assert         #xbc
;   :flag-assert         #x14005000bc
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype launcher (process-drawable)
;   ((spring-height   meters         :offset-assert 176)
;    (camera          basic          :offset-assert 180)
;    (active-distance float          :offset-assert 184)
;    (seek-time       uint64         :offset-assert 192)
;    (dest            vector :inline :offset-assert 208)
;    (sound-id        sound-id       :offset-assert 224)
;    )
;   :method-count-assert 20
;   :size-assert         #xe4
;   :flag-assert         #x14008000e4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

;; - Functions

(define-extern line-in-view-frustum? function)
(define-extern process-drawable-random-point! function)
(define-extern process-drawable-from-entity! function)
(define-extern cam-launcher-long-joystick function)
(define-extern hide-hud-quick function)
(define-extern command-get-process function)
(define-extern camera-change-to function)
(define-extern camera-look-at function)
(define-extern camera-pov-from function)
(define-extern command-get-trans function)
(define-extern manipy-init function)
(define-extern part-tracker-notify function)
(define-extern clone-anim-once function)
(define-extern convert-to-hud-object function)
(define-extern merc-eye-anim function)
(define-extern clone-anim function)
(define-extern command-get-camera function)
(define-extern ja-anim-done? function)
(define-extern camera-anim function)
(define-extern camera-tracker-init function)
(define-extern cam-launcher-joystick function)
(define-extern launcher-init-by-other function)
(define-extern touch-tracker-init function)
(define-extern process-drawable-pair-random-point! function)
(define-extern birth-func-set-quat function)
(define-extern draw-eco-beam function)

;; - Unknowns

;;(define-extern *particle-quat* object) ;; unknown type
;;(define-extern touch-tracker-idle object) ;; unknown type
;;(define-extern cam-launcher-longfall object) ;; unknown type
;;(define-extern cam-launcher-shortfall object) ;; unknown type
;;(define-extern launcher-idle object) ;; unknown type
;;(define-extern launcher-deactivated object) ;; unknown type
;;(define-extern launcher-active object) ;; unknown type
;;(define-extern beach-part-grotto-1 object) ;; unknown type
;;(define-extern part-spawner-active object) ;; unknown type
;;(define-extern *lev-string* object) ;; unknown type
;;(define-extern med-res-level-idle object) ;; unknown type
;;(define-extern camera-tracker-process object) ;; unknown type
;;(define-extern part-tracker-process object) ;; unknown type
;;(define-extern manipy-idle object) ;; unknown type
;;(define-extern swingpole-stance object) ;; unknown type
;;(define-extern swingpole-active object) ;; unknown type


;; ----------------------
;; File - target-util
;; Source Path - engine/target/target-util.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

; (deftype target-bank (basic)
;   ((jump-collide-offset          meters           :offset-assert 4)
;    (jump-height-min              meters           :offset-assert 8)
;    (jump-height-max              meters           :offset-assert 12)
;    (double-jump-height-min       meters           :offset-assert 16)
;    (double-jump-height-max       meters           :offset-assert 20)
;    (flip-jump-height-min         meters           :offset-assert 24)
;    (flip-jump-height-max         meters           :offset-assert 28)
;    (duck-jump-height-min         meters           :offset-assert 32)
;    (duck-jump-height-max         meters           :offset-assert 36)
;    (flop-jump-height-min         meters           :offset-assert 40)
;    (flop-jump-height-max         meters           :offset-assert 44)
;    (attack-jump-height-min       meters           :offset-assert 48)
;    (attack-jump-height-max       meters           :offset-assert 52)
;    (edge-grab-jump-height-min    meters           :offset-assert 56)
;    (edge-grab-jump-height-max    meters           :offset-assert 60)
;    (swim-jump-height-min         meters           :offset-assert 64)
;    (swim-jump-height-max         meters           :offset-assert 68)
;    (tube-jump-height-min         meters           :offset-assert 72)
;    (tube-jump-height-max         meters           :offset-assert 76)
;    (wheel-duration               uint64           :offset-assert 80)
;    (wheel-jump-pre-window        uint64           :offset-assert 88)
;    (wheel-jump-post-window       uint64           :offset-assert 96)
;    (wheel-timeout                uint64           :offset-assert 104)
;    (wheel-speed-min              meters           :offset-assert 112)
;    (wheel-speed-inc              meters           :offset-assert 116)
;    (wheel-flip-duration          uint64           :offset-assert 120)
;    (wheel-flip-height            meters           :offset-assert 128)
;    (wheel-flip-dist              meters           :offset-assert 132)
;    (wheel-flip-art-height        meters           :offset-assert 136)
;    (wheel-flip-art-dist          meters           :offset-assert 140)
;    (duck-slide-distance          meters           :offset-assert 144)
;    (fall-far                     meters           :offset-assert 148)
;    (fall-far-inc                 meters           :offset-assert 152)
;    (attack-timeout               uint64           :offset-assert 160)
;    (ground-timeout               uint64           :offset-assert 168)
;    (slide-down-timeout           uint64           :offset-assert 176)
;    (fall-timeout                 uint64           :offset-assert 184)
;    (fall-stumble-threshold       meters           :offset-assert 192)
;    (yellow-projectile-speed      meters           :offset-assert 196)
;    (hit-invulnerable-timeout     uint64           :offset-assert 200)
;    (run-cycle-length             float            :offset-assert 208)
;    (walk-cycle-dist              meters           :offset-assert 212)
;    (walk-up-cycle-dist           meters           :offset-assert 216)
;    (walk-down-cycle-dist         meters           :offset-assert 220)
;    (walk-side-cycle-dist         meters           :offset-assert 224)
;    (run-cycle-dist               meters           :offset-assert 228)
;    (run-up-cycle-dist            meters           :offset-assert 232)
;    (run-down-cycle-dist          meters           :offset-assert 236)
;    (run-side-cycle-dist          meters           :offset-assert 240)
;    (run-wall-cycle-dist          meters           :offset-assert 244)
;    (duck-walk-cycle-dist         meters           :offset-assert 248)
;    (wade-shallow-walk-cycle-dist meters           :offset-assert 252)
;    (wade-deep-walk-cycle-dist    meters           :offset-assert 256)
;    (smack-surface-dist           meters           :offset-assert 260)
;    (smack-surface-height         meters           :offset-assert 264)
;    (min-dive-depth               meters           :offset-assert 268)
;    (root-radius                  meters           :offset-assert 272)
;    (root-offset                  vector   :inline :offset-assert 288)
;    (body-radius                  meters           :offset-assert 304)
;    (edge-radius                  meters           :offset-assert 308)
;    (edge-offset                  vector   :inline :offset-assert 320)
;    (head-radius                  meters           :offset-assert 336)
;    (head-height                  meters           :offset-assert 340)
;    (head-offset                  vector   :inline :offset-assert 352)
;    (spin-radius                  meters           :offset-assert 368)
;    (spin-offset                  vector   :inline :offset-assert 384)
;    (duck-spin-radius             meters           :offset-assert 400)
;    (duck-spin-offset             vector   :inline :offset-assert 416)
;    (punch-radius                 meters           :offset-assert 432)
;    (punch-offset                 vector   :inline :offset-assert 448)
;    (uppercut-radius              meters           :offset-assert 464)
;    (uppercut0-offset             vector   :inline :offset-assert 480)
;    (uppercut1-offset             vector   :inline :offset-assert 496)
;    (flop-radius                  meters           :offset-assert 512)
;    (flop0-offset                 vector   :inline :offset-assert 528)
;    (flop1-offset                 vector   :inline :offset-assert 544)
;    (stuck-time                   seconds         :offset-assert 560)
;    (stuck-timeout                seconds         :offset-assert 568)
;    (stuck-distance               meters           :offset-assert 576)
;    (tongue-pull-speed-min        float            :offset-assert 580)
;    (tongue-pull-speed-max        float            :offset-assert 584)
;    (yellow-attack-timeout        uint64           :offset-assert 592)
;    )
;   :method-count-assert 9
;   :size-assert         #x258
;   :flag-assert         #x900000258
;   )

;; - Functions

(define-extern target-height-above-ground function)
(define-extern target-align-vel-z-adjust function)
(define-extern target-collide-set! (function symbol float int))
(define-extern target-start-attack function)
(define-extern target-danger-set! function)
(define-extern average-turn-angle function)
(define-extern can-play-stance-amibent? function)
(define-extern can-jump? function)
(define-extern move-legs? function)
(define-extern fall-test function)
(define-extern slide-down-test function)
(define-extern smack-surface? function)
(define-extern can-wheel? function)
(define-extern can-duck? function)
(define-extern can-exit-duck? function)
(define-extern can-hands? function)
(define-extern can-feet? function)
(define-extern vector-local+! function)
(define-extern move-forward function)
(define-extern set-forward-vel function)
(define-extern delete-back-vel function)
(define-extern set-side-vel function)
(define-extern target-timed-invulnerable function)
(define-extern target-timed-invulnerable-off function)
(define-extern ground-tween-initialize function)
(define-extern ground-tween-update function)
(define-extern target-rot function)

;; - Unknowns

;;(define-extern *TARGET-bank* object) ;; unknown type
;;(define-extern target-slide-down object) ;; unknown type
;;(define-extern target-falling object) ;; unknown type
(define-extern *jchar-sg* skeleton-group)
(define-extern *target-shadow-control* shadow-control)


;; ----------------------
;; File - target-part
;; Source Path - engine/target/target-part.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern birth-func-copy-target-y-rot function)
(define-extern birth-func-ground-orient function)
(define-extern birth-func-target-orient function)
(define-extern birth-func-vector-orient function)
(define-extern part-tracker-track-target-joint function)
(define-extern process-drawable-burn-effect function)


;; ----------------------
;; File - collide-reaction-target
;; Source Path - engine/collide/collide-reaction-target.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern collide-shape-moving-angle-set! function)
(define-extern target-collision-low-coverage function)
(define-extern poly-find-nearest-edge function)
(define-extern target-collision-reaction function)
(define-extern target-collision-no-reaction function)


;; ----------------------
;; File - logic-target
;; Source Path - engine/target/logic-target.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern init-target (function continue-point object))
(define-extern target-print-stats function)
(define-extern activate-hud (function process none))
(define-extern reset-target-state (function symbol none))
(define-extern init-sidekick function)
(define-extern target-generic-event-handler function)
(define-extern level-setup (function none))
(define-extern target-exit function)
(define-extern target-calc-camera-pos function)
(define-extern do-target-shadow function)
(define-extern target-powerup-process function)
(define-extern flag-setup function)
(define-extern build-conversions function)
(define-extern do-rotations1 function)
(define-extern read-pad function)
(define-extern turn-to-vector function)
(define-extern add-thrust function)
(define-extern add-gravity function)
(define-extern do-rotations2 function)
(define-extern reverse-conversions function)
(define-extern bend-gravity function)
(define-extern post-flag-setup function)
(define-extern joint-points function)
(define-extern target-real-post function)
(define-extern target-compute-edge function)
(define-extern target-compute-pole function)
(define-extern target-compute-slopes function)
(define-extern warp-vector-into-surface! function)
(define-extern vector<-pad-in-surface! function)
(define-extern draw-history function)
(define-extern vector-turn-to function)
(define-extern print-history function)
(define-extern local-pad-angle function)
(define-extern turn-around? function)
(define-extern target-move-dist function)
(define-extern target-compute-edge-rider function)
(define-extern target-post function)
(define-extern target-swim-post function)
(define-extern target-no-stick-post function)
(define-extern target-no-move-post function)
(define-extern target-slide-down-post function)
(define-extern target-no-ja-move-post function)

;; - Unknowns

(define-extern target-continue state)


;; ----------------------
;; File - sidekick
;; Source Path - engine/target/sidekick.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern cspace<-cspace+quaternion! function)
(define-extern starts function)

;; - Unknowns

;;(define-extern *sidekick-sg* object) ;; unknown type
;;(define-extern sidekick-clone object) ;; unknown type
;;(define-extern *sidekick-remap* object) ;; unknown type


;; ----------------------
;; File - voicebox
;; Source Path - engine/game/voicebox.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

; (deftype camera-voicebox (camera-slave)
;   ()
;   :method-count-assert 14
;   :size-assert         #xa04
;   :flag-assert         #xe09a00a04
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     )
;   )

; (deftype voicebox (process-drawable)
;   ((base-trans vector           :inline :offset-assert 176)
;    (seeker     cam-float-seeker :inline :offset-assert 192)
;    (blend      float                    :offset-assert 216)
;    (twist      float                    :offset-assert 220)
;    (hint       uint64                   :offset-assert 224)
;    )
;   :method-count-assert 23
;   :size-assert         #xe8
;   :flag-assert         #x17008000e8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     )
;   )

;; - Functions

(define-extern voicebox-init-by-other function)
(define-extern voicebox-track function)

;; - Unknowns

;;(define-extern cam-voicebox object) ;; unknown type
;;(define-extern *voicebox-sg* object) ;; unknown type
;;(define-extern empty-state object) ;; unknown type


;; ----------------------
;; File - target-handler
;; Source Path - engine/target/target-handler.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern target-bonk-event-handler function)
(define-extern target-standard-event-handler function)
(define-extern target-send-attack function)
(define-extern target-attacked function)
(define-extern target-apply-tongue function)
(define-extern get-intersect-point function)
(define-extern target-powerup-effect function)
(define-extern target-shoved function)
(define-extern target-dangerous-event-handler function)
(define-extern target-jump-event-handler function)
(define-extern target-walk-event-handler function)
(define-extern target-state-hook-exit function)
(define-extern target-effect-exit function)

;; - Unknowns

;;(define-extern target-jump object) ;; unknown type
;;(define-extern target-hit object) ;; unknown type
;;(define-extern target-eco-powerup object) ;; unknown type
;;(define-extern target-load-wait object) ;; unknown type
;;(define-extern target-grab object) ;; unknown type
;;(define-extern target-look-around object) ;; unknown type
;;(define-extern target-billy-game object) ;; unknown type
;;(define-extern target-racing-start object) ;; unknown type
;;(define-extern target-flut-start object) ;; unknown type
;;(define-extern target-snowball-start object) ;; unknown type
;;(define-extern target-tube-start object) ;; unknown type
;;(define-extern target-periscope object) ;; unknown type
;;(define-extern target-fishing object) ;; unknown type
;;(define-extern target-final-door object) ;; unknown type
;;(define-extern target-play-anim object) ;; unknown type
;;(define-extern target-clone-anim object) ;; unknown type
;;(define-extern target-edge-grab object) ;; unknown type
;;(define-extern target-pole-cycle object) ;; unknown type
;;(define-extern target-swim-stance object) ;; unknown type
;;(define-extern target-wade-stance object) ;; unknown type


;; ----------------------
;; File - target
;; Source Path - engine/target/target.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern target-land-effect function)
(define-extern target-hit-ground-anim function)
(define-extern mod-var-jump function)
(define-extern init-var-jump function)
(define-extern target-falling-anim function)
(define-extern target-falling-trans function)
(define-extern target-falling-anim-trans function)

;; - Unknowns

;;(define-extern target-hit-ground object) ;; unknown type
;;(define-extern target-stance object) ;; unknown type
;;(define-extern target-high-jump object) ;; unknown type
;;(define-extern target-attack-air object) ;; unknown type
;;(define-extern target-wheel-flip object) ;; unknown type
;;(define-extern target-duck-stance object) ;; unknown type
;;(define-extern target-hit-ground-hard object) ;; unknown type
;;(define-extern target-flop-hit-ground object) ;; unknown type
;;(define-extern target-yellow-jump-blast object) ;; unknown type
;;(define-extern target-swim-down object) ;; unknown type
;;(define-extern target-flop object) ;; unknown type
;;(define-extern target-attack-uppercut-jump object) ;; unknown type
;;(define-extern target-attack object) ;; unknown type
;;(define-extern target-attack-uppercut object) ;; unknown type
;;(define-extern target-yellow-blast object) ;; unknown type
;;(define-extern target-wade-walk object) ;; unknown type
;;(define-extern target-walk object) ;; unknown type
;;(define-extern target-running-attack object) ;; unknown type
;;(define-extern target-duck-high-jump-jump object) ;; unknown type
;;(define-extern target-launch object) ;; unknown type
;;(define-extern target-duck-high-jump object) ;; unknown type
;;(define-extern target-double-jump object) ;; unknown type
;;(define-extern target-duck-walk object) ;; unknown type
;;(define-extern target-ice-walk object) ;; unknown type
;;(define-extern target-wheel object) ;; unknown type
;;(define-extern target-turn-around object) ;; unknown type
;;(define-extern target-stance-ambient object) ;; unknown type
;;(define-extern target-ice-stance object) ;; unknown type
;;(define-extern target-startup object) ;; unknown type
;;(define-extern target-jump-forward object) ;; unknown type


;; ----------------------
;; File - target2
;; Source Path - engine/target/target2.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

; (deftype first-person-hud (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; unrecognized get op: (set! v1 process) parent was UNKNOWN
;   )

;; - Functions

(define-extern target-swim-tilt function)
(define-extern projectile-init-by-other function)
(define-extern first-person-hud-init-by-other function)
(define-extern disable-hud function)
(define-extern enable-hud function)
(define-extern part-first-person-hud-left-func function)
(define-extern part-first-person-hud-right-func function)
(define-extern part-first-person-hud-selector-func function)
(define-extern look-for-points-of-interest function)

;; - Unknowns

;;(define-extern target-death object) ;; unknown type
;;(define-extern target-swim-jump-jump object) ;; unknown type
;;(define-extern target-swim-up object) ;; unknown type
;;(define-extern target-swim-jump object) ;; unknown type
;;(define-extern target-swim-walk object) ;; unknown type
;;(define-extern *yellow-jump-mods* object) ;; unknown type
;;(define-extern target-edge-grab-jump object) ;; unknown type
;;(define-extern target-edge-grab-off object) ;; unknown type
;;(define-extern target-pole-flip-up-jump object) ;; unknown type
;;(define-extern target-pole-flip-forward-jump object) ;; unknown type
;;(define-extern target-pole-flip-up object) ;; unknown type
;;(define-extern target-pole-flip-forward object) ;; unknown type
;;(define-extern *fp-hud-stack* object) ;; unknown type
;;(define-extern target-stance-look-around object) ;; unknown type
;;(define-extern hud-normal object) ;; unknown type
;;(define-extern hud-coming-in object) ;; unknown type
;;(define-extern hud-going-out object) ;; unknown type
;;(define-extern hud-waiting object) ;; unknown type


;; ----------------------
;; File - target-death
;; Source Path - engine/target/target-death.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern target-death-anim function)
(define-extern death-movie-remap function)
(define-extern pov-camera-init-by-other function)
(define-extern target-hit-effect function)
(define-extern target-hit-setup-anim function)
(define-extern target-hit-move function)
(define-extern target-hit-orient function)
(define-extern target-hit-push function)
(define-extern velocity-set-to-target! function)
(define-extern start-sequence-a function)
(define-extern task-closed? (function game-task task-status symbol))
(define-extern next-level function)

;; - Unknowns

;;(define-extern *death-spool-array* object) ;; unknown type
;;(define-extern *deathcam-sg* object) ;; unknown type
;;(define-extern *smack-mods* object) ;; unknown type
;;(define-extern *smack-up-mods* object) ;; unknown type
;;(define-extern target-title object) ;; unknown type
;;(define-extern target-demo object) ;; unknown type
;;(define-extern target-warp-in object) ;; unknown type
;;(define-extern *auto-continue* object) ;; unknown type


;; ----------------------
;; File - menu
;; Source Path - engine/debug/menu.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(declare-type debug-menu basic)
(deftype debug-menu-context (basic)
  ((is-active   symbol     :offset-assert 4)
   (sel-length  int32     :offset-assert 8)
   (sel-menu    debug-menu   8 :offset-assert 12)
   (root-menu   debug-menu     :offset-assert 44)
   (joypad-func (function basic none)     :offset-assert 48)
   (joypad-item basic     :offset-assert 52) ;; is this more specific?
   (font        font-context     :offset-assert 56)
   (is-hidden   symbol     :offset-assert 60)
   )
  :method-count-assert 9
  :size-assert         #x40
  :flag-assert         #x900000040
  (:methods
   (new (symbol type) _type_ 0))
  )

(declare-type debug-menu basic)
(deftype debug-menu-node (basic)
  ((name          string  :offset-assert 4)
   (parent        debug-menu  :offset-assert 8)
   (refresh-delay int32  :offset-assert 12)
   (refresh-ctr   int32  :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x14
  :flag-assert         #x900000014
  )

(declare-type debug-menu-item basic)
(deftype debug-menu (debug-menu-node)
  ((context       debug-menu-context  :offset-assert 20)
   (selected-item debug-menu-item  :offset-assert 24)
   (pix-width     int32  :offset-assert 28)
   (pix-height    int32  :offset-assert 32)
   (items         pair  :offset-assert 36) ; list of debug-menu-item
   )
  :method-count-assert 9
  :size-assert         #x28
  :flag-assert         #x900000028
  (:methods
   (new (symbol type debug-menu-context string) _type_ 0))
  )

(deftype debug-menu-item (debug-menu-node)
  ((id            int32  :offset-assert 20)
   )
  :method-count-assert 9
  :size-assert         #x18
  :flag-assert         #x900000018
  )

(deftype debug-menu-item-submenu (debug-menu-item)
  ((submenu       debug-menu  :offset-assert 24)
   )
  :method-count-assert 9
  :size-assert         #x1c
  :flag-assert         #x90000001c
  (:methods
   (new (symbol type string debug-menu) _type_ 0))
  )

(deftype debug-menu-item-function (debug-menu-item)
  ((activate-func (function int int)  :offset-assert 24) ;; func is kinda a guess, might be 2 ints
   (hilite-timer  int8   :offset-assert 28)
   )
  :method-count-assert 9
  :size-assert         #x1d
  :flag-assert         #x90000001d
  (:methods
   (new (symbol type string int function) _type_ 0))
  )

(deftype debug-menu-item-flag (debug-menu-item)
  ((activate-func (function int int symbol)  :offset-assert 24) ;; func is kinda a guess
   (is-on         symbol  :offset-assert 28)
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  (:methods
   (new (symbol type string symbol function) _type_ 0))
  )

(deftype debug-menu-item-var (debug-menu-item)
  ((display-str      string  :offset-assert 24)
   (grabbed-joypad-p symbol  :offset-assert 28)
   (float-p          symbol  :offset-assert 32)
   (range-p          symbol  :offset-assert 36)
   (show-len         int32  :offset-assert 40)
   (inc-delay        int32  :offset-assert 44)
   (inc-delay-ctr    int32  :offset-assert 48)
   (step-delay-ctr   int32  :offset-assert 52)
   (inc-dir          int32  :offset-assert 56)
   (fval             float  :offset-assert 60)
   (fundo-val        float  :offset-assert 64)
   (frange-min       float  :offset-assert 68)
   (frange-max       float  :offset-assert 72)
   (fstart-inc       float  :offset-assert 76)
   (fstep            float  :offset-assert 80)
   (fprecision       int32  :offset-assert 84)
   ; (function int (the id) int (some constant) <int/float> <int/float> (fval or ival)x2 <int/float>)
   (factivate-func   function  :offset-assert 88)
   (ival             int32  :offset 60)
   (iundo-val        int32  :offset 64)
   (irange-min       int32  :offset 68)
   (irange-max       int32  :offset 72)
   (istart-inc       int32  :offset 76)
   (istep            int32  :offset 80)
   (ihex-p           symbol  :offset-assert 92)
   ; (function int (the id) int (some constant) <int/float> <int/float> (fval or ival)x2 <int/float>)
   (iactivate-func   function  :offset 88)
   (ifloat-p         symbol  :offset-assert 96)
   )
  :method-count-assert 9
  :size-assert         #x64
  :flag-assert         #x900000064
  (:methods
   (new (symbol type string int int) _type_ 0))
  )

;; - Functions

(define-extern debug-menus-active (function debug-menu-context debug-menu-context))
(define-extern debug-menus-default-joypad-func (function debug-menu-context debug-menu-context))
(define-extern debug-menu-context-render (function debug-menu-context debug-menu-context))
(define-extern debug-menu-context-close-submenu (function debug-menu-context debug-menu-context))
(define-extern debug-menu-context-activate-selection (function debug-menu-context debug-menu-context))
(define-extern debug-menu-context-select-new-item (function debug-menu-context int debug-menu-context))
(define-extern debug-menu-item-send-msg (function debug-menu-item int debug-menu-item))
(define-extern debug-menu-send-msg (function debug-menu int symbol debug-menu))
(define-extern debug-menu-context-send-msg (function debug-menu-context int int debug-menu-context))
(define-extern debug-menu-item-submenu-msg (function debug-menu-item-submenu int debug-menu-item-submenu))
(define-extern debug-menu-item-function-msg (function debug-menu-item-function symbol debug-menu-item-function))
(define-extern debug-menu-item-flag-msg (function debug-menu-item-flag int debug-menu-item-flag))
(define-extern debug-menu-item-var-msg (function debug-menu-item-var int debug-menu-item-var))
(define-extern debug-menu-context-release-joypad (function debug-menu-context symbol)) ;; this is called with a second arg in places, but definitely not used!
(define-extern debug-menu-context-grab-joypad (function debug-menu-context basic function symbol))
(define-extern debug-menu-item-var-joypad-handler (function debug-menu-item-var debug-menu-item-var))
(define-extern debug-menu-item-var-update-display-str (function debug-menu-item-var debug-menu-item-var))
(define-extern debug-menu-context-open-submenu (function debug-menu-context debug-menu basic)) ;; can also return string error messages
(define-extern debug-menu-context-select-next-or-prev-item (function debug-menu-context int debug-menu-context))
(define-extern debug-menu-render (function debug-menu int int int int debug-menu))
(define-extern debug-menu-item-render (function debug-menu-item int int int symbol debug-menu-item))
(define-extern debug-menu-item-submenu-render (function debug-menu-item-submenu int int int symbol debug-menu-item-submenu))
(define-extern debug-menu-item-function-render (function debug-menu-item-function int int int symbol debug-menu-item-function))
(define-extern debug-menu-item-flag-render (function debug-menu-item-flag int int int symbol debug-menu-item-flag))
(define-extern debug-menu-item-var-render (function debug-menu-item-var int int int symbol debug-menu-item-var))
(define-extern debug-menu-make-from-template (function debug-menu-context pair debug-menu-node))
(define-extern debug-menu-append-item (function debug-menu debug-menu-item debug-menu-item))
(define-extern debug-menu-context-set-root-menu (function debug-menu-context debug-menu debug-menu-context))
(define-extern debug-menu-func-decode (function object function))
(define-extern debug-menu-item-var-make-int (function debug-menu-item-var (function int int int int int) int symbol int int symbol debug-menu-item-var))
(define-extern debug-menu-item-var-make-float (function debug-menu-item-var (function int int float float int) float symbol float float symbol debug-menu-item-var))
(define-extern debug-menu-rebuild (function debug-menu debug-menu))
(define-extern debug-menu-context-default-selection (function debug-menu-context symbol debug-menu-context))
(define-extern debug-menu-item-get-max-width (function debug-menu-item debug-menu int))
(define-extern debug-menu-remove-all-items (function debug-menu debug-menu))
(define-extern debug-menu-find-from-template (function debug-menu-context pair debug-menu))
(define-extern debug-menus-handler (function debug-menu-context debug-menu-context))


;; ----------------------
;; File - drawable
;; Source Path - engine/draw/drawable.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern display-frame-finish (function display object))
(define-extern display-sync (function display none))
(define-extern determine-pause-mode (function int))
(define-extern display-frame-start (function display int int none))
(define-extern toggle-pause (function int))
(define-extern deactivate-progress (function none))
(define-extern debug-init-buffer (function bucket-id uint uint none))
(define-extern real-main-draw-hook (function none))
(define-extern error-sphere function)
(define-extern draw-instance-info function)
(define-extern find-instance-by-name (function string instance)) ;; TODO - ret not verified
(define-extern prototype-bucket-type function)
(define-extern guard-band-cull function)
(define-extern find-instance-by-index function)
(define-extern prototype-bucket-recalc-fields (function instance none)) ;; TODO - ret not confirmed
(define-extern dma-add-process-drawable-hud function)
(define-extern foreground-engine-execute (function engine display-frame int int none))
(define-extern main-debug-hook function)
(define-extern main-draw-hook function)
(define-extern swap-display (function display object))
(define-extern marks-cam-restore function)
(define-extern eddie-cam-restore function)
(define-extern gregs-jungle-cam-restore function)
(define-extern gregs-village1-cam-restore function)
(define-extern gregs-texture-cam-restore function)
(define-extern gregs-texture2-cam-restore function)
(define-extern cave-cam-restore function)
(define-extern paals-cam-restore function)

;; - Symbols

(define-extern *edit-instance* string)

;; - Unknowns

(define-extern syncv (function int int)) ;; unknown type
(define-extern put-display-env (function object none)) ;; unknown type
(define-extern *surrogate-dma-buffer* dma-buffer) ;; unknown type
(define-extern *screen-shot* symbol) ;; unknown type
(define-extern *hud-lights* vu-lights) ;; unknown type
(define-extern *instance-mem-usage* memory-usage-block) ;; unknown type
(define-extern *add-sphere* symbol) ;; unknown type
(define-extern *generic-effect-mode* int) ;; unknown type


;; ----------------------
;; File - drawable-group
;; Source Path - engine/draw/drawable-group.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Nothing Defined in This File!


;; ----------------------
;; File - drawable-inline-array
;; Source Path - engine/draw/drawable-inline-array.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Nothing Defined in This File!


;; ----------------------
;; File - drawable-tree
;; Source Path - engine/draw/drawable-tree.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Nothing Defined in This File!


;; ----------------------
;; File - prototype
;; Source Path - engine/gfx/tie/prototype.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Nothing Defined in This File!


;; ----------------------
;; File - main-collide
;; Source Path - engine/collide/main-collide.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern drawable-sphere-box-intersect? function)
(define-extern instance-sphere-box-intersect? function)
(define-extern instance-tfragment-add-debug-sphere function)


;; ----------------------
;; File - video
;; Source Path - engine/game/video.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern set-hud-aspect-ratio (function symbol symbol none)) ;; TODO return type not validated yet


;; ----------------------
;; File - main
;; Source Path - engine/game/main.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern display-loop (function int))
(define-extern entity-by-type (function type entity-actor))
(define-extern scf-get-territory (function int))
(define-extern pause-allowed? (function symbol))
(define-extern menu-respond-to-pause (function symbol))
(define-extern hide-progress-screen (function int))
(define-extern set-letterbox-frames (function uint uint))
(define-extern letterbox (function none))
(define-extern blackout (function none))
(define-extern main-cheats (function int))
(define-extern off (function int))

;; - Symbols

(define-extern *cheat-temp* (pointer int32))
(define-extern *progress-cheat* symbol)
(define-extern *master-exit* symbol)
(define-extern *last-master-mode* symbol)
(define-extern *screen-filter* screen-filter)

;; - Unknowns

(define-extern scf-get-timeout (function int)) ;; unknown type
(define-extern scf-get-inactive-timeout (function int)) ;; unknown type
(define-extern kernel-shutdown (function none))


;; ----------------------
;; File - collide-cache
;; Source Path - engine/collide/collide-cache.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

; (deftype collide-puls-work (structure)
;   ((ignore-pat uint32                     :offset-assert 0)
;    (tri-out    collide-tri-result         :offset-assert 4)
;    (bsphere    sphere             :inline :offset-assert 16)
;    (move-dist  vector             :inline :offset-assert 32)
;    )
;   :method-count-assert 9
;   :size-assert         #x30
;   :flag-assert         #x900000030
;   )

; (deftype lsmi-work (structure)
;   ((best-u      float                      :offset-assert 0)
;    (orig-best-u float                      :offset-assert 4)
;    (action      uint32                     :offset-assert 8)
;    (tri-out     collide-tri-result :inline :offset-assert 16)
;    )
;   :method-count-assert 9
;   :size-assert         #x64
;   :flag-assert         #x900000064
;   )

;; - Functions

(define-extern make-collide-list-using-line-sphere-inst-test function)
(define-extern test-closest-pt-in-triangle function)

;; - Unknowns

;;(define-extern *already-printed-exeeded-max-cache-tris* object) ;; unknown type


;; ----------------------
;; File - relocate
;; Source Path - engine/entity/relocate.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Nothing Defined in This File!


;; ----------------------
;; File - memory-usage
;; Source Path - engine/debug/memory-usage.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Unknowns

(define-extern *max-dma* int)


;; ----------------------
;; File - entity
;; Source Path - engine/entity/entity.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern task-control-reset (function symbol none))
(define-extern init-entity function)
(define-extern birth-viewer function)
(define-extern update-actor-vis-box function)
(define-extern process-status-bits function)
(define-extern entity-by-meters function)
(define-extern entity-process-count function)
(define-extern entity-count function)
(define-extern entity-remap-names function)
(define-extern expand-vis-box-with-point function)
(define-extern entity-task-complete-on function)
(define-extern entity-task-complete-off function)
(define-extern entity-speed-test function)

;; - Unknowns

;;(define-extern *compact-actors* object) ;; unknown type
;;(define-extern *vis-actors* object) ;; unknown type


;; ----------------------
;; File - path
;; Source Path - engine/nav/path.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Nothing Defined in This File!


;; ----------------------
;; File - vol
;; Source Path - engine/geometry/vol.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern plane-volume-intersect-dist function)


;; ----------------------
;; File - navigate
;; Source Path - engine/nav/navigate.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

; (deftype cfs-travel-vec (structure)
;   ((dir         vector :inline :offset-assert 0)
;    (delta-angle float          :offset-assert 16)
;    )
;   :method-count-assert 9
;   :size-assert         #x14
;   :flag-assert         #x900000014
;   )

; (deftype cfs-work (structure)
;   ((desired-travel-dist float           :offset-assert 0)
;    (desired-angle       float           :offset-assert 4)
;    (max-dist            float           :offset-assert 8)
;    (old-angle           float           :offset-assert 12)
;    (modified            int32           :offset-assert 16)
;    (blocked-mask        uint64          :offset-assert 24)
;    (travel              vector  :inline :offset-assert 32)
;    (current             vector  :inline :offset-assert 48)
;    (new-travel          UNKNOWN 2       :offset-assert 64)
;    (temp-travel         UNKNOWN 2       :offset-assert 128)
;    (prev-dir            vector  :inline :offset-assert 192)
;    (attempt-dir         vector  :inline :offset-assert 208)
;    (tangent             UNKNOWN 2       :offset-assert 224)
;    )
;   :method-count-assert 9
;   :size-assert         #x100
;   :flag-assert         #x900000100
;   )

; (deftype nav-control-cfs-work (structure)
;   ((in-dir              vector  :inline :offset-assert 0)
;    (right-dir           vector  :inline :offset-assert 16)
;    (best-dir            UNKNOWN 2       :offset-assert 32)
;    (temp-dir            UNKNOWN 2       :offset-assert 64)
;    (away-dir            vector  :inline :offset-assert 96)
;    (best-dir-angle      UNKNOWN 2       :offset-assert 112)
;    (ignore-mask         uint64          :offset-assert 120)
;    (initial-ignore-mask uint64          :offset-assert 128)
;    (i-sphere            int32           :offset-assert 136)
;    (i-first-sphere      int32           :offset-assert 140)
;    (i-inside-sphere     int32           :offset-assert 144)
;    (inside-sphere-dist  float           :offset-assert 148)
;    (sign                float           :offset-assert 152)
;    (travel-len          float           :offset-assert 156)
;    (dist2               float           :offset-assert 160)
;    (inside-dist         float           :offset-assert 164)
;    (rand-angle          float           :offset-assert 168)
;    (dir-update          basic           :offset-assert 172)
;    (debug-offset        vector  :inline :offset-assert 176)
;    )
;   :method-count-assert 9
;   :size-assert         #xc0
;   :flag-assert         #x9000000c0
;   )

;; - Functions

(define-extern test-xz-point-on-line-segment? function)
(define-extern ray-ccw-line-segment-intersection? function)
(define-extern choose-travel-portal-vertex function)
(define-extern init-ray function)
(define-extern ray-line-segment-intersection? function)
(define-extern point-triangle-distance-min function)
(define-extern nav-mesh-update-route-table function)
(define-extern nav-mesh-lookup-route function)
(define-extern nav-ray-test-local? function)
(define-extern init-ray-local function)
(define-extern init-ray-dir-local function)
(define-extern circle-triangle-intersection? function)
(define-extern point-inside-rect? function)
(define-extern recursive-inside-poly function)
(define-extern point-inside-poly? function)
(define-extern vu-point-triangle-intersection? function)
(define-extern pke-nav-hack function)
(define-extern debug-report-nav-stats function)
(define-extern inc-mod3 function)
(define-extern dec-mod3 function)
(define-extern circle-triangle-intersection-proc? function)
(define-extern nav-ray-test function)
(define-extern clip-vector-to-halfspace! function)
(define-extern add-nav-sphere function)
(define-extern add-collide-shape-spheres function)
(define-extern circle-tangent-directions function)
(define-extern find-closest-circle-ray-intersection function)
(define-extern sign-bit function)
(define-extern compute-dir-parm function)
(define-extern debug-nav-validate-current-poly function)
(define-extern start-collect-nav function)
(define-extern end-collect-nav function)
(define-extern nav-sphere-from-cam function)

;; - Unknowns

;;(define-extern *edge-vert0-table* object) ;; unknown type
;;(define-extern *edge-vert1-table* object) ;; unknown type
;;(define-extern *edge-mask-table* object) ;; unknown type
;;(define-extern *nav-patch-route-table* object) ;; unknown type
;;(define-extern *nav-timer* object) ;; unknown type
;;(define-extern *nav-update-route-table-ray-count* object) ;; unknown type
;;(define-extern *nav-update-route-table-route-count* object) ;; unknown type
;;(define-extern *debug-traverse* object) ;; unknown type
;;(define-extern *debug-tests* object) ;; unknown type
;;(define-extern *color-red* object) ;; unknown type
;;(define-extern *color-blue* object) ;; unknown type
;;(define-extern *color-green* object) ;; unknown type
;;(define-extern *color-cyan* object) ;; unknown type
;;(define-extern *color-yellow* object) ;; unknown type
;;(define-extern *color-white* object) ;; unknown type
;;(define-extern *travel-timer* object) ;; unknown type
;;(define-extern *clip-for-spheres-timer* object) ;; unknown type
;;(define-extern *find-poly-timer* object) ;; unknown type
;;(define-extern *nav-timer-enable* object) ;; unknown type
;;(define-extern *nav-triangle-test-count* object) ;; unknown type
;;(define-extern *nav-last-triangle-test-count* object) ;; unknown type
;;(define-extern *debug-output* object) ;; unknown type
;;(define-extern *debug-nav* object) ;; unknown type
;;(define-extern *debug-nav-ray* object) ;; unknown type
;;(define-extern *debug-ray-offset* object) ;; unknown type
;;(define-extern *debug-nav-travel* object) ;; unknown type
;;(define-extern *color-black* object) ;; unknown type
;;(define-extern *color-gray* object) ;; unknown type
;;(define-extern *color-magenta* object) ;; unknown type
;;(define-extern *color-light-red* object) ;; unknown type
;;(define-extern *color-light-green* object) ;; unknown type
;;(define-extern *color-light-blue* object) ;; unknown type
;;(define-extern *color-light-cyan* object) ;; unknown type
;;(define-extern *color-light-magenta* object) ;; unknown type
;;(define-extern *color-light-yellow* object) ;; unknown type
;;(define-extern *color-dark-red* object) ;; unknown type
;;(define-extern *color-dark-green* object) ;; unknown type
;;(define-extern *color-dark-blue* object) ;; unknown type
;;(define-extern *color-dark-cyan* object) ;; unknown type
;;(define-extern *color-dark-magenta* object) ;; unknown type
;;(define-extern *color-dark-yellow* object) ;; unknown type
;;(define-extern *color-orange* object) ;; unknown type
;;(define-extern *nav-one-third* object) ;; unknown type
;;(define-extern *debug-offset* object) ;; unknown type
;;(define-extern *debug-ray-test* object) ;; unknown type
;;(define-extern *debug-ray-test-capture-mode* object) ;; unknown type
;;(define-extern *debug-ray-test-capture-output* object) ;; unknown type
;;(define-extern *test-ray-start-poly-id* object) ;; unknown type
;;(define-extern *test-ray-src-pos* object) ;; unknown type
;;(define-extern *test-ray-dest-pos* object) ;; unknown type


;; ----------------------
;; File - aligner
;; Source Path - engine/anim/aligner.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Nothing Defined in This File!


;; ----------------------
;; File - effect-control
;; Source Path - engine/game/effect-control.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern sound-name-with-material function)

;; - Unknowns

;;(define-extern *footstep-surface* object) ;; unknown type


;; ----------------------
;; File - water
;; Source Path - engine/gfx/water/water.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern splash-spawn function)
(define-extern part-water-splash-callback function)
(define-extern ocean-get-height function)
(define-extern birth-func-y->userdata function)
(define-extern birth-func-ocean-height function)
(define-extern check-water-level-drop function)
(define-extern check-water-level-drop-and-die function)
(define-extern check-water-level-above-and-die function)
(define-extern water-vol-init-by-other function)


;; ----------------------
;; File - collectables-part
;; Source Path - engine/game/collectables-part.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern eco-fadeout function)
(define-extern eco-track-root-prim-fadeout function)
(define-extern part-tracker-track-root function)
(define-extern part-tracker-move-to-target function)
(define-extern part-tracker-track-target function)
(define-extern sparticle-track-root-money function)


;; ----------------------
;; File - collectables
;; Source Path - engine/game/collectables.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype collectable (process-drawable)
  ((pickup-type     int32          :offset-assert 176)
   (pickup-amount   float          :offset-assert 180)
   (notify-parent   basic          :offset-assert 184)
   (old-base        vector :inline :offset-assert 192)
   (base            vector :inline :offset-assert 208)
   (extra-trans     vector :inline :offset-assert 224)
   (jump-pos        vector :inline :offset-assert 240)
   (flags           uint32         :offset-assert 256)
   (birth-time      uint64         :offset-assert 264)
   (collect-timeout uint64         :offset-assert 272)
   (fadeout-timeout uint64         :offset-assert 280)
   (bob-offset      uint64         :offset-assert 288)
   (bob-amount      float          :offset-assert 296)
   (pickup-handle   handle         :offset-assert 304) ;; not sure it's a handle
   (actor-pause     basic          :offset-assert 312)
   )

  (:methods
    (dummy-20 () none 20)
    (dummy-21 () none 21)
    )
  :heap-base #xd0

  :method-count-assert 22
  :size-assert         #x13c
  :flag-assert         #x1600d0013c
  )

;; L729
(deftype eco-collectable (collectable)
  ((eco-effect          basic          :offset-assert 316)
   (collect-effect      basic          :offset-assert 320)
   (collect-effect2     basic          :offset-assert 324)
   (collect-effect-time uint64         :offset-assert 328)
   (respawn-delay       uint64         :offset-assert 336)
   (sound-name          basic          :offset-assert 344)
   (target              uint64         :offset-assert 352)
   (suck-time           uint64         :offset-assert 360)
   (suck-y-offset       float          :offset-assert 368)
   (speed               vector :inline :offset-assert 384)
   (movie-pos-index     int32          :offset-assert 400)
   )

  (:methods
    (dummy-22 () none 22)
    (dummy-23 () none 23)
    (dummy-24 () none 24)
    (dummy-25 () none 25)
    (dummy-26 () none 26)
    (dummy-27 () none 27)
    (dummy-28 () none 28)
    (dummy-29 () none 29)
    (dummy-30 () none 30)
    )

  :heap-base #x130
  :method-count-assert 31
  :size-assert         #x194
  :flag-assert         #x1f01300194
  )

;; L729
(deftype eco (eco-collectable)
  ()
  :heap-base #x130
  :method-count-assert 31
  :size-assert         #x194
  :flag-assert         #x1f01300194
  )

(deftype eco-yellow (eco)
  ()
  :heap-base #x130
  :method-count-assert 31
  :size-assert         #x194
  :flag-assert         #x1f01300194
  )

(deftype eco-red (eco)
  ()
  :heap-base #x130
  :method-count-assert 31
  :size-assert         #x194
  :flag-assert         #x1f01300194
  )

(deftype eco-blue (eco)
  ()
  :heap-base #x130
  :method-count-assert 31
  :size-assert         #x194
  :flag-assert         #x1f01300194
  )

(deftype health (eco-collectable)
  ()
  :heap-base #x130
  :method-count-assert 31
  :size-assert         #x194
  :flag-assert         #x1f01300194
  )

(deftype eco-pill (eco-collectable)
  ()
  :heap-base #x130
  :method-count-assert 31
  :size-assert         #x194
  :flag-assert         #x1f01300194
  )

(deftype money (eco-collectable)
  ()
  :heap-base #x130
  :method-count-assert 31
  :size-assert         #x194
  :flag-assert         #x1f01300194
  )

;; L730
(deftype fuel-cell (eco-collectable)
  ((victory-anim basic :offset-assert 404)
   (state-object basic :offset-assert 408))
  :heap-base #x130
  :method-count-assert 31
  :size-assert         #x19c
  :flag-assert         #x1f0130019c
  )

;; L732
(deftype buzzer (eco-collectable)
  ((victory-anim basic :offset-assert 404))

  :heap-base #x130
  :method-count-assert 31
  :size-assert         #x198
  :flag-assert         #x1f01300198
  )

;; L728
(deftype ecovalve (process-drawable)
  ((offset        vector :inline :offset-assert 176)
   (offset-target vector :inline :offset-assert 192)
   (block-func basic :offset-assert 208))
  :heap-base #x70
  :method-count-assert 20
  :size-assert         #xd4
  :flag-assert         #x14007000d4
  )

;; L731
(deftype vent (process-drawable)
  ((show-particles      basic  :offset-assert 176)
   (collect-effect      basic  :offset-assert 180)
   (collect-effect2     basic  :offset-assert 184)
   (collect-effect-time uint64 :offset-assert 192)
   (blocker             basic  :offset-assert 200)
   (block-func          basic  :offset-assert 204)
   (pickup-handle       handle :offset-assert 208)) ;; not sure handle

  (:methods
    (dummy-20 () none 20)
    )

  :heap-base #x70
  :method-count-assert 21
  :size-assert         #xd8
  :flag-assert         #x15007000d8
  )

(deftype ventyellow (vent)
  ()
  :heap-base #x70
  :method-count-assert 21
  :size-assert         #xd8
  :flag-assert         #x15007000d8
  )

(deftype ventred (vent)
  ()
  :heap-base #x70
  :method-count-assert 21
  :size-assert         #xd8
  :flag-assert         #x15007000d8
  )

(deftype ventblue (vent)
  ()
  :heap-base #x70
  :method-count-assert 21
  :size-assert         #xd8
  :flag-assert         #x15007000d8
  )

(deftype ecovent (vent)
  ()
  :heap-base #x70
  :method-count-assert 21
  :size-assert         #xd8
  :flag-assert         #x15007000d8
  )

;; - Functions

(define-extern vent-standard-event-handler function)
(define-extern ecovalve-init-by-other function)
(define-extern birth-pickup-at-point function)
(define-extern fuel-cell-pick-anim function)
(define-extern othercam-init-by-other function)
(define-extern fuel-cell-animate function)
(define-extern add-blue-motion function)
(define-extern check-blue-suck function)
(define-extern initialize-eco-by-other function)
(define-extern add-blue-shake function)
(define-extern money-init-by-other function)
(define-extern money-init-by-other-no-bob function)
(define-extern fuel-cell-init-by-other function)
(define-extern fuel-cell-init-as-clone function)
(define-extern buzzer-init-by-other function)

;; - Symbols

(define-extern vent-wait-for-touch state) ;; unknown type
(define-extern vent-pickup state) ;; unknown type
(define-extern vent-blocked state) ;; unknown type
(define-extern *ecovalve-sg* skeleton-group) ;; unknown type
(define-extern ecovalve-idle state) ;; unknown type
(define-extern *eco-pill-count* int) ;; unknown type
(define-extern *buzzer-sg* skeleton-group) ;; unknown type
(define-extern fuel-cell-clone-anim state) ;; unknown type
(define-extern *fuel-cell-tune-pos* vector) ;; unknown type
(define-extern *fuel-cell-sg* skeleton-group) ;; unknown type
(define-extern *money-sg* skeleton-group) ;; unknown type


;; ----------------------
;; File - task-control
;; Source Path - engine/game/task/task-control.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern task-status->string (function task-status string))
(define-extern open-specific-task! (function game-task task-status int))
(define-extern task-exists? (function game-task task-status symbol))
(define-extern sages-kidnapped? (function symbol))

;; - Symbols

(define-extern *null-task-control* task-control)
(define-extern *task-controls* (array basic))
(define-extern *assistant-tasks* task-control)
(define-extern *assistant-village2-tasks* task-control)
(define-extern *gambler-tasks* task-control)
(define-extern *geologist-tasks* task-control)
(define-extern *mayor-tasks* task-control)
(define-extern *sage-tasks* task-control)
(define-extern *sage-bluehut-tasks* task-control)
(define-extern *oracle-village1-tasks* task-control)
(define-extern *oracle-village2-tasks* task-control)
(define-extern *oracle-village3-tasks* task-control)
(define-extern *miners-tasks* task-control)
(define-extern *sage-villagec-tasks* task-control)
(define-extern *citb-greensage-tasks* task-control)
(define-extern *citb-bluesage-tasks* task-control)
(define-extern *citb-redsage-tasks* task-control)
(define-extern *citb-yellowsage-tasks* task-control)


;; ----------------------
;; File - process-taskable
;; Source Path - engine/game/task/process-taskable.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern othercam-calc function)
(define-extern vector-for-ambient function)
(define-extern hide-hud function)
(define-extern hud-hidden? function)
(define-extern process-taskable-clean-up-after-talking function)
(define-extern process-taskable-hide-exit function)
(define-extern process-taskable-play-anim-code function)
(define-extern process-taskable-play-anim-trans function)
(define-extern process-taskable-anim-loop function)
(define-extern process-taskable-play-anim-enter function)
(define-extern process-taskable-play-anim-exit function)
(define-extern process-taskable-hide-handler function)
(define-extern process-taskable-hide-enter function)

;; - Unknowns

;;(define-extern othercam-running object) ;; unknown type


;; ----------------------
;; File - pov-camera
;; Source Path - engine/camera/pov-camera.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern pov-camera-play-and-reposition function)


;; ----------------------
;; File - powerups
;; Source Path - engine/game/powerups.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern eco-blue-glow function)
(define-extern cloud-track function)


;; ----------------------
;; File - crates
;; Source Path - engine/game/crates.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

; (deftype crate-bank (basic)
;   ((COLLIDE_YOFF           float  :offset-assert 4)
;    (COLLIDE_RADIUS         float  :offset-assert 8)
;    (DARKECO_EXPLODE_RADIUS float  :offset-assert 12)
;    )
;   :method-count-assert 9
;   :size-assert         #x10
;   :flag-assert         #x900000010
;   )

; (deftype crate (process-drawable)
;   ((smush               smush-control :inline :offset-assert 176)
;    (base                vector        :inline :offset-assert 208)
;    (look                basic                 :offset-assert 224)
;    (defense             basic                 :offset-assert 228)
;    (incomming-attack-id uint64                :offset-assert 232)
;    (target              uint64                :offset-assert 240)
;    (child-count         int32                 :offset-assert 248)
;    (victory-anim        basic                 :offset-assert 252)
;    )
;   :method-count-assert 30
;   :size-assert         #x100
;   :flag-assert         #x1e00900100
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

; (deftype barrel (crate)
;   ()
;   :method-count-assert 30
;   :size-assert         #x100
;   :flag-assert         #x1e00900100
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

; (deftype bucket (crate)
;   ()
;   :method-count-assert 30
;   :size-assert         #x100
;   :flag-assert         #x1e00900100
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

; (deftype crate-buzzer (crate)
;   ()
;   :method-count-assert 30
;   :size-assert         #x100
;   :flag-assert         #x1e00900100
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

; (deftype pickup-spawner (crate)
;   ((blocker basic  :offset-assert 256)
;    )
;   :method-count-assert 30
;   :size-assert         #x104
;   :flag-assert         #x1e00a00104
;   ;; inherited inspect of crate
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

;; - Functions

(define-extern crate-post function)
(define-extern crate-standard-event-handler function)
(define-extern crate-init-by-other function)

;; - Unknowns

;;(define-extern *crate-iron-sg* object) ;; unknown type
;;(define-extern *crate-steel-sg* object) ;; unknown type
;;(define-extern *crate-darkeco-sg* object) ;; unknown type
;;(define-extern *crate-barrel-sg* object) ;; unknown type
;;(define-extern *crate-bucket-sg* object) ;; unknown type
;;(define-extern *crate-wood-sg* object) ;; unknown type
;;(define-extern *CRATE-bank* object) ;; unknown type


;; ----------------------
;; File - hud
;; Source Path - engine/ui/hud.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern send-hud-increment-event function)
(define-extern hud-init-by-other function)

;; - Symbols

(define-extern hud-arriving state) ;; unknown type

;; - Unknowns

;;(define-extern hud-hidden object) ;; unknown type
;;(define-extern hud-leaving object) ;; unknown type
;;(define-extern hud-in object) ;; unknown type
;;(define-extern hud-collecting object) ;; unknown type


;; ----------------------
;; File - hud-classes
;; Source Path - engine/ui/hud-classes.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

; (deftype hud-pickups (hud)
;   ()
;   :method-count-assert 27
;   :size-assert         #x118
;   :flag-assert         #x1b00b00118
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     )
;   )

; (deftype hud-health (hud)
;   ((scale float  :offset-assert 280)
;    )
;   :method-count-assert 27
;   :size-assert         #x11c
;   :flag-assert         #x1b00b0011c
;   ;; inherited inspect of hud
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     )
;   )

; (deftype hud-money-all (hud)
;   ((x-scale     float   :offset-assert 280)
;    (y-scale     float   :offset-assert 284)
;    (y-pos       int32   :offset-assert 288)
;    (total-orbs  int32   :offset-assert 292)
;    (level-index int32   :offset-assert 296)
;    (start-time  uint64  :offset-assert 304)
;    )
;   :method-count-assert 27
;   :size-assert         #x138
;   :flag-assert         #x1b00d00138
;   ;; inherited inspect of hud
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     )
;   )

; (deftype hud-money (hud)
;   ((x-scale float  :offset-assert 280)
;    (y-scale float  :offset-assert 284)
;    (y-pos   int32  :offset-assert 288)
;    )
;   :method-count-assert 27
;   :size-assert         #x124
;   :flag-assert         #x1b00c00124
;   ;; inherited inspect of hud
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     )
;   )

; (deftype hud-fuel-cell (hud)
;   ((scale-starburst-3-x float  :offset-assert 280)
;    (scale-starburst-3-y float  :offset-assert 284)
;    (scale-starburst-4-x float  :offset-assert 288)
;    (scale-starburst-4-y float  :offset-assert 292)
;    (scale-icon          float  :offset-assert 296)
;    (scale-center        float  :offset-assert 300)
;    (icon-pos-y          int32  :offset-assert 304)
;    )
;   :method-count-assert 27
;   :size-assert         #x134
;   :flag-assert         #x1b00d00134
;   ;; inherited inspect of hud
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     )
;   )

; (deftype hud-buzzers (hud)
;   ((scale         float  :offset-assert 280)
;    (text-y-offset int32  :offset-assert 284)
;    )
;   :method-count-assert 27
;   :size-assert         #x120
;   :flag-assert         #x1b00b00120
;   ;; inherited inspect of hud
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     )
;   )

; (deftype hud-power (hud)
;   ((scale-timer   float  :offset-assert 280)
;    (scale-backing float  :offset-assert 284)
;    (scale-blue    float  :offset-assert 288)
;    )
;   :method-count-assert 27
;   :size-assert         #x124
;   :flag-assert         #x1b00c00124
;   ;; inherited inspect of hud
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     )
;   )

;; - Functions

(define-extern calculate-rotation-and-color-for-slice function)
(define-extern part-hud-health-01-func function)
(define-extern part-hud-health-02-func function)
(define-extern part-hud-health-03-func function)
(define-extern fuel-cell-hud-orbit-callback function)
(define-extern fuel-cell-hud-starburst-3-callback function)
(define-extern fuel-cell-hud-starburst-4-callback function)
(define-extern fuel-cell-hud-center-callback function)
(define-extern part-hud-buzzer-func function)
(define-extern part-hud-eco-timer-01-func function)
(define-extern part-hud-eco-timer-02-func function)
(define-extern part-hud-eco-timer-03-func function)
(define-extern part-hud-eco-timer-backing-func function)
(define-extern part-hud-eco-timer-func function)
(define-extern show-hud function)

;; - Unknowns

;;(define-extern *fuelcell-naked-sg* object) ;; unknown type


;; ----------------------
;; File - progress-static
;; Source Path - engine/ui/progress/progress-static.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Symbols

(define-extern *main-options* (array game-option))
(define-extern *title* (array game-option))
(define-extern *options* (array game-option))
(define-extern *main-options-demo* (array game-option))
(define-extern *main-options-demo-shared* (array game-option))
(define-extern *game-options* (array game-option))
(define-extern *game-options-japan* (array game-option))
(define-extern *game-options-demo* (array game-option))
(define-extern *graphic-options* (array game-option))
(define-extern *graphic-title-options-pal* (array game-option))
(define-extern *sound-options* (array game-option))
(define-extern *yes-no-options* (array game-option))
(define-extern *ok-options* (array game-option))
(define-extern *load-options* (array game-option))
(define-extern *save-options* (array game-option))
(define-extern *save-options-title* (array game-option))
(define-extern *options-remap* (array array))
(define-extern *language-name-remap* (array game-text-id))
(define-extern *task-egg-starting-x* (array int32))
(define-extern *game-counts* game-count-info)
(define-extern *level-task-data-remap* (array int32))
(define-extern *level-task-data* (array level-tasks-info))


;; ----------------------
;; File - progress-part
;; Source Path - engine/ui/progress/progress-part.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern part-progress-hud-left-func function)
(define-extern part-progress-hud-right-func function)
(define-extern part-progress-hud-orb-func function)
(define-extern part-progress-hud-buzzer-func function)
(define-extern part-progress-hud-button-func function)
(define-extern part-progress-hud-tint-func function)
(define-extern part-progress-card-slot-01-func function)
(define-extern part-progress-card-slot-02-func function)
(define-extern part-progress-card-slot-03-func function)
(define-extern part-progress-card-slot-04-func function)
(define-extern part-progress-card-cell-func function)
(define-extern part-progress-save-icon-func function)
(define-extern fuel-cell-progress-hud-orbit-callback function)


;; ----------------------
;; File - progress-draw
;; Source Path - engine/ui/progress/progress-draw.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern adjust-pos function)
(define-extern draw-percent-bar function)
(define-extern print-language-name function)
(define-extern hide-progress-icons function)


;; ----------------------
;; File - progress
;; Source Path - engine/ui/progress/progress.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

; (deftype progress-global-state (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; bad get label
;   )

;; - Functions

(define-extern get-next-task-up function)
(define-extern get-next-level-up function)
(define-extern get-next-level-down function)
(define-extern get-next-task-down function)
(define-extern make-levels-with-tasks-available-to-progress function)
(define-extern progress-init-by-other function)
(define-extern init-game-options function)
(define-extern make-current-level-available-to-progress (function none))

;; - Unknowns

;;(define-extern progress-normal object) ;; unknown type
;;(define-extern progress-going-out object) ;; unknown type
;;(define-extern progress-gone object) ;; unknown type
;;(define-extern *progress-state* object) ;; unknown type
;;(define-extern *progress-save-info* object) ;; unknown type
;;(define-extern progress-coming-in object) ;; unknown type
;;(define-extern *progress-stack* object) ;; unknown type
;;(define-extern progress-waiting object) ;; unknown type
;;(define-extern progress-debug object) ;; unknown type


;; ----------------------
;; File - credits
;; Source Path - engine/ui/credits.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern set-credits-font-color (function float none))
(define-extern draw-title-credits (function float none))
(define-extern draw-end-credits (function int symbol))

;; - Symbols

(define-extern *title-credits-scale* (array float))
(define-extern *title-credits-spacing* (array int32))


;; ----------------------
;; File - projectiles
;; Source Path - engine/game/projectiles.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

; (deftype search-info (structure)
;   ((point        vector :inline :offset-assert 0)
;    (best-point   vector :inline :offset-assert 16)
;    (match-handle uint64         :offset-assert 32)
;    (match        basic          :offset-assert 40)
;    (best         float          :offset-assert 44)
;    (radius       float          :offset-assert 48)
;    (rating       uint32         :offset-assert 52)
;    (require      uint32         :offset-assert 56)
;    (mask         uint32         :offset-assert 60)
;    (rot-base     vector :inline :offset-assert 64)
;    (rot-range    float          :offset-assert 80)
;    )
;   :method-count-assert 9
;   :size-assert         #x54
;   :flag-assert         #x900000054
;   )

;; - Functions

(define-extern projectile-collision-reaction function)
(define-extern projectile-update-velocity-space-wars function)
(define-extern find-nearest-attackable function)
(define-extern find-ground-and-draw-shadow function)
(define-extern spawn-projectile-blue function)

;; - Unknowns

;;(define-extern *search-info* object) ;; unknown type


;; ----------------------
;; File - ocean
;; Source Path - engine/gfx/ocean/ocean.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern ocean-interp-wave function)
(define-extern ocean-generate-verts function)
(define-extern draw-ocean-texture function)
(define-extern ocean-init-buffer function)
(define-extern draw-ocean-far function)
(define-extern draw-ocean-mid function)
(define-extern ocean-end-buffer function)
(define-extern draw-ocean-near function)
(define-extern init-ocean-far-regs function)
(define-extern render-ocean-far function)
(define-extern render-ocean-quad function)
(define-extern draw-large-polygon-ocean function)
(define-extern draw-ocean (function none))
(define-extern update-ocean (function none))

;; - Unknowns

(define-extern *ocean-map* ocean-map) ;; unknown type
;;(define-extern *swamp-low-ocean-marker* object) ;; unknown type


;; ----------------------
;; File - ocean-vu0
;; Source Path - engine/gfx/ocean/ocean-vu0.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Unknowns

;;(define-extern *ocean-vu0-work* object) ;; unknown type
;;(define-extern ocean-vu0-block object) ;; unknown type


;; ----------------------
;; File - ocean-texture
;; Source Path - engine/gfx/ocean/ocean-texture.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern ocean-texture-add-constants function)
(define-extern ocean-texture-add-envmap function)
(define-extern ocean-texture-add-verts function)
(define-extern ocean-texture-add-call-start function)
(define-extern ocean-texture-add-call-rest function)
(define-extern ocean-texture-add-verts-last function)
(define-extern ocean-texture-add-call-done function)
(define-extern ocean-texture-setup-constants function)

;; - Unknowns

;;(define-extern ocean-texture-vu1-block object) ;; unknown type
;;(define-extern *ocean-texture-work* object) ;; unknown type


;; ----------------------
;; File - ocean-mid
;; Source Path - engine/gfx/ocean/ocean-mid.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern ocean-mid-add-constants function)
(define-extern ocean-mid-add-call function)
(define-extern ocean-mid-add-upload function)
(define-extern ocean-mid-add-call-flush (function dma-buffer uint none))
(define-extern draw-ocean-transition (function dma-buffer none))
(define-extern draw-ocean-mid-seams function)
(define-extern ocean-seams-add-constants function)
(define-extern ocean-mid-add-upload-top function)
(define-extern ocean-mid-add-upload-bottom function)
(define-extern ocean-mid-add-upload-middle function)
(define-extern ocean-mid-camera-masks-bit? (function uint uint))
(define-extern ocean-mid-mask-ptrs-bit? (function uint uint))
(define-extern ocean-mid-add-upload-table function)
(define-extern ocean-mid-camera-masks-set! function)
(define-extern ocean-mid-add-matrices function)
(define-extern ocean-mid-check function)
(define-extern ocean-matrix*! function)
(define-extern ocean-mid-setup-constants function)
(define-extern ocean-vector-matrix*! function)

;; - Unknowns

;;(define-extern ocean-mid-block object) ;; unknown type


;; ----------------------
;; File - ocean-transition
;; Source Path - engine/gfx/ocean/ocean-transition.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern ocean-make-trans-camera-masks (function uint uint uint uint none))
(define-extern ocean-trans-add-upload-strip (function dma-buffer uint uint uint uint none))
(define-extern ocean-trans-add-constants (function dma-buffer none))
(define-extern draw-ocean-transition-seams (function dma-buffer none))
(define-extern ocean-trans-camera-masks-bit? function)
(define-extern ocean-trans-add-upload function)
(define-extern ocean-trans-mask-ptrs-bit? function)
(define-extern ocean-trans-add-upload-table function)
(define-extern ocean-transition-check function)
(define-extern ocean-trans-mask-ptrs-set! function)


;; ----------------------
;; File - ocean-near
;; Source Path - engine/gfx/ocean/ocean-near.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern ocean-near-add-constants function)
(define-extern ocean-near-add-heights function)
(define-extern ocean-near-add-call function)
(define-extern ocean-near-add-upload function)
(define-extern ocean-near-add-matrices function)
(define-extern ocean-near-setup-constants function)
(define-extern ocean-near-add-call-flush function)

;; - Unknowns

;;(define-extern ocean-near-block object) ;; unknown type


;; ----------------------
;; File - shadow
;; Source Path - engine/gfx/shadow/shadow.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern compute-and-draw-shadow function)
(define-extern draw-shadow function)
(define-extern add-fake-shadow-to-buffer function)
(define-extern swap-fake-shadow-buffers (function none))


;; ----------------------
;; File - eye
;; Source Path - engine/gfx/eye.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern convert-eye-data function)
(define-extern render-eyes function)
(define-extern update-eyes (function none))

;; - Unknowns

;;(define-extern *eye-work* object) ;; unknown type


;; ----------------------
;; File - glist-h
;; Source Path - engine/util/glist-h.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

(deftype glst-node (structure)
  ((next glst-node  :offset-assert 0)
   (prev glst-node  :offset-assert 4)
   )
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )

(deftype glst-named-node (glst-node)
  ((privname string     :offset-assert 8)
   )
  :method-count-assert 9
  :size-assert         #xc
  :flag-assert         #x90000000c
  )

(deftype glst-list (structure)
  ((head     glst-node  :offset-assert 0)
   (tail     glst-node  :offset-assert 4)
   (tailpred glst-node  :offset-assert 8)
   (numelem  int32      :offset-assert 12)
   )
  :method-count-assert 9
  :size-assert         #x10
  :flag-assert         #x900000010
  )

;; - Functions

(define-extern glst-next (function glst-node glst-node))
(define-extern glst-prev (function glst-node glst-node))
(define-extern glst-head (function glst-list glst-node))
(define-extern glst-tail (function glst-list glst-node))
(define-extern glst-end-of-list? (function glst-node symbol))
(define-extern glst-start-of-list? (function glst-node symbol))
(define-extern glst-empty? (function glst-list symbol))
(define-extern glst-node-name (function glst-named-node string))
(define-extern glst-set-name! (function glst-named-node string string))


;; ----------------------
;; File - glist
;; Source Path - engine/util/glist.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern glst-num-elements (function glst-list int))
(define-extern glst-insert-after (function glst-list glst-node glst-node glst-node))
(define-extern glst-insert-before (function glst-list glst-node glst-node glst-node))
(define-extern glst-remove (function glst-list glst-node glst-node))
(define-extern glst-remove-tail (function glst-list glst-node))
(define-extern glst-remove-head (function glst-list glst-node))
(define-extern glst-add-tail (function glst-list glst-node glst-node))
(define-extern glst-add-head (function glst-list glst-node glst-node))
(define-extern glst-init-list! (function glst-list glst-list))
(define-extern glst-find-node-by-name (function glst-list string glst-node))
(define-extern glst-get-node-by-index (function glst-list int glst-node))
(define-extern glst-length-of-longest-name (function glst-list int))
(define-extern glst-get-node-index (function glst-list glst-node int))


;; ----------------------
;; File - anim-tester
;; Source Path - engine/debug/anim-tester.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

; (deftype anim-test-sequence (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; bad get label
;   )

; (deftype anim-test-seq-item (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; bad get label
;   )

; (deftype anim-tester (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; unrecognized get op: (set! v1 process-drawable) parent was UNKNOWN
;   )

; (deftype list-control (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; bad get label
;   )

; (deftype list-field (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; bad get label
;   )

; (deftype DISP_LIST-bank (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; bad get label
;   )

; (deftype anim-tester-bank (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; bad get label
;   )

; (deftype anim-test-obj (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; bad get label
;   )

;; - Functions

(define-extern anim-test-edit-sequence-list-handler function)
(define-extern anim-test-seq-mark-as-edited function)
(define-extern anim-tester-start function)
(define-extern anim-tester-add-newobj function)
(define-extern anim-tester-stop function)
(define-extern initialize-anim-tester function)
(define-extern anim-tester-save-object-seqs function)
(define-extern anim-tester-num-print (function symbol float none))
(define-extern anim-test-obj-list-handler function)
(define-extern anim-tester-standard-event-handler function)
(define-extern anim-tester-reset function)
(define-extern anim-tester-get-playing-item function)
(define-extern anim-tester-update-anim-info function)
(define-extern anim-tester-interface function)
(define-extern display-list-control function)
(define-extern anim-test-anim-list-handler function)
(define-extern anim-test-sequence-list-handler function)
(define-extern anim-tester-disp-frame-num function)
(define-extern anim-test-seq-item-copy! function)
(define-extern anim-tester-adjust-frame function)
(define-extern anim-test-edit-seq-insert-item function)
(define-extern anim-tester-pick-item-setup function)
(define-extern anim-tester-save-all-objects function)
(define-extern anim-tester-real-post function)
(define-extern anim-test-obj-item-valid? function)
(define-extern anim-test-obj-init function)
(define-extern anim-test-sequence-init function)
(define-extern anim-test-obj-remove-invalid function)
(define-extern anim-tester-post function)
(define-extern anim-tester-string-get-frame!! function)
(define-extern anim-tester-load-object-seqs function)
(define-extern anim-tester-add-object function)
(define-extern anim-tester-set-name function)
(define-extern anim-tester-add-sequence function)

;; - Unknowns

;;(define-extern *anim-tester* object) ;; unknown type
;;(define-extern *ANIM_TESTER-bank* object) ;; unknown type
;;(define-extern anim-tester-process object) ;; unknown type
;;(define-extern anim-test-field-highlight-lw object) ;; unknown type
;;(define-extern *DISP_LIST-bank* object) ;; unknown type
(define-extern *debug-menu-context* debug-menu-context)


;; ----------------------
;; File - viewer
;; Source Path - engine/debug/viewer.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

; (deftype viewer (process-drawable)
;   ((janim basic  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb4
;   :flag-assert         #x14005000b4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

;; - Functions

(define-extern init-viewer-for-other function)
(define-extern actor-get-arg! function)
(define-extern init-viewer function)
(define-extern art-part-name function)
(define-extern add-a-bunch function)

;; - Unknowns

;;(define-extern *viewer* object) ;; unknown type
;;(define-extern viewer-ja-name object) ;; unknown type
;;(define-extern viewer-geo-name object) ;; unknown type
;;(define-extern *viewer-sg* object) ;; unknown type
;;(define-extern viewer-process object) ;; unknown type
;;(define-extern viewer-string object) ;; unknown type


;; ----------------------
;; File - part-tester
;; Source Path - engine/debug/part-tester.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Types

; (deftype part-tester (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; unrecognized get op: (set! v1 process) parent was UNKNOWN
;   )

;; - Functions

(define-extern part-tester-init-by-other function)
(define-extern start-part function)

;; - Unknowns

;;(define-extern *debug-part-dead-pool* object) ;; unknown type
;;(define-extern *part-tester* object) ;; unknown type
;;(define-extern part-tester-idle object) ;; unknown type
;;(define-extern *part-tester-name* object) ;; unknown type


;; ----------------------
;; File - default-menu
;; Source Path - engine/debug/default-menu.gc
;; Containing DGOs - ['GAME', 'ENGINE']
;; Version - 3

;; - Functions

(define-extern build-continue-menu (function debug-menu-context debug-menu-context)) ;; TODO - this is so simple...just iterating through a list of symbols...still confused though...
(define-extern debug-menu-make-camera-menu (function debug-menu-context debug-menu-item-submenu))
(define-extern debug-menu-make-shader-menu (function debug-menu-context debug-menu-item-submenu))
(define-extern debug-menu-make-instance-menu (function debug-menu-context debug-menu-item-submenu))
(define-extern debug-menu-make-task-menu (function debug-menu-context debug-menu-item-submenu))
(define-extern dm-current-continue (function function int object)) ;; TODO - game-info::17
(define-extern dm-task-get-money (function int int symbol))
(define-extern dm-levitator-ready (function int int symbol))
(define-extern dm-lavabike-ready (function int int symbol))
(define-extern dm-give-all-cells (function int int symbol))
(define-extern debug-menu-make-task-unknown-menu (function debug-menu-context debug-menu-context debug-menu-item))
(define-extern debug-menu-make-task-need-hint-menu (function debug-menu-context debug-menu-context debug-menu-item))
(define-extern debug-menu-make-task-need-introduction-menu (function debug-menu-context debug-menu-context debug-menu-item))
(define-extern debug-menu-make-task-need-reminder-a-menu (function debug-menu-context debug-menu-context debug-menu-item))
(define-extern debug-menu-make-task-need-reminder-menu (function debug-menu-context debug-menu-context debug-menu-item))
(define-extern debug-menu-make-task-need-reward-speech-menu (function debug-menu-context debug-menu-context debug-menu-item))
(define-extern debug-menu-make-task-need-resolution-menu (function debug-menu-context debug-menu-context debug-menu-item))
(define-extern dm-give-cell (function int none))
(define-extern build-instance-list (function none)) ;; TODO - drawable types aren't complete
(define-extern dm-edit-instance-toggle-pick-func (function int int symbol))
(define-extern dm-boolean-toggle-pick-func (function function int object)) ;; TODO
(define-extern build-shader-list (function object))
(define-extern all-texture-tweak-adjust (function texture-page-dir float object)) ;; TODO - texture related types
(define-extern debug-menu-make-camera-mode-menu (function int int object)) ;; TODO - depends on camera stuff yet merged
(define-extern dm-cam-externalize (function symbol int symbol))
(define-extern dm-cam-render-float (function int int float float float))
(define-extern dm-cam-settings-func (function int int symbol))
(define-extern dm-cam-settings-func-int (function int int debug-menu debug-menu debug-menu))
(define-extern debug-create-cam-restore (function none)) ;; TODO - level-group type isn't complete
(define-extern dm-cam-mode-func (function uint int object))
(define-extern dm-instance-pick-func (function string int basic))
(define-extern dm-enable-instance-func (function string int symbol))
(define-extern dm-shader-pick-func (function int int object)) ;; TODO - more texture stuff...
(define-extern debug-menu-node<? (function debug-menu debug-menu symbol))
(define-extern dm-subdiv-float (function symbol int float float float))
(define-extern dm-subdiv-int (function function int object)) ;; TODO - dependant on anim-tester
(define-extern dm-setting-language (function function int symbol))
(define-extern dm-subdiv-draw-func (function int int symbol))
(define-extern dm-ocean-subdiv-draw-func (function int int symbol))
(define-extern dm-time-of-day-func (function int int symbol))
(define-extern dm-time-of-day-func2 (function function int symbol)) ;; TODO
(define-extern dm-time-of-day-pick-func (function symbol int none)) ;; TODO - confirm time-of-day::time-of-day-setup
(define-extern dm-actor-marks-pick-func (function symbol int symbol))
(define-extern dm-compact-actor-pick-func (function int int object)) ;; TODO - what is *compact-actors*
(define-extern dm-actor-vis-pick-func (function symbol int symbol))
(define-extern dm-game-mode-pick-func (function symbol int symbol))
(define-extern dm-vu1-user-toggle-pick-func (function int int symbol))
(define-extern dm-vu1-user-set-pick-func (function int int symbol))
(define-extern dm-texture-user-toggle-pick-func (function int int symbol))
(define-extern dm-texture-user-set-pick-func (function int int symbol))
(define-extern dm-strip-lines-toggle-pick-func (function int int symbol))
(define-extern dm-strip-lines-set-pick-func (function int int symbol))
(define-extern dm-task-unknown (function int int symbol))
(define-extern dm-task-hint (function int int symbol))
(define-extern dm-task-introduction (function int int symbol))
(define-extern dm-task-reminder-a (function int int symbol))
(define-extern dm-task-reminder (function int int symbol))
(define-extern dm-task-reward-speech (function int int symbol))
(define-extern dm-task-resolution (function int int symbol))
(define-extern dm-anim-tester-flag-func (function int int none)) ;; TODO - *anim-tester*
(define-extern dm-anim-tester-func (function int none)) ;; TODO - *anim-tester*
(define-extern debug-menu-context-make-default-menus (function debug-menu-context debug-menu-context))
(define-extern popup-menu-context-make-default-menus (function debug-menu-context debug-menu-context))

;; - Unknowns

(define-extern *popup-menu-context* debug-menu-context) ;; unknown type
(define-extern *instance-shrub-menu* debug-menu) ;; unknown type
(define-extern *instance-tie-menu* debug-menu) ;; unknown type
(define-extern *enable-instance-tie-menu* debug-menu) ;; unknown type
(define-extern *shader-pick-menu* debug-menu) ;; unknown type
;;(define-extern cam-robotboss object) ;; unknown type
(define-extern *dm-cam-mode-interpolation* debug-menu) ;; unknown type


;; ----------------------
;; File - dir-tpages
;; Source Path - levels/common/dir-tpages.gd
;; Containing DGOs - ['GAME', 'ART']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-463
;; Source Path - levels/common/tpage-463.gd
;; Containing DGOs - ['GAME', 'ART']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-2
;; Source Path - levels/common/tpage-2.gd
;; Containing DGOs - ['GAME', 'ART']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-880
;; Source Path - levels/common/tpage-880.gd
;; Containing DGOs - ['GAME', 'ART']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-256
;; Source Path - levels/common/tpage-256.gd
;; Containing DGOs - ['GAME', 'ART']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1278
;; Source Path - levels/common/tpage-1278.gd
;; Containing DGOs - ['GAME', 'ART']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - texture-upload
;; Source Path - levels/common/texture-upload.gc
;; Containing DGOs - ['GAME', 'ART']
;; Version - 3

;; - Symbols

(define-extern *ocean-texture* texture) ;; unknown type


;; ----------------------
;; File - tpage-1032
;; Source Path - levels/common/tpage-1032.gd
;; Containing DGOs - ['GAME', 'ART']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-62
;; Source Path - levels/common/tpage-62.gd
;; Containing DGOs - ['GAME', 'ART']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1532
;; Source Path - levels/common/tpage-1532.gd
;; Containing DGOs - ['GAME', 'ART']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - fuel-cell-ag
;; Source Path - levels/common/fuel-cell-ag.gd
;; Containing DGOs - ['GAME', 'ART']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - money-ag
;; Source Path - levels/common/money-ag.gd
;; Containing DGOs - ['GAME', 'ART']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - buzzer-ag
;; Source Path - levels/common/buzzer-ag.gd
;; Containing DGOs - ['GAME', 'ART']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - ecovalve-ag-ART-GAME
;; Source Path - levels/common/ecovalve-ag-ART-GAME.gd
;; Containing DGOs - ['GAME', 'ART']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - ecovalve-ag-BEA
;; Source Path - levels/beach/ecovalve-ag-BEA.gd
;; Containing DGOs - ['BEA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - ecovalve-ag-CIT
;; Source Path - levels/citadel/ecovalve-ag-CIT.gd
;; Containing DGOs - ['CIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - ecovalve-ag-FIN
;; Source Path - levels/finalboss/ecovalve-ag-FIN.gd
;; Containing DGOs - ['FIN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - ecovalve-ag-JUB-JUN
;; Source Path - levels/jungle_common/ecovalve-ag-JUB-JUN.gd
;; Containing DGOs - ['JUB', 'JUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - ecovalve-ag-FIC-OGR
;; Source Path - levels/common/ecovalve-ag-FIC-OGR.gd
;; Containing DGOs - ['FIC', 'OGR']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - ecovalve-ag-LAV
;; Source Path - levels/lavatube/ecovalve-ag-LAV.gd
;; Containing DGOs - ['LAV']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - ecovalve-ag-MAI
;; Source Path - levels/maincave/ecovalve-ag-MAI.gd
;; Containing DGOs - ['MAI']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - ecovalve-ag-ROB
;; Source Path - levels/robocave/ecovalve-ag-ROB.gd
;; Containing DGOs - ['ROB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - ecovalve-ag-ROL
;; Source Path - levels/rolling/ecovalve-ag-ROL.gd
;; Containing DGOs - ['ROL']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - ecovalve-ag-SNO
;; Source Path - levels/snow/ecovalve-ag-SNO.gd
;; Containing DGOs - ['SNO']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - ecovalve-ag-SUB
;; Source Path - levels/sunkenb/ecovalve-ag-SUB.gd
;; Containing DGOs - ['SUB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - ecovalve-ag-SWA
;; Source Path - levels/swamp/ecovalve-ag-SWA.gd
;; Containing DGOs - ['SWA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - ecovalve-ag-TRA
;; Source Path - levels/training/ecovalve-ag-TRA.gd
;; Containing DGOs - ['TRA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - crate-ag
;; Source Path - levels/common/crate-ag.gd
;; Containing DGOs - ['GAME', 'ART']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - speaker-ag
;; Source Path - levels/common/speaker-ag.gd
;; Containing DGOs - ['GAME', 'ART']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - fuelcell-naked-ag
;; Source Path - levels/common/fuelcell-naked-ag.gd
;; Containing DGOs - ['GAME', 'ART']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - eichar-ag
;; Source Path - levels/common/eichar-ag.gd
;; Containing DGOs - ['GAME', 'ART']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - sidekick-ag
;; Source Path - levels/common/sidekick-ag.gd
;; Containing DGOs - ['GAME', 'ART']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - deathcam-ag
;; Source Path - levels/common/deathcam-ag.gd
;; Containing DGOs - ['GAME', 'ART']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - game-cnt
;; Source Path - levels/common/game-cnt.gd
;; Containing DGOs - ['GAME', 'ART']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - rigid-body-h
;; Source Path - levels/common/rigid-body-h.gc
;; Containing DGOs - ['GAME', 'COMMON', 'L1']
;; Version - 3

;; - Types

(deftype rigid-body (structure)
  ((mass                        float              :offset-assert 0)
   (inv-mass                    float              :offset-assert 4)
   (lin-momentum-damping-factor float              :offset-assert 8)
   (ang-momentum-damping-factor float              :offset-assert 12)
   (inertial-tensor             matrix     :inline :offset-assert 16)
   (inv-inertial-tensor         matrix     :inline :offset-assert 80)
   (cm-offset-joint             vector     :inline :offset-assert 144)
   (position                    vector     :inline :offset-assert 160)
   (rotation                    quaternion :inline :offset-assert 176)
   (lin-momentum                vector     :inline :offset-assert 192)
   (ang-momentum                vector     :inline :offset-assert 208)
   (lin-velocity                vector     :inline :offset-assert 224)
   (ang-velocity                vector     :inline :offset-assert 240)
   (inv-i-world                 matrix     :inline :offset-assert 256)
   (matrix                      matrix     :inline :offset-assert 320)
   (force                       vector     :inline :offset-assert 384)
   (torque                      vector     :inline :offset-assert 400)
   (max-ang-momentum            float              :offset-assert 416)
   (max-ang-velocity            float              :offset-assert 420)
   )
  :method-count-assert 23
  :size-assert         #x1a8
  :flag-assert         #x17000001a8
  (:methods
    (dummy-9 () none 9)
    (dummy-10 () none 10)
    (dummy-11 () none 11)
    (dummy-12 () none 12)
    (dummy-13 () none 13)
    (dummy-14 () none 14)
    (dummy-15 () none 15)
    (dummy-16 () none 16)
    (dummy-17 () none 17)
    (dummy-18 () none 18)
    (dummy-19 () none 19)
    (dummy-20 () none 20)
    (dummy-21 () none 21)
    (dummy-22 () none 22)
    )
  )

(deftype rigid-body-control-point (structure)
  ((local-pos vector :inline :offset-assert 0)
   (world-pos vector :inline :offset-assert 16)
   (velocity  vector :inline :offset-assert 32)
   )
  :method-count-assert 9
  :size-assert         #x30
  :flag-assert         #x900000030
  )


;; ----------------------
;; File - water-anim
;; Source Path - levels/common/water-anim.gc
;; Containing DGOs - ['GAME', 'COMMON', 'L1', 'WATER-AN']
;; Version - 3

;; - Types

; (deftype water-anim (water-vol)
;   ((look                int32  :offset-assert 212)
;    (play-ambient-sound? basic  :offset-assert 216)
;    )
;   :method-count-assert 30
;   :size-assert         #xdc
;   :flag-assert         #x1e007000dc
;   ;; inherited inspect of water-vol
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

; (deftype water-anim-look (structure)
;   ((skel-group         basic  :offset-assert 0)
;    (anim               int32  :offset-assert 4)
;    (ambient-sound-spec basic  :offset-assert 8)
;    )
;   :method-count-assert 9
;   :size-assert         #xc
;   :flag-assert         #x90000000c
;   )

;; - Unknowns

;;(define-extern *water-anim-look* object) ;; unknown type
;;(define-extern *water-anim-sunken-dark-eco-qbert-sg* object) ;; unknown type
;;(define-extern *water-anim-sunken-dark-eco-platform-room-sg* object) ;; unknown type
;;(define-extern *water-anim-sunken-dark-eco-helix-room-sg* object) ;; unknown type
;;(define-extern *water-anim-sunken-big-room-sg* object) ;; unknown type
;;(define-extern *water-anim-sunken-first-room-from-entrance-sg* object) ;; unknown type
;;(define-extern *water-anim-sunken-qbert-room-sg* object) ;; unknown type
;;(define-extern *water-anim-sunken-first-right-branch-sg* object) ;; unknown type
;;(define-extern *water-anim-sunken-circular-with-bullys-sg* object) ;; unknown type
;;(define-extern *water-anim-sunken-hall-with-one-whirlpool-sg* object) ;; unknown type
;;(define-extern *water-anim-sunken-hall-with-three-whirlpools-sg* object) ;; unknown type
;;(define-extern *water-anim-sunken-start-of-helix-slide-sg* object) ;; unknown type
;;(define-extern *water-anim-sunken-room-above-exit-chamber-sg* object) ;; unknown type
;;(define-extern *water-anim-sunken-hall-before-big-room-sg* object) ;; unknown type
;;(define-extern *water-anim-sunken-short-piece-sg* object) ;; unknown type
;;(define-extern *water-anim-sunken-big-room-upper-water-sg* object) ;; unknown type
;;(define-extern *water-anim-maincave-center-pool-sg* object) ;; unknown type
;;(define-extern *water-anim-maincave-lower-right-pool-sg* object) ;; unknown type
;;(define-extern *water-anim-maincave-mid-right-pool-sg* object) ;; unknown type
;;(define-extern *water-anim-maincave-lower-left-pool-sg* object) ;; unknown type
;;(define-extern *water-anim-maincave-mid-left-pool-sg* object) ;; unknown type
;;(define-extern *water-anim-maincave-water-with-crystal-sg* object) ;; unknown type
;;(define-extern *water-anim-robocave-main-pool-sg* object) ;; unknown type
;;(define-extern *water-anim-misty-mud-by-arena-sg* object) ;; unknown type
;;(define-extern *water-anim-misty-mud-above-skeleton-sg* object) ;; unknown type
;;(define-extern *water-anim-misty-mud-behind-skeleton-sg* object) ;; unknown type
;;(define-extern *water-anim-misty-mud-above-skull-back-sg* object) ;; unknown type
;;(define-extern *water-anim-misty-mud-above-skull-front-sg* object) ;; unknown type
;;(define-extern *water-anim-misty-mud-other-near-skull-sg* object) ;; unknown type
;;(define-extern *water-anim-misty-mud-near-skull-sg* object) ;; unknown type
;;(define-extern *water-anim-misty-mud-under-spine-sg* object) ;; unknown type
;;(define-extern *water-anim-misty-mud-by-dock-sg* object) ;; unknown type
;;(define-extern *water-anim-misty-mud-island-near-dock-sg* object) ;; unknown type
;;(define-extern *water-anim-misty-mud-lonely-island-sg* object) ;; unknown type
;;(define-extern *water-anim-misty-dark-eco-pool-sg* object) ;; unknown type
;;(define-extern *water-anim-ogre-lava-sg* object) ;; unknown type
;;(define-extern *water-anim-jungle-river-sg* object) ;; unknown type
;;(define-extern *water-anim-village3-lava-sg* object) ;; unknown type
;;(define-extern *water-anim-training-lake-sg* object) ;; unknown type
;;(define-extern *water-anim-darkcave-water-with-crystal-sg* object) ;; unknown type
;;(define-extern *water-anim-rolling-water-back-sg* object) ;; unknown type
;;(define-extern *water-anim-rolling-water-front-sg* object) ;; unknown type
;;(define-extern *water-anim-finalboss-dark-eco-pool-sg* object) ;; unknown type
;;(define-extern *water-anim-lavatube-energy-lava-sg* object) ;; unknown type
;;(define-extern *water-anim-village1-rice-paddy-sg* object) ;; unknown type
;;(define-extern *water-anim-village1-fountain-sg* object) ;; unknown type
;;(define-extern *water-anim-village1-rice-paddy-mid-sg* object) ;; unknown type
;;(define-extern *water-anim-village1-rice-paddy-top-sg* object) ;; unknown type
;;(define-extern *water-anim-village2-bucket-sg* object) ;; unknown type


;; ----------------------
;; File - dark-eco-pool
;; Source Path - levels/common/dark-eco-pool.gc
;; Containing DGOs - ['GAME', 'COMMON', 'L1']
;; Version - 3

;; - Types

; (deftype dark-eco-pool (water-anim)
;   ()
;   :method-count-assert 30
;   :size-assert         #xdc
;   :flag-assert         #x1e007000dc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

;; - Unknowns

;;(define-extern ripple-for-dark-eco-pool object) ;; unknown type
;;(define-extern ripple-for-misty-dark-eco-pool object) ;; unknown type
;;(define-extern ripple-for-maincave-dark-eco-pool object) ;; unknown type
;;(define-extern ripple-for-sunken-dark-eco-helix-room object) ;; unknown type
;;(define-extern ripple-for-finalboss-dark-eco-pool object) ;; unknown type


;; ----------------------
;; File - rigid-body
;; Source Path - levels/common/rigid-body.gc
;; Containing DGOs - ['GAME', 'COMMON', 'L1']
;; Version - 3

;; - Types

; (deftype rigid-body-platform-constants (structure)
;   ((drag-factor           float   :offset-assert 0)
;    (buoyancy-factor       float   :offset-assert 4)
;    (max-buoyancy-depth    meters  :offset-assert 8)
;    (gravity-factor        float   :offset-assert 12)
;    (gravity               meters  :offset-assert 16)
;    (player-weight         meters  :offset-assert 20)
;    (player-bonk-factor    float   :offset-assert 24)
;    (player-dive-factor    float   :offset-assert 28)
;    (player-force-distance meters  :offset-assert 32)
;    (player-force-clamp    meters  :offset-assert 36)
;    (player-force-timeout  uint64  :offset-assert 40)
;    (explosion-force       meters  :offset-assert 48)
;    (linear-damping        float   :offset-assert 52)
;    (angular-damping       float   :offset-assert 56)
;    (control-point-count   int32   :offset-assert 60)
;    (mass                  float   :offset-assert 64)
;    (inertial-tensor-x     meters  :offset-assert 68)
;    (inertial-tensor-y     meters  :offset-assert 72)
;    (inertial-tensor-z     meters  :offset-assert 76)
;    (cm-joint-x            meters  :offset-assert 80)
;    (cm-joint-y            meters  :offset-assert 84)
;    (cm-joint-z            meters  :offset-assert 88)
;    (idle-distance         meters  :offset-assert 92)
;    (platform              basic   :offset-assert 96)
;    (sound-name            basic   :offset-assert 100)
;    )
;   :method-count-assert 9
;   :size-assert         #x68
;   :flag-assert         #x900000068
;   )

; (deftype rigid-body-control-point-inline-array (inline-array-class)
;   ((length           int32            :offset-assert 4)
;    (allocated-length int32            :offset-assert 8)
;    (data             UNKNOWN :dynamic :offset-assert 16)
;    )
;   :method-count-assert 9
;   :size-assert         #x10
;   :flag-assert         #x900000010
;   )

; (deftype rigid-body-platform (process-drawable)
;   ((info                  rigid-body-platform-constants         :offset-assert 176)
;    (rbody                 rigid-body                    :inline :offset-assert 192)
;    (control-point-array   basic                                 :offset-assert 616)
;    (player-velocity       vector                        :inline :offset-assert 624)
;    (player-velocity-prev  vector                        :inline :offset-assert 640)
;    (player-force-position vector                        :inline :offset-assert 656)
;    (player-force          vector                        :inline :offset-assert 672)
;    (sim-time-remaining    float                                 :offset-assert 688)
;    (float-height-offset   float                                 :offset-assert 692)
;    (player-attack-id      int32                                 :offset-assert 696)
;    (player-bonk-timeout   uint64                                :offset-assert 704)
;    (water-anim            basic                                 :offset-assert 712)
;    (player-contact        basic                                 :offset-assert 716)
;    (player-impulse        basic                                 :offset-assert 720)
;    )
;   :method-count-assert 35
;   :size-assert         #x2d4
;   :flag-assert         #x23027002d4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     )
;   )

;; - Functions

(define-extern matrix-3x3-triple-transpose-product function)
(define-extern rigid-body-platform-event-handler function)
(define-extern rigid-body-platform-post function)

;; - Unknowns

;;(define-extern *rigid-body-platform-constants* object) ;; unknown type


;; ----------------------
;; File - nav-enemy-h
;; Source Path - levels/common/nav-enemy-h.gc
;; Containing DGOs - ['GAME', 'COMMON', 'L1']
;; Version - 3

;; - Types

(deftype nav-enemy-info (basic)
  ((idle-anim                 int32     :offset-assert 4)
   (walk-anim                 int32     :offset-assert 8)
   (turn-anim                 int32     :offset-assert 12)
   (notice-anim               int32     :offset-assert 16)
   (run-anim                  int32     :offset-assert 20)
   (jump-anim                 int32     :offset-assert 24)
   (jump-land-anim            int32     :offset-assert 28)
   (victory-anim              int32     :offset-assert 32)
   (taunt-anim                int32     :offset-assert 36)
   (die-anim                  int32     :offset-assert 40)
   (neck-joint                int32     :offset-assert 44)
   (player-look-at-joint      int32     :offset-assert 48)
   (run-travel-speed          meters    :offset-assert 52)
   (run-rotate-speed          degrees   :offset-assert 56)
   (run-acceleration          meters    :offset-assert 60)
   (run-turn-time             seconds   :offset-assert 64)
   (walk-travel-speed         meters    :offset-assert 72)
   (walk-rotate-speed         degrees   :offset-assert 76)
   (walk-acceleration         meters    :offset-assert 80)
   (walk-turn-time            seconds   :offset-assert 88)
   (attack-shove-back         meters    :offset-assert 96)
   (attack-shove-up           meters    :offset-assert 100)
   (shadow-size               meters    :offset-assert 104)
   (notice-nav-radius         meters    :offset-assert 108)
   (nav-nearest-y-threshold   meters    :offset-assert 112)
   (notice-distance           meters    :offset-assert 116)
   (proximity-notice-distance meters    :offset-assert 120)
   (stop-chase-distance       meters    :offset-assert 124)
   (frustration-distance      meters    :offset-assert 128)
   (frustration-time          uint64    :offset-assert 136)
   (die-anim-hold-frame       float     :offset-assert 144)
   (jump-anim-start-frame     float     :offset-assert 148)
   (jump-land-anim-end-frame  float     :offset-assert 152)
   (jump-height-min           meters    :offset-assert 156)
   (jump-height-factor        float     :offset-assert 160)
   (jump-start-anim-speed     float     :offset-assert 164)
   (shadow-max-y              meters    :offset-assert 168)
   (shadow-min-y              meters    :offset-assert 172)
   (shadow-locus-dist         meters    :offset-assert 176)
   (use-align                 basic     :offset-assert 180)
   (draw-shadow               basic     :offset-assert 184)
   (move-to-ground            basic     :offset-assert 188)
   (hover-if-no-ground        basic     :offset-assert 192)
   (use-momentum              basic     :offset-assert 196)
   (use-flee                  basic     :offset-assert 200)
   (use-proximity-notice      basic     :offset-assert 204)
   (use-jump-blocked          basic     :offset-assert 208)
   (use-jump-patrol           basic     :offset-assert 212)
   (gnd-collide-with          uint64    :offset-assert 216)
   (debug-draw-neck           basic     :offset-assert 224)
   (debug-draw-jump           basic     :offset-assert 228)
   )
  :method-count-assert 9
  :size-assert         #xe8
  :flag-assert         #x9000000e8
  )

(deftype nav-enemy (process-drawable)
  ((hit-from-dir        vector     :inline :offset-assert 176)
   (event-param-point   vector     :inline :offset-assert 192)
   (frustration-point   vector     :inline :offset-assert 208)
   (jump-dest           vector     :inline :offset-assert 224)
   (jump-trajectory     trajectory :inline :offset-assert 240)
   (jump-time           uint64             :offset-assert 280)
   (nav-info            basic              :offset-assert 288)
   (target-speed        float              :offset-assert 292)
   (momentum-speed      float              :offset-assert 296)
   (acceleration        float              :offset-assert 300)
   (rotate-speed        float              :offset-assert 304)
   (turn-time           uint64             :offset-assert 312)
   (frustration-time    uint64             :offset-assert 320)
   (speed-scale         float              :offset-assert 328)
   (neck                basic              :offset-assert 332)
   (reaction-time       uint64             :offset-assert 336)
   (notice-time         uint64             :offset-assert 344)
   (state-timeout       uint64             :offset-assert 352)
   (free-time           uint64             :offset-assert 360)
   (touch-time          uint64             :offset-assert 368)
   (nav-enemy-flags     uint32             :offset-assert 376)
   (incomming-attack-id uint64             :offset-assert 384)
   (jump-return-state   basic              :offset-assert 392)
   (rand-gen            basic              :offset-assert 396)
   )
  :heap-base #x120
  :method-count-assert 76
  :size-assert         #x190
  :flag-assert         #x4c01200190
  ;; inherited inspect of process-drawable
  (:methods
    (dummy-20 () none 20)
    (dummy-21 () none 21)
    (dummy-22 () none 22)
    (dummy-23 () none 23)
    (dummy-24 () none 24)
    (dummy-25 () none 25)
    (dummy-26 () none 26)
    (dummy-27 () none 27)
    (dummy-28 () none 28)
    (dummy-29 () none 29)
    (dummy-30 () none 30)
    (dummy-31 () none 31)
    (dummy-32 () none 32)
    (dummy-33 () none 33)
    (dummy-34 () none 34)
    (dummy-35 () none 35)
    (dummy-36 () none 36)
    (dummy-37 () none 37)
    (dummy-38 () none 38)
    (dummy-39 () none 39)
    (dummy-40 () none 40)
    (dummy-41 () none 41)
    (dummy-42 () none 42)
    (dummy-43 () none 43)
    (dummy-44 () none 44)
    (dummy-45 () none 45)
    (dummy-46 () none 46)
    (dummy-47 () none 47)
    (dummy-48 () none 48)
    (dummy-49 () none 49)
    (dummy-50 () none 50)
    (dummy-51 () none 51)
    (dummy-52 () none 52)
    (dummy-53 () none 53)
    (dummy-54 () none 54)
    (dummy-55 () none 55)
    (dummy-56 () none 56)
    (dummy-57 () none 57)
    (dummy-58 () none 58)
    (dummy-59 () none 59)
    (dummy-60 () none 60)
    (dummy-61 () none 61)
    (dummy-62 () none 62)
    (dummy-63 () none 63)
    (dummy-64 () none 64)
    (dummy-65 () none 65)
    (dummy-66 () none 66)
    (dummy-67 () none 67)
    (dummy-68 () none 68)
    (dummy-69 () none 69)
    (dummy-70 () none 70)
    (dummy-71 () none 71)
    (dummy-72 () none 72)
    (dummy-73 () none 73)
    (dummy-74 () none 74)
    (dummy-75 () none 75)
    )
  )


;; ----------------------
;; File - nav-enemy
;; Source Path - levels/common/nav-enemy.gc
;; Containing DGOs - ['GAME', 'COMMON', 'L1']
;; Version - 3

;; - Functions

(define-extern nav-enemy-rnd-int-range function)
(define-extern nav-enemy-initialize-jump function)
(define-extern nav-enemy-neck-control-look-at function)
(define-extern nav-enemy-facing-point? function)
(define-extern nav-enemy-turn-to-face-point function)
(define-extern nav-enemy-execute-jump function)
(define-extern nav-enemy-jump-land-anim function)
(define-extern nav-enemy-rnd-float-range function)
(define-extern nav-enemy-common-post function)
(define-extern nav-enemy-execute-custom-jump function)
(define-extern nav-enemy-initialize-custom-jump function)
(define-extern nav-enemy-simple-post function)
(define-extern nav-enemy-fall-and-play-death-anim function)
(define-extern nav-enemy-neck-control-inactive function)
(define-extern nav-enemy-frustrated? function)
(define-extern nav-enemy-player-at-frustration-point? function)
(define-extern nav-enemy-reset-frustration function)
(define-extern nav-enemy-rnd-go-idle? function)
(define-extern nav-enemy-notice-player? function)
(define-extern nav-enemy-turn-to-face-dir function)
(define-extern nav-enemy-facing-direction? function)
(define-extern nav-enemy-test-point-near-nav-mesh? function)
(define-extern nav-enemy-travel-post function)
(define-extern nav-enemy-get-new-patrol-point function)
(define-extern nav-enemy-set-hit-from-direction function)
(define-extern nav-enemy-send-attack function)
(define-extern nav-enemy-rnd-int-count function)
(define-extern nav-enemy-rnd-float function)
(define-extern nav-enemy-rnd-percent? function)
(define-extern nav-enemy-default-event-handler function)
(define-extern nav-enemy-jump-event-handler function)
(define-extern process-drawable-death-event-handler function)
(define-extern nav-enemy-patrol-post function)
(define-extern nav-enemy-chase-post function)
(define-extern nav-enemy-flee-post function)
(define-extern nav-enemy-face-player-post function)
(define-extern nav-enemy-falling-post function)
(define-extern nav-enemy-death-post function)
(define-extern nav-enemy-player-vulnerable? function)
(define-extern nav-enemy-facing-player? function)
(define-extern nav-enemy-test-nav-mesh-intersection-xz? function)
(define-extern nav-enemy-test-point-in-nav-mesh? function)
(define-extern nav-enemy-set-base-collide-sphere-collide-with function)
(define-extern ja-group-index? function)
(define-extern nav-enemy-jump-post function)
(define-extern nav-enemy-jump-land-post function)
(define-extern nav-enemy-init-by-other function)

;; - Unknowns

;;(define-extern *nav-enemy-dummy-shadow-control* object) ;; unknown type


;; ----------------------
;; File - baseplat
;; Source Path - levels/common/baseplat.gc
;; Containing DGOs - ['GAME', 'COMMON', 'L1']
;; Version - 3

;; - Types

; (deftype baseplat (process-drawable)
;   ((smush     smush-control :inline :offset-assert 176)
;    (basetrans vector        :inline :offset-assert 208)
;    (bouncing  basic                 :offset-assert 224)
;    )
;   :method-count-assert 27
;   :size-assert         #xe4
;   :flag-assert         #x1b008000e4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     )
;   )

; (deftype eco-door (process-drawable)
;   ((speed          float           :offset-assert 176)
;    (open-distance  float           :offset-assert 180)
;    (close-distance float           :offset-assert 184)
;    (out-dir        vector  :inline :offset-assert 192)
;    (open-sound     uint128         :offset-assert 208)
;    (close-sound    uint128         :offset-assert 224)
;    (state-actor    basic           :offset-assert 240)
;    (flags          int32           :offset-assert 244)
;    (locked         basic           :offset-assert 248)
;    (auto-close     basic           :offset-assert 252)
;    (one-way        basic           :offset-assert 256)
;    )
;   :method-count-assert 27
;   :size-assert         #x104
;   :flag-assert         #x1b00a00104
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     )
;   )

;; - Functions

(define-extern plat-code function)
(define-extern plat-trans function)
(define-extern plat-post function)
(define-extern plat-event function)
(define-extern eco-door-event-handler function)


;; ----------------------
;; File - basebutton
;; Source Path - levels/common/basebutton.gc
;; Containing DGOs - ['GAME', 'COMMON', 'L1']
;; Version - 3

;; - Types

; (deftype basebutton (process-drawable)
;   ((down?             basic              :offset-assert 176)
;    (spawned-by-other? basic              :offset-assert 180)
;    (move-to?          basic              :offset-assert 184)
;    (notify-actor      basic              :offset-assert 188)
;    (timeout           float              :offset-assert 192)
;    (button-id         int32              :offset-assert 196)
;    (event-going-down  basic              :offset-assert 200)
;    (event-down        basic              :offset-assert 204)
;    (event-going-up    basic              :offset-assert 208)
;    (event-up          basic              :offset-assert 212)
;    (anim-speed        float              :offset-assert 216)
;    (move-to-pos       vector     :inline :offset-assert 224)
;    (move-to-quat      quaternion :inline :offset-assert 240)
;    )
;   :method-count-assert 32
;   :size-assert         #x100
;   :flag-assert         #x2000900100
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     )
;   )

; (deftype warp-gate (process-drawable)
;   ((level      basic  :offset-assert 176)
;    (level-slot int32  :offset-assert 180)
;    (min-slot   int32  :offset-assert 184)
;    (max-slot   int32  :offset-assert 188)
;    )
;   :method-count-assert 24
;   :size-assert         #xc0
;   :flag-assert         #x18005000c0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     )
;   )

;; - Functions

(define-extern basebutton-init-by-other function)

;; - Unknowns

;;(define-extern *warp-jump-mods* object) ;; unknown type
;;(define-extern target-warp-out object) ;; unknown type
;;(define-extern *warp-info* object) ;; unknown type
;;(define-extern *generic-button-sg* object) ;; unknown type


;; ----------------------
;; File - tippy
;; Source Path - levels/common/tippy.gc
;; Containing DGOs - ['GAME', 'COMMON', 'L1']
;; Version - 3

;; - Types

; (deftype tippy (structure)
;   ((axis       vector     :inline :offset-assert 0)
;    (angle      float              :offset-assert 16)
;    (orig       quaternion :inline :offset-assert 32)
;    (dist-ratio float              :offset-assert 48)
;    (damping    float              :offset-assert 52)
;    (1-damping  float              :offset-assert 56)
;    )
;   :method-count-assert 11
;   :size-assert         #x3c
;   :flag-assert         #xb0000003c
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     )
;   )


;; ----------------------
;; File - joint-exploder
;; Source Path - levels/common/joint-exploder.gc
;; Containing DGOs - ['GAME', 'COMMON', 'L1']
;; Version - 3

;; - Types

; (deftype joint-exploder-tuning (structure)
;   ((explosion                   uint64         :offset-assert 0)
;    (duration                    uint64         :offset-assert 8)
;    (gravity                     float          :offset-assert 16)
;    (rot-speed                   float          :offset-assert 20)
;    (fountain-rand-transv-lo     vector :inline :offset-assert 32)
;    (fountain-rand-transv-hi     vector :inline :offset-assert 48)
;    (away-from-focal-pt          vector :inline :offset-assert 32)
;    (away-from-rand-transv-xz-lo float          :offset-assert 48)
;    (away-from-rand-transv-xz-hi float          :offset-assert 52)
;    (away-from-rand-transv-y-lo  float          :offset-assert 56)
;    (away-from-rand-transv-y-hi  float          :offset-assert 60)
;    )
;   :method-count-assert 9
;   :size-assert         #x40
;   :flag-assert         #x900000040
;   )

; (deftype joint-exploder-static-joint-params (structure)
;   ((joint-index        int16  :offset-assert 0)
;    (parent-joint-index int16  :offset-assert 2)
;    )
;   :method-count-assert 9
;   :size-assert         #x4
;   :flag-assert         #x900000004
;   )

; (deftype joint-exploder-static-params (basic)
;   ((joints basic  :offset-assert 4)
;    )
;   :method-count-assert 9
;   :size-assert         #x8
;   :flag-assert         #x900000008
;   )

; (deftype joint-exploder-joint (structure)
;   ((next        int16          :offset-assert 0)
;    (prev        int16          :offset-assert 2)
;    (joint-index int16          :offset-assert 4)
;    (rspeed      float          :offset-assert 8)
;    (mat         matrix :inline :offset-assert 16)
;    (rmat        matrix :inline :offset-assert 80)
;    (transv      vector :inline :offset-assert 144)
;    (prev-pos    vector :inline :offset-assert 160)
;    )
;   :method-count-assert 9
;   :size-assert         #xb0
;   :flag-assert         #x9000000b0
;   )

; (deftype joint-exploder-joints (basic)
;   ((num-joints int32            :offset-assert 4)
;    (joint      UNKNOWN :dynamic :offset-assert 16)
;    )
;   :method-count-assert 9
;   :size-assert         #x10
;   :flag-assert         #x900000010
;   )

; (deftype joint-exploder-list (structure)
;   ((head        int32                :offset-assert 0)
;    (pre-moved?  basic                :offset-assert 4)
;    (bbox-valid? basic                :offset-assert 8)
;    (bbox        bounding-box :inline :offset-assert 16)
;    )
;   :method-count-assert 9
;   :size-assert         #x30
;   :flag-assert         #x900000030
;   )

; (deftype joint-exploder (process-drawable)
;   ((die-if-below-y             float                         :offset-assert 176)
;    (die-if-beyond-xz-dist-sqrd float                         :offset-assert 180)
;    (joints                     basic                         :offset-assert 184)
;    (static-params              basic                         :offset-assert 188)
;    (anim                       basic                         :offset-assert 192)
;    (scale-vector               vector                :inline :offset-assert 208)
;    (tuning                     joint-exploder-tuning :inline :offset-assert 224)
;    (lists                      UNKNOWN               5       :offset-assert 288)
;    )
;   :method-count-assert 29
;   :size-assert         #x210
;   :flag-assert         #x1d01a00210
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     )
;   )

;; - Functions

(define-extern joint-exploder-joint-callback function)
(define-extern joint-exploder-init-by-other function)

;; - Unknowns

;;(define-extern joint-exploder-shatter object) ;; unknown type


;; ----------------------
;; File - babak
;; Source Path - levels/common/babak.gc
;; Containing DGOs - ['GAME', 'COMMON', 'L1']
;; Version - 3

;; - Types

; (deftype babak (nav-enemy)
;   ()
;   :method-count-assert 76
;   :size-assert         #x190
;   :flag-assert         #x4c01200190
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

;; - Unknowns

;;(define-extern *babak-sg* object) ;; unknown type
;;(define-extern *babak-nav-enemy-info* object) ;; unknown type


;; ----------------------
;; File - sharkey
;; Source Path - levels/common/sharkey.gc
;; Containing DGOs - ['GAME', 'COMMON', 'L1']
;; Version - 3

;; - Types

; (deftype sharkey (nav-enemy)
;   ((dir               vector :inline :offset-assert 400)
;    (spawn-point       vector :inline :offset-assert 416)
;    (scale             float          :offset-assert 432)
;    (anim-speed        float          :offset-assert 436)
;    (y-max             meters         :offset-assert 440)
;    (y-min             meters         :offset-assert 444)
;    (attack-time       float          :offset-assert 448)
;    (player-water-time uint64         :offset-assert 456)
;    (player-in-water   basic          :offset-assert 464)
;    (last-y            float          :offset-assert 468)
;    (spawn-distance    meters         :offset-assert 472)
;    (chase-speed       meters         :offset-assert 476)
;    (y-speed           meters         :offset-assert 480)
;    (sound-id          sound-id       :offset-assert 484)
;    (enable-patrol     basic          :offset-assert 488)
;    )
;   :method-count-assert 76
;   :size-assert         #x1ec
;   :flag-assert         #x4c018001ec
;   ;; inherited inspect of nav-enemy
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

;; - Functions

(define-extern sharkey-get-player-position function)
(define-extern sharkey-follow-trajectory function)
(define-extern sharkey-reset-position function)
(define-extern sharkey-notice-player? function)
(define-extern sharkey-move-to-attack-position function)

;; - Unknowns

;;(define-extern *sharkey-sg* object) ;; unknown type
;;(define-extern *sharkey-nav-enemy-info* object) ;; unknown type


;; ----------------------
;; File - orb-cache
;; Source Path - levels/common/orb-cache.gc
;; Containing DGOs - ['GAME', 'COMMON', 'L1']
;; Version - 3

;; - Types

; (deftype orb-cache-top (baseplat)
;   ((active-distance   float      :offset-assert 228)
;    (inactive-distance float      :offset-assert 232)
;    (money-list        UNKNOWN 60 :offset-assert 240)
;    (money-pos-list    UNKNOWN 60 :offset-assert 720)
;    (money-pos-actual  UNKNOWN 60 :offset-assert 960)
;    (platform-pos      float      :offset-assert 1200)
;    (root-pos          float      :offset-assert 1204)
;    (money             int32      :offset-assert 1208)
;    (activated         basic      :offset-assert 1212)
;    )
;   :method-count-assert 29
;   :size-assert         #x4c0
;   :flag-assert         #x1d045004c0
;   ;; inherited inspect of baseplat
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     )
;   )

;; - Unknowns

;;(define-extern *orb-cache-top-sg* object) ;; unknown type
;;(define-extern orb-cache-top-complete object) ;; unknown type
;;(define-extern orb-cache-top-activate object) ;; unknown type
;;(define-extern orb-cache-top-idle object) ;; unknown type


;; ----------------------
;; File - plat
;; Source Path - levels/common/plat.gc
;; Containing DGOs - ['GAME', 'COMMON', 'L1']
;; Version - 3

;; - Types

; (deftype plat (baseplat)
;   ((path-pos float                   :offset-assert 228)
;    (sync     sync-info-eased :inline :offset-assert 232)
;    (sound-id sound-id                :offset-assert 260)
;    )
;   :method-count-assert 33
;   :size-assert         #x108
;   :flag-assert         #x2100a00108
;   ;; inherited inspect of baseplat
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     )
;   )

;; - Unknowns

;;(define-extern *plat-jungleb-sg* object) ;; unknown type
;;(define-extern *plat-sunken-sg* object) ;; unknown type
;;(define-extern *plat-sg* object) ;; unknown type


;; ----------------------
;; File - plat-button
;; Source Path - levels/common/plat-button.gc
;; Containing DGOs - ['GAME', 'COMMON', 'L1']
;; Version - 3

;; - Types

; (deftype plat-button (process-drawable)
;   ((go-back-if-lost-player? basic          :offset-assert 176)
;    (grab-player?            basic          :offset-assert 180)
;    (should-grab-player?     basic          :offset-assert 184)
;    (path-pos                float          :offset-assert 188)
;    (bidirectional?          basic          :offset-assert 192)
;    (allow-auto-kill         basic          :offset-assert 196)
;    (sound-id                sound-id       :offset-assert 200)
;    (trans-off               vector :inline :offset-assert 208)
;    (spawn-pos               vector :inline :offset-assert 224)
;    )
;   :method-count-assert 33
;   :size-assert         #xf0
;   :flag-assert         #x21008000f0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     )
;   )

;; - Functions

(define-extern plat-button-camera-off function)
(define-extern plat-button-camera-on function)

;; - Unknowns

;;(define-extern *plat-button-sg* object) ;; unknown type


;; ----------------------
;; File - plat-eco
;; Source Path - levels/common/plat-eco.gc
;; Containing DGOs - ['GAME', 'COMMON', 'L1']
;; Version - 3

;; - Types

; (deftype plat-eco (plat)
;   ((notice-dist      float           :offset-assert 264)
;    (sync-offset-dest float           :offset-assert 268)
;    (sync-offset-faux float           :offset-assert 272)
;    (sync-linear-val  float           :offset-assert 276)
;    (target           uint64          :offset-assert 280)
;    (unlit-look       lod-set :inline :offset-assert 288)
;    (lit-look         lod-set :inline :offset-assert 324)
;    )
;   :method-count-assert 33
;   :size-assert         #x165
;   :flag-assert         #x2101000165
;   ;; inherited inspect of plat
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     )
;   )

;; - Unknowns

;;(define-extern *plat-eco-lit-sg* object) ;; unknown type
;;(define-extern *plat-eco-unlit-sg* object) ;; unknown type


;; ----------------------
;; File - ropebridge
;; Source Path - levels/common/ropebridge.gc
;; Containing DGOs - ['GAME', 'COMMON', 'L1']
;; Version - 3

;; - Types

; (deftype ropebridge-tuning (structure)
;   ((num-springs             int32   :offset-assert 0)
;    (num-spring-points       int32   :offset-assert 4)
;    (col-mesh-indexes        uint32  :offset-assert 8)
;    (view-frustum-radius     float   :offset-assert 12)
;    (root-prim-radius        float   :offset-assert 16)
;    (desired-spring-len      float   :offset-assert 20)
;    (gravity                 float   :offset-assert 24)
;    (spring-coefficient      float   :offset-assert 28)
;    (spring-mass             float   :offset-assert 32)
;    (friction                float   :offset-assert 36)
;    (max-influence-dist      float   :offset-assert 40)
;    (rider-max-gravity       float   :offset-assert 44)
;    (max-bonk-influence-dist float   :offset-assert 48)
;    (rider-bonk-force        float   :offset-assert 52)
;    (rider-bonk-min          float   :offset-assert 56)
;    (rider-bonk-max          float   :offset-assert 60)
;    (normal-board-len        float   :offset-assert 64)
;    (bridge-end-to-end-len   float   :offset-assert 68)
;    (rest-state              basic   :offset-assert 72)
;    )
;   :method-count-assert 9
;   :size-assert         #x4c
;   :flag-assert         #x90000004c
;   )

; (deftype ropebridge-spring-point (structure)
;   ((local-pos   vector :inline :offset-assert 0)
;    (vel         vector :inline :offset-assert 16)
;    (extra-force vector :inline :offset-assert 32)
;    )
;   :method-count-assert 9
;   :size-assert         #x30
;   :flag-assert         #x900000030
;   )

; (deftype ropebridge (process-drawable)
;   ((subtype                uint64                    :offset-assert 176)
;    (subtype-name           basic                     :offset-assert 184)
;    (agitated-time-stamp    uint64                    :offset-assert 192)
;    (bonk-time-stamp        uint64                    :offset-assert 200)
;    (attack-flop-time-stamp uint64                    :offset-assert 208)
;    (player-attack-id       uint64                    :offset-assert 216)
;    (sleep-dist             float                     :offset-assert 224)
;    (do-physics?            basic                     :offset-assert 228)
;    (tuning                 ropebridge-tuning         :offset-assert 232)
;    (world-matrix           matrix            :inline :offset-assert 240)
;    (inv-world-matrix       matrix            :inline :offset-assert 304)
;    (extra-trans            vector            :inline :offset-assert 368)
;    (spring-point           UNKNOWN           36      :offset-assert 384)
;    )
;   :method-count-assert 29
;   :size-assert         #x840
;   :flag-assert         #x1d07d00840
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     )
;   )

;; - Functions

(define-extern ropebridge-joint-callback function)

;; - Unknowns

;;(define-extern *ropebridge-tunings* object) ;; unknown type
;;(define-extern ropebridge-idle object) ;; unknown type
;;(define-extern *ropebridge-70-rest-state* object) ;; unknown type
;;(define-extern *ropebridge-52-rest-state* object) ;; unknown type
;;(define-extern *ropebridge-32-rest-state* object) ;; unknown type
;;(define-extern *ropebridge-36-rest-state* object) ;; unknown type
;;(define-extern *ropebridge-32-sg* object) ;; unknown type
;;(define-extern *snow-bridge-36-sg* object) ;; unknown type
;;(define-extern *ropebridge-52-sg* object) ;; unknown type
;;(define-extern *ropebridge-70-sg* object) ;; unknown type
;;(define-extern *ropebridge-36-sg* object) ;; unknown type
;;(define-extern *vil3-bridge-36-sg* object) ;; unknown type


;; ----------------------
;; File - ticky
;; Source Path - levels/common/ticky.gc
;; Containing DGOs - ['GAME', 'COMMON', 'L1']
;; Version - 3

;; - Types

; (deftype ticky (structure)
;   ((delay-til-ramp    uint64  :offset-assert 0)
;    (delay-til-timeout uint64  :offset-assert 8)
;    (starting-time     uint64  :offset-assert 16)
;    (last-tick-time    uint64  :offset-assert 24)
;    )
;   :method-count-assert 12
;   :size-assert         #x20
;   :flag-assert         #xc00000020
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     )
;   )


;; ----------------------
;; File - mistycannon
;; Source Path - levels/common/mistycannon.gc
;; Containing DGOs - ['BEA', 'L1', 'MIS']
;; Version - 3

;; - Types

; (deftype angle-tracker (structure)
;   ((value float  :offset-assert 0)
;    (min   float  :offset-assert 4)
;    (range float  :offset-assert 8)
;    (speed float  :offset-assert 12)
;    )
;   :method-count-assert 9
;   :size-assert         #x10
;   :flag-assert         #x900000010
;   )

; (deftype mistycannon-missile (process-drawable)
;   ((muzzle-time  float              :offset-assert 176)
;    (tumble-quat  quaternion :inline :offset-assert 192)
;    (blast-radius float              :offset-assert 208)
;    (water-height float              :offset-assert 212)
;    (sfx          uint32             :offset-assert 216)
;    (part2        basic              :offset-assert 220)
;    (ground-time  uint64             :offset-assert 224)
;    )
;   :method-count-assert 21
;   :size-assert         #xe8
;   :flag-assert         #x15008000e8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; (deftype mistycannon-init-data (structure)
;   ((pos          vector  :offset-assert 0)
;    (vel          vector  :offset-assert 4)
;    (rotate       float   :offset-assert 8)
;    (flight-time  float   :offset-assert 12)
;    (muzzle-time  float   :offset-assert 16)
;    (blast-radius float   :offset-assert 20)
;    )
;   :method-count-assert 9
;   :size-assert         #x18
;   :flag-assert         #x900000018
;   )

; (deftype mistycannon (process-drawable)
;   ((rotate                 angle-tracker :inline :offset-assert 176)
;    (tilt                   angle-tracker :inline :offset-assert 192)
;    (front-wheel            float                 :offset-assert 208)
;    (rear-wheel             float                 :offset-assert 212)
;    (last-known-rotation    float                 :offset-assert 216)
;    (part-timer             uint64                :offset-assert 224)
;    (hellmouth              vector        :inline :offset-assert 240)
;    (postbindinfo-ok        basic                 :offset-assert 256)
;    (launch-origin          vector        :inline :offset-assert 272)
;    (goggles                vector        :inline :offset-assert 288)
;    (avoid-entity           basic                 :offset-assert 304)
;    (center-point           vector        :inline :offset-assert 320)
;    (at-point               vector        :inline :offset-assert 336)
;    (accuracy-range         float                 :offset-assert 352)
;    (target-theta           float                 :offset-assert 356)
;    (sound-id               sound-id              :offset-assert 360)
;    (aim-sound-id           sound-id              :offset-assert 364)
;    (player-touching-grips? basic                 :offset-assert 368)
;    )
;   :method-count-assert 24
;   :size-assert         #x174
;   :flag-assert         #x1801100174
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     )
;   )

; (deftype quadratic-solution (structure)
;   ((s1 float  :offset-assert 0)
;    (s2 float  :offset-assert 4)
;    )
;   :method-count-assert 9
;   :size-assert         #x8
;   :flag-assert         #x900000008
;   )

; (deftype trajectory-params (structure)
;   ((x       float  :offset-assert 0)
;    (y       float  :offset-assert 4)
;    (gravity float  :offset-assert 8)
;    (theta   float  :offset-assert 12)
;    (speed   float  :offset-assert 16)
;    (time    float  :offset-assert 20)
;    )
;   :method-count-assert 9
;   :size-assert         #x18
;   :flag-assert         #x900000018
;   )

;; - Functions

(define-extern mistycannon-prebind-function function)
(define-extern mistycannon-postbind-function function)
(define-extern angle-tracker-init-range! function)
(define-extern mistycannon-pick-random-target-point function)
(define-extern angle-tracker-seek! function)
(define-extern mistycannon-do-aim function)
(define-extern mistycannon-find-trajectory function)
(define-extern solve-missile-velocity function)
(define-extern spawn-mistycannon-missile function)
(define-extern angle-tracker-apply-move! function)
(define-extern mistycannon-missile-init-by-other function)
(define-extern mistycannon-collision-reaction function)
(define-extern angle-tracker-get-value function)
(define-extern angle-tracker-set-value function)
(define-extern solve-missile-tilt function)
(define-extern mistycannon-find-best-solution function)

;; - Unknowns

;;(define-extern *mistycannon-sg* object) ;; unknown type
;;(define-extern mistycannon-idle object) ;; unknown type
;;(define-extern mistycannon-waiting-for-player object) ;; unknown type
;;(define-extern cam-mistycannon object) ;; unknown type
;;(define-extern mistycannon-waiting-for-player-to-fuck-off object) ;; unknown type
;;(define-extern mistycannon-aim-at-player object) ;; unknown type
;;(define-extern mistycannon-player-control object) ;; unknown type
;;(define-extern *mistycannon-missile-sg* object) ;; unknown type
;;(define-extern mistycannon-missile-idle object) ;; unknown type
;;(define-extern mistycannon-missile-explode object) ;; unknown type
;;(define-extern mistycannon-missile-in-water object) ;; unknown type


;; ----------------------
;; File - babak-with-cannon
;; Source Path - levels/common/babak-with-cannon.gc
;; Containing DGOs - ['BEA', 'L1', 'MIS']
;; Version - 3

;; - Types

; (deftype babak-with-cannon (babak)
;   ((cannon-ent basic  :offset-assert 400)
;    (distance   float  :offset-assert 404)
;    )
;   :method-count-assert 76
;   :size-assert         #x198
;   :flag-assert         #x4c01300198
;   ;; inherited inspect of babak
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

;; - Functions

(define-extern beachcam-spawn function)
(define-extern mistycam-spawn function)
(define-extern babak-with-cannon-compute-ride-point function)
(define-extern babak-with-cannon-compute-cannon-dir function)
(define-extern handle->process-safe function)
(define-extern babak-with-cannon-ride-cannon-post function)

;; - Unknowns

;;(define-extern babak-with-cannon-jump-off-cannon object) ;; unknown type
;;(define-extern babak-with-cannon-shooting object) ;; unknown type
;;(define-extern babak-with-cannon-jump-onto-cannon object) ;; unknown type
;;(define-extern babak-run-to-cannon object) ;; unknown type


;; ----------------------
;; File - air-h
;; Source Path - levels/beach/air-h.gc
;; Containing DGOs - ['BEA', 'L1']
;; Version - 3

;; - Types

(deftype air-box (structure)
  ((vecs         vector 2 :inline :offset-assert 0)
   (x-pos        float     :offset 0)
   (height-level float     :offset 4)
   (z-pos        float     :offset 8)
   (cos-angle    float     :offset 12)
   (x-length     float     :offset 16)
   (z-length     float     :offset 24)
   (sin-angle    float     :offset 28)
   )
  :method-count-assert 9
  :size-assert         #x20
  :flag-assert         #x900000020
  )

;; - Functions

(define-extern point-in-air-box-area? (function float float air-box symbol))
(define-extern point-in-air-box? (function vector air-box symbol))


;; ----------------------
;; File - air
;; Source Path - levels/beach/air.gc
;; Containing DGOs - ['BEA', 'L1']
;; Version - 3

;; - Functions

(define-extern point-in-air? (function vector (inline-array air-box) int symbol)) ;; Not used
(define-extern points-in-air? (function vector vector (inline-array air-box) int symbol))
(define-extern add-debug-air-box (function bucket-id air-box symbol))


;; ----------------------
;; File - wobbler
;; Source Path - levels/beach/wobbler.gc
;; Containing DGOs - ['BEA', 'L1']
;; Version - 3

;; - Types

; (deftype wobbler (basic)
;   ((posx    float  :offset-assert 4)
;    (posy    float  :offset-assert 8)
;    (velx    float  :offset-assert 12)
;    (vely    float  :offset-assert 16)
;    (spring  float  :offset-assert 20)
;    (damping float  :offset-assert 24)
;    (height  float  :offset-assert 28)
;    )
;   :method-count-assert 13
;   :size-assert         #x20
;   :flag-assert         #xd00000020
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     )
;   )


;; ----------------------
;; File - twister
;; Source Path - levels/beach/twister.gc
;; Containing DGOs - ['BEA', 'L1']
;; Version - 3

;; - Types

; (deftype twist-joint (structure)
;   ((ry      float  :offset-assert 0)
;    (max-dry float  :offset-assert 4)
;    )
;   :method-count-assert 9
;   :size-assert         #x8
;   :flag-assert         #x900000008
;   )

; (deftype twister (basic)
;   ((num-joints   int32            :offset-assert 4)
;    (first-joint  int32            :offset-assert 8)
;    (last-joint   int32            :offset-assert 12)
;    (max-speed    float            :offset-assert 16)
;    (smoothing    float            :offset-assert 20)
;    (min-dist     float            :offset-assert 24)
;    (target       float            :offset-assert 28)
;    (ry           float            :offset-assert 32)
;    (max-speed-ry float            :offset-assert 36)
;    (data         UNKNOWN :dynamic :offset-assert 40)
;    )
;   :method-count-assert 13
;   :size-assert         #x28
;   :flag-assert         #xd00000028
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     )
;   )


;; ----------------------
;; File - beach-obs
;; Source Path - levels/beach/beach-obs.gc
;; Containing DGOs - ['BEA', 'L1']
;; Version - 3

;; - Types

; (deftype windmill-one (process-drawable)
;   ((sound-id sound-id  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb4
;   :flag-assert         #x14005000b4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype grottopole (process-drawable)
;   ((speed               meters  :offset-assert 176)
;    (distance            meters  :offset-assert 180)
;    (position            int32   :offset-assert 184)
;    (max-position        int32   :offset-assert 188)
;    (incomming-attack-id uint64  :offset-assert 192)
;    )
;   :method-count-assert 20
;   :size-assert         #xc8
;   :flag-assert         #x14006000c8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype ecoventrock (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype flying-rock (process-drawable)
;   ((tumble quaternion :inline :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xc0
;   :flag-assert         #x14005000c0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype bladeassm (process-drawable)
;   ((angle float  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb4
;   :flag-assert         #x14005000b4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype flutflutegg (process-drawable)
;   ((fall-dist           meters                  :offset-assert 176)
;    (start               vector          :inline :offset-assert 192)
;    (dir                 vector          :inline :offset-assert 208)
;    (pos                 float                   :offset-assert 224)
;    (vel                 float                   :offset-assert 228)
;    (wobbler             basic                   :offset-assert 232)
;    (last-impulse-time   int32                   :offset-assert 236)
;    (incomming-attack-id uint64                  :offset-assert 240)
;    (ambients-played     int32                   :offset-assert 248)
;    (ambient             ambient-control :inline :offset-assert 256)
;    )
;   :method-count-assert 21
;   :size-assert         #x110
;   :flag-assert         #x1500a00110
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; (deftype harvester (process-drawable)
;   ((alt-actor basic  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb4
;   :flag-assert         #x14005000b4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype beachcam (process-hidden)
;   ((name             basic                 :offset-assert 4)
;    (mask             uint32                :offset-assert 8)
;    (parent           uint32                :offset-assert 12)
;    (brother          uint32                :offset-assert 16)
;    (child            uint32                :offset-assert 20)
;    (ppointer         uint32                :offset-assert 24)
;    (self             basic                 :offset-assert 28)
;    (pool             basic                 :offset-assert 32)
;    (status           basic                 :offset-assert 36)
;    (pid              int32                 :offset-assert 40)
;    (main-thread      basic                 :offset-assert 44)
;    (top-thread       basic                 :offset-assert 48)
;    (entity           basic                 :offset-assert 52)
;    (state            basic                 :offset-assert 56)
;    (trans-hook       basic                 :offset-assert 60)
;    (post-hook        basic                 :offset-assert 64)
;    (event-hook       basic                 :offset-assert 68)
;    (allocated-length int32                 :offset-assert 72)
;    (next-state       basic                 :offset-assert 76)
;    (heap-base        uint32                :offset-assert 80)
;    (heap-top         uint32                :offset-assert 84)
;    (heap-cur         uint32                :offset-assert 88)
;    (stack-frame-top  basic                 :offset-assert 92)
;    (heap             kheap        :inline  :offset-assert 80)
;    (connection-list  'connectable :inline  :offset-assert 96)
;    (stack            UNKNOWN      :dynamic :offset-assert 112)
;    )
;   :method-count-assert 15
;   :size-assert         #x70
;   :flag-assert         #xf00000070
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     )
;   )

;; - Functions

(define-extern flutflutegg-hit-sounds function)
(define-extern bladeassm-prebind-function function)
(define-extern flying-rock-init-by-other function)
(define-extern spawn-flying-rock function)
(define-extern move-grottopole-to-position function)
(define-extern move-grottopole function)

;; - Unknowns

;;(define-extern *beachcam-sg* object) ;; unknown type
;;(define-extern *harvester-sg* object) ;; unknown type
;;(define-extern harvester-idle object) ;; unknown type
;;(define-extern harvester-inflate object) ;; unknown type
;;(define-extern *flutflutegg-sg* object) ;; unknown type
;;(define-extern flutflutegg-break object) ;; unknown type
;;(define-extern flutflutegg-idle object) ;; unknown type
;;(define-extern flutflutegg-physics-fall object) ;; unknown type
;;(define-extern flutflutegg-physics object) ;; unknown type
;;(define-extern *bladeassm-sg* object) ;; unknown type
;;(define-extern bladeassm-idle object) ;; unknown type
;;(define-extern *kickrock-sg* object) ;; unknown type
;;(define-extern flying-rock-rolling object) ;; unknown type
;;(define-extern flying-rock-idle object) ;; unknown type
;;(define-extern *ecoventrock-sg* object) ;; unknown type
;;(define-extern ecoventrock-break object) ;; unknown type
;;(define-extern ecoventrock-idle object) ;; unknown type
;;(define-extern *grottopole-sg* object) ;; unknown type
;;(define-extern grottopole-idle object) ;; unknown type
;;(define-extern grottopole-moving-up object) ;; unknown type
;;(define-extern grottopole-moving-down object) ;; unknown type
;;(define-extern *windmill-one-sg* object) ;; unknown type
;;(define-extern windmill-one-idle object) ;; unknown type
;;(define-extern *flutflut-naked-sg* object) ;; unknown type


;; ----------------------
;; File - bird-lady
;; Source Path - levels/beach/bird-lady.gc
;; Containing DGOs - ['BEA', 'L1']
;; Version - 3

;; - Types

; (deftype bird-lady (process-taskable)
;   ()
;   :method-count-assert 53
;   :size-assert         #x17c
;   :flag-assert         #x350110017c
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

;; - Unknowns

;;(define-extern *bird-lady-sg* object) ;; unknown type


;; ----------------------
;; File - bird-lady-beach
;; Source Path - levels/beach/bird-lady-beach.gc
;; Containing DGOs - ['BEA', 'L1']
;; Version - 3

;; - Types

; (deftype bird-lady-beach (process-taskable)
;   ((flutflut uint64  :offset-assert 384)
;    (egg      uint64  :offset-assert 392)
;    )
;   :method-count-assert 53
;   :size-assert         #x190
;   :flag-assert         #x3501200190
;   ;; inherited inspect of process-taskable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

;; - Unknowns

;;(define-extern *bird-lady-beach-sg* object) ;; unknown type


;; ----------------------
;; File - mayor
;; Source Path - levels/beach/mayor.gc
;; Containing DGOs - ['BEA', 'L1']
;; Version - 3

;; - Types

; (deftype mayor (process-taskable)
;   ()
;   :method-count-assert 53
;   :size-assert         #x17c
;   :flag-assert         #x350110017c
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

;; - Functions

(define-extern mayor-lurkerm-reward-speech function)

;; - Unknowns

;;(define-extern *mayor-sg* object) ;; unknown type


;; ----------------------
;; File - sculptor
;; Source Path - levels/beach/sculptor.gc
;; Containing DGOs - ['BEA', 'L1']
;; Version - 3

;; - Types

; (deftype sculptor (process-taskable)
;   ((muse uint64  :offset-assert 384)
;    )
;   :method-count-assert 53
;   :size-assert         #x188
;   :flag-assert         #x3501200188
;   ;; inherited inspect of process-taskable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

;; - Functions

(define-extern muse-to-idle function)

;; - Unknowns

;;(define-extern *sculptor-sg* object) ;; unknown type
;;(define-extern *sculptor-muse-sg* object) ;; unknown type


;; ----------------------
;; File - pelican
;; Source Path - levels/beach/pelican.gc
;; Containing DGOs - ['BEA', 'L1']
;; Version - 3

;; - Types

; (deftype pelican-bank (basic)
;   ((circle-speed        meters    :offset-assert 4)
;    (dive-time           seconds  :offset-assert 8)
;    (to-nest0-time       seconds  :offset-assert 16)
;    (to-nest1-time       seconds  :offset-assert 24)
;    (land-time           seconds  :offset-assert 32)
;    (from-nest-time      seconds  :offset-assert 40)
;    (spit-time           seconds  :offset-assert 48)
;    (pre-spit-wait-time  seconds  :offset-assert 56)
;    (post-spit-wait-time seconds  :offset-assert 64)
;    (run-away-time       seconds  :offset-assert 72)
;    )
;   :method-count-assert 9
;   :size-assert         #x50
;   :flag-assert         #x900000050
;   )

; (deftype pelican (process-drawable)
;   ((query           gui-query :inline :offset-assert 176)
;    (fuel-cell       uint64            :offset-assert 208)
;    (cam-tracker     uint64            :offset-assert 216)
;    (path-data       UNKNOWN   8       :offset-assert 224)
;    (path-circle     basic             :offset-assert 224)
;    (path-dive0      basic             :offset-assert 228)
;    (path-to-nest0   basic             :offset-assert 232)
;    (path-from-nest0 basic             :offset-assert 236)
;    (path-spit0      basic             :offset-assert 240)
;    (path-dive1      basic             :offset-assert 244)
;    (path-to-nest1   basic             :offset-assert 248)
;    (path-to-nest2   basic             :offset-assert 252)
;    (path-cache      basic             :offset-assert 256)
;    (time-cache      uint64            :offset-assert 264)
;    (path-pos        float             :offset-assert 272)
;    (path-speed      float             :offset-assert 276)
;    (path-max        float             :offset-assert 280)
;    (path-vector     vector    :inline :offset-assert 288)
;    (state-vector    vector    :inline :offset-assert 304)
;    (state-vector1   vector    :inline :offset-assert 320)
;    (state-float     UNKNOWN   2       :offset-assert 336)
;    (state-object    basic             :offset-assert 344)
;    (neck            basic             :offset-assert 348)
;    )
;   :method-count-assert 20
;   :size-assert         #x160
;   :flag-assert         #x1400f00160
;   ;; inherited inspect of process-drawablefield ~Tstate-object is a basic loaded with a signed load
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

;; - Functions

(define-extern pelican-fly function)
(define-extern pelican-path-update function)
(define-extern pelican-post function)

;; - Unknowns

;;(define-extern *pelican-sg* object) ;; unknown type
;;(define-extern pelican-wait-at-end object) ;; unknown type
;;(define-extern pelican-wait-at-nest object) ;; unknown type
;;(define-extern pelican-circle object) ;; unknown type
;;(define-extern zero-func object) ;; unknown type
;;(define-extern *PELICAN-bank* object) ;; unknown type
;;(define-extern pelican-dive object) ;; unknown type
;;(define-extern pelican-from-nest object) ;; unknown type
;;(define-extern pelican-explode object) ;; unknown type
;;(define-extern pelican-spit object) ;; unknown type
;;(define-extern pelican-fly-to-end object) ;; unknown type
;;(define-extern pelican-to-nest object) ;; unknown type


;; ----------------------
;; File - lurkerworm
;; Source Path - levels/beach/lurkerworm.gc
;; Containing DGOs - ['BEA', 'L1']
;; Version - 3

;; - Types

; (deftype lurkerworm (process-drawable)
;   ((twister      basic  :offset-assert 176)
;    (head-tilt    float  :offset-assert 180)
;    (strike-count int32  :offset-assert 184)
;    (angle        float  :offset-assert 188)
;    (vulnerable   basic  :offset-assert 192)
;    (part2        basic  :offset-assert 196)
;    )
;   :method-count-assert 22
;   :size-assert         #xc8
;   :flag-assert         #x16006000c8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

;; - Functions

(define-extern lurkerworm-prebind-function function)
(define-extern lurkerworm-joint-callback function)
(define-extern lurkerworm-default-event-handler function)
(define-extern lurkerworm-default-post-behavior function)

;; - Unknowns

;;(define-extern *lurkerworm-sg* object) ;; unknown type
;;(define-extern lurkerworm-idle object) ;; unknown type
;;(define-extern lurkerworm-rest object) ;; unknown type
;;(define-extern lurkerworm-strike object) ;; unknown type
;;(define-extern lurkerworm-sink object) ;; unknown type
;;(define-extern lurkerworm-rise object) ;; unknown type
;;(define-extern lurkerworm-spot object) ;; unknown type
;;(define-extern lurkerworm-die object) ;; unknown type


;; ----------------------
;; File - lurkercrab
;; Source Path - levels/beach/lurkercrab.gc
;; Containing DGOs - ['BEA', 'L1']
;; Version - 3

;; - Types

; (deftype lurkercrab (nav-enemy)
;   ((orient basic  :offset-assert 400)
;    )
;   :method-count-assert 76
;   :size-assert         #x194
;   :flag-assert         #x4c01300194
;   ;; inherited inspect of nav-enemy
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

;; - Functions

(define-extern lurkercrab-vulnerable function)
(define-extern lurkercrab-invulnerable function)

;; - Unknowns

;;(define-extern *lurkercrab-sg* object) ;; unknown type
;;(define-extern *lurkercrab-nav-enemy-info* object) ;; unknown type
;;(define-extern lurkercrab-pushed object) ;; unknown type


;; ----------------------
;; File - lurkerpuppy
;; Source Path - levels/beach/lurkerpuppy.gc
;; Containing DGOs - ['BEA', 'L1']
;; Version - 3

;; - Types

; (deftype lurkerpuppy (nav-enemy)
;   ()
;   :method-count-assert 76
;   :size-assert         #x190
;   :flag-assert         #x4c01200190
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

;; - Unknowns

;;(define-extern *lurkerpuppy-sg* object) ;; unknown type
;;(define-extern *lurkerpuppy-nav-enemy-info* object) ;; unknown type


;; ----------------------
;; File - beach-rocks
;; Source Path - levels/beach/beach-rocks.gc
;; Containing DGOs - ['BEA', 'L1']
;; Version - 3

;; - Types

; (deftype beach-rock (process-drawable)
;   ((trigger      basic   :offset-assert 176)
;    (movie-start  uint64  :offset-assert 184)
;    (part-falling basic   :offset-assert 192)
;    (part-landing basic   :offset-assert 196)
;    (prev-frame   float   :offset-assert 200)
;    )
;   :method-count-assert 24
;   :size-assert         #xcc
;   :flag-assert         #x18006000cc
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     )
;   )

; (deftype lrocklrg (beach-rock)
;   ()
;   :method-count-assert 24
;   :size-assert         #xcc
;   :flag-assert         #x18006000cc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     )
;   )

;; - Unknowns

;;(define-extern *lrocklrg-sg* object) ;; unknown type


;; ----------------------
;; File - seagull
;; Source Path - levels/beach/seagull.gc
;; Containing DGOs - ['BEA', 'L1']
;; Version - 3

;; - Types

(deftype seagull (process-drawable)
  ((index             int32   :offset-assert 176)
   (flock             uint32  :offset-assert 180)
   (heading           float   :offset-assert 184)
   (tilt              float   :offset-assert 188)
   (max-tilt          float   :offset-assert 192)
   (angletan          float   :offset-assert 196)
   (target-dist       float   :offset-assert 200)
   (scared            int32   :offset-assert 204)
   (temp-heading      float   :offset-assert 208)
   (temp-heading-time int32   :offset-assert 212)
   (part-time         uint64  :offset-assert 216)
   (thrust            float   :offset-assert 224)
   (teleport          basic   :offset-assert 228)
   )
  :method-count-assert 28
  :heap-base           #x80
  :size-assert         #xe8
  :flag-assert         #x1c008000e8
  ;; inherited inspect of process-drawable
  (:methods
    (dummy-20 () none 20)
    (dummy-21 () none 21)
    (dummy-22 () none 22)
    (dummy-23 () none 23)
    (dummy-24 () none 24)
    (dummy-25 () none 25)
    (dummy-26 () none 26)
    (dummy-27 (_type_) none 27)
    )
  )

; (deftype seagullflock (process)
;   ((path               basic           :offset-assert 112)
;    (trans              vector  :inline :offset-assert 128)
;    (bird               UNKNOWN 64      :offset-assert 144)
;    (birds              int32           :offset-assert 400)
;    (link               basic           :offset-assert 404)
;    (bird-at-waterfall  uint64          :offset-assert 408)
;    (birds-at-waterfall int32           :offset-assert 416)
;    (target             vector  :inline :offset-assert 432)
;    (targetnum          int32           :offset-assert 448)
;    (alert-time         uint64          :offset-assert 456)
;    (teleport-frames    int32           :offset-assert 464)
;    (cam-tracker        uint64          :offset-assert 472)
;    (state-time         uint64          :offset-assert 480)
;    (squall             basic           :offset-assert 488)
;    (max-lift           float           :offset-assert 492)
;    )
;   :method-count-assert 17
;   :size-assert         #x1f0
;   :flag-assert         #x11018001f0
;   ;; inherited inspect of process
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     )
;   )

;; - Functions

(define-extern seagull-init-by-other function)
(define-extern seagull-reaction function)
(define-extern seagull-post function)
(define-extern beach-rock-trigger function)

;; - Unknowns

;;(define-extern sound-seagull-squall object) ;; unknown type
;;(define-extern seagullflock-idle object) ;; unknown type
;;(define-extern seagullflock-at-waterfall object) ;; unknown type
;;(define-extern aybabtu object) ;; unknown type
;;(define-extern *seagull-sg* object) ;; unknown type
;;(define-extern seagull-idle object) ;; unknown type
;;(define-extern seagull-soaring object) ;; unknown type
;;(define-extern seagull-flying object) ;; unknown type
;;(define-extern seagull-landing object) ;; unknown type
(define-extern *seagull-boxes* (inline-array air-box)) ;; unknown type
;;(define-extern seagull-takeoff object) ;; unknown type


;; ----------------------
;; File - beach-part
;; Source Path - levels/beach/beach-part.gc
;; Containing DGOs - ['BEA', 'L1']
;; Version - 3

;; - Types

; (deftype beach-part (part-spawner)
;   ()
;   :method-count-assert 21
;   :size-assert         #xd0
;   :flag-assert         #x15006000d0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

;; - Unknowns

;;(define-extern sound-beach-waterfall object) ;; unknown type


;; ----------------------
;; File - tpage-212
;; Source Path - levels/beach/tpage-212.gd
;; Containing DGOs - ['BEA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-214
;; Source Path - levels/beach/tpage-214.gd
;; Containing DGOs - ['BEA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-213
;; Source Path - levels/beach/tpage-213.gd
;; Containing DGOs - ['BEA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-215
;; Source Path - levels/beach/tpage-215.gd
;; Containing DGOs - ['BEA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - babak-ag
;; Source Path - levels/common/babak-ag.gd
;; Containing DGOs - ['BEA', 'CIT', 'JUN', 'FIC', 'MIS', 'ROB', 'ROL', 'SNO', 'SUB', 'SUN', 'SWA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - barrel-ag-BEA
;; Source Path - levels/beach/barrel-ag-BEA.gd
;; Containing DGOs - ['BEA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - barrel-ag-VI2
;; Source Path - levels/village2/barrel-ag-VI2.gd
;; Containing DGOs - ['VI2']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - beachcam-ag
;; Source Path - levels/beach/beachcam-ag.gd
;; Containing DGOs - ['BEA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - bird-lady-ag
;; Source Path - levels/beach/bird-lady-ag.gd
;; Containing DGOs - ['BEA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - bird-lady-beach-ag
;; Source Path - levels/beach/bird-lady-beach-ag.gd
;; Containing DGOs - ['BEA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - bladeassm-ag
;; Source Path - levels/beach/bladeassm-ag.gd
;; Containing DGOs - ['BEA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - ecoventrock-ag
;; Source Path - levels/beach/ecoventrock-ag.gd
;; Containing DGOs - ['BEA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - flutflut-ag
;; Source Path - levels/beach/flutflut-ag.gd
;; Containing DGOs - ['BEA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - flutflutegg-ag
;; Source Path - levels/beach/flutflutegg-ag.gd
;; Containing DGOs - ['BEA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - grottopole-ag
;; Source Path - levels/beach/grottopole-ag.gd
;; Containing DGOs - ['BEA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - harvester-ag
;; Source Path - levels/beach/harvester-ag.gd
;; Containing DGOs - ['BEA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - kickrock-ag
;; Source Path - levels/beach/kickrock-ag.gd
;; Containing DGOs - ['BEA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - lrocklrg-ag
;; Source Path - levels/beach/lrocklrg-ag.gd
;; Containing DGOs - ['BEA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - lurkercrab-ag
;; Source Path - levels/beach/lurkercrab-ag.gd
;; Containing DGOs - ['BEA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - lurkerpuppy-ag
;; Source Path - levels/beach/lurkerpuppy-ag.gd
;; Containing DGOs - ['BEA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - lurkerworm-ag
;; Source Path - levels/beach/lurkerworm-ag.gd
;; Containing DGOs - ['BEA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - mayor-ag
;; Source Path - levels/beach/mayor-ag.gd
;; Containing DGOs - ['BEA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - mistycannon-ag
;; Source Path - levels/common/mistycannon-ag.gd
;; Containing DGOs - ['BEA', 'MIS']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - orb-cache-top-ag-BEA
;; Source Path - levels/beach/orb-cache-top-ag-BEA.gd
;; Containing DGOs - ['BEA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - orb-cache-top-ag-CIT
;; Source Path - levels/citadel/orb-cache-top-ag-CIT.gd
;; Containing DGOs - ['CIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - orb-cache-top-ag-JUN
;; Source Path - levels/jungle/orb-cache-top-ag-JUN.gd
;; Containing DGOs - ['JUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - orb-cache-top-ag-MIS
;; Source Path - levels/misty/orb-cache-top-ag-MIS.gd
;; Containing DGOs - ['MIS']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - orb-cache-top-ag-SNO
;; Source Path - levels/snow/orb-cache-top-ag-SNO.gd
;; Containing DGOs - ['SNO']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - orb-cache-top-ag-SUN
;; Source Path - levels/sunken/orb-cache-top-ag-SUN.gd
;; Containing DGOs - ['SUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - orb-cache-top-ag-VI1
;; Source Path - levels/village1/orb-cache-top-ag-VI1.gd
;; Containing DGOs - ['VI1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - orb-cache-top-ag-VI2
;; Source Path - levels/village2/orb-cache-top-ag-VI2.gd
;; Containing DGOs - ['VI2']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - pelican-ag
;; Source Path - levels/beach/pelican-ag.gd
;; Containing DGOs - ['BEA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - sack-ag-BEA
;; Source Path - levels/beach/sack-ag-BEA.gd
;; Containing DGOs - ['BEA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - sack-ag-MIS
;; Source Path - levels/misty/sack-ag-MIS.gd
;; Containing DGOs - ['MIS']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - sculptor-ag
;; Source Path - levels/beach/sculptor-ag.gd
;; Containing DGOs - ['BEA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - sculptor-muse-ag
;; Source Path - levels/beach/sculptor-muse-ag.gd
;; Containing DGOs - ['BEA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - seagull-ag
;; Source Path - levels/beach/seagull-ag.gd
;; Containing DGOs - ['BEA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - sharkey-ag-BEA-TRA-VI2
;; Source Path - levels/common/sharkey-ag-BEA-TRA-VI2.gd
;; Containing DGOs - ['BEA', 'TRA', 'VI2']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - sharkey-ag-JUN-MIS
;; Source Path - levels/common/sharkey-ag-JUN-MIS.gd
;; Containing DGOs - ['JUN', 'MIS']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - sharkey-ag-SWA
;; Source Path - levels/swamp/sharkey-ag-SWA.gd
;; Containing DGOs - ['SWA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - sharkey-ag-VI1
;; Source Path - levels/village1/sharkey-ag-VI1.gd
;; Containing DGOs - ['VI1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - windmill-one-ag
;; Source Path - levels/beach/windmill-one-ag.gd
;; Containing DGOs - ['BEA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - beach-vis
;; Source Path - levels/beach/beach-vis.gd
;; Containing DGOs - ['BEA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - villagep-obs
;; Source Path - levels/village_common/villagep-obs.gc
;; Containing DGOs - ['CIT', 'L1', 'VI1', 'VI2', 'VI3', 'VILLAGEP']
;; Version - 3

;; - Types

; (deftype warpgate (process-hidden)
;   ((name             basic                 :offset-assert 4)
;    (mask             uint32                :offset-assert 8)
;    (parent           uint32                :offset-assert 12)
;    (brother          uint32                :offset-assert 16)
;    (child            uint32                :offset-assert 20)
;    (ppointer         uint32                :offset-assert 24)
;    (self             basic                 :offset-assert 28)
;    (pool             basic                 :offset-assert 32)
;    (status           basic                 :offset-assert 36)
;    (pid              int32                 :offset-assert 40)
;    (main-thread      basic                 :offset-assert 44)
;    (top-thread       basic                 :offset-assert 48)
;    (entity           basic                 :offset-assert 52)
;    (state            basic                 :offset-assert 56)
;    (trans-hook       basic                 :offset-assert 60)
;    (post-hook        basic                 :offset-assert 64)
;    (event-hook       basic                 :offset-assert 68)
;    (allocated-length int32                 :offset-assert 72)
;    (next-state       basic                 :offset-assert 76)
;    (heap-base        uint32                :offset-assert 80)
;    (heap-top         uint32                :offset-assert 84)
;    (heap-cur         uint32                :offset-assert 88)
;    (stack-frame-top  basic                 :offset-assert 92)
;    (heap             kheap        :inline  :offset-assert 80)
;    (connection-list  'connectable :inline  :offset-assert 96)
;    (stack            UNKNOWN      :dynamic :offset-assert 112)
;    )
;   :method-count-assert 15
;   :size-assert         #x70
;   :flag-assert         #xf00000070
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     )
;   )

; (deftype warp-gate-switch (basebutton)
;   ((warp uint64  :offset-assert 256)
;    )
;   :method-count-assert 33
;   :size-assert         #x108
;   :flag-assert         #x2100a00108
;   ;; inherited inspect of basebutton
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     )
;   )

; (deftype village-cam (process)
;   ((root       basic   :offset-assert 112)
;    (range      meters  :offset-assert 116)
;    (index      int32   :offset-assert 120)
;    (state-time uint64  :offset-assert 128)
;    )
;   :method-count-assert 15
;   :size-assert         #x88
;   :flag-assert         #xf00200088
;   ;; inherited inspect of process
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     )
;   )

;; - Functions

(define-extern warp-gate-init-by-other function)
(define-extern get-next-slot-up function)
(define-extern get-next-slot-down function)
(define-extern print-level-name function)

;; - Unknowns

;;(define-extern *village-cam-sg* object) ;; unknown type
;;(define-extern *warp-gate-switch-sg* object) ;; unknown type


;; ----------------------
;; File - oracle
;; Source Path - levels/village_common/oracle.gc
;; Containing DGOs - ['CIT', 'L1', 'VI1', 'VI2', 'VI3', 'VILLAGEP']
;; Version - 3

;; - Types

; (deftype oracle (process-taskable)
;   ((first-task     uint8   :offset-assert 380)
;    (second-task    uint8   :offset-assert 381)
;    (left-eye-cell  uint64  :offset-assert 384)
;    (right-eye-cell uint64  :offset-assert 392)
;    )
;   :method-count-assert 53
;   :size-assert         #x190
;   :flag-assert         #x3501200190
;   ;; inherited inspect of process-taskable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

;; - Unknowns

;;(define-extern *oracle-sg* object) ;; unknown type


;; ----------------------
;; File - battlecontroller
;; Source Path - levels/common/battlecontroller.gc
;; Containing DGOs - ['CIT', 'L1', 'MIS', 'SWA']
;; Version - 3

;; - Types

; (deftype battlecontroller-spawner (structure)
;   ((path          basic   :offset-assert 0)
;    (creature      uint64  :offset-assert 8)
;    (trigger-actor basic   :offset-assert 16)
;    (blocker-actor basic   :offset-assert 20)
;    (state         int8    :offset-assert 24)
;    (enabled       basic   :offset-assert 28)
;    )
;   :method-count-assert 9
;   :size-assert         #x20
;   :flag-assert         #x900000020
;   )

; (deftype battlecontroller-creature-type (structure)
;   ((type2            basic  :offset-assert 0)
;    (percent          float  :offset-assert 4)
;    (pickup-percent   float  :offset-assert 8)
;    (pickup-type      int32  :offset-assert 12)
;    (max-pickup-count int8   :offset-assert 16)
;    (pickup-count     int8   :offset-assert 17)
;    )
;   :method-count-assert 9
;   :size-assert         #x12
;   :flag-assert         #x900000012
;   )

; (deftype battlecontroller (process-drawable)
;   ((final-pickup-spawn-point    vector  :inline :offset-assert 176)
;    (activate-distance           float           :offset-assert 192)
;    (max-spawn-count             int16           :offset-assert 196)
;    (spawn-count                 int16           :offset-assert 198)
;    (die-count                   int16           :offset-assert 200)
;    (target-count                int8            :offset-assert 202)
;    (spawner-count               int8            :offset-assert 203)
;    (creature-type-count         int8            :offset-assert 204)
;    (spawner-array               UNKNOWN 8       :offset-assert 208)
;    (spawn-period                uint64          :offset-assert 464)
;    (path-spawn                  basic           :offset-assert 472)
;    (creature-type-array         UNKNOWN 4       :offset-assert 476)
;    (final-pickup-type           int32           :offset-assert 604)
;    (prespawn                    basic           :offset-assert 608)
;    (noticed-player              basic           :offset-assert 612)
;    (camera-on                   basic           :offset-assert 616)
;    (misty-ambush-collision-hack basic           :offset-assert 620)
;    (disable-ocean               basic           :offset-assert 624)
;    (disable-near-ocean          basic           :offset-assert 628)
;    (disable-mid-ocean           basic           :offset-assert 632)
;    )
;   :method-count-assert 29
;   :size-assert         #x27c
;   :flag-assert         #x1d0210027c
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     )
;   )

;; - Functions

(define-extern battlecontroller-task-completed? function)
(define-extern battlecontroller-off function)
(define-extern battlecontroller-camera-on function)
(define-extern battlecontroller-spawn-creature-random-spawner function)
(define-extern battlecontroller-disable-ocean function)
(define-extern battlecontroller-update-spawners function)
(define-extern battlecontroller-fill-all-spawners function)
(define-extern battlecontroller-battle-begin function)
(define-extern battlecontroller-spawn-creature-at-spawner function)
(define-extern battlecontroller-spawn-creature function)
(define-extern battlecontroller-spawners-full? function)
(define-extern battlecontroller-default-event-handler function)
(define-extern battlecontroller-draw-debug function)
(define-extern battlecontroller-camera-off function)
(define-extern battlecontroller-battle-end function)
(define-extern battlecontroller-special-contents? function)
(define-extern battlecontroller-special-contents-collected? function)
(define-extern battlecontroller-set-special-contents-collected function)
(define-extern battlecontroller-set-task-completed function)


;; ----------------------
;; File - citadel-part
;; Source Path - levels/citadel/citadel-part.gc
;; Containing DGOs - ['CIT', 'L1']
;; Version - 3

;; - Types

; (deftype citb-part (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;;  not enough basic ops
;   )

;; - Functions

(define-extern check-drop-level-firehose-pops function)
(define-extern birth-func-random-rot function)


;; ----------------------
;; File - citadel-obs
;; Source Path - levels/citadel/citadel-obs.gc
;; Containing DGOs - ['CIT', 'L1']
;; Version - 3

;; - Types

; (deftype citb-arm-section (process-drawable)
;   ((sync           sync-info :inline :offset-assert 176)
;    (cull-dir-local vector    :inline :offset-assert 192)
;    (cull-dot       float             :offset-assert 208)
;    (rot-scale      float             :offset-assert 212)
;    (y-angle        float             :offset-assert 216)
;    )
;   :method-count-assert 23
;   :size-assert         #xdc
;   :flag-assert         #x17007000dc
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     )
;   )

; (deftype citb-arm (citb-arm-section)
;   ()
;   :method-count-assert 23
;   :size-assert         #xdc
;   :flag-assert         #x17007000dc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     )
;   )

; (deftype citb-arm-shoulder (citb-arm-section)
;   ()
;   :method-count-assert 23
;   :size-assert         #xdc
;   :flag-assert         #x17007000dc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     )
;   )

; (deftype citb-arm-a (citb-arm)
;   ()
;   :method-count-assert 23
;   :size-assert         #xdc
;   :flag-assert         #x17007000dc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     )
;   )

; (deftype citb-arm-b (citb-arm)
;   ()
;   :method-count-assert 23
;   :size-assert         #xdc
;   :flag-assert         #x17007000dc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     )
;   )

; (deftype citb-arm-c (citb-arm)
;   ()
;   :method-count-assert 23
;   :size-assert         #xdc
;   :flag-assert         #x17007000dc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     )
;   )

; (deftype citb-arm-d (citb-arm)
;   ()
;   :method-count-assert 23
;   :size-assert         #xdc
;   :flag-assert         #x17007000dc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     )
;   )

; (deftype citb-arm-shoulder-a (citb-arm-shoulder)
;   ()
;   :method-count-assert 23
;   :size-assert         #xdc
;   :flag-assert         #x17007000dc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     )
;   )

; (deftype citb-arm-shoulder-b (citb-arm-shoulder)
;   ()
;   :method-count-assert 23
;   :size-assert         #xdc
;   :flag-assert         #x17007000dc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     )
;   )

; (deftype citb-disc (process-drawable)
;   ((sync      sync-info :inline :offset-assert 176)
;    (rot-scale float             :offset-assert 184)
;    )
;   :method-count-assert 22
;   :size-assert         #xbc
;   :flag-assert         #x16005000bc
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; (deftype citb-disc-a (citb-disc)
;   ()
;   :method-count-assert 22
;   :size-assert         #xbc
;   :flag-assert         #x16005000bc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; (deftype citb-disc-b (citb-disc)
;   ()
;   :method-count-assert 22
;   :size-assert         #xbc
;   :flag-assert         #x16005000bc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; (deftype citb-disc-c (citb-disc)
;   ()
;   :method-count-assert 22
;   :size-assert         #xbc
;   :flag-assert         #x16005000bc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; (deftype citb-disc-d (citb-disc)
;   ()
;   :method-count-assert 22
;   :size-assert         #xbc
;   :flag-assert         #x16005000bc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; (deftype citb-iris-door (eco-door)
;   ()
;   :method-count-assert 27
;   :size-assert         #x104
;   :flag-assert         #x1b00a00104
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     )
;   )

; (deftype citb-button (basebutton)
;   ()
;   :method-count-assert 32
;   :size-assert         #x100
;   :flag-assert         #x2000900100
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     )
;   )

; (deftype citb-launcher (plat)
;   ((launcher uint32  :offset-assert 264)
;    )
;   :method-count-assert 33
;   :size-assert         #x10c
;   :flag-assert         #x2100a0010c
;   ;; inherited inspect of plat
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     )
;   )

; (deftype citb-robotboss (process-drawable)
;   ((shield-on basic  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb4
;   :flag-assert         #x14005000b4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype citb-coil (process-drawable)
;   ((part-off basic  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb4
;   :flag-assert         #x14005000b4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype citb-hose (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype citb-chains (process-hidden)
;   ((name             basic                 :offset-assert 4)
;    (mask             uint32                :offset-assert 8)
;    (parent           uint32                :offset-assert 12)
;    (brother          uint32                :offset-assert 16)
;    (child            uint32                :offset-assert 20)
;    (ppointer         uint32                :offset-assert 24)
;    (self             basic                 :offset-assert 28)
;    (pool             basic                 :offset-assert 32)
;    (status           basic                 :offset-assert 36)
;    (pid              int32                 :offset-assert 40)
;    (main-thread      basic                 :offset-assert 44)
;    (top-thread       basic                 :offset-assert 48)
;    (entity           basic                 :offset-assert 52)
;    (state            basic                 :offset-assert 56)
;    (trans-hook       basic                 :offset-assert 60)
;    (post-hook        basic                 :offset-assert 64)
;    (event-hook       basic                 :offset-assert 68)
;    (allocated-length int32                 :offset-assert 72)
;    (next-state       basic                 :offset-assert 76)
;    (heap-base        uint32                :offset-assert 80)
;    (heap-top         uint32                :offset-assert 84)
;    (heap-cur         uint32                :offset-assert 88)
;    (stack-frame-top  basic                 :offset-assert 92)
;    (heap             kheap        :inline  :offset-assert 80)
;    (connection-list  'connectable :inline  :offset-assert 96)
;    (stack            UNKNOWN      :dynamic :offset-assert 112)
;    )
;   :method-count-assert 15
;   :size-assert         #x70
;   :flag-assert         #xf00000070
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     )
;   )

; (deftype citb-generator (process-drawable)
;   ((normal-look     lod-set :inline :offset-assert 176)
;    (broken-look     lod-set :inline :offset-assert 212)
;    (mushroom-pos    vector  :inline :offset-assert 256)
;    (mushroom        basic           :offset-assert 272)
;    (birth-fuel-cell basic           :offset-assert 276)
;    (trigger-others  basic           :offset-assert 280)
;    (part-broken     basic           :offset-assert 284)
;    (part-mushroom   basic           :offset-assert 288)
;    )
;   :method-count-assert 22
;   :size-assert         #x124
;   :flag-assert         #x1600c00124
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; (deftype citadelcam (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype citb-battlecontroller (battlecontroller)
;   ()
;   :method-count-assert 29
;   :size-assert         #x27c
;   :flag-assert         #x1d0210027c
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     )
;   )

;; - Functions

(define-extern citb-generator-trigger-others function)
(define-extern citb-hose-event-handler function)

;; - Unknowns

;;(define-extern *citadelcam-sg* object) ;; unknown type
;;(define-extern citadelcam-idle object) ;; unknown type
;;(define-extern citadelcam-stair-plats object) ;; unknown type
;;(define-extern citb-generator-broken object) ;; unknown type
;;(define-extern citb-generator-idle object) ;; unknown type
;;(define-extern *citb-generator-sg* object) ;; unknown type
;;(define-extern *citb-generator-broken-sg* object) ;; unknown type
;;(define-extern citb-generator-break object) ;; unknown type
;;(define-extern *citb-hose-sg* object) ;; unknown type
;;(define-extern citb-hose-die object) ;; unknown type
;;(define-extern citb-hose-idle object) ;; unknown type
;;(define-extern citb-hose-spawn object) ;; unknown type
;;(define-extern *citb-coil-sg* object) ;; unknown type
;;(define-extern citb-coil-broken object) ;; unknown type
;;(define-extern citb-coil-idle object) ;; unknown type
;;(define-extern citb-coil-break object) ;; unknown type
;;(define-extern *citb-robotboss-sg* object) ;; unknown type
;;(define-extern citb-robotboss-die object) ;; unknown type
;;(define-extern citb-robotboss-idle object) ;; unknown type
;;(define-extern *citb-robotboss-nose-sg* object) ;; unknown type
;;(define-extern *citb-robotboss-head-sg* object) ;; unknown type
;;(define-extern *citb-robotboss-gun-sg* object) ;; unknown type
;;(define-extern *citb-robotboss-leftshoulder-sg* object) ;; unknown type
;;(define-extern *citb-robotboss-rightshoulder-sg* object) ;; unknown type
;;(define-extern *citb-robotboss-leftarm-sg* object) ;; unknown type
;;(define-extern *citb-robotboss-rightarm-sg* object) ;; unknown type
;;(define-extern *citb-robotboss-belly-sg* object) ;; unknown type
;;(define-extern *citb-launcher-sg* object) ;; unknown type
;;(define-extern *citb-button-sg* object) ;; unknown type
;;(define-extern *citb-iris-door-sg* object) ;; unknown type
;;(define-extern *citb-disc-d-sg* object) ;; unknown type
;;(define-extern *citb-disc-c-sg* object) ;; unknown type
;;(define-extern *citb-disc-b-sg* object) ;; unknown type
;;(define-extern *citb-disc-a-sg* object) ;; unknown type
;;(define-extern citb-disc-idle object) ;; unknown type
;;(define-extern *citb-arm-shoulder-b-sg* object) ;; unknown type
;;(define-extern *citb-arm-shoulder-a-sg* object) ;; unknown type
;;(define-extern *citb-arm-d-sg* object) ;; unknown type
;;(define-extern *citb-arm-c-sg* object) ;; unknown type
;;(define-extern *citb-arm-b-sg* object) ;; unknown type
;;(define-extern *citb-arm-a-sg* object) ;; unknown type


;; ----------------------
;; File - citb-plat
;; Source Path - levels/citadel/citb-plat.gc
;; Containing DGOs - ['CIT', 'L1']
;; Version - 3

;; - Types

; (deftype citb-base-plat (process-drawable)
;   ((idle-distance float  :offset-assert 176)
;    )
;   :method-count-assert 25
;   :size-assert         #xb4
;   :flag-assert         #x19005000b4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     )
;   )

; (deftype citb-plat-eco (plat-eco)
;   ()
;   :method-count-assert 33
;   :size-assert         #x165
;   :flag-assert         #x2101000165
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     )
;   )

; (deftype citb-plat (plat)
;   ((trans-offset vector :inline :offset-assert 272)
;    )
;   :method-count-assert 33
;   :size-assert         #x120
;   :flag-assert         #x2100b00120
;   ;; inherited inspect of plat
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     )
;   )

; (deftype citb-stair-plat (citb-base-plat)
;   ((idle-height float   :offset-assert 180)
;    (rise-height float   :offset-assert 184)
;    (delay       uint64  :offset-assert 192)
;    (rise        basic   :offset-assert 200)
;    )
;   :method-count-assert 25
;   :size-assert         #xcc
;   :flag-assert         #x19006000cc
;   ;; inherited inspect of citb-base-plat
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     )
;   )

; (deftype citb-chain-plat (rigid-body-platform)
;   ((orig-trans   vector     :inline :offset-assert 736)
;    (orig-quat    quaternion :inline :offset-assert 752)
;    (beam-end     vector     :inline :offset-assert 768)
;    (float-offset float              :offset-assert 784)
;    (idle-offset  float              :offset-assert 788)
;    )
;   :method-count-assert 35
;   :size-assert         #x318
;   :flag-assert         #x2302b00318
;   ;; inherited inspect of rigid-body-platform
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     )
;   )

; (deftype citb-rotatebox (citb-base-plat)
;   ()
;   :method-count-assert 25
;   :size-assert         #xb4
;   :flag-assert         #x19005000b4
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     )
;   )

; (deftype citb-donut (citb-base-plat)
;   ((sync sync-info :inline :offset-assert 180)
;    )
;   :method-count-assert 25
;   :size-assert         #xbc
;   :flag-assert         #x19005000bc
;   ;; inherited inspect of citb-base-plat
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     )
;   )

; (deftype citb-stopbox (plat)
;   ()
;   :method-count-assert 33
;   :size-assert         #x108
;   :flag-assert         #x2100a00108
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     )
;   )

; (deftype citb-firehose (process-drawable)
;   ((idle-distance float             :offset-assert 176)
;    (sync          sync-info :inline :offset-assert 180)
;    (last-sync     float             :offset-assert 188)
;    (blast-pos     vector    :inline :offset-assert 192)
;    )
;   :method-count-assert 20
;   :size-assert         #xd0
;   :flag-assert         #x14006000d0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype citb-exit-plat (plat-button)
;   ((idle-height float  :offset-assert 240)
;    (rise-height float  :offset-assert 244)
;    (activated   basic  :offset-assert 248)
;    )
;   :method-count-assert 33
;   :size-assert         #xfc
;   :flag-assert         #x21009000fc
;   ;; inherited inspect of plat-button
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     )
;   )

;; - Functions

(define-extern citb-exit-plat-move-player function)
(define-extern citb-firehose-blast-particles function)

;; - Unknowns

;;(define-extern citb-exit-plat-idle object) ;; unknown type
;;(define-extern *citb-exit-plat-sg* object) ;; unknown type
;;(define-extern citb-exit-plat-rise object) ;; unknown type
;;(define-extern *citb-firehose-sg* object) ;; unknown type
;;(define-extern citb-firehose-idle object) ;; unknown type
;;(define-extern citb-firehose-active object) ;; unknown type
;;(define-extern citb-firehose-blast object) ;; unknown type
;;(define-extern *citb-stopbox-sg* object) ;; unknown type
;;(define-extern *citb-donut-sg* object) ;; unknown type
;;(define-extern *citb-rotatebox-sg* object) ;; unknown type
;;(define-extern *citb-chain-plat-sg* object) ;; unknown type
;;(define-extern *citb-chain-plat-constants* object) ;; unknown type
;;(define-extern citb-chain-plat-settle object) ;; unknown type
;;(define-extern *plat-citb-sg* object) ;; unknown type
;;(define-extern *plat-eco-citb-lit-sg* object) ;; unknown type
;;(define-extern *plat-eco-citb-unlit-sg* object) ;; unknown type


;; ----------------------
;; File - citadel-sages
;; Source Path - levels/citadel/citadel-sages.gc
;; Containing DGOs - ['CIT', 'L1']
;; Version - 3

;; - Types

; (deftype citb-sagecage (process-drawable)
;   ((bar-array    UNKNOWN 12 :offset-assert 176)
;    (angle-offset float      :offset-assert 368)
;    (bars-on      basic      :offset-assert 372)
;    (cloning      basic      :offset-assert 376)
;    )
;   :method-count-assert 22
;   :size-assert         #x17c
;   :flag-assert         #x160110017c
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; (deftype citb-sage (process-taskable)
;   ((spawn-pos         vector :inline :offset-assert 384)
;    (target-pos        vector :inline :offset-assert 400)
;    (dir               vector :inline :offset-assert 416)
;    (rot-y             float          :offset-assert 432)
;    (rot-x             float          :offset-assert 436)
;    (idle-anim         int32          :offset-assert 440)
;    (attack-start-anim int32          :offset-assert 444)
;    (attack-anim       int32          :offset-assert 448)
;    (beam-joint        int32          :offset-assert 452)
;    (cage              uint64         :offset-assert 456)
;    (part-impact       basic          :offset-assert 464)
;    (beam-on           basic          :offset-assert 468)
;    (resolution-anim   basic          :offset-assert 472)
;    (sound-name        basic          :offset-assert 476)
;    (sound-id          sound-id       :offset-assert 480)
;    (alt-actor         basic          :offset-assert 484)
;    )
;   :method-count-assert 53
;   :size-assert         #x1e8
;   :flag-assert         #x35018001e8
;   ;; inherited inspect of process-taskable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

; (deftype red-sagecage (citb-sage)
;   ()
;   :method-count-assert 53
;   :size-assert         #x1e8
;   :flag-assert         #x35018001e8
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

; (deftype blue-sagecage (citb-sage)
;   ()
;   :method-count-assert 53
;   :size-assert         #x1e8
;   :flag-assert         #x35018001e8
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

; (deftype yellow-sagecage (citb-sage)
;   ()
;   :method-count-assert 53
;   :size-assert         #x1e8
;   :flag-assert         #x35018001e8
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

; (deftype green-sagecage (citb-sage)
;   ((which-movie int32   :offset-assert 488)
;    (evilbro     uint64  :offset-assert 496)
;    (evilsis     uint64  :offset-assert 504)
;    (robotboss   uint64  :offset-assert 512)
;    (exitplat    uint64  :offset-assert 520)
;    )
;   :method-count-assert 53
;   :size-assert         #x210
;   :flag-assert         #x3501a00210
;   ;; inherited inspect of citb-sage
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

;; - Functions

(define-extern citb-sage-draw-beam function)
(define-extern citb-sagecage-init-by-other function)
(define-extern citb-sagecage-update-collision function)
(define-extern citb-sagecage-draw-bars function)

;; - Unknowns

;;(define-extern *green-sagecage-sg* object) ;; unknown type
;;(define-extern *robotboss-sg* object) ;; unknown type
;;(define-extern *evilbro-citadel-sg* object) ;; unknown type
;;(define-extern *evilsis-citadel-sg* object) ;; unknown type
;;(define-extern *yellowsage-sg* object) ;; unknown type
;;(define-extern *bluesage-sg* object) ;; unknown type
;;(define-extern *redsage-sg* object) ;; unknown type
;;(define-extern citb-sagecage-idle object) ;; unknown type
;;(define-extern *citb-sagecage-sg* object) ;; unknown type


;; ----------------------
;; File - snow-bunny
;; Source Path - levels/common/snow-bunny.gc
;; Containing DGOs - ['CIT', 'L1', 'SNO']
;; Version - 3

;; - Types

; (deftype snow-bunny (nav-enemy)
;   ((patrol-rand-distraction int32          :offset-assert 400)
;    (base-hop-dist           float          :offset-assert 404)
;    (halfway-dist            float          :offset-assert 408)
;    (retreat-timeout         float          :offset-assert 412)
;    (gnd-popup               float          :offset-assert 416)
;    (jump-height-min         float          :offset-assert 420)
;    (jump-height-factor      float          :offset-assert 424)
;    (jump-anim-start-frame   float          :offset-assert 428)
;    (defense                 uint64         :offset-assert 432)
;    (retreat-timeout-time    uint64         :offset-assert 440)
;    (last-nondangerous-time  uint64         :offset-assert 448)
;    (patrol-hop-failed?      basic          :offset-assert 456)
;    (should-retreat?         basic          :offset-assert 460)
;    (got-jump-event?         basic          :offset-assert 464)
;    (using-jump-event?       basic          :offset-assert 468)
;    (jump-anim               int8           :offset-assert 472)
;    (notice-land-anim        int8           :offset-assert 473)
;    (attack-anim             int8           :offset-assert 474)
;    (final-dest              vector :inline :offset-assert 480)
;    (jump-event-dest         vector :inline :offset-assert 496)
;    )
;   :method-count-assert 77
;   :size-assert         #x200
;   :flag-assert         #x4d01900200
;   ;; inherited inspect of nav-enemy
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     (dummy-76 () none 76)
;     )
;   )

; (deftype snow-bunny-retreat-work (structure)
;   ((found-best        basic          :offset-assert 0)
;    (using-jump-event? basic          :offset-assert 4)
;    (best-travel-dist  float          :offset-assert 8)
;    (best-dest         vector :inline :offset-assert 16)
;    (away-vec          vector :inline :offset-assert 32)
;    )
;   :method-count-assert 9
;   :size-assert         #x30
;   :flag-assert         #x900000030
;   )

;; - Functions

(define-extern snow-bunny-execute-jump function)
(define-extern snow-bunny-initialize-jump function)
(define-extern snow-bunny-default-event-handler function)

;; - Unknowns

;;(define-extern *snow-bunny* object) ;; unknown type
;;(define-extern *snow-bunny-nav-enemy-info* object) ;; unknown type
;;(define-extern *snow-bunny-sg* object) ;; unknown type


;; ----------------------
;; File - citb-bunny
;; Source Path - levels/citadel/citb-bunny.gc
;; Containing DGOs - ['CIT', 'L1']
;; Version - 3

;; - Types

; (deftype citb-bunny (snow-bunny)
;   ()
;   :method-count-assert 77
;   :size-assert         #x200
;   :flag-assert         #x4d01900200
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     (dummy-76 () none 76)
;     )
;   )

;; - Unknowns

;;(define-extern *citb-bunny-nav-enemy-info* object) ;; unknown type
;;(define-extern *citb-bunny-sg* object) ;; unknown type


;; ----------------------
;; File - citb-drop-plat-CIT
;; Source Path - levels/citadel/citb-drop-plat-CIT.gc
;; Containing DGOs - ['CIT']
;; Version - 3

;; - Types

; (deftype drop-plat (process-drawable)
;   ((spin-axis  vector :inline :offset-assert 176)
;    (spin-angle float          :offset-assert 192)
;    (spin-speed float          :offset-assert 196)
;    (interp     float          :offset-assert 200)
;    (duration   uint64         :offset-assert 208)
;    (delay      uint64         :offset-assert 216)
;    (color      int8           :offset-assert 224)
;    )
;   :method-count-assert 22
;   :size-assert         #xe1
;   :flag-assert         #x16008000e1
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; (deftype handle-inline-array (inline-array-class)
;   ((length           int32            :offset-assert 4)
;    (allocated-length int32            :offset-assert 8)
;    (data             UNKNOWN :dynamic :offset-assert 16)
;    )
;   :method-count-assert 9
;   :size-assert         #x10
;   :flag-assert         #x900000010
;   )

; (deftype citb-drop-plat (process-drawable)
;   ((x-count           int32          :offset-assert 176)
;    (z-count           int32          :offset-assert 180)
;    (child-count       int32          :offset-assert 184)
;    (child-array       basic          :offset-assert 188)
;    (child-color-array uint32         :offset-assert 192)
;    (x-dir             vector :inline :offset-assert 208)
;    (z-dir             vector :inline :offset-assert 224)
;    (origin            vector :inline :offset-assert 240)
;    (x-spacing         float          :offset-assert 256)
;    (z-spacing         float          :offset-assert 260)
;    (idle-distance     float          :offset-assert 264)
;    (duration          uint64         :offset-assert 272)
;    (drop-time         uint64         :offset-assert 280)
;    )
;   :method-count-assert 20
;   :size-assert         #x120
;   :flag-assert         #x1400b00120
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

;; - Functions

(define-extern citb-drop-plat-spawn-children function)
(define-extern citb-drop-plat-drop-children function)
(define-extern citb-drop-plat-drop-all-children function)
(define-extern drop-plat-init-by-other function)
(define-extern drop-plat-set-fade function)

;; - Unknowns

;;(define-extern citb-drop-plat-idle object) ;; unknown type
;;(define-extern citb-drop-plat-active object) ;; unknown type
;;(define-extern drop-plat-spawn object) ;; unknown type
;;(define-extern *citb-drop-plat-red-sg* object) ;; unknown type
;;(define-extern *citb-drop-plat-green-sg* object) ;; unknown type
;;(define-extern *citb-drop-plat-blue-sg* object) ;; unknown type
;;(define-extern *citb-drop-plat-yellow-sg* object) ;; unknown type
;;(define-extern *citb-drop-plat-sg* object) ;; unknown type
;;(define-extern drop-plat-die object) ;; unknown type
;;(define-extern drop-plat-idle object) ;; unknown type
;;(define-extern drop-plat-drop object) ;; unknown type
;;(define-extern drop-plat-rise object) ;; unknown type


;; ----------------------
;; File - citb-drop-plat-L1
;; Source Path - levels/l1_only/citb-drop-plat-L1.gc
;; Containing DGOs - ['L1']
;; Version - 3

;; - Nothing Defined in This File!


;; ----------------------
;; File - assistant-citadel
;; Source Path - levels/citadel/assistant-citadel.gc
;; Containing DGOs - ['CIT', 'L1']
;; Version - 3

;; - Types

; (deftype assistant-lavatube-end (process-taskable)
;   ()
;   :method-count-assert 53
;   :size-assert         #x17c
;   :flag-assert         #x350110017c
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

;; - Unknowns

;;(define-extern *assistant-lavatube-end-sg* object) ;; unknown type


;; ----------------------
;; File - tpage-1415
;; Source Path - levels/citadel/tpage-1415.gd
;; Containing DGOs - ['CIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1417
;; Source Path - levels/citadel/tpage-1417.gd
;; Containing DGOs - ['CIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1416
;; Source Path - levels/citadel/tpage-1416.gd
;; Containing DGOs - ['CIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1414
;; Source Path - levels/citadel/tpage-1414.gd
;; Containing DGOs - ['CIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - assistant-lavatube-end-ag
;; Source Path - levels/citadel/assistant-lavatube-end-ag.gd
;; Containing DGOs - ['CIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - bluesage-ag
;; Source Path - levels/citadel/bluesage-ag.gd
;; Containing DGOs - ['CIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - citadelcam-ag
;; Source Path - levels/citadel/citadelcam-ag.gd
;; Containing DGOs - ['CIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - citb-arm-ag
;; Source Path - levels/citadel/citb-arm-ag.gd
;; Containing DGOs - ['CIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - citb-arm-shoulder-ag
;; Source Path - levels/citadel/citb-arm-shoulder-ag.gd
;; Containing DGOs - ['CIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - citb-bunny-ag
;; Source Path - levels/citadel/citb-bunny-ag.gd
;; Containing DGOs - ['CIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - citb-button-ag
;; Source Path - levels/citadel/citb-button-ag.gd
;; Containing DGOs - ['CIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - citb-chain-plat-ag
;; Source Path - levels/citadel/citb-chain-plat-ag.gd
;; Containing DGOs - ['CIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - citb-chains-ag
;; Source Path - levels/citadel/citb-chains-ag.gd
;; Containing DGOs - ['CIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - citb-coil-ag
;; Source Path - levels/citadel/citb-coil-ag.gd
;; Containing DGOs - ['CIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - citb-disc-ag
;; Source Path - levels/citadel/citb-disc-ag.gd
;; Containing DGOs - ['CIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - citb-donut-ag
;; Source Path - levels/citadel/citb-donut-ag.gd
;; Containing DGOs - ['CIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - citb-drop-plat-ag
;; Source Path - levels/citadel/citb-drop-plat-ag.gd
;; Containing DGOs - ['CIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - citb-exit-plat-ag
;; Source Path - levels/citadel/citb-exit-plat-ag.gd
;; Containing DGOs - ['CIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - citb-firehose-ag
;; Source Path - levels/citadel/citb-firehose-ag.gd
;; Containing DGOs - ['CIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - citb-generator-ag
;; Source Path - levels/citadel/citb-generator-ag.gd
;; Containing DGOs - ['CIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - citb-hose-ag
;; Source Path - levels/citadel/citb-hose-ag.gd
;; Containing DGOs - ['CIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - citb-iris-door-ag
;; Source Path - levels/citadel/citb-iris-door-ag.gd
;; Containing DGOs - ['CIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - citb-launcher-ag
;; Source Path - levels/citadel/citb-launcher-ag.gd
;; Containing DGOs - ['CIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - citb-robotboss-ag
;; Source Path - levels/citadel/citb-robotboss-ag.gd
;; Containing DGOs - ['CIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - citb-rotatebox-ag
;; Source Path - levels/citadel/citb-rotatebox-ag.gd
;; Containing DGOs - ['CIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - citb-sagecage-ag
;; Source Path - levels/citadel/citb-sagecage-ag.gd
;; Containing DGOs - ['CIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - citb-stopbox-ag
;; Source Path - levels/citadel/citb-stopbox-ag.gd
;; Containing DGOs - ['CIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - evilbro-citadel-ag
;; Source Path - levels/citadel/evilbro-citadel-ag.gd
;; Containing DGOs - ['CIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - evilsis-citadel-ag
;; Source Path - levels/citadel/evilsis-citadel-ag.gd
;; Containing DGOs - ['CIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - green-sagecage-ag
;; Source Path - levels/common/green-sagecage-ag.gd
;; Containing DGOs - ['CIT', 'FIN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - plat-citb-ag
;; Source Path - levels/citadel/plat-citb-ag.gd
;; Containing DGOs - ['CIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - plat-eco-citb-ag
;; Source Path - levels/citadel/plat-eco-citb-ag.gd
;; Containing DGOs - ['CIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - redsage-ag
;; Source Path - levels/citadel/redsage-ag.gd
;; Containing DGOs - ['CIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - warp-gate-switch-ag-CIT
;; Source Path - levels/citadel/warp-gate-switch-ag-CIT.gd
;; Containing DGOs - ['CIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - warp-gate-switch-ag-TRA
;; Source Path - levels/training/warp-gate-switch-ag-TRA.gd
;; Containing DGOs - ['TRA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - warp-gate-switch-ag-VI1-VI3
;; Source Path - levels/common/warp-gate-switch-ag-VI1-VI3.gd
;; Containing DGOs - ['VI1', 'VI3']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - warp-gate-switch-ag-VI2
;; Source Path - levels/village2/warp-gate-switch-ag-VI2.gd
;; Containing DGOs - ['VI2']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - warpgate-ag
;; Source Path - levels/common/warpgate-ag.gd
;; Containing DGOs - ['CIT', 'TRA', 'VI1', 'VI2', 'VI3']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - yellowsage-ag
;; Source Path - levels/citadel/yellowsage-ag.gd
;; Containing DGOs - ['CIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - citadel-vis
;; Source Path - levels/citadel/citadel-vis.gd
;; Containing DGOs - ['CIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - darkcave-obs
;; Source Path - levels/darkcave/darkcave-obs.gc
;; Containing DGOs - ['DAR', 'L1']
;; Version - 3

;; - Types

; (deftype cavecrystal (process-drawable)
;   ((is-master?                 basic          :offset-assert 176)
;    (crystal-id                 int32          :offset-assert 180)
;    (glow-u                     float          :offset-assert 184)
;    (glow-wf-period             int32          :offset-assert 188)
;    (glow-wf-offset             int32          :offset-assert 192)
;    (prev-compute-glow-time     uint64         :offset-assert 200)
;    (start-fade-time            uint64         :offset-assert 208)
;    (end-fade-time              uint64         :offset-assert 216)
;    (activated-time             uint64         :offset-assert 224)
;    (last-updated-user-lighting uint64         :offset-assert 232)
;    (player-attack-id           uint64         :offset-assert 240)
;    (on-color-mult              vector :inline :offset-assert 256)
;    (on-color-emissive          vector :inline :offset-assert 272)
;    (off-color-mult             vector :inline :offset-assert 288)
;    (off-color-emissive         vector :inline :offset-assert 304)
;    )
;   :method-count-assert 22
;   :size-assert         #x140
;   :flag-assert         #x1600d00140
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

;; - Unknowns

;;(define-extern *cavecrystal-sg* object) ;; unknown type
;;(define-extern *cavecrystal-light-control* object) ;; unknown type
;;(define-extern cavecrystal-idle object) ;; unknown type
;;(define-extern cavecrystal-active object) ;; unknown type


;; ----------------------
;; File - tpage-1306
;; Source Path - levels/darkcave/tpage-1306.gd
;; Containing DGOs - ['DAR']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1307
;; Source Path - levels/darkcave/tpage-1307.gd
;; Containing DGOs - ['DAR']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1305
;; Source Path - levels/darkcave/tpage-1305.gd
;; Containing DGOs - ['DAR']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1304
;; Source Path - levels/darkcave/tpage-1304.gd
;; Containing DGOs - ['DAR']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1352
;; Source Path - levels/darkcave/tpage-1352.gd
;; Containing DGOs - ['DAR']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - baby-spider-ag-DAR
;; Source Path - levels/darkcave/baby-spider-ag-DAR.gd
;; Containing DGOs - ['DAR']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - baby-spider-ag-MAI
;; Source Path - levels/maincave/baby-spider-ag-MAI.gd
;; Containing DGOs - ['MAI']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - baby-spider-ag-ROB
;; Source Path - levels/robocave/baby-spider-ag-ROB.gd
;; Containing DGOs - ['ROB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - cavecrystal-ag
;; Source Path - levels/darkcave/cavecrystal-ag.gd
;; Containing DGOs - ['DAR']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - caveelevator-ag
;; Source Path - levels/cave_common/caveelevator-ag.gd
;; Containing DGOs - ['DAR', 'ROB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - cavespatula-darkcave-ag
;; Source Path - levels/darkcave/cavespatula-darkcave-ag.gd
;; Containing DGOs - ['DAR']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - cavetrapdoor-ag-DAR
;; Source Path - levels/darkcave/cavetrapdoor-ag-DAR.gd
;; Containing DGOs - ['DAR']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - cavetrapdoor-ag-MAI
;; Source Path - levels/maincave/cavetrapdoor-ag-MAI.gd
;; Containing DGOs - ['MAI']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - cavetrapdoor-ag-ROB
;; Source Path - levels/robocave/cavetrapdoor-ag-ROB.gd
;; Containing DGOs - ['ROB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - dark-crystal-ag
;; Source Path - levels/cave_common/dark-crystal-ag.gd
;; Containing DGOs - ['DAR', 'MAI']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - mother-spider-ag
;; Source Path - levels/cave_common/mother-spider-ag.gd
;; Containing DGOs - ['DAR', 'MAI']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - spider-egg-ag-DAR-MAI
;; Source Path - levels/cave_common/spider-egg-ag-DAR-MAI.gd
;; Containing DGOs - ['DAR', 'MAI']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - spider-egg-ag-ROB
;; Source Path - levels/robocave/spider-egg-ag-ROB.gd
;; Containing DGOs - ['ROB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - water-anim-darkcave-ag
;; Source Path - levels/darkcave/water-anim-darkcave-ag.gd
;; Containing DGOs - ['DAR']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - darkcave-vis
;; Source Path - levels/darkcave/darkcave-vis.gd
;; Containing DGOs - ['DAR']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - demo-obs
;; Source Path - levels/demo/demo-obs.gc
;; Containing DGOs - ['DEM', 'L1']
;; Version - 3

;; - Functions

(define-extern static-screen-spawn function)


;; ----------------------
;; File - tpage-1485
;; Source Path - levels/demo/tpage-1485.gd
;; Containing DGOs - ['DEM', 'L1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1486
;; Source Path - levels/demo/tpage-1486.gd
;; Containing DGOs - ['DEM', 'L1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1487
;; Source Path - levels/demo/tpage-1487.gd
;; Containing DGOs - ['DEM', 'L1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1599
;; Source Path - levels/demo/tpage-1599.gd
;; Containing DGOs - ['DEM', 'L1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1600
;; Source Path - levels/demo/tpage-1600.gd
;; Containing DGOs - ['DEM', 'L1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1601
;; Source Path - levels/demo/tpage-1601.gd
;; Containing DGOs - ['DEM', 'L1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1602
;; Source Path - levels/demo/tpage-1602.gd
;; Containing DGOs - ['DEM', 'L1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1603
;; Source Path - levels/demo/tpage-1603.gd
;; Containing DGOs - ['DEM', 'L1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1604
;; Source Path - levels/demo/tpage-1604.gd
;; Containing DGOs - ['DEM', 'L1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1605
;; Source Path - levels/demo/tpage-1605.gd
;; Containing DGOs - ['DEM', 'L1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1606
;; Source Path - levels/demo/tpage-1606.gd
;; Containing DGOs - ['DEM', 'L1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1607
;; Source Path - levels/demo/tpage-1607.gd
;; Containing DGOs - ['DEM', 'L1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - static-screen
;; Source Path - levels/common/static-screen.gc
;; Containing DGOs - ['DEM', 'L1', 'TIT']
;; Version - 3

;; - Types

; (deftype static-screen (process)
;   ((part       UNKNOWN 1 :offset-assert 112)
;    (state-time uint64    :offset-assert 120)
;    )
;   :method-count-assert 15
;   :size-assert         #x80
;   :flag-assert         #xf00100080
;   ;; inherited inspect of process
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     )
;   )

;; - Functions

(define-extern static-screen-init-by-other function)


;; ----------------------
;; File - tpage-1480
;; Source Path - levels/demo/tpage-1480.gd
;; Containing DGOs - ['DEM']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1479
;; Source Path - levels/demo/tpage-1479.gd
;; Containing DGOs - ['DEM']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - demo-vis
;; Source Path - levels/demo/demo-vis.gd
;; Containing DGOs - ['DEM']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - robotboss-h
;; Source Path - levels/finalboss/robotboss-h.gc
;; Containing DGOs - ['FIN', 'L1']
;; Version - 3

;; - Types

; (deftype robotboss-dda (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; bad get label
;   )

; (deftype robotboss (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; unrecognized get op: (set! v1 process-drawable) parent was UNKNOWN
;   )

;; - Functions

(define-extern target-has-all-the-cells? function)


;; ----------------------
;; File - robotboss-part
;; Source Path - levels/finalboss/robotboss-part.gc
;; Containing DGOs - ['FIN', 'L1']
;; Version - 3

;; - Nothing Defined in This File!


;; ----------------------
;; File - sage-finalboss-part
;; Source Path - levels/finalboss/sage-finalboss-part.gc
;; Containing DGOs - ['FIN', 'L1']
;; Version - 3

;; - Functions

(define-extern check-drop-level-eichar-lighteco-pops function)
(define-extern check-drop-level-bigdoor-open-pops function)


;; ----------------------
;; File - light-eco
;; Source Path - levels/finalboss/light-eco.gc
;; Containing DGOs - ['FIN', 'L1']
;; Version - 3

;; - Types

; (deftype light-eco-child (process-drawable)
;   ((angle-bit          int32              :offset-assert 176)
;    (ground-y           float              :offset-assert 180)
;    (falling-start-time uint64             :offset-assert 184)
;    (last-update-time   uint64             :offset-assert 192)
;    (rot                vector     :inline :offset-assert 208)
;    (rotv               vector     :inline :offset-assert 224)
;    (traj               trajectory :inline :offset-assert 240)
;    )
;   :method-count-assert 21
;   :size-assert         #x118
;   :flag-assert         #x1500b00118
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; (deftype light-eco-mother (process-drawable)
;   ((player-got-eco?   basic   :offset-assert 176)
;    (angle-mask        uint64  :offset-assert 184)
;    (delay-til-spawn   int32   :offset-assert 192)
;    (part2             basic   :offset-assert 196)
;    (last-update-time  uint64  :offset-assert 200)
;    (last-spawned-time uint64  :offset-assert 208)
;    )
;   :method-count-assert 22
;   :size-assert         #xd8
;   :flag-assert         #x16007000d8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

;; - Functions

(define-extern light-eco-child-init-by-other function)
(define-extern check-drop-level-lighteco-big-pops function)
(define-extern check-drop-level-lighteco-pops function)
(define-extern light-eco-child-default-event-handler function)
(define-extern light-eco-mother-default-event-handler function)
(define-extern light-eco-mother-init-by-other function)

;; - Unknowns

;;(define-extern *light-eco-big-sg* object) ;; unknown type
;;(define-extern light-eco-mother-appear object) ;; unknown type
;;(define-extern light-eco-mother-active object) ;; unknown type
;;(define-extern light-eco-mother-discipate object) ;; unknown type
;;(define-extern *light-eco-small-sg* object) ;; unknown type
;;(define-extern light-eco-child-appear object) ;; unknown type
;;(define-extern light-eco-child-die object) ;; unknown type
;;(define-extern light-eco-child-idle object) ;; unknown type
;;(define-extern light-eco-child-hit-ground object) ;; unknown type
;;(define-extern light-eco-child-grabbed object) ;; unknown type


;; ----------------------
;; File - robotboss-weapon
;; Source Path - levels/finalboss/robotboss-weapon.gc
;; Containing DGOs - ['FIN', 'L1']
;; Version - 3

;; - Types

; (deftype torus (structure)
;   ((origin           vector :inline :offset-assert 0)
;    (axis             vector :inline :offset-assert 16)
;    (radius-primary   float          :offset-assert 32)
;    (radius-secondary float          :offset-assert 36)
;    )
;   :method-count-assert 13
;   :size-assert         #x28
;   :flag-assert         #xd00000028
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     )
;   )

; (deftype torus-verts (structure)
;   ((vert UNKNOWN 8 :offset-assert 0)
;    )
;   :method-count-assert 9
;   :size-assert         #x80
;   :flag-assert         #x900000080
;   )

; (deftype arcing-shot (process-drawable)
;   ((y-vel float          :offset-assert 176)
;    (grav  float          :offset-assert 180)
;    (from  vector :inline :offset-assert 192)
;    (to    vector :inline :offset-assert 208)
;    )
;   :method-count-assert 20
;   :size-assert         #xe0
;   :flag-assert         #x14007000e0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype darkecobomb (arcing-shot)
;   ((flight-time    uint64  :offset-assert 224)
;    (countdown-time float   :offset-assert 232)
;    (anim-speed     float   :offset-assert 236)
;    (next-tick      float   :offset-assert 240)
;    )
;   :method-count-assert 20
;   :size-assert         #xf4
;   :flag-assert         #x14009000f4
;   ;; inherited inspect of arcing-shot
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype greenshot (arcing-shot)
;   ((flight-time uint64  :offset-assert 224)
;    )
;   :method-count-assert 20
;   :size-assert         #xe8
;   :flag-assert         #x14008000e8
;   ;; inherited inspect of arcing-shot
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype redshot (arcing-shot)
;   ((flight-time     uint64         :offset-assert 224)
;    (stall-time      uint64         :offset-assert 232)
;    (ring            torus  :inline :offset-assert 240)
;    (rotation-offset uint64         :offset-assert 280)
;    (part-track      uint64         :offset-assert 288)
;    (shot-particle   basic          :offset-assert 296)
;    (test-particle   basic          :offset-assert 300)
;    )
;   :method-count-assert 20
;   :size-assert         #x130
;   :flag-assert         #x1400c00130
;   ;; inherited inspect of arcing-shot
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype yellowshot (arcing-shot)
;   ((flight-time uint64  :offset-assert 224)
;    )
;   :method-count-assert 20
;   :size-assert         #xe8
;   :flag-assert         #x14008000e8
;   ;; inherited inspect of arcing-shot
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

;; - Functions

(define-extern arcing-shot-setup function)
(define-extern arcing-shot-calculate function)
(define-extern redshot-trans function)
(define-extern redshot-particle-callback function)
(define-extern darkecobomb-explode-if-player-high-enough function)
(define-extern arcing-shot-draw function)
(define-extern darkecobomb-handler function)
(define-extern darkecobomb-init-by-other function)
(define-extern greenshot-init-by-other function)
(define-extern redshot-handler function)
(define-extern redshot-init-by-other function)
(define-extern yellowshot-init-by-other function)

;; - Unknowns

;;(define-extern *redring-sg* object) ;; unknown type
;;(define-extern yellowshot-idle object) ;; unknown type
;;(define-extern redshot-idle object) ;; unknown type
;;(define-extern redshot-wait object) ;; unknown type
;;(define-extern redshot-explode object) ;; unknown type
;;(define-extern *greenshot-sg* object) ;; unknown type
;;(define-extern greenshot-idle object) ;; unknown type
;;(define-extern *darkecobomb-sg* object) ;; unknown type
;;(define-extern darkecobomb-idle object) ;; unknown type
;;(define-extern darkecobomb-land object) ;; unknown type
;;(define-extern darkecobomb-countdown object) ;; unknown type
;;(define-extern darkecobomb-explode object) ;; unknown type
;;(define-extern arcing-shot-debug-trajectory object) ;; unknown type


;; ----------------------
;; File - robotboss-misc
;; Source Path - levels/finalboss/robotboss-misc.gc
;; Containing DGOs - ['FIN', 'L1']
;; Version - 3

;; - Types

; (deftype ecoclaw-part-info (structure)
;   ((tracker uint64         :offset-assert 0)
;    (kind    basic          :offset-assert 8)
;    (trans   vector :inline :offset-assert 16)
;    )
;   :method-count-assert 9
;   :size-assert         #x20
;   :flag-assert         #x900000020
;   )

; (deftype ecoclaw (process-drawable)
;   ((particles UNKNOWN 3 :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #x110
;   :flag-assert         #x1400a00110
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype silodoor (process-drawable)
;   ((part-opened float  :offset-assert 176)
;    )
;   :method-count-assert 22
;   :size-assert         #xb4
;   :flag-assert         #x16005000b4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; (deftype finalbosscam (process-taskable)
;   ((robotboss uint64  :offset-assert 384)
;    )
;   :method-count-assert 53
;   :size-assert         #x188
;   :flag-assert         #x3501200188
;   ;; inherited inspect of process-taskable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

;; - Functions

(define-extern robotboss-manipy-trans-hook function)
(define-extern ecoclaw-beam-particle-callback function)
(define-extern ecoclaw-handler function)
(define-extern finalbosscam-init-by-other function)

;; - Unknowns

;;(define-extern *finalbosscam-sg* object) ;; unknown type
;;(define-extern *silodoor-sg* object) ;; unknown type
;;(define-extern *ecoclaw-sg* object) ;; unknown type
;;(define-extern *ecoclaw* object) ;; unknown type
;;(define-extern ecoclaw-idle object) ;; unknown type
;;(define-extern ecoclaw-activate object) ;; unknown type
;;(define-extern *med-res-snow1-sg* object) ;; unknown type


;; ----------------------
;; File - green-eco-lurker
;; Source Path - levels/finalboss/green-eco-lurker.gc
;; Containing DGOs - ['FIN', 'L1']
;; Version - 3

;; - Types

; (deftype green-eco-lurker (nav-enemy)
;   ((played-sound? basic              :offset-assert 400)
;    (sound-delay   int32              :offset-assert 404)
;    (appear-dest   vector     :inline :offset-assert 416)
;    (traj          trajectory :inline :offset-assert 432)
;    )
;   :method-count-assert 76
;   :size-assert         #x1d8
;   :flag-assert         #x4c017001d8
;   ;; inherited inspect of nav-enemy
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

; (deftype green-eco-lurker-gen (process-drawable)
;   ((num-to-spawn int32  :offset-assert 176)
;    (num-spawned  int32  :offset-assert 180)
;    (num-alive    int32  :offset-assert 184)
;    )
;   :method-count-assert 20
;   :size-assert         #xbc
;   :flag-assert         #x14005000bc
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

;; - Functions

(define-extern green-eco-lurker-init-by-other function)
(define-extern green-eco-lurker-gen-init-by-other function)

;; - Unknowns

;;(define-extern spawn-minions object) ;; unknown type
;;(define-extern green-eco-lurker-wait-to-appear object) ;; unknown type
;;(define-extern *green-eco-lurker-sg* object) ;; unknown type
;;(define-extern *green-eco-lurker-nav-enemy-info* object) ;; unknown type
;;(define-extern green-eco-lurker-appear-land object) ;; unknown type
;;(define-extern green-eco-lurker-appear object) ;; unknown type
;;(define-extern green-eco-lurker-tune-spheres object) ;; unknown type


;; ----------------------
;; File - robotboss
;; Source Path - levels/finalboss/robotboss.gc
;; Containing DGOs - ['FIN', 'L1']
;; Version - 3

;; - Types

; (deftype redshot-launch-info (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; bad get label
;   )

; (deftype redshot-launch-array (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; bad get label
;   )

;; - Functions

(define-extern robotboss-always-trans function)
(define-extern robotboss-shooting-trans function)
(define-extern robotboss-blue-done function)
(define-extern robotboss-blue-beam function)
(define-extern robotboss-position function)
(define-extern robotboss-cut-cam function)
(define-extern robotboss-set-dda function)
(define-extern robotboss-cut-cam-exit function)
(define-extern robotboss-setup-for-hits function)
(define-extern robotboss-yellow-eco-on function)
(define-extern robotboss-yellow-eco-off function)
(define-extern robotboss-greenshot function)
(define-extern robotboss-handler function)
(define-extern robotboss-darkecobomb function)
(define-extern robotboss-is-red-hit function)
(define-extern robotboss-redshot-fill-array function)
(define-extern robotboss-redshot function)
(define-extern robotboss-time-to-shoot-yellow function)
(define-extern robotboss-is-yellow-hit function)
(define-extern robotboss-yellowshot function)
(define-extern robotboss-bomb-handler function)
(define-extern robotboss-anim-blend-loop function)

;; - Unknowns

;;(define-extern robotboss-blue-wait object) ;; unknown type
;;(define-extern robotboss-blue-dark-bomb object) ;; unknown type
;;(define-extern *robotboss-blueeco-sg* object) ;; unknown type
;;(define-extern robotboss-blue-dark-bomb-wait object) ;; unknown type
;;(define-extern robotboss-green object) ;; unknown type
;;(define-extern robotboss-green-wait object) ;; unknown type
;;(define-extern robotboss-green-dark-bomb object) ;; unknown type
;;(define-extern robotboss-green-dark-bomb-wait object) ;; unknown type
;;(define-extern robotboss-red object) ;; unknown type
;;(define-extern robotboss-red-wait object) ;; unknown type
;;(define-extern robotboss-red-dark-bomb object) ;; unknown type
;;(define-extern *robotboss-redeco-sg* object) ;; unknown type
;;(define-extern robotboss-red-dark-bomb-wait object) ;; unknown type
;;(define-extern robotboss-yellow object) ;; unknown type
;;(define-extern robotboss-yellow-wait object) ;; unknown type
;;(define-extern robotboss-yellow-dark-bomb object) ;; unknown type
;;(define-extern *robotboss-yelloweco-sg* object) ;; unknown type
;;(define-extern robotboss-white-eco-movie object) ;; unknown type
;;(define-extern robotboss-daxter-sacrifice-movie object) ;; unknown type
;;(define-extern robotboss-yellow-dark-bomb-wait object) ;; unknown type


;; ----------------------
;; File - final-door
;; Source Path - levels/finalboss/final-door.gc
;; Containing DGOs - ['FIN', 'L1']
;; Version - 3

;; - Types

; (deftype fin-door (process-hidden)
;   ((name             basic                 :offset-assert 4)
;    (mask             uint32                :offset-assert 8)
;    (parent           uint32                :offset-assert 12)
;    (brother          uint32                :offset-assert 16)
;    (child            uint32                :offset-assert 20)
;    (ppointer         uint32                :offset-assert 24)
;    (self             basic                 :offset-assert 28)
;    (pool             basic                 :offset-assert 32)
;    (status           basic                 :offset-assert 36)
;    (pid              int32                 :offset-assert 40)
;    (main-thread      basic                 :offset-assert 44)
;    (top-thread       basic                 :offset-assert 48)
;    (entity           basic                 :offset-assert 52)
;    (state            basic                 :offset-assert 56)
;    (trans-hook       basic                 :offset-assert 60)
;    (post-hook        basic                 :offset-assert 64)
;    (event-hook       basic                 :offset-assert 68)
;    (allocated-length int32                 :offset-assert 72)
;    (next-state       basic                 :offset-assert 76)
;    (heap-base        uint32                :offset-assert 80)
;    (heap-top         uint32                :offset-assert 84)
;    (heap-cur         uint32                :offset-assert 88)
;    (stack-frame-top  basic                 :offset-assert 92)
;    (heap             kheap        :inline  :offset-assert 80)
;    (connection-list  'connectable :inline  :offset-assert 96)
;    (stack            UNKNOWN      :dynamic :offset-assert 112)
;    )
;   :method-count-assert 15
;   :size-assert         #x70
;   :flag-assert         #xf00000070
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     )
;   )

; (deftype final-door (process-drawable)
;   ()
;   :method-count-assert 23
;   :size-assert         #xb0
;   :flag-assert         #x17004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     )
;   )

; (deftype power-left (final-door)
;   ()
;   :method-count-assert 23
;   :size-assert         #xb0
;   :flag-assert         #x17004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     )
;   )

; (deftype power-right (final-door)
;   ()
;   :method-count-assert 23
;   :size-assert         #xb0
;   :flag-assert         #x17004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     )
;   )

; (deftype powercellalt (process-drawable)
;   ((jump-pos vector :inline :offset-assert 176)
;    (base     vector :inline :offset-assert 192)
;    (index    int32          :offset-assert 208)
;    )
;   :method-count-assert 23
;   :size-assert         #xd4
;   :flag-assert         #x17007000d4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     )
;   )

;; - Functions

(define-extern powercellalt-init-by-other function)

;; - Unknowns

;;(define-extern *powercellalt-sg* object) ;; unknown type
;;(define-extern *power-right-sg* object) ;; unknown type
;;(define-extern *power-left-sg* object) ;; unknown type


;; ----------------------
;; File - sage-finalboss-FIN
;; Source Path - levels/finalboss/sage-finalboss-FIN.gc
;; Containing DGOs - ['FIN']
;; Version - 3

;; - Types

; (deftype plat-eco-finalboss (plat-eco)
;   ((force-dest float   :offset-assert 360)
;    (targ-dest  float   :offset-assert 364)
;    (dest       float   :offset-assert 368)
;    (speed      float   :offset-assert 372)
;    (touch-time uint64  :offset-assert 376)
;    )
;   :method-count-assert 33
;   :size-assert         #x180
;   :flag-assert         #x2101100180
;   ;; inherited inspect of plat-eco
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     )
;   )

; (deftype sage-finalboss-particle (structure)
;   ((part   basic  :offset-assert 0)
;    (active basic  :offset-assert 4)
;    )
;   :method-count-assert 9
;   :size-assert         #x8
;   :flag-assert         #x900000008
;   )

; (deftype sage-finalboss (process-taskable)
;   ((redsage           uint64    :offset-assert 384)
;    (bluesage          uint64    :offset-assert 392)
;    (yellowsage        uint64    :offset-assert 400)
;    (assistant         uint64    :offset-assert 408)
;    (robotplat         uint64    :offset-assert 416)
;    (robotboss         uint64    :offset-assert 424)
;    (silodoor          uint64    :offset-assert 432)
;    (jak-white         uint64    :offset-assert 440)
;    (left-door         basic     :offset-assert 448)
;    (right-door        basic     :offset-assert 452)
;    (kick-in-the-door  basic     :offset-assert 456)
;    (kick-the-credits  basic     :offset-assert 460)
;    (credit-fade       float     :offset-assert 464)
;    (palette-val       float     :offset-assert 468)
;    (particle          UNKNOWN 9 :offset-assert 472)
;    (particle-whiteout basic     :offset-assert 616)
;    (credits-played    basic     :offset-assert 620)
;    )
;   :method-count-assert 53
;   :size-assert         #x270
;   :flag-assert         #x3502000270
;   ;; inherited inspect of process-taskable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

;; - Functions

(define-extern sage-finalboss-extra-enter function)
(define-extern sage-finalboss-extra-trans function)
(define-extern sage-finalboss-credit-particle function)

;; - Unknowns

;;(define-extern *sage-finalboss-sg* object) ;; unknown type
;;(define-extern sage-finalboss-credits object) ;; unknown type
;;(define-extern *jak-white-sg* object) ;; unknown type
;;(define-extern *robotboss-cinematic-sg* object) ;; unknown type
;;(define-extern *plat-eco-finalboss-lit-sg* object) ;; unknown type
;;(define-extern *plat-eco-finalboss-unlit-sg* object) ;; unknown type


;; ----------------------
;; File - sage-finalboss-L1
;; Source Path - levels/l1_only/sage-finalboss-L1.gc
;; Containing DGOs - ['L1']
;; Version - 3

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1419
;; Source Path - levels/finalboss/tpage-1419.gd
;; Containing DGOs - ['FIN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1420
;; Source Path - levels/finalboss/tpage-1420.gd
;; Containing DGOs - ['FIN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-634
;; Source Path - levels/finalboss/tpage-634.gd
;; Containing DGOs - ['FIN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1418
;; Source Path - levels/finalboss/tpage-1418.gd
;; Containing DGOs - ['FIN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-545
;; Source Path - levels/finalboss/tpage-545.gd
;; Containing DGOs - ['FIN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - darkecobomb-ag
;; Source Path - levels/finalboss/darkecobomb-ag.gd
;; Containing DGOs - ['FIN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - ecoclaw-ag
;; Source Path - levels/finalboss/ecoclaw-ag.gd
;; Containing DGOs - ['FIN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - finalbosscam-ag
;; Source Path - levels/finalboss/finalbosscam-ag.gd
;; Containing DGOs - ['FIN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - green-eco-lurker-ag
;; Source Path - levels/finalboss/green-eco-lurker-ag.gd
;; Containing DGOs - ['FIN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - greenshot-ag
;; Source Path - levels/finalboss/greenshot-ag.gd
;; Containing DGOs - ['FIN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - jak-white-ag
;; Source Path - levels/finalboss/jak-white-ag.gd
;; Containing DGOs - ['FIN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - light-eco-ag
;; Source Path - levels/finalboss/light-eco-ag.gd
;; Containing DGOs - ['FIN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - plat-eco-finalboss-ag
;; Source Path - levels/finalboss/plat-eco-finalboss-ag.gd
;; Containing DGOs - ['FIN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - power-left-ag
;; Source Path - levels/finalboss/power-left-ag.gd
;; Containing DGOs - ['FIN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - power-right-ag
;; Source Path - levels/finalboss/power-right-ag.gd
;; Containing DGOs - ['FIN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - powercellalt-ag
;; Source Path - levels/finalboss/powercellalt-ag.gd
;; Containing DGOs - ['FIN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - redring-ag
;; Source Path - levels/finalboss/redring-ag.gd
;; Containing DGOs - ['FIN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - robotboss-ag
;; Source Path - levels/finalboss/robotboss-ag.gd
;; Containing DGOs - ['FIN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - robotboss-blueeco-ag
;; Source Path - levels/finalboss/robotboss-blueeco-ag.gd
;; Containing DGOs - ['FIN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - robotboss-cinematic-ag
;; Source Path - levels/finalboss/robotboss-cinematic-ag.gd
;; Containing DGOs - ['FIN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - robotboss-redeco-ag
;; Source Path - levels/finalboss/robotboss-redeco-ag.gd
;; Containing DGOs - ['FIN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - robotboss-yelloweco-ag
;; Source Path - levels/finalboss/robotboss-yelloweco-ag.gd
;; Containing DGOs - ['FIN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - silodoor-ag
;; Source Path - levels/finalboss/silodoor-ag.gd
;; Containing DGOs - ['FIN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - water-anim-finalboss-ag
;; Source Path - levels/finalboss/water-anim-finalboss-ag.gd
;; Containing DGOs - ['FIN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - finalboss-vis
;; Source Path - levels/finalboss/finalboss-vis.gd
;; Containing DGOs - ['FIN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - evilbro
;; Source Path - levels/intro/evilbro.gc
;; Containing DGOs - ['INT', 'L1']
;; Version - 3

;; - Types

; (deftype evilbro (process-taskable)
;   ((evilsis basic  :offset-assert 380)
;    )
;   :method-count-assert 53
;   :size-assert         #x180
;   :flag-assert         #x3501100180
;   ;; inherited inspect of process-taskable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

; (deftype evilsis (process-taskable)
;   ()
;   :method-count-assert 53
;   :size-assert         #x17c
;   :flag-assert         #x350110017c
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

;; - Unknowns

;;(define-extern *evilsis-intro-sg* object) ;; unknown type
;;(define-extern *evilbro-intro-sg* object) ;; unknown type


;; ----------------------
;; File - tpage-1455
;; Source Path - levels/intro/tpage-1455.gd
;; Containing DGOs - ['INT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1457
;; Source Path - levels/intro/tpage-1457.gd
;; Containing DGOs - ['INT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1456
;; Source Path - levels/intro/tpage-1456.gd
;; Containing DGOs - ['INT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1454
;; Source Path - levels/intro/tpage-1454.gd
;; Containing DGOs - ['INT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - evilbro-ag
;; Source Path - levels/intro/evilbro-ag.gd
;; Containing DGOs - ['INT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - evilsis-ag
;; Source Path - levels/intro/evilsis-ag.gd
;; Containing DGOs - ['INT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - intro-vis
;; Source Path - levels/intro/intro-vis.gd
;; Containing DGOs - ['INT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - jungleb-obs
;; Source Path - levels/jungleb/jungleb-obs.gc
;; Containing DGOs - ['JUB', 'L1']
;; Version - 3

;; - Types

; (deftype eggtop (process-drawable)
;   ((cam-tracker uint64   :offset-assert 176)
;    (sound-id    sound-id :offset-assert 184)
;    )
;   :method-count-assert 20
;   :size-assert         #xbc
;   :flag-assert         #x14005000bc
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype jng-iris-door (eco-door)
;   ()
;   :method-count-assert 27
;   :size-assert         #x104
;   :flag-assert         #x1b00a00104
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     )
;   )

;; - Unknowns

;;(define-extern *jng-iris-door-sg* object) ;; unknown type
;;(define-extern *eggtop-sg* object) ;; unknown type
;;(define-extern eggtop-close object) ;; unknown type
;;(define-extern eggtop-idle object) ;; unknown type


;; ----------------------
;; File - plat-flip
;; Source Path - levels/jungleb/plat-flip.gc
;; Containing DGOs - ['JUB', 'L1']
;; Version - 3

;; - Types

; (deftype plat-flip (process-drawable)
;   ((path-pos              float                 :offset-assert 176)
;    (before-turn-down-time float                 :offset-assert 180)
;    (turn-down-time        float                 :offset-assert 184)
;    (before-turn-up-time   float                 :offset-assert 188)
;    (turn-up-time          float                 :offset-assert 192)
;    (total-time            float                 :offset-assert 196)
;    (sync                  sync-info     :inline :offset-assert 200)
;    (base-pos              vector        :inline :offset-assert 208)
;    (smush                 smush-control :inline :offset-assert 224)
;    )
;   :method-count-assert 20
;   :size-assert         #x100
;   :flag-assert         #x1400900100
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

;; - Unknowns

;;(define-extern *plat-flip-sg* object) ;; unknown type
;;(define-extern plat-flip-idle object) ;; unknown type


;; ----------------------
;; File - plant-boss-main+0-ag
;; Source Path - levels/jungleb/plant-boss-main+0-ag.gd
;; Containing DGOs - ['JUB', 'L1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - aphid
;; Source Path - levels/jungleb/aphid.gc
;; Containing DGOs - ['JUB', 'L1']
;; Version - 3

;; - Types

; (deftype aphid (nav-enemy)
;   ((try int32  :offset-assert 400)
;    )
;   :method-count-assert 76
;   :size-assert         #x194
;   :flag-assert         #x4c01300194
;   ;; inherited inspect of nav-enemy
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

;; - Functions

(define-extern aphid-invulnerable function)
(define-extern aphid-vulnerable function)
(define-extern aphid-init-by-other function)

;; - Unknowns

;;(define-extern *aphid-sg* object) ;; unknown type
;;(define-extern *aphid-nav-enemy-info* object) ;; unknown type


;; ----------------------
;; File - plant-boss
;; Source Path - levels/jungleb/plant-boss.gc
;; Containing DGOs - ['JUB', 'L1']
;; Version - 3

;; - Types

; (deftype plant-boss-arm (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; unrecognized get op: (set! v1 process-drawable) parent was UNKNOWN
;   )

; (deftype plant-boss-leaf (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; unrecognized get op: (set! v1 process-drawable) parent was UNKNOWN
;   )

; (deftype plant-boss (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; unrecognized get op: (set! v1 process-drawable) parent was UNKNOWN
;   )

;; - Functions

(define-extern plant-boss-arm-init function)
(define-extern plant-boss-back-arms-init function)
(define-extern plant-boss-vine-init function)
(define-extern plant-boss-root-init function)
(define-extern plant-boss-leaf-init function)
(define-extern plant-boss-generic-event-handler function)
(define-extern plant-boss-post function)
(define-extern plant-boss-default-event-handler function)

;; - Unknowns

;;(define-extern *plant-boss-sg* object) ;; unknown type
;;(define-extern *plant-boss-shadow-control* object) ;; unknown type
;;(define-extern plant-boss-dead object) ;; unknown type
;;(define-extern plant-boss-far-idle object) ;; unknown type
;;(define-extern plant-boss-dead-idle object) ;; unknown type
;;(define-extern plant-boss-dead-bounce object) ;; unknown type
;;(define-extern plant-boss-spawn object) ;; unknown type
;;(define-extern plant-boss-attack object) ;; unknown type
;;(define-extern plant-boss-idle object) ;; unknown type
;;(define-extern plant-boss-reset object) ;; unknown type
;;(define-extern plant-boss-hit object) ;; unknown type
;;(define-extern plant-boss-vulnerable object) ;; unknown type
;;(define-extern plant-boss-intro object) ;; unknown type
;;(define-extern *plant-boss-leaf-sg* object) ;; unknown type
;;(define-extern plant-boss-leaf-idle object) ;; unknown type
;;(define-extern plant-boss-leaf-die object) ;; unknown type
;;(define-extern plant-boss-leaf-open-idle object) ;; unknown type
;;(define-extern plant-boss-leaf-close object) ;; unknown type
;;(define-extern plant-boss-leaf-bounce object) ;; unknown type
;;(define-extern plant-boss-leaf-open object) ;; unknown type
;;(define-extern *plant-boss-root-sg* object) ;; unknown type
;;(define-extern plant-boss-root-idle object) ;; unknown type
;;(define-extern *plant-boss-vine-sg* object) ;; unknown type
;;(define-extern plant-boss-vine-idle object) ;; unknown type
;;(define-extern *plant-boss-back-arms-sg* object) ;; unknown type
;;(define-extern plant-boss-back-arms-idle object) ;; unknown type
;;(define-extern *plant-boss-arm-sg* object) ;; unknown type
;;(define-extern plant-boss-arm-idle object) ;; unknown type
;;(define-extern plant-boss-root-die object) ;; unknown type
;;(define-extern plant-boss-vine-die object) ;; unknown type
;;(define-extern plant-boss-vine-hit object) ;; unknown type
;;(define-extern plant-boss-back-arms-hit object) ;; unknown type
;;(define-extern plant-boss-back-arms-die object) ;; unknown type
;;(define-extern plant-boss-arm-die object) ;; unknown type
;;(define-extern plant-boss-arm-hit object) ;; unknown type
;;(define-extern plant-boss-eat object) ;; unknown type


;; ----------------------
;; File - tpage-485
;; Source Path - levels/jungleb/tpage-485.gd
;; Containing DGOs - ['JUB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-510
;; Source Path - levels/jungleb/tpage-510.gd
;; Containing DGOs - ['JUB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-507
;; Source Path - levels/jungleb/tpage-507.gd
;; Containing DGOs - ['JUB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-966
;; Source Path - levels/jungleb/tpage-966.gd
;; Containing DGOs - ['JUB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - aphid-lurker-ag
;; Source Path - levels/jungleb/aphid-lurker-ag.gd
;; Containing DGOs - ['JUB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - darkvine-ag-JUB
;; Source Path - levels/jungleb/darkvine-ag-JUB.gd
;; Containing DGOs - ['JUB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - darkvine-ag-JUN
;; Source Path - levels/jungle/darkvine-ag-JUN.gd
;; Containing DGOs - ['JUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - eggtop-ag
;; Source Path - levels/jungleb/eggtop-ag.gd
;; Containing DGOs - ['JUB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - jng-iris-door-ag-JUB
;; Source Path - levels/jungleb/jng-iris-door-ag-JUB.gd
;; Containing DGOs - ['JUB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - jng-iris-door-ag-TRA
;; Source Path - levels/training/jng-iris-door-ag-TRA.gd
;; Containing DGOs - ['TRA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - plant-boss-ag
;; Source Path - levels/jungleb/plant-boss-ag.gd
;; Containing DGOs - ['JUB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - plat-flip-ag
;; Source Path - levels/jungleb/plat-flip-ag.gd
;; Containing DGOs - ['JUB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - plat-jungleb-ag
;; Source Path - levels/jungleb/plat-jungleb-ag.gd
;; Containing DGOs - ['JUB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - jungleb-vis
;; Source Path - levels/jungleb/jungleb-vis.gd
;; Containing DGOs - ['JUB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - eichar-fish+0-ag-JUN
;; Source Path - levels/jungle/eichar-fish+0-ag-JUN.gd
;; Containing DGOs - ['JUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - eichar-fish+0-ag-JUNGLE
;; Source Path - levels/l1_only/eichar-fish+0-ag-JUNGLE.gd
;; Containing DGOs - ['JUNGLE']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - eichar-fish+0-ag-L1
;; Source Path - levels/l1_only/eichar-fish+0-ag-L1.gd
;; Containing DGOs - ['L1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - jungle-elevator
;; Source Path - levels/jungle/jungle-elevator.gc
;; Containing DGOs - ['JUN', 'JUNGLE', 'L1']
;; Version - 3

;; - Types

; (deftype jungle-elevator (plat-button)
;   ((bottom-height       float  :offset-assert 240)
;    (teleport-if-below-y float  :offset-assert 244)
;    (teleport-if-above-y float  :offset-assert 248)
;    )
;   :method-count-assert 33
;   :size-assert         #xfc
;   :flag-assert         #x21009000fc
;   ;; inherited inspect of plat-button
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     )
;   )


;; ----------------------
;; File - bouncer
;; Source Path - levels/jungle/bouncer.gc
;; Containing DGOs - ['JUN', 'JUNGLE', 'L1']
;; Version - 3

;; - Types

; (deftype springbox (process-drawable)
;   ((spring-height meters  :offset-assert 176)
;    (smush         float   :offset-assert 180)
;    )
;   :method-count-assert 20
;   :size-assert         #xb8
;   :flag-assert         #x14005000b8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

;; - Unknowns

;;(define-extern *bouncer-sg* object) ;; unknown type
;;(define-extern bouncer-wait object) ;; unknown type
;;(define-extern bouncer-fire object) ;; unknown type
;;(define-extern bouncer-smush object) ;; unknown type


;; ----------------------
;; File - hopper
;; Source Path - levels/jungle/hopper.gc
;; Containing DGOs - ['JUN', 'JUNGLE', 'L1']
;; Version - 3

;; - Types

; (deftype hopper (nav-enemy)
;   ((jump-length  float  :offset-assert 400)
;    (shadow-min-y float  :offset-assert 404)
;    )
;   :method-count-assert 76
;   :size-assert         #x198
;   :flag-assert         #x4c01300198
;   ;; inherited inspect of nav-enemy
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

;; - Functions

(define-extern hopper-do-jump function)
(define-extern hopper-jump-to function)
(define-extern hopper-find-ground function)

;; - Unknowns

;;(define-extern *hopper-sg* object) ;; unknown type
;;(define-extern *hopper-nav-enemy-info* object) ;; unknown type


;; ----------------------
;; File - junglesnake
;; Source Path - levels/jungle/junglesnake.gc
;; Containing DGOs - ['JUN', 'JUNGLE', 'L1']
;; Version - 3

;; - Types

; (deftype junglesnake-twist-joint (structure)
;   ((joint-index   int32  :offset-assert 0)
;    (ry            float  :offset-assert 4)
;    (drag-delta-ry float  :offset-assert 8)
;    )
;   :method-count-assert 9
;   :size-assert         #xc
;   :flag-assert         #x90000000c
;   )

; (deftype junglesnake-tilt-joint (structure)
;   ((joint-index int32  :offset-assert 0)
;    (flip-it     basic  :offset-assert 4)
;    )
;   :method-count-assert 9
;   :size-assert         #x8
;   :flag-assert         #x900000008
;   )

; (deftype junglesnake (process-drawable)
;   ((state-time        uint64     :offset-assert 168)
;    (hit-player        basic      :offset-assert 184)
;    (is-lethal?        basic      :offset-assert 188)
;    (refractory-delay  int32      :offset-assert 192)
;    (ry                float      :offset-assert 196)
;    (des-ry            float      :offset-assert 200)
;    (tilt              float      :offset-assert 204)
;    (des-tilt          float      :offset-assert 208)
;    (track-player-ry   basic      :offset-assert 212)
;    (track-player-tilt basic      :offset-assert 216)
;    (twist-joints      UNKNOWN 24 :offset-assert 220)
;    (tilt-joints       UNKNOWN 3  :offset-assert 604)
;    )
;   :method-count-assert 25
;   :size-assert         #x28c
;   :flag-assert         #x190220028c
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     )
;   )

;; - Functions

(define-extern junglesnake-joint-callback function)
(define-extern junglesnake-default-event-handler function)

;; - Unknowns

;;(define-extern *junglesnake-sg* object) ;; unknown type
;;(define-extern junglesnake-sleeping object) ;; unknown type
;;(define-extern *junglesnake-twist-max-deltas* object) ;; unknown type
;;(define-extern junglesnake-tracking object) ;; unknown type
;;(define-extern junglesnake-attack object) ;; unknown type
;;(define-extern junglesnake-give-up object) ;; unknown type
;;(define-extern junglesnake-wake object) ;; unknown type
;;(define-extern junglesnake-die object) ;; unknown type


;; ----------------------
;; File - darkvine
;; Source Path - levels/jungle/darkvine.gc
;; Containing DGOs - ['JUN', 'JUNGLE', 'L1']
;; Version - 3

;; - Types

; (deftype darkvine (process-drawable)
;   ((speed            float   :offset-assert 176)
;    (tip-index        int8    :offset-assert 180)
;    (dangerous        basic   :offset-assert 184)
;    (vulnerable       basic   :offset-assert 188)
;    (hit-player       basic   :offset-assert 192)
;    (touch-time       uint64  :offset-assert 200)
;    (player-attack-id int32   :offset-assert 208)
;    )
;   :method-count-assert 20
;   :size-assert         #xd4
;   :flag-assert         #x14007000d4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

;; - Functions

(define-extern darkvine-event-handler function)

;; - Unknowns

;;(define-extern *darkvine-sg* object) ;; unknown type
;;(define-extern darkvine-die object) ;; unknown type
;;(define-extern darkvine-idle object) ;; unknown type
;;(define-extern darkvine-retreat object) ;; unknown type


;; ----------------------
;; File - jungle-obs
;; Source Path - levels/jungle/jungle-obs.gc
;; Containing DGOs - ['JUN', 'JUNGLE', 'L1']
;; Version - 3

;; - Types

; (deftype precurbridge-span (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   )

; (deftype logtrap (process-drawable)
;   ()
;   :method-count-assert 21
;   :size-assert         #xb0
;   :flag-assert         #x15004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; (deftype towertop (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype lurkerm-tall-sail (process-drawable)
;   ((speed     float  :offset-assert 176)
;    (alt-actor basic  :offset-assert 180)
;    )
;   :method-count-assert 20
;   :size-assert         #xb8
;   :flag-assert         #x14005000b8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype lurkerm-short-sail (process-drawable)
;   ((speed     float  :offset-assert 176)
;    (alt-actor basic  :offset-assert 180)
;    )
;   :method-count-assert 20
;   :size-assert         #xb8
;   :flag-assert         #x14005000b8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype lurkerm-piston (process-drawable)
;   ((sync      sync-info :inline :offset-assert 176)
;    (base      vector    :inline :offset-assert 192)
;    (height    vector    :inline :offset-assert 208)
;    (speed     float             :offset-assert 224)
;    (alt-actor basic             :offset-assert 228)
;    )
;   :method-count-assert 20
;   :size-assert         #xe8
;   :flag-assert         #x14008000e8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype accordian (process-drawable)
;   ((speed     float  :offset-assert 176)
;    (alt-actor basic  :offset-assert 180)
;    )
;   :method-count-assert 20
;   :size-assert         #xb8
;   :flag-assert         #x14005000b8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype junglecam (process-hidden)
;   ((name             basic                 :offset-assert 4)
;    (mask             uint32                :offset-assert 8)
;    (parent           uint32                :offset-assert 12)
;    (brother          uint32                :offset-assert 16)
;    (child            uint32                :offset-assert 20)
;    (ppointer         uint32                :offset-assert 24)
;    (self             basic                 :offset-assert 28)
;    (pool             basic                 :offset-assert 32)
;    (status           basic                 :offset-assert 36)
;    (pid              int32                 :offset-assert 40)
;    (main-thread      basic                 :offset-assert 44)
;    (top-thread       basic                 :offset-assert 48)
;    (entity           basic                 :offset-assert 52)
;    (state            basic                 :offset-assert 56)
;    (trans-hook       basic                 :offset-assert 60)
;    (post-hook        basic                 :offset-assert 64)
;    (event-hook       basic                 :offset-assert 68)
;    (allocated-length int32                 :offset-assert 72)
;    (next-state       basic                 :offset-assert 76)
;    (heap-base        uint32                :offset-assert 80)
;    (heap-top         uint32                :offset-assert 84)
;    (heap-cur         uint32                :offset-assert 88)
;    (stack-frame-top  basic                 :offset-assert 92)
;    (heap             kheap        :inline  :offset-assert 80)
;    (connection-list  'connectable :inline  :offset-assert 96)
;    (stack            UNKNOWN      :dynamic :offset-assert 112)
;    )
;   :method-count-assert 15
;   :size-assert         #x70
;   :flag-assert         #xf00000070
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     )
;   )

; (deftype precurbridgecam (pov-camera)
;   ()
;   :method-count-assert 30
;   :size-assert         #xdc
;   :flag-assert         #x1e007000dc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

; (deftype precurbridge (process-drawable)
;   ((smush            smush-control :inline :offset-assert 176)
;    (base             vector        :inline :offset-assert 208)
;    (activation-point vector        :inline :offset-assert 224)
;    (span-array       UNKNOWN       8       :offset-assert 240)
;    )
;   :method-count-assert 20
;   :size-assert         #x110
;   :flag-assert         #x1400a00110
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype maindoor (process-drawable)
;   ((thresh vector :inline :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xc0
;   :flag-assert         #x14005000c0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype sidedoor (eco-door)
;   ()
;   :method-count-assert 27
;   :size-assert         #x104
;   :flag-assert         #x1b00a00104
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     )
;   )

; (deftype jngpusher (process-drawable)
;   ((sync      sync-info :inline :offset-assert 176)
;    (back-prim basic             :offset-assert 184)
;    )
;   :method-count-assert 20
;   :size-assert         #xbc
;   :flag-assert         #x14005000bc
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype jungle-water (water-anim)
;   ()
;   :method-count-assert 30
;   :size-assert         #xdc
;   :flag-assert         #x1e007000dc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

;; - Unknowns

;;(define-extern ripple-for-jungle-water object) ;; unknown type
;;(define-extern *jngpusher-sg* object) ;; unknown type
;;(define-extern jngpusher-idle object) ;; unknown type
;;(define-extern *sidedoor-sg* object) ;; unknown type
;;(define-extern *maindoor-sg* object) ;; unknown type
;;(define-extern maindoor-open object) ;; unknown type
;;(define-extern maindoor-closed object) ;; unknown type
;;(define-extern *precurbridge-sg* object) ;; unknown type
;;(define-extern precurbridge-active object) ;; unknown type
;;(define-extern precurbridge-idle object) ;; unknown type
;;(define-extern *junglecam-sg* object) ;; unknown type
;;(define-extern precurbridge-activate object) ;; unknown type
;;(define-extern *accordian-sg* object) ;; unknown type
;;(define-extern accordian-idle object) ;; unknown type
;;(define-extern *lurkerm-piston-sg* object) ;; unknown type
;;(define-extern lurkerm-piston-idle object) ;; unknown type
;;(define-extern *lurkerm-short-sail-sg* object) ;; unknown type
;;(define-extern lurkerm-short-sail-idle object) ;; unknown type
;;(define-extern *lurkerm-tall-sail-sg* object) ;; unknown type
;;(define-extern lurkerm-tall-sail-idle object) ;; unknown type
;;(define-extern *towertop-sg* object) ;; unknown type
;;(define-extern towertop-idle object) ;; unknown type
;;(define-extern *logtrap-sg* object) ;; unknown type
;;(define-extern *med-res-firecanyon-sg* object) ;; unknown type
;;(define-extern *jungle-camera-sg* object) ;; unknown type


;; ----------------------
;; File - jungle-mirrors
;; Source Path - levels/jungle/jungle-mirrors.gc
;; Containing DGOs - ['JUN', 'JUNGLE', 'L1']
;; Version - 3

;; - Types

; (deftype periscope (process-drawable)
;   ((y-offset               meters         :offset-assert 176)
;    (y-offset-grips         meters         :offset-assert 180)
;    (height                 meters         :offset-assert 184)
;    (turn                   degrees        :offset-assert 188)
;    (tilt                   degrees            :offset-assert 192)
;    (target-turn            degrees            :offset-assert 196)
;    (target-tilt            degrees            :offset-assert 200)
;    (base                   vector :inline :offset-assert 208)
;    (reflector-trans        vector :inline :offset-assert 224)
;    (next-reflector-trans   vector :inline :offset-assert 240)
;    (prev-reflector-trans   vector :inline :offset-assert 256)
;    (old-camera-matrix      matrix :inline :offset-assert 272)
;    (reflector              uint32         :offset-assert 336)
;    (gauge-rot              degrees            :offset-assert 340)
;    (lock-time              uint64         :offset-assert 344)
;    (aligned?               basic          :offset-assert 352)
;    (raised?                basic          :offset-assert 356)
;    (player-touching-grips? basic          :offset-assert 360)
;    (grips-moving?          basic          :offset-assert 364)
;    (sound-id               sound-id       :offset-assert 368)
;    (rise-sound-id          sound-id       :offset-assert 372)
;    (grips-sound-id         sound-id       :offset-assert 376)
;    (grips                  basic          :offset-assert 380)
;    (part-aligned           basic          :offset-assert 384)
;    )
;   :method-count-assert 20
;   :size-assert         #x184
;   :flag-assert         #x1401200184
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype reflector (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype reflector-origin (process-drawable)
;   ((reflector-trans      vector :inline :offset-assert 176)
;    (next-reflector-trans vector :inline :offset-assert 192)
;    (reflector            uint32         :offset-assert 208)
;    (next                 basic          :offset-assert 212)
;    (blocker              basic          :offset-assert 216)
;    )
;   :method-count-assert 20
;   :size-assert         #xdc
;   :flag-assert         #x14007000dc
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype reflector-mirror (process-drawable)
;   ((beam-end vector :inline :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xc0
;   :flag-assert         #x14005000c0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

;; - Functions

(define-extern peri-beamcam-init-by-other function)
(define-extern draw-power-beam function)
(define-extern reflector-origin-update function)
(define-extern reflector-init-by-other function)
(define-extern periscope-find-next function)
(define-extern periscope-find-reflection-angles function)
(define-extern periscope-update-joints function)
(define-extern periscope-has-power-input? function)
(define-extern periscope-draw-beam function)
(define-extern periscope-find-aim-at-angles function)
(define-extern periscope-crosshair function)
(define-extern periscope-test-task-complete? function)
(define-extern periscope-draw-beam-impact function)
(define-extern periscope-set-target-direction function)
(define-extern periscope-post function)
(define-extern periscope-debug-trans function)
(define-extern target-close-to-point? function)

;; - Unknowns

;;(define-extern *reflector-mirror-sg* object) ;; unknown type
;;(define-extern reflector-mirror-broken object) ;; unknown type
;;(define-extern reflector-mirror-idle object) ;; unknown type
;;(define-extern *reflector-mirror-break-sg* object) ;; unknown type
;;(define-extern reflector-origin-idle object) ;; unknown type
;;(define-extern *periscope-base-sg* object) ;; unknown type
;;(define-extern periscope-power-on object) ;; unknown type
;;(define-extern periscope-wait-for-player object) ;; unknown type
;;(define-extern periscope-idle object) ;; unknown type
;;(define-extern cam-periscope object) ;; unknown type
;;(define-extern periscope-wait-for-power-input object) ;; unknown type
;;(define-extern periscope-player-control object) ;; unknown type
;;(define-extern periscope-activate object) ;; unknown type
;;(define-extern *periscope-mirror-sg* object) ;; unknown type
;;(define-extern reflector-idle object) ;; unknown type


;; ----------------------
;; File - junglefish
;; Source Path - levels/jungle/junglefish.gc
;; Containing DGOs - ['JUN', 'JUNGLE', 'L1']
;; Version - 3

;; - Types

; (deftype junglefish (nav-enemy)
;   ()
;   :method-count-assert 76
;   :size-assert         #x190
;   :flag-assert         #x4c01200190
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

;; - Unknowns

;;(define-extern *junglefish-sg* object) ;; unknown type
;;(define-extern *junglefish-nav-enemy-info* object) ;; unknown type


;; ----------------------
;; File - fisher-JUN
;; Source Path - levels/jungle/fisher-JUN.gc
;; Containing DGOs - ['JUN']
;; Version - 3

;; - Types

; (deftype fisher-bank (basic)
;   ((width      meters  :offset-assert 4)
;    (net-radius meters  :offset-assert 8)
;    (max-caught int32   :offset-assert 12)
;    (max-missed int32   :offset-assert 16)
;    )
;   :method-count-assert 9
;   :size-assert         #x14
;   :flag-assert         #x900000014
;   )

; (deftype fisher-params (structure)
;   ((timeout         uint64  :offset-assert 0)
;    (vel             float   :offset-assert 8)
;    (swing-min       uint64  :offset-assert 16)
;    (swing-max       uint64  :offset-assert 24)
;    (period          uint64  :offset-assert 32)
;    (fish-vel        float   :offset-assert 40)
;    (bad-percent     float   :offset-assert 44)
;    (deadly-percent  float   :offset-assert 48)
;    (powerup-percent float   :offset-assert 52)
;    )
;   :method-count-assert 9
;   :size-assert         #x38
;   :flag-assert         #x900000038
;   )

; (deftype fisher (process-taskable)
;   ((paddle-end      UNKNOWN       2       :offset-assert 384)
;    (paddle-pos      vector        :inline :offset-assert 416)
;    (paddle          float                 :offset-assert 432)
;    (paddle-vel      float                 :offset-assert 436)
;    (spawner         float                 :offset-assert 440)
;    (spawner-last    float                 :offset-assert 444)
;    (spawn-time      uint64                :offset-assert 448)
;    (turn-time       uint64                :offset-assert 456)
;    (swing-time      uint64                :offset-assert 464)
;    (block-time      uint64                :offset-assert 472)
;    (block           int32                 :offset-assert 480)
;    (caught          int32                 :offset-assert 484)
;    (missed          int32                 :offset-assert 488)
;    (difficulty      int32                 :offset-assert 492)
;    (start-time      uint64                :offset-assert 496)
;    (ambient-big-one uint64                :offset-assert 504)
;    (ambient-steady  uint64                :offset-assert 512)
;    (ambient-sagging uint64                :offset-assert 520)
;    (ambient-almost  uint64                :offset-assert 528)
;    (cheat-temp      int32                 :offset-assert 536)
;    (hard            basic                 :offset-assert 540)
;    (training        basic                 :offset-assert 544)
;    (params          fisher-params :inline :offset-assert 552)
;    )
;   :method-count-assert 53
;   :size-assert         #x260
;   :flag-assert         #x3501f00260
;   ;; inherited inspect of process-taskable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

; (deftype fisher-fish (process-drawable)
;   ((dir    vector :inline :offset-assert 176)
;    (offset float          :offset-assert 192)
;    (pos    float          :offset-assert 196)
;    (vel    float          :offset-assert 200)
;    (mode   basic          :offset-assert 204)
;    (size   meters         :offset-assert 208)
;    )
;   :method-count-assert 20
;   :size-assert         #xd4
;   :flag-assert         #x14007000d4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

;; - Functions

(define-extern fisher-fish-water function)
(define-extern fisher-game-update function)
(define-extern fisher-draw-display function)
(define-extern fisher-spawn-ambient function)
(define-extern fisher-fish-init-by-other function)
(define-extern fisher-fish-move function)

;; - Unknowns

;;(define-extern *fish-net-sg* object) ;; unknown type
;;(define-extern *fisher-sg* object) ;; unknown type
;;(define-extern *FISHER-bank* object) ;; unknown type
;;(define-extern fisher-playing object) ;; unknown type
;;(define-extern *fisher-params* object) ;; unknown type
;;(define-extern fisher-done object) ;; unknown type
;;(define-extern *catch-fishc-sg* object) ;; unknown type
;;(define-extern *catch-fishb-sg* object) ;; unknown type
;;(define-extern *catch-fisha-sg* object) ;; unknown type
;;(define-extern fisher-fish-fall object) ;; unknown type
;;(define-extern fisher-fish-caught object) ;; unknown type
;;(define-extern fisher-fish-die object) ;; unknown type


;; ----------------------
;; File - fisher-JUNGLE-L1
;; Source Path - levels/jungle/fisher-JUNGLE-L1.gc
;; Containing DGOs - ['JUNGLE', 'L1']
;; Version - 3

;; - Nothing Defined in This File!


;; ----------------------
;; File - jungle-part
;; Source Path - levels/jungle/jungle-part.gc
;; Containing DGOs - ['JUN', 'JUNGLE', 'L1']
;; Version - 3

;; - Types

; (deftype jungle-part (part-spawner)
;   ()
;   :method-count-assert 21
;   :size-assert         #xd0
;   :flag-assert         #x15006000d0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )


;; ----------------------
;; File - launcherdoor
;; Source Path - levels/common/launcherdoor.gc
;; Containing DGOs - ['JUN', 'JUNGLE', 'L1', 'MAI', 'MAINCAVE', 'SUN', 'SUNKEN']
;; Version - 3

;; - Types

; (deftype launcherdoor (process-drawable)
;   ((notify-player-passed-thru? basic  :offset-assert 176)
;    (thresh-y                   float  :offset-assert 180)
;    (open-speed                 float  :offset-assert 184)
;    (close-speed                float  :offset-assert 188)
;    (load-mode                  basic  :offset-assert 192)
;    )
;   :method-count-assert 20
;   :size-assert         #xc4
;   :flag-assert         #x14006000c4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

;; - Unknowns

;;(define-extern *launcherdoor-maincave-sg* object) ;; unknown type
;;(define-extern *launcherdoor-sg* object) ;; unknown type
;;(define-extern launcherdoor-open object) ;; unknown type
;;(define-extern launcherdoor-closed object) ;; unknown type


;; ----------------------
;; File - tpage-385
;; Source Path - levels/jungle/tpage-385.gd
;; Containing DGOs - ['JUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-531
;; Source Path - levels/jungle/tpage-531.gd
;; Containing DGOs - ['JUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-386
;; Source Path - levels/jungle/tpage-386.gd
;; Containing DGOs - ['JUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-388
;; Source Path - levels/jungle/tpage-388.gd
;; Containing DGOs - ['JUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-765
;; Source Path - levels/jungle/tpage-765.gd
;; Containing DGOs - ['JUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - accordian-ag
;; Source Path - levels/jungle/accordian-ag.gd
;; Containing DGOs - ['JUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - bounceytarp-ag
;; Source Path - levels/jungle/bounceytarp-ag.gd
;; Containing DGOs - ['JUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - catch-fisha-ag
;; Source Path - levels/jungle/catch-fisha-ag.gd
;; Containing DGOs - ['JUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - catch-fishb-ag
;; Source Path - levels/jungle/catch-fishb-ag.gd
;; Containing DGOs - ['JUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - catch-fishc-ag
;; Source Path - levels/jungle/catch-fishc-ag.gd
;; Containing DGOs - ['JUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - fish-net-ag
;; Source Path - levels/jungle/fish-net-ag.gd
;; Containing DGOs - ['JUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - fisher-ag
;; Source Path - levels/jungle/fisher-ag.gd
;; Containing DGOs - ['JUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - hopper-ag
;; Source Path - levels/jungle/hopper-ag.gd
;; Containing DGOs - ['JUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - junglecam-ag
;; Source Path - levels/jungle/junglecam-ag.gd
;; Containing DGOs - ['JUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - junglefish-ag
;; Source Path - levels/jungle/junglefish-ag.gd
;; Containing DGOs - ['JUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - junglesnake-ag
;; Source Path - levels/jungle/junglesnake-ag.gd
;; Containing DGOs - ['JUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - launcherdoor-ag-JUN
;; Source Path - levels/jungle/launcherdoor-ag-JUN.gd
;; Containing DGOs - ['JUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - launcherdoor-ag-SUN
;; Source Path - levels/sunken/launcherdoor-ag-SUN.gd
;; Containing DGOs - ['SUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - logtrap-ag
;; Source Path - levels/jungle/logtrap-ag.gd
;; Containing DGOs - ['JUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - lurkerm-piston-ag
;; Source Path - levels/jungle/lurkerm-piston-ag.gd
;; Containing DGOs - ['JUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - lurkerm-tall-sail-ag
;; Source Path - levels/jungle/lurkerm-tall-sail-ag.gd
;; Containing DGOs - ['JUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - maindoor-ag
;; Source Path - levels/jungle/maindoor-ag.gd
;; Containing DGOs - ['JUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - medres-firecanyon-ag
;; Source Path - levels/jungle/medres-firecanyon-ag.gd
;; Containing DGOs - ['JUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - periscope-ag
;; Source Path - levels/jungle/periscope-ag.gd
;; Containing DGOs - ['JUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - plat-button-ag
;; Source Path - levels/jungle/plat-button-ag.gd
;; Containing DGOs - ['JUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - plat-eco-ag-JUN
;; Source Path - levels/jungle/plat-eco-ag-JUN.gd
;; Containing DGOs - ['JUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - plat-eco-ag-MIS
;; Source Path - levels/misty/plat-eco-ag-MIS.gd
;; Containing DGOs - ['MIS']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - plat-eco-ag-ROB
;; Source Path - levels/robocave/plat-eco-ag-ROB.gd
;; Containing DGOs - ['ROB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - plat-eco-ag-TRA
;; Source Path - levels/training/plat-eco-ag-TRA.gd
;; Containing DGOs - ['TRA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - precurbridge-ag
;; Source Path - levels/jungle/precurbridge-ag.gd
;; Containing DGOs - ['JUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - reflector-mirror-ag
;; Source Path - levels/jungle/reflector-mirror-ag.gd
;; Containing DGOs - ['JUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - ropebridge-52-ag
;; Source Path - levels/jungle/ropebridge-52-ag.gd
;; Containing DGOs - ['JUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - ropebridge-70-ag
;; Source Path - levels/jungle/ropebridge-70-ag.gd
;; Containing DGOs - ['JUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - sidedoor-ag
;; Source Path - levels/jungle/sidedoor-ag.gd
;; Containing DGOs - ['JUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - towertop-ag
;; Source Path - levels/jungle/towertop-ag.gd
;; Containing DGOs - ['JUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - water-anim-jungle-ag
;; Source Path - levels/jungle/water-anim-jungle-ag.gd
;; Containing DGOs - ['JUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - jungle-vis
;; Source Path - levels/jungle/jungle-vis.gd
;; Containing DGOs - ['JUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - target-racer-h-L1-RACERP
;; Source Path - levels/l1_only/target-racer-h-L1-RACERP.gc
;; Containing DGOs - ['L1', 'RACERP']
;; Version - 3

;; - Types

; (deftype racer-info (basic)
;   ((entity              basic                 :offset-assert 4)
;    (bike-trans          vector        :inline :offset-assert 16)
;    (bike-quat           vector        :inline :offset-assert 32)
;    (bike-scale          vector        :inline :offset-assert 48)
;    (mod-x               float                 :offset-assert 64)
;    (rot                 vector        :inline :offset-assert 80)
;    (rot-old             vector        :inline :offset-assert 96)
;    (rotv                vector        :inline :offset-assert 112)
;    (lean-rotx           degrees                   :offset-assert 128)
;    (change-roty         degrees                   :offset-assert 132)
;    (change-roty-old     degrees                   :offset-assert 136)
;    (quat                vector        :inline :offset-assert 144)
;    (surface-y           meters                :offset-assert 160)
;    (surface-vy          meters                :offset-assert 164)
;    (surface-quat        vector        :inline :offset-assert 176)
;    (surface-quat-smooth vector        :inline :offset-assert 192)
;    (cushion-base        meters                :offset-assert 208)
;    (cushion-offset      meters                :offset-assert 212)
;    (cushion-bob         meters                :offset-assert 216)
;    (cushion-bob-old     meters                :offset-assert 220)
;    (cushion-smush       smush-control :inline :offset-assert 224)
;    (shock-offset        meters                :offset-assert 256)
;    (shock-offsetv       meters                :offset-assert 260)
;    (shock-rotx          meters                :offset-assert 264)
;    (hill-value          float                 :offset-assert 268)
;    (hill-ground-value   float                 :offset-assert 272)
;    (hill-offset         meters                :offset-assert 276)
;    (hill-rotx           degrees                   :offset-assert 280)
;    (hill-boost          meters                :offset-assert 284)
;    (bob-timer           float                 :offset-assert 288)
;    (bob-meta-timer      float                 :offset-assert 292)
;    (bob-meta-meta-timer float                 :offset-assert 296)
;    (bob-mult-rot        float                 :offset-assert 300)
;    (bob-mult-trans      float                 :offset-assert 304)
;    (bob-period          float                 :offset-assert 308)
;    (bob-meta-time       uint64                :offset-assert 312)
;    (bob-hit-ground-time uint64                :offset-assert 320)
;    (cur-rotx            degrees                   :offset-assert 328)
;    (targ-rotx           degrees                   :offset-assert 332)
;    (speed-rotx          float                 :offset-assert 336)
;    (mult-rotx           degrees                   :offset-assert 340)
;    (front-blade         basic                 :offset-assert 344)
;    (front-rot           degrees                   :offset-assert 348)
;    (front-rotv          degrees                   :offset-assert 352)
;    (bottom-blade        basic                 :offset-assert 356)
;    (bottom-rot          degrees                   :offset-assert 360)
;    (front               basic                 :offset-assert 364)
;    (front-turn          degrees                   :offset-assert 368)
;    (tail                basic                 :offset-assert 372)
;    (tail-tilt           degrees                   :offset-assert 376)
;    (transv-max          meters                :offset-assert 380)
;    (slide-down-time     UNKNOWN       2       :offset-assert 384)
;    (slide-enter-time    uint64                :offset-assert 400)
;    (slide-mode          int32                 :offset-assert 408)
;    (slide-amp           float                 :offset-assert 412)
;    (slide-grip-mult     float                 :offset-assert 416)
;    (slide-shift-x       float                 :offset-assert 420)
;    (slide-interp        float                 :offset-assert 424)
;    (heat                float                 :offset-assert 428)
;    (boost-time          uint64                :offset-assert 432)
;    (boost-duration      uint64                :offset-assert 440)
;    (boost-curve         float                 :offset-assert 448)
;    (boost-level         float                 :offset-assert 452)
;    (boost-target        float                 :offset-assert 456)
;    (boost-output        float                 :offset-assert 460)
;    (hop?                basic                 :offset-assert 464)
;    (hop-start-y         float                 :offset-assert 468)
;    (bounce              int32                 :offset-assert 472)
;    (bounce-hit          float                 :offset-assert 476)
;    (engine-sound-id     sound-id              :offset-assert 480)
;    (boost-sound-id      sound-id              :offset-assert 484)
;    (engine-sound-pitch  float                 :offset-assert 488)
;    (turn-anim-targ      float                 :offset-assert 492)
;    (turn-anim-frame     float                 :offset-assert 496)
;    (turn-anim-vel       float                 :offset-assert 500)
;    (tail-anim-vel       float                 :offset-assert 504)
;    (tail-anim-frame     float                 :offset-assert 508)
;    (rudd-anim-vel       float                 :offset-assert 512)
;    (rudd-anim-frame     float                 :offset-assert 516)
;    (racing-time         uint64                :offset-assert 520)
;    (stick-lock          basic                 :offset-assert 528)
;    (stick-off           basic                 :offset-assert 532)
;    (heavy               basic                 :offset-assert 536)
;    (unstuck-time        uint64                :offset-assert 544)
;    (stuck-count         int32                 :offset-assert 552)
;    (scrape-sound-id     sound-id              :offset-assert 556)
;    (heat-sound-time     uint64                :offset-assert 560)
;    )
;   :method-count-assert 9
;   :size-assert         #x238
;   :flag-assert         #x900000238
;   )

; (deftype racer-bank (basic)
;   ((slide-hold-time            seconds  :offset-assert 8)
;    (heat-max                   float     :offset-assert 16)
;    (hotcoals-heat-inc          float     :offset-assert 20)
;    (lava-heat-inc              float     :offset-assert 24)
;    (lava-air-heat-inc          float     :offset-assert 28)
;    (surface-heat-inc           float     :offset-assert 32)
;    (jump-heat-inc              float     :offset-assert 36)
;    (lavatube-hotcoals-heat-inc float     :offset-assert 40)
;    (lavatube-lava-heat-inc     float     :offset-assert 44)
;    (lavatube-lava-air-heat-inc float     :offset-assert 48)
;    (lavatube-surface-heat-inc  float     :offset-assert 52)
;    (lavatube-jump-heat-inc     float     :offset-assert 56)
;    (boost-curve-max            meters    :offset-assert 60)
;    (boost-level-max            meters    :offset-assert 64)
;    (boost-level-inc            meters    :offset-assert 68)
;    (boost-duration             seconds  :offset-assert 72)
;    (default-front-blade        degrees       :offset-assert 80)
;    (yellow-projectile-speed    meters    :offset-assert 84)
;    )
;   :method-count-assert 9
;   :size-assert         #x58
;   :flag-assert         #x900000058
;   )

;; - Unknowns

;;(define-extern *RACER-bank* object) ;; unknown type
;;(define-extern *balloon-sg* object) ;; unknown type


;; ----------------------
;; File - target-racer-h-FIC-LAV-MIS-OGR-ROL
;; Source Path - levels/racer_common/target-racer-h-FIC-LAV-MIS-OGR-ROL.gc
;; Containing DGOs - ['FIC', 'LAV', 'MIS', 'OGR', 'ROL']
;; Version - 3

;; - Nothing Defined in This File!


;; ----------------------
;; File - racer-part
;; Source Path - levels/racer_common/racer-part.gc
;; Containing DGOs - ['L1', 'FIC', 'LAV', 'MIS', 'OGR', 'RACERP', 'ROL']
;; Version - 3

;; - Types

; (deftype hud-bike-heat (hud)
;   ()
;   :method-count-assert 27
;   :size-assert         #x118
;   :flag-assert         #x1b00b00118
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     )
;   )

; (deftype hud-bike-speed (hud)
;   ()
;   :method-count-assert 27
;   :size-assert         #x118
;   :flag-assert         #x1b00b00118
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     )
;   )

;; - Functions

(define-extern zoomer-heat-slice-color function)
(define-extern part-hud-racer-speed-func function)
(define-extern part-hud-racer-heat-func function)
(define-extern part-hud-zoomer-heat-slice-01-func function)
(define-extern part-hud-zoomer-heat-slice-02-func function)
(define-extern part-hud-zoomer-heat-slice-03-func function)


;; ----------------------
;; File - racer
;; Source Path - levels/racer_common/racer.gc
;; Containing DGOs - ['L1', 'FIC', 'LAV', 'MIS', 'OGR', 'RACERP', 'ROL']
;; Version - 3

;; - Types

; (deftype racer (process-drawable)
;   ((extra-trans   vector  :inline :offset-assert 176)
;    (condition     int32           :offset-assert 192)
;    (cell          uint64          :offset-assert 200)
;    (path-data     UNKNOWN 2       :offset-assert 208)
;    (path-target   basic           :offset-assert 208)
;    (path-racer    basic           :offset-assert 212)
;    (auto-get-off  basic           :offset-assert 216)
;    (shadow-backup basic           :offset-assert 220)
;    )
;   :method-count-assert 24
;   :size-assert         #xe0
;   :flag-assert         #x18007000e0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     )
;   )

;; - Functions

(define-extern blocking-plane-spawn function)
(define-extern racer-effect function)
(define-extern blocking-plane-destroy function)

;; - Unknowns

;;(define-extern *racer-sg* object) ;; unknown type
;;(define-extern *racer-shadow-control* object) ;; unknown type
;;(define-extern *racer-explode-sg* object) ;; unknown type


;; ----------------------
;; File - target-racer-L1-RACERP
;; Source Path - levels/l1_only/target-racer-L1-RACERP.gc
;; Containing DGOs - ['L1', 'RACERP']
;; Version - 3

;; - Functions

(define-extern racer-collision-reaction function)
(define-extern racer-service-slide function)
(define-extern racer-xz function)
(define-extern racer-thrust function)
(define-extern racer-calc-gravity function)
(define-extern racer-on-ground? function)
(define-extern racer-collision function)
(define-extern racer-integrate function)
(define-extern racer-effects function)
(define-extern racer-sounds function)
(define-extern racer-bend-gravity function)
(define-extern racer-find-prop-point function)
(define-extern racer-cushion function)
(define-extern racer-buzz function)
(define-extern target-racing-center-anim function)
(define-extern target-racing-turn-anim function)
(define-extern target-racing-jump-anim function)
(define-extern target-racing-land-anim function)
(define-extern target-racing-post function)

;; - Unknowns

;;(define-extern target-racing-smack object) ;; unknown type
;;(define-extern *racer-mods* object) ;; unknown type
;;(define-extern *racer-air-mods* object) ;; unknown type


;; ----------------------
;; File - target-racer-FIC-LAV-MIS-OGR-ROL
;; Source Path - levels/racer_common/target-racer-FIC-LAV-MIS-OGR-ROL.gc
;; Containing DGOs - ['FIC', 'LAV', 'MIS', 'OGR', 'ROL']
;; Version - 3

;; - Nothing Defined in This File!


;; ----------------------
;; File - racer-states-L1-RACERP
;; Source Path - levels/l1_only/racer-states-L1-RACERP.gc
;; Containing DGOs - ['L1', 'RACERP']
;; Version - 3

;; - Functions

(define-extern target-racing-smack-check function)

;; - Unknowns

;;(define-extern target-racing object) ;; unknown type
;;(define-extern target-racing-grab object) ;; unknown type
;;(define-extern target-racing-clone-anim object) ;; unknown type
;;(define-extern target-racing-get-off-hit-ground object) ;; unknown type
;;(define-extern target-racing-get-off-jump object) ;; unknown type
;;(define-extern target-racing-death object) ;; unknown type
;;(define-extern target-racing-jump object) ;; unknown type
;;(define-extern target-racing-bounce object) ;; unknown type
;;(define-extern target-racing-falling object) ;; unknown type
;;(define-extern target-racing-get-on object) ;; unknown type
;;(define-extern target-racing-get-off object) ;; unknown type
;;(define-extern target-racing-hit object) ;; unknown type


;; ----------------------
;; File - racer-states-FIC-LAV-MIS-OGR-ROL
;; Source Path - levels/racer_common/racer-states-FIC-LAV-MIS-OGR-ROL.gc
;; Containing DGOs - ['FIC', 'LAV', 'MIS', 'OGR', 'ROL']
;; Version - 3

;; - Nothing Defined in This File!


;; ----------------------
;; File - collide-reaction-racer
;; Source Path - levels/racer_common/collide-reaction-racer.gc
;; Containing DGOs - ['L1', 'FIC', 'LAV', 'MIS', 'OGR', 'RACERP', 'ROL']
;; Version - 3

;; - Nothing Defined in This File!


;; ----------------------
;; File - eichar-racer+0-ag
;; Source Path - levels/racer_common/eichar-racer+0-ag.gd
;; Containing DGOs - ['L1', 'FIC', 'LAV', 'MIS', 'OGR', 'RACERP', 'ROL']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1119
;; Source Path - levels/racer_common/tpage-1119.gd
;; Containing DGOs - ['L1', 'FIC', 'LAV', 'MIS', 'OGR', 'RACERP', 'ROL']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - blocking-plane
;; Source Path - levels/common/blocking-plane.gc
;; Containing DGOs - ['L1', 'FIC', 'LAV', 'MIS', 'OGR', 'RACERP', 'ROL', 'SNO', 'SWA']
;; Version - 3

;; - Types

; (deftype blocking-plane (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

;; - Functions

(define-extern blocking-plane-init-by-other function)

;; - Unknowns

;;(define-extern *ef-plane-sg* object) ;; unknown type
;;(define-extern blocking-plane-idle object) ;; unknown type


;; ----------------------
;; File - flut-part
;; Source Path - levels/flut_common/flut-part.gc
;; Containing DGOs - ['L1', 'SNO', 'SWA']
;; Version - 3

;; - Nothing Defined in This File!


;; ----------------------
;; File - flutflut
;; Source Path - levels/flut_common/flutflut.gc
;; Containing DGOs - ['L1', 'SNO', 'SWA']
;; Version - 3

;; - Types

; (deftype flutflut (process-drawable)
;   ((extra-trans  vector  :inline :offset-assert 176)
;    (condition    int32           :offset-assert 192)
;    (auto-get-off basic           :offset-assert 196)
;    (cell         uint64          :offset-assert 200)
;    (path-data    UNKNOWN 2       :offset-assert 208)
;    (path-target  basic           :offset-assert 208)
;    (path-flut    basic           :offset-assert 212)
;    (touch-time   uint64          :offset-assert 216)
;    )
;   :method-count-assert 24
;   :size-assert         #xe0
;   :flag-assert         #x18007000e0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     )
;   )

;; - Functions

(define-extern flutflut-effect function)

;; - Unknowns

;;(define-extern *flutflut-sg* object) ;; unknown type
;;(define-extern *flutflut-shadow-control* object) ;; unknown type


;; ----------------------
;; File - target-flut
;; Source Path - levels/flut_common/target-flut.gc
;; Containing DGOs - ['L1', 'SNO', 'SWA']
;; Version - 3

;; - Types

; (deftype flut-info (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; bad get label
;   )

; (deftype flut-bank (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; bad get label
;   )

;; - Functions

(define-extern target-flut-post-post function)
(define-extern target-flut-falling-anim-trans function)
(define-extern target-flut-dangerous-event-handler function)
(define-extern target-flut-hit-ground-anim function)
(define-extern target-flut-standard-event-handler function)
(define-extern target-flut-post function)

;; - Unknowns

;;(define-extern target-flut-stance object) ;; unknown type
;;(define-extern target-flut-grab object) ;; unknown type
;;(define-extern target-flut-clone-anim object) ;; unknown type
;;(define-extern target-flut-get-off-hit-ground object) ;; unknown type
;;(define-extern target-flut-get-off-jump object) ;; unknown type
;;(define-extern target-flut-death object) ;; unknown type
;;(define-extern target-flut-hit-ground object) ;; unknown type
;;(define-extern *flut-air-attack-mods* object) ;; unknown type
;;(define-extern target-flut-air-attack-hit-ground object) ;; unknown type
;;(define-extern target-flut-jump object) ;; unknown type
;;(define-extern *FLUT-bank* object) ;; unknown type
;;(define-extern target-flut-falling object) ;; unknown type
;;(define-extern *flut-run-attack-mods* object) ;; unknown type
;;(define-extern target-flut-hit object) ;; unknown type
;;(define-extern *flut-jump-mods* object) ;; unknown type
;;(define-extern target-flut-walk object) ;; unknown type
;;(define-extern *flut-walk-mods* object) ;; unknown type
;;(define-extern target-flut-air-attack object) ;; unknown type
;;(define-extern *flut-double-jump-mods* object) ;; unknown type
;;(define-extern target-flut-double-jump object) ;; unknown type
;;(define-extern target-flut-running-attack object) ;; unknown type
;;(define-extern target-flut-get-on object) ;; unknown type
;;(define-extern target-flut-get-off object) ;; unknown type


;; ----------------------
;; File - eichar-flut+0-ag
;; Source Path - levels/flut_common/eichar-flut+0-ag.gd
;; Containing DGOs - ['L1', 'SNO', 'SWA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - farmer
;; Source Path - levels/village1/farmer.gc
;; Containing DGOs - ['L1', 'VI1']
;; Version - 3

;; - Types

; (deftype farmer (process-taskable)
;   ()
;   :method-count-assert 53
;   :size-assert         #x17c
;   :flag-assert         #x350110017c
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

;; - Unknowns

;;(define-extern *farmer-sg* object) ;; unknown type


;; ----------------------
;; File - explorer
;; Source Path - levels/village1/explorer.gc
;; Containing DGOs - ['L1', 'VI1']
;; Version - 3

;; - Types

; (deftype explorer (process-taskable)
;   ()
;   :method-count-assert 53
;   :size-assert         #x17c
;   :flag-assert         #x350110017c
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

;; - Unknowns

;;(define-extern *explorer-sg* object) ;; unknown type


;; ----------------------
;; File - assistant
;; Source Path - levels/village1/assistant.gc
;; Containing DGOs - ['L1', 'VI1']
;; Version - 3

;; - Types

; (deftype assistant (process-taskable)
;   ((sound-id sound-id  :offset-assert 380)
;    )
;   :method-count-assert 53
;   :size-assert         #x180
;   :flag-assert         #x3501100180
;   ;; inherited inspect of process-taskable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

;; - Functions

(define-extern check-drop-level-assistant function)

;; - Unknowns

;;(define-extern *assistant-sg* object) ;; unknown type


;; ----------------------
;; File - sage
;; Source Path - levels/village1/sage.gc
;; Containing DGOs - ['L1', 'VI1']
;; Version - 3

;; - Types

; (deftype sage (process-taskable)
;   ((reminder-played basic   :offset-assert 380)
;    (assistant       uint64  :offset-assert 384)
;    )
;   :method-count-assert 53
;   :size-assert         #x188
;   :flag-assert         #x3501200188
;   ;; inherited inspect of process-taskable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

;; - Unknowns

;;(define-extern *sage-sg* object) ;; unknown type


;; ----------------------
;; File - yakow
;; Source Path - levels/village1/yakow.gc
;; Containing DGOs - ['L1', 'VI1']
;; Version - 3

;; - Types

; (deftype yakow-bank (basic)
;   ((walk-cycle-frame-count float   :offset-assert 4)
;    (run-cycle-frame-count  float   :offset-assert 8)
;    (walk-speed             meters  :offset-assert 12)
;    (run-speed              meters  :offset-assert 16)
;    (walk-anim-speed        float   :offset-assert 20)
;    (run-anim-speed         float   :offset-assert 24)
;    (walk-away-dist         meters  :offset-assert 28)
;    (run-away-dist          meters  :offset-assert 32)
;    (walk-rotate-speed      float   :offset-assert 36)
;    (run-rotate-speed       float   :offset-assert 40)
;    (walk-turn-time         uint64  :offset-assert 48)
;    (run-turn-time          uint64  :offset-assert 56)
;    (max-walk-speed         float   :offset-assert 64)
;    (min-run-speed          float   :offset-assert 68)
;    (walk-run-blend-rate    float   :offset-assert 72)
;    (walk-turn-blend-rate   float   :offset-assert 76)
;    (max-run-speed          float   :offset-assert 80)
;    (acceleration           meters  :offset-assert 84)
;    (default-patrol-time    uint64  :offset-assert 88)
;    (default-idle-distance  meters  :offset-assert 96)
;    (safe-distance          meters  :offset-assert 100)
;    (min-run-anim-speed     float   :offset-assert 104)
;    (max-run-anim-speed     float   :offset-assert 108)
;    (min-walk-anim-speed    float   :offset-assert 112)
;    (speed-boost-impulse    meters  :offset-assert 116)
;    )
;   :method-count-assert 9
;   :size-assert         #x78
;   :flag-assert         #x900000078
;   )

; (deftype yakow (process-drawable)
;   ((player-attack-id   int32          :offset-assert 176)
;    (walk-run-blend     float          :offset-assert 180)
;    (walk-turn-blend    float          :offset-assert 184)
;    (run-mode           basic          :offset-assert 188)
;    (travel-speed       meters         :offset-assert 192)
;    (final-speed        meters         :offset-assert 196)
;    (rotate-speed       float          :offset-assert 200)
;    (turn-time          uint64         :offset-assert 208)
;    (vulnerable         basic          :offset-assert 216)
;    (grazing            basic          :offset-assert 220)
;    (push-velocity      vector :inline :offset-assert 224)
;    (home-base          vector :inline :offset-assert 240)
;    (dest-base          vector :inline :offset-assert 256)
;    (dest-rot           degrees            :offset-assert 272)
;    (enable-turn-around basic          :offset-assert 276)
;    (rotating           basic          :offset-assert 280)
;    (in-pen             basic          :offset-assert 284)
;    )
;   :method-count-assert 20
;   :size-assert         #x120
;   :flag-assert         #x1400b00120
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

;; - Functions

(define-extern yakow-task-complete? function)
(define-extern yakow-facing-player? function)
(define-extern yakow-post function)
(define-extern yakow-facing-point? function)
(define-extern yakow-facing-direction? function)
(define-extern yakow-generate-travel-vector function)
(define-extern yakow-common-post function)
(define-extern yakow-cam function)
(define-extern yakow-default-event-handler function)
(define-extern yakow-simple-post function)
(define-extern yakow-run-post function)
(define-extern yakow-blend-walk-run function)

;; - Unknowns

;;(define-extern *YAKOW-bank* object) ;; unknown type
;;(define-extern *yakow-sg* object) ;; unknown type
;;(define-extern yakow-graze object) ;; unknown type
;;(define-extern yakow-idle object) ;; unknown type
;;(define-extern yakow-run-away object) ;; unknown type
;;(define-extern yakow-graze-kicked object) ;; unknown type
;;(define-extern yakow-walk-to object) ;; unknown type
;;(define-extern yakow-notice object) ;; unknown type
;;(define-extern yakow-kicked object) ;; unknown type
;;(define-extern *village1cam-sg* object) ;; unknown type
;;(define-extern yakow-die object) ;; unknown type


;; ----------------------
;; File - village-obs-L1
;; Source Path - levels/l1_only/village-obs-L1.gc
;; Containing DGOs - ['L1']
;; Version - 3

;; - Types

; (deftype windmill-sail (process-drawable)
;   ((sync         sync-info  :inline :offset-assert 176)
;    (blade-normal vector     :inline :offset-assert 192)
;    (orig-quat    quaternion :inline :offset-assert 208)
;    (alt-actor    basic              :offset-assert 224)
;    (part2        basic              :offset-assert 228)
;    )
;   :method-count-assert 20
;   :size-assert         #xe8
;   :flag-assert         #x14008000e8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype sagesail (process-drawable)
;   ((sync         sync-info  :inline :offset-assert 176)
;    (blade-normal vector     :inline :offset-assert 192)
;    (orig-quat    quaternion :inline :offset-assert 208)
;    )
;   :method-count-assert 20
;   :size-assert         #xe0
;   :flag-assert         #x14007000e0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype windspinner (process-drawable)
;   ((blade-normal vector     :inline :offset-assert 176)
;    (orig-quat    quaternion :inline :offset-assert 192)
;    (angle        float              :offset-assert 208)
;    (angle-vel    float              :offset-assert 212)
;    )
;   :method-count-assert 20
;   :size-assert         #xd8
;   :flag-assert         #x14007000d8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype mayorgears (process-drawable)
;   ((alt-actor basic  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb4
;   :flag-assert         #x14005000b4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype reflector-middle (process-drawable)
;   ((reflector-trans      vector :inline :offset-assert 176)
;    (next-reflector-trans vector :inline :offset-assert 192)
;    )
;   :method-count-assert 20
;   :size-assert         #xd0
;   :flag-assert         #x14006000d0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype reflector-end (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype villa-starfish (process-drawable)
;   ((child-count int8  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb1
;   :flag-assert         #x14005000b1
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype starfish (nav-enemy)
;   ()
;   :method-count-assert 76
;   :size-assert         #x190
;   :flag-assert         #x4c01200190
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

; (deftype village-fish (process-drawable)
;   ((child-count int8  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb1
;   :flag-assert         #x14005000b1
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype villa-fisha (village-fish)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb1
;   :flag-assert         #x14005000b1
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype villa-fishb (village-fish)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb1
;   :flag-assert         #x14005000b1
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype cyclegen (structure)
;   ((output float  :offset-assert 0)
;    (inc    float  :offset-assert 4)
;    )
;   :method-count-assert 9
;   :size-assert         #x8
;   :flag-assert         #x900000008
;   )

; (deftype hutlamp (process-drawable)
;   ((pivot basic            :offset-assert 176)
;    (clock cyclegen :inline :offset-assert 180)
;    )
;   :method-count-assert 20
;   :size-assert         #xbc
;   :flag-assert         #x14005000bc
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype revcycleprop (process-drawable)
;   ()
;   :method-count-assert 21
;   :size-assert         #xb0
;   :flag-assert         #x15004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; (deftype revcycle (process-drawable)
;   ()
;   :method-count-assert 21
;   :size-assert         #xb0
;   :flag-assert         #x15004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; (deftype villagea-water (water-anim)
;   ()
;   :method-count-assert 30
;   :size-assert         #xdc
;   :flag-assert         #x1e007000dc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

;; - Functions

(define-extern set-period function)
(define-extern update-clock function)
(define-extern process-drawable-child-count function)
(define-extern starfish-spawn-child function)
(define-extern starfish-init-by-other function)

;; - Unknowns

;;(define-extern ripple-for-villagea-water object) ;; unknown type
;;(define-extern *revcycle-sg* object) ;; unknown type
;;(define-extern *revcycleprop-sg* object) ;; unknown type
;;(define-extern *hutlamp-sg* object) ;; unknown type
;;(define-extern hutlamp-idle object) ;; unknown type
;;(define-extern village-fish-idle object) ;; unknown type
;;(define-extern villa-starfish-idle object) ;; unknown type
;;(define-extern starfish-idle object) ;; unknown type
;;(define-extern *starfish-sg* object) ;; unknown type
;;(define-extern *starfish-nav-enemy-info* object) ;; unknown type
;;(define-extern starfish-patrol object) ;; unknown type
;;(define-extern reflector-end-idle object) ;; unknown type
;;(define-extern *reflector-middle-sg* object) ;; unknown type
;;(define-extern reflector-middle-idle object) ;; unknown type
;;(define-extern *mayorgears-sg* object) ;; unknown type
;;(define-extern mayorgears-idle object) ;; unknown type
;;(define-extern *windspinner-sg* object) ;; unknown type
;;(define-extern windspinner-idle object) ;; unknown type
;;(define-extern *sagesail-sg* object) ;; unknown type
;;(define-extern sagesail-idle object) ;; unknown type
;;(define-extern *windmill-sail-sg* object) ;; unknown type
;;(define-extern windmill-sail-idle object) ;; unknown type
;;(define-extern *med-res-jungle-sg* object) ;; unknown type
;;(define-extern *med-res-jungle1-sg* object) ;; unknown type
;;(define-extern *med-res-jungle2-sg* object) ;; unknown type
;;(define-extern *med-res-beach-sg* object) ;; unknown type
;;(define-extern *med-res-beach1-sg* object) ;; unknown type
;;(define-extern *med-res-beach2-sg* object) ;; unknown type
;;(define-extern *med-res-beach3-sg* object) ;; unknown type
;;(define-extern *med-res-misty-sg* object) ;; unknown type
;;(define-extern *med-res-village11-sg* object) ;; unknown type
;;(define-extern *med-res-village12-sg* object) ;; unknown type
;;(define-extern *med-res-village13-sg* object) ;; unknown type
;;(define-extern *med-res-training-sg* object) ;; unknown type


;; ----------------------
;; File - village-obs-VI1
;; Source Path - levels/village1/village-obs-VI1.gc
;; Containing DGOs - ['VI1']
;; Version - 3

;; - Nothing Defined in This File!


;; ----------------------
;; File - fishermans-boat
;; Source Path - levels/village1/fishermans-boat.gc
;; Containing DGOs - ['L1', 'VI1']
;; Version - 3

;; - Types

; (deftype boat-stabilizer (structure)
;   ((local-pos vector :inline :offset-assert 0)
;    (normal    vector :inline :offset-assert 16)
;    )
;   :method-count-assert 9
;   :size-assert         #x20
;   :flag-assert         #x900000020
;   )

; (deftype vehicle-path (structure)
;   ((point-array UNKNOWN 10 :offset-assert 0)
;    (point-count int32      :offset-assert 160)
;    )
;   :method-count-assert 14
;   :size-assert         #xa4
;   :flag-assert         #xe000000a4
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     )
;   )

; (deftype vehicle-controller (structure)
;   ((path                   vehicle-path         :offset-assert 0)
;    (turning-radius-table   uint32               :offset-assert 4)
;    (throttle-control-table uint32               :offset-assert 8)
;    (table-step             float                :offset-assert 12)
;    (table-length           int32                :offset-assert 16)
;    (circle-radius          float                :offset-assert 20)
;    (throttle               float                :offset-assert 24)
;    (steering               float                :offset-assert 28)
;    (path-dest-index        int8                 :offset-assert 32)
;    (left-circle            int8                 :offset-assert 33)
;    (path-dest-point        vector       :inline :offset-assert 48)
;    (path-dest-velocity     vector       :inline :offset-assert 64)
;    (dest-circle            vector       :inline :offset-assert 80)
;    (target-point           vector       :inline :offset-assert 96)
;    (sample-dir             vector       :inline :offset-assert 112)
;    (sample-time            uint64               :offset-assert 128)
;    (sample-index           int32                :offset-assert 136)
;    )
;   :method-count-assert 17
;   :size-assert         #x8c
;   :flag-assert         #x110000008c
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     )
;   )

; (deftype fishermans-boat (rigid-body-platform)
;   ((stabilizer-array        UNKNOWN            2       :offset-assert 736)
;    (engine-thrust-local-pos vector             :inline :offset-assert 800)
;    (ignition                basic                      :offset-assert 816)
;    (engine-thrust           float                      :offset-assert 820)
;    (propeller               basic                      :offset-assert 824)
;    (dock-point              vector             :inline :offset-assert 832)
;    (dest-dir                vector             :inline :offset-assert 848)
;    (dock-point-index        int8                       :offset-assert 864)
;    (auto-pilot              basic                      :offset-assert 868)
;    (anchored                basic                      :offset-assert 872)
;    (waiting-for-player      basic                      :offset-assert 876)
;    (player-riding           basic                      :offset-assert 880)
;    (boat-path               vehicle-path       :inline :offset-assert 896)
;    (cam-tracker             uint64                     :offset-assert 1064)
;    (player-attack-id        int32                      :offset-assert 696)
;    (kill-player             basic                      :offset-assert 1076)
;    (engine-sound-id         sound-id                   :offset-assert 1080)
;    (engine-sound-envelope   float                      :offset-assert 1084)
;    (debug-draw              basic                      :offset-assert 1088)
;    (debug-path-record       basic                      :offset-assert 1092)
;    (debug-path-playback     basic                      :offset-assert 1096)
;    (measure-parameters      basic                      :offset-assert 1100)
;    (controller              vehicle-controller :inline :offset-assert 1104)
;    (anim                    basic                      :offset-assert 1244)
;    (old-target-pos          transformq         :inline :offset-assert 1248)
;    (evilbro                 uint64                     :offset-assert 1296)
;    (evilsis                 uint64                     :offset-assert 1304)
;    )
;   :method-count-assert 35
;   :size-assert         #x520
;   :flag-assert         #x2304b00520
;   ;; inherited inspect of rigid-body-platform
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     )
;   )

;; - Functions

(define-extern fishermans-boat-spawn-particles function)
(define-extern fishermans-boat-play-sounds function)
(define-extern fishermans-boat-reset-physics function)
(define-extern fishermans-boat-set-dock-point function)
(define-extern fishermans-boat-set-path-point function)
(define-extern fishermans-boat-next-path-point function)
(define-extern fishermans-boat-set-throttle-by-speed function)
(define-extern fishermans-boat-enter-dock? function)
(define-extern fishermans-boat-leave-dock? function)
(define-extern fishermans-boat-wave function)
(define-extern fishermans-boat-post function)

;; - Unknowns

;;(define-extern fishermans-boat-docked-village object) ;; unknown type
;;(define-extern *fb-evilbro-sg* object) ;; unknown type
;;(define-extern *fb-evilsis-sg* object) ;; unknown type
;;(define-extern fishermans-boat-docked-misty object) ;; unknown type
;;(define-extern *fishermans-boat-sg* object) ;; unknown type
;;(define-extern *boat-turning-radius-table* object) ;; unknown type
;;(define-extern *boat-throttle-control-table* object) ;; unknown type
;;(define-extern *fishermans-boat-constants* object) ;; unknown type
;;(define-extern fishermans-boat-player-control object) ;; unknown type
;;(define-extern fishermans-boat-entering-village object) ;; unknown type
;;(define-extern fishermans-boat-entering-misty object) ;; unknown type
;;(define-extern fishermans-boat-ride-to-village1 object) ;; unknown type
;;(define-extern fishermans-boat-ride-to-misty object) ;; unknown type
;;(define-extern fishermans-boat-leaving-village object) ;; unknown type
;;(define-extern fishermans-boat-leaving-misty object) ;; unknown type
;;(define-extern fishermans-boat-measurements object) ;; unknown type


;; ----------------------
;; File - village1-part
;; Source Path - levels/village1/village1-part.gc
;; Containing DGOs - ['L1', 'VI1']
;; Version - 3

;; - Types

; (deftype villagea-part (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;;  not enough basic ops
;   )

;; - Functions

(define-extern bird-bob-func function)
(define-extern sparticle-seagull-moon function)
(define-extern check-drop-level-village1-fountain-nosplash function)
(define-extern check-drop-level-village1-fountain function)


;; ----------------------
;; File - village1-part2
;; Source Path - levels/village1/village1-part2.gc
;; Containing DGOs - ['L1', 'VI1']
;; Version - 3

;; - Functions

(define-extern check-drop-level-sagehut function)


;; ----------------------
;; File - sequence-a-village1
;; Source Path - levels/village1/sequence-a-village1.gc
;; Containing DGOs - ['L1', 'VI1']
;; Version - 3

;; - Types

; (deftype sequenceA-village1 (process-taskable)
;   ((boat uint64  :offset-assert 384)
;    (side uint64  :offset-assert 392)
;    )
;   :method-count-assert 53
;   :size-assert         #x190
;   :flag-assert         #x3501200190
;   ;; inherited inspect of process-taskable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

;; - Functions

(define-extern sequenceA-village1-init-by-other function)
(define-extern sequenceA-village1-trans-hook function)

;; - Unknowns

;;(define-extern *sidekick-human-sg* object) ;; unknown type


;; ----------------------
;; File - training-obs
;; Source Path - levels/training/training-obs.gc
;; Containing DGOs - ['L1', 'TRA']
;; Version - 3

;; - Types

; (deftype training-water (water-anim)
;   ()
;   :method-count-assert 30
;   :size-assert         #xdc
;   :flag-assert         #x1e007000dc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

; (deftype training-cam (process)
;   ((root       basic   :offset-assert 112)
;    (range      meters  :offset-assert 116)
;    (index      int32   :offset-assert 120)
;    (state-time uint64  :offset-assert 128)
;    )
;   :method-count-assert 15
;   :size-assert         #x88
;   :flag-assert         #xf00200088
;   ;; inherited inspect of process
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     )
;   )

; (deftype tra-pontoon (rigid-body-platform)
;   ((anchor-point vector :inline :offset-assert 736)
;    )
;   :method-count-assert 35
;   :size-assert         #x2f0
;   :flag-assert         #x23028002f0
;   ;; inherited inspect of rigid-body-platform
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     )
;   )

; (deftype tra-iris-door (eco-door)
;   ()
;   :method-count-assert 27
;   :size-assert         #x104
;   :flag-assert         #x1b00a00104
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     )
;   )

; (deftype scarecrow-a (process-drawable)
;   ((incomming-attack-id uint64         :offset-assert 176)
;    (intersection        vector :inline :offset-assert 192)
;    )
;   :method-count-assert 22
;   :size-assert         #xd0
;   :flag-assert         #x16006000d0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; (deftype scarecrow-b (process-drawable)
;   ((incomming-attack-id uint64         :offset-assert 176)
;    (intersection        vector :inline :offset-assert 192)
;    )
;   :method-count-assert 22
;   :size-assert         #xd0
;   :flag-assert         #x16006000d0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

;; - Unknowns

;;(define-extern *scarecrow-b-sg* object) ;; unknown type
;;(define-extern *scarecrow-b-break-sg* object) ;; unknown type
;;(define-extern *scarecrow-a-sg* object) ;; unknown type
;;(define-extern *scarecrow-a-break-sg* object) ;; unknown type
;;(define-extern *tra-iris-door-sg* object) ;; unknown type
;;(define-extern *tra-pontoon-sg* object) ;; unknown type
;;(define-extern *tra-pontoon-constants* object) ;; unknown type
;;(define-extern *training-cam-sg* object) ;; unknown type
;;(define-extern ripple-for-training-water object) ;; unknown type


;; ----------------------
;; File - training-part
;; Source Path - levels/training/training-part.gc
;; Containing DGOs - ['L1', 'TRA']
;; Version - 3

;; - Types

; (deftype training-part (part-spawner)
;   ()
;   :method-count-assert 21
;   :size-assert         #xd0
;   :flag-assert         #x15006000d0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

;; - Functions

(define-extern check-drop-level-training-mist function)
(define-extern check-drop-level-training-spout-rain function)
(define-extern tra-bird-bob-func function)
(define-extern tra-sparticle-seagull-moon function)


;; ----------------------
;; File - misty-obs
;; Source Path - levels/misty/misty-obs.gc
;; Containing DGOs - ['L1', 'MIS']
;; Version - 3

;; - Types

; (deftype boatpaddle (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype windturbine (process-drawable)
;   ((spawn-particle-enable basic  :offset-assert 176)
;    (angle-speed           float  :offset-assert 180)
;    )
;   :method-count-assert 20
;   :size-assert         #xb8
;   :flag-assert         #x14005000b8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype mis-bone-bridge (process-drawable)
;   ((particle-group   basic  :offset-assert 176)
;    (player-attack-id int32  :offset-assert 180)
;    (fall-anim-index  int32  :offset-assert 184)
;    (hit-points       int8   :offset-assert 188)
;    )
;   :method-count-assert 20
;   :size-assert         #xbd
;   :flag-assert         #x14005000bd
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype breakaway (process-drawable)
;   ()
;   :method-count-assert 22
;   :size-assert         #xb0
;   :flag-assert         #x16004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; (deftype breakaway-right (breakaway)
;   ()
;   :method-count-assert 22
;   :size-assert         #xb0
;   :flag-assert         #x16004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; (deftype breakaway-mid (breakaway)
;   ()
;   :method-count-assert 22
;   :size-assert         #xb0
;   :flag-assert         #x16004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; (deftype breakaway-left (breakaway)
;   ()
;   :method-count-assert 22
;   :size-assert         #xb0
;   :flag-assert         #x16004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; (deftype bone-platform (rigid-body-platform)
;   ((anchor-point vector :inline :offset-assert 736)
;    )
;   :method-count-assert 35
;   :size-assert         #x2f0
;   :flag-assert         #x23028002f0
;   ;; inherited inspect of rigid-body-platform
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     )
;   )

; (deftype mistycam (process-hidden)
;   ((name             basic                 :offset-assert 4)
;    (mask             uint32                :offset-assert 8)
;    (parent           uint32                :offset-assert 12)
;    (brother          uint32                :offset-assert 16)
;    (child            uint32                :offset-assert 20)
;    (ppointer         uint32                :offset-assert 24)
;    (self             basic                 :offset-assert 28)
;    (pool             basic                 :offset-assert 32)
;    (status           basic                 :offset-assert 36)
;    (pid              int32                 :offset-assert 40)
;    (main-thread      basic                 :offset-assert 44)
;    (top-thread       basic                 :offset-assert 48)
;    (entity           basic                 :offset-assert 52)
;    (state            basic                 :offset-assert 56)
;    (trans-hook       basic                 :offset-assert 60)
;    (post-hook        basic                 :offset-assert 64)
;    (event-hook       basic                 :offset-assert 68)
;    (allocated-length int32                 :offset-assert 72)
;    (next-state       basic                 :offset-assert 76)
;    (heap-base        uint32                :offset-assert 80)
;    (heap-top         uint32                :offset-assert 84)
;    (heap-cur         uint32                :offset-assert 88)
;    (stack-frame-top  basic                 :offset-assert 92)
;    (heap             kheap        :inline  :offset-assert 80)
;    (connection-list  'connectable :inline  :offset-assert 96)
;    (stack            UNKNOWN      :dynamic :offset-assert 112)
;    )
;   :method-count-assert 15
;   :size-assert         #x70
;   :flag-assert         #xf00000070
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     )
;   )

; (deftype misty-battlecontroller (battlecontroller)
;   ()
;   :method-count-assert 29
;   :size-assert         #x27c
;   :flag-assert         #x1d0210027c
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     )
;   )

; (deftype boat-fuelcell (process-drawable)
;   ((play-cutscene? basic  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb4
;   :flag-assert         #x14005000b4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

;; - Functions

(define-extern mis-bone-bridge-event-handler function)
(define-extern actor-wait-for-period function)
(define-extern misty-cam-restore function)

;; - Unknowns

;;(define-extern boat-fuelcell-spawn object) ;; unknown type
;;(define-extern boat-fuelcell-idle object) ;; unknown type
;;(define-extern *mistycam-sg* object) ;; unknown type
;;(define-extern boat-fuelcell-die object) ;; unknown type
;;(define-extern *mis-bone-platform-sg* object) ;; unknown type
;;(define-extern *bone-platform-constants* object) ;; unknown type
;;(define-extern *breakaway-left-sg* object) ;; unknown type
;;(define-extern *breakaway-mid-sg* object) ;; unknown type
;;(define-extern *breakaway-right-sg* object) ;; unknown type
;;(define-extern breakaway-idle object) ;; unknown type
;;(define-extern breakaway-fall object) ;; unknown type
;;(define-extern breakaway-about-to-fall object) ;; unknown type
;;(define-extern *mis-bone-bridge-sg* object) ;; unknown type
;;(define-extern mis-bone-bridge-fall object) ;; unknown type
;;(define-extern mis-bone-bridge-idle object) ;; unknown type
;;(define-extern mis-bone-bridge-hit object) ;; unknown type
;;(define-extern mis-bone-bridge-bump object) ;; unknown type
;;(define-extern *windturbine-sg* object) ;; unknown type
;;(define-extern windturbine-idle object) ;; unknown type
;;(define-extern *boatpaddle-sg* object) ;; unknown type
;;(define-extern boatpaddle-idle object) ;; unknown type


;; ----------------------
;; File - misty-warehouse
;; Source Path - levels/misty/misty-warehouse.gc
;; Containing DGOs - ['L1', 'MIS']
;; Version - 3

;; - Types

; (deftype silostep (process-drawable)
;   ((anim-limit  float   :offset-assert 176)
;    (cam-tracker uint64  :offset-assert 184)
;    )
;   :method-count-assert 20
;   :size-assert         #xc0
;   :flag-assert         #x14005000c0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype rounddoor (eco-door)
;   ()
;   :method-count-assert 27
;   :size-assert         #x104
;   :flag-assert         #x1b00a00104
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     )
;   )

;; - Functions

(define-extern misty-camera-view function)

;; - Unknowns

;;(define-extern *rounddoor-sg* object) ;; unknown type
;;(define-extern *silostep-sg* object) ;; unknown type
;;(define-extern silostep-rise object) ;; unknown type
;;(define-extern silostep-idle object) ;; unknown type
;;(define-extern silostep-camera object) ;; unknown type


;; ----------------------
;; File - misty-conveyor
;; Source Path - levels/misty/misty-conveyor.gc
;; Containing DGOs - ['L1', 'MIS']
;; Version - 3

;; - Types

; (deftype keg-conveyor (process-drawable)
;   ((pivot basic              :offset-assert 176)
;    (quat  quaternion :inline :offset-assert 192)
;    )
;   :method-count-assert 20
;   :size-assert         #xd0
;   :flag-assert         #x14006000d0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype keg-conveyor-paddle (process-drawable)
;   ((object-on-paddle uint32            :offset-assert 176)
;    (sync             sync-info :inline :offset-assert 180)
;    )
;   :method-count-assert 20
;   :size-assert         #xbc
;   :flag-assert         #x14005000bc
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype keg (process-drawable)
;   ((sync-offset         float                 :offset-assert 176)
;    (keg-behavior        int8                  :offset-assert 180)
;    (path-position       vector        :inline :offset-assert 192)
;    (shadow-enable-plane vector        :inline :offset-assert 208)
;    (smush               smush-control :inline :offset-assert 224)
;    (sound-id            sound-id              :offset-assert 256)
;    )
;   :method-count-assert 20
;   :size-assert         #x104
;   :flag-assert         #x1400a00104
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

;; - Functions

(define-extern keg-conveyor-paddle-init-by-other function)
(define-extern keg-conveyor-spawn-keg function)
(define-extern keg-conveyor-spawn-bouncing-keg function)
(define-extern keg-init-by-other function)
(define-extern keg-bounce-set-particle-rotation-callback function)
(define-extern keg-update-smush function)
(define-extern keg-event-handler function)
(define-extern keg-post function)

;; - Unknowns

;;(define-extern *keg-conveyor-sg* object) ;; unknown type
;;(define-extern keg-conveyor-idle object) ;; unknown type
;;(define-extern *keg-conveyor-paddle-sg* object) ;; unknown type
;;(define-extern keg-conveyor-paddle-idle object) ;; unknown type
;;(define-extern *keg-conveyor-keg-spawn-table* object) ;; unknown type
;;(define-extern *keg-sg* object) ;; unknown type
;;(define-extern keg-on-paddle object) ;; unknown type
;;(define-extern keg-die object) ;; unknown type
;;(define-extern keg-in-chute object) ;; unknown type
;;(define-extern keg-on-path object) ;; unknown type
;;(define-extern keg-paddle-to-path object) ;; unknown type


;; ----------------------
;; File - mud
;; Source Path - levels/misty/mud.gc
;; Containing DGOs - ['L1', 'MIS']
;; Version - 3

;; - Types

; (deftype mud (water-anim)
;   ()
;   :method-count-assert 30
;   :size-assert         #xdc
;   :flag-assert         #x1e007000dc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

;; - Unknowns

;;(define-extern ripple-for-mud object) ;; unknown type
;;(define-extern ripple-for-small-mud object) ;; unknown type


;; ----------------------
;; File - muse
;; Source Path - levels/misty/muse.gc
;; Containing DGOs - ['L1', 'MIS']
;; Version - 3

;; - Types

; (deftype muse (nav-enemy)
;   ((current-path-index float              :offset-assert 400)
;    (prev-path-index    float              :offset-assert 404)
;    (dest-path-index    float              :offset-assert 408)
;    (player-path-index  float              :offset-assert 412)
;    (max-path-index     float              :offset-assert 416)
;    (sprint-distance    float              :offset-assert 420)
;    (dest-point         vector     :inline :offset-assert 432)
;    (anim               basic              :offset-assert 448)
;    (victory-anim       basic              :offset-assert 452)
;    (old-target-pos     transformq :inline :offset-assert 464)
;    )
;   :method-count-assert 76
;   :size-assert         #x200
;   :flag-assert         #x4c01900200
;   ;; inherited inspect of nav-enemy
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

; (deftype point-on-path-segment-info (structure)
;   ((point               vector  :inline :offset-assert 0)
;    (segment             UNKNOWN 2       :offset-assert 16)
;    (dir                 vector  :inline :offset-assert 48)
;    (nearest-point       vector  :inline :offset-assert 64)
;    (segment-length      float           :offset-assert 80)
;    (distance-to-segment float           :offset-assert 84)
;    (parametric-index    float           :offset-assert 88)
;    )
;   :method-count-assert 9
;   :size-assert         #x5c
;   :flag-assert         #x90000005c
;   )

;; - Functions

(define-extern muse-check-dest-point function)
(define-extern analyze-point-on-path-segment function)
(define-extern muse-get-path-point function)

;; - Unknowns

;;(define-extern *muse-sg* object) ;; unknown type
;;(define-extern *muse-nav-enemy-info* object) ;; unknown type
;;(define-extern muse-idle object) ;; unknown type
;;(define-extern muse-caught object) ;; unknown type


;; ----------------------
;; File - bonelurker
;; Source Path - levels/misty/bonelurker.gc
;; Containing DGOs - ['L1', 'MIS']
;; Version - 3

;; - Types

; (deftype bonelurker (nav-enemy)
;   ((bump-player-time uint64  :offset-assert 400)
;    )
;   :method-count-assert 76
;   :size-assert         #x198
;   :flag-assert         #x4c01300198
;   ;; inherited inspect of nav-enemy
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

;; - Functions

(define-extern bonelurker-set-small-bounds-sphere function)
(define-extern bonelurker-set-large-bounds-sphere function)
(define-extern bonelurker-stunned-event-handler function)
(define-extern bonelurker-push-post function)

;; - Unknowns

;;(define-extern *bonelurker-sg* object) ;; unknown type
;;(define-extern *bonelurker-nav-enemy-info* object) ;; unknown type
;;(define-extern bonelurker-stun object) ;; unknown type


;; ----------------------
;; File - quicksandlurker
;; Source Path - levels/misty/quicksandlurker.gc
;; Containing DGOs - ['L1', 'MIS']
;; Version - 3

;; - Types

; (deftype quicksandlurker-missile (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype quicksandlurker-missile-init-data (structure)
;   ((position vector  :offset-assert 0)
;    (velocity vector  :offset-assert 4)
;    )
;   :method-count-assert 9
;   :size-assert         #x8
;   :flag-assert         #x900000008
;   )

; (deftype quicksandlurker (process-drawable)
;   ((original-position vector :inline :offset-assert 176)
;    (y-offset          float          :offset-assert 192)
;    (theta-angle       float          :offset-assert 196)
;    (radial-offset     float          :offset-assert 200)
;    (bob-angle         float          :offset-assert 204)
;    (mud-entity        basic          :offset-assert 208)
;    )
;   :method-count-assert 20
;   :size-assert         #xd4
;   :flag-assert         #x14007000d4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

;; - Functions

(define-extern orient-to-face-target function)
(define-extern quicksandlurker-spit function)
(define-extern spawn-quicksandlurker-missile function)
(define-extern quicksandlurker-check-hide-transition function)
(define-extern inc-angle function)
(define-extern quicksandlurker-missile-init-by-other function)
(define-extern get-height-over-navmesh! function)
(define-extern intersects-nav-mesh? function)
(define-extern quicksandlurker-default-event-handler function)
(define-extern quicksandlurker-post function)

;; - Unknowns

;;(define-extern *quicksandlurker-sg* object) ;; unknown type
;;(define-extern quicksandlurker-idle object) ;; unknown type
;;(define-extern quicksandlurker-track object) ;; unknown type
;;(define-extern quicksandlurker-wait object) ;; unknown type
;;(define-extern quicksandlurker-popup object) ;; unknown type
;;(define-extern quicksandlurker-attack object) ;; unknown type
;;(define-extern quicksandlurker-hide object) ;; unknown type
;;(define-extern quicksandlurker-die object) ;; unknown type
;;(define-extern quicksandlurker-victory object) ;; unknown type
;;(define-extern quicksandlurker-missile-idle object) ;; unknown type
;;(define-extern quicksandlurker-missile-impact object) ;; unknown type
;;(define-extern quicksandlurker-yawn object) ;; unknown type


;; ----------------------
;; File - misty-teetertotter
;; Source Path - levels/misty/misty-teetertotter.gc
;; Containing DGOs - ['L1', 'MIS']
;; Version - 3

;; - Types

; (deftype teetertotter (process-drawable)
;   ((launched-player   basic  :offset-assert 176)
;    (in-launch-window  basic  :offset-assert 180)
;    (rock-is-dangerous basic  :offset-assert 184)
;    )
;   :method-count-assert 20
;   :size-assert         #xbc
;   :flag-assert         #x14005000bc
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

;; - Functions

(define-extern target-on-end-of-teetertotter? function)

;; - Unknowns

;;(define-extern *teetertotter-sg* object) ;; unknown type
;;(define-extern teetertotter-idle object) ;; unknown type
;;(define-extern teetertotter-launch object) ;; unknown type
;;(define-extern teetertotter-bend object) ;; unknown type


;; ----------------------
;; File - balloonlurker
;; Source Path - levels/misty/balloonlurker.gc
;; Containing DGOs - ['L1', 'MIS']
;; Version - 3

;; - Types

; (deftype balloonlurker-bank (basic)
;   ((buoyancy-depth-offset       meters  :offset-assert 4)
;    (player-mass                 float   :offset-assert 8)
;    (rudder-factor               float   :offset-assert 12)
;    (max-engine-thrust           float   :offset-assert 16)
;    (max-rudder-deflection-angle float   :offset-assert 20)
;    (throttle-factor             float   :offset-assert 24)
;    (throttle-distance           float   :offset-assert 28)
;    (throttle-close-distance     float   :offset-assert 32)
;    (explosion-force             float   :offset-assert 36)
;    (mine-weight                 float   :offset-assert 40)
;    )
;   :method-count-assert 9
;   :size-assert         #x2c
;   :flag-assert         #x90000002c
;   )

; (deftype balloonlurker (rigid-body-platform)
;   ((explosion-force-position vector  :inline :offset-assert 736)
;    (explosion-force          vector  :inline :offset-assert 752)
;    (explosion                basic           :offset-assert 768)
;    (explosion-joint-index    UNKNOWN 2       :offset-assert 772)
;    (vulnerable               basic           :offset-assert 776)
;    (water-y                  float           :offset-assert 780)
;    (propeller                basic           :offset-assert 784)
;    (rudder                   basic           :offset-assert 788)
;    (mine                     UNKNOWN 2       :offset-assert 792)
;    (buoyancy-factor          float           :offset-assert 800)
;    (rudder-control           float           :offset-assert 804)
;    (throttle-control         float           :offset-assert 808)
;    (engine-thrust            float           :offset-assert 812)
;    (dest-point               vector  :inline :offset-assert 816)
;    (dest-point-old           vector  :inline :offset-assert 832)
;    (dest-index               int8            :offset-assert 848)
;    (auto-pilot               basic           :offset-assert 852)
;    (dead                     basic           :offset-assert 856)
;    (anim-frame               float           :offset-assert 860)
;    (engine-sound-id          sound-id        :offset-assert 864)
;    (pedal-sound-id           sound-id        :offset-assert 868)
;    (frame-count              int8            :offset-assert 872)
;    )
;   :method-count-assert 35
;   :size-assert         #x369
;   :flag-assert         #x2303000369
;   ;; inherited inspect of rigid-body-platform
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     )
;   )

; (deftype balloonlurker-pilot (process-drawable)
;   ()
;   :method-count-assert 22
;   :size-assert         #xb0
;   :flag-assert         #x16004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

;; - Functions

(define-extern balloonlurker-pilot-init-by-other function)
(define-extern balloonlurker-find-nearest-path-point function)
(define-extern balloonlurker-snap-to-path-point function)
(define-extern balloonlurker-get-next-path-point function)
(define-extern balloonlurker-play-sounds function)
(define-extern balloonlurker-player-impulse function)
(define-extern balloonlurker-get-path-point function)
(define-extern balloonlurker-event-handler function)
(define-extern balloonlurker-post function)

;; - Unknowns

;;(define-extern balloonlurker-patrol object) ;; unknown type
;;(define-extern *balloonlurker-sg* object) ;; unknown type
;;(define-extern *balloonlurker-constants* object) ;; unknown type
;;(define-extern balloonlurker-pilot-idle object) ;; unknown type
;;(define-extern *balloonlurker-pilot-sg* object) ;; unknown type
;;(define-extern balloonlurker-pilot-die object) ;; unknown type
;;(define-extern *BALLOONLURKER-bank* object) ;; unknown type
;;(define-extern balloonlurker-die object) ;; unknown type
;;(define-extern *balloonlurker-rudder-joint-home* object) ;; unknown type
;;(define-extern balloonlurker-mine-explode object) ;; unknown type


;; ----------------------
;; File - misty-part
;; Source Path - levels/misty/misty-part.gc
;; Containing DGOs - ['L1', 'MIS']
;; Version - 3

;; - Types

; (deftype misty-part (part-spawner)
;   ()
;   :method-count-assert 21
;   :size-assert         #xd0
;   :flag-assert         #x15006000d0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )


;; ----------------------
;; File - sidekick-human
;; Source Path - levels/misty/sidekick-human.gc
;; Containing DGOs - ['L1', 'MIS']
;; Version - 3

;; - Types

; (deftype sequenceA (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; bad get label
;   )

; (deftype sequenceB (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; unrecognized get op: (set! v1 process-taskable) parent was UNKNOWN
;   )

; (deftype sequenceC (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; unrecognized get op: (set! v1 process-taskable) parent was UNKNOWN
;   )

; (deftype army-info (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; bad get label
;   )

;; - Functions

(define-extern sequenceC-trans-hook function)
(define-extern sequenceC-can-trans-hook function)
(define-extern sequenceC-can-trans-hook-2 function)
(define-extern evilsib-trans-hook-wait function)
(define-extern evilsib-trans-hook-hover function)

;; - Unknowns

;;(define-extern *darkecocan-sg* object) ;; unknown type
;;(define-extern *darkecocan-glow-sg* object) ;; unknown type
;;(define-extern *lurker-army* object) ;; unknown type
;;(define-extern *evilbro-sg* object) ;; unknown type
;;(define-extern *evilsis-sg* object) ;; unknown type


;; ----------------------
;; File - firecanyon-part
;; Source Path - levels/firecanyon/firecanyon-part.gc
;; Containing DGOs - ['L1', 'FIC']
;; Version - 3

;; - Types

; (deftype firecanyon-part (part-spawner)
;   ()
;   :method-count-assert 21
;   :size-assert         #xd0
;   :flag-assert         #x15006000d0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )


;; ----------------------
;; File - assistant-firecanyon
;; Source Path - levels/firecanyon/assistant-firecanyon.gc
;; Containing DGOs - ['L1', 'FIC']
;; Version - 3

;; - Types

; (deftype assistant-firecanyon (process-taskable)
;   ()
;   :method-count-assert 53
;   :size-assert         #x17c
;   :flag-assert         #x350110017c
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

;; - Unknowns

;;(define-extern *assistant-firecanyon-sg* object) ;; unknown type


;; ----------------------
;; File - village2-part
;; Source Path - levels/village2/village2-part.gc
;; Containing DGOs - ['L1', 'VI2']
;; Version - 3

;; - Types

; (deftype villageb-part (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;;  not enough basic ops
;   )

;; - Functions

(define-extern check-drop-level-sagehut2 function)


;; ----------------------
;; File - village2-obs
;; Source Path - levels/village2/village2-obs.gc
;; Containing DGOs - ['L1', 'VI2']
;; Version - 3

;; - Types

; (deftype village2cam (pov-camera)
;   ((seq uint64  :offset-assert 224)
;    )
;   :method-count-assert 30
;   :size-assert         #xe8
;   :flag-assert         #x1e008000e8
;   ;; inherited inspect of pov-camera
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

; (deftype pontoon (rigid-body-platform)
;   ((anchor-point vector :inline :offset-assert 736)
;    (task         uint8          :offset-assert 752)
;    (alt-task     uint8          :offset-assert 753)
;    )
;   :method-count-assert 35
;   :size-assert         #x2f2
;   :flag-assert         #x23029002f2
;   ;; inherited inspect of rigid-body-platform
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     )
;   )

; (deftype pontoonfive (pontoon)
;   ()
;   :method-count-assert 35
;   :size-assert         #x2f2
;   :flag-assert         #x23029002f2
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     )
;   )

; (deftype pontoonten (pontoon)
;   ()
;   :method-count-assert 35
;   :size-assert         #x2f2
;   :flag-assert         #x23029002f2
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     )
;   )

; (deftype allpontoons (process-drawable)
;   ((task uint8  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb1
;   :flag-assert         #x14005000b1
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype fireboulder (process-drawable)
;   ((tracker uint64  :offset-assert 176)
;    (task    uint8   :offset-assert 184)
;    )
;   :method-count-assert 20
;   :size-assert         #xb9
;   :flag-assert         #x14005000b9
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype ceilingflag (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype exit-chamber-dummy (process-drawable)
;   ((orig-trans   vector :inline :offset-assert 176)
;    (fcell-handle uint64         :offset-assert 192)
;    )
;   :method-count-assert 21
;   :size-assert         #xc8
;   :flag-assert         #x15006000c8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; (deftype ogreboss-village2 (process-drawable)
;   ((boulder uint64  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb8
;   :flag-assert         #x14005000b8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype villageb-ogreboss (ogreboss-village2)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb8
;   :flag-assert         #x14005000b8
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype villageb-water (water-anim)
;   ()
;   :method-count-assert 30
;   :size-assert         #xdc
;   :flag-assert         #x1e007000dc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

;; - Functions

(define-extern boulder1-trans function)
(define-extern boulder2-trans function)
(define-extern boulder3-trans function)
(define-extern boulder4-trans function)
(define-extern boulder4-trans-2 function)
(define-extern boulder4-trans-3 function)
(define-extern boulder3-trans-2 function)
(define-extern boulder2-trans-2 function)
(define-extern fireboulder-disable-blocking-collision function)
(define-extern fireboulder-hover-stuff function)
(define-extern ogreboss-village2-trans function)

;; - Unknowns

;;(define-extern ripple-for-villageb-water object) ;; unknown type
;;(define-extern *ogreboss-village2-sg* object) ;; unknown type
;;(define-extern ogreboss-village2-idle object) ;; unknown type
;;(define-extern ogreboss-village2-throw object) ;; unknown type
;;(define-extern *fireboulder-sg* object) ;; unknown type
;;(define-extern *exit-chamber-dummy-sg* object) ;; unknown type
;;(define-extern exit-chamber-dummy-wait-to-appear object) ;; unknown type
;;(define-extern exit-chamber-dummy-idle object) ;; unknown type
;;(define-extern *ceilingflag-sg* object) ;; unknown type
;;(define-extern ceilingflag-idle object) ;; unknown type
;;(define-extern fireboulder-idle object) ;; unknown type
;;(define-extern fireboulder-hover object) ;; unknown type
;;(define-extern fireboulder-be-clone object) ;; unknown type
;;(define-extern *allpontoons-sg* object) ;; unknown type
;;(define-extern allpontoons-idle object) ;; unknown type
;;(define-extern allpontoons-be-clone object) ;; unknown type
;;(define-extern *pontoonten-sg* object) ;; unknown type
;;(define-extern *pontoonten-constants* object) ;; unknown type
;;(define-extern *pontoonfive-sg* object) ;; unknown type
;;(define-extern *pontoonfive-constants* object) ;; unknown type
;;(define-extern pontoon-die object) ;; unknown type
;;(define-extern pontoon-hidden object) ;; unknown type
;;(define-extern *village2cam-sg* object) ;; unknown type
;;(define-extern *med-res-rolling-sg* object) ;; unknown type
;;(define-extern *med-res-rolling1-sg* object) ;; unknown type
;;(define-extern *med-res-village2-sg* object) ;; unknown type


;; ----------------------
;; File - village2-part2
;; Source Path - levels/village2/village2-part2.gc
;; Containing DGOs - ['L1', 'VI2']
;; Version - 3

;; - Nothing Defined in This File!


;; ----------------------
;; File - gambler
;; Source Path - levels/village2/gambler.gc
;; Containing DGOs - ['L1', 'VI2']
;; Version - 3

;; - Types

; (deftype gambler (process-taskable)
;   ()
;   :method-count-assert 53
;   :size-assert         #x17c
;   :flag-assert         #x350110017c
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

;; - Unknowns

;;(define-extern *gambler-sg* object) ;; unknown type


;; ----------------------
;; File - warrior
;; Source Path - levels/village2/warrior.gc
;; Containing DGOs - ['L1', 'VI2']
;; Version - 3

;; - Types

; (deftype warrior (process-taskable)
;   ()
;   :method-count-assert 53
;   :size-assert         #x17c
;   :flag-assert         #x350110017c
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

;; - Unknowns

;;(define-extern *warrior-sg* object) ;; unknown type


;; ----------------------
;; File - geologist
;; Source Path - levels/village2/geologist.gc
;; Containing DGOs - ['L1', 'VI2']
;; Version - 3

;; - Types

; (deftype geologist (process-taskable)
;   ()
;   :method-count-assert 53
;   :size-assert         #x17c
;   :flag-assert         #x350110017c
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

;; - Unknowns

;;(define-extern *geologist-sg* object) ;; unknown type


;; ----------------------
;; File - swamp-blimp
;; Source Path - levels/village2/swamp-blimp.gc
;; Containing DGOs - ['L1', 'VI2']
;; Version - 3

;; - Types

; (deftype swamp-blimp-bank (basic)
;   ((arm-index                 int32  :offset-assert 4)
;    (pause-before-dropping-arm int32  :offset-assert 8)
;    (rise-per-break            float  :offset-assert 12)
;    (arm-sink-wait             float  :offset-assert 16)
;    )
;   :method-count-assert 9
;   :size-assert         #x14
;   :flag-assert         #x900000014
;   )

; (deftype tetherrock-info (structure)
;   ((rock-camera       basic  :offset-assert 0)
;    (arm-camera        basic  :offset-assert 4)
;    (blimp-rp          int32  :offset-assert 8)
;    (other-rp          int32  :offset-assert 12)
;    (connected-to-rock basic  :offset-assert 16)
;    (damping           float  :offset-assert 20)
;    )
;   :method-count-assert 9
;   :size-assert         #x18
;   :flag-assert         #x900000018
;   )

; (deftype swamp-rope-rand-float (structure)
;   ((min-time int32  :offset-assert 0)
;    (max-time int32  :offset-assert 4)
;    (max-val  float  :offset-assert 8)
;    (timer    int32  :offset-assert 12)
;    (value    float  :offset-assert 16)
;    )
;   :method-count-assert 11
;   :size-assert         #x14
;   :flag-assert         #xb00000014
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     )
;   )

; (deftype swamp-rope-oscillator (structure)
;   ((target  float  :offset-assert 0)
;    (value   float  :offset-assert 4)
;    (vel     float  :offset-assert 8)
;    (accel   float  :offset-assert 12)
;    (max-vel float  :offset-assert 16)
;    (damping float  :offset-assert 20)
;    )
;   :method-count-assert 11
;   :size-assert         #x18
;   :flag-assert         #xb00000018
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     )
;   )

; (deftype swamp-blimp-rand-vector (structure)
;   ((min-time int32          :offset-assert 0)
;    (max-time int32          :offset-assert 4)
;    (xz-max   float          :offset-assert 8)
;    (y-max    float          :offset-assert 12)
;    (timer    int32          :offset-assert 16)
;    (value    vector :inline :offset-assert 32)
;    )
;   :method-count-assert 11
;   :size-assert         #x30
;   :flag-assert         #xb00000030
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     )
;   )

; (deftype swamp-blimp-oscillator (structure)
;   ((target  vector :inline :offset-assert 0)
;    (value   vector :inline :offset-assert 16)
;    (vel     vector :inline :offset-assert 32)
;    (accel   float          :offset-assert 48)
;    (max-vel float          :offset-assert 52)
;    (damping float          :offset-assert 56)
;    )
;   :method-count-assert 11
;   :size-assert         #x3c
;   :flag-assert         #xb0000003c
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     )
;   )

; (deftype swamp-tetherrock (process-drawable)
;   ((tension     float              :offset-assert 176)
;    (tension-pt  vector     :inline :offset-assert 192)
;    (blimp       basic              :offset-assert 208)
;    (rot-at-init quaternion :inline :offset-assert 224)
;    (hits        int32              :offset-assert 240)
;    )
;   :method-count-assert 20
;   :size-assert         #xf4
;   :flag-assert         #x14009000f4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype precursor-arm (process-drawable)
;   ((y-init    float          :offset-assert 176)
;    (y-offset  float          :offset-assert 180)
;    (rot-speed float          :offset-assert 184)
;    (rot-dist  float          :offset-assert 188)
;    (rot-base  float          :offset-assert 192)
;    (rot-t     float          :offset-assert 196)
;    (init-mat  matrix :inline :offset-assert 208)
;    (tension   float          :offset-assert 272)
;    )
;   :method-count-assert 20
;   :size-assert         #x114
;   :flag-assert         #x1400b00114
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype swamp-rope (process-drawable)
;   ((parent-rp    int32                         :offset-assert 176)
;    (other-entity basic                         :offset-assert 180)
;    (other-rp     int32                         :offset-assert 184)
;    (old-scale    float                         :offset-assert 188)
;    (frame        swamp-rope-oscillator :inline :offset-assert 192)
;    (other-pos    vector                :inline :offset-assert 224)
;    (scale-base   float                         :offset-assert 240)
;    (base-vec     vector                :inline :offset-assert 256)
;    (scale-t      float                         :offset-assert 272)
;    (x-t          float                         :offset-assert 276)
;    (z-t          float                         :offset-assert 280)
;    (rot-speed    float                         :offset-assert 284)
;    )
;   :method-count-assert 21
;   :size-assert         #x120
;   :flag-assert         #x1500b00120
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; (deftype swamp-blimp (process-drawable)
;   ((the-ropes               UNKNOWN                 5       :offset-assert 176)
;    (arm-timer               int32                           :offset-assert 216)
;    (trans-at-init           vector                  :inline :offset-assert 224)
;    (rot-at-init             quaternion              :inline :offset-assert 240)
;    (y-vel                   float                           :offset-assert 256)
;    (y-offset                float                           :offset-assert 260)
;    (y-offset-target         float                           :offset-assert 264)
;    (main-tilt-rand          swamp-blimp-rand-vector :inline :offset-assert 272)
;    (main-tilt-oscillator    swamp-blimp-oscillator  :inline :offset-assert 320)
;    (gondola-tilt-oscillator swamp-blimp-oscillator  :inline :offset-assert 384)
;    (pos-rand                swamp-blimp-rand-vector :inline :offset-assert 448)
;    (pos-oscillator          swamp-blimp-oscillator  :inline :offset-assert 496)
;    (scale-rand              swamp-rope-rand-float   :inline :offset-assert 556)
;    (scale-oscillator        swamp-rope-oscillator   :inline :offset-assert 576)
;    (gondola                 basic                           :offset-assert 600)
;    (bag                     basic                           :offset-assert 604)
;    )
;   :method-count-assert 20
;   :size-assert         #x260
;   :flag-assert         #x1401f00260
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

;; - Functions

(define-extern swamp-rope-init-by-other function)
(define-extern swamp-blimp-setup function)
(define-extern tetherrock-get-info function)
(define-extern swamp-rope-post function)
(define-extern swamp-rope-break-code function)
(define-extern swamp-rope-update-bounding-spheres function)
(define-extern precursor-arm-slip function)
(define-extern swamp-rope-trans function)
(define-extern blimp-trans function)
(define-extern bustarock function)

;; - Unknowns

;;(define-extern *swamp-blimp-sg* object) ;; unknown type
;;(define-extern swamp-blimp-idle object) ;; unknown type
;;(define-extern swamp-blimp-bye-bye object) ;; unknown type
;;(define-extern *SWAMP_BLIMP-bank* object) ;; unknown type
;;(define-extern *swamp-rope-sg* object) ;; unknown type
;;(define-extern swamp-rope-idle-rock object) ;; unknown type
;;(define-extern swamp-rope-idle-arm object) ;; unknown type
;;(define-extern swamp-rope-break object) ;; unknown type
;;(define-extern *precursor-arm-sg* object) ;; unknown type
;;(define-extern precursor-arm-idle object) ;; unknown type
;;(define-extern precursor-arm-die object) ;; unknown type
;;(define-extern precursor-arm-sink object) ;; unknown type
;;(define-extern *swamp-tetherrock-sg* object) ;; unknown type
;;(define-extern swamp-tetherrock-die object) ;; unknown type
;;(define-extern swamp-tetherrock-hide object) ;; unknown type
;;(define-extern swamp-tetherrock-idle object) ;; unknown type
;;(define-extern swamp-tetherrock-break object) ;; unknown type
;;(define-extern *swamp-tetherrock-explode-sg* object) ;; unknown type


;; ----------------------
;; File - sage-bluehut
;; Source Path - levels/village2/sage-bluehut.gc
;; Containing DGOs - ['L1', 'VI2']
;; Version - 3

;; - Types

; (deftype assistant-bluehut (process-taskable)
;   ((sound-id   sound-id  :offset-assert 380)
;    (jaws       uint64  :offset-assert 384)
;    (sage       basic   :offset-assert 392)
;    (im-talking basic   :offset-assert 396)
;    )
;   :method-count-assert 53
;   :size-assert         #x190
;   :flag-assert         #x3501200190
;   ;; inherited inspect of process-taskable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

; (deftype sage-bluehut (process-taskable)
;   ((reminder-played basic  :offset-assert 380)
;    (assistant       basic  :offset-assert 384)
;    )
;   :method-count-assert 53
;   :size-assert         #x184
;   :flag-assert         #x3501200184
;   ;; inherited inspect of process-taskable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

;; - Unknowns

;;(define-extern *sage-bluehut-sg* object) ;; unknown type


;; ----------------------
;; File - flutflut-bluehut
;; Source Path - levels/village2/flutflut-bluehut.gc
;; Containing DGOs - ['L1', 'VI2']
;; Version - 3

;; - Types

; (deftype flutflut-bluehut (process-taskable)
;   ()
;   :method-count-assert 53
;   :size-assert         #x17c
;   :flag-assert         #x350110017c
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

;; - Unknowns

;;(define-extern *flutflut-bluehut-sg* object) ;; unknown type


;; ----------------------
;; File - assistant-village2
;; Source Path - levels/village2/assistant-village2.gc
;; Containing DGOs - ['L1', 'VI2']
;; Version - 3

;; - Types

; (deftype assistant-levitator (process-taskable)
;   ((boulder  basic     :offset-assert 380)
;    (particle UNKNOWN 4 :offset-assert 384)
;    )
;   :method-count-assert 53
;   :size-assert         #x190
;   :flag-assert         #x3501200190
;   ;; inherited inspect of process-taskable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

;; - Functions

(define-extern assistant-levitator-blue-glow function)
(define-extern assistant-levitator-blue-beam function)
(define-extern check-drop-level-assistant-bluehut function)

;; - Unknowns

;;(define-extern *assistant-village2-sg* object) ;; unknown type
;;(define-extern just-particles object) ;; unknown type
;;(define-extern *jaws-sg* object) ;; unknown type


;; ----------------------
;; File - sunken-elevator
;; Source Path - levels/village2/sunken-elevator.gc
;; Containing DGOs - ['L1', 'VI2']
;; Version - 3

;; - Types

; (deftype sunken-elevator (plat-button)
;   ((play-at-top-going-up-camera? basic  :offset-assert 240)
;    (teleport-if-below-y          float  :offset-assert 244)
;    (teleport-if-above-y          float  :offset-assert 248)
;    )
;   :method-count-assert 33
;   :size-assert         #xfc
;   :flag-assert         #x21009000fc
;   ;; inherited inspect of plat-button
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     )
;   )

;; - Unknowns

;;(define-extern *sunken-elevator-sg* object) ;; unknown type


;; ----------------------
;; File - swamp-obs
;; Source Path - levels/swamp/swamp-obs.gc
;; Containing DGOs - ['L1', 'SWA']
;; Version - 3

;; - Types

; (deftype swamp-spike (process-drawable)
;   ((sync      sync-info :inline :offset-assert 176)
;    (open-gate basic             :offset-assert 184)
;    (dangerous basic             :offset-assert 188)
;    )
;   :method-count-assert 21
;   :size-assert         #xc0
;   :flag-assert         #x15005000c0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; (deftype swampgate (swamp-spike)
;   ()
;   :method-count-assert 21
;   :size-assert         #xc0
;   :flag-assert         #x15005000c0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; (deftype balance-plat (process-drawable)
;   ((y-travel float  :offset-assert 176)
;    (y-init   float  :offset-assert 180)
;    (y-offset float  :offset-assert 184)
;    (y-vel    float  :offset-assert 188)
;    (y-accel  float  :offset-assert 192)
;    (got-grow basic  :offset-assert 196)
;    )
;   :method-count-assert 20
;   :size-assert         #xc8
;   :flag-assert         #x14006000c8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype swamp-rock (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype tar-plat (rigid-body-platform)
;   ((anchor-point vector :inline :offset-assert 736)
;    (float-height float          :offset-assert 752)
;    )
;   :method-count-assert 35
;   :size-assert         #x2f4
;   :flag-assert         #x23029002f4
;   ;; inherited inspect of rigid-body-platform
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     )
;   )

; (deftype swamp-barrel (barrel)
;   ()
;   :method-count-assert 30
;   :size-assert         #x100
;   :flag-assert         #x1e00900100
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

; (deftype swampcam (process-hidden)
;   ((name             basic                 :offset-assert 4)
;    (mask             uint32                :offset-assert 8)
;    (parent           uint32                :offset-assert 12)
;    (brother          uint32                :offset-assert 16)
;    (child            uint32                :offset-assert 20)
;    (ppointer         uint32                :offset-assert 24)
;    (self             basic                 :offset-assert 28)
;    (pool             basic                 :offset-assert 32)
;    (status           basic                 :offset-assert 36)
;    (pid              int32                 :offset-assert 40)
;    (main-thread      basic                 :offset-assert 44)
;    (top-thread       basic                 :offset-assert 48)
;    (entity           basic                 :offset-assert 52)
;    (state            basic                 :offset-assert 56)
;    (trans-hook       basic                 :offset-assert 60)
;    (post-hook        basic                 :offset-assert 64)
;    (event-hook       basic                 :offset-assert 68)
;    (allocated-length int32                 :offset-assert 72)
;    (next-state       basic                 :offset-assert 76)
;    (heap-base        uint32                :offset-assert 80)
;    (heap-top         uint32                :offset-assert 84)
;    (heap-cur         uint32                :offset-assert 88)
;    (stack-frame-top  basic                 :offset-assert 92)
;    (heap             kheap        :inline  :offset-assert 80)
;    (connection-list  'connectable :inline  :offset-assert 96)
;    (stack            UNKNOWN      :dynamic :offset-assert 112)
;    )
;   :method-count-assert 15
;   :size-assert         #x70
;   :flag-assert         #xf00000070
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     )
;   )

; (deftype swamp-battlecontroller (battlecontroller)
;   ()
;   :method-count-assert 29
;   :size-assert         #x27c
;   :flag-assert         #x1d0210027c
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     )
;   )

;; - Functions

(define-extern swamp-spike-set-particle-rotation-callback function)
(define-extern swamp-spike-default-event-handler function)
(define-extern swamp-spike-post function)
(define-extern swamp-rock-init-by-other function)

;; - Unknowns

;;(define-extern *swampcam-sg* object) ;; unknown type
;;(define-extern *tar-plat-sg* object) ;; unknown type
;;(define-extern *tar-plat-constants* object) ;; unknown type
;;(define-extern *swamp-rock-sg* object) ;; unknown type
;;(define-extern swamp-rock-idle object) ;; unknown type
;;(define-extern swamp-rock-break object) ;; unknown type
;;(define-extern *balance-plat-sg* object) ;; unknown type
;;(define-extern balance-plat-idle object) ;; unknown type
;;(define-extern swamp-spike-gate-down object) ;; unknown type
;;(define-extern swamp-spike-gate-up object) ;; unknown type
;;(define-extern swamp-spike-idle object) ;; unknown type
;;(define-extern *swamp-spike-sg* object) ;; unknown type


;; ----------------------
;; File - swamp-bat
;; Source Path - levels/swamp/swamp-bat.gc
;; Containing DGOs - ['L1', 'SWA']
;; Version - 3

;; - Types

; (deftype swamp-bat-idle-path (structure)
;   ((origin vector :inline :offset-assert 0)
;    (x-axis vector :inline :offset-assert 16)
;    (y-axis vector :inline :offset-assert 32)
;    )
;   :method-count-assert 10
;   :size-assert         #x30
;   :flag-assert         #xa00000030
;   (:methods
;     (dummy-9 () none 9)
;     )
;   )

; (deftype swamp-bat (process-drawable)
;   ((path-origin         vector  :inline :offset-assert 176)
;    (idle-position-angle UNKNOWN 8       :offset-assert 192)
;    (path-select-plane   UNKNOWN 2       :offset-assert 224)
;    (path-list           UNKNOWN 2       :offset-assert 256)
;    (path-select         int8            :offset-assert 264)
;    (slave-count         int8            :offset-assert 265)
;    (path-count          int8            :offset-assert 266)
;    )
;   :method-count-assert 20
;   :size-assert         #x10b
;   :flag-assert         #x1400a0010b
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype swamp-bat-slave (process-drawable)
;   ((sync                sync-info           :inline :offset-assert 176)
;    (idle-anim-speed     float                       :offset-assert 184)
;    (strafe-envelope     float                       :offset-assert 188)
;    (strafe-distance     float                       :offset-assert 192)
;    (path-point-count    float                       :offset-assert 196)
;    (idle-path           swamp-bat-idle-path :inline :offset-assert 208)
;    (idle-position       vector              :inline :offset-assert 256)
;    (idle-position-index int8                        :offset-assert 272)
;    (path-select         int8                        :offset-assert 273)
;    (launch-ready        basic                       :offset-assert 276)
;    )
;   :method-count-assert 21
;   :size-assert         #x118
;   :flag-assert         #x1500b00118
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

;; - Functions

(define-extern swamp-bat-make-path-select-plane function)
(define-extern swamp-bat-setup-new-path function)
(define-extern swamp-bat-update-path function)
(define-extern swamp-bat-slave-init-by-other function)
(define-extern swamp-bat-launch-slave function)
(define-extern swamp-bat-check-slave-paths-match? function)
(define-extern swamp-bat-slave-get-new-path function)
(define-extern swamp-bat-slave-post function)
(define-extern swamp-bat-slave-event-handler function)
(define-extern swamp-bat-slave-path-post function)
(define-extern swamp-bat-debug function)

;; - Unknowns

;;(define-extern swamp-bat-idle object) ;; unknown type
;;(define-extern swamp-bat-launch-slaves object) ;; unknown type
;;(define-extern *swamp-bat-slave-sg* object) ;; unknown type
;;(define-extern swamp-bat-slave-idle object) ;; unknown type
;;(define-extern swamp-bat-slave-return object) ;; unknown type
;;(define-extern swamp-bat-slave-strafe object) ;; unknown type
;;(define-extern swamp-bat-slave-swoop object) ;; unknown type
;;(define-extern swamp-bat-slave-die object) ;; unknown type
;;(define-extern swamp-bat-slave-launch object) ;; unknown type


;; ----------------------
;; File - swamp-rat
;; Source Path - levels/swamp/swamp-rat.gc
;; Containing DGOs - ['L1', 'SWA']
;; Version - 3

;; - Types

; (deftype swamp-rat (nav-enemy)
;   ((up-vector          vector :inline :offset-assert 400)
;    (state-float        float          :offset-assert 416)
;    (state-vector       vector :inline :offset-assert 432)
;    (free-time          uint64         :offset-assert 360)
;    (wiggle-time        uint64         :offset-assert 456)
;    (wiggle-angle       float          :offset-assert 464)
;    (delta-wiggle-angle float          :offset-assert 468)
;    (wiggle-factor      float          :offset-assert 472)
;    (min-height         float          :offset-assert 476)
;    (chase-rest-time    uint64         :offset-assert 480)
;    (target-nav-time    uint64         :offset-assert 488)
;    )
;   :method-count-assert 76
;   :size-assert         #x1f0
;   :flag-assert         #x4c018001f0
;   ;; inherited inspect of nav-enemy
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

;; - Functions

(define-extern swamp-rat-update-wiggle-target function)
(define-extern swamp-rat-update-wiggle-params function)
(define-extern swamp-rat-default-event-handler function)
(define-extern swamp-rat-init-by-other function)

;; - Unknowns

;;(define-extern swamp-rat-spawn object) ;; unknown type
;;(define-extern *swamp-rat-sg* object) ;; unknown type
;;(define-extern *swamp-rat-nav-enemy-info* object) ;; unknown type
;;(define-extern pointer object) ;; unknown type


;; ----------------------
;; File - swamp-rat-nest
;; Source Path - levels/swamp/swamp-rat-nest.gc
;; Containing DGOs - ['L1', 'SWA']
;; Version - 3

;; - Types

; (deftype swamp-rat-nest (process-drawable)
;   ((dummy               uint32  :offset-assert 176)
;    (damaged             basic   :offset-assert 180)
;    (dummy-type          int8    :offset-assert 184)
;    (rat-count           int8    :offset-assert 185)
;    (hit-points          int8    :offset-assert 186)
;    (defensive-rat-count int8    :offset-assert 187)
;    (spawn-period        float   :offset-assert 188)
;    (spawn-period-scale  float   :offset-assert 192)
;    (test-interval       uint64  :offset-assert 200)
;    (player-attack-id    int32   :offset-assert 208)
;    )
;   :method-count-assert 20
;   :size-assert         #xd4
;   :flag-assert         #x14007000d4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype swamp-rat-nest-dummy (process-drawable)
;   ((top-sphere           sphere  :inline :offset-assert 176)
;    (death-part           basic           :offset-assert 192)
;    (spawn-joint-array    UNKNOWN 6       :offset-assert 196)
;    (spawn-joint-count    int8            :offset-assert 202)
;    (particle-spawn-joint int8            :offset-assert 203)
;    )
;   :method-count-assert 22
;   :size-assert         #xcc
;   :flag-assert         #x16006000cc
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; (deftype swamp-rat-nest-dummy-a (swamp-rat-nest-dummy)
;   ()
;   :method-count-assert 22
;   :size-assert         #xcc
;   :flag-assert         #x16006000cc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; (deftype swamp-rat-nest-dummy-b (swamp-rat-nest-dummy)
;   ()
;   :method-count-assert 22
;   :size-assert         #xcc
;   :flag-assert         #x16006000cc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; (deftype swamp-rat-nest-dummy-c (swamp-rat-nest-dummy)
;   ()
;   :method-count-assert 22
;   :size-assert         #xcc
;   :flag-assert         #x16006000cc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

;; - Functions

(define-extern swamp-rat-nest-check-dummy function)
(define-extern swamp-rat-nest-spawn-rat function)
(define-extern swamp-rat-nest-dummy-init-by-other function)
(define-extern swamp-rat-nest-pick-spawn-joint function)
(define-extern swamp-rat-nest-dummy-take-damage function)
(define-extern swamp-rat-nest-dummy-draw-spawn-joints function)
(define-extern swamp-rat-nest-dummy-event-handler function)
(define-extern swamp-rat-nest-default-event-handler function)

;; - Unknowns

;;(define-extern *swamp-rat-nest-dummy-c-sg* object) ;; unknown type
;;(define-extern *swamp-rat-nest-dummy-b-sg* object) ;; unknown type
;;(define-extern *swamp-rat-nest-dummy-a-sg* object) ;; unknown type
;;(define-extern swamp-rat-nest-idle object) ;; unknown type
;;(define-extern swamp-rat-nest-active object) ;; unknown type
;;(define-extern swamp-rat-nest-gestate object) ;; unknown type
;;(define-extern swamp-rat-nest-die object) ;; unknown type
;;(define-extern swamp-rat-nest-victory object) ;; unknown type
;;(define-extern swamp-rat-nest-dummy-idle object) ;; unknown type
;;(define-extern swamp-rat-nest-dummy-hit object) ;; unknown type
;;(define-extern swamp-rat-nest-dummy-die object) ;; unknown type
;;(define-extern swamp-rat-nest-dummy-shake object) ;; unknown type


;; ----------------------
;; File - kermit
;; Source Path - levels/swamp/kermit.gc
;; Containing DGOs - ['L1', 'SWA']
;; Version - 3

;; - Types

; (deftype joint-mod-tracker (basic)
;   ((target-pos               vector :inline :offset-assert 16)
;    (target-pos-func          basic          :offset-assert 32)
;    (inv-forward-scale-factor float          :offset-assert 36)
;    (forward-scale-control    float          :offset-assert 40)
;    (forward-scale-max        float          :offset-assert 44)
;    (process                  basic          :offset-assert 48)
;    (enable                   basic          :offset-assert 52)
;    (up-axis                  int8           :offset-assert 56)
;    (forward-axis             int8           :offset-assert 57)
;    )
;   :method-count-assert 9
;   :size-assert         #x3a
;   :flag-assert         #x90000003a
;   )

; (deftype kermit-pulse (process-drawable)
;   ((sound-id sound-id  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb4
;   :flag-assert         #x14005000b4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype kermit (nav-enemy)
;   ((rotate-dir       vector :inline :offset-assert 400)
;    (charging-part    basic          :offset-assert 416)
;    (airborne         basic          :offset-assert 420)
;    (tongue-control   basic          :offset-assert 424)
;    (tongue-pulse-pos float          :offset-assert 428)
;    (miss-count       int8           :offset-assert 432)
;    (charged-up       basic          :offset-assert 436)
;    (sound-id         sound-id       :offset-assert 440)
;    )
;   :method-count-assert 76
;   :size-assert         #x1bc
;   :flag-assert         #x4c015001bc
;   ;; inherited inspect of nav-enemy
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

;; - Functions

(define-extern kermit-get-tongue-target-callback function)
(define-extern kermit-disable-tongue function)
(define-extern kermit-hop function)
(define-extern kermit-set-nav-mesh-target function)
(define-extern kermit-set-rotate-dir-to-player function)
(define-extern kermit-simple-post function)
(define-extern kermit-player-target-pos function)
(define-extern kermit-tongue-pos function)
(define-extern kermit-check-tongue-is-clear? function)
(define-extern kermit-enable-tongue function)
(define-extern spawn-kermit-pulse function)
(define-extern kermit-check-to-hit-player? function)
(define-extern kermit-get-head-dir-xz function)
(define-extern kermit-set-rotate-dir-to-nav-target function)
(define-extern kermit-get-new-patrol-point function)
(define-extern kermit-long-hop function)
(define-extern kermit-short-hop function)
(define-extern kermit-pulse-init-by-other function)
(define-extern joint-mod-tracker-callback function)
(define-extern build-matrix-from-up-and-forward-axes! function)
(define-extern kermit-get-head-dir function)
(define-extern kermit-post function)

;; - Unknowns

;;(define-extern *kermit-sg* object) ;; unknown type
;;(define-extern *kermit-nav-enemy-info* object) ;; unknown type
;;(define-extern kermit-idle object) ;; unknown type
;;(define-extern kermit-chase object) ;; unknown type
;;(define-extern kermit-retract-tongue object) ;; unknown type
;;(define-extern kermit-tongue-stuck object) ;; unknown type
;;(define-extern kermit-patrol object) ;; unknown type
;;(define-extern kermit-attack object) ;; unknown type
;;(define-extern kermit-chase-new-position object) ;; unknown type
;;(define-extern kermit-give-up object) ;; unknown type
;;(define-extern kermit-notice object) ;; unknown type
;;(define-extern kermit-pulse-idle object) ;; unknown type
;;(define-extern kermit-pulse-impact object) ;; unknown type


;; ----------------------
;; File - swamp-part
;; Source Path - levels/swamp/swamp-part.gc
;; Containing DGOs - ['L1', 'SWA']
;; Version - 3

;; - Types

; (deftype swamp-part (part-spawner)
;   ()
;   :method-count-assert 21
;   :size-assert         #xd0
;   :flag-assert         #x15006000d0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )


;; ----------------------
;; File - billy
;; Source Path - levels/swamp/billy.gc
;; Containing DGOs - ['L1', 'SWA']
;; Version - 3

;; - Types

; (deftype billy (process-taskable)
;   ((farthy            uint64    :offset-assert 384)
;    (path-data         UNKNOWN 3 :offset-assert 392)
;    (path-snacks       basic     :offset-assert 392)
;    (path-starts       basic     :offset-assert 396)
;    (path-waypts       basic     :offset-assert 400)
;    (passed-last-stage basic     :offset-assert 404)
;    (spawn-rats        basic     :offset-assert 408)
;    (current-wave      int32     :offset-assert 412)
;    (wave-start-time   uint64    :offset-assert 416)
;    (num-snacks        int32     :offset-assert 424)
;    (num-rats          int32     :offset-assert 428)
;    (max-rats          int32     :offset-assert 432)
;    (rat-speed         float     :offset-assert 436)
;    (offending-rat     uint64    :offset-assert 440)
;    )
;   :method-count-assert 53
;   :size-assert         #x1c0
;   :flag-assert         #x35015001c0
;   ;; inherited inspect of process-taskable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

; (deftype billy-snack (process-drawable)
;   ((num-rats int32  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb4
;   :flag-assert         #x14005000b4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype billy-rat (swamp-rat)
;   ((dest-type   uint64         :offset-assert 496)
;    (snack       uint64         :offset-assert 504)
;    (destination vector :inline :offset-assert 512)
;    (billy       uint32         :offset-assert 528)
;    )
;   :method-count-assert 76
;   :size-assert         #x214
;   :flag-assert         #x4c01b00214
;   ;; inherited inspect of swamp-rat
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

;; - Functions

(define-extern billy-kill-all-but-farthy function)
(define-extern billy-game-update function)
(define-extern billy-snack-init-by-other function)
(define-extern rat-about-to-eat? function)
(define-extern billy-game-update-wave function)
(define-extern billy-rat-init-by-other function)

;; - Unknowns

;;(define-extern *billy-sg* object) ;; unknown type
;;(define-extern *billy-sidekick-sg* object) ;; unknown type
;;(define-extern billy-playing object) ;; unknown type
;;(define-extern billy-done object) ;; unknown type
;;(define-extern *farthy-snack-sg* object) ;; unknown type
;;(define-extern billy-rat-salivate object) ;; unknown type
;;(define-extern billy-rat-eat object) ;; unknown type
;;(define-extern billy-snack-idle object) ;; unknown type
;;(define-extern billy-snack-eat object) ;; unknown type


;; ----------------------
;; File - cavecrystal-light
;; Source Path - levels/maincave/cavecrystal-light.gc
;; Containing DGOs - ['L1', 'MAI', 'MAINCAVE']
;; Version - 3

;; - Types

; (deftype cavecrystal-light (structure)
;   ((next           cavecrystal-light         :offset-assert 0)
;    (crystal-id     int32                     :offset-assert 4)
;    (intensity      float                     :offset-assert 8)
;    (fade-start     float                     :offset-assert 12)
;    (fade-end       float                     :offset-assert 16)
;    (crystal-handle uint64                    :offset-assert 24)
;    (trans          vector            :inline :offset-assert 32)
;    )
;   :method-count-assert 9
;   :size-assert         #x30
;   :flag-assert         #x900000030
;   )

; (deftype cavecrystal-light-control (basic)
;   ((active-count          int32               :offset-assert 4)
;    (head                  cavecrystal-light   :offset-assert 8)
;    (last-known-valid-time uint64              :offset-assert 16)
;    (crystal               UNKNOWN           7 :offset-assert 32)
;    )
;   :method-count-assert 15
;   :size-assert         #x170
;   :flag-assert         #xf00000170
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     )
;   )

;; - Functions

(define-extern cavecrystal-light-control-default-callback function)

;; - Unknowns

;;(define-extern *cavecrystal-engine* object) ;; unknown type


;; ----------------------
;; File - maincave-obs
;; Source Path - levels/maincave/maincave-obs.gc
;; Containing DGOs - ['L1', 'MAI', 'MAINCAVE']
;; Version - 3

;; - Types

; (deftype maincavecam (pov-camera)
;   ((seq uint64  :offset-assert 224)
;    )
;   :method-count-assert 30
;   :size-assert         #xe8
;   :flag-assert         #x1e008000e8
;   ;; inherited inspect of pov-camera
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

; (deftype cave-water (water-anim)
;   ()
;   :method-count-assert 30
;   :size-assert         #xdc
;   :flag-assert         #x1e007000dc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

; (deftype cavecrusher (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype cavetrapdoor (process-drawable)
;   ((delay-before-wiggle int32  :offset-assert 176)
;    )
;   :method-count-assert 22
;   :size-assert         #xb4
;   :flag-assert         #x16005000b4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; (deftype caveflamepots (process-drawable)
;   ((shove-up           float     :offset-assert 176)
;    (cycle-speed        int32     :offset-assert 180)
;    (cycle-pause        int32     :offset-assert 184)
;    (cycle-offset       uint32    :offset-assert 188)
;    (was-deadly?        basic     :offset-assert 192)
;    (should-play-sound? basic     :offset-assert 196)
;    (launch-pos         UNKNOWN 2 :offset-assert 208)
;    )
;   :method-count-assert 20
;   :size-assert         #xf0
;   :flag-assert         #x14008000f0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype cavespatula (process-drawable)
;   ((sync sync-info :inline :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb8
;   :flag-assert         #x14005000b8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype cavespatulatwo (process-drawable)
;   ((sync sync-info :inline :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb8
;   :flag-assert         #x14005000b8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype caveelevator (process-drawable)
;   ((elev-mode               uint64                :offset-assert 176)
;    (elev-type               int32                 :offset-assert 184)
;    (prev-frame-num          float                 :offset-assert 188)
;    (last-update-bounce-time uint64                :offset-assert 192)
;    (orig-trans              vector        :inline :offset-assert 208)
;    (sync                    sync-info     :inline :offset-assert 224)
;    (smush                   smush-control :inline :offset-assert 232)
;    (anim                    UNKNOWN       2       :offset-assert 264)
;    (wheel-ry-mat            matrix        :inline :offset-assert 272)
;    )
;   :method-count-assert 22
;   :size-assert         #x150
;   :flag-assert         #x1600e00150
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

;; - Functions

(define-extern caveelevator-joint-callback function)
(define-extern cavecrystal-light-control-caveelevator-callback function)

;; - Unknowns

;;(define-extern *caveelevator-sg* object) ;; unknown type
;;(define-extern caveelevator-cycle-active object) ;; unknown type
;;(define-extern caveelevator-one-way-idle-start object) ;; unknown type
;;(define-extern caveelevator-one-way-travel-to-start object) ;; unknown type
;;(define-extern caveelevator-one-way-idle-end object) ;; unknown type
;;(define-extern caveelevator-one-way-travel-to-end object) ;; unknown type
;;(define-extern *cavespatulatwo-sg* object) ;; unknown type
;;(define-extern cavespatulatwo-idle object) ;; unknown type
;;(define-extern *cavespatula-darkcave-sg* object) ;; unknown type
;;(define-extern *cavespatula-sg* object) ;; unknown type
;;(define-extern cavespatula-idle object) ;; unknown type
;;(define-extern caveflamepots-active object) ;; unknown type
;;(define-extern *cavetrapdoor-sg* object) ;; unknown type
;;(define-extern *cavecrusher-sg* object) ;; unknown type
;;(define-extern cavecrusher-idle object) ;; unknown type
;;(define-extern ripple-for-cave-water object) ;; unknown type
;;(define-extern *maincavecam-sg* object) ;; unknown type


;; ----------------------
;; File - maincave-part
;; Source Path - levels/maincave/maincave-part.gc
;; Containing DGOs - ['L1', 'MAI', 'MAINCAVE']
;; Version - 3

;; - Types

; (deftype maincave-part (part-spawner)
;   ()
;   :method-count-assert 21
;   :size-assert         #xd0
;   :flag-assert         #x15006000d0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; (deftype darkcave-part (part-spawner)
;   ()
;   :method-count-assert 21
;   :size-assert         #xd0
;   :flag-assert         #x15006000d0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

;; - Functions

(define-extern check-drop-level-maincave-drip function)


;; ----------------------
;; File - spiderwebs
;; Source Path - levels/maincave/spiderwebs.gc
;; Containing DGOs - ['L1', 'MAI', 'MAINCAVE']
;; Version - 3

;; - Types

; (deftype spiderwebs (process-drawable)
;   ((spring-height meters  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb4
;   :flag-assert         #x14005000b4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

;; - Functions

(define-extern spiderwebs-default-event-handler function)

;; - Unknowns

;;(define-extern *spiderwebs-sg* object) ;; unknown type
;;(define-extern spiderwebs-idle object) ;; unknown type
;;(define-extern *spider-jump-mods* object) ;; unknown type
;;(define-extern spiderwebs-bounce object) ;; unknown type


;; ----------------------
;; File - dark-crystal
;; Source Path - levels/maincave/dark-crystal.gc
;; Containing DGOs - ['L1', 'MAI', 'MAINCAVE']
;; Version - 3

;; - Types

; (deftype dark-crystal (process-drawable)
;   ((crystal-num           int32          :offset-assert 176)
;    (underwater?           basic          :offset-assert 180)
;    (explode-danger-radius float          :offset-assert 184)
;    (lit-color-mult        vector :inline :offset-assert 192)
;    (lit-color-emissive    vector :inline :offset-assert 208)
;    (unlit-color-mult      vector :inline :offset-assert 224)
;    (unlit-color-emissive  vector :inline :offset-assert 240)
;    )
;   :method-count-assert 22
;   :size-assert         #x100
;   :flag-assert         #x1600900100
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

;; - Unknowns

;;(define-extern *dark-crystal-sg* object) ;; unknown type
;;(define-extern dark-crystal-spawn-fuel-cell object) ;; unknown type
;;(define-extern dark-crystal-idle object) ;; unknown type
;;(define-extern *dark-crystal-explode-sg* object) ;; unknown type
;;(define-extern *dark-crystal-exploder-params* object) ;; unknown type
;;(define-extern *dark-crystal-flash-delays* object) ;; unknown type
;;(define-extern dark-crystal-explode object) ;; unknown type
;;(define-extern dark-crystal-activate object) ;; unknown type


;; ----------------------
;; File - baby-spider
;; Source Path - levels/maincave/baby-spider.gc
;; Containing DGOs - ['L1', 'MAI', 'MAINCAVE']
;; Version - 3

;; - Types

; (deftype baby-spider-spawn-params (structure)
;   ((hatched?                          basic   :offset-assert 0)
;    (fast-start?                       basic   :offset-assert 4)
;    (hack-move-above-ground?           basic   :offset-assert 8)
;    (die-if-not-visible?               basic   :offset-assert 12)
;    (pickup                            int32   :offset-assert 16)
;    (pickup-amount                     int32   :offset-assert 20)
;    (event-death                       basic   :offset-assert 24)
;    (delay-before-dying-if-not-visible uint64  :offset-assert 32)
;    )
;   :method-count-assert 11
;   :size-assert         #x28
;   :flag-assert         #xb00000028
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     )
;   )

; (deftype baby-spider (nav-enemy)
;   ((die-if-not-visible?               basic          :offset-assert 400)
;    (hack-move-above-ground?           basic          :offset-assert 404)
;    (state-float                       float          :offset-assert 408)
;    (wiggle-angle                      float          :offset-assert 412)
;    (delta-wiggle-angle                float          :offset-assert 416)
;    (wiggle-factor                     float          :offset-assert 420)
;    (event-death                       basic          :offset-assert 424)
;    (delay-before-dying-if-not-visible uint64         :offset-assert 432)
;    (chase-rest-time                   uint64         :offset-assert 440)
;    (target-nav-time                   uint64         :offset-assert 448)
;    (free-time                         uint64         :offset-assert 360)
;    (wiggle-time                       uint64         :offset-assert 464)
;    (last-visible-time                 uint64         :offset-assert 472)
;    (up-vector                         vector :inline :offset-assert 480)
;    (state-vector                      vector :inline :offset-assert 496)
;    )
;   :method-count-assert 76
;   :size-assert         #x200
;   :flag-assert         #x4c01900200
;   ;; inherited inspect of nav-enemy
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

;; - Functions

(define-extern baby-spider-default-event-handler function)
(define-extern baby-spider-init-by-other function)

;; - Unknowns

;;(define-extern baby-spider-hatching object) ;; unknown type
;;(define-extern baby-spider-resume object) ;; unknown type
;;(define-extern *baby-spider-sg* object) ;; unknown type
;;(define-extern *baby-spider-nav-enemy-info-for-cave-trap* object) ;; unknown type
;;(define-extern *baby-spider-nav-enemy-info* object) ;; unknown type
;;(define-extern baby-spider-die-fast object) ;; unknown type


;; ----------------------
;; File - mother-spider-h
;; Source Path - levels/maincave/mother-spider-h.gc
;; Containing DGOs - ['L1', 'MAI', 'MAINCAVE']
;; Version - 3

;; - Types

; (deftype mother-spider-leg (process-drawable)
;   ((gravity     float          :offset-assert 176)
;    (transv      vector :inline :offset-assert 192)
;    (facing-rot  vector :inline :offset-assert 208)
;    (facing-rotv vector :inline :offset-assert 224)
;    )
;   :method-count-assert 20
;   :size-assert         #xf0
;   :flag-assert         #x14008000f0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype mother-spider-thread (structure)
;   ((joint-index int32  :offset-assert 0)
;    (trans-u     float  :offset-assert 4)
;    (swing-arc-u float  :offset-assert 8)
;    )
;   :method-count-assert 9
;   :size-assert         #xc
;   :flag-assert         #x90000000c
;   )

; (deftype mother-spider-leg-info (structure)
;   ((joint-index0 int32  :offset-assert 0)
;    (joint-index1 int32  :offset-assert 4)
;    (cprim-index  int32  :offset-assert 8)
;    )
;   :method-count-assert 9
;   :size-assert         #xc
;   :flag-assert         #x90000000c
;   )

; (deftype mother-spider-history (structure)
;   ((trans vector :inline :offset-assert 0)
;    )
;   :method-count-assert 9
;   :size-assert         #x10
;   :flag-assert         #x900000010
;   )

; (deftype mother-spider-history-array (inline-array-class)
;   ((length           int32            :offset-assert 4)
;    (allocated-length int32            :offset-assert 8)
;    (data             UNKNOWN :dynamic :offset-assert 16)
;    )
;   :method-count-assert 9
;   :size-assert         #x10
;   :flag-assert         #x900000010
;   )

; (deftype mother-spider (process-drawable)
;   ((mode                           uint64          :offset-assert 176)
;    (damage                         int32           :offset-assert 184)
;    (baby-count                     int32           :offset-assert 188)
;    (max-baby-count                 int32           :offset-assert 192)
;    (birthing-counter               int32           :offset-assert 196)
;    (spit-counter                   int32           :offset-assert 200)
;    (leg-socket-part-mask           int32           :offset-assert 204)
;    (dist-from-anchor               float           :offset-assert 208)
;    (targ-dist-from-anchor          float           :offset-assert 212)
;    (idle-dist-from-anchor          float           :offset-assert 216)
;    (player-sticky-dist-from-anchor float           :offset-assert 220)
;    (max-dist-from-anchor           float           :offset-assert 224)
;    (activate-xz-dist               float           :offset-assert 228)
;    (deactivate-xz-dist             float           :offset-assert 232)
;    (max-spit-xz-dist               float           :offset-assert 236)
;    (max-swing-radius               float           :offset-assert 240)
;    (spin-vel                       float           :offset-assert 244)
;    (thread-speed                   float           :offset-assert 248)
;    (thread-vel                     float           :offset-assert 252)
;    (history                        basic           :offset-assert 256)
;    (history-len                    int32           :offset-assert 260)
;    (history-next-index             int32           :offset-assert 264)
;    (hit?                           basic           :offset-assert 268)
;    (going-up?                      basic           :offset-assert 272)
;    (check-z-thresh?                basic           :offset-assert 276)
;    (activate-z-thresh              float           :offset-assert 280)
;    (deactivate-z-thresh            float           :offset-assert 284)
;    (spawned-time                   uint64          :offset-assert 288)
;    (last-update-time               uint64          :offset-assert 296)
;    (spin-time                      uint64          :offset-assert 304)
;    (last-spit-time                 uint64          :offset-assert 312)
;    (last-player-in-air-time        uint64          :offset-assert 320)
;    (started-birthing-time          uint64          :offset-assert 328)
;    (neck                           basic           :offset-assert 336)
;    (player-attack-id               uint64          :offset-assert 344)
;    (leg-socket-part-time           UNKNOWN 6       :offset-assert 352)
;    (orient-rot                     vector  :inline :offset-assert 400)
;    (anchor-trans                   vector  :inline :offset-assert 416)
;    (thread-min-trans               vector  :inline :offset-assert 432)
;    (swing-pos                      vector  :inline :offset-assert 448)
;    (swing-base-pos                 vector  :inline :offset-assert 464)
;    (swing-vel                      vector  :inline :offset-assert 480)
;    )
;   :method-count-assert 32
;   :size-assert         #x1f0
;   :flag-assert         #x20018001f0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     )
;   )


;; ----------------------
;; File - mother-spider-egg
;; Source Path - levels/maincave/mother-spider-egg.gc
;; Containing DGOs - ['L1', 'MAI', 'MAINCAVE']
;; Version - 3

;; - Types

; (deftype mother-spider-egg (process-drawable)
;   ((anim-speed         float              :offset-assert 176)
;    (part2              basic              :offset-assert 180)
;    (falling-start-time uint64             :offset-assert 184)
;    (fall-dest          vector     :inline :offset-assert 192)
;    (fall-dest-normal   vector     :inline :offset-assert 208)
;    (broken-look        lod-set    :inline :offset-assert 224)
;    (traj               trajectory :inline :offset-assert 272)
;    (shadow-pos         vector     :inline :offset-assert 320)
;    )
;   :method-count-assert 22
;   :size-assert         #x150
;   :flag-assert         #x1600e00150
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

;; - Functions

(define-extern mother-spider-egg-init-by-other function)

;; - Unknowns

;;(define-extern *mother-spider-egg-unbroken-sg* object) ;; unknown type
;;(define-extern *mother-spider-egg-broken-sg* object) ;; unknown type
;;(define-extern mother-spider-egg-falling object) ;; unknown type
;;(define-extern mother-spider-egg-die-exit object) ;; unknown type
;;(define-extern mother-spider-egg-hatch object) ;; unknown type
;;(define-extern mother-spider-egg-die object) ;; unknown type
;;(define-extern mother-spider-egg-on-ground object) ;; unknown type
;;(define-extern mother-spider-egg-die-while-falling object) ;; unknown type


;; ----------------------
;; File - mother-spider-proj
;; Source Path - levels/maincave/mother-spider-proj.gc
;; Containing DGOs - ['L1', 'MAI', 'MAINCAVE']
;; Version - 3

;; - Types

; (deftype mother-spider-proj (projectile)
;   ((facing-dir vector :inline :offset-assert 416)
;    )
;   :method-count-assert 29
;   :size-assert         #x1b0
;   :flag-assert         #x1d014001b0
;   ;; inherited inspect of projectile
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     )
;   )

;; - Functions

(define-extern mother-spider-proj-update-velocity function)


;; ----------------------
;; File - mother-spider
;; Source Path - levels/maincave/mother-spider.gc
;; Containing DGOs - ['L1', 'MAI', 'MAINCAVE']
;; Version - 3

;; - Functions

(define-extern mother-spider-leg-init-by-other function)
(define-extern mother-spider-full-joint-callback function)
(define-extern mother-spider-default-event-handler function)
(define-extern mother-spider-death-event-handler function)

;; - Unknowns

;;(define-extern *mother-spider-sg* object) ;; unknown type
;;(define-extern mother-spider-die-wait-for-children object) ;; unknown type
;;(define-extern mother-spider-idle object) ;; unknown type
;;(define-extern *mother-spider-threads* object) ;; unknown type
;;(define-extern *mother-spider-leg-infos* object) ;; unknown type
;;(define-extern mother-spider-hit-while-birthing object) ;; unknown type
;;(define-extern mother-spider-birthing object) ;; unknown type
;;(define-extern mother-spider-traveling object) ;; unknown type
;;(define-extern mother-spider-birth-baby object) ;; unknown type
;;(define-extern mother-spider-tracking object) ;; unknown type
;;(define-extern mother-spider-hit-while-tracking object) ;; unknown type
;;(define-extern mother-spider-spit object) ;; unknown type
;;(define-extern mother-spider-stop-traveling object) ;; unknown type
;;(define-extern mother-spider-die-from-uppercut object) ;; unknown type
;;(define-extern mother-spider-die object) ;; unknown type
;;(define-extern *mother-spider-leg-sg* object) ;; unknown type
;;(define-extern mother-spider-leg-flying object) ;; unknown type
;;(define-extern wait-for-children object) ;; unknown type


;; ----------------------
;; File - gnawer
;; Source Path - levels/maincave/gnawer.gc
;; Containing DGOs - ['L1', 'MAI', 'MAINCAVE']
;; Version - 3

;; - Types

; (deftype gnawer-falling-segment (process-drawable)
;   ((transv      vector :inline :offset-assert 176)
;    (facing-rot  vector :inline :offset-assert 192)
;    (facing-rotv vector :inline :offset-assert 208)
;    )
;   :method-count-assert 21
;   :size-assert         #xe0
;   :flag-assert         #x15007000e0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; (deftype gnawer-segment-info (structure)
;   ((num-joints  int32     :offset-assert 0)
;    (joint-index UNKNOWN 8 :offset-assert 4)
;    )
;   :method-count-assert 9
;   :size-assert         #xc
;   :flag-assert         #x90000000c
;   )

; (deftype gnawer-segment (structure)
;   ((place                      int32          :offset-assert 0)
;    (world-pos                  vector :inline :offset-assert 16)
;    (anim-to-local-trans-offset vector :inline :offset-assert 32)
;    (orient-mat                 matrix :inline :offset-assert 48)
;    )
;   :method-count-assert 9
;   :size-assert         #x70
;   :flag-assert         #x900000070
;   )

; (deftype gnawer-route (structure)
;   ((src-pt-index      int32          :offset-assert 0)
;    (dest-pt-index     int32          :offset-assert 4)
;    (total-travel-time uint64         :offset-assert 8)
;    (src-ang           float          :offset-assert 16)
;    (dest-ang          float          :offset-assert 20)
;    (delta-ang         float          :offset-assert 24)
;    (surface-dist      float          :offset-assert 28)
;    (total-dist        float          :offset-assert 32)
;    (src-pt-offset     vector :inline :offset-assert 48)
;    (dest-pt-offset    vector :inline :offset-assert 64)
;    (surface-dir       vector :inline :offset-assert 80)
;    )
;   :method-count-assert 9
;   :size-assert         #x60
;   :flag-assert         #x900000060
;   )

; (deftype gnawer (process-drawable)
;   ((hit-points     int32                :offset-assert 176)
;    (gnawer-id      int32                :offset-assert 180)
;    (total-money    int32                :offset-assert 184)
;    (money-mask     uint32               :offset-assert 188)
;    (eco-green-mask uint32               :offset-assert 192)
;    (hidden?        basic                :offset-assert 196)
;    (show-damage?   basic                :offset-assert 200)
;    (route-dist     float                :offset-assert 204)
;    (speed          float                :offset-assert 208)
;    (anim-speed     float                :offset-assert 212)
;    (part2          basic                :offset-assert 216)
;    (sound2         basic                :offset-assert 220)
;    (last-hit-time  uint64               :offset-assert 224)
;    (post-trans     vector       :inline :offset-assert 240)
;    (fall-trans     vector       :inline :offset-assert 256)
;    (route          gnawer-route :inline :offset-assert 272)
;    (segments       UNKNOWN      10      :offset-assert 368)
;    )
;   :method-count-assert 31
;   :size-assert         #x5d0
;   :flag-assert         #x1f056005d0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     )
;   )

;; - Functions

(define-extern gnawer-falling-segment-init-by-other function)
(define-extern gnawer-joint-callback function)

;; - Unknowns

;;(define-extern *gnawer-sg* object) ;; unknown type
;;(define-extern gnawer-put-items-at-dest object) ;; unknown type
;;(define-extern gnawer-chewing-on-post object) ;; unknown type
;;(define-extern *gnawer-segment-infos* object) ;; unknown type
;;(define-extern gnawer-give-fuel-cell object) ;; unknown type
;;(define-extern gnawer-dying-give-pickups object) ;; unknown type
;;(define-extern gnawer-wait-to-run object) ;; unknown type
;;(define-extern gnawer-die object) ;; unknown type
;;(define-extern gnawer-run object) ;; unknown type
;;(define-extern gnawer-retreat-into-post object) ;; unknown type
;;(define-extern *gnawer-segment-sg* object) ;; unknown type


;; ----------------------
;; File - driller-lurker
;; Source Path - levels/maincave/driller-lurker.gc
;; Containing DGOs - ['L1', 'MAI', 'MAINCAVE']
;; Version - 3

;; - Types

; (deftype driller-lurker (process-drawable)
;   ((hit-player?             basic   :offset-assert 176)
;    (played-drill-sound?     basic   :offset-assert 180)
;    (mode                    uint64  :offset-assert 184)
;    (path-u                  float   :offset-assert 192)
;    (path-units-per-meter    float   :offset-assert 196)
;    (path-speed              float   :offset-assert 200)
;    (targ-path-speed         float   :offset-assert 204)
;    (path-dir                float   :offset-assert 208)
;    (path-ry                 float   :offset-assert 212)
;    (facing-ry               float   :offset-assert 216)
;    (drill-rz                float   :offset-assert 220)
;    (drill-speed             float   :offset-assert 224)
;    (up-blend                float   :offset-assert 228)
;    (player-path-u           float   :offset-assert 232)
;    (ambient-drilling-u      float   :offset-assert 236)
;    (timeout                 int32   :offset-assert 240)
;    (neck                    basic   :offset-assert 244)
;    (drill                   basic   :offset-assert 248)
;    (sound2                  basic   :offset-assert 252)
;    (last-update-time        uint64  :offset-assert 256)
;    (last-player-path-u-time uint64  :offset-assert 264)
;    (started-chasing-time    uint64  :offset-assert 272)
;    (hit-player-time         uint64  :offset-assert 280)
;    (player-attack-id        uint64  :offset-assert 288)
;    )
;   :method-count-assert 28
;   :size-assert         #x128
;   :flag-assert         #x1c00c00128
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     )
;   )

;; - Functions

(define-extern driller-lurker-default-event-handler function)

;; - Unknowns

;;(define-extern *driller-lurker-sg* object) ;; unknown type
;;(define-extern *driller-lurker-shadow-control* object) ;; unknown type
;;(define-extern driller-lurker-idle-drilling object) ;; unknown type
;;(define-extern driller-lurker-patrol object) ;; unknown type
;;(define-extern driller-lurker-chase object) ;; unknown type
;;(define-extern driller-lurker-jammed-standing object) ;; unknown type
;;(define-extern driller-lurker-attack object) ;; unknown type
;;(define-extern driller-lurker-patrol-pause object) ;; unknown type
;;(define-extern driller-lurker-die object) ;; unknown type
;;(define-extern driller-lurker-debug-play-anims object) ;; unknown type


;; ----------------------
;; File - sunken-part
;; Source Path - levels/sunken/sunken-part.gc
;; Containing DGOs - ['L1', 'SUN', 'SUNKEN']
;; Version - 3

;; - Types

; (deftype sunken-part (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;;  not enough basic ops
;   )


;; ----------------------
;; File - sunken-part2
;; Source Path - levels/sunken/sunken-part2.gc
;; Containing DGOs - ['L1', 'SUN', 'SUNKEN']
;; Version - 3

;; - Nothing Defined in This File!


;; ----------------------
;; File - sunken-part3
;; Source Path - levels/sunken/sunken-part3.gc
;; Containing DGOs - ['L1', 'SUN', 'SUNKEN']
;; Version - 3

;; - Nothing Defined in This File!


;; ----------------------
;; File - sunken-part4
;; Source Path - levels/sunken/sunken-part4.gc
;; Containing DGOs - ['L1', 'SUN', 'SUNKEN']
;; Version - 3

;; - Nothing Defined in This File!


;; ----------------------
;; File - sunken-part5
;; Source Path - levels/sunken/sunken-part5.gc
;; Containing DGOs - ['L1', 'SUN', 'SUNKEN']
;; Version - 3

;; - Nothing Defined in This File!


;; ----------------------
;; File - target-tube
;; Source Path - levels/sunken/target-tube.gc
;; Containing DGOs - ['L1', 'SUN', 'SUNKEN']
;; Version - 3

;; - Types

; (deftype tube-info (basic)
;   ((entity          basic          :offset-assert 4)
;    (tube            uint64         :offset-assert 8)
;    (downhill        vector :inline :offset-assert 16)
;    (centertube      vector :inline :offset-assert 32)
;    (downtube        vector :inline :offset-assert 48)
;    (sidetube        vector :inline :offset-assert 64)
;    (foretube        vector :inline :offset-assert 80)
;    (old-transv      vector :inline :offset-assert 96)
;    (mod-x           float          :offset-assert 112)
;    (mod-y           float          :offset-assert 116)
;    (start-time      uint64         :offset-assert 120)
;    (turn-anim-targ  float          :offset-assert 128)
;    (turn-anim-frame float          :offset-assert 132)
;    (turn-anim-vel   float          :offset-assert 136)
;    (tube-sound-id   sound-id       :offset-assert 140)
;    (tube-sound-vol  float          :offset-assert 144)
;    )
;   :method-count-assert 9
;   :size-assert         #x94
;   :flag-assert         #x900000094
;   )

; (deftype tube-bank (basic)
;   ()
;   :method-count-assert 9
;   :size-assert         #x4
;   :flag-assert         #x900000004
;   )

; (deftype slide-control (process-drawable)
;   ((target uint64         :offset-assert 176)
;    (pos    float          :offset-assert 184)
;    (trans  vector :inline :offset-assert 192)
;    (rot    vector :inline :offset-assert 208)
;    (side   vector :inline :offset-assert 224)
;    )
;   :method-count-assert 22
;   :size-assert         #xf0
;   :flag-assert         #x16008000f0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

;; - Functions

(define-extern find-target-point function)
(define-extern distance-from-tangent function)
(define-extern target-tube-post function)
(define-extern target-tube-turn-anim function)
(define-extern tube-thrust function)
(define-extern tube-sounds function)

;; - Unknowns

;;(define-extern target-tube object) ;; unknown type
;;(define-extern target-tube-death object) ;; unknown type
;;(define-extern *tube-jump-mods* object) ;; unknown type
;;(define-extern target-tube-jump object) ;; unknown type
;;(define-extern *tube-mods* object) ;; unknown type
;;(define-extern *tube-surface* object) ;; unknown type
;;(define-extern target-tube-hit object) ;; unknown type
;;(define-extern *tube-hit-mods* object) ;; unknown type
;;(define-extern *TUBE-bank* object) ;; unknown type


;; ----------------------
;; File - eichar-tube+0-ag-L1-SUNKEN
;; Source Path - levels/l1_only/eichar-tube+0-ag-L1-SUNKEN.gd
;; Containing DGOs - ['L1', 'SUNKEN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - eichar-tube+0-ag-SUN
;; Source Path - levels/sunken/eichar-tube+0-ag-SUN.gd
;; Containing DGOs - ['SUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - sunken-obs
;; Source Path - levels/sunken/sunken-obs.gc
;; Containing DGOs - ['L1', 'SUN', 'SUNKEN']
;; Version - 3

;; - Types

; (deftype water-vol-deadly (process-hidden)
;   ((name             basic                 :offset-assert 4)
;    (mask             uint32                :offset-assert 8)
;    (parent           uint32                :offset-assert 12)
;    (brother          uint32                :offset-assert 16)
;    (child            uint32                :offset-assert 20)
;    (ppointer         uint32                :offset-assert 24)
;    (self             basic                 :offset-assert 28)
;    (pool             basic                 :offset-assert 32)
;    (status           basic                 :offset-assert 36)
;    (pid              int32                 :offset-assert 40)
;    (main-thread      basic                 :offset-assert 44)
;    (top-thread       basic                 :offset-assert 48)
;    (entity           basic                 :offset-assert 52)
;    (state            basic                 :offset-assert 56)
;    (trans-hook       basic                 :offset-assert 60)
;    (post-hook        basic                 :offset-assert 64)
;    (event-hook       basic                 :offset-assert 68)
;    (allocated-length int32                 :offset-assert 72)
;    (next-state       basic                 :offset-assert 76)
;    (heap-base        uint32                :offset-assert 80)
;    (heap-top         uint32                :offset-assert 84)
;    (heap-cur         uint32                :offset-assert 88)
;    (stack-frame-top  basic                 :offset-assert 92)
;    (heap             kheap        :inline  :offset-assert 80)
;    (connection-list  'connectable :inline  :offset-assert 96)
;    (stack            UNKNOWN      :dynamic :offset-assert 112)
;    )
;   :method-count-assert 15
;   :size-assert         #x70
;   :flag-assert         #xf00000070
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     )
;   )

; (deftype side-to-side-plat (plat)
;   ((part-ry float  :offset-assert 264)
;    )
;   :method-count-assert 33
;   :size-assert         #x10c
;   :flag-assert         #x2100a0010c
;   ;; inherited inspect of plat
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     )
;   )

; (deftype sunkencam (pov-camera)
;   ((seq uint64  :offset-assert 224)
;    )
;   :method-count-assert 30
;   :size-assert         #xe8
;   :flag-assert         #x1e008000e8
;   ;; inherited inspect of pov-camera
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

; (deftype seaweed (process-drawable)
;   ((anim-speed float  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb4
;   :flag-assert         #x14005000b4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

;; - Unknowns

;;(define-extern *seaweed-sg* object) ;; unknown type
;;(define-extern *seaweed* object) ;; unknown type
;;(define-extern seaweed-idle object) ;; unknown type
;;(define-extern *side-to-side-plat-sg* object) ;; unknown type
;;(define-extern *sunkencam-sg* object) ;; unknown type


;; ----------------------
;; File - shover
;; Source Path - levels/sunken/shover.gc
;; Containing DGOs - ['L1', 'SUN', 'SUNKEN']
;; Version - 3

;; - Types

; (deftype shover (process-drawable)
;   ((shove-up float  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb4
;   :flag-assert         #x14005000b4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

;; - Unknowns

;;(define-extern *shover-sg* object) ;; unknown type
;;(define-extern *shover* object) ;; unknown type
;;(define-extern shover-idle object) ;; unknown type


;; ----------------------
;; File - square-platform
;; Source Path - levels/sunken/square-platform.gc
;; Containing DGOs - ['L1', 'SUN', 'SUNKEN']
;; Version - 3

;; - Types

; (deftype square-platform (baseplat)
;   ((plat-id           int32          :offset-assert 228)
;    (pos-u             float          :offset-assert 232)
;    (water-entity      basic          :offset-assert 236)
;    (splash-counter    int32          :offset-assert 240)
;    (start-splash-time uint64         :offset-assert 248)
;    (part2             basic          :offset-assert 256)
;    (part3             basic          :offset-assert 260)
;    (part4             basic          :offset-assert 264)
;    (up-pos            vector :inline :offset-assert 272)
;    (down-pos          vector :inline :offset-assert 288)
;    )
;   :method-count-assert 28
;   :size-assert         #x130
;   :flag-assert         #x1c00c00130
;   ;; inherited inspect of baseplat
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     )
;   )

; (deftype square-platform-button (basebutton)
;   ()
;   :method-count-assert 32
;   :size-assert         #x100
;   :flag-assert         #x2000900100
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     )
;   )

; (deftype square-platform-master (process-drawable)
;   ((button-id                int32          :offset-assert 176)
;    (plat-id                  int32          :offset-assert 180)
;    (plat-mask                uint32         :offset-assert 184)
;    (plat-id-dir              int32          :offset-assert 188)
;    (wiggled?                 basic          :offset-assert 192)
;    (timeout                  uint64         :offset-assert 200)
;    (last-plat-activated-time uint64         :offset-assert 208)
;    (delay-til-wiggle         uint64         :offset-assert 216)
;    (ticker                   ticky  :inline :offset-assert 224)
;    )
;   :method-count-assert 20
;   :size-assert         #x100
;   :flag-assert         #x1400900100
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

;; - Unknowns

;;(define-extern square-platform-master-idle object) ;; unknown type
;;(define-extern square-platform-master-activate object) ;; unknown type
;;(define-extern *square-platform-sg* object) ;; unknown type
;;(define-extern square-platform-lowered object) ;; unknown type
;;(define-extern square-platform-rising object) ;; unknown type
;;(define-extern square-platform-lowering object) ;; unknown type
;;(define-extern square-platform-raised object) ;; unknown type


;; ----------------------
;; File - sun-iris-door
;; Source Path - levels/sunken/sun-iris-door.gc
;; Containing DGOs - ['L1', 'SUN', 'SUNKEN']
;; Version - 3

;; - Types

; (deftype sun-iris-door (process-drawable)
;   ((timeout                float              :offset-assert 176)
;    (proximity?             basic              :offset-assert 180)
;    (directional-proximity? basic              :offset-assert 184)
;    (move-to?               basic              :offset-assert 188)
;    (locked-by-task?        basic              :offset-assert 192)
;    (close-dist             float              :offset-assert 196)
;    (open-dist              float              :offset-assert 200)
;    (move-to-pos            vector     :inline :offset-assert 208)
;    (outward-vec            vector     :inline :offset-assert 224)
;    (move-to-quat           quaternion :inline :offset-assert 240)
;    )
;   :method-count-assert 22
;   :size-assert         #x100
;   :flag-assert         #x1600900100
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

;; - Functions

(define-extern sun-iris-door-init-by-other function)

;; - Unknowns

;;(define-extern *sun-iris-door-sg* object) ;; unknown type
;;(define-extern sun-iris-door-open object) ;; unknown type
;;(define-extern sun-iris-door-closed object) ;; unknown type
;;(define-extern sun-iris-door-opening object) ;; unknown type
;;(define-extern sun-iris-door-closing object) ;; unknown type


;; ----------------------
;; File - orbit-plat
;; Source Path - levels/sunken/orbit-plat.gc
;; Containing DGOs - ['L1', 'SUN', 'SUNKEN']
;; Version - 3

;; - Types

; (deftype orbit-plat-bottom (process-drawable)
;   ((part2 basic  :offset-assert 176)
;    )
;   :method-count-assert 21
;   :size-assert         #xb4
;   :flag-assert         #x15005000b4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; (deftype orbit-plat (baseplat)
;   ((other        basic          :offset-assert 228)
;    (rot-dir      float          :offset-assert 232)
;    (reset-trans  vector :inline :offset-assert 240)
;    (is-reset?    basic          :offset-assert 256)
;    (reset-length float          :offset-assert 260)
;    (timeout      float          :offset-assert 264)
;    (plat-status  uint64         :offset-assert 272)
;    )
;   :method-count-assert 29
;   :size-assert         #x118
;   :flag-assert         #x1d00b00118
;   ;; inherited inspect of baseplat
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     )
;   )

;; - Functions

(define-extern orbit-plat-bottom-init-by-other function)
(define-extern get-rotate-point! function)
(define-extern get-nav-point! function)

;; - Unknowns

;;(define-extern *orbit-plat-sg* object) ;; unknown type
;;(define-extern orbit-plat-wait-for-other object) ;; unknown type
;;(define-extern orbit-plat-idle object) ;; unknown type
;;(define-extern orbit-plat-riding object) ;; unknown type
;;(define-extern orbit-plat-rotating object) ;; unknown type
;;(define-extern orbit-plat-still object) ;; unknown type
;;(define-extern orbit-plat-reset object) ;; unknown type
;;(define-extern *orbit-plat-bottom-sg* object) ;; unknown type
;;(define-extern orbit-plat-bottom-idle object) ;; unknown type


;; ----------------------
;; File - wedge-plats
;; Source Path - levels/sunken/wedge-plats.gc
;; Containing DGOs - ['L1', 'SUN', 'SUNKEN']
;; Version - 3

;; - Types

; (deftype wedge-plat-master (process)
;   ((center       vector :inline :offset-assert 112)
;    (rotspeed     float          :offset-assert 128)
;    (rotate-inner float          :offset-assert 132)
;    (rotate-outer float          :offset-assert 136)
;    )
;   :method-count-assert 14
;   :size-assert         #x8c
;   :flag-assert         #xe0020008c
;   ;; inherited inspect of process
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     )
;   )

; (deftype wedge-plat (baseplat)
;   ((master   basic  :offset-assert 228)
;    (distance float  :offset-assert 232)
;    (offset   float  :offset-assert 236)
;    )
;   :method-count-assert 28
;   :size-assert         #xf0
;   :flag-assert         #x1c008000f0
;   ;; inherited inspect of baseplat
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     )
;   )

; (deftype wedge-plat-outer (wedge-plat)
;   ()
;   :method-count-assert 28
;   :size-assert         #xf0
;   :flag-assert         #x1c008000f0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     )
;   )

;; - Unknowns

;;(define-extern *wedge-plat-sg* object) ;; unknown type
;;(define-extern wedge-plat-outer-idle object) ;; unknown type
;;(define-extern wedge-plat-outer-tip object) ;; unknown type
;;(define-extern wedge-plat-idle object) ;; unknown type
;;(define-extern wedge-plat-tip object) ;; unknown type
;;(define-extern wedge-plat-master-idle object) ;; unknown type
;;(define-extern *wedge-plat-outer-sg* object) ;; unknown type


;; ----------------------
;; File - wall-plat
;; Source Path - levels/sunken/wall-plat.gc
;; Containing DGOs - ['L1', 'SUN', 'SUNKEN']
;; Version - 3

;; - Types

; (deftype wall-plat (process-drawable)
;   ((use-sync?       basic                    :offset-assert 176)
;    (extended-amount float                    :offset-assert 180)
;    (in-trans        vector           :inline :offset-assert 192)
;    (out-trans       vector           :inline :offset-assert 208)
;    (sync            sync-info-paused :inline :offset-assert 224)
;    )
;   :method-count-assert 20
;   :size-assert         #xf0
;   :flag-assert         #x14008000f0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

;; - Unknowns

;;(define-extern *wall-plat-sg* object) ;; unknown type
;;(define-extern wall-plat-sync-idle object) ;; unknown type
;;(define-extern wall-plat-retracted object) ;; unknown type
;;(define-extern wall-plat-retracting object) ;; unknown type
;;(define-extern wall-plat-extended object) ;; unknown type
;;(define-extern wall-plat-extending object) ;; unknown type


;; ----------------------
;; File - qbert-plat
;; Source Path - levels/sunken/qbert-plat.gc
;; Containing DGOs - ['L1', 'SUN', 'SUNKEN']
;; Version - 3

;; - Types

; (deftype qbert-plat-on (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype qbert-plat (rigid-body-platform)
;   ((anchor-point      vector :inline :offset-assert 736)
;    (plat-id           int32          :offset-assert 752)
;    (on?               basic          :offset-assert 756)
;    (player-is-riding? basic          :offset-assert 760)
;    (master            basic          :offset-assert 764)
;    )
;   :method-count-assert 35
;   :size-assert         #x300
;   :flag-assert         #x2302900300
;   ;; inherited inspect of rigid-body-platform
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     )
;   )

; (deftype qbert-plat-master (process-drawable)
;   ((last-plat-triggered             int32          :offset-assert 176)
;    (plat-states                     uint32         :offset-assert 180)
;    (plat-states-needed-to-open-door uint32         :offset-assert 184)
;    (player-in-bounds?               basic          :offset-assert 188)
;    (player-in-water?                basic          :offset-assert 192)
;    (play-door-cam?                  basic          :offset-assert 196)
;    (puzzle-beaten?                  basic          :offset-assert 200)
;    (door                            basic          :offset-assert 204)
;    (door-plat                       basic          :offset-assert 208)
;    (bounds-start                    vector :inline :offset-assert 224)
;    (bounds-end                      vector :inline :offset-assert 240)
;    )
;   :method-count-assert 21
;   :size-assert         #x100
;   :flag-assert         #x1500900100
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

;; - Functions

(define-extern qbert-plat-on-init-by-other function)
(define-extern qbert-plat-event-handler function)

;; - Unknowns

;;(define-extern qbert-plat-master-wait-for-door object) ;; unknown type
;;(define-extern qbert-plat-master-idle object) ;; unknown type
;;(define-extern qbert-plat-master-do-door object) ;; unknown type
;;(define-extern qbert-plat-wait-for-master object) ;; unknown type
;;(define-extern *qbert-plat-sg* object) ;; unknown type
;;(define-extern *qbert-plat-constants* object) ;; unknown type
;;(define-extern *qbert-plat-on-sg* object) ;; unknown type
;;(define-extern qbert-plat-on-mimic object) ;; unknown type
;;(define-extern qbert-plat-on-die object) ;; unknown type


;; ----------------------
;; File - steam-cap
;; Source Path - levels/sunken/steam-cap.gc
;; Containing DGOs - ['L1', 'SUN', 'SUNKEN']
;; Version - 3

;; - Types

; (deftype steam-cap-control-pt (structure)
;   ((trans  vector :inline :offset-assert 0)
;    (transv vector :inline :offset-assert 16)
;    )
;   :method-count-assert 9
;   :size-assert         #x20
;   :flag-assert         #x900000020
;   )

; (deftype steam-cap (process-drawable)
;   ((do-burst?         basic             :offset-assert 176)
;    (do-falling-sound? basic             :offset-assert 180)
;    (do-landing-sound? basic             :offset-assert 184)
;    (begin-travel-up   float             :offset-assert 188)
;    (begin-travel-down float             :offset-assert 192)
;    (sync              sync-info :inline :offset-assert 196)
;    (part2             basic             :offset-assert 204)
;    (part3             basic             :offset-assert 208)
;    (down              vector    :inline :offset-assert 224)
;    (up                vector    :inline :offset-assert 240)
;    (control-pt        UNKNOWN   3       :offset-assert 256)
;    )
;   :method-count-assert 22
;   :size-assert         #x160
;   :flag-assert         #x1600f00160
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

;; - Unknowns

;;(define-extern *steam-cap-sg* object) ;; unknown type
;;(define-extern steam-cap-idle object) ;; unknown type


;; ----------------------
;; File - sun-exit-chamber
;; Source Path - levels/sunken/sun-exit-chamber.gc
;; Containing DGOs - ['L1', 'SUN', 'SUNKEN']
;; Version - 3

;; - Types

; (deftype blue-eco-charger-orb (process-drawable)
;   ((orbit-rot       vector :inline :offset-assert 176)
;    (orbit-rotv      vector :inline :offset-assert 192)
;    (targ-orbit-rotv vector :inline :offset-assert 208)
;    (rest-pos        vector :inline :offset-assert 224)
;    )
;   :method-count-assert 21
;   :size-assert         #xf0
;   :flag-assert         #x15008000f0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; (deftype blue-eco-charger (process-drawable)
;   ((charger-id int32  :offset-assert 176)
;    (open-level float  :offset-assert 180)
;    (master     basic  :offset-assert 184)
;    )
;   :method-count-assert 22
;   :size-assert         #xbc
;   :flag-assert         #x16005000bc
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; (deftype exit-chamber-items (structure)
;   ((door-pos    vector     :inline :offset-assert 0)
;    (door-quat   quaternion :inline :offset-assert 16)
;    (button-pos  vector     :inline :offset-assert 32)
;    (button-quat quaternion :inline :offset-assert 48)
;    (fcell-pos   vector     :inline :offset-assert 64)
;    )
;   :method-count-assert 9
;   :size-assert         #x50
;   :flag-assert         #x900000050
;   )

; (deftype exit-chamber (process-drawable)
;   ((chargers-active         uint32         :offset-assert 176)
;    (move-player?            basic          :offset-assert 180)
;    (move-fcell?             basic          :offset-assert 184)
;    (play-assistant-message? basic          :offset-assert 188)
;    (wave-scale              float          :offset-assert 192)
;    (button                  uint32         :offset-assert 196)
;    (door                    uint32         :offset-assert 200)
;    (fcell-handle            uint64         :offset-assert 208)
;    (orig-trans              vector :inline :offset-assert 224)
;    (last-pos                vector :inline :offset-assert 240)
;    )
;   :method-count-assert 25
;   :size-assert         #x100
;   :flag-assert         #x1900900100
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     )
;   )

; (deftype exit-chamber-button (basebutton)
;   ()
;   :method-count-assert 32
;   :size-assert         #x100
;   :flag-assert         #x2000900100
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     )
;   )

;; - Functions

(define-extern exit-chamber-button-init-by-other function)
(define-extern blue-eco-charger-orb-init-by-other function)

;; - Unknowns

;;(define-extern *exit-chamber-sg* object) ;; unknown type
;;(define-extern exit-chamber-charger-puzzle object) ;; unknown type
;;(define-extern exit-chamber-idle-in-sunken object) ;; unknown type
;;(define-extern exit-chamber-idle-in-village object) ;; unknown type
;;(define-extern exit-chamber-lower object) ;; unknown type
;;(define-extern exit-chamber-rise object) ;; unknown type
;;(define-extern exit-chamber-charger-puzzle-beaten object) ;; unknown type
;;(define-extern *blue-eco-charger-sg* object) ;; unknown type
;;(define-extern blue-eco-charger-idle object) ;; unknown type
;;(define-extern blue-eco-charger-open object) ;; unknown type
;;(define-extern blue-eco-charger-close object) ;; unknown type
;;(define-extern blue-eco-charger-stuck-open object) ;; unknown type
;;(define-extern *blue-eco-charger-orb-sg* object) ;; unknown type
;;(define-extern blue-eco-charger-orb-idle object) ;; unknown type
;;(define-extern blue-eco-charger-orb-active object) ;; unknown type


;; ----------------------
;; File - floating-launcher
;; Source Path - levels/sunken/floating-launcher.gc
;; Containing DGOs - ['L1', 'SUN', 'SUNKEN']
;; Version - 3

;; - Types

; (deftype floating-launcher (baseplat)
;   ((trigger-height float   :offset-assert 228)
;    (launcher       uint32  :offset-assert 232)
;    )
;   :method-count-assert 27
;   :size-assert         #xec
;   :flag-assert         #x1b008000ec
;   ;; inherited inspect of baseplat
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     )
;   )

;; - Unknowns

;;(define-extern *floating-launcher-sg* object) ;; unknown type
;;(define-extern floating-launcher-idle object) ;; unknown type
;;(define-extern floating-launcher-ready object) ;; unknown type
;;(define-extern floating-launcher-lowering object) ;; unknown type


;; ----------------------
;; File - sunken-water
;; Source Path - levels/sunken/sunken-water.gc
;; Containing DGOs - ['L1', 'SUN', 'SUNKEN']
;; Version - 3

;; - Types

; (deftype sunken-water (water-anim)
;   ((use-sync?             basic             :offset-assert 220)
;    (playing-deadly-sound? basic             :offset-assert 224)
;    (deadly-time           float             :offset-assert 228)
;    (deadly-fade           float             :offset-assert 232)
;    (sync                  sync-info :inline :offset-assert 236)
;    (safe-color-mult       vector    :inline :offset-assert 256)
;    (safe-color-emissive   vector    :inline :offset-assert 272)
;    (deadly-color-mult     vector    :inline :offset-assert 288)
;    (deadly-color-emissive vector    :inline :offset-assert 304)
;    )
;   :method-count-assert 31
;   :size-assert         #x140
;   :flag-assert         #x1f00d00140
;   ;; inherited inspect of water-anim
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     )
;   )

;; - Unknowns

;;(define-extern ripple-for-sunken-water object) ;; unknown type


;; ----------------------
;; File - whirlpool
;; Source Path - levels/sunken/whirlpool.gc
;; Containing DGOs - ['L1', 'SUN', 'SUNKEN']
;; Version - 3

;; - Types

; (deftype whirlpool (process-drawable)
;   ((spin-ry          float                    :offset-assert 176)
;    (spin-speed-idle  float                    :offset-assert 180)
;    (spin-speed-delta float                    :offset-assert 184)
;    (sync             sync-info-paused :inline :offset-assert 188)
;    )
;   :method-count-assert 21
;   :size-assert         #xcc
;   :flag-assert         #x15006000cc
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

;; - Unknowns

;;(define-extern *whirlpool-sg* object) ;; unknown type
;;(define-extern whirlpool-idle object) ;; unknown type


;; ----------------------
;; File - sunken-pipegame
;; Source Path - levels/sunken/sunken-pipegame.gc
;; Containing DGOs - ['L1', 'SUN', 'SUNKEN']
;; Version - 3

;; - Types

; (deftype sunken-pipegame-button (basebutton)
;   ()
;   :method-count-assert 32
;   :size-assert         #x100
;   :flag-assert         #x2000900100
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     )
;   )

; (deftype sunken-pipegame-prize (structure)
;   ((puzzle-delay            uint64         :offset-assert 0)
;    (pipe-travel-time-to-far uint64         :offset-assert 8)
;    (pipe-travel-time-to-jar uint64         :offset-assert 16)
;    (actor-handle            uint64         :offset-assert 24)
;    (jar-pos                 vector :inline :offset-assert 32)
;    (far-pos                 vector :inline :offset-assert 48)
;    (sucked-up-jar-part-pos  vector :inline :offset-assert 64)
;    (sucked-up-far-part-pos  vector :inline :offset-assert 80)
;    (blown-out-jar-part-pos  vector :inline :offset-assert 96)
;    (blown-out-far-part-pos  vector :inline :offset-assert 112)
;    (sucked-up-part          basic          :offset-assert 128)
;    (blown-out-part          basic          :offset-assert 132)
;    )
;   :method-count-assert 9
;   :size-assert         #x88
;   :flag-assert         #x900000088
;   )

; (deftype sunken-pipegame (process-drawable)
;   ((abort-audio-if-beaten? basic           :offset-assert 176)
;    (challenges-mask        uint32          :offset-assert 180)
;    (challenge              int32           :offset-assert 184)
;    (ticker                 ticky   :inline :offset-assert 192)
;    (button                 UNKNOWN 3       :offset-assert 224)
;    (prize                  UNKNOWN 3       :offset-assert 240)
;    )
;   :method-count-assert 23
;   :size-assert         #x2a0
;   :flag-assert         #x17023002a0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     )
;   )

;; - Functions

(define-extern sunken-pipegame-button-init-by-other function)

;; - Unknowns

;;(define-extern sunken-pipegame-start-up object) ;; unknown type
;;(define-extern sunken-pipegame-idle object) ;; unknown type
;;(define-extern sunken-pipegame-end-play object) ;; unknown type
;;(define-extern sunken-pipegame-beat-challenge object) ;; unknown type
;;(define-extern sunken-pipegame-begin-play object) ;; unknown type


;; ----------------------
;; File - bully
;; Source Path - levels/sunken/bully.gc
;; Containing DGOs - ['L1', 'SUN', 'SUNKEN']
;; Version - 3

;; - Types

; (deftype bully-broken-cage (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype bully (process-drawable)
;   ((hit-player?     basic   :offset-assert 176)
;    (bounced?        basic   :offset-assert 180)
;    (bounce-volume   int32   :offset-assert 184)
;    (facing-ry       float   :offset-assert 188)
;    (travel-ry       float   :offset-assert 192)
;    (speed-u         float   :offset-assert 196)
;    (spin-vel        float   :offset-assert 200)
;    (travel-speed    float   :offset-assert 204)
;    (reaction-delay  uint64  :offset-assert 208)
;    (start-spin-time uint64  :offset-assert 216)
;    (slow-down       uint64  :offset-assert 224)
;    (hit-player-time uint64  :offset-assert 232)
;    (neck            basic   :offset-assert 240)
;    )
;   :method-count-assert 21
;   :size-assert         #xf4
;   :flag-assert         #x15009000f4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

;; - Functions

(define-extern bully-broken-cage-init-by-other function)
(define-extern bully-default-event-handler function)
(define-extern bully-post function)

;; - Unknowns

;;(define-extern *bully-sg* object) ;; unknown type
;;(define-extern *bully-shadow-control* object) ;; unknown type
;;(define-extern bully-idle object) ;; unknown type
;;(define-extern bully-start-spinning object) ;; unknown type
;;(define-extern bully-stop-spinning object) ;; unknown type
;;(define-extern bully-notice object) ;; unknown type
;;(define-extern bully-die object) ;; unknown type
;;(define-extern *bully-broken-cage-sg* object) ;; unknown type
;;(define-extern bully-broken-cage-explode object) ;; unknown type


;; ----------------------
;; File - double-lurker
;; Source Path - levels/sunken/double-lurker.gc
;; Containing DGOs - ['L1', 'SUN', 'SUNKEN']
;; Version - 3

;; - Types

; (deftype double-lurker-top (nav-enemy)
;   ((fall-dest vector :inline :offset-assert 400)
;    )
;   :method-count-assert 76
;   :size-assert         #x1a0
;   :flag-assert         #x4c013001a0
;   ;; inherited inspect of nav-enemy
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

; (deftype double-lurker (nav-enemy)
;   ((knocked-back-speed  float   :offset-assert 400)
;    (buddy-on-shoulders? basic   :offset-assert 404)
;    (dead?               basic   :offset-assert 408)
;    (buddy-dead?         basic   :offset-assert 412)
;    (buddy-handle        uint64  :offset-assert 416)
;    )
;   :method-count-assert 76
;   :size-assert         #x1a8
;   :flag-assert         #x4c014001a8
;   ;; inherited inspect of nav-enemy
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

;; - Functions

(define-extern double-lurker-top-init-by-other function)
(define-extern double-lurker-default-event-handler function)

;; - Unknowns

;;(define-extern double-lurker-waiting-to-die object) ;; unknown type
;;(define-extern *double-lurker-sg* object) ;; unknown type
;;(define-extern *double-lurker-when-both-nav-enemy-info* object) ;; unknown type
;;(define-extern *double-lurker-nav-enemy-info* object) ;; unknown type
;;(define-extern double-lurker-resume object) ;; unknown type
;;(define-extern double-lurker-break-apart object) ;; unknown type
;;(define-extern double-lurker-buddy-was-hit object) ;; unknown type
;;(define-extern double-lurker-both-knocked-back object) ;; unknown type
;;(define-extern double-lurker-top-on-shoulders object) ;; unknown type
;;(define-extern double-lurker-top-resume object) ;; unknown type
;;(define-extern *double-lurker-top-sg* object) ;; unknown type
;;(define-extern *double-lurker-top-nav-enemy-info* object) ;; unknown type
;;(define-extern double-lurker-top-knocked-down object) ;; unknown type
;;(define-extern double-lurker-top-on-shoulders-die object) ;; unknown type
;;(define-extern double-lurker-show-anims object) ;; unknown type
;;(define-extern double-lurker-knocked-back object) ;; unknown type


;; ----------------------
;; File - helix-water
;; Source Path - levels/sunken/helix-water.gc
;; Containing DGOs - ['L1', 'SUN', 'SUNKEN']
;; Version - 3

;; - Types

; (deftype helix-slide-door (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype helix-button (process-drawable)
;   ((my-water     basic          :offset-assert 176)
;    (my-door      basic          :offset-assert 180)
;    (fcell-handle uint64         :offset-assert 184)
;    (down-y       float          :offset-assert 192)
;    (spawn-trans  vector :inline :offset-assert 208)
;    )
;   :method-count-assert 20
;   :size-assert         #xe0
;   :flag-assert         #x14007000e0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype helix-dark-eco (dark-eco-pool)
;   ()
;   :method-count-assert 30
;   :size-assert         #xdc
;   :flag-assert         #x1e007000dc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

; (deftype helix-water (process-drawable)
;   ((last-alt-actor-consumed int32   :offset-assert 176)
;    (alt-actors              basic   :offset-assert 180)
;    (transv-y                float   :offset-assert 184)
;    (start-y                 float   :offset-assert 188)
;    (end-y                   float   :offset-assert 192)
;    (dark-eco                uint32  :offset-assert 196)
;    )
;   :method-count-assert 22
;   :size-assert         #xc8
;   :flag-assert         #x16006000c8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

;; - Unknowns

;;(define-extern *helix-water* object) ;; unknown type
;;(define-extern helix-water-idle object) ;; unknown type
;;(define-extern helix-water-activated object) ;; unknown type
;;(define-extern *helix-button-sg* object) ;; unknown type
;;(define-extern *helix-button* object) ;; unknown type
;;(define-extern helix-button-startup object) ;; unknown type
;;(define-extern helix-button-idle-down object) ;; unknown type
;;(define-extern helix-button-quick-activate object) ;; unknown type
;;(define-extern helix-button-activate object) ;; unknown type
;;(define-extern helix-button-idle-up object) ;; unknown type
;;(define-extern *helix-slide-door-sg* object) ;; unknown type
;;(define-extern *helix-slide-door* object) ;; unknown type
;;(define-extern helix-slide-door-idle-open object) ;; unknown type
;;(define-extern helix-slide-door-idle-closed object) ;; unknown type
;;(define-extern helix-slide-door-close object) ;; unknown type


;; ----------------------
;; File - puffer
;; Source Path - levels/sunken/puffer.gc
;; Containing DGOs - ['L1', 'SUN', 'SUNKEN']
;; Version - 3

;; - Types

; (deftype puffer (process-drawable)
;   ((path-index           int32             :offset-assert 176)
;    (facing-ry            float             :offset-assert 180)
;    (travel-ry            float             :offset-assert 184)
;    (travel-speed         float             :offset-assert 188)
;    (attack-bottom-y      float             :offset-assert 192)
;    (patrol-bottom-y      float             :offset-assert 196)
;    (top-y                float             :offset-assert 200)
;    (targ-trans-y         float             :offset-assert 204)
;    (acc-y                float             :offset-assert 208)
;    (travel-turn-speed    float             :offset-assert 212)
;    (notice-dist          float             :offset-assert 216)
;    (give-up-dist         float             :offset-assert 220)
;    (attacking?           basic             :offset-assert 224)
;    (hit-player?          basic             :offset-assert 228)
;    (look-mean?           basic             :offset-assert 232)
;    (cprims-type          uint64            :offset-assert 240)
;    (neck                 basic             :offset-assert 248)
;    (hit-player-time      uint64            :offset-assert 256)
;    (reaction-delay       uint64            :offset-assert 264)
;    (picked-point-time    uint64            :offset-assert 272)
;    (pick-new-point-delay uint64            :offset-assert 280)
;    (last-on-screen-time  uint64            :offset-assert 288)
;    (buddy                basic             :offset-assert 296)
;    (nice-look            lod-set   :inline :offset-assert 300)
;    (mean-look            lod-set   :inline :offset-assert 336)
;    (dest-pos             vector    :inline :offset-assert 384)
;    (sync                 sync-info :inline :offset-assert 400)
;    )
;   :method-count-assert 32
;   :size-assert         #x198
;   :flag-assert         #x2001300198
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     )
;   )

; (deftype pick-patrol-point-away-from-buddy-work (structure)
;   ((best-path-index int32          :offset-assert 0)
;    (best-rating     float          :offset-assert 4)
;    (best-dest       vector :inline :offset-assert 16)
;    (pt-dir          vector :inline :offset-assert 32)
;    (buddy-dir       vector :inline :offset-assert 48)
;    (dest            vector :inline :offset-assert 64)
;    )
;   :method-count-assert 9
;   :size-assert         #x50
;   :flag-assert         #x900000050
;   )

;; - Functions

(define-extern puffer-default-event-handler function)
(define-extern puffer-post function)

;; - Unknowns

;;(define-extern *puffer-sg* object) ;; unknown type
;;(define-extern *puffer-mean-sg* object) ;; unknown type
;;(define-extern puffer-idle object) ;; unknown type
;;(define-extern puffer-patrol object) ;; unknown type
;;(define-extern puffer-attack object) ;; unknown type
;;(define-extern puffer-die object) ;; unknown type


;; ----------------------
;; File - sunken-fish
;; Source Path - levels/sunken/sunken-fish.gc
;; Containing DGOs - ['L1', 'SUN', 'SUNKEN']
;; Version - 3

;; - Types

; (deftype sunkenfisha (process-drawable)
;   ((path-u                 float          :offset-assert 176)
;    (path-speed             float          :offset-assert 180)
;    (path-speed-seek-speed  float          :offset-assert 184)
;    (targ-path-speed        float          :offset-assert 188)
;    (path-normal-speed-lo   float          :offset-assert 192)
;    (path-normal-speed-hi   float          :offset-assert 196)
;    (path-dir               float          :offset-assert 200)
;    (change-path-dir-time   uint64         :offset-assert 208)
;    (local-path-offset      vector :inline :offset-assert 224)
;    (targ-local-path-offset vector :inline :offset-assert 240)
;    (local-path-offset-dir  vector :inline :offset-assert 256)
;    (max-local-path-offset  vector :inline :offset-assert 272)
;    (facing-rot             vector :inline :offset-assert 288)
;    (path-trans-offset      vector :inline :offset-assert 304)
;    )
;   :method-count-assert 28
;   :size-assert         #x140
;   :flag-assert         #x1c00d00140
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     )
;   )

;; - Functions

(define-extern sunkenfisha-init-by-other function)

;; - Unknowns

;;(define-extern sunkenfisha-idle object) ;; unknown type
;;(define-extern *sunkenfisha-red-yellow-sg* object) ;; unknown type
;;(define-extern *sunkenfisha-yellow-blue-sg* object) ;; unknown type
;;(define-extern *sunkenfisha-yellow-eye-sg* object) ;; unknown type


;; ----------------------
;; File - rolling-obs
;; Source Path - levels/rolling/rolling-obs.gc
;; Containing DGOs - ['L1', 'ROL']
;; Version - 3

;; - Types

; (deftype rolling-part (part-spawner)
;   ()
;   :method-count-assert 21
;   :size-assert         #xd0
;   :flag-assert         #x15006000d0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; (deftype rollingcam (process-hidden)
;   ((name             basic                 :offset-assert 4)
;    (mask             uint32                :offset-assert 8)
;    (parent           uint32                :offset-assert 12)
;    (brother          uint32                :offset-assert 16)
;    (child            uint32                :offset-assert 20)
;    (ppointer         uint32                :offset-assert 24)
;    (self             basic                 :offset-assert 28)
;    (pool             basic                 :offset-assert 32)
;    (status           basic                 :offset-assert 36)
;    (pid              int32                 :offset-assert 40)
;    (main-thread      basic                 :offset-assert 44)
;    (top-thread       basic                 :offset-assert 48)
;    (entity           basic                 :offset-assert 52)
;    (state            basic                 :offset-assert 56)
;    (trans-hook       basic                 :offset-assert 60)
;    (post-hook        basic                 :offset-assert 64)
;    (event-hook       basic                 :offset-assert 68)
;    (allocated-length int32                 :offset-assert 72)
;    (next-state       basic                 :offset-assert 76)
;    (heap-base        uint32                :offset-assert 80)
;    (heap-top         uint32                :offset-assert 84)
;    (heap-cur         uint32                :offset-assert 88)
;    (stack-frame-top  basic                 :offset-assert 92)
;    (heap             kheap        :inline  :offset-assert 80)
;    (connection-list  'connectable :inline  :offset-assert 96)
;    (stack            UNKNOWN      :dynamic :offset-assert 112)
;    )
;   :method-count-assert 15
;   :size-assert         #x70
;   :flag-assert         #xf00000070
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     )
;   )

; (deftype pusher-base (process-drawable)
;   ((max-frame float  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb4
;   :flag-assert         #x14005000b4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype pusher (pusher-base)
;   ((sync sync-info-paused :inline :offset-assert 180)
;    (cyl  cylinder         :inline :offset-assert 208)
;    )
;   :method-count-assert 20
;   :size-assert         #xf8
;   :flag-assert         #x14009000f8
;   ;; inherited inspect of pusher-base
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype gorge-pusher (pusher-base)
;   ((min-frame float  :offset-assert 180)
;    )
;   :method-count-assert 20
;   :size-assert         #xb8
;   :flag-assert         #x14005000b8
;   ;; inherited inspect of pusher-base
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype dark-plant (process-drawable)
;   ((num-alts int32     :offset-assert 176)
;    (alts     UNKNOWN 4 :offset-assert 180)
;    )
;   :method-count-assert 20
;   :size-assert         #xc4
;   :flag-assert         #x14006000c4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype happy-plant (process-drawable)
;   ((alt-actor basic  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb4
;   :flag-assert         #x14005000b4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype race-time (structure)
;   ((digit UNKNOWN 5 :offset-assert 0)
;    )
;   :method-count-assert 9
;   :size-assert         #x5
;   :flag-assert         #x900000005
;   )

; (deftype rolling-start (process-drawable)
;   ((whole-look  lod-set :inline :offset-assert 176)
;    (broken-look lod-set :inline :offset-assert 212)
;    )
;   :method-count-assert 20
;   :size-assert         #xf5
;   :flag-assert         #x14009000f5
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype gorge (process-drawable)
;   ((coord     matrix :inline :offset-assert 176)
;    (radius    float          :offset-assert 240)
;    (thickness float          :offset-assert 244)
;    )
;   :method-count-assert 20
;   :size-assert         #xf8
;   :flag-assert         #x14009000f8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype gorge-start (gorge)
;   ((tasks            basic             :offset-assert 248)
;    (record-time      race-time :inline :offset-assert 252)
;    (this-time        race-time :inline :offset-assert 257)
;    (start-banner     uint64            :offset-assert 264)
;    (end-banner       uint64            :offset-assert 272)
;    (timer-pos-offset int32             :offset-assert 280)
;    (ticker           ticky     :inline :offset-assert 288)
;    )
;   :method-count-assert 20
;   :size-assert         #x140
;   :flag-assert         #x1400d00140
;   ;; inherited inspect of gorge
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype gorge-finish (gorge)
;   ((alt-actor basic  :offset-assert 248)
;    )
;   :method-count-assert 20
;   :size-assert         #xfc
;   :flag-assert         #x14009000fc
;   ;; inherited inspect of gorge
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype gorge-abort (gorge)
;   ()
;   :method-count-assert 20
;   :size-assert         #xf8
;   :flag-assert         #x14009000f8
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype rolling-water (water-anim)
;   ()
;   :method-count-assert 30
;   :size-assert         #xdc
;   :flag-assert         #x1e007000dc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

;; - Functions

(define-extern gorge-init function)
(define-extern gorge-in-front function)
(define-extern gorge-start-launch-start-banner function)
(define-extern gorge-trans function)
(define-extern gorge-start-draw-time function)
(define-extern gorge-behind function)
(define-extern seconds->race-time function)
(define-extern race-time-read function)
(define-extern rolling-start-init-by-other function)
(define-extern gorge-finish-init-by-other function)
(define-extern gorge-abort-init-by-other function)
(define-extern race-time->string function)
(define-extern race-time-less-than function)
(define-extern race-time-save function)
(define-extern dark-plants-all-done function)
(define-extern dark-plant-randomize function)
(define-extern dark-plant-check-target function)
(define-extern dark-plant-has-bad-neighbor function)
(define-extern pusher-base-init function)
(define-extern dark-plant-trans function)
(define-extern race-time-copy! function)
(define-extern race-time->seconds function)

;; - Unknowns

;;(define-extern ripple-for-rolling-water object) ;; unknown type
;;(define-extern gorge-start-idle object) ;; unknown type
;;(define-extern gorge-start-ready object) ;; unknown type
;;(define-extern gorge-start-racing object) ;; unknown type
;;(define-extern gorge-start-race-finished object) ;; unknown type
;;(define-extern gorge-start-race-aborted object) ;; unknown type
;;(define-extern gorge-finish-idle object) ;; unknown type
;;(define-extern gorge-abort-idle object) ;; unknown type
;;(define-extern *rolling-start-whole-sg* object) ;; unknown type
;;(define-extern *rolling-start-broken-sg* object) ;; unknown type
;;(define-extern rolling-start-whole object) ;; unknown type
;;(define-extern rolling-start-break object) ;; unknown type
;;(define-extern *happy-plant-sg* object) ;; unknown type
;;(define-extern happy-plant-opened object) ;; unknown type
;;(define-extern happy-plant-init object) ;; unknown type
;;(define-extern happy-plant-opening object) ;; unknown type
;;(define-extern *rollingcam-sg* object) ;; unknown type
;;(define-extern *dark-plant-sg* object) ;; unknown type
;;(define-extern dark-plant-gone object) ;; unknown type
;;(define-extern dark-plant-startup object) ;; unknown type
;;(define-extern dark-plant-idle object) ;; unknown type
;;(define-extern dark-plant-sprout object) ;; unknown type
;;(define-extern dark-plant-death object) ;; unknown type
;;(define-extern *pusher-sg* object) ;; unknown type
;;(define-extern gorge-pusher-idle object) ;; unknown type
;;(define-extern pusher-idle object) ;; unknown type


;; ----------------------
;; File - rolling-lightning-mole
;; Source Path - levels/rolling/rolling-lightning-mole.gc
;; Containing DGOs - ['L1', 'ROL']
;; Version - 3

;; - Types

; (deftype fleeing-nav-enemy-info (structure)
;   ((min-reflect-angle       float  :offset-assert 0)
;    (max-reflect-angle       float  :offset-assert 4)
;    (max-boundary-deflection float  :offset-assert 8)
;    (deflection-min-dist     float  :offset-assert 12)
;    (deflection-max-dist     float  :offset-assert 16)
;    (reflection-time         int32  :offset-assert 20)
;    (travel-rotate-speed     float  :offset-assert 24)
;    (blend_interp_angle      float  :offset-assert 28)
;    (min-speed-adjust        float  :offset-assert 32)
;    (max-speed-adjust        float  :offset-assert 36)
;    (speed-adjust-center     float  :offset-assert 40)
;    (speed-adjust-range      float  :offset-assert 44)
;    (abort-notice-distance   float  :offset-assert 48)
;    (min-notice-dist         float  :offset-assert 52)
;    (max-notice-dist         float  :offset-assert 56)
;    (min-stop-chase-dist     float  :offset-assert 60)
;    (max-stop-chase-dist     float  :offset-assert 64)
;    (max-flee-rotation       float  :offset-assert 68)
;    )
;   :method-count-assert 9
;   :size-assert         #x48
;   :flag-assert         #x900000048
;   )

; (deftype fleeing-nav-enemy (nav-enemy)
;   ((last-reflection-time uint64                         :offset-assert 400)
;    (run-blend-interp     float                          :offset-assert 408)
;    (desired-travel       vector                 :inline :offset-assert 416)
;    (saved-travel         vector                 :inline :offset-assert 432)
;    (speed-adjust         float                          :offset-assert 448)
;    (flee-info            fleeing-nav-enemy-info :inline :offset-assert 452)
;    )
;   :method-count-assert 76
;   :size-assert         #x20c
;   :flag-assert         #x4c01a0020c
;   ;; inherited inspect of nav-enemy
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

; (deftype lightning-mole (fleeing-nav-enemy)
;   ((debug-vector vector :inline :offset-assert 528)
;    (alt-actor    basic          :offset-assert 544)
;    )
;   :method-count-assert 76
;   :size-assert         #x224
;   :flag-assert         #x4c01c00224
;   ;; inherited inspect of fleeing-nav-enemy
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

; (deftype peeper (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

;; - Functions

(define-extern lightning-mole-task-complete? function)
(define-extern fleeing-nav-enemy-clip-travel function)
(define-extern fleeing-nav-enemy-adjust-travel function)
(define-extern fleeing-nav-enemy-chase-post-func function)
(define-extern fleeing-nav-enemy-adjust-nav-info function)
(define-extern find-adjacent-bounds-one function)
(define-extern find-adjacent-bounds function)
(define-extern fleeing-nav-enemy-chase-post function)
(define-extern lightning-mole-hole-post function)
(define-extern lightning-mole-run-code function)
(define-extern check-drop-level-rolling-dirt function)
(define-extern check-drop-level-rolling-dirt-finish function)

;; - Unknowns

;;(define-extern *lightning-mole-sg* object) ;; unknown type
;;(define-extern peeper-up object) ;; unknown type
;;(define-extern peeper-down object) ;; unknown type
;;(define-extern peeper-hide object) ;; unknown type
;;(define-extern peeper-wait object) ;; unknown type
;;(define-extern *lightning-mole-nav-enemy-info* object) ;; unknown type
;;(define-extern lightning-mole-gone object) ;; unknown type
;;(define-extern lightning-mole-hiding object) ;; unknown type
;;(define-extern lightning-mole-yelp object) ;; unknown type
;;(define-extern *lightning-mole-hole* object) ;; unknown type
;;(define-extern lightning-mole-head-for-hole object) ;; unknown type
;;(define-extern lightning-mole-dive object) ;; unknown type
;;(define-extern lightning-mole-debug-run object) ;; unknown type
;;(define-extern fleeing-nav-enemy-debug object) ;; unknown type
;;(define-extern lightning-mole-debug-blend object) ;; unknown type


;; ----------------------
;; File - rolling-robber
;; Source Path - levels/rolling/rolling-robber.gc
;; Containing DGOs - ['L1', 'ROL']
;; Version - 3

;; - Types

; (deftype robber (process-drawable)
;   ((curve-position       float          :offset-assert 176)
;    (speed                float          :offset-assert 180)
;    (facing               vector :inline :offset-assert 192)
;    (tangent              vector :inline :offset-assert 208)
;    (run-blend-interp     float          :offset-assert 224)
;    (near-timer           int32          :offset-assert 228)
;    (far-time             uint64         :offset-assert 232)
;    (y-offset             float          :offset-assert 240)
;    (y-offset-desired     float          :offset-assert 244)
;    (y-vel                float          :offset-assert 248)
;    (water-height         float          :offset-assert 252)
;    (timeout              uint64         :offset-assert 256)
;    (last-ambient-time    uint64         :offset-assert 264)
;    (time-to-next-ambient uint64         :offset-assert 272)
;    )
;   :method-count-assert 20
;   :size-assert         #x118
;   :flag-assert         #x1400b00118
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

;; - Functions

(define-extern robber-find-ground function)
(define-extern robber-move function)
(define-extern robber-calc-speed function)
(define-extern robber-rotate function)
(define-extern robber-calc-anim-speed function)
(define-extern robber-task-complete? function)
(define-extern fuel-cell-init-as-spline-slider function)
(define-extern robber-event-handler function)

;; - Unknowns

;;(define-extern *robber-sg* object) ;; unknown type
;;(define-extern robber-die object) ;; unknown type
;;(define-extern robber-dead object) ;; unknown type
;;(define-extern robber-initial object) ;; unknown type
;;(define-extern robber-initial-notice object) ;; unknown type
;;(define-extern robber-flee object) ;; unknown type
;;(define-extern robber-got-away object) ;; unknown type
;;(define-extern robber-tired object) ;; unknown type
;;(define-extern robber-idle object) ;; unknown type
;;(define-extern fuel-cell-spline-slider object) ;; unknown type
;;(define-extern robber-debug object) ;; unknown type


;; ----------------------
;; File - rolling-race-ring
;; Source Path - levels/rolling/rolling-race-ring.gc
;; Containing DGOs - ['L1', 'ROL']
;; Version - 3

;; - Types

; (deftype race-ring (process-drawable)
;   ((rot-y                 float                 :offset-assert 176)
;    (face-vec              vector        :inline :offset-assert 192)
;    (part-track            uint64                :offset-assert 208)
;    (keep-part-track-alive basic                 :offset-assert 216)
;    (timeout               uint64                :offset-assert 224)
;    (alt-actor             basic                 :offset-assert 232)
;    (alt-task              uint8                 :offset-assert 236)
;    (cyl                   cylinder-flat :inline :offset-assert 240)
;    (old-hips              vector        :inline :offset-assert 288)
;    )
;   :method-count-assert 20
;   :size-assert         #x130
;   :flag-assert         #x1400c00130
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

;; - Functions

(define-extern first-ring? function)
(define-extern last-ring? function)
(define-extern race-ring-blue-set-particle-rotation-callback function)
(define-extern race-ring-set-particle-rotation-callback function)

;; - Unknowns

;;(define-extern *race-ring-sg* object) ;; unknown type
;;(define-extern race-ring-active object) ;; unknown type
;;(define-extern race-ring-wait object) ;; unknown type
;;(define-extern race-ring-idle object) ;; unknown type


;; ----------------------
;; File - firecanyon-obs
;; Source Path - levels/firecanyon/firecanyon-obs.gc
;; Containing DGOs - ['L1', 'FIC', 'OGR']
;; Version - 3

;; - Types

; (deftype balloon (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype spike (process-drawable)
;   ((num-alts int32  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb4
;   :flag-assert         #x14005000b4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype crate-darkeco-cluster (process-drawable)
;   ()
;   :method-count-assert 22
;   :size-assert         #xb0
;   :flag-assert         #x16004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

;; - Unknowns

;;(define-extern *crate-darkeco-cluster-sg* object) ;; unknown type
;;(define-extern *spike-sg* object) ;; unknown type
;;(define-extern spike-down object) ;; unknown type
;;(define-extern spike-idle object) ;; unknown type
;;(define-extern spike-up object) ;; unknown type
;;(define-extern balloon-idle object) ;; unknown type
;;(define-extern balloon-popping object) ;; unknown type


;; ----------------------
;; File - ogre-part
;; Source Path - levels/ogre/ogre-part.gc
;; Containing DGOs - ['L1', 'OGR']
;; Version - 3

;; - Types

; (deftype ogre-part (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;;  not enough basic ops
;   )


;; ----------------------
;; File - ogreboss
;; Source Path - levels/ogre/ogreboss.gc
;; Containing DGOs - ['L1', 'OGR']
;; Version - 3

;; - Types

; (deftype ogreboss-super-boulder (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; unrecognized get op: (set! v1 process-drawable) parent was UNKNOWN
;   )

; (deftype ogreboss-bounce-boulder (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; unrecognized get op: (set! v1 process-drawable) parent was UNKNOWN
;   )

; (deftype ogreboss-missile (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; unrecognized get op: (set! v1 process-drawable) parent was UNKNOWN
;   )

; (deftype ogreboss-missile-init-data (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; bad get label
;   )

; (deftype ogreboss (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;; unrecognized get op: (set! v1 process-drawable) parent was UNKNOWN
;   )

;; - Functions

(define-extern ogreboss-get-targets function)
(define-extern ogreboss-reset-camera function)
(define-extern ogreboss-trigger-steps function)
(define-extern ogreboss-submerge function)
(define-extern ogreboss-post function)
(define-extern ogreboss-spawn-super-boulder function)
(define-extern ogreboss-update-shuffling function)
(define-extern ogreboss-player-inside-range? function)
(define-extern ogreboss-super-boulder-init-by-other function)
(define-extern ogreboss-set-stage2-camera function)
(define-extern ogreboss-move-far function)
(define-extern ogreboss-roll-boulder function)
(define-extern ogreboss-update-super-boulder function)
(define-extern ogreboss-blend-hit-anim function)
(define-extern ogreboss-bounce-boulder-init-by-other function)
(define-extern ogreboss-set-stage1-camera function)
(define-extern ogreboss-move-near function)
(define-extern ogreboss-shoot-boulder function)
(define-extern ogreboss-inc-try-count function)
(define-extern ogreboss-emerge function)
(define-extern ogreboss-pick-target function)
(define-extern ogreboss-missile-init-by-other function)
(define-extern ogreboss-idle-loop function)
(define-extern ogreboss-super-boulder-impact-effect function)
(define-extern ogreboss-super-boulder-play-hit-anim function)
(define-extern ogreboss-rock-explosion-effect function)
(define-extern ogreboss-missile-scale-explosion function)
(define-extern ogreboss-super-boulder-event-handler function)
(define-extern ogreboss-bounce-boulder-event-handler function)
(define-extern ogreboss-debug-adjust-difficulty function)
(define-extern ogreboss-attack-event-handler function)

;; - Unknowns

;;(define-extern *ogreboss-sg* object) ;; unknown type
;;(define-extern *ogreboss* object) ;; unknown type
;;(define-extern ogreboss-dead object) ;; unknown type
;;(define-extern ogreboss-idle object) ;; unknown type
;;(define-extern ogreboss-die object) ;; unknown type
;;(define-extern ogreboss-stage1 object) ;; unknown type
;;(define-extern ogreboss-stage3-throw object) ;; unknown type
;;(define-extern ogreboss-stage3-shuffle object) ;; unknown type
;;(define-extern ogreboss-stage3-hit object) ;; unknown type
;;(define-extern ogreboss-stage2 object) ;; unknown type
;;(define-extern *ogreboss-cam-sg* object) ;; unknown type
;;(define-extern ogreboss-wait-for-player object) ;; unknown type
;;(define-extern ogreboss-intro object) ;; unknown type
;;(define-extern *ogreboss-column-sg* object) ;; unknown type
;;(define-extern *ogreboss-bounce-boulder-sg* object) ;; unknown type
;;(define-extern ogreboss-bounce-boulder-idle object) ;; unknown type
;;(define-extern *ogreboss-super-boulder-sg* object) ;; unknown type
;;(define-extern ogreboss-super-boulder-idle object) ;; unknown type
;;(define-extern ogreboss-super-boulder-roll object) ;; unknown type
;;(define-extern ogreboss-super-boulder-land object) ;; unknown type
;;(define-extern ogreboss-super-boulder-throw object) ;; unknown type
;;(define-extern ogreboss-super-boulder-hit object) ;; unknown type
;;(define-extern ogreboss-super-boulder-die object) ;; unknown type
;;(define-extern ogreboss-super-boulder-killed-player object) ;; unknown type
;;(define-extern *ogreboss-shoot-boulder-sg* object) ;; unknown type
;;(define-extern *ogreboss-missile-shadow-control* object) ;; unknown type
;;(define-extern ogreboss-missile-idle object) ;; unknown type
;;(define-extern *ogreboss-shoot-boulder-break-sg* object) ;; unknown type
;;(define-extern ogreboss-missile-impact object) ;; unknown type
;;(define-extern *ogreboss-shadow-control* object) ;; unknown type
;;(define-extern ogreboss-missile-seek object) ;; unknown type


;; ----------------------
;; File - ogre-obs
;; Source Path - levels/ogre/ogre-obs.gc
;; Containing DGOs - ['L1', 'OGR']
;; Version - 3

;; - Types

; (deftype tntbarrel (process-drawable)
;   ()
;   :method-count-assert 22
;   :size-assert         #xb0
;   :flag-assert         #x16004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; (deftype ogre-plat (rigid-body-platform)
;   ((anchor-point   vector :inline :offset-assert 736)
;    (idle-y-offset  float          :offset-assert 752)
;    (float-y-offset float          :offset-assert 756)
;    (delay          uint64         :offset-assert 760)
;    (active         basic          :offset-assert 768)
;    (triggered      basic          :offset-assert 772)
;    )
;   :method-count-assert 35
;   :size-assert         #x308
;   :flag-assert         #x2302a00308
;   ;; inherited inspect of rigid-body-platform
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     )
;   )

; (deftype ogre-step (ogre-plat)
;   ()
;   :method-count-assert 35
;   :size-assert         #x308
;   :flag-assert         #x2302a00308
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     )
;   )

; (deftype ogre-step-a (ogre-step)
;   ()
;   :method-count-assert 35
;   :size-assert         #x308
;   :flag-assert         #x2302a00308
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     )
;   )

; (deftype ogre-step-b (ogre-step)
;   ()
;   :method-count-assert 35
;   :size-assert         #x308
;   :flag-assert         #x2302a00308
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     )
;   )

; (deftype ogre-step-c (ogre-step)
;   ()
;   :method-count-assert 35
;   :size-assert         #x308
;   :flag-assert         #x2302a00308
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     )
;   )

; (deftype ogre-step-d (ogre-step)
;   ()
;   :method-count-assert 35
;   :size-assert         #x308
;   :flag-assert         #x2302a00308
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     )
;   )

; (deftype ogre-isle (ogre-plat)
;   ()
;   :method-count-assert 35
;   :size-assert         #x308
;   :flag-assert         #x2302a00308
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     )
;   )

; (deftype ogre-isle-b (ogre-isle)
;   ()
;   :method-count-assert 35
;   :size-assert         #x308
;   :flag-assert         #x2302a00308
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     )
;   )

; (deftype ogre-isle-c (ogre-isle)
;   ()
;   :method-count-assert 35
;   :size-assert         #x308
;   :flag-assert         #x2302a00308
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     )
;   )

; (deftype ogre-isle-d (ogre-isle)
;   ()
;   :method-count-assert 35
;   :size-assert         #x308
;   :flag-assert         #x2302a00308
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     )
;   )

; (deftype ogre-bridge (process-drawable)
;   ((joint-mod-array  UNKNOWN 8 :offset-assert 176)
;    (dead-joint-count int8      :offset-assert 208)
;    )
;   :method-count-assert 20
;   :size-assert         #xd1
;   :flag-assert         #x14007000d1
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype ogre-bridgeend (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype ogre-lava (water-anim)
;   ((idle-anim int32  :offset-assert 220)
;    (anim      int32  :offset-assert 224)
;    )
;   :method-count-assert 30
;   :size-assert         #xe4
;   :flag-assert         #x1e008000e4
;   ;; inherited inspect of water-anim
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

; (deftype shortcut-boulder (process-drawable)
;   ((broken-look lod-set :inline :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xd1
;   :flag-assert         #x14007000d1
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

;; - Functions

(define-extern ogre-bridge-update-joints function)

;; - Unknowns

;;(define-extern *shortcut-boulder-whole-sg* object) ;; unknown type
;;(define-extern *shortcut-boulder-broken-sg* object) ;; unknown type
;;(define-extern shortcut-boulder-idle object) ;; unknown type
;;(define-extern shortcut-boulder-break object) ;; unknown type
;;(define-extern ripple-for-ogre-lava object) ;; unknown type
;;(define-extern *ogre-bridgeend-sg* object) ;; unknown type
;;(define-extern ogre-bridgeend-idle object) ;; unknown type
;;(define-extern *ogre-bridge-sg* object) ;; unknown type
;;(define-extern *ogre-bridge-joint-array* object) ;; unknown type
;;(define-extern ogre-bridge-activated object) ;; unknown type
;;(define-extern ogre-bridge-idle object) ;; unknown type
;;(define-extern ogre-bridge-break object) ;; unknown type
;;(define-extern ogre-bridge-activate object) ;; unknown type
;;(define-extern *ogre-isle-d-sg* object) ;; unknown type
;;(define-extern *ogre-isle-b-sg* object) ;; unknown type
;;(define-extern *ogre-isle-constants* object) ;; unknown type
;;(define-extern *ogre-step-b-sg* object) ;; unknown type
;;(define-extern *ogre-step-c-sg* object) ;; unknown type
;;(define-extern *ogre-step-a-sg* object) ;; unknown type
;;(define-extern *ogre-step-constants* object) ;; unknown type
;;(define-extern *tntbarrel-sg* object) ;; unknown type
;;(define-extern *med-res-snow-sg* object) ;; unknown type
;;(define-extern *ogre-isle-a-sg* object) ;; unknown type
;;(define-extern *ogre-isle-c-sg* object) ;; unknown type


;; ----------------------
;; File - flying-lurker
;; Source Path - levels/ogre/flying-lurker.gc
;; Containing DGOs - ['L1', 'OGR']
;; Version - 3

;; - Types

; (deftype plunger-lurker (process-drawable)
;   ((alt-actor basic  :offset-assert 176)
;    (got-hit   basic  :offset-assert 180)
;    )
;   :method-count-assert 20
;   :size-assert         #xb8
;   :flag-assert         #x14005000b8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype flying-lurker (process-drawable)
;   ((curve-position    float          :offset-assert 176)
;    (speed             float          :offset-assert 180)
;    (tangent           vector :inline :offset-assert 192)
;    (anim-blend        float          :offset-assert 208)
;    (y-offset          float          :offset-assert 212)
;    (y-offset-desired  float          :offset-assert 216)
;    (y-vel             float          :offset-assert 220)
;    (last-look-time    uint64         :offset-assert 224)
;    (time-to-next-look uint64         :offset-assert 232)
;    (take-off          basic          :offset-assert 240)
;    (race-seconds      float          :offset-assert 244)
;    (race-start-time   uint64         :offset-assert 248)
;    (rank              int32          :offset-assert 256)
;    (alt-actor         basic          :offset-assert 260)
;    (alt-trans         vector         :offset-assert 264)
;    (shadow-backup     basic          :offset-assert 268)
;    (try-count         uint8          :offset-assert 272)
;    (try-counted       basic          :offset-assert 276)
;    (default-bounds    vector :inline :offset-assert 288)
;    )
;   :method-count-assert 21
;   :size-assert         #x130
;   :flag-assert         #x1500c00130
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

;; - Functions

(define-extern play-movie? function)
(define-extern flying-lurker-move function)
(define-extern flying-lurker-rotate function)
(define-extern first? function)
(define-extern flying-lurker-handler function)
(define-extern flying-lurker-play-intro function)
(define-extern flying-lurker-inc-try-count function)
(define-extern flying-lurker-calc-anim-speed function)
(define-extern flying-lurker-calc-speed function)

;; - Unknowns

;;(define-extern *flying-lurker-sg* object) ;; unknown type
;;(define-extern flying-lurker-die object) ;; unknown type
;;(define-extern flying-lurker-idle object) ;; unknown type
;;(define-extern flying-lurker-start object) ;; unknown type
;;(define-extern flying-lurker-clone object) ;; unknown type
;;(define-extern flying-lurker-sleep object) ;; unknown type
;;(define-extern *ogrecam-sg* object) ;; unknown type
;;(define-extern flying-lurker-fly object) ;; unknown type
;;(define-extern *plunger-lurker-sg* object) ;; unknown type
;;(define-extern plunger-lurker-die object) ;; unknown type
;;(define-extern plunger-lurker-idle object) ;; unknown type
;;(define-extern plunger-lurker-flee object) ;; unknown type
;;(define-extern plunger-lurker-plunge object) ;; unknown type


;; ----------------------
;; File - village3-part
;; Source Path - levels/village3/village3-part.gc
;; Containing DGOs - ['L1', 'VI3']
;; Version - 3

;; - Types

; (deftype villagec-part (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;;  not enough basic ops
;   )


;; ----------------------
;; File - village3-obs
;; Source Path - levels/village3/village3-obs.gc
;; Containing DGOs - ['L1', 'VI3']
;; Version - 3

;; - Types

; (deftype villagec-lava (water-anim)
;   ()
;   :method-count-assert 30
;   :size-assert         #xdc
;   :flag-assert         #x1e007000dc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

; (deftype gondola (process-drawable)
;   ((anim           basic              :offset-assert 176)
;    (old-target-pos transformq :inline :offset-assert 192)
;    )
;   :method-count-assert 23
;   :size-assert         #xf0
;   :flag-assert         #x17008000f0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     )
;   )

; (deftype pistons (process-drawable)
;   ()
;   :method-count-assert 22
;   :size-assert         #xb0
;   :flag-assert         #x16004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; (deftype gondolacables (process-drawable)
;   ()
;   :method-count-assert 21
;   :size-assert         #xb0
;   :flag-assert         #x15004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

;; - Unknowns

;;(define-extern *gondolacables-sg* object) ;; unknown type
;;(define-extern *pistons-sg* object) ;; unknown type
;;(define-extern *gondola-sg* object) ;; unknown type
;;(define-extern ripple-for-villagec-lava object) ;; unknown type
;;(define-extern *med-res-ogre-sg* object) ;; unknown type
;;(define-extern *med-res-ogre2-sg* object) ;; unknown type
;;(define-extern *med-res-ogre3-sg* object) ;; unknown type
;;(define-extern *med-res-finalboss-sg* object) ;; unknown type


;; ----------------------
;; File - minecart
;; Source Path - levels/village3/minecart.gc
;; Containing DGOs - ['L1', 'VI3']
;; Version - 3

;; - Types

; (deftype minecartsteel (process-drawable)
;   ((index int32             :offset-assert 176)
;    (anim  basic             :offset-assert 180)
;    (sync  sync-info :inline :offset-assert 184)
;    )
;   :method-count-assert 21
;   :size-assert         #xc0
;   :flag-assert         #x15005000c0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

;; - Functions

(define-extern minecartsteel-initialize-by-other function)

;; - Unknowns

;;(define-extern *minecartsteel-sg* object) ;; unknown type


;; ----------------------
;; File - miners
;; Source Path - levels/village3/miners.gc
;; Containing DGOs - ['L1', 'VI3']
;; Version - 3

;; - Types

; (deftype minertall (process-taskable)
;   ()
;   :method-count-assert 53
;   :size-assert         #x17c
;   :flag-assert         #x350110017c
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

; (deftype minershort (process-taskable)
;   ((other-miner basic  :offset-assert 380)
;    )
;   :method-count-assert 53
;   :size-assert         #x180
;   :flag-assert         #x3501100180
;   ;; inherited inspect of process-taskable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

; (deftype cavegem (process-drawable)
;   ()
;   :method-count-assert 21
;   :size-assert         #xb0
;   :flag-assert         #x15004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

;; - Functions

(define-extern minershort-trans-hook function)
(define-extern miners-anim-loop function)

;; - Unknowns

;;(define-extern *cavegem-sg* object) ;; unknown type
;;(define-extern *minershort-sg* object) ;; unknown type
;;(define-extern *minertall-sg* object) ;; unknown type


;; ----------------------
;; File - assistant-village3
;; Source Path - levels/village3/assistant-village3.gc
;; Containing DGOs - ['L1', 'VI3']
;; Version - 3

;; - Types

; (deftype assistant-villagec (process-taskable)
;   ()
;   :method-count-assert 53
;   :size-assert         #x17c
;   :flag-assert         #x350110017c
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

;; - Unknowns

;;(define-extern *assistant-village3-sg* object) ;; unknown type


;; ----------------------
;; File - sage-village3
;; Source Path - levels/village3/sage-village3.gc
;; Containing DGOs - ['L1', 'VI3']
;; Version - 3

;; - Types

; (deftype sage-villagec (process-taskable)
;   ((evilbro   uint64  :offset-assert 384)
;    (evilsis   uint64  :offset-assert 392)
;    (assistant basic   :offset-assert 400)
;    )
;   :method-count-assert 53
;   :size-assert         #x194
;   :flag-assert         #x3501300194
;   ;; inherited inspect of process-taskable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

;; - Unknowns

;;(define-extern *sage-village3-sg* object) ;; unknown type
;;(define-extern *evilbro-village3-sg* object) ;; unknown type
;;(define-extern *evilsis-village3-sg* object) ;; unknown type


;; ----------------------
;; File - cave-trap
;; Source Path - levels/robocave/cave-trap.gc
;; Containing DGOs - ['L1', 'ROB']
;; Version - 3

;; - Types

; (deftype cave-trap (process-drawable)
;   ((spider-count    int32          :offset-assert 176)
;    (alt-actors      basic          :offset-assert 180)
;    (spawn-delay     uint64         :offset-assert 184)
;    (last-spawn-time uint64         :offset-assert 192)
;    (debug-targ-pos  vector :inline :offset-assert 208)
;    )
;   :method-count-assert 21
;   :size-assert         #xe0
;   :flag-assert         #x15007000e0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; (deftype spider-vent (process-drawable)
;   ((last-spawn-time uint64  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb8
;   :flag-assert         #x14005000b8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype spawn-baby-spider-best (structure)
;   ((index int32  :offset-assert 0)
;    (dist  float  :offset-assert 4)
;    )
;   :method-count-assert 9
;   :size-assert         #x8
;   :flag-assert         #x900000008
;   )

; (deftype spawn-baby-spider-work (structure)
;   ((best UNKNOWN 4 :offset-assert 0)
;    )
;   :method-count-assert 9
;   :size-assert         #x40
;   :flag-assert         #x900000040
;   )

;; - Functions

(define-extern cave-trap-default-event-handler function)

;; - Unknowns

;;(define-extern cave-trap-idle object) ;; unknown type
;;(define-extern cave-trap-give-up object) ;; unknown type
;;(define-extern cave-trap-active object) ;; unknown type
;;(define-extern spider-vent-idle object) ;; unknown type


;; ----------------------
;; File - spider-egg
;; Source Path - levels/robocave/spider-egg.gc
;; Containing DGOs - ['L1', 'ROB']
;; Version - 3

;; - Types

; (deftype spider-egg (process-drawable)
;   ((notify-actor basic           :offset-assert 176)
;    (broken-look  lod-set :inline :offset-assert 180)
;    )
;   :method-count-assert 20
;   :size-assert         #xd5
;   :flag-assert         #x14007000d5
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

;; - Unknowns

;;(define-extern *spider-egg-unbroken-sg* object) ;; unknown type
;;(define-extern *spider-egg-broken-sg* object) ;; unknown type
;;(define-extern spider-egg-idle object) ;; unknown type
;;(define-extern spider-egg-hatch object) ;; unknown type
;;(define-extern spider-egg-die object) ;; unknown type


;; ----------------------
;; File - robocave-part
;; Source Path - levels/robocave/robocave-part.gc
;; Containing DGOs - ['L1', 'ROB']
;; Version - 3

;; - Types

; (deftype robocave-part (part-spawner)
;   ()
;   :method-count-assert 21
;   :size-assert         #xd0
;   :flag-assert         #x15006000d0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )


;; ----------------------
;; File - target-snowball
;; Source Path - levels/snow/target-snowball.gc
;; Containing DGOs - ['L1', 'SNO']
;; Version - 3

;; - Types

; (deftype snowball-info (basic)
;   ((entity basic  :offset-assert 4)
;    )
;   :method-count-assert 9
;   :size-assert         #x8
;   :flag-assert         #x900000008
;   )

; (deftype snowball-bank (basic)
;   ()
;   :method-count-assert 9
;   :size-assert         #x4
;   :flag-assert         #x900000004
;   )

;; - Functions

(define-extern target-snowball-post function)

;; - Unknowns

;;(define-extern target-snowball object) ;; unknown type
;;(define-extern *SNOWBALL-bank* object) ;; unknown type


;; ----------------------
;; File - target-ice
;; Source Path - levels/snow/target-ice.gc
;; Containing DGOs - ['L1', 'SNO']
;; Version - 3

;; - Nothing Defined in This File!


;; ----------------------
;; File - ice-cube
;; Source Path - levels/snow/ice-cube.gc
;; Containing DGOs - ['L1', 'SNO']
;; Version - 3

;; - Types

; (deftype ice-cube (nav-enemy)
;   ((part2                  basic          :offset-assert 400)
;    (part3                  basic          :offset-assert 404)
;    (part4                  basic          :offset-assert 408)
;    (track-target?          basic          :offset-assert 412)
;    (slow-down?             basic          :offset-assert 416)
;    (tracking-player?       basic          :offset-assert 420)
;    (force-spawn-pt         int32          :offset-assert 424)
;    (speed                  float          :offset-assert 428)
;    (anim-blend             float          :offset-assert 432)
;    (prev-charge-angle-diff float          :offset-assert 436)
;    (charge-angle           float          :offset-assert 440)
;    (ground-y               float          :offset-assert 444)
;    (cprims-type            uint64         :offset-assert 448)
;    (next-skid-sound-time   uint64         :offset-assert 456)
;    (starting-pos           vector :inline :offset-assert 464)
;    (target-pt              vector :inline :offset-assert 480)
;    )
;   :method-count-assert 76
;   :size-assert         #x1f0
;   :flag-assert         #x4c018001f0
;   ;; inherited inspect of nav-enemy
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

;; - Functions

(define-extern ice-cube-default-event-handler function)

;; - Unknowns

;;(define-extern *ice-cube-break-sg* object) ;; unknown type
;;(define-extern ice-cube-face-player object) ;; unknown type
;;(define-extern ice-cube-tired object) ;; unknown type
;;(define-extern ice-cube-retract-spikes object) ;; unknown type
;;(define-extern ice-cube-mean-charge-done object) ;; unknown type
;;(define-extern ice-cube-mean-turn-to-charge object) ;; unknown type
;;(define-extern ice-cube-become-mean object) ;; unknown type
;;(define-extern ice-cube-appear-land object) ;; unknown type
;;(define-extern ice-cube-appear object) ;; unknown type
;;(define-extern ice-cube-trying-to-appear object) ;; unknown type
;;(define-extern *ice-cube-sg* object) ;; unknown type
;;(define-extern *ice-cube-nav-enemy-info* object) ;; unknown type
;;(define-extern ice-cube-shatter object) ;; unknown type
;;(define-extern ice-cube-mean-charge object) ;; unknown type


;; ----------------------
;; File - snow-ball
;; Source Path - levels/snow/snow-ball.gc
;; Containing DGOs - ['L1', 'SNO']
;; Version - 3

;; - Types

; (deftype snow-ball-shadow (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype snow-ball-junction (structure)
;   ((enter-time uint64  :offset-assert 0)
;    (exit-time  uint64  :offset-assert 8)
;    )
;   :method-count-assert 9
;   :size-assert         #x10
;   :flag-assert         #x900000010
;   )

; (deftype snow-ball-path-info (structure)
;   ((hug-path? basic          :offset-assert 0)
;    (path-pos  vector :inline :offset-assert 16)
;    )
;   :method-count-assert 9
;   :size-assert         #x20
;   :flag-assert         #x900000020
;   )

; (deftype snow-ball-roller (process-drawable)
;   ((which-path             int32                       :offset-assert 176)
;    (path-u                 float                       :offset-assert 180)
;    (path-speed             float                       :offset-assert 184)
;    (path-length            float                       :offset-assert 188)
;    (path-fall-u            float                       :offset-assert 192)
;    (path-coming-out-u      float                       :offset-assert 196)
;    (path-faded-up-u        float                       :offset-assert 200)
;    (delay-til-bounce       int32                       :offset-assert 204)
;    (rolling-sound-id       sound-id                    :offset-assert 208)
;    (rolling-sound-enabled? basic                       :offset-assert 212)
;    (last-bounce-time       uint64                      :offset-assert 216)
;    (hit-player-time        uint64                      :offset-assert 224)
;    (path-info              snow-ball-path-info :inline :offset-assert 240)
;    (junctions              UNKNOWN             4       :offset-assert 272)
;    )
;   :method-count-assert 23
;   :size-assert         #x150
;   :flag-assert         #x1700e00150
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     )
;   )

; (deftype snow-ball (process)
;   ((state-time             uint64    :offset-assert 112)
;    (last-path-picked       int32     :offset-assert 120)
;    (same-path-picked-count int32     :offset-assert 124)
;    (delay-til-next         int32     :offset-assert 128)
;    (path                   UNKNOWN 2 :offset-assert 132)
;    )
;   :method-count-assert 16
;   :size-assert         #x8c
;   :flag-assert         #x100020008c
;   ;; inherited inspect of process
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     )
;   )

;; - Functions

(define-extern snow-ball-roller-init-by-other function)
(define-extern snow-ball-shadow-init-by-other function)
(define-extern snow-ball-roller-path-update function)
(define-extern snow-ball-roller-path-init function)

;; - Unknowns

;;(define-extern snow-ball-idle object) ;; unknown type
;;(define-extern *snow-ball-sg* object) ;; unknown type
;;(define-extern snow-ball-roller-idle object) ;; unknown type
;;(define-extern *snow-ball-shadow-sg* object) ;; unknown type
;;(define-extern *snow-ball-shadow-control* object) ;; unknown type
;;(define-extern snow-ball-shadow-idle object) ;; unknown type


;; ----------------------
;; File - snow-obs
;; Source Path - levels/snow/snow-obs.gc
;; Containing DGOs - ['L1', 'SNO']
;; Version - 3

;; - Types

; (deftype snowcam (pov-camera)
;   ((seq uint64  :offset-assert 224)
;    )
;   :method-count-assert 30
;   :size-assert         #xe8
;   :flag-assert         #x1e008000e8
;   ;; inherited inspect of pov-camera
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

; (deftype snow-eggtop (process-drawable)
;   ((spawn-trans vector :inline :offset-assert 176)
;    (play-sound? basic          :offset-assert 192)
;    )
;   :method-count-assert 20
;   :size-assert         #xc4
;   :flag-assert         #x14006000c4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype snowpusher (process-drawable)
;   ((max-frame   float                    :offset-assert 176)
;    (open-sound  uint128                  :offset-assert 192)
;    (close-sound uint128                  :offset-assert 208)
;    (sync        sync-info-paused :inline :offset-assert 224)
;    )
;   :method-count-assert 20
;   :size-assert         #xf0
;   :flag-assert         #x14008000f0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype snow-spatula (baseplat)
;   ((sync     sync-info :inline :offset-assert 228)
;    (startmat matrix    :inline :offset-assert 240)
;    )
;   :method-count-assert 27
;   :size-assert         #x130
;   :flag-assert         #x1b00c00130
;   ;; inherited inspect of baseplat
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     )
;   )

; (deftype snow-fort-gate (process-drawable)
;   ((part2        basic          :offset-assert 176)
;    (part3        basic          :offset-assert 180)
;    (open-trans   vector :inline :offset-assert 192)
;    (closed-trans vector :inline :offset-assert 208)
;    )
;   :method-count-assert 20
;   :size-assert         #xe0
;   :flag-assert         #x14007000e0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype snow-gears (process-drawable)
;   ()
;   :method-count-assert 21
;   :size-assert         #xb0
;   :flag-assert         #x15004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

; (deftype snow-switch (process-drawable)
;   ((pressed?     basic          :offset-assert 176)
;    (fcell-handle uint64         :offset-assert 184)
;    (orig-trans   vector :inline :offset-assert 192)
;    )
;   :method-count-assert 20
;   :size-assert         #xd0
;   :flag-assert         #x14006000d0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype snow-log (process-drawable)
;   ((master basic  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb4
;   :flag-assert         #x14005000b4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype snow-log-button (process-drawable)
;   ((log        basic          :offset-assert 176)
;    (orig-trans vector :inline :offset-assert 192)
;    )
;   :method-count-assert 20
;   :size-assert         #xd0
;   :flag-assert         #x14006000d0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

;; - Functions

(define-extern snow-switch-event-handler function)
(define-extern snow-log-button-event-handler function)

;; - Unknowns

;;(define-extern *snow-switch-sg* object) ;; unknown type
;;(define-extern snow-log-button-idle-down object) ;; unknown type
;;(define-extern snow-log-button-idle-up object) ;; unknown type
;;(define-extern snow-log-button-activate object) ;; unknown type
;;(define-extern *snow-log-sg* object) ;; unknown type
;;(define-extern snow-log-wait-for-master object) ;; unknown type
;;(define-extern snow-log-active object) ;; unknown type
;;(define-extern snow-log-activate object) ;; unknown type
;;(define-extern snow-log-hidden object) ;; unknown type
;;(define-extern snow-switch-idle-down object) ;; unknown type
;;(define-extern snow-switch-idle-up object) ;; unknown type
;;(define-extern *snowcam-sg* object) ;; unknown type
;;(define-extern snow-switch-activate object) ;; unknown type
;;(define-extern *snow-gears-sg* object) ;; unknown type
;;(define-extern snow-gears-idle object) ;; unknown type
;;(define-extern snow-gears-stopped object) ;; unknown type
;;(define-extern snow-gears-halt object) ;; unknown type
;;(define-extern snow-gears-activate object) ;; unknown type
;;(define-extern *snow-fort-gate-sg* object) ;; unknown type
;;(define-extern snow-fort-gate-idle-open object) ;; unknown type
;;(define-extern snow-fort-gate-idle-closed object) ;; unknown type
;;(define-extern snow-fort-gate-activate object) ;; unknown type
;;(define-extern *snow-spatula-sg* object) ;; unknown type
;;(define-extern snow-spatula-idle object) ;; unknown type
;;(define-extern *snowpusher-sg* object) ;; unknown type
;;(define-extern snowpusher-idle object) ;; unknown type
;;(define-extern *snow-eggtop-sg* object) ;; unknown type
;;(define-extern snow-eggtop-idle-down object) ;; unknown type
;;(define-extern snow-eggtop-idle-up object) ;; unknown type
;;(define-extern snow-eggtop-activate object) ;; unknown type


;; ----------------------
;; File - snow-flutflut-obs
;; Source Path - levels/snow/snow-flutflut-obs.gc
;; Containing DGOs - ['L1', 'SNO']
;; Version - 3

;; - Types

; (deftype flutflut-plat (plat)
;   ((has-path?           basic              :offset-assert 264)
;    (plat-type           int32              :offset-assert 268)
;    (rise-time           int32              :offset-assert 272)
;    (fall-time           int32              :offset-assert 276)
;    (part-ry             float              :offset-assert 280)
;    (sync-starting-val   float              :offset-assert 284)
;    (flutflut-button     basic              :offset-assert 288)
;    (appear-trans-top    vector     :inline :offset-assert 304)
;    (appear-trans-bottom vector     :inline :offset-assert 320)
;    (appear-quat-top     quaternion :inline :offset-assert 336)
;    (appear-quat-bottom  quaternion :inline :offset-assert 352)
;    (start-trans         vector     :inline :offset-assert 368)
;    )
;   :method-count-assert 33
;   :size-assert         #x180
;   :flag-assert         #x2101100180
;   ;; inherited inspect of plat
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     )
;   )

; (deftype snow-button (process-drawable)
;   ((wiggled?         basic          :offset-assert 176)
;    (timeout          uint64         :offset-assert 184)
;    (delay-til-wiggle uint64         :offset-assert 192)
;    (prev-button      basic          :offset-assert 200)
;    (ticker           ticky  :inline :offset-assert 208)
;    )
;   :method-count-assert 20
;   :size-assert         #xf0
;   :flag-assert         #x14008000f0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype flutflut-plat-small (flutflut-plat)
;   ()
;   :method-count-assert 33
;   :size-assert         #x180
;   :flag-assert         #x2101100180
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     )
;   )

; (deftype flutflut-plat-med (flutflut-plat)
;   ()
;   :method-count-assert 33
;   :size-assert         #x180
;   :flag-assert         #x2101100180
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     )
;   )

; (deftype flutflut-plat-large (flutflut-plat)
;   ()
;   :method-count-assert 33
;   :size-assert         #x180
;   :flag-assert         #x2101100180
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     )
;   )

;; - Unknowns

;;(define-extern *flutflut-plat-large-sg* object) ;; unknown type
;;(define-extern *flutflut-plat-med-sg* object) ;; unknown type
;;(define-extern *flutflut-plat-small-sg* object) ;; unknown type
;;(define-extern elevator-idle-at-cave object) ;; unknown type
;;(define-extern elevator-travel-to-cave object) ;; unknown type
;;(define-extern elevator-idle-at-fort object) ;; unknown type
;;(define-extern elevator-travel-to-fort object) ;; unknown type
;;(define-extern flutflut-plat-hidden-idle object) ;; unknown type
;;(define-extern flutflut-plat-hide object) ;; unknown type
;;(define-extern flutflut-plat-appear object) ;; unknown type
;;(define-extern *snow-button-sg* object) ;; unknown type
;;(define-extern snow-button-up-idle object) ;; unknown type
;;(define-extern snow-button-deactivate object) ;; unknown type
;;(define-extern snow-button-activate object) ;; unknown type


;; ----------------------
;; File - snow-bumper
;; Source Path - levels/snow/snow-bumper.gc
;; Containing DGOs - ['L1', 'SNO']
;; Version - 3

;; - Types

; (deftype snow-bumper (process-drawable)
;   ((bumper-id               int32   :offset-assert 176)
;    (base-shove-ry           float   :offset-assert 180)
;    (max-shove-diff-ry       float   :offset-assert 184)
;    (part2                   basic   :offset-assert 188)
;    (last-shoved-player-time uint64  :offset-assert 192)
;    )
;   :method-count-assert 22
;   :size-assert         #xc8
;   :flag-assert         #x16006000c8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

;; - Unknowns

;;(define-extern *snow-bumper-sg* object) ;; unknown type
;;(define-extern snow-bumper-spawn-fuel-cell object) ;; unknown type
;;(define-extern snow-bumper-inactive-idle object) ;; unknown type
;;(define-extern snow-bumper-active-far-idle object) ;; unknown type
;;(define-extern snow-bumper-deactivate object) ;; unknown type
;;(define-extern snow-bumper-active-close-idle object) ;; unknown type


;; ----------------------
;; File - snow-ram-h
;; Source Path - levels/snow/snow-ram-h.gc
;; Containing DGOs - ['L1', 'SNO']
;; Version - 3

;; - Types

; (deftype ram (process-drawable)
;   ((ram-id              int32          :offset-assert 176)
;    (give-fuel-cell?     basic          :offset-assert 180)
;    (give-fuel-cell-anim basic          :offset-assert 184)
;    (part2               basic          :offset-assert 188)
;    (orient-ry           float          :offset-assert 192)
;    (fuel-cell-dest-pos  vector :inline :offset-assert 208)
;    )
;   :method-count-assert 23
;   :size-assert         #xe0
;   :flag-assert         #x17007000e0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     )
;   )


;; ----------------------
;; File - snow-ram-boss
;; Source Path - levels/snow/snow-ram-boss.gc
;; Containing DGOs - ['L1', 'SNO']
;; Version - 3

;; - Types

; (deftype ram-boss-proj (projectile)
;   ((part2           basic          :offset-assert 412)
;    (launched?       basic          :offset-assert 416)
;    (growth          float          :offset-assert 420)
;    (charge-sound-id sound-id       :offset-assert 424)
;    (launch-time     uint64         :offset-assert 432)
;    (facing-dir      vector :inline :offset-assert 448)
;    )
;   :method-count-assert 29
;   :size-assert         #x1d0
;   :flag-assert         #x1d016001d0
;   ;; inherited inspect of projectile
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     )
;   )

; (deftype ram-boss (nav-enemy)
;   ((facing-y                 float          :offset-assert 400)
;    (player-dir-y             float          :offset-assert 404)
;    (last-turn-speed          float          :offset-assert 408)
;    (frustration              int32          :offset-assert 412)
;    (dead?                    basic          :offset-assert 416)
;    (has-shield?              basic          :offset-assert 420)
;    (proj-stoked              basic          :offset-assert 424)
;    (proj-status              uint64         :offset-assert 432)
;    (part2                    basic          :offset-assert 440)
;    (proj-last-thrown-time    uint64         :offset-assert 448)
;    (nav-enemy-patrol-timeout uint64         :offset-assert 456)
;    (proj-launch-vec          vector :inline :offset-assert 464)
;    (local-throw-point        vector :inline :offset-assert 480)
;    (shield-jmod              basic          :offset-assert 496)
;    )
;   :method-count-assert 76
;   :size-assert         #x1f4
;   :flag-assert         #x4c019001f4
;   ;; inherited inspect of nav-enemy
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

;; - Functions

(define-extern snow-ram-proj-update-velocity function)
(define-extern ram-boss-on-ground-event-handler function)
(define-extern ram-boss-init-by-other function)

;; - Unknowns

;;(define-extern ram-boss-tracking object) ;; unknown type
;;(define-extern *ram-boss-nav-enemy-info-no-shield* object) ;; unknown type
;;(define-extern ram-boss-nav-resume object) ;; unknown type
;;(define-extern ram-boss-throw object) ;; unknown type
;;(define-extern ram-boss-nav-start object) ;; unknown type
;;(define-extern ram-boss-jump-down-hit-ground object) ;; unknown type
;;(define-extern ram-boss-jump-down object) ;; unknown type
;;(define-extern ram-boss-already-down object) ;; unknown type
;;(define-extern ram-boss-idle object) ;; unknown type
;;(define-extern *ram-boss-sg* object) ;; unknown type
;;(define-extern *ram-boss-nav-enemy-info* object) ;; unknown type
;;(define-extern ram-boss-lose-shield object) ;; unknown type
;;(define-extern ram-boss-up-defend-block object) ;; unknown type
;;(define-extern ram-boss-forward-defend-block object) ;; unknown type
;;(define-extern ram-boss-proj-launch object) ;; unknown type
;;(define-extern ram-boss-proj-growing object) ;; unknown type
;;(define-extern ram-boss-show-anims object) ;; unknown type


;; ----------------------
;; File - snow-ram
;; Source Path - levels/snow/snow-ram.gc
;; Containing DGOs - ['L1', 'SNO']
;; Version - 3

;; - Unknowns

;;(define-extern *ram-sg* object) ;; unknown type
;;(define-extern ram-fun-idle object) ;; unknown type
;;(define-extern ram-idle object) ;; unknown type
;;(define-extern ram-give-fuel-cell object) ;; unknown type


;; ----------------------
;; File - snow-part
;; Source Path - levels/snow/snow-part.gc
;; Containing DGOs - ['L1', 'SNO']
;; Version - 3

;; - Types

; (deftype snow-part (part-spawner)
;   ()
;   :method-count-assert 21
;   :size-assert         #xd0
;   :flag-assert         #x15006000d0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     )
;   )

;; - Functions

(define-extern snow-bird-bob-func function)
(define-extern sparticle-snow-birds-moon function)


;; ----------------------
;; File - yeti
;; Source Path - levels/snow/yeti.gc
;; Containing DGOs - ['L1', 'SNO']
;; Version - 3

;; - Types

; (deftype yeti-slave (nav-enemy)
;   ((ground-y float  :offset-assert 400)
;    (part2    basic  :offset-assert 404)
;    )
;   :method-count-assert 76
;   :size-assert         #x198
;   :flag-assert         #x4c01300198
;   ;; inherited inspect of nav-enemy
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     (dummy-53 () none 53)
;     (dummy-54 () none 54)
;     (dummy-55 () none 55)
;     (dummy-56 () none 56)
;     (dummy-57 () none 57)
;     (dummy-58 () none 58)
;     (dummy-59 () none 59)
;     (dummy-60 () none 60)
;     (dummy-61 () none 61)
;     (dummy-62 () none 62)
;     (dummy-63 () none 63)
;     (dummy-64 () none 64)
;     (dummy-65 () none 65)
;     (dummy-66 () none 66)
;     (dummy-67 () none 67)
;     (dummy-68 () none 68)
;     (dummy-69 () none 69)
;     (dummy-70 () none 70)
;     (dummy-71 () none 71)
;     (dummy-72 () none 72)
;     (dummy-73 () none 73)
;     (dummy-74 () none 74)
;     (dummy-75 () none 75)
;     )
;   )

; (deftype yeti (process-drawable)
;   ((desired-num-children  int32   :offset-assert 176)
;    (spawn-delay           int32   :offset-assert 180)
;    (first-time-spawn-dist float   :offset-assert 184)
;    (state-time            uint64  :offset-assert 168)
;    )
;   :method-count-assert 22
;   :size-assert         #xc8
;   :flag-assert         #x16006000c8
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

;; - Functions

(define-extern yeti-slave-init-by-other function)
(define-extern yeti-slave-default-event-handler function)

;; - Unknowns

;;(define-extern yeti-resuming-start object) ;; unknown type
;;(define-extern yeti-first-time-start object) ;; unknown type
;;(define-extern yeti-idle object) ;; unknown type
;;(define-extern yeti-slave-appear-jump-up object) ;; unknown type
;;(define-extern *yeti-sg* object) ;; unknown type
;;(define-extern *yeti-nav-enemy-info* object) ;; unknown type
;;(define-extern yeti-slave-appear-land object) ;; unknown type
;;(define-extern yeti-slave-show-anims object) ;; unknown type


;; ----------------------
;; File - eichar-pole+0-ag-L1
;; Source Path - levels/l1_only/eichar-pole+0-ag-L1.gd
;; Containing DGOs - ['L1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - eichar-pole+0-ag-ROB
;; Source Path - levels/rolling/eichar-pole+0-ag-ROB.gd
;; Containing DGOs - ['ROB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - eichar-pole+0-ag-SNO
;; Source Path - levels/snow/eichar-pole+0-ag-SNO.gd
;; Containing DGOs - ['SNO']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - eichar-pole+0-ag-SWA
;; Source Path - levels/swamp/eichar-pole+0-ag-SWA.gd
;; Containing DGOs - ['SWA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - eichar-ice+0-ag
;; Source Path - levels/snow/eichar-ice+0-ag.gd
;; Containing DGOs - ['L1', 'SNO']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - lavatube-obs
;; Source Path - levels/lavatube/lavatube-obs.gc
;; Containing DGOs - ['L1', 'LAV']
;; Version - 3

;; - Types

; (deftype lavabase (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype lavafall (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype lavashortcut (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype darkecobarrel-leak (structure)
;   ((offset      vector :inline :offset-assert 0)
;    (first-frame basic          :offset-assert 16)
;    )
;   :method-count-assert 9
;   :size-assert         #x14
;   :flag-assert         #x900000014
;   )

; (deftype darkecobarrel-base (process-drawable)
;   ((speed float   :offset-assert 176)
;    (sync  uint64  :offset-assert 184)
;    )
;   :method-count-assert 20
;   :size-assert         #xc0
;   :flag-assert         #x14005000c0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype darkecobarrel-mover (darkecobarrel-base)
;   ((start-time   uint64                      :offset-assert 192)
;    (hits         int32                       :offset-assert 200)
;    (leak         UNKNOWN             1       :offset-assert 208)
;    (y-offset     bouncing-float      :inline :offset-assert 240)
;    (y-offset-tgt delayed-rand-float  :inline :offset-assert 280)
;    (down         oscillating-vector  :inline :offset-assert 320)
;    (down-tgt     delayed-rand-vector :inline :offset-assert 384)
;    )
;   :method-count-assert 20
;   :size-assert         #x1b0
;   :flag-assert         #x14014001b0
;   ;; inherited inspect of darkecobarrel-base
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype darkecobarrel (darkecobarrel-base)
;   ((spawn-array basic  :offset-assert 192)
;    (cur-spawn   int32  :offset-assert 196)
;    )
;   :method-count-assert 20
;   :size-assert         #xc8
;   :flag-assert         #x14006000c8
;   ;; inherited inspect of darkecobarrel-base
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype lavafallsewera (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype lavafallsewerb (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype chainmine (process-drawable)
;   ()
;   :method-count-assert 22
;   :size-assert         #xb0
;   :flag-assert         #x16004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; (deftype lavaballoon (process-drawable)
;   ((move-per-tick float  :offset-assert 176)
;    )
;   :method-count-assert 22
;   :size-assert         #xb4
;   :flag-assert         #x16005000b4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     )
;   )

; (deftype lavatube-lava (water-anim)
;   ()
;   :method-count-assert 30
;   :size-assert         #xdc
;   :flag-assert         #x1e007000dc
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     )
;   )

; (deftype lavayellowtarp (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

;; - Functions

(define-extern darkecobarrel-base-init function)
(define-extern darkecobarrel-base-time function)
(define-extern darkecobarrel-cycle-time function)
(define-extern darkecobarrel-advance-curspawn function)
(define-extern darkecobarrel-mover-init-by-other function)
(define-extern darkecobarrel-base-done? function)
(define-extern darkecobarrel-base-pos function)
(define-extern darkecobarrel-mover-pos function)

;; - Unknowns

;;(define-extern *lavayellowtarp-sg* object) ;; unknown type
;;(define-extern lavayellowtarp-idle object) ;; unknown type
;;(define-extern ripple-for-lavatube-lava object) ;; unknown type
;;(define-extern *lavaballoon-sg* object) ;; unknown type
;;(define-extern *chainmine-sg* object) ;; unknown type
;;(define-extern *lavafallsewerb-sg* object) ;; unknown type
;;(define-extern lavafallsewerb-idle object) ;; unknown type
;;(define-extern *lavafallsewera-sg* object) ;; unknown type
;;(define-extern lavafallsewera-idle object) ;; unknown type
;;(define-extern darkecobarrel-spawner object) ;; unknown type
;;(define-extern darkecobarrel-mover-move object) ;; unknown type
;;(define-extern darkecobarrel-mover-die object) ;; unknown type
;;(define-extern *darkecobarrel-sg* object) ;; unknown type
;;(define-extern *lavashortcut-sg* object) ;; unknown type
;;(define-extern lavashortcut-idle object) ;; unknown type
;;(define-extern *lavafall-sg* object) ;; unknown type
;;(define-extern lavafall-idle object) ;; unknown type
;;(define-extern *lavabase-sg* object) ;; unknown type
;;(define-extern lavabase-idle object) ;; unknown type


;; ----------------------
;; File - lavatube-energy
;; Source Path - levels/lavatube/lavatube-energy.gc
;; Containing DGOs - ['L1', 'LAV']
;; Version - 3

;; - Types

; (deftype energydoor (process-drawable)
;   ((alt-actor basic  :offset-assert 176)
;    )
;   :method-count-assert 20
;   :size-assert         #xb4
;   :flag-assert         #x14005000b4
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype energybase (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype energyhub (process-drawable)
;   ((alts                  UNKNOWN            3       :offset-assert 176)
;    (arm                   UNKNOWN            5       :offset-assert 192)
;    (rot-mat               matrix             :inline :offset-assert 240)
;    (rot-mat-init          matrix             :inline :offset-assert 304)
;    (rotation-speed        oscillating-float  :inline :offset-assert 368)
;    (rotation-speed-offset delayed-rand-float :inline :offset-assert 392)
;    (y-rotation            float                      :offset-assert 420)
;    (x-rotation            float                      :offset-assert 424)
;    (palette-val           float                      :offset-assert 428)
;    )
;   :method-count-assert 20
;   :size-assert         #x1b0
;   :flag-assert         #x14014001b0
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype energyarm (process-drawable)
;   ((offset             vector             :inline :offset-assert 176)
;    (y-rotation         float                      :offset-assert 192)
;    (y-chatter-rotation bouncing-float     :inline :offset-assert 196)
;    (y-chatter-min      delayed-rand-float :inline :offset-assert 240)
;    (x-rotation         bouncing-float     :inline :offset-assert 268)
;    (x-fall-rotation    bouncing-float     :inline :offset-assert 308)
;    (rot-mat            matrix             :inline :offset-assert 352)
;    (ball               uint64                     :offset-assert 416)
;    (x-correction       float                      :offset-assert 424)
;    )
;   :method-count-assert 20
;   :size-assert         #x1ac
;   :flag-assert         #x14014001ac
;   ;; inherited inspect of process-drawable
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype energyball (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

; (deftype energylava (process-drawable)
;   ()
;   :method-count-assert 20
;   :size-assert         #xb0
;   :flag-assert         #x14004000b0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     )
;   )

;; - Functions

(define-extern energyarm-init-by-other function)
(define-extern energyhub-set-lava-height function)
(define-extern energyhub-trans function)
(define-extern energyarm-init function)
(define-extern energyball-init-by-other function)
(define-extern energyarm-trans function)
(define-extern energyball-init function)
(define-extern energydoor-player-dist function)
(define-extern energydoor-open-handler function)
(define-extern energydoor-closed-handler function)

;; - Unknowns

;;(define-extern *energylava-sg* object) ;; unknown type
;;(define-extern energylava-idle object) ;; unknown type
;;(define-extern *energyhub-sg* object) ;; unknown type
;;(define-extern energyhub-stopped object) ;; unknown type
;;(define-extern energyhub-idle object) ;; unknown type
;;(define-extern energyhub-stop object) ;; unknown type
;;(define-extern *energyarm-sg* object) ;; unknown type
;;(define-extern energyarm-stop object) ;; unknown type
;;(define-extern energyarm-idle object) ;; unknown type
;;(define-extern energyarm-no-ball object) ;; unknown type
;;(define-extern *energyball-sg* object) ;; unknown type
;;(define-extern energyball-idle object) ;; unknown type
;;(define-extern *energybase-sg* object) ;; unknown type
;;(define-extern energybase-stopped object) ;; unknown type
;;(define-extern energybase-idle object) ;; unknown type
;;(define-extern energybase-stopping object) ;; unknown type
;;(define-extern *energydoor-sg* object) ;; unknown type
;;(define-extern energydoor-closed-till-near object) ;; unknown type
;;(define-extern energydoor-opened object) ;; unknown type
;;(define-extern energydoor-closed-till-task object) ;; unknown type
;;(define-extern energydoor-opening object) ;; unknown type
;;(define-extern energydoor-closing object) ;; unknown type
;;(define-extern energyarm-fall object) ;; unknown type


;; ----------------------
;; File - lavatube-part
;; Source Path - levels/lavatube/lavatube-part.gc
;; Containing DGOs - ['L1', 'LAV']
;; Version - 3

;; - Types

; (deftype lavatube-part (UNKNOWN)
;   ()
;   :method-count-assert 0
;   :size-assert         #x0
;   :flag-assert         #x0
;   ;;  not enough basic ops
;   )


;; ----------------------
;; File - assistant-lavatube
;; Source Path - levels/lavatube/assistant-lavatube.gc
;; Containing DGOs - ['L1', 'LAV']
;; Version - 3

;; - Types

; (deftype assistant-lavatube-start (process-taskable)
;   ()
;   :method-count-assert 53
;   :size-assert         #x17c
;   :flag-assert         #x350110017c
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     (dummy-28 () none 28)
;     (dummy-29 () none 29)
;     (dummy-30 () none 30)
;     (dummy-31 () none 31)
;     (dummy-32 () none 32)
;     (dummy-33 () none 33)
;     (dummy-34 () none 34)
;     (dummy-35 () none 35)
;     (dummy-36 () none 36)
;     (dummy-37 () none 37)
;     (dummy-38 () none 38)
;     (dummy-39 () none 39)
;     (dummy-40 () none 40)
;     (dummy-41 () none 41)
;     (dummy-42 () none 42)
;     (dummy-43 () none 43)
;     (dummy-44 () none 44)
;     (dummy-45 () none 45)
;     (dummy-46 () none 46)
;     (dummy-47 () none 47)
;     (dummy-48 () none 48)
;     (dummy-49 () none 49)
;     (dummy-50 () none 50)
;     (dummy-51 () none 51)
;     (dummy-52 () none 52)
;     )
;   )

;; - Unknowns

;;(define-extern *assistant-lavatube-start-sg* object) ;; unknown type


;; ----------------------
;; File - tpage-815
;; Source Path - levels/firecanyon/tpage-815.gd
;; Containing DGOs - ['FIC']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-822
;; Source Path - levels/firecanyon/tpage-822.gd
;; Containing DGOs - ['FIC']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-854
;; Source Path - levels/firecanyon/tpage-854.gd
;; Containing DGOs - ['FIC']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1123
;; Source Path - levels/firecanyon/tpage-1123.gd
;; Containing DGOs - ['FIC']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - assistant-firecanyon-ag
;; Source Path - levels/firecanyon/assistant-firecanyon-ag.gd
;; Containing DGOs - ['FIC']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - balloon-ag
;; Source Path - levels/firecanyon/balloon-ag.gd
;; Containing DGOs - ['FIC']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - crate-darkeco-cluster-ag-FIC
;; Source Path - levels/firecanyon/crate-darkeco-cluster-ag-FIC.gd
;; Containing DGOs - ['FIC']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - crate-darkeco-cluster-ag-OGR
;; Source Path - levels/ogre/crate-darkeco-cluster-ag-OGR.gd
;; Containing DGOs - ['OGR']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - ef-plane-ag-FIC-LAV-OGR-ROL-SNO-SWA
;; Source Path - levels/common/ef-plane-ag-FIC-LAV-OGR-ROL-SNO-SWA.gd
;; Containing DGOs - ['FIC', 'LAV', 'OGR', 'ROL', 'SNO', 'SWA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - ef-plane-ag-MIS
;; Source Path - levels/misty/ef-plane-ag-MIS.gd
;; Containing DGOs - ['MIS']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - racer-ag-FIC-ROL
;; Source Path - levels/common/racer-ag-FIC-ROL.gd
;; Containing DGOs - ['FIC', 'ROL']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - racer-ag-LAV
;; Source Path - levels/lavatube/racer-ag-LAV.gd
;; Containing DGOs - ['LAV']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - racer-ag-MIS
;; Source Path - levels/misty/racer-ag-MIS.gd
;; Containing DGOs - ['MIS']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - racer-ag-OGR
;; Source Path - levels/ogre/racer-ag-OGR.gd
;; Containing DGOs - ['OGR']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - spike-ag
;; Source Path - levels/firecanyon/spike-ag.gd
;; Containing DGOs - ['FIC']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - firecanyon-vis
;; Source Path - levels/firecanyon/firecanyon-vis.gd
;; Containing DGOs - ['FIC']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1338
;; Source Path - levels/lavatube/tpage-1338.gd
;; Containing DGOs - ['LAV']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1340
;; Source Path - levels/lavatube/tpage-1340.gd
;; Containing DGOs - ['LAV']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1339
;; Source Path - levels/lavatube/tpage-1339.gd
;; Containing DGOs - ['LAV']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1337
;; Source Path - levels/lavatube/tpage-1337.gd
;; Containing DGOs - ['LAV']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - assistant-lavatube-start-ag
;; Source Path - levels/lavatube/assistant-lavatube-start-ag.gd
;; Containing DGOs - ['LAV']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - chainmine-ag
;; Source Path - levels/lavatube/chainmine-ag.gd
;; Containing DGOs - ['LAV']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - darkecobarrel-ag
;; Source Path - levels/lavatube/darkecobarrel-ag.gd
;; Containing DGOs - ['LAV']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - energyarm-ag
;; Source Path - levels/lavatube/energyarm-ag.gd
;; Containing DGOs - ['LAV']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - energyball-ag
;; Source Path - levels/lavatube/energyball-ag.gd
;; Containing DGOs - ['LAV']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - energybase-ag
;; Source Path - levels/lavatube/energybase-ag.gd
;; Containing DGOs - ['LAV']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - energydoor-ag
;; Source Path - levels/lavatube/energydoor-ag.gd
;; Containing DGOs - ['LAV']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - energyhub-ag
;; Source Path - levels/lavatube/energyhub-ag.gd
;; Containing DGOs - ['LAV']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - lavaballoon-ag
;; Source Path - levels/lavatube/lavaballoon-ag.gd
;; Containing DGOs - ['LAV']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - lavabase-ag
;; Source Path - levels/lavatube/lavabase-ag.gd
;; Containing DGOs - ['LAV']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - lavafall-ag
;; Source Path - levels/lavatube/lavafall-ag.gd
;; Containing DGOs - ['LAV']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - lavafallsewera-ag
;; Source Path - levels/lavatube/lavafallsewera-ag.gd
;; Containing DGOs - ['LAV']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - lavafallsewerb-ag
;; Source Path - levels/lavatube/lavafallsewerb-ag.gd
;; Containing DGOs - ['LAV']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - lavashortcut-ag
;; Source Path - levels/lavatube/lavashortcut-ag.gd
;; Containing DGOs - ['LAV']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - lavayellowtarp-ag
;; Source Path - levels/lavatube/lavayellowtarp-ag.gd
;; Containing DGOs - ['LAV']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - water-anim-lavatube-ag
;; Source Path - levels/lavatube/water-anim-lavatube-ag.gd
;; Containing DGOs - ['LAV']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - lavatube-vis
;; Source Path - levels/lavatube/lavatube-vis.gd
;; Containing DGOs - ['LAV']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1313
;; Source Path - levels/maincave/tpage-1313.gd
;; Containing DGOs - ['MAI']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1315
;; Source Path - levels/maincave/tpage-1315.gd
;; Containing DGOs - ['MAI']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1314
;; Source Path - levels/maincave/tpage-1314.gd
;; Containing DGOs - ['MAI']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1312
;; Source Path - levels/maincave/tpage-1312.gd
;; Containing DGOs - ['MAI']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-767
;; Source Path - levels/maincave/tpage-767.gd
;; Containing DGOs - ['MAI']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - driller-lurker-ag
;; Source Path - levels/cave_common/driller-lurker-ag.gd
;; Containing DGOs - ['MAI', 'ROB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - gnawer-ag
;; Source Path - levels/maincave/gnawer-ag.gd
;; Containing DGOs - ['MAI']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - launcherdoor-maincave-ag
;; Source Path - levels/maincave/launcherdoor-maincave-ag.gd
;; Containing DGOs - ['MAI']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - maincavecam-ag
;; Source Path - levels/maincave/maincavecam-ag.gd
;; Containing DGOs - ['MAI']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - plat-ag-MAI
;; Source Path - levels/maincave/plat-ag-MAI.gd
;; Containing DGOs - ['MAI']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - plat-ag-ROB
;; Source Path - levels/robocave/plat-ag-ROB.gd
;; Containing DGOs - ['ROB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - spiderwebs-ag
;; Source Path - levels/cave_common/spiderwebs-ag.gd
;; Containing DGOs - ['MAI', 'ROB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - water-anim-maincave-ag
;; Source Path - levels/maincave/water-anim-maincave-ag.gd
;; Containing DGOs - ['MAI']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - water-anim-maincave-water-ag
;; Source Path - levels/maincave/water-anim-maincave-water-ag.gd
;; Containing DGOs - ['MAI']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - maincave-vis
;; Source Path - levels/maincave/maincave-vis.gd
;; Containing DGOs - ['MAI']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-516
;; Source Path - levels/misty/tpage-516.gd
;; Containing DGOs - ['MIS']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-521
;; Source Path - levels/misty/tpage-521.gd
;; Containing DGOs - ['MIS']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-518
;; Source Path - levels/misty/tpage-518.gd
;; Containing DGOs - ['MIS']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-520
;; Source Path - levels/misty/tpage-520.gd
;; Containing DGOs - ['MIS']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - balloonlurker-ag
;; Source Path - levels/misty/balloonlurker-ag.gd
;; Containing DGOs - ['MIS']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - boatpaddle-ag
;; Source Path - levels/misty/boatpaddle-ag.gd
;; Containing DGOs - ['MIS']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - bonelurker-ag
;; Source Path - levels/misty/bonelurker-ag.gd
;; Containing DGOs - ['MIS']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - breakaway-left-ag
;; Source Path - levels/misty/breakaway-left-ag.gd
;; Containing DGOs - ['MIS']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - breakaway-mid-ag
;; Source Path - levels/misty/breakaway-mid-ag.gd
;; Containing DGOs - ['MIS']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - breakaway-right-ag
;; Source Path - levels/misty/breakaway-right-ag.gd
;; Containing DGOs - ['MIS']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - darkecocan-ag
;; Source Path - levels/misty/darkecocan-ag.gd
;; Containing DGOs - ['MIS']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - keg-ag
;; Source Path - levels/misty/keg-ag.gd
;; Containing DGOs - ['MIS']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - keg-conveyor-ag
;; Source Path - levels/misty/keg-conveyor-ag.gd
;; Containing DGOs - ['MIS']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - keg-conveyor-paddle-ag
;; Source Path - levels/misty/keg-conveyor-paddle-ag.gd
;; Containing DGOs - ['MIS']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - mis-bone-bridge-ag
;; Source Path - levels/misty/mis-bone-bridge-ag.gd
;; Containing DGOs - ['MIS']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - mis-bone-platform-ag
;; Source Path - levels/misty/mis-bone-platform-ag.gd
;; Containing DGOs - ['MIS']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - mistycam-ag
;; Source Path - levels/misty/mistycam-ag.gd
;; Containing DGOs - ['MIS']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - muse-ag
;; Source Path - levels/misty/muse-ag.gd
;; Containing DGOs - ['MIS']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - quicksandlurker-ag
;; Source Path - levels/misty/quicksandlurker-ag.gd
;; Containing DGOs - ['MIS']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - ropebridge-36-ag
;; Source Path - levels/misty/ropebridge-36-ag.gd
;; Containing DGOs - ['MIS']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - rounddoor-ag
;; Source Path - levels/misty/rounddoor-ag.gd
;; Containing DGOs - ['MIS']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - sidekick-human-ag
;; Source Path - levels/misty/sidekick-human-ag.gd
;; Containing DGOs - ['MIS']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - silostep-ag
;; Source Path - levels/misty/silostep-ag.gd
;; Containing DGOs - ['MIS']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - teetertotter-ag
;; Source Path - levels/misty/teetertotter-ag.gd
;; Containing DGOs - ['MIS']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - water-anim-misty-ag
;; Source Path - levels/misty/water-anim-misty-ag.gd
;; Containing DGOs - ['MIS']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - wheel-ag
;; Source Path - levels/misty/wheel-ag.gd
;; Containing DGOs - ['MIS']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - windturbine-ag
;; Source Path - levels/misty/windturbine-ag.gd
;; Containing DGOs - ['MIS']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - misty-vis
;; Source Path - levels/misty/misty-vis.gd
;; Containing DGOs - ['MIS']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-875
;; Source Path - levels/ogre/tpage-875.gd
;; Containing DGOs - ['OGR']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-967
;; Source Path - levels/ogre/tpage-967.gd
;; Containing DGOs - ['OGR']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-884
;; Source Path - levels/ogre/tpage-884.gd
;; Containing DGOs - ['OGR']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1117
;; Source Path - levels/ogre/tpage-1117.gd
;; Containing DGOs - ['OGR']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - flying-lurker-ag
;; Source Path - levels/ogre/flying-lurker-ag.gd
;; Containing DGOs - ['OGR']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - medres-snow-ag
;; Source Path - levels/ogre/medres-snow-ag.gd
;; Containing DGOs - ['OGR']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - ogre-bridge-ag
;; Source Path - levels/ogre/ogre-bridge-ag.gd
;; Containing DGOs - ['OGR']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - ogre-bridgeend-ag
;; Source Path - levels/ogre/ogre-bridgeend-ag.gd
;; Containing DGOs - ['OGR']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - ogre-isle-ag
;; Source Path - levels/ogre/ogre-isle-ag.gd
;; Containing DGOs - ['OGR']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - ogre-step-ag
;; Source Path - levels/ogre/ogre-step-ag.gd
;; Containing DGOs - ['OGR']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - ogreboss-ag
;; Source Path - levels/ogre/ogreboss-ag.gd
;; Containing DGOs - ['OGR']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - ogrecam-ag
;; Source Path - levels/ogre/ogrecam-ag.gd
;; Containing DGOs - ['OGR']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - plunger-lurker-ag
;; Source Path - levels/ogre/plunger-lurker-ag.gd
;; Containing DGOs - ['OGR']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - shortcut-boulder-ag
;; Source Path - levels/ogre/shortcut-boulder-ag.gd
;; Containing DGOs - ['OGR']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tntbarrel-ag
;; Source Path - levels/ogre/tntbarrel-ag.gd
;; Containing DGOs - ['OGR']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - water-anim-ogre-ag
;; Source Path - levels/ogre/water-anim-ogre-ag.gd
;; Containing DGOs - ['OGR']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - ogre-vis
;; Source Path - levels/ogre/ogre-vis.gd
;; Containing DGOs - ['OGR']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1318
;; Source Path - levels/robocave/tpage-1318.gd
;; Containing DGOs - ['ROB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1319
;; Source Path - levels/robocave/tpage-1319.gd
;; Containing DGOs - ['ROB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1317
;; Source Path - levels/robocave/tpage-1317.gd
;; Containing DGOs - ['ROB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1316
;; Source Path - levels/robocave/tpage-1316.gd
;; Containing DGOs - ['ROB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - cavecrusher-ag
;; Source Path - levels/robocave/cavecrusher-ag.gd
;; Containing DGOs - ['ROB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - cavespatulatwo-ag
;; Source Path - levels/robocave/cavespatulatwo-ag.gd
;; Containing DGOs - ['ROB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - water-anim-robocave-ag
;; Source Path - levels/robocave/water-anim-robocave-ag.gd
;; Containing DGOs - ['ROB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - robocave-vis
;; Source Path - levels/robocave/robocave-vis.gd
;; Containing DGOs - ['ROB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-923
;; Source Path - levels/rolling/tpage-923.gd
;; Containing DGOs - ['ROL']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-926
;; Source Path - levels/rolling/tpage-926.gd
;; Containing DGOs - ['ROL']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-924
;; Source Path - levels/rolling/tpage-924.gd
;; Containing DGOs - ['ROL']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-925
;; Source Path - levels/rolling/tpage-925.gd
;; Containing DGOs - ['ROL']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1353
;; Source Path - levels/rolling/tpage-1353.gd
;; Containing DGOs - ['ROL']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - dark-plant-ag
;; Source Path - levels/rolling/dark-plant-ag.gd
;; Containing DGOs - ['ROL']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - happy-plant-ag
;; Source Path - levels/rolling/happy-plant-ag.gd
;; Containing DGOs - ['ROL']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - lightning-mole-ag
;; Source Path - levels/rolling/lightning-mole-ag.gd
;; Containing DGOs - ['ROL']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - pusher-ag
;; Source Path - levels/rolling/pusher-ag.gd
;; Containing DGOs - ['ROL']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - race-ring-ag
;; Source Path - levels/rolling/race-ring-ag.gd
;; Containing DGOs - ['ROL']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - robber-ag
;; Source Path - levels/rolling/robber-ag.gd
;; Containing DGOs - ['ROL']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - rolling-start-ag
;; Source Path - levels/rolling/rolling-start-ag.gd
;; Containing DGOs - ['ROL']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - rollingcam-ag
;; Source Path - levels/rolling/rollingcam-ag.gd
;; Containing DGOs - ['ROL']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - water-anim-rolling-ag
;; Source Path - levels/rolling/water-anim-rolling-ag.gd
;; Containing DGOs - ['ROL']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - rolling-vis
;; Source Path - levels/rolling/rolling-vis.gd
;; Containing DGOs - ['ROL']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-710
;; Source Path - levels/snow/tpage-710.gd
;; Containing DGOs - ['SNO']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-842
;; Source Path - levels/snow/tpage-842.gd
;; Containing DGOs - ['SNO']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-711
;; Source Path - levels/snow/tpage-711.gd
;; Containing DGOs - ['SNO']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-712
;; Source Path - levels/snow/tpage-712.gd
;; Containing DGOs - ['SNO']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - flut-saddle-ag-SNO
;; Source Path - levels/snow/flut-saddle-ag-SNO.gd
;; Containing DGOs - ['SNO']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - flut-saddle-ag-SWA
;; Source Path - levels/swamp/flut-saddle-ag-SWA.gd
;; Containing DGOs - ['SWA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - flutflut-plat-large-ag
;; Source Path - levels/snow/flutflut-plat-large-ag.gd
;; Containing DGOs - ['SNO']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - flutflut-plat-med-ag
;; Source Path - levels/snow/flutflut-plat-med-ag.gd
;; Containing DGOs - ['SNO']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - flutflut-plat-small-ag
;; Source Path - levels/snow/flutflut-plat-small-ag.gd
;; Containing DGOs - ['SNO']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - ice-cube-ag
;; Source Path - levels/snow/ice-cube-ag.gd
;; Containing DGOs - ['SNO']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - ice-cube-break-ag
;; Source Path - levels/snow/ice-cube-break-ag.gd
;; Containing DGOs - ['SNO']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - ram-ag
;; Source Path - levels/snow/ram-ag.gd
;; Containing DGOs - ['SNO']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - ram-boss-ag
;; Source Path - levels/snow/ram-boss-ag.gd
;; Containing DGOs - ['SNO']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - snow-ball-ag
;; Source Path - levels/snow/snow-ball-ag.gd
;; Containing DGOs - ['SNO']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - snow-bridge-36-ag
;; Source Path - levels/snow/snow-bridge-36-ag.gd
;; Containing DGOs - ['SNO']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - snow-bumper-ag
;; Source Path - levels/snow/snow-bumper-ag.gd
;; Containing DGOs - ['SNO']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - snow-bunny-ag
;; Source Path - levels/snow/snow-bunny-ag.gd
;; Containing DGOs - ['SNO']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - snow-button-ag
;; Source Path - levels/snow/snow-button-ag.gd
;; Containing DGOs - ['SNO']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - snow-eggtop-ag
;; Source Path - levels/snow/snow-eggtop-ag.gd
;; Containing DGOs - ['SNO']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - snow-fort-gate-ag
;; Source Path - levels/snow/snow-fort-gate-ag.gd
;; Containing DGOs - ['SNO']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - snow-gears-ag
;; Source Path - levels/snow/snow-gears-ag.gd
;; Containing DGOs - ['SNO']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - snow-log-ag
;; Source Path - levels/snow/snow-log-ag.gd
;; Containing DGOs - ['SNO']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - snow-spatula-ag
;; Source Path - levels/snow/snow-spatula-ag.gd
;; Containing DGOs - ['SNO']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - snow-switch-ag
;; Source Path - levels/snow/snow-switch-ag.gd
;; Containing DGOs - ['SNO']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - snowcam-ag
;; Source Path - levels/snow/snowcam-ag.gd
;; Containing DGOs - ['SNO']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - snowpusher-ag
;; Source Path - levels/snow/snowpusher-ag.gd
;; Containing DGOs - ['SNO']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - yeti-ag
;; Source Path - levels/snow/yeti-ag.gd
;; Containing DGOs - ['SNO']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - snow-vis
;; Source Path - levels/snow/snow-vis.gd
;; Containing DGOs - ['SNO']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-163
;; Source Path - levels/sunkenb/tpage-163.gd
;; Containing DGOs - ['SUB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-164
;; Source Path - levels/sunkenb/tpage-164.gd
;; Containing DGOs - ['SUB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-166
;; Source Path - levels/sunkenb/tpage-166.gd
;; Containing DGOs - ['SUB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-162
;; Source Path - levels/sunkenb/tpage-162.gd
;; Containing DGOs - ['SUB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-764
;; Source Path - levels/sunkenb/tpage-764.gd
;; Containing DGOs - ['SUB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - blue-eco-charger-ag
;; Source Path - levels/sunkenb/blue-eco-charger-ag.gd
;; Containing DGOs - ['SUB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - blue-eco-charger-orb-ag
;; Source Path - levels/sunkenb/blue-eco-charger-orb-ag.gd
;; Containing DGOs - ['SUB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - bully-ag
;; Source Path - levels/sunken_common/bully-ag.gd
;; Containing DGOs - ['SUB', 'SUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - floating-launcher-ag
;; Source Path - levels/sunkenb/floating-launcher-ag.gd
;; Containing DGOs - ['SUB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - helix-button-ag
;; Source Path - levels/sunkenb/helix-button-ag.gd
;; Containing DGOs - ['SUB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - helix-slide-door-ag
;; Source Path - levels/sunkenb/helix-slide-door-ag.gd
;; Containing DGOs - ['SUB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - shover-ag-SUB
;; Source Path - levels/sunkenb/shover-ag-SUB.gd
;; Containing DGOs - ['SUB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - shover-ag-SUN
;; Source Path - levels/sunken/shover-ag-SUN.gd
;; Containing DGOs - ['SUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - steam-cap-ag-SUB
;; Source Path - levels/sunkenb/steam-cap-ag-SUB.gd
;; Containing DGOs - ['SUB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - steam-cap-ag-SUN
;; Source Path - levels/sunken/steam-cap-ag-SUN.gd
;; Containing DGOs - ['SUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - sunkencam-ag-SUB
;; Source Path - levels/sunkenb/sunkencam-ag-SUB.gd
;; Containing DGOs - ['SUB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - sunkencam-ag-SUN
;; Source Path - levels/sunken/sunkencam-ag-SUN.gd
;; Containing DGOs - ['SUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - sunkenfisha-ag
;; Source Path - levels/sunken_common/sunkenfisha-ag.gd
;; Containing DGOs - ['SUB', 'SUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - wall-plat-ag
;; Source Path - levels/sunken_common/wall-plat-ag.gd
;; Containing DGOs - ['SUB', 'SUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - water-anim-sunken-ag
;; Source Path - levels/sunken_common/water-anim-sunken-ag.gd
;; Containing DGOs - ['SUB', 'SUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - water-anim-sunken-dark-eco-ag
;; Source Path - levels/sunken_common/water-anim-sunken-dark-eco-ag.gd
;; Containing DGOs - ['SUB', 'SUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - sunkenb-vis
;; Source Path - levels/sunkenb/sunkenb-vis.gd
;; Containing DGOs - ['SUB']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-661
;; Source Path - levels/sunken/tpage-661.gd
;; Containing DGOs - ['SUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-663
;; Source Path - levels/sunken/tpage-663.gd
;; Containing DGOs - ['SUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-714
;; Source Path - levels/sunken/tpage-714.gd
;; Containing DGOs - ['SUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-662
;; Source Path - levels/sunken/tpage-662.gd
;; Containing DGOs - ['SUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-766
;; Source Path - levels/sunken/tpage-766.gd
;; Containing DGOs - ['SUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - double-lurker-ag
;; Source Path - levels/sunken/double-lurker-ag.gd
;; Containing DGOs - ['SUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - double-lurker-top-ag
;; Source Path - levels/sunken/double-lurker-top-ag.gd
;; Containing DGOs - ['SUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - exit-chamber-ag
;; Source Path - levels/sunken/exit-chamber-ag.gd
;; Containing DGOs - ['SUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - generic-button-ag
;; Source Path - levels/sunken/generic-button-ag.gd
;; Containing DGOs - ['SUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - orbit-plat-ag
;; Source Path - levels/sunken/orbit-plat-ag.gd
;; Containing DGOs - ['SUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - orbit-plat-bottom-ag
;; Source Path - levels/sunken/orbit-plat-bottom-ag.gd
;; Containing DGOs - ['SUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - plat-sunken-ag
;; Source Path - levels/sunken/plat-sunken-ag.gd
;; Containing DGOs - ['SUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - puffer-ag
;; Source Path - levels/sunken/puffer-ag.gd
;; Containing DGOs - ['SUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - qbert-plat-ag
;; Source Path - levels/sunken/qbert-plat-ag.gd
;; Containing DGOs - ['SUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - qbert-plat-on-ag
;; Source Path - levels/sunken/qbert-plat-on-ag.gd
;; Containing DGOs - ['SUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - seaweed-ag
;; Source Path - levels/sunken/seaweed-ag.gd
;; Containing DGOs - ['SUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - side-to-side-plat-ag
;; Source Path - levels/sunken/side-to-side-plat-ag.gd
;; Containing DGOs - ['SUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - square-platform-ag
;; Source Path - levels/sunken/square-platform-ag.gd
;; Containing DGOs - ['SUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - sun-iris-door-ag
;; Source Path - levels/sunken/sun-iris-door-ag.gd
;; Containing DGOs - ['SUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - wedge-plat-ag
;; Source Path - levels/sunken/wedge-plat-ag.gd
;; Containing DGOs - ['SUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - wedge-plat-outer-ag
;; Source Path - levels/sunken/wedge-plat-outer-ag.gd
;; Containing DGOs - ['SUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - whirlpool-ag
;; Source Path - levels/sunken/whirlpool-ag.gd
;; Containing DGOs - ['SUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - sunken-vis
;; Source Path - levels/sunken/sunken-vis.gd
;; Containing DGOs - ['SUN']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-358
;; Source Path - levels/swamp/tpage-358.gd
;; Containing DGOs - ['SWA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-659
;; Source Path - levels/swamp/tpage-659.gd
;; Containing DGOs - ['SWA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-629
;; Source Path - levels/swamp/tpage-629.gd
;; Containing DGOs - ['SWA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-630
;; Source Path - levels/swamp/tpage-630.gd
;; Containing DGOs - ['SWA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - balance-plat-ag
;; Source Path - levels/swamp/balance-plat-ag.gd
;; Containing DGOs - ['SWA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - billy-ag
;; Source Path - levels/swamp/billy-ag.gd
;; Containing DGOs - ['SWA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - billy-sidekick-ag
;; Source Path - levels/swamp/billy-sidekick-ag.gd
;; Containing DGOs - ['SWA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - farthy-snack-ag
;; Source Path - levels/swamp/farthy-snack-ag.gd
;; Containing DGOs - ['SWA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - kermit-ag
;; Source Path - levels/swamp/kermit-ag.gd
;; Containing DGOs - ['SWA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - swamp-bat-ag
;; Source Path - levels/swamp/swamp-bat-ag.gd
;; Containing DGOs - ['SWA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - swamp-rat-ag
;; Source Path - levels/swamp/swamp-rat-ag.gd
;; Containing DGOs - ['SWA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - swamp-rat-nest-ag
;; Source Path - levels/swamp/swamp-rat-nest-ag.gd
;; Containing DGOs - ['SWA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - swamp-rock-ag
;; Source Path - levels/swamp/swamp-rock-ag.gd
;; Containing DGOs - ['SWA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - swamp-spike-ag
;; Source Path - levels/swamp/swamp-spike-ag.gd
;; Containing DGOs - ['SWA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - swampcam-ag-SWA
;; Source Path - levels/swamp/swampcam-ag-SWA.gd
;; Containing DGOs - ['SWA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - swampcam-ag-VI2
;; Source Path - levels/village2/swampcam-ag-VI2.gd
;; Containing DGOs - ['VI2']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tar-plat-ag
;; Source Path - levels/swamp/tar-plat-ag.gd
;; Containing DGOs - ['SWA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - swamp-vis
;; Source Path - levels/swamp/swamp-vis.gd
;; Containing DGOs - ['SWA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - title-obs
;; Source Path - levels/title/title-obs.gc
;; Containing DGOs - ['TIT']
;; Version - 3

;; - Types

(deftype logo (process-drawable)
  ((~Tcamera      uint64  :offset-assert 176)
   (~Tcamera-anim uint64  :offset-assert 184)
   (~Tvolumes     uint64  :offset-assert 192)
   (~Tblack       uint64  :offset-assert 200)
   (~Ttarget      uint64  :offset-assert 208)
   (~Tsidekick    uint64  :offset-assert 216)
   (~Tmain-joint  basic   :offset-assert 224)
   (~Tanim        basic   :offset-assert 228)
   (~Tnext-anim   basic   :offset-assert 232)
   (~Tdone?       basic   :offset-assert 236)
   )
  :heap-base #x80
  :method-count-assert 24
  :size-assert         #xf0
  :flag-assert         #x18008000f0
  ;; inherited inspect of process-drawable
  (:methods
    (dummy-20 () none 20)
    (dummy-21 () none 21)
    (dummy-22 () none 22)
    (dummy-23 () none 23)
    )
  )

(deftype logo-slave (process-drawable)
  ((~Tmain-joint basic  :offset-assert 176)
   )
  :heap-base #x50
  :method-count-assert 21
  :size-assert         #xb4
  :flag-assert         #x15005000b4
  ;; inherited inspect of process-drawable
  (:methods
    (dummy-20 () none 20)
    )
  )

;; - Functions

(define-extern logo-slave-init-by-other function)
(define-extern logo-init-by-other function)

;; - Unknowns

;;(define-extern target-title-play object) ;; unknown type
;;(define-extern target-title-wait object) ;; unknown type
;;(define-extern *logo-japan-sg* object) ;; unknown type
;;(define-extern *logo-sg* object) ;; unknown type
;;(define-extern *ndi-sg* object) ;; unknown type
;;(define-extern *ndi-cam-sg* object) ;; unknown type
;;(define-extern *ndi-volumes-sg* object) ;; unknown type
;;(define-extern *logo-cam-sg* object) ;; unknown type
;;(define-extern *logo-volumes-japan-sg* object) ;; unknown type
;;(define-extern *logo-volumes-sg* object) ;; unknown type
;;(define-extern *logo-black-sg* object) ;; unknown type


;; ----------------------
;; File - tpage-1609
;; Source Path - levels/title/tpage-1609.gd
;; Containing DGOs - ['TIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-416
;; Source Path - levels/title/tpage-416.gd
;; Containing DGOs - ['TIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-415
;; Source Path - levels/title/tpage-415.gd
;; Containing DGOs - ['TIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-397
;; Source Path - levels/title/tpage-397.gd
;; Containing DGOs - ['TIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1499
;; Source Path - levels/title/tpage-1499.gd
;; Containing DGOs - ['TIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - logo-ag
;; Source Path - levels/title/logo-ag.gd
;; Containing DGOs - ['TIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - logo-black-ag
;; Source Path - levels/title/logo-black-ag.gd
;; Containing DGOs - ['TIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - logo-cam-ag
;; Source Path - levels/title/logo-cam-ag.gd
;; Containing DGOs - ['TIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - logo-volumes-ag
;; Source Path - levels/title/logo-volumes-ag.gd
;; Containing DGOs - ['TIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - ndi-ag
;; Source Path - levels/title/ndi-ag.gd
;; Containing DGOs - ['TIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - ndi-cam-ag
;; Source Path - levels/title/ndi-cam-ag.gd
;; Containing DGOs - ['TIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - ndi-volumes-ag
;; Source Path - levels/title/ndi-volumes-ag.gd
;; Containing DGOs - ['TIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - title-vis
;; Source Path - levels/title/title-vis.gd
;; Containing DGOs - ['TIT']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1309
;; Source Path - levels/training/tpage-1309.gd
;; Containing DGOs - ['TRA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1311
;; Source Path - levels/training/tpage-1311.gd
;; Containing DGOs - ['TRA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1310
;; Source Path - levels/training/tpage-1310.gd
;; Containing DGOs - ['TRA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1308
;; Source Path - levels/training/tpage-1308.gd
;; Containing DGOs - ['TRA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-775
;; Source Path - levels/training/tpage-775.gd
;; Containing DGOs - ['TRA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - pontoonfive-ag-TRA
;; Source Path - levels/training/pontoonfive-ag-TRA.gd
;; Containing DGOs - ['TRA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - pontoonfive-ag-VI2
;; Source Path - levels/village2/pontoonfive-ag-VI2.gd
;; Containing DGOs - ['VI2']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - scarecrow-a-ag
;; Source Path - levels/training/scarecrow-a-ag.gd
;; Containing DGOs - ['TRA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - scarecrow-b-ag
;; Source Path - levels/training/scarecrow-b-ag.gd
;; Containing DGOs - ['TRA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - trainingcam-ag
;; Source Path - levels/training/trainingcam-ag.gd
;; Containing DGOs - ['TRA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - water-anim-training-ag
;; Source Path - levels/training/water-anim-training-ag.gd
;; Containing DGOs - ['TRA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - training-vis
;; Source Path - levels/training/training-vis.gd
;; Containing DGOs - ['TRA']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-398
;; Source Path - levels/village1/tpage-398.gd
;; Containing DGOs - ['VI1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-400
;; Source Path - levels/village1/tpage-400.gd
;; Containing DGOs - ['VI1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-399
;; Source Path - levels/village1/tpage-399.gd
;; Containing DGOs - ['VI1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-401
;; Source Path - levels/village1/tpage-401.gd
;; Containing DGOs - ['VI1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1470
;; Source Path - levels/village1/tpage-1470.gd
;; Containing DGOs - ['VI1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - assistant-ag
;; Source Path - levels/village1/assistant-ag.gd
;; Containing DGOs - ['VI1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - evilplant-ag
;; Source Path - levels/village1/evilplant-ag.gd
;; Containing DGOs - ['VI1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - explorer-ag
;; Source Path - levels/village1/explorer-ag.gd
;; Containing DGOs - ['VI1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - farmer-ag
;; Source Path - levels/village1/farmer-ag.gd
;; Containing DGOs - ['VI1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - fishermans-boat-ag
;; Source Path - levels/village1/fishermans-boat-ag.gd
;; Containing DGOs - ['VI1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - hutlamp-ag
;; Source Path - levels/village1/hutlamp-ag.gd
;; Containing DGOs - ['VI1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - mayorgears-ag
;; Source Path - levels/village1/mayorgears-ag.gd
;; Containing DGOs - ['VI1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - medres-beach-ag
;; Source Path - levels/village1/medres-beach-ag.gd
;; Containing DGOs - ['VI1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - medres-beach1-ag
;; Source Path - levels/village1/medres-beach1-ag.gd
;; Containing DGOs - ['VI1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - medres-beach2-ag
;; Source Path - levels/village1/medres-beach2-ag.gd
;; Containing DGOs - ['VI1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - medres-beach3-ag
;; Source Path - levels/village1/medres-beach3-ag.gd
;; Containing DGOs - ['VI1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - medres-jungle-ag
;; Source Path - levels/village1/medres-jungle-ag.gd
;; Containing DGOs - ['VI1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - medres-jungle1-ag
;; Source Path - levels/village1/medres-jungle1-ag.gd
;; Containing DGOs - ['VI1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - medres-jungle2-ag
;; Source Path - levels/village1/medres-jungle2-ag.gd
;; Containing DGOs - ['VI1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - medres-misty-ag
;; Source Path - levels/village1/medres-misty-ag.gd
;; Containing DGOs - ['VI1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - medres-training-ag
;; Source Path - levels/village1/medres-training-ag.gd
;; Containing DGOs - ['VI1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - medres-village11-ag
;; Source Path - levels/village1/medres-village11-ag.gd
;; Containing DGOs - ['VI1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - medres-village12-ag
;; Source Path - levels/village1/medres-village12-ag.gd
;; Containing DGOs - ['VI1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - medres-village13-ag
;; Source Path - levels/village1/medres-village13-ag.gd
;; Containing DGOs - ['VI1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - oracle-ag-VI1
;; Source Path - levels/village1/oracle-ag-VI1.gd
;; Containing DGOs - ['VI1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - oracle-ag-VI2
;; Source Path - levels/village2/oracle-ag-VI2.gd
;; Containing DGOs - ['VI2']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - oracle-ag-VI3
;; Source Path - levels/village3/oracle-ag-VI3.gd
;; Containing DGOs - ['VI3']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - reflector-middle-ag
;; Source Path - levels/village1/reflector-middle-ag.gd
;; Containing DGOs - ['VI1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - revcycle-ag
;; Source Path - levels/village1/revcycle-ag.gd
;; Containing DGOs - ['VI1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - revcycleprop-ag
;; Source Path - levels/village1/revcycleprop-ag.gd
;; Containing DGOs - ['VI1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - ropebridge-32-ag
;; Source Path - levels/village1/ropebridge-32-ag.gd
;; Containing DGOs - ['VI1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - sage-ag
;; Source Path - levels/village1/sage-ag.gd
;; Containing DGOs - ['VI1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - sagesail-ag
;; Source Path - levels/village1/sagesail-ag.gd
;; Containing DGOs - ['VI1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - villa-starfish-ag
;; Source Path - levels/village1/villa-starfish-ag.gd
;; Containing DGOs - ['VI1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - village-cam-ag-VI1
;; Source Path - levels/village1/village-cam-ag-VI1.gd
;; Containing DGOs - ['VI1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - village-cam-ag-VI2
;; Source Path - levels/village2/village-cam-ag-VI2.gd
;; Containing DGOs - ['VI2']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - village-cam-ag-VI3
;; Source Path - levels/village3/village-cam-ag-VI3.gd
;; Containing DGOs - ['VI3']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - village1cam-ag
;; Source Path - levels/village1/village1cam-ag.gd
;; Containing DGOs - ['VI1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - water-anim-village1-ag
;; Source Path - levels/village1/water-anim-village1-ag.gd
;; Containing DGOs - ['VI1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - windmill-sail-ag
;; Source Path - levels/village1/windmill-sail-ag.gd
;; Containing DGOs - ['VI1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - windspinner-ag
;; Source Path - levels/village1/windspinner-ag.gd
;; Containing DGOs - ['VI1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - yakow-ag
;; Source Path - levels/village1/yakow-ag.gd
;; Containing DGOs - ['VI1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - village1-vis
;; Source Path - levels/village1/village1-vis.gd
;; Containing DGOs - ['VI1']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-919
;; Source Path - levels/village2/tpage-919.gd
;; Containing DGOs - ['VI2']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-922
;; Source Path - levels/village2/tpage-922.gd
;; Containing DGOs - ['VI2']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-920
;; Source Path - levels/village2/tpage-920.gd
;; Containing DGOs - ['VI2']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-921
;; Source Path - levels/village2/tpage-921.gd
;; Containing DGOs - ['VI2']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1476
;; Source Path - levels/village2/tpage-1476.gd
;; Containing DGOs - ['VI2']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - allpontoons-ag
;; Source Path - levels/village2/allpontoons-ag.gd
;; Containing DGOs - ['VI2']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - assistant-village2-ag
;; Source Path - levels/village2/assistant-village2-ag.gd
;; Containing DGOs - ['VI2']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - ceilingflag-ag
;; Source Path - levels/village2/ceilingflag-ag.gd
;; Containing DGOs - ['VI2']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - exit-chamber-dummy-ag
;; Source Path - levels/village2/exit-chamber-dummy-ag.gd
;; Containing DGOs - ['VI2']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - fireboulder-ag
;; Source Path - levels/village2/fireboulder-ag.gd
;; Containing DGOs - ['VI2']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - flutflut-bluehut-ag
;; Source Path - levels/village2/flutflut-bluehut-ag.gd
;; Containing DGOs - ['VI2']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - gambler-ag
;; Source Path - levels/village2/gambler-ag.gd
;; Containing DGOs - ['VI2']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - geologist-ag
;; Source Path - levels/village2/geologist-ag.gd
;; Containing DGOs - ['VI2']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - jaws-ag
;; Source Path - levels/village2/jaws-ag.gd
;; Containing DGOs - ['VI2']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - medres-rolling-ag
;; Source Path - levels/village2/medres-rolling-ag.gd
;; Containing DGOs - ['VI2']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - medres-rolling1-ag
;; Source Path - levels/village2/medres-rolling1-ag.gd
;; Containing DGOs - ['VI2']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - medres-village2-ag
;; Source Path - levels/village2/medres-village2-ag.gd
;; Containing DGOs - ['VI2']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - ogreboss-village2-ag
;; Source Path - levels/village2/ogreboss-village2-ag.gd
;; Containing DGOs - ['VI2']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - pontoonten-ag
;; Source Path - levels/village2/pontoonten-ag.gd
;; Containing DGOs - ['VI2']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - precursor-arm-ag
;; Source Path - levels/village2/precursor-arm-ag.gd
;; Containing DGOs - ['VI2']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - sage-bluehut-ag
;; Source Path - levels/village2/sage-bluehut-ag.gd
;; Containing DGOs - ['VI2']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - sunken-elevator-ag
;; Source Path - levels/village2/sunken-elevator-ag.gd
;; Containing DGOs - ['VI2']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - swamp-blimp-ag
;; Source Path - levels/village2/swamp-blimp-ag.gd
;; Containing DGOs - ['VI2']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - swamp-rope-ag
;; Source Path - levels/village2/swamp-rope-ag.gd
;; Containing DGOs - ['VI2']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - swamp-tetherrock-ag
;; Source Path - levels/village2/swamp-tetherrock-ag.gd
;; Containing DGOs - ['VI2']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - swamp-tetherrock-explode-ag
;; Source Path - levels/village2/swamp-tetherrock-explode-ag.gd
;; Containing DGOs - ['VI2']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - village2cam-ag
;; Source Path - levels/village2/village2cam-ag.gd
;; Containing DGOs - ['VI2']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - warrior-ag
;; Source Path - levels/village2/warrior-ag.gd
;; Containing DGOs - ['VI2']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - water-anim-village2-ag
;; Source Path - levels/village2/water-anim-village2-ag.gd
;; Containing DGOs - ['VI2']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - village2-vis
;; Source Path - levels/village2/village2-vis.gd
;; Containing DGOs - ['VI2']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1208
;; Source Path - levels/village3/tpage-1208.gd
;; Containing DGOs - ['VI3']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1210
;; Source Path - levels/village3/tpage-1210.gd
;; Containing DGOs - ['VI3']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1209
;; Source Path - levels/village3/tpage-1209.gd
;; Containing DGOs - ['VI3']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - tpage-1194
;; Source Path - levels/village3/tpage-1194.gd
;; Containing DGOs - ['VI3']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - assistant-village3-ag
;; Source Path - levels/village3/assistant-village3-ag.gd
;; Containing DGOs - ['VI3']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - cavegem-ag
;; Source Path - levels/village3/cavegem-ag.gd
;; Containing DGOs - ['VI3']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - evilbro-village3-ag
;; Source Path - levels/village3/evilbro-village3-ag.gd
;; Containing DGOs - ['VI3']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - evilsis-village3-ag
;; Source Path - levels/village3/evilsis-village3-ag.gd
;; Containing DGOs - ['VI3']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - gondola-ag
;; Source Path - levels/village3/gondola-ag.gd
;; Containing DGOs - ['VI3']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - gondolacables-ag
;; Source Path - levels/village3/gondolacables-ag.gd
;; Containing DGOs - ['VI3']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - lavaspoutdrip-ag
;; Source Path - levels/village3/lavaspoutdrip-ag.gd
;; Containing DGOs - ['VI3']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - medres-finalboss-ag
;; Source Path - levels/village3/medres-finalboss-ag.gd
;; Containing DGOs - ['VI3']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - medres-ogre-ag
;; Source Path - levels/village3/medres-ogre-ag.gd
;; Containing DGOs - ['VI3']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - medres-ogre2-ag
;; Source Path - levels/village3/medres-ogre2-ag.gd
;; Containing DGOs - ['VI3']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - medres-ogre3-ag
;; Source Path - levels/village3/medres-ogre3-ag.gd
;; Containing DGOs - ['VI3']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - minecartsteel-ag
;; Source Path - levels/village3/minecartsteel-ag.gd
;; Containing DGOs - ['VI3']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - minershort-ag
;; Source Path - levels/village3/minershort-ag.gd
;; Containing DGOs - ['VI3']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - minertall-ag
;; Source Path - levels/village3/minertall-ag.gd
;; Containing DGOs - ['VI3']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - pistons-ag
;; Source Path - levels/village3/pistons-ag.gd
;; Containing DGOs - ['VI3']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - sage-village3-ag
;; Source Path - levels/village3/sage-village3-ag.gd
;; Containing DGOs - ['VI3']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - vil3-bridge-36-ag
;; Source Path - levels/village3/vil3-bridge-36-ag.gd
;; Containing DGOs - ['VI3']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - water-anim-village3-ag
;; Source Path - levels/village3/water-anim-village3-ag.gd
;; Containing DGOs - ['VI3']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - village3-vis
;; Source Path - levels/village3/village3-vis.gd
;; Containing DGOs - ['VI3']
;; Version - 4

;; - Nothing Defined in This File!


;; ----------------------
;; File - lava
;; Source Path - old/lava/lava.gc
;; Containing DGOs - ['WATER-AN']
;; Version - 3

;; - Types

; (deftype lava (water-anim)
;   ()
;   :method-count-assert 28
;   :size-assert         #xd0
;   :flag-assert         #x1c006000d0
;   ;;  not enough basic ops
;   (:methods
;     (dummy-9 () none 9)
;     (dummy-10 () none 10)
;     (dummy-11 () none 11)
;     (dummy-12 () none 12)
;     (dummy-13 () none 13)
;     (dummy-14 () none 14)
;     (dummy-15 () none 15)
;     (dummy-16 () none 16)
;     (dummy-17 () none 17)
;     (dummy-18 () none 18)
;     (dummy-19 () none 19)
;     (dummy-20 () none 20)
;     (dummy-21 () none 21)
;     (dummy-22 () none 22)
;     (dummy-23 () none 23)
;     (dummy-24 () none 24)
;     (dummy-25 () none 25)
;     (dummy-26 () none 26)
;     (dummy-27 () none 27)
;     )

