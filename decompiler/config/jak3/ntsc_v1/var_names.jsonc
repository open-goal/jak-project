{
  "(method 0 inline-array-class)": {
    "args": ["allocation", "type-to-make", "count"]
  },
  "(method 9 inline-array-class)": {
    "args": ["object-to-insert"]
  },
  "(method 3 inline-array-class)": {
    "args": ["idx-to-remove"]
  },
  "identity": {
    "args": ["obj"]
  },
  "1/": {
    "args": ["x"]
  },
  "+": {
    "args": ["a", "b"]
  },
  "-": {
    "args": ["a", "b"]
  },
  "*": {
    "args": ["a", "b"]
  },
  "/": {
    "args": ["a", "b"]
  },
  "ash": {
    "args": ["x", "shift-amount"]
  },
  "mod": {
    "args": ["a", "b"]
  },
  "rem": {
    "args": ["a", "b"]
  },
  "abs": {
    "args": ["x"]
  },
  "min": {
    "args": ["a", "b"]
  },
  "max": {
    "args": ["a", "b"]
  },
  "logior": {
    "args": ["a", "b"]
  },
  "logand": {
    "args": ["a", "b"]
  },
  "lognor": {
    "args": ["a", "b"]
  },
  "logxor": {
    "args": ["a", "b"]
  },
  "lognot": {
    "args": ["x"]
  },
  "basic-type?": {
    "args": ["obj", "typ"]
  },
  "type-type?": {
    "args": ["check-type", "parent-type"]
  },
  "type?": {
    "args": ["obj", "desired-type"]
  },
  "find-parent-method": {
    "args": ["typ", "method-id"]
  },
  "ref&": {
    "args": ["list", "idx"]
  },
  "ref": {
    "args": ["list", "idx"]
  },
  "last": {
    "args": ["list"]
  },
  "member": {
    "args": ["obj-to-find", "list"]
  },
  "nmember": {
    "args": ["obj-to-find", "list"]
  },
  "assoc": {
    "args": ["key", "assoc-list"]
  },
  "assoce": {
    "args": ["key", "assoc-list"]
  },
  "nassoc": {
    "args": ["key", "assoc-list"]
  },
  "nassoce": {
    "args": ["key", "assoc-list"]
  },
  "append!": {
    "args": ["list", "new-obj"]
  },
  "delete!": {
    "args": ["obj", "list"]
  },
  "delete-car!": {
    "args": ["car-to-match", "list"]
  },
  "insert-cons!": {
    "args": ["new-obj", "list"]
  },
  "sort": {
    "args": ["list", "compare-func"]
  },
  "string->symbol-debug": {
    "args": ["str"]
  },
  "symbol->string-debug": {
    "args": ["sym"]
  },
  "symbol->hash": {
    "args": ["sym"]
  },
  "mem-copy!": {
    "args": ["dst", "src", "bytes"]
  },
  "qmem-copy<-!": {
    "args": ["dst", "src", "qwc"]
  },
  "qmem-copy->!": {
    "args": ["dst", "src", "qwc"]
  },
  "qmem-clear!": {
    "args": ["dst", "qwc"]
  },
  "mem-set32!": {
    "args": ["dst", "word-count", "value"]
  },
  "mem-or!": {
    "args": ["dst", "src", "bytes"]
  },
  "fact": {
    "args": ["x"]
  },
  "print": {
    "args": ["obj"]
  },
  "printl": {
    "args": ["obj"]
  },
  "inspect": {
    "args": ["obj"]
  },
  "mem-print": {
    "args": ["ptr", "word-count"]
  },
  "print-tree-bitmask": {
    "args": ["mask", "count"]
  },
  "valid?": {
    "args": [
      "obj",
      "expected-type",
      "err-msg-str",
      "allow-false",
      "err-msg-dest"
    ]
  },
  "(method 0 process-tree)": {
    "args": ["allocation", "type-to-make", "name"]
  },
  "(method 9 process-tree)": {
    "args": ["this", "active-tree", "name", "stack-pointer"]
  },
  "(method 9 process)": {
    "args": ["this", "active-tree", "name", "stack-pointer"]
  },
  "(method 10 process-tree)": {
    "args": ["this", "ent"]
  },
  "(method 0 clock)": {
    "args": ["allocation", "type-to-make", "index"]
  },
  "(method 9 clock)": {
    "args": ["this", "rate"]
  },
  "(method 16 clock)": {
    "args": ["this", "xor-val"]
  },
  "(method 17 clock)": {
    "args": ["this", "xor-val"]
  },
  "(method 18 clock)": {
    "args": ["this", "xor-val"]
  },
  "(method 19 clock)": {
    "args": ["this", "xor-val"]
  },
  "(method 20 clock)": {
    "args": ["this", "xor-val"]
  },
  "(method 21 clock)": {
    "args": ["this", "xor-val"]
  },
  "(method 22 clock)": {
    "args": ["this", "xor-val"]
  },
  "(method 23 clock)": {
    "args": ["this", "xor-val"]
  },
  "(method 9 thread)": {
    "args": ["this", "size-bytes"]
  },
  "(method 0 cpu-thread)": {
    "args": [
      "allocation",
      "type-to-make",
      "proc",
      "name",
      "stack-size",
      "stack-top"
    ]
  },
  "(method 0 dead-pool)": {
    "args": ["allocation", "type-to-make", "num-proc", "process-size", "name"]
  },
  "(method 14 dead-pool)": {
    "args": ["this", "proc-type", "proc-size", "unk"]
  },
  "(method 14 dead-pool-heap)": {
    "args": ["this", "proc-type", "proc-size", "unk"]
  },
  "(method 15 dead-pool)": {
    "args": ["this", "proc"]
  },
  "(method 15 dead-pool-heap)": {
    "args": ["this", "proc"]
  },
  "(method 0 dead-pool-heap)": {
    "args": ["allocation", "type-to-make", "name", "max-num-proc", "heap-size"]
  },
  "(method 16 dead-pool-heap)": {
    "args": ["this", "allocation", "heap-size"]
  },
  "(method 17 dead-pool-heap)": {
    "args": ["this", "compact-count"]
  },
  "(method 18 dead-pool-heap)": {
    "args": ["this", "proc"]
  },
  "(method 19 dead-pool-heap)": {
    "args": ["this", "count"]
  },
  "(method 24 dead-pool-heap)": {
    "args": ["this", "first-rec"]
  },
  "(method 25 dead-pool-heap)": {
    "args": ["this", "rec"]
  },
  "(method 26 dead-pool-heap)": {
    "args": ["this", "first-rec"]
  },
  "(method 27 dead-pool-heap)": {
    "args": ["this", "size"]
  },
  "(method 0 protect-frame)": {
    "args": ["stack-addr", "type-to-make", "exit-func"]
  },
  "(method 0 sql-result)": {
    "args": ["allocation", "type-to-make", "num-elts"]
  },
  "load-package": {
    "args": ["package-name", "heap"]
  },
  "unload-package": {
    "args": ["package-name"]
  },
  "inspect-process-heap": {
    "args": ["proc"]
  },
  "method-state": {
    "args": ["typ", "state-name"]
  },
  "process-by-name": {
    "args": ["process-name", "tree"]
  },
  "process-not-name": {
    "args": ["name", "tree"]
  },
  "process-count": {
    "args": ["tree"]
  },
  "kill-by-name": {
    "args": ["name", "tree"]
  },
  "kill-by-type": {
    "args": ["typ", "tree"]
  },
  "kill-not-name": {
    "args": ["name", "tree"]
  },
  "kill-not-type": {
    "args": ["typ", "tree"]
  },
  "kill-by-type-inherited": {
    "args": ["typ", "tree"]
  },
  "iterate-process-tree": {
    "args": ["tree", "callback", "context"]
  },
  "execute-process-tree": {
    "args": ["tree", "callback", "context"]
  },
  "search-process-tree": {
    "args": ["tree", "callback"]
  },
  "inspect-process-tree": {
    "args": ["tree", "depth", "mask", "detail"]
  },
  "previous-brother": {
    "args": ["tree"]
  },
  "change-parent": {
    "args": ["proc-to-change", "new-parent"]
  },
  "change-to-last-brother": {
    "args": ["proc"]
  },
  "matrix-transpose!": {
    "args": ["dst", "src"]
  },
  "matrix-axis-sin-cos!": {
    "args": ["dst", "axis", "s", "c"]
  },
  "vector-rad<-vector-deg/2!": {
    "args": ["out", "in"]
  },
  "vector-rad<-vector-deg!": {
    "args": ["out", "in"]
  },
  "copy-string<-string": {
    "args": ["dst", "src"]
  },
  "string=": {
    "args": ["a", "b"]
  },
  "string-prefix=": {
    "args": ["prefix", "str"]
  },
  "charp-prefix=": {
    "args": ["prefix", "str"]
  },
  "string-suffix=": {
    "args": ["suffix", "str"]
  },
  "string-position": {
    "args": ["substr", "base-str"]
  },
  "string-charp=": {
    "args": ["a", "b"]
  },
  "name=": {
    "args": ["a", "b"]
  },
  "copyn-string<-charp": {
    "args": ["dst", "src", "num-chars"]
  },
  "string<-charp": {
    "args": ["dst", "src"]
  },
  "charp<-string": {
    "args": ["dst", "src"]
  },
  "copyn-charp<-string": {
    "args": ["dst", "src", "len"]
  },
  "copy-charp<-charp": {
    "args": ["dst", "src"]
  },
  "cat-string<-string": {
    "args": ["dst", "src"]
  },
  "catn-string<-charp": {
    "args": ["dst", "src", "num-chars"]
  },
  "cat-string<-string_to_charp": {
    "args": ["dst", "src", "stop-ptr"]
  },
  "append-character-to-string": {
    "args": ["str", "char"]
  },
  "charp-basename": {
    "args": ["str"]
  },
  "clear": {
    "args": ["str"]
  },
  "string<?": {
    "args": ["a", "b"]
  },
  "string>?": {
    "args": ["a", "b"]
  },
  "string<=?": {
    "args": ["a", "b"]
  },
  "string>=?": {
    "args": ["a", "b"]
  },
  "game-task->string": {
    "args": ["task"],
    "vars": {
      "v1-0": "val"
    }
  },
  "file-info-correct-version?": {
    "args": ["file", "kind", "version-override"],
    "vars": {
      "s5-0": "major",
      "v1-1": "file-kind",
      "s4-0": "type"
    }
  },
  "make-vfile-name": {
    "args": ["kind", "name"]
  },
  "make-file-name": {
    "args": ["kind", "name", "ag-version-override", "arg3"]
  },
  "file-stream-read-string": {
    "args": ["fs", "str"]
  },
  "(method 0 file-stream)": {
    "args": ["obj", "arg1", "file-name", "mode"]
  },
  "service-cpads": {
    "vars": {
      "gp-0": "pads",
      "s5-0": "pad-idx",
      "s4-0": "pad",
      "s3-0": "motor-idx",
      "s3-1": "buttons-pressed",
      "v1-123": "lang",
      "v1-135": "territory"
    }
  },
  "service-keybd": {
    "vars": {
      "gp-0": "keyboard",
      "v1-0": "key-idx"
    }
  },
  "service-mouse": {
    "vars": {
      "gp-0": "mouse"
    }
  },
  "(method 0 dma-buffer)": {
    "args": ["allocation", "type-to-make", "size-bytes"]
  },
  "dma-buffer-inplace-new": {
    "args": ["dma-buff", "size-bytes"]
  },
  "dma-buffer-length": {
    "args": ["dma-buf"]
  },
  "dma-buffer-free": {
    "args": ["dma-buf"]
  },
  "dma-buffer-add-vu-function": {
    "args": ["dma-buf", "vu-func", "flush-path-3"]
  },
  "dma-buffer-send": {
    "args": ["chan", "buf"]
  },
  "dma-buffer-send-chain": {
    "args": ["chan", "buf"]
  },
  "dma-buffer-patch-buckets": {
    "args": ["base", "count"]
  },
  "dma-buffer-add-buckets": {
    "args": ["dma-buf", "bucket-count"]
  },
  "dma-bucket-insert-tag": {
    "args": ["buckets", "bucket", "start-tag", "end-tag-to-patch"]
  },
  "disasm-vif-details": {
    "args": ["fmt-dest", "vif-data", "unpack-cmd", "unpack-count"]
  },
  "disasm-vif-tag": {
    "args": ["tag", "count", "format-dest", "details?"]
  },
  "disasm-dma-tag": {
    "args": ["tag", "format-dest"]
  },
  "disasm-dma-list": {
    "args": ["data", "mode", "verbose", "stream", "expected-size"]
  },
  "gs-set-default-store-image": {
    "args": [
      "packet",
      "source-vram",
      "width",
      "tex-fmt",
      "ssax",
      "ssay",
      "rrw",
      "rrh"
    ]
  },
  "store-image": {
    "args": ["work"]
  },
  "texture-bpp": {
    "args": ["tex-format"]
  },
  "texture-qwc": {
    "args": ["w", "h", "tex-format"]
  },
  "physical-address": {
    "args": ["addr"]
  },
  "dma-buffer-add-ref-texture": {
    "args": ["dma-buf", "tex-data-ptr", "w", "h", "tex-format"]
  },
  "gs-find-block": {
    "args": ["bx", "by", "tex-format"]
  },
  "gs-page-width": {
    "args": ["tex-format"]
  },
  "gs-page-height": {
    "args": ["tex-format"]
  },
  "gs-block-width": {
    "args": ["tex-format"]
  },
  "gs-block-height": {
    "args": ["tex-format"]
  },
  "gs-largest-block": {
    "args": ["w", "h", "tex-format"]
  },
  "gs-blocks-used": {
    "args": ["w", "h", "tex-format"]
  },
  "texture-page-default-allocate": {
    "args": ["pool", "page", "heap", "page-id"]
  },
  "texture-page-common-allocate": {
    "args": ["pool", "page", "heap", "page-id"]
  },
  "texture-page-font-allocate": {
    "args": ["pool", "page", "heap", "page-id"]
  },
  "texture-page-common-boot-allocate": {
    "args": ["pool", "page", "heap", "page-id"]
  },
  "upload-vram-data": {
    "args": ["dma-buf", "dest", "data-ptr", "h", "w"]
  },
  "upload-vram-pages": {
    "args": ["pool", "pool-segment", "page", "mode", "bucket"]
  },
  "update-vram-pages": {
    "args": ["pool", "pool-segment", "page", "mode"]
  },
  "upload-vram-pages-pris": {
    "args": ["pool", "pool-segment", "page", "bucket", "mask"]
  },
  "texture-page-level-allocate": {
    "args": ["pool", "page", "heap", "page-id"]
  },
  "texture-page-size-check": {
    "args": ["pool", "lev", "print?"]
  },
  "upload-textures": {
    "args": ["pool"]
  },
  "texture-relocate": {
    "args": ["dma-buf", "tex", "dest", "tex-format", "clut-dest"]
  },
  "texture-page-login": {
    "args": ["id", "alloc-func", "heap"]
  },
  "lookup-texture-by-id": {
    "args": ["id"]
  },
  "lookup-texture-by-id-fast": {
    "args": ["id"]
  },
  "lookup-texture-by-name": {
    "args": ["tex-name", "page-name", "page-out"]
  },
  "lookup-texture-id-by-name": {
    "args": ["tex-name", "page-name"]
  },
  "lookup-level-texture-by-name": {
    "args": ["tex-name", "lev", "page-out"]
  },
  "lookup-tex-id-from-texture": {
    "args": ["tex"]
  },
  "lookup-level-texture-id-by-name": {
    "args": ["tex-name", "lev", "lev-page-idx"]
  },
  "link-texture-by-id": {
    "args": ["id", "shader"]
  },
  "adgif-shader-update!": {
    "args": ["shader", "tex"]
  },
  "hack-texture": {
    "args": ["tex"]
  },
  "adgif-shader-login": {
    "args": ["shader"]
  },
  "adgif-shader-login-no-remap": {
    "args": ["shader"]
  },
  "adgif-shader-login-fast": {
    "args": ["shader"]
  },
  "adgif-shader-login-no-remap-fast": {
    "args": ["shader"]
  },
  "adgif-shader<-texture-simple!": {
    "args": ["shader", "tex"]
  },
  "set-dirty-mask!": {
    "args": ["lev", "mask-idx", "m0", "m1"]
  },
  "(method 13 texture-pool)": {
    "args": ["this", "lev", "texture-page-count", "texture-ids"]
  },
  "(method 14 texture-pool)": {
    "args": ["pool", "lev", "category", "bucket"]
  },
  "(method 15 texture-pool)": {
    "args": ["this", "size"]
  },
  "(method 16 texture-pool)": {
    "args": ["this", "segment", "size"]
  },
  "(method 17 texture-pool)": {
    "args": ["this", "page"]
  },
  "(method 18 texture-pool)": {
    "args": ["this", "id"]
  },
  "(method 7 texture-page)": {
    "args": ["this", "heap", "filename"]
  },
  "(method 9 texture-page)": {
    "args": ["this", "heap"]
  },
  "(method 11 texture-page)": {
    "args": ["this", "new-dest", "seg-id"]
  },
  "(method 12 texture-page)": {
    "args": ["page", "buf", "mode"]
  },
  "(method 13 texture-page)": {
    "args": ["this", "mode"]
  },
  "merc-fragment-fp-data": {
    "args": ["frag"]
  },
  "show-mc-info": {
    "args": ["buf"],
    "vars": {
      "s5-0": "slot",
      "s4-0": "slot-idx"
    }
  },
  "(method 17 res-lump)": {
    "args": ["this", "tag", "arg2"]
  },
  "(method 20 res-lump)": {
    "args": ["this", "arg1", "tag-pair", "arg3"]
  },
  "(method 9 res-lump)": {
    "args": ["this", "name", "mode", "time"]
  },
  "(method 15 res-lump)": {
    "vars": {
      "s5-0": ["tag-pair", "res-tag-pair"],
      "s2-0": "existing-tag",
      "s3-0": "data-size",
      "v1-25": "resource-mem"
    }
  },
  "(method 10 smush-control)": {
    "vars": {
      "f30-0": "elapsed-time",
      "f0-2": "period"
    }
  },
  "(method 12 smush-control)": {
    "args": [
      "this",
      "amplitude",
      "period",
      "duration",
      "damp-amplitude",
      "damp-period",
      "clock"
    ]
  },
  "(method 11 smush-control)": {
    "vars": {
      "f30-0": "elapsed-time",
      "f0-2": "period"
    }
  },
  "(method 10 collide-mesh-cache)": {
    "args": ["this", "id"]
  },
  "(method 11 touching-prims-entry-pool)": {
    "vars": {
      "v1-0": "prev",
      "a1-0": "current",
      "a2-0": "next"
    }
  },
  "(method 0 prim-strip)": {
    "args": ["allocation", "type-to-make", "num-vertices", "tex-id", "tex-name"]
  },
  "num-func-loop-set!": {
    "args": ["chan", "frame"]
  },
  "num-func-seek!": {
    "args": ["chan", "arg1", "arg2", "arg3"]
  },
  "cspace-by-name-no-fail": {
    "args": ["proc", "name"]
  },
  "cspace-index-by-name-no-fail": {
    "args": ["proc", "name"],
    "vars": {
      "v0-0": "idx"
    }
  },
  "num-func-identity": {
    "args": ["chan", "arg1", "arg2", "arg3"]
  },
  "num-func-loop!": {
    "args": ["chan", "arg1", "arg2", "arg3"]
  },
  "num-func-none": {
    "args": ["chan", "arg1", "arg2", "arg3"]
  },
  "num-func-+!": {
    "args": ["chan", "arg1", "arg2", "arg3"]
  },
  "num-func--!": {
    "args": ["chan", "arg1", "arg2", "arg3"]
  },
  "joint-channel-float-delete!": {
    "args": ["chan"]
  },
  "(method 21 process-focusable)": {
    "vars": {
      "gp-0": "cshape"
    },
    "args": ["this", "mode"]
  },
  "(method 20 process-focusable)": {
    "vars": {
      "v1-0": "mask"
    }
  },
  "(method 10 focus)": {
    "args": ["this", "proc"],
    "vars": {
      "s5-0": "root",
      "v1-2": "cshape"
    }
  },
  "(method 11 focus)": {
    "args": ["this", "cspec"]
  },
  "(method 12 focus)": {
    "args": ["this", "proc"]
  },
  "(method 13 effect-control)": {
    "args": ["this", "offset"]
  },
  "(method 0 effect-control)": {
    "args": ["allocation", "type-to-make", "proc"]
  },
  "(method 0 joint-mod-spinner)": {
    "args": ["allocation", "type-to-make", "proc", "bone-idx", "axis", "rate"]
  },
  "(method 9 joint-mod-base)": {
    "args": ["this", "proc", "bone-idx", "flags"]
  },
  "joint-mod-debug-draw": {
    "args": ["jmod"]
  },
  "joint-mod-spinner-callback": {
    "args": ["bone-cspace", "joint-transform"]
  },
  "joint-mod-rotate-local-callback": {
    "args": ["bone-cspace", "joint-transform"]
  },
  "vector<-cspace2!": {
    "args": ["output-vec", "input-cspace"]
  },
  "joint-mod-rotate-world-callback": {
    "args": ["bone-cspace", "joint-transform"]
  },
  "joint-mod-set-local-callback": {
    "args": ["bone-cspace", "joint-transform"]
  },
  "joint-mod-add-local-callback": {
    "args": ["bone-cspace", "joint-transform"]
  },
  "joint-mod-set-world-callback": {
    "args": ["bone-cspace", "joint-trasnform"]
  },
  "joint-mod-set-world-no-trans-callback": {
    "args": ["bone-cspace", "joint-transform"]
  },
  "joint-mod-blend-local-callback": {
    "args": ["bone-cspace", "joint-transform"]
  },
  "joint-mod-blend-world-callback": {
    "args": ["bone-cspace", "joint-transform"]
  },
  "spawn-projectile": {
    "args": ["proj-type", "params", "parent-proc-tree", "pool"]
  },
  "(top-level-login eye-h)": {
    "vars": {
      "a0-11": "eye-ctrl",
      "v1-5": "ctrl-idx",
      "a1-11": "eye-idx",
      "a2-11": "shader-idx"
    }
  },
  "free-eye-index": {
    "args": ["idx"]
  },
  "(method 0 rpc-buffer)": {
    "args": ["allocation", "type-to-make", "elt-size", "elt-count"]
  },
  "(method 0 rpc-buffer-pair)": {
    "args": ["allocation", "type-to-make", "elt-size", "elt-count", "rpc-port"]
  },
  "(method 9 rpc-buffer-pair)": {
    "args": ["this", "fno", "recv-buffer", "recv-buffer-size"]
  },
  "(method 12 rpc-buffer-pair)": {
    "args": ["this", "print-stall-warning"]
  },
  "(method 0 path-control)": {
    "args": [
      "allocation",
      "type-to-make",
      "proc",
      "lump-name",
      "lump-time",
      "lump-actor",
      "must-exist"
    ]
  },
  "(method 0 curve-control)": {
    "args": [
      "allocation",
      "type-to-make",
      "proc",
      "lump-name",
      "lump-time",
      "lump-actor",
      "must-exist"
    ]
  },
  "point-poly-intersection?": {
    "args": ["mesh", "pt", "num-verts", "verts"]
  },
  "str-load": {
    "args": ["name", "chunk-idx", "dest-addr", "max-len"]
  },
  "str-load-status": {
    "args": ["maxlen-out"]
  },
  "str-play-async": {
    "args": ["name", "id", "chunk-idx", "group"]
  },
  "str-play-stop": {
    "args": ["name", "id"]
  },
  "str-play-queue": {
    "args": ["name0", "name1", "name2", "name3", "ids", "mask"]
  },
  "str-ambient-play": {
    "args": ["name"]
  },
  "str-ambient-stop": {
    "args": ["name"]
  },
  "dgo-load-begin": {
    "args": ["name", "buffer1", "buffer2", "buffer-top"]
  },
  "dgo-load-get-next": {
    "args": ["done-out"]
  },
  "dgo-load-continue": {
    "args": ["buffer1", "buffer2", "buffer-top"]
  },
  "find-temp-buffer": {
    "args": ["size"]
  },
  "dgo-load-link": {
    "args": [
      "object-file",
      "heap",
      "end-of-buffer",
      "print-login",
      "loaded-from-top"
    ]
  },
  "destroy-mem": {
    "args": ["start", "end"]
  },
  "sound-name=": {
    "args": ["a", "b"]
  },
  "str-id-is-playing?": {
    "args": ["id"]
  },
  "current-str-pos": {
    "args": ["id"]
  },
  "current-str-status": {
    "args": ["id"]
  },
  "is-ramdisk-loaded?": {
    "args": ["name"]
  },
  "sound-bank-iop-store": {
    "args": ["name"]
  },
  "sound-bank-iop-free": {
    "args": ["name"]
  },
  "sound-bank-load": {
    "args": ["name", "mode", "priority"]
  },
  "sound-bank-load-from-iop": {
    "args": ["name"]
  },
  "sound-bank-load-from-ee": {
    "args": ["name", "addr"]
  },
  "sound-bank-unload": {
    "args": ["name"]
  },
  "sound-music-load": {
    "args": ["name"]
  },
  "set-language": {
    "args": ["lang"]
  },
  "sound-set-stereo-mode": {
    "args": ["mode"]
  },
  "sound-command->string": {
    "args": ["cmd"]
  },
  "sound-trans-convert": {
    "args": ["int-trans", "meter-trans"]
  },
  "sound-unit-vector-convert": {
    "args": ["int-unit-vector", "float-unit-vector"]
  },
  "sound-angle-convert": {
    "args": ["float-angle"]
  },
  "string->sound-name": {
    "args": ["str"]
  },
  "sound-name->string": {
    "args": ["name"]
  },
  "sound-set-volume": {
    "args": ["group", "vol"]
  },
  "sound-set-reverb": {
    "args": ["reverb", "left", "right", "core"]
  },
  "sound-set-ear-trans": {
    "args": ["ear0", "ear1", "cam", "fwd", "left", "scale"]
  },
  "sound-play-by-name": {
    "args": ["name", "id", "vol", "pitch", "bend", "group", "trans"]
  },
  "sound-play-by-spec": {
    "args": ["spec", "name", "trans"]
  },
  "sound-pause": {
    "args": ["id"]
  },
  "sound-stop": {
    "args": ["id"]
  },
  "sound-continue": {
    "args": ["id"]
  },
  "sound-group-pause": {
    "args": ["group"]
  },
  "sound-group-stop": {
    "args": ["group"]
  },
  "sound-group-continue": {
    "args": ["group"]
  },
  "sound-set-flava": {
    "args": ["flava", "excitement"]
  },
  "sound-set-midi-reg": {
    "args": ["reg", "val"]
  },
  "sound-set-fps": {
    "args": ["fps"]
  },
  "show-iop-info": {
    "args": ["dma"]
  },
  "show-iop-memory": {
    "args": ["dma"]
  },
  "ear-trans": {
    "args": ["mode"]
  },
  "loader-test-command": {
    "args": ["cmd", "param"]
  },
  "doppler-pitch-shift": {
    "args": ["sound-pos", "sound-vel"]
  },
  "(method 0 ambient-sound)": {
    "args": ["allocation", "type-to-make", "spec", "trans", "lump-time"]
  },
  "(method 10 ambient-sound)": {
    "args": ["this", "new-sound"]
  },
  "(method 11 ambient-sound)": {
    "args": ["this", "new-trans"]
  },
  "(method 12 ambient-sound)": {
    "args": ["this", "new-vol"]
  },
  "clear-mood-times": {
    "args": ["mood-ctx"],
    "vars": {
      "v1-0": "idx"
    }
  },
  "(method 13 mood-control)": {
    "args": ["this", "target-interp", "rate-interp", "set-current-interp?"],
    "vars": {
      "f0-1": "clamped-interp"
    }
  },
  "light-slerp": {
    "args": ["light-out", "light-a", "light-b", "alpha"],
    "vars": {
      "s3-0": "clamped-alpha",
      "f0-2": "extra-x-a",
      "f1-2": "extra-x-b"
    }
  },
  "light-group-slerp": {
    "args": ["light-group-out", "light-group-a", "light-group-b", "alpha"],
    "vars": {
      "s2-0": "group-idx"
    }
  },
  "light-group-process!": {
    "args": ["vu-lights", "light-group", "vec1", "vec2"]
  },
  "vu-lights-default!": {
    "args": ["lights"]
  },
  "lookup-light-sphere-by-name": {
    "args": ["name", "hash"],
    "vars": {
      "s4-0": "num-lights",
      "s3-0": "light"
    }
  },
  "light-merge!": {
    "args": ["out", "other"]
  },
  "light-group-scale!": {
    "args": ["group", "backup-ptr", "scale"],
    "vars": {
      "arg1": "other",
      "v1-4": "light-idx"
    }
  },
  "light-group-madd!": {
    "args": ["group", "backup-ptr", "other", "scalar"],
    "vars": {
      "s4-0": "new-light",
      "f30-0": "ambi-scaled",
      "f24-0": "dir0-scaled",
      "f26-0": "dir1-scaled",
      "f28-0": "dir2-scaled"
    }
  },
  "light-group-lerp!": {
    "args": ["group", "backup-ptr", "other", "scalar"]
  },
  "shadow-info-copy!": {
    "args": ["dest", "src"],
    "vars": {
      "v1-0": "light-idx"
    }
  },
  "init-mood-control": {
    "args": ["ctrl"]
  },
  "init-overide-table": {
    "args": ["table"]
  },
  "print-mood-tables": {
    "vars": {
      "v1-2": "data-idx",
      "gp-0": "_color-idx",
      "v1-5": "color-idx",
      "gp-1": "_fog-idx",
      "v1-33": "fog-idx"
    }
  },
  "desaturate-mood-colors": {
    "vars": {
      "a0-8": ["mood-colors", "(inline-array mood-color)"],
      "v1-1": "data-idx",
      "a1-3": "color-data",
      "f1-2": "max-light-color",
      "f0-4": "max-0th-light-color",
      "gp-1": "_color-idx",
      "v1-4": "color-idx"
    }
  },
  "desaturate-mood-fog": {
    "vars": {
      "arg0": "table-ptr",
      "v1-2": "data-idx",
      "a0-5": "fog-data",
      "f0-2": "max-fog-val",
      "gp-1": "_fog-idx",
      "v1-5": "fog-idx"
    }
  },
  "vector-xz-normalize!": {
    "args": ["vec", "arg1"]
  },
  "(method 10 texture-page)": {
    "args": ["this", "num-segments", "upload-offset"],
    "vars": {
      "v1-0": "offset",
      "a2-1": "i"
    }
  },
  "(method 0 align-control)": {
    "vars": {
      "v0-0": ["this", "align-control"]
    }
  }
}
