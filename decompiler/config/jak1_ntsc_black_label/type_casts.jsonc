// This file replaces type_hints.jsonc.
// Functions are identified by their "unique name". This is the name after ".function" in the IR2 file.
// Each cast entry represents an override of a register's type at a certain point the function.
// These modifications do not propagate like normal types, so you may have to apply these modifications
// over a range of indices.

// Entry format: [index, register, override]
// - The index can either be specified as a single integer, or as [min, max].
//      In the case of [min, max], the min index is included, but the max is not. ([1, 4] = 1, 2, 3).
// - The register is a string with the plain PS2 register name.
// - The type is a string with a valid GOAL typespec.
//    It is parsed exactly like the compiler, so you can use compound types.
//    You should only use register types here.

{
  // GCOMMON
  "(method 2 array)": [
    [23, "gp", "(array int32)"],
    [43, "gp", "(array uint32)"],
    [63, "gp", "(array int64)"],
    [83, "gp", "(array uint64)"],
    [102, "gp", "(array int8)"],
    [121, "gp", "(array uint8)"],
    [141, "gp", "(array int16)"],
    [161, "gp", "(array uint16)"],
    [186, "gp", "(array uint128)"],
    [204, "gp", "(array int32)"],
    [223, "gp", "(array float)"],
    [232, "gp", "(array float)"],
    [249, "gp", "(array basic)"],
    [258, "gp", "(array basic)"]
  ],

  "(method 3 array)": [
    [44, "gp", "(array int32)"],
    [62, "gp", "(array uint32)"],
    [80, "gp", "(array int64)"],
    [98, "gp", "(array uint64)"],
    [115, "gp", "(array int8)"],
    [132, "gp", "(array int8)"], // bug in game
    [150, "gp", "(array int16)"],
    [168, "gp", "(array uint16)"],
    [191, "gp", "(array uint128)"],
    [207, "gp", "(array int32)"],
    [226, "gp", "(array float)"],
    [243, "gp", "(array basic)"]
  ],

  // GKERNEL-H
  "(method 2 handle)": [
    [10, "a2", "(pointer process)"],
    [11, "a3", "process"]
  ],

  // GKERNEL
  "(method 0 cpu-thread)": [[[13, 28], "v0", "cpu-thread"]],

  "(method 0 process)": [
    [12, "a0", "int"],
    [[13, 43], "v0", "process"]
  ],

  "(method 0 dead-pool-heap)": [
    [60, "v0", "int"], // a lie, actually the 115 is an align16 constant propagated on addr of heap start.
    //[63, "a0", "pointer"],
    [[61, 73], "v0", "dead-pool-heap"]
  ],

  "(method 21 dead-pool-heap)": [
    [5, "v1", "pointer"],
    [13, "a0", "pointer"],
    [25, "v1", "pointer"]
  ],

  "(method 5 dead-pool-heap)": [
    [3, "v1", "int"],
    [3, "a0", "int"]
  ],

  "(method 0 protect-frame)": [
    [0, "a0", "int"],
    [[1, 8], "v0", "protect-frame"]
  ],

  "(method 10 process)": [[[24, 30], "s4", "protect-frame"]],

  "(method 9 process)": [[43, "s5", "process"]],

  "(method 14 dead-pool)": [
    [[24, 25], "v1", "(pointer process)"],
    [[30, 39], "s4", "(pointer process)"]
  ],

  "inspect-process-heap": [
    [[4, 11], "s5", "basic"],
    [17, "s5", "pointer"]
  ],

  // GSTRING
  "name=": [
    [24, "a1", "symbol"],
    [39, "a0", "symbol"]
  ],

  "string-cat-to-last-char": [
    [3, "s5", "(pointer uint8)"],
    [4, "s5", "string"]
  ],

  // GSTATE
  "enter-state": [[68, "s0", "protect-frame"]],

  // MATH
  "log2": [[3, "v1", "int"]],

  // QUATERNION
  "vector-x-quaternion!": [[10, "v1", "(pointer uint128)"]],
  "vector-y-quaternion!": [[10, "v1", "(pointer uint128)"]],
  "vector-z-quaternion!": [[10, "v1", "(pointer uint128)"]],

  // Matrix
  //"eul->matrix": [[[110, 228], "gp", "(pointer float)"]],

  // DMA
  "dma-send-to-spr": [[[0, 32], "s5", "dma-bank-spr"]],
  "dma-send-to-spr-no-flush": [[[0, 32], "s5", "dma-bank-spr"]],
  "dma-send-from-spr": [[[0, 32], "s5", "dma-bank-spr"]],
  "dma-send-from-spr-no-flush": [[[0, 32], "s5", "dma-bank-spr"]],
  "dma-initialize": [
    [1, "v1", "vif-bank"],
    [8, "v1", "vif-bank"],
    [6, "a0", "vif-bank"],
    [13, "a0", "vif-bank"]
  ],

  "clear-vu1-mem": [[[0, 11], "v1", "(pointer uint32)"]],
  "clear-vu0-mem": [[[0, 11], "v1", "(pointer uint32)"]],

  "dump-vu1-mem": [[[0, 49], "gp", "(pointer uint32)"]],

  "dump-vu1-range": [[[0, 54], "s4", "(pointer uint32)"]],

  "ultimate-memcpy": [
    [[0, 54], "s4", "dma-bank-spr"],
    [[0, 54], "s3", "dma-bank-spr"]
  ],

  // dma-buffer
  "dma-buffer-add-vu-function": [[[9, 33], "t2", "dma-packet"]],

  // dma-bucket
  "dma-buffer-add-buckets": [
    [[1, 4], "v1", "dma-bucket"],
    [5, "v1", "pointer"],
    [[9, 11], "v1", "dma-bucket"],
    [11, "v1", "pointer"]
    //[[6, 15], "v1", "dma-bucket"]
  ],

  "dma-buffer-patch-buckets": [
    [7, "a0", "pointer"],
    [14, "a0", "pointer"],
    [3, "a0", "dma-bucket"],
    [11, "a0", "dma-bucket"],
    [13, "a0", "dma-bucket"],
    [19, "a0", "dma-bucket"]
  ],

  "dma-bucket-insert-tag": [
    [[2, 6], "v1", "dma-bucket"],
    [3, "a0", "dma-bucket"]
  ],

  "disasm-vif-details": [
    [[62, 94], "s3", "(pointer uint32)"],
    [[98, 130], "s3", "(pointer uint16)"],
    [[134, 164], "s3", "(pointer uint32)"],
    [[168, 198], "s3", "(pointer uint16)"],
    [[202, 225], "s3", "(pointer uint16)"]
  ],

  "disasm-vif-tag": [
    [[81, 85], "t1", "vif-stcycl-imm"],
    [242, "a0", "vif-unpack-imm"]
  ],

  "disasm-dma-list": [
    [25, "v1", "dma-tag"],

    [153, "v1", "dma-packet"],
    [189, "v1", "dma-packet"],
    [229, "v1", "dma-packet"],
    [258, "v1", "dma-packet"],
    [302, "v1", "dma-packet"],
    [308, "v1", "dma-packet"],

    //[133, "v1", "(pointer uint64)"],
    [152, "v1", "(pointer uint64)"],

    [167, "v1", "(pointer uint64)"],
    [176, "v1", "(pointer uint64)"],
    [198, "v1", "(pointer uint64)"],
    [207, "v1", "(pointer uint64)"],
    [238, "v1", "(pointer uint64)"],
    [247, "v1", "(pointer uint64)"],
    [282, "v1", "(pointer uint64)"],
    [291, "v1", "(pointer uint64)"],
    [324, "v1", "(pointer uint64)"],
    [334, "v1", "(pointer uint64)"]
  ],

  "default-buffer-init": [
    [[8, 15], "a1", "dma-gif-packet"],
    [[18, 24], "a1", "gs-gif-tag"],
    [[29, 64], "a1", "(pointer uint64)"],
    [[69, 72], "a0", "dma-packet"]
  ],

  // LEVEL
  "lookup-level-info": [
    [3, "a1", "symbol"],
    [4, "a1", "level-load-info"],
    [8, "a1", "level-load-info"],
    [12, "a1", "level-load-info"]
  ],

  // DISPLAY
  "put-display-alpha-env": [[[0, 5], "v1", "gs-bank"]],

  "(method 13 profile-bar)": [
    [[27, 43], "t2", "dma-packet"],
    [[46, 56], "t2", "gs-gif-tag"],
    [[65, 67], "t3", "(pointer gs-prim)"],
    [67, "t3", "(pointer uint64)"],
    [79, "t3", "(pointer gs-xyzf)"],
    [110, "t2", "(pointer gs-xyzf)"]
  ],

  "draw-sprite2d-xy": [
    [[41, 45], "a3", "dma-packet"],
    [[51, 54], "a3", "gs-gif-tag"],
    [59, "a3", "(pointer gs-prim)"],
    [61, "a3", "(pointer gs-rgbaq)"],
    [72, "a3", "(pointer gs-xyzf)"],
    [97, "a3", "(pointer gs-xyzf)"],
    [[106, 117], "v1", "(pointer dma-tag)"],
    [109, "a2", "dma-tag"]
  ],

  "draw-quad2d": [
    [[22, 28], "t1", "dma-packet"],
    [[31, 37], "t1", "gs-gif-tag"],
    [42, "t1", "(pointer gs-prim)"],
    [44, "t1", "(pointer gs-rgbaq)"],
    [52, "t1", "(pointer gs-xyzf)"],
    [54, "t1", "(pointer gs-rgbaq)"],
    [67, "t1", "(pointer gs-xyzf)"],
    [69, "t1", "(pointer gs-rgbaq)"],
    [86, "t1", "(pointer gs-xyzf)"],
    [88, "t1", "(pointer gs-rgbaq)"],
    [110, "t1", "(pointer gs-xyzf)"],
    [111, "t1", "(pointer uint64)"],
    [[120, 131], "v1", "(pointer dma-tag)"],
    [123, "a2", "dma-tag"]
  ],

  "set-display-gs-state": [
    [[3, 10], "t3", "dma-packet"],
    [[13, 19], "t3", "gs-gif-tag"],
    [30, "t3", "(pointer gs-scissor)"],
    [32, "t3", "(pointer gs-reg64)"],
    [33, "t3", "(pointer gs-xy-offset)"],
    [35, "t3", "(pointer gs-reg64)"],
    [46, "t3", "(pointer gs-frame)"],
    [48, "t3", "(pointer gs-reg64)"],
    [50, "t3", "(pointer gs-test)"],
    [52, "t3", "(pointer gs-reg64)"],
    [54, "t3", "(pointer gs-texa)"],
    [56, "t3", "(pointer gs-reg64)"],
    [58, "t3", "(pointer gs-zbuf)"],
    [60, "t3", "(pointer gs-reg64)"],
    [61, "t3", "(pointer uint64)"],
    [63, "t3", "(pointer gs-reg64)"]
  ],

  "set-display-gs-state-offset": [
    [[3, 10], "t5", "dma-packet"],
    [[13, 19], "t5", "gs-gif-tag"],
    [30, "t5", "(pointer gs-scissor)"],
    [32, "t5", "(pointer gs-reg64)"],
    [40, "t5", "(pointer gs-xy-offset)"],
    [42, "t5", "(pointer gs-reg64)"],
    [53, "t5", "(pointer gs-frame)"],
    [55, "t5", "(pointer gs-reg64)"],
    [57, "t5", "(pointer gs-test)"],
    [59, "t5", "(pointer gs-reg64)"],
    [61, "t5", "(pointer gs-texa)"],
    [63, "t5", "(pointer gs-reg64)"],
    [65, "t5", "(pointer gs-zbuf)"],
    [67, "t5", "(pointer gs-reg64)"],
    [68, "t5", "(pointer uint64)"],
    [70, "t5", "(pointer gs-reg64)"]
  ],

  "reset-display-gs-state": [
    [[9, 16], "t0", "dma-packet"],
    [[19, 25], "t0", "gs-gif-tag"],
    [34, "a3", "(pointer gs-scissor)"],
    [36, "a3", "(pointer gs-reg64)"],
    [44, "a3", "(pointer gs-xy-offset)"],
    [46, "a3", "(pointer gs-reg64)"],
    [51, "a3", "(pointer gs-frame)"],
    [53, "a3", "(pointer gs-reg64)"],

    [55, "a3", "(pointer gs-test)"],
    [57, "a3", "(pointer gs-reg64)"],
    [60, "a3", "(pointer gs-texa)"],
    [62, "a3", "(pointer gs-reg64)"],
    [64, "a3", "(pointer gs-zbuf)"],
    [66, "a3", "(pointer gs-reg64)"],
    [67, "a3", "(pointer uint64)"],
    [69, "a3", "(pointer gs-reg64)"]
  ],

  "(method 9 connection)": [[8, "a0", "pointer"]],

  "(method 10 connection)": [[8, "a0", "pointer"]],

  "(method 0 engine)": [[39, "v0", "pointer"]],

  "(method 12 engine)": [[[5, 16], "s4", "connection"]],

  "(method 13 engine)": [[[5, 24], "s4", "connection"]],

  "(method 15 engine)": [[[0, 36], "v1", "connection"]],

  "(method 19 engine)": [[8, "a0", "connection"]],

  "(method 20 engine)": [[8, "a0", "connection"]],

  "gs-set-default-store-image": [
    [9, "t4", "gif-tag64"],
    [9, "v1", "gif-tag-regs"]
  ],

  "dma-buffer-add-ref-texture": [
    [[25, 29], "a3", "dma-packet"],
    [[32, 44], "a3", "gs-gif-tag"],
    [[47, 62], "a2", "dma-packet"]
  ],

  "upload-vram-data": [
    [[9, 15], "a0", "dma-packet"],
    [[18, 24], "a0", "gs-gif-tag"],
    [33, "a0", "(pointer gs-bitbltbuf)"],
    [35, "a0", "(pointer gs-reg64)"],
    [36, "a0", "(pointer gs-trxpos)"],
    [38, "a0", "(pointer gs-reg64)"],
    [42, "a0", "(pointer gs-trxreg)"],
    [44, "a0", "(pointer gs-reg64)"],
    [45, "a0", "(pointer gs-trxdir)"],
    [47, "a0", "(pointer gs-reg64)"]
  ],

  "texture-page-dir-inspect": [[[133, 136], "v1", "adgif-shader"]],

  "upload-vram-pages": [
    [[135, 140], "a0", "dma-packet"],
    [[144, 149], "a0", "gs-gif-tag"],
    [[155, 157], "a0", "(pointer gs-reg64)"],
    [154, "a0", "(pointer uint64)"],
    [[162, 165], "v1", "dma-packet"]
  ],

  "upload-vram-pages-pris": [
    [[128, 134], "a0", "dma-packet"],
    [[137, 143], "a0", "gs-gif-tag"],
    [148, "a0", "(pointer uint64)"],
    [150, "a0", "(pointer gs-reg64)"],
    [[154, 159], "v1", "dma-packet"]
  ],

  // RES
  "(method 13 res-lump)": [[6, "a0", "res-tag"]],
  "(method 14 res-lump)": [[2, "a0", "res-tag"]],

  // SHADOW-CPU-H
  "(method 10 shadow-control)": [[1, "v1", "int"]],

  // FACT-H
  "(method 0 fact-info-enemy)": [[3, "v0", "fact-info-enemy"]],
  "(method 0 fact-info-target)": [[3, "v0", "fact-info-target"]],

  "(method 0 align-control)": [
    [[8, 13], "t9", "(function object object)"],
    [14, "v0", "align-control"]
  ]
}
