{
  ////////////////////////////
  // HACKS and ASM FUNCTIONS
  ////////////////////////////

  "types_with_bad_inspect_methods": [
    "game-task-event",
    "game-task-control",
    "predator-edge"
  ],

  "no_type_analysis_functions_by_name": [],

  // this limits the number of cases in a cond.  The first argument is the name of the function.
  // the second argument is the name of the first condition in the cond. Use print_cfg to find it out.
  // The third argument is the number of cases. If you set it too small it may fail to build the CFG.
  "cond_with_else_max_lengths": [

  ],

  // if a cond with an else case is being used a value in a place where it looks wrong
  // you can add the function name to this list and it will more aggressively reject this rewrite.
  "aggressively_reject_cond_to_value_rewrite": [

  ],

  // this provides a hint to the decompiler that these functions will have a lot of inline assembly.
  // currently it just leaves pcpyld as an asm op.
  "hint_inline_assembly_functions": [],

  "asm_functions_by_name": [
    // checking boxed type is different now - these make the cfg stuff sad
    "type?", "print", "printl", "inspect", "valid?", "name=", "(method 8 res-lump)", "joint-control-remap!", "(method 21 game-info)", "(method 12 level)",
    "bg", "(anon-function 2 cam-combiner)", "cspace-inspect-tree", "command-get-process", "command-get-trans", "(method 10 script-context)",
    "(method 11 script-context)", "(method 9 script-context)", "(anon-function 64 script)", "(anon-function 61 script)", "(anon-function 60 script)",
    "(anon-function 54 script)", "(anon-function 52 script)", "(anon-function 49 script)", "(anon-function 33 script)",  "debug-menu-func-decode",
    "scene-player-init", "(method 77 spyder)", "(method 77 flamer)", "(method 77 grenadier)", "(method 224 bot)", "(method 77 rapid-gunner)",
    // until loop without nop:
    "rand-vu-int-count-excluding", "rand-vu-int-range-exclude", "(method 9 history)", "history-print", "history-draw",
    "(method 9 sparticle-launcher)", "(method 18 tracking-spline)", "cam-string-find-position-rel!", "cam-layout-entity-volume-info-create",
    "process-drawable-shock-skel-effect", "target-history-print", "display-list-control", "anim-test-anim-list-handler",
    "anim-test-sequence-list-handler", "anim-tester-get-playing-item", "(method 9 mysql-nav-graph)", "(method 58 nav-graph-editor)",
    "(method 120 enemy)", "start-pilot-recorder", "(anon-function 10 pilot-recorder)", "(method 0 hover-nav-control)",
    "(method 24 nav-network)", "(method 11 predator-manager)", "(method 9 bot-speech-list)", "(method 9 bot-speech-list-shuffle)",
    "(anon-function 10 sig-recorder)", "(method 14 trail-graph)", "(method 12 trail-graph)", "(method 11 trail-graph)",
    // actual asm
    "symlink2", "blerc-a-fragment", "blerc-execute", "foreground-check-longest-edge-asm", "generic-light-proc",
    "shadow-add-single-edges","shadow-add-facing-single-tris", "shadow-add-double-tris", "shadow-add-double-edges",
    "(method 12 collide-mesh)", "(method 17 collide-edge-work)", "(method 42 collide-shape)", "(method 12 collide-shape-prim-sphere)",
    "(method 12 collide-shape-prim-mesh)", "(method 18 collide-shape-prim-mesh)", "(method 10 collide-cache-prim)",
    "(method 17 collide-cache)", "(method 16 ocean)",

    // unknown bug
    "joint-mod-polar-look-at-guts", "(method 13 external-art-control)", "update-mood-copy-ctywide", "update-mood-copy-stadium",
    "update-mood-drillb", "reset-target-tracking", "(anon-function 1 target)", "find-nearest-entity", "target-land-effect",
    "(method 12 effect-control)", "(method 11 effect-control)", "(method 10 effect-control)",
    "(anon-function 2 scene)", "progress-trans", "(method 10 bigmap)", "(method 9 editable-region)", "(method 57 enemy)",
    "(anon-function 10 meet-brutter)", "(method 154 vehicle-racer)", "(method 188 predator)", "(anon-function 13 sig0-course)",
    "(method 228 hal-sewer)", "(method 154 vehicle-city-racer)", "(method 53 squid)", "(anon-function 11 fort-floor-spike)",
    "(method 29 gun-dummy)", "vehicle-explode-post", "(method 158 vehicle-guard)", "(method 207 metalhead-predator)",
    "(anon-function 4 gun-states)", "(anon-function 28 grenadier)", "(anon-function 24 grenadier)"
  ],

  // these functions use pairs and the decompiler
  // will be less picky about types related to pairs.
  "pair_functions_by_name": [

  ],

  // If format is used with the wrong number of arguments,
  // it will often mess up the decompilation, as the decompiler assumes
  // that they used the correct number.  This will override the decompiler's
  // automatic detection.
  "bad_format_strings": {

  },

  "blocks_ending_in_asm_branch": {

  },

  // Sometimes the game might use format strings that are fetched dynamically,
  // for example using the game text lookup method
  // Add information about those format instructions here.
  // e.g. "function-name":[[op, argc], [op, argc], ...]
  // where "op" is the op number for the call to format.
  "dynamic_format_arg_counts": {

  },

  "mips2c_functions_by_name": [


  ],

  "mips2c_jump_table_functions": {

  },

  // there are some missing textures. I don't know what the game actually does here.
  // the format for entries is [level, tpage, index]
  "missing_textures": [],

  // some object files have garbage pad data at the end which makes the decompiler
  // assume they must be different files, such as the art group for orb-cache-top.
  // this just suppresses a message.
  "expected_merged_objs": [

  ]
}
